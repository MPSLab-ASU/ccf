// This file is distributed under the University of Illinois Open Source License.
// See LICENSE.TXT for details.
// RUN: c_compiler -c -o %t1.o -I "common" "common/testsuite.c"
// RUN: cxx_compiler cxx_rtti -c %s -I "common" -o %t2.o
// RUN: linker -o %t2%exeext  %t1.o %t2.o
// RUN: runtool %t2%exeext | checker "TEST PASSED"
#include "testsuite.h"
#ifdef __cplusplus
struct __attribute__((packed)) aBFu32ll_BFu16s_B { unsigned long long v1:32; unsigned short v2:16; bool v3; };
struct __attribute__((packed)) aBFu32ll_BFu17i_B { unsigned long long v1:32; unsigned int v2:17; bool v3; };
struct __attribute__((packed)) aBFu32ll_BFu17ll_B { unsigned long long v1:32; unsigned long long v2:17; bool v3; };
struct __attribute__((packed)) aBFu32ll_BFu1c_B { unsigned long long v1:32; unsigned char v2:1; bool v3; };
struct __attribute__((packed)) aBFu32ll_BFu1i_B { unsigned long long v1:32; unsigned int v2:1; bool v3; };
struct __attribute__((packed)) aBFu32ll_BFu1ll_B { unsigned long long v1:32; unsigned long long v2:1; bool v3; };
struct __attribute__((packed)) aBFu32ll_BFu1s_B { unsigned long long v1:32; unsigned short v2:1; bool v3; };
struct __attribute__((packed)) aBFu32ll_BFu31i_B { unsigned long long v1:32; unsigned int v2:31; bool v3; };
struct __attribute__((packed)) aBFu32ll_BFu31ll_B { unsigned long long v1:32; unsigned long long v2:31; bool v3; };
struct __attribute__((packed)) aBFu32ll_BFu32i_B { unsigned long long v1:32; unsigned int v2:32; bool v3; };
struct __attribute__((packed)) aBFu32ll_BFu32ll_B { unsigned long long v1:32; unsigned long long v2:32; bool v3; };
struct __attribute__((packed)) aBFu32ll_BFu33_B { unsigned long long v1:32; unsigned long long v2:33; bool v3; };
struct __attribute__((packed)) aBFu32ll_BFu7c_B { unsigned long long v1:32; unsigned char v2:7; bool v3; };
struct __attribute__((packed)) aBFu32ll_BFu7i_B { unsigned long long v1:32; unsigned int v2:7; bool v3; };
struct __attribute__((packed)) aBFu32ll_BFu7ll_B { unsigned long long v1:32; unsigned long long v2:7; bool v3; };
struct __attribute__((packed)) aBFu32ll_BFu7s_B { unsigned long long v1:32; unsigned short v2:7; bool v3; };
struct __attribute__((packed)) aBFu32ll_BFu8c_B { unsigned long long v1:32; unsigned char v2:8; bool v3; };
struct __attribute__((packed)) aBFu32ll_BFu8i_B { unsigned long long v1:32; unsigned int v2:8; bool v3; };
struct __attribute__((packed)) aBFu32ll_BFu8ll_B { unsigned long long v1:32; unsigned long long v2:8; bool v3; };
struct __attribute__((packed)) aBFu32ll_BFu8s_B { unsigned long long v1:32; unsigned short v2:8; bool v3; };
struct __attribute__((packed)) aBFu32ll_BFu9i_B { unsigned long long v1:32; unsigned int v2:9; bool v3; };
struct __attribute__((packed)) aBFu32ll_BFu9ll_B { unsigned long long v1:32; unsigned long long v2:9; bool v3; };
struct __attribute__((packed)) aBFu32ll_BFu9s_B { unsigned long long v1:32; unsigned short v2:9; bool v3; };
struct __attribute__((packed)) aBFu32ll_C_B { unsigned long long v1:32; char v2; bool v3; };
struct __attribute__((packed)) aBFu32ll_D_B { unsigned long long v1:32; double v2; bool v3; };
struct __attribute__((packed)) aBFu32ll_F_B { unsigned long long v1:32; float v2; bool v3; };
struct __attribute__((packed)) aBFu32ll_I_B { unsigned long long v1:32; int v2; bool v3; };
struct __attribute__((packed)) aBFu32ll_Ip_B { unsigned long long v1:32; int * v2; bool v3; };
struct __attribute__((packed)) aBFu32ll_L_B { unsigned long long v1:32; long long v2; bool v3; };
struct __attribute__((packed)) aBFu32ll_S_B { unsigned long long v1:32; short v2; bool v3; };
struct __attribute__((packed)) aBFu32ll_Uc_B { unsigned long long v1:32; unsigned char v2; bool v3; };
struct __attribute__((packed)) aBFu32ll_Ui_B { unsigned long long v1:32; unsigned int v2; bool v3; };
struct __attribute__((packed)) aBFu32ll_Ul_B { unsigned long long v1:32; unsigned long long v2; bool v3; };
struct __attribute__((packed)) aBFu32ll_Us_B { unsigned long long v1:32; unsigned short v2; bool v3; };
struct __attribute__((packed)) aBFu32ll_Vp_B { unsigned long long v1:32; void * v2; bool v3; };
struct __attribute__((packed)) aBFu33_B { unsigned long long v1:33; bool v2; };
struct __attribute__((packed)) aBFu33_B_B { unsigned long long v1:33; bool v2; bool v3; };
struct __attribute__((packed)) aBFu33_B_BFu15i { unsigned long long v1:33; bool v2; unsigned int v3:15; };
struct __attribute__((packed)) aBFu33_B_BFu15ll { unsigned long long v1:33; bool v2; unsigned long long v3:15; };
struct __attribute__((packed)) aBFu33_B_BFu15s { unsigned long long v1:33; bool v2; unsigned short v3:15; };
struct __attribute__((packed)) aBFu33_B_BFu16i { unsigned long long v1:33; bool v2; unsigned int v3:16; };
struct __attribute__((packed)) aBFu33_B_BFu16ll { unsigned long long v1:33; bool v2; unsigned long long v3:16; };
struct __attribute__((packed)) aBFu33_B_BFu16s { unsigned long long v1:33; bool v2; unsigned short v3:16; };
struct __attribute__((packed)) aBFu33_B_BFu17i { unsigned long long v1:33; bool v2; unsigned int v3:17; };
struct __attribute__((packed)) aBFu33_B_BFu17ll { unsigned long long v1:33; bool v2; unsigned long long v3:17; };
struct __attribute__((packed)) aBFu33_B_BFu1c { unsigned long long v1:33; bool v2; unsigned char v3:1; };
struct __attribute__((packed)) aBFu33_B_BFu1i { unsigned long long v1:33; bool v2; unsigned int v3:1; };
struct __attribute__((packed)) aBFu33_B_BFu1ll { unsigned long long v1:33; bool v2; unsigned long long v3:1; };
struct __attribute__((packed)) aBFu33_B_BFu1s { unsigned long long v1:33; bool v2; unsigned short v3:1; };
struct __attribute__((packed)) aBFu33_B_BFu31i { unsigned long long v1:33; bool v2; unsigned int v3:31; };
struct __attribute__((packed)) aBFu33_B_BFu31ll { unsigned long long v1:33; bool v2; unsigned long long v3:31; };
struct __attribute__((packed)) aBFu33_B_BFu32i { unsigned long long v1:33; bool v2; unsigned int v3:32; };
struct __attribute__((packed)) aBFu33_B_BFu32ll { unsigned long long v1:33; bool v2; unsigned long long v3:32; };
struct __attribute__((packed)) aBFu33_B_BFu33 { unsigned long long v1:33; bool v2; unsigned long long v3:33; };
struct __attribute__((packed)) aBFu33_B_BFu7c { unsigned long long v1:33; bool v2; unsigned char v3:7; };
struct __attribute__((packed)) aBFu33_B_BFu7i { unsigned long long v1:33; bool v2; unsigned int v3:7; };
struct __attribute__((packed)) aBFu33_B_BFu7ll { unsigned long long v1:33; bool v2; unsigned long long v3:7; };
struct __attribute__((packed)) aBFu33_B_BFu7s { unsigned long long v1:33; bool v2; unsigned short v3:7; };
struct __attribute__((packed)) aBFu33_B_BFu8c { unsigned long long v1:33; bool v2; unsigned char v3:8; };
struct __attribute__((packed)) aBFu33_B_BFu8i { unsigned long long v1:33; bool v2; unsigned int v3:8; };
struct __attribute__((packed)) aBFu33_B_BFu8ll { unsigned long long v1:33; bool v2; unsigned long long v3:8; };
struct __attribute__((packed)) aBFu33_B_BFu8s { unsigned long long v1:33; bool v2; unsigned short v3:8; };
struct __attribute__((packed)) aBFu33_B_BFu9i { unsigned long long v1:33; bool v2; unsigned int v3:9; };
struct __attribute__((packed)) aBFu33_B_BFu9ll { unsigned long long v1:33; bool v2; unsigned long long v3:9; };
struct __attribute__((packed)) aBFu33_B_BFu9s { unsigned long long v1:33; bool v2; unsigned short v3:9; };
struct __attribute__((packed)) aBFu33_B_C { unsigned long long v1:33; bool v2; char v3; };
struct __attribute__((packed)) aBFu33_B_D { unsigned long long v1:33; bool v2; double v3; };
struct __attribute__((packed)) aBFu33_B_F { unsigned long long v1:33; bool v2; float v3; };
struct __attribute__((packed)) aBFu33_B_I { unsigned long long v1:33; bool v2; int v3; };
struct __attribute__((packed)) aBFu33_B_Ip { unsigned long long v1:33; bool v2; int * v3; };
struct __attribute__((packed)) aBFu33_B_L { unsigned long long v1:33; bool v2; long long v3; };
struct __attribute__((packed)) aBFu33_B_S { unsigned long long v1:33; bool v2; short v3; };
struct __attribute__((packed)) aBFu33_B_Uc { unsigned long long v1:33; bool v2; unsigned char v3; };
struct __attribute__((packed)) aBFu33_B_Ui { unsigned long long v1:33; bool v2; unsigned int v3; };
struct __attribute__((packed)) aBFu33_B_Ul { unsigned long long v1:33; bool v2; unsigned long long v3; };
struct __attribute__((packed)) aBFu33_B_Us { unsigned long long v1:33; bool v2; unsigned short v3; };
struct __attribute__((packed)) aBFu33_B_Vp { unsigned long long v1:33; bool v2; void * v3; };
struct __attribute__((packed)) aBFu33_BFu15i_B { unsigned long long v1:33; unsigned int v2:15; bool v3; };
struct __attribute__((packed)) aBFu33_BFu15ll_B { unsigned long long v1:33; unsigned long long v2:15; bool v3; };
struct __attribute__((packed)) aBFu33_BFu15s_B { unsigned long long v1:33; unsigned short v2:15; bool v3; };
struct __attribute__((packed)) aBFu33_BFu16i_B { unsigned long long v1:33; unsigned int v2:16; bool v3; };
struct __attribute__((packed)) aBFu33_BFu16ll_B { unsigned long long v1:33; unsigned long long v2:16; bool v3; };
struct __attribute__((packed)) aBFu33_BFu16s_B { unsigned long long v1:33; unsigned short v2:16; bool v3; };
struct __attribute__((packed)) aBFu33_BFu17i_B { unsigned long long v1:33; unsigned int v2:17; bool v3; };
struct __attribute__((packed)) aBFu33_BFu17ll_B { unsigned long long v1:33; unsigned long long v2:17; bool v3; };
struct __attribute__((packed)) aBFu33_BFu1c_B { unsigned long long v1:33; unsigned char v2:1; bool v3; };
struct __attribute__((packed)) aBFu33_BFu1i_B { unsigned long long v1:33; unsigned int v2:1; bool v3; };
struct __attribute__((packed)) aBFu33_BFu1ll_B { unsigned long long v1:33; unsigned long long v2:1; bool v3; };
struct __attribute__((packed)) aBFu33_BFu1s_B { unsigned long long v1:33; unsigned short v2:1; bool v3; };
struct __attribute__((packed)) aBFu33_BFu31i_B { unsigned long long v1:33; unsigned int v2:31; bool v3; };
struct __attribute__((packed)) aBFu33_BFu31ll_B { unsigned long long v1:33; unsigned long long v2:31; bool v3; };
struct __attribute__((packed)) aBFu33_BFu32i_B { unsigned long long v1:33; unsigned int v2:32; bool v3; };
struct __attribute__((packed)) aBFu33_BFu32ll_B { unsigned long long v1:33; unsigned long long v2:32; bool v3; };
struct __attribute__((packed)) aBFu33_BFu33_B { unsigned long long v1:33; unsigned long long v2:33; bool v3; };
struct __attribute__((packed)) aBFu33_BFu7c_B { unsigned long long v1:33; unsigned char v2:7; bool v3; };
struct __attribute__((packed)) aBFu33_BFu7i_B { unsigned long long v1:33; unsigned int v2:7; bool v3; };
struct __attribute__((packed)) aBFu33_BFu7ll_B { unsigned long long v1:33; unsigned long long v2:7; bool v3; };
struct __attribute__((packed)) aBFu33_BFu7s_B { unsigned long long v1:33; unsigned short v2:7; bool v3; };
struct __attribute__((packed)) aBFu33_BFu8c_B { unsigned long long v1:33; unsigned char v2:8; bool v3; };
struct __attribute__((packed)) aBFu33_BFu8i_B { unsigned long long v1:33; unsigned int v2:8; bool v3; };
struct __attribute__((packed)) aBFu33_BFu8ll_B { unsigned long long v1:33; unsigned long long v2:8; bool v3; };
struct __attribute__((packed)) aBFu33_BFu8s_B { unsigned long long v1:33; unsigned short v2:8; bool v3; };
struct __attribute__((packed)) aBFu33_BFu9i_B { unsigned long long v1:33; unsigned int v2:9; bool v3; };
struct __attribute__((packed)) aBFu33_BFu9ll_B { unsigned long long v1:33; unsigned long long v2:9; bool v3; };
struct __attribute__((packed)) aBFu33_BFu9s_B { unsigned long long v1:33; unsigned short v2:9; bool v3; };
struct __attribute__((packed)) aBFu33_C_B { unsigned long long v1:33; char v2; bool v3; };
struct __attribute__((packed)) aBFu33_D_B { unsigned long long v1:33; double v2; bool v3; };
struct __attribute__((packed)) aBFu33_F_B { unsigned long long v1:33; float v2; bool v3; };
struct __attribute__((packed)) aBFu33_I_B { unsigned long long v1:33; int v2; bool v3; };
struct __attribute__((packed)) aBFu33_Ip_B { unsigned long long v1:33; int * v2; bool v3; };
struct __attribute__((packed)) aBFu33_L_B { unsigned long long v1:33; long long v2; bool v3; };
struct __attribute__((packed)) aBFu33_S_B { unsigned long long v1:33; short v2; bool v3; };
struct __attribute__((packed)) aBFu33_Uc_B { unsigned long long v1:33; unsigned char v2; bool v3; };
struct __attribute__((packed)) aBFu33_Ui_B { unsigned long long v1:33; unsigned int v2; bool v3; };
struct __attribute__((packed)) aBFu33_Ul_B { unsigned long long v1:33; unsigned long long v2; bool v3; };
struct __attribute__((packed)) aBFu33_Us_B { unsigned long long v1:33; unsigned short v2; bool v3; };
struct __attribute__((packed)) aBFu33_Vp_B { unsigned long long v1:33; void * v2; bool v3; };
struct __attribute__((packed)) aBFu7c_B { unsigned char v1:7; bool v2; };
struct __attribute__((packed)) aBFu7c_B_B { unsigned char v1:7; bool v2; bool v3; };
struct __attribute__((packed)) aBFu7c_B_BFu15i { unsigned char v1:7; bool v2; unsigned int v3:15; };
struct __attribute__((packed)) aBFu7c_B_BFu15ll { unsigned char v1:7; bool v2; unsigned long long v3:15; };
struct __attribute__((packed)) aBFu7c_B_BFu15s { unsigned char v1:7; bool v2; unsigned short v3:15; };
struct __attribute__((packed)) aBFu7c_B_BFu16i { unsigned char v1:7; bool v2; unsigned int v3:16; };
struct __attribute__((packed)) aBFu7c_B_BFu16ll { unsigned char v1:7; bool v2; unsigned long long v3:16; };
struct __attribute__((packed)) aBFu7c_B_BFu16s { unsigned char v1:7; bool v2; unsigned short v3:16; };
struct __attribute__((packed)) aBFu7c_B_BFu17i { unsigned char v1:7; bool v2; unsigned int v3:17; };
struct __attribute__((packed)) aBFu7c_B_BFu17ll { unsigned char v1:7; bool v2; unsigned long long v3:17; };
struct __attribute__((packed)) aBFu7c_B_BFu1c { unsigned char v1:7; bool v2; unsigned char v3:1; };
struct __attribute__((packed)) aBFu7c_B_BFu1i { unsigned char v1:7; bool v2; unsigned int v3:1; };
struct __attribute__((packed)) aBFu7c_B_BFu1ll { unsigned char v1:7; bool v2; unsigned long long v3:1; };
struct __attribute__((packed)) aBFu7c_B_BFu1s { unsigned char v1:7; bool v2; unsigned short v3:1; };
struct __attribute__((packed)) aBFu7c_B_BFu31i { unsigned char v1:7; bool v2; unsigned int v3:31; };
struct __attribute__((packed)) aBFu7c_B_BFu31ll { unsigned char v1:7; bool v2; unsigned long long v3:31; };
struct __attribute__((packed)) aBFu7c_B_BFu32i { unsigned char v1:7; bool v2; unsigned int v3:32; };
struct __attribute__((packed)) aBFu7c_B_BFu32ll { unsigned char v1:7; bool v2; unsigned long long v3:32; };
struct __attribute__((packed)) aBFu7c_B_BFu33 { unsigned char v1:7; bool v2; unsigned long long v3:33; };
struct __attribute__((packed)) aBFu7c_B_BFu7c { unsigned char v1:7; bool v2; unsigned char v3:7; };
struct __attribute__((packed)) aBFu7c_B_BFu7i { unsigned char v1:7; bool v2; unsigned int v3:7; };
struct __attribute__((packed)) aBFu7c_B_BFu7ll { unsigned char v1:7; bool v2; unsigned long long v3:7; };
struct __attribute__((packed)) aBFu7c_B_BFu7s { unsigned char v1:7; bool v2; unsigned short v3:7; };
struct __attribute__((packed)) aBFu7c_B_BFu8c { unsigned char v1:7; bool v2; unsigned char v3:8; };
struct __attribute__((packed)) aBFu7c_B_BFu8i { unsigned char v1:7; bool v2; unsigned int v3:8; };
struct __attribute__((packed)) aBFu7c_B_BFu8ll { unsigned char v1:7; bool v2; unsigned long long v3:8; };
struct __attribute__((packed)) aBFu7c_B_BFu8s { unsigned char v1:7; bool v2; unsigned short v3:8; };
struct __attribute__((packed)) aBFu7c_B_BFu9i { unsigned char v1:7; bool v2; unsigned int v3:9; };
struct __attribute__((packed)) aBFu7c_B_BFu9ll { unsigned char v1:7; bool v2; unsigned long long v3:9; };
struct __attribute__((packed)) aBFu7c_B_BFu9s { unsigned char v1:7; bool v2; unsigned short v3:9; };
struct __attribute__((packed)) aBFu7c_B_C { unsigned char v1:7; bool v2; char v3; };
struct __attribute__((packed)) aBFu7c_B_D { unsigned char v1:7; bool v2; double v3; };
struct __attribute__((packed)) aBFu7c_B_F { unsigned char v1:7; bool v2; float v3; };
struct __attribute__((packed)) aBFu7c_B_I { unsigned char v1:7; bool v2; int v3; };
struct __attribute__((packed)) aBFu7c_B_Ip { unsigned char v1:7; bool v2; int * v3; };
struct __attribute__((packed)) aBFu7c_B_L { unsigned char v1:7; bool v2; long long v3; };
struct __attribute__((packed)) aBFu7c_B_S { unsigned char v1:7; bool v2; short v3; };
struct __attribute__((packed)) aBFu7c_B_Uc { unsigned char v1:7; bool v2; unsigned char v3; };
struct __attribute__((packed)) aBFu7c_B_Ui { unsigned char v1:7; bool v2; unsigned int v3; };
struct __attribute__((packed)) aBFu7c_B_Ul { unsigned char v1:7; bool v2; unsigned long long v3; };
struct __attribute__((packed)) aBFu7c_B_Us { unsigned char v1:7; bool v2; unsigned short v3; };
struct __attribute__((packed)) aBFu7c_B_Vp { unsigned char v1:7; bool v2; void * v3; };
struct __attribute__((packed)) aBFu7c_BFu15i_B { unsigned char v1:7; unsigned int v2:15; bool v3; };
struct __attribute__((packed)) aBFu7c_BFu15ll_B { unsigned char v1:7; unsigned long long v2:15; bool v3; };
struct __attribute__((packed)) aBFu7c_BFu15s_B { unsigned char v1:7; unsigned short v2:15; bool v3; };
struct __attribute__((packed)) aBFu7c_BFu16i_B { unsigned char v1:7; unsigned int v2:16; bool v3; };
struct __attribute__((packed)) aBFu7c_BFu16ll_B { unsigned char v1:7; unsigned long long v2:16; bool v3; };
struct __attribute__((packed)) aBFu7c_BFu16s_B { unsigned char v1:7; unsigned short v2:16; bool v3; };
struct __attribute__((packed)) aBFu7c_BFu17i_B { unsigned char v1:7; unsigned int v2:17; bool v3; };
struct __attribute__((packed)) aBFu7c_BFu17ll_B { unsigned char v1:7; unsigned long long v2:17; bool v3; };
struct __attribute__((packed)) aBFu7c_BFu1c_B { unsigned char v1:7; unsigned char v2:1; bool v3; };
struct __attribute__((packed)) aBFu7c_BFu1i_B { unsigned char v1:7; unsigned int v2:1; bool v3; };
struct __attribute__((packed)) aBFu7c_BFu1ll_B { unsigned char v1:7; unsigned long long v2:1; bool v3; };
struct __attribute__((packed)) aBFu7c_BFu1s_B { unsigned char v1:7; unsigned short v2:1; bool v3; };
struct __attribute__((packed)) aBFu7c_BFu31i_B { unsigned char v1:7; unsigned int v2:31; bool v3; };
struct __attribute__((packed)) aBFu7c_BFu31ll_B { unsigned char v1:7; unsigned long long v2:31; bool v3; };
struct __attribute__((packed)) aBFu7c_BFu32i_B { unsigned char v1:7; unsigned int v2:32; bool v3; };
struct __attribute__((packed)) aBFu7c_BFu32ll_B { unsigned char v1:7; unsigned long long v2:32; bool v3; };
struct __attribute__((packed)) aBFu7c_BFu33_B { unsigned char v1:7; unsigned long long v2:33; bool v3; };
struct __attribute__((packed)) aBFu7c_BFu7c_B { unsigned char v1:7; unsigned char v2:7; bool v3; };
struct __attribute__((packed)) aBFu7c_BFu7i_B { unsigned char v1:7; unsigned int v2:7; bool v3; };
struct __attribute__((packed)) aBFu7c_BFu7ll_B { unsigned char v1:7; unsigned long long v2:7; bool v3; };
struct __attribute__((packed)) aBFu7c_BFu7s_B { unsigned char v1:7; unsigned short v2:7; bool v3; };
struct __attribute__((packed)) aBFu7c_BFu8c_B { unsigned char v1:7; unsigned char v2:8; bool v3; };
struct __attribute__((packed)) aBFu7c_BFu8i_B { unsigned char v1:7; unsigned int v2:8; bool v3; };
struct __attribute__((packed)) aBFu7c_BFu8ll_B { unsigned char v1:7; unsigned long long v2:8; bool v3; };
struct __attribute__((packed)) aBFu7c_BFu8s_B { unsigned char v1:7; unsigned short v2:8; bool v3; };
struct __attribute__((packed)) aBFu7c_BFu9i_B { unsigned char v1:7; unsigned int v2:9; bool v3; };
struct __attribute__((packed)) aBFu7c_BFu9ll_B { unsigned char v1:7; unsigned long long v2:9; bool v3; };
struct __attribute__((packed)) aBFu7c_BFu9s_B { unsigned char v1:7; unsigned short v2:9; bool v3; };
struct __attribute__((packed)) aBFu7c_C_B { unsigned char v1:7; char v2; bool v3; };
struct __attribute__((packed)) aBFu7c_D_B { unsigned char v1:7; double v2; bool v3; };
struct __attribute__((packed)) aBFu7c_F_B { unsigned char v1:7; float v2; bool v3; };
struct __attribute__((packed)) aBFu7c_I_B { unsigned char v1:7; int v2; bool v3; };
struct __attribute__((packed)) aBFu7c_Ip_B { unsigned char v1:7; int * v2; bool v3; };
struct __attribute__((packed)) aBFu7c_L_B { unsigned char v1:7; long long v2; bool v3; };
struct __attribute__((packed)) aBFu7c_S_B { unsigned char v1:7; short v2; bool v3; };
struct __attribute__((packed)) aBFu7c_Uc_B { unsigned char v1:7; unsigned char v2; bool v3; };
struct __attribute__((packed)) aBFu7c_Ui_B { unsigned char v1:7; unsigned int v2; bool v3; };
struct __attribute__((packed)) aBFu7c_Ul_B { unsigned char v1:7; unsigned long long v2; bool v3; };
struct __attribute__((packed)) aBFu7c_Us_B { unsigned char v1:7; unsigned short v2; bool v3; };
struct __attribute__((packed)) aBFu7c_Vp_B { unsigned char v1:7; void * v2; bool v3; };
struct __attribute__((packed)) aBFu7i_B { unsigned int v1:7; bool v2; };
struct __attribute__((packed)) aBFu7i_B_B { unsigned int v1:7; bool v2; bool v3; };
struct __attribute__((packed)) aBFu7i_B_BFu15i { unsigned int v1:7; bool v2; unsigned int v3:15; };
struct __attribute__((packed)) aBFu7i_B_BFu15ll { unsigned int v1:7; bool v2; unsigned long long v3:15; };
struct __attribute__((packed)) aBFu7i_B_BFu15s { unsigned int v1:7; bool v2; unsigned short v3:15; };
struct __attribute__((packed)) aBFu7i_B_BFu16i { unsigned int v1:7; bool v2; unsigned int v3:16; };
struct __attribute__((packed)) aBFu7i_B_BFu16ll { unsigned int v1:7; bool v2; unsigned long long v3:16; };
struct __attribute__((packed)) aBFu7i_B_BFu16s { unsigned int v1:7; bool v2; unsigned short v3:16; };
struct __attribute__((packed)) aBFu7i_B_BFu17i { unsigned int v1:7; bool v2; unsigned int v3:17; };
struct __attribute__((packed)) aBFu7i_B_BFu17ll { unsigned int v1:7; bool v2; unsigned long long v3:17; };
struct __attribute__((packed)) aBFu7i_B_BFu1c { unsigned int v1:7; bool v2; unsigned char v3:1; };
struct __attribute__((packed)) aBFu7i_B_BFu1i { unsigned int v1:7; bool v2; unsigned int v3:1; };
struct __attribute__((packed)) aBFu7i_B_BFu1ll { unsigned int v1:7; bool v2; unsigned long long v3:1; };
struct __attribute__((packed)) aBFu7i_B_BFu1s { unsigned int v1:7; bool v2; unsigned short v3:1; };
struct __attribute__((packed)) aBFu7i_B_BFu31i { unsigned int v1:7; bool v2; unsigned int v3:31; };
struct __attribute__((packed)) aBFu7i_B_BFu31ll { unsigned int v1:7; bool v2; unsigned long long v3:31; };
struct __attribute__((packed)) aBFu7i_B_BFu32i { unsigned int v1:7; bool v2; unsigned int v3:32; };
struct __attribute__((packed)) aBFu7i_B_BFu32ll { unsigned int v1:7; bool v2; unsigned long long v3:32; };
struct __attribute__((packed)) aBFu7i_B_BFu33 { unsigned int v1:7; bool v2; unsigned long long v3:33; };
struct __attribute__((packed)) aBFu7i_B_BFu7c { unsigned int v1:7; bool v2; unsigned char v3:7; };
struct __attribute__((packed)) aBFu7i_B_BFu7i { unsigned int v1:7; bool v2; unsigned int v3:7; };
struct __attribute__((packed)) aBFu7i_B_BFu7ll { unsigned int v1:7; bool v2; unsigned long long v3:7; };
struct __attribute__((packed)) aBFu7i_B_BFu7s { unsigned int v1:7; bool v2; unsigned short v3:7; };
struct __attribute__((packed)) aBFu7i_B_BFu8c { unsigned int v1:7; bool v2; unsigned char v3:8; };
struct __attribute__((packed)) aBFu7i_B_BFu8i { unsigned int v1:7; bool v2; unsigned int v3:8; };
struct __attribute__((packed)) aBFu7i_B_BFu8ll { unsigned int v1:7; bool v2; unsigned long long v3:8; };
struct __attribute__((packed)) aBFu7i_B_BFu8s { unsigned int v1:7; bool v2; unsigned short v3:8; };
struct __attribute__((packed)) aBFu7i_B_BFu9i { unsigned int v1:7; bool v2; unsigned int v3:9; };
struct __attribute__((packed)) aBFu7i_B_BFu9ll { unsigned int v1:7; bool v2; unsigned long long v3:9; };
struct __attribute__((packed)) aBFu7i_B_BFu9s { unsigned int v1:7; bool v2; unsigned short v3:9; };
struct __attribute__((packed)) aBFu7i_B_C { unsigned int v1:7; bool v2; char v3; };
struct __attribute__((packed)) aBFu7i_B_D { unsigned int v1:7; bool v2; double v3; };
struct __attribute__((packed)) aBFu7i_B_F { unsigned int v1:7; bool v2; float v3; };
struct __attribute__((packed)) aBFu7i_B_I { unsigned int v1:7; bool v2; int v3; };
struct __attribute__((packed)) aBFu7i_B_Ip { unsigned int v1:7; bool v2; int * v3; };
struct __attribute__((packed)) aBFu7i_B_L { unsigned int v1:7; bool v2; long long v3; };
struct __attribute__((packed)) aBFu7i_B_S { unsigned int v1:7; bool v2; short v3; };
struct __attribute__((packed)) aBFu7i_B_Uc { unsigned int v1:7; bool v2; unsigned char v3; };
struct __attribute__((packed)) aBFu7i_B_Ui { unsigned int v1:7; bool v2; unsigned int v3; };
struct __attribute__((packed)) aBFu7i_B_Ul { unsigned int v1:7; bool v2; unsigned long long v3; };
struct __attribute__((packed)) aBFu7i_B_Us { unsigned int v1:7; bool v2; unsigned short v3; };
struct __attribute__((packed)) aBFu7i_B_Vp { unsigned int v1:7; bool v2; void * v3; };
struct __attribute__((packed)) aBFu7i_BFu15i_B { unsigned int v1:7; unsigned int v2:15; bool v3; };
struct __attribute__((packed)) aBFu7i_BFu15ll_B { unsigned int v1:7; unsigned long long v2:15; bool v3; };
struct __attribute__((packed)) aBFu7i_BFu15s_B { unsigned int v1:7; unsigned short v2:15; bool v3; };
struct __attribute__((packed)) aBFu7i_BFu16i_B { unsigned int v1:7; unsigned int v2:16; bool v3; };
struct __attribute__((packed)) aBFu7i_BFu16ll_B { unsigned int v1:7; unsigned long long v2:16; bool v3; };
struct __attribute__((packed)) aBFu7i_BFu16s_B { unsigned int v1:7; unsigned short v2:16; bool v3; };
struct __attribute__((packed)) aBFu7i_BFu17i_B { unsigned int v1:7; unsigned int v2:17; bool v3; };
struct __attribute__((packed)) aBFu7i_BFu17ll_B { unsigned int v1:7; unsigned long long v2:17; bool v3; };
struct __attribute__((packed)) aBFu7i_BFu1c_B { unsigned int v1:7; unsigned char v2:1; bool v3; };
struct __attribute__((packed)) aBFu7i_BFu1i_B { unsigned int v1:7; unsigned int v2:1; bool v3; };
struct __attribute__((packed)) aBFu7i_BFu1ll_B { unsigned int v1:7; unsigned long long v2:1; bool v3; };
struct __attribute__((packed)) aBFu7i_BFu1s_B { unsigned int v1:7; unsigned short v2:1; bool v3; };
struct __attribute__((packed)) aBFu7i_BFu31i_B { unsigned int v1:7; unsigned int v2:31; bool v3; };
struct __attribute__((packed)) aBFu7i_BFu31ll_B { unsigned int v1:7; unsigned long long v2:31; bool v3; };
struct __attribute__((packed)) aBFu7i_BFu32i_B { unsigned int v1:7; unsigned int v2:32; bool v3; };
struct __attribute__((packed)) aBFu7i_BFu32ll_B { unsigned int v1:7; unsigned long long v2:32; bool v3; };
struct __attribute__((packed)) aBFu7i_BFu33_B { unsigned int v1:7; unsigned long long v2:33; bool v3; };
struct __attribute__((packed)) aBFu7i_BFu7c_B { unsigned int v1:7; unsigned char v2:7; bool v3; };
struct __attribute__((packed)) aBFu7i_BFu7i_B { unsigned int v1:7; unsigned int v2:7; bool v3; };
struct __attribute__((packed)) aBFu7i_BFu7ll_B { unsigned int v1:7; unsigned long long v2:7; bool v3; };
struct __attribute__((packed)) aBFu7i_BFu7s_B { unsigned int v1:7; unsigned short v2:7; bool v3; };
struct __attribute__((packed)) aBFu7i_BFu8c_B { unsigned int v1:7; unsigned char v2:8; bool v3; };
struct __attribute__((packed)) aBFu7i_BFu8i_B { unsigned int v1:7; unsigned int v2:8; bool v3; };
struct __attribute__((packed)) aBFu7i_BFu8ll_B { unsigned int v1:7; unsigned long long v2:8; bool v3; };
struct __attribute__((packed)) aBFu7i_BFu8s_B { unsigned int v1:7; unsigned short v2:8; bool v3; };
struct __attribute__((packed)) aBFu7i_BFu9i_B { unsigned int v1:7; unsigned int v2:9; bool v3; };
struct __attribute__((packed)) aBFu7i_BFu9ll_B { unsigned int v1:7; unsigned long long v2:9; bool v3; };
struct __attribute__((packed)) aBFu7i_BFu9s_B { unsigned int v1:7; unsigned short v2:9; bool v3; };
struct __attribute__((packed)) aBFu7i_C_B { unsigned int v1:7; char v2; bool v3; };
struct __attribute__((packed)) aBFu7i_D_B { unsigned int v1:7; double v2; bool v3; };
struct __attribute__((packed)) aBFu7i_F_B { unsigned int v1:7; float v2; bool v3; };
struct __attribute__((packed)) aBFu7i_I_B { unsigned int v1:7; int v2; bool v3; };
struct __attribute__((packed)) aBFu7i_Ip_B { unsigned int v1:7; int * v2; bool v3; };
struct __attribute__((packed)) aBFu7i_L_B { unsigned int v1:7; long long v2; bool v3; };
struct __attribute__((packed)) aBFu7i_S_B { unsigned int v1:7; short v2; bool v3; };
struct __attribute__((packed)) aBFu7i_Uc_B { unsigned int v1:7; unsigned char v2; bool v3; };
struct __attribute__((packed)) aBFu7i_Ui_B { unsigned int v1:7; unsigned int v2; bool v3; };
struct __attribute__((packed)) aBFu7i_Ul_B { unsigned int v1:7; unsigned long long v2; bool v3; };
struct __attribute__((packed)) aBFu7i_Us_B { unsigned int v1:7; unsigned short v2; bool v3; };
struct __attribute__((packed)) aBFu7i_Vp_B { unsigned int v1:7; void * v2; bool v3; };
struct __attribute__((packed)) aBFu7ll_B { unsigned long long v1:7; bool v2; };
struct __attribute__((packed)) aBFu7ll_B_B { unsigned long long v1:7; bool v2; bool v3; };
struct __attribute__((packed)) aBFu7ll_B_BFu15i { unsigned long long v1:7; bool v2; unsigned int v3:15; };
struct __attribute__((packed)) aBFu7ll_B_BFu15ll { unsigned long long v1:7; bool v2; unsigned long long v3:15; };
struct __attribute__((packed)) aBFu7ll_B_BFu15s { unsigned long long v1:7; bool v2; unsigned short v3:15; };
struct __attribute__((packed)) aBFu7ll_B_BFu16i { unsigned long long v1:7; bool v2; unsigned int v3:16; };
struct __attribute__((packed)) aBFu7ll_B_BFu16ll { unsigned long long v1:7; bool v2; unsigned long long v3:16; };
struct __attribute__((packed)) aBFu7ll_B_BFu16s { unsigned long long v1:7; bool v2; unsigned short v3:16; };
struct __attribute__((packed)) aBFu7ll_B_BFu17i { unsigned long long v1:7; bool v2; unsigned int v3:17; };
struct __attribute__((packed)) aBFu7ll_B_BFu17ll { unsigned long long v1:7; bool v2; unsigned long long v3:17; };
struct __attribute__((packed)) aBFu7ll_B_BFu1c { unsigned long long v1:7; bool v2; unsigned char v3:1; };
struct __attribute__((packed)) aBFu7ll_B_BFu1i { unsigned long long v1:7; bool v2; unsigned int v3:1; };
struct __attribute__((packed)) aBFu7ll_B_BFu1ll { unsigned long long v1:7; bool v2; unsigned long long v3:1; };
struct __attribute__((packed)) aBFu7ll_B_BFu1s { unsigned long long v1:7; bool v2; unsigned short v3:1; };
struct __attribute__((packed)) aBFu7ll_B_BFu31i { unsigned long long v1:7; bool v2; unsigned int v3:31; };
struct __attribute__((packed)) aBFu7ll_B_BFu31ll { unsigned long long v1:7; bool v2; unsigned long long v3:31; };
struct __attribute__((packed)) aBFu7ll_B_BFu32i { unsigned long long v1:7; bool v2; unsigned int v3:32; };
struct __attribute__((packed)) aBFu7ll_B_BFu32ll { unsigned long long v1:7; bool v2; unsigned long long v3:32; };
struct __attribute__((packed)) aBFu7ll_B_BFu33 { unsigned long long v1:7; bool v2; unsigned long long v3:33; };
struct __attribute__((packed)) aBFu7ll_B_BFu7c { unsigned long long v1:7; bool v2; unsigned char v3:7; };
struct __attribute__((packed)) aBFu7ll_B_BFu7i { unsigned long long v1:7; bool v2; unsigned int v3:7; };
struct __attribute__((packed)) aBFu7ll_B_BFu7ll { unsigned long long v1:7; bool v2; unsigned long long v3:7; };
struct __attribute__((packed)) aBFu7ll_B_BFu7s { unsigned long long v1:7; bool v2; unsigned short v3:7; };
struct __attribute__((packed)) aBFu7ll_B_BFu8c { unsigned long long v1:7; bool v2; unsigned char v3:8; };
struct __attribute__((packed)) aBFu7ll_B_BFu8i { unsigned long long v1:7; bool v2; unsigned int v3:8; };
struct __attribute__((packed)) aBFu7ll_B_BFu8ll { unsigned long long v1:7; bool v2; unsigned long long v3:8; };
struct __attribute__((packed)) aBFu7ll_B_BFu8s { unsigned long long v1:7; bool v2; unsigned short v3:8; };
struct __attribute__((packed)) aBFu7ll_B_BFu9i { unsigned long long v1:7; bool v2; unsigned int v3:9; };
struct __attribute__((packed)) aBFu7ll_B_BFu9ll { unsigned long long v1:7; bool v2; unsigned long long v3:9; };
struct __attribute__((packed)) aBFu7ll_B_BFu9s { unsigned long long v1:7; bool v2; unsigned short v3:9; };
struct __attribute__((packed)) aBFu7ll_B_C { unsigned long long v1:7; bool v2; char v3; };
struct __attribute__((packed)) aBFu7ll_B_D { unsigned long long v1:7; bool v2; double v3; };
struct __attribute__((packed)) aBFu7ll_B_F { unsigned long long v1:7; bool v2; float v3; };
struct __attribute__((packed)) aBFu7ll_B_I { unsigned long long v1:7; bool v2; int v3; };
struct __attribute__((packed)) aBFu7ll_B_Ip { unsigned long long v1:7; bool v2; int * v3; };
struct __attribute__((packed)) aBFu7ll_B_L { unsigned long long v1:7; bool v2; long long v3; };
struct __attribute__((packed)) aBFu7ll_B_S { unsigned long long v1:7; bool v2; short v3; };
struct __attribute__((packed)) aBFu7ll_B_Uc { unsigned long long v1:7; bool v2; unsigned char v3; };
struct __attribute__((packed)) aBFu7ll_B_Ui { unsigned long long v1:7; bool v2; unsigned int v3; };
struct __attribute__((packed)) aBFu7ll_B_Ul { unsigned long long v1:7; bool v2; unsigned long long v3; };
struct __attribute__((packed)) aBFu7ll_B_Us { unsigned long long v1:7; bool v2; unsigned short v3; };
struct __attribute__((packed)) aBFu7ll_B_Vp { unsigned long long v1:7; bool v2; void * v3; };
struct __attribute__((packed)) aBFu7ll_BFu15i_B { unsigned long long v1:7; unsigned int v2:15; bool v3; };
struct __attribute__((packed)) aBFu7ll_BFu15ll_B { unsigned long long v1:7; unsigned long long v2:15; bool v3; };
struct __attribute__((packed)) aBFu7ll_BFu15s_B { unsigned long long v1:7; unsigned short v2:15; bool v3; };
struct __attribute__((packed)) aBFu7ll_BFu16i_B { unsigned long long v1:7; unsigned int v2:16; bool v3; };
struct __attribute__((packed)) aBFu7ll_BFu16ll_B { unsigned long long v1:7; unsigned long long v2:16; bool v3; };
struct __attribute__((packed)) aBFu7ll_BFu16s_B { unsigned long long v1:7; unsigned short v2:16; bool v3; };
struct __attribute__((packed)) aBFu7ll_BFu17i_B { unsigned long long v1:7; unsigned int v2:17; bool v3; };
struct __attribute__((packed)) aBFu7ll_BFu17ll_B { unsigned long long v1:7; unsigned long long v2:17; bool v3; };
struct __attribute__((packed)) aBFu7ll_BFu1c_B { unsigned long long v1:7; unsigned char v2:1; bool v3; };
struct __attribute__((packed)) aBFu7ll_BFu1i_B { unsigned long long v1:7; unsigned int v2:1; bool v3; };
struct __attribute__((packed)) aBFu7ll_BFu1ll_B { unsigned long long v1:7; unsigned long long v2:1; bool v3; };
struct __attribute__((packed)) aBFu7ll_BFu1s_B { unsigned long long v1:7; unsigned short v2:1; bool v3; };
struct __attribute__((packed)) aBFu7ll_BFu31i_B { unsigned long long v1:7; unsigned int v2:31; bool v3; };
struct __attribute__((packed)) aBFu7ll_BFu31ll_B { unsigned long long v1:7; unsigned long long v2:31; bool v3; };
struct __attribute__((packed)) aBFu7ll_BFu32i_B { unsigned long long v1:7; unsigned int v2:32; bool v3; };
struct __attribute__((packed)) aBFu7ll_BFu32ll_B { unsigned long long v1:7; unsigned long long v2:32; bool v3; };
struct __attribute__((packed)) aBFu7ll_BFu33_B { unsigned long long v1:7; unsigned long long v2:33; bool v3; };
struct __attribute__((packed)) aBFu7ll_BFu7c_B { unsigned long long v1:7; unsigned char v2:7; bool v3; };
struct __attribute__((packed)) aBFu7ll_BFu7i_B { unsigned long long v1:7; unsigned int v2:7; bool v3; };
struct __attribute__((packed)) aBFu7ll_BFu7ll_B { unsigned long long v1:7; unsigned long long v2:7; bool v3; };
struct __attribute__((packed)) aBFu7ll_BFu7s_B { unsigned long long v1:7; unsigned short v2:7; bool v3; };
struct __attribute__((packed)) aBFu7ll_BFu8c_B { unsigned long long v1:7; unsigned char v2:8; bool v3; };
struct __attribute__((packed)) aBFu7ll_BFu8i_B { unsigned long long v1:7; unsigned int v2:8; bool v3; };
struct __attribute__((packed)) aBFu7ll_BFu8ll_B { unsigned long long v1:7; unsigned long long v2:8; bool v3; };
struct __attribute__((packed)) aBFu7ll_BFu8s_B { unsigned long long v1:7; unsigned short v2:8; bool v3; };
struct __attribute__((packed)) aBFu7ll_BFu9i_B { unsigned long long v1:7; unsigned int v2:9; bool v3; };
struct __attribute__((packed)) aBFu7ll_BFu9ll_B { unsigned long long v1:7; unsigned long long v2:9; bool v3; };
struct __attribute__((packed)) aBFu7ll_BFu9s_B { unsigned long long v1:7; unsigned short v2:9; bool v3; };
struct __attribute__((packed)) aBFu7ll_C_B { unsigned long long v1:7; char v2; bool v3; };
struct __attribute__((packed)) aBFu7ll_D_B { unsigned long long v1:7; double v2; bool v3; };
struct __attribute__((packed)) aBFu7ll_F_B { unsigned long long v1:7; float v2; bool v3; };
struct __attribute__((packed)) aBFu7ll_I_B { unsigned long long v1:7; int v2; bool v3; };
struct __attribute__((packed)) aBFu7ll_Ip_B { unsigned long long v1:7; int * v2; bool v3; };
struct __attribute__((packed)) aBFu7ll_L_B { unsigned long long v1:7; long long v2; bool v3; };
struct __attribute__((packed)) aBFu7ll_S_B { unsigned long long v1:7; short v2; bool v3; };
struct __attribute__((packed)) aBFu7ll_Uc_B { unsigned long long v1:7; unsigned char v2; bool v3; };
struct __attribute__((packed)) aBFu7ll_Ui_B { unsigned long long v1:7; unsigned int v2; bool v3; };
struct __attribute__((packed)) aBFu7ll_Ul_B { unsigned long long v1:7; unsigned long long v2; bool v3; };
struct __attribute__((packed)) aBFu7ll_Us_B { unsigned long long v1:7; unsigned short v2; bool v3; };
struct __attribute__((packed)) aBFu7ll_Vp_B { unsigned long long v1:7; void * v2; bool v3; };
struct __attribute__((packed)) aBFu7s_B { unsigned short v1:7; bool v2; };
struct __attribute__((packed)) aBFu7s_B_B { unsigned short v1:7; bool v2; bool v3; };
struct __attribute__((packed)) aBFu7s_B_BFu15i { unsigned short v1:7; bool v2; unsigned int v3:15; };
struct __attribute__((packed)) aBFu7s_B_BFu15ll { unsigned short v1:7; bool v2; unsigned long long v3:15; };
struct __attribute__((packed)) aBFu7s_B_BFu15s { unsigned short v1:7; bool v2; unsigned short v3:15; };
struct __attribute__((packed)) aBFu7s_B_BFu16i { unsigned short v1:7; bool v2; unsigned int v3:16; };
struct __attribute__((packed)) aBFu7s_B_BFu16ll { unsigned short v1:7; bool v2; unsigned long long v3:16; };
struct __attribute__((packed)) aBFu7s_B_BFu16s { unsigned short v1:7; bool v2; unsigned short v3:16; };
struct __attribute__((packed)) aBFu7s_B_BFu17i { unsigned short v1:7; bool v2; unsigned int v3:17; };
struct __attribute__((packed)) aBFu7s_B_BFu17ll { unsigned short v1:7; bool v2; unsigned long long v3:17; };
struct __attribute__((packed)) aBFu7s_B_BFu1c { unsigned short v1:7; bool v2; unsigned char v3:1; };
struct __attribute__((packed)) aBFu7s_B_BFu1i { unsigned short v1:7; bool v2; unsigned int v3:1; };
struct __attribute__((packed)) aBFu7s_B_BFu1ll { unsigned short v1:7; bool v2; unsigned long long v3:1; };
struct __attribute__((packed)) aBFu7s_B_BFu1s { unsigned short v1:7; bool v2; unsigned short v3:1; };
struct __attribute__((packed)) aBFu7s_B_BFu31i { unsigned short v1:7; bool v2; unsigned int v3:31; };
struct __attribute__((packed)) aBFu7s_B_BFu31ll { unsigned short v1:7; bool v2; unsigned long long v3:31; };
struct __attribute__((packed)) aBFu7s_B_BFu32i { unsigned short v1:7; bool v2; unsigned int v3:32; };
struct __attribute__((packed)) aBFu7s_B_BFu32ll { unsigned short v1:7; bool v2; unsigned long long v3:32; };
struct __attribute__((packed)) aBFu7s_B_BFu33 { unsigned short v1:7; bool v2; unsigned long long v3:33; };
struct __attribute__((packed)) aBFu7s_B_BFu7c { unsigned short v1:7; bool v2; unsigned char v3:7; };
struct __attribute__((packed)) aBFu7s_B_BFu7i { unsigned short v1:7; bool v2; unsigned int v3:7; };
struct __attribute__((packed)) aBFu7s_B_BFu7ll { unsigned short v1:7; bool v2; unsigned long long v3:7; };
struct __attribute__((packed)) aBFu7s_B_BFu7s { unsigned short v1:7; bool v2; unsigned short v3:7; };
struct __attribute__((packed)) aBFu7s_B_BFu8c { unsigned short v1:7; bool v2; unsigned char v3:8; };
struct __attribute__((packed)) aBFu7s_B_BFu8i { unsigned short v1:7; bool v2; unsigned int v3:8; };
struct __attribute__((packed)) aBFu7s_B_BFu8ll { unsigned short v1:7; bool v2; unsigned long long v3:8; };
struct __attribute__((packed)) aBFu7s_B_BFu8s { unsigned short v1:7; bool v2; unsigned short v3:8; };
struct __attribute__((packed)) aBFu7s_B_BFu9i { unsigned short v1:7; bool v2; unsigned int v3:9; };
struct __attribute__((packed)) aBFu7s_B_BFu9ll { unsigned short v1:7; bool v2; unsigned long long v3:9; };
struct __attribute__((packed)) aBFu7s_B_BFu9s { unsigned short v1:7; bool v2; unsigned short v3:9; };
struct __attribute__((packed)) aBFu7s_B_C { unsigned short v1:7; bool v2; char v3; };
struct __attribute__((packed)) aBFu7s_B_D { unsigned short v1:7; bool v2; double v3; };
struct __attribute__((packed)) aBFu7s_B_F { unsigned short v1:7; bool v2; float v3; };
struct __attribute__((packed)) aBFu7s_B_I { unsigned short v1:7; bool v2; int v3; };
struct __attribute__((packed)) aBFu7s_B_Ip { unsigned short v1:7; bool v2; int * v3; };
struct __attribute__((packed)) aBFu7s_B_L { unsigned short v1:7; bool v2; long long v3; };
struct __attribute__((packed)) aBFu7s_B_S { unsigned short v1:7; bool v2; short v3; };
struct __attribute__((packed)) aBFu7s_B_Uc { unsigned short v1:7; bool v2; unsigned char v3; };
struct __attribute__((packed)) aBFu7s_B_Ui { unsigned short v1:7; bool v2; unsigned int v3; };
struct __attribute__((packed)) aBFu7s_B_Ul { unsigned short v1:7; bool v2; unsigned long long v3; };
struct __attribute__((packed)) aBFu7s_B_Us { unsigned short v1:7; bool v2; unsigned short v3; };
struct __attribute__((packed)) aBFu7s_B_Vp { unsigned short v1:7; bool v2; void * v3; };
struct __attribute__((packed)) aBFu7s_BFu15i_B { unsigned short v1:7; unsigned int v2:15; bool v3; };
struct __attribute__((packed)) aBFu7s_BFu15ll_B { unsigned short v1:7; unsigned long long v2:15; bool v3; };
struct __attribute__((packed)) aBFu7s_BFu15s_B { unsigned short v1:7; unsigned short v2:15; bool v3; };
struct __attribute__((packed)) aBFu7s_BFu16i_B { unsigned short v1:7; unsigned int v2:16; bool v3; };
struct __attribute__((packed)) aBFu7s_BFu16ll_B { unsigned short v1:7; unsigned long long v2:16; bool v3; };
struct __attribute__((packed)) aBFu7s_BFu16s_B { unsigned short v1:7; unsigned short v2:16; bool v3; };
struct __attribute__((packed)) aBFu7s_BFu17i_B { unsigned short v1:7; unsigned int v2:17; bool v3; };
struct __attribute__((packed)) aBFu7s_BFu17ll_B { unsigned short v1:7; unsigned long long v2:17; bool v3; };
struct __attribute__((packed)) aBFu7s_BFu1c_B { unsigned short v1:7; unsigned char v2:1; bool v3; };
struct __attribute__((packed)) aBFu7s_BFu1i_B { unsigned short v1:7; unsigned int v2:1; bool v3; };
struct __attribute__((packed)) aBFu7s_BFu1ll_B { unsigned short v1:7; unsigned long long v2:1; bool v3; };
struct __attribute__((packed)) aBFu7s_BFu1s_B { unsigned short v1:7; unsigned short v2:1; bool v3; };
struct __attribute__((packed)) aBFu7s_BFu31i_B { unsigned short v1:7; unsigned int v2:31; bool v3; };
struct __attribute__((packed)) aBFu7s_BFu31ll_B { unsigned short v1:7; unsigned long long v2:31; bool v3; };
struct __attribute__((packed)) aBFu7s_BFu32i_B { unsigned short v1:7; unsigned int v2:32; bool v3; };
struct __attribute__((packed)) aBFu7s_BFu32ll_B { unsigned short v1:7; unsigned long long v2:32; bool v3; };
struct __attribute__((packed)) aBFu7s_BFu33_B { unsigned short v1:7; unsigned long long v2:33; bool v3; };
struct __attribute__((packed)) aBFu7s_BFu7c_B { unsigned short v1:7; unsigned char v2:7; bool v3; };
struct __attribute__((packed)) aBFu7s_BFu7i_B { unsigned short v1:7; unsigned int v2:7; bool v3; };
struct __attribute__((packed)) aBFu7s_BFu7ll_B { unsigned short v1:7; unsigned long long v2:7; bool v3; };
struct __attribute__((packed)) aBFu7s_BFu7s_B { unsigned short v1:7; unsigned short v2:7; bool v3; };
struct __attribute__((packed)) aBFu7s_BFu8c_B { unsigned short v1:7; unsigned char v2:8; bool v3; };
struct __attribute__((packed)) aBFu7s_BFu8i_B { unsigned short v1:7; unsigned int v2:8; bool v3; };
struct __attribute__((packed)) aBFu7s_BFu8ll_B { unsigned short v1:7; unsigned long long v2:8; bool v3; };
struct __attribute__((packed)) aBFu7s_BFu8s_B { unsigned short v1:7; unsigned short v2:8; bool v3; };
struct __attribute__((packed)) aBFu7s_BFu9i_B { unsigned short v1:7; unsigned int v2:9; bool v3; };
struct __attribute__((packed)) aBFu7s_BFu9ll_B { unsigned short v1:7; unsigned long long v2:9; bool v3; };
struct __attribute__((packed)) aBFu7s_BFu9s_B { unsigned short v1:7; unsigned short v2:9; bool v3; };
struct __attribute__((packed)) aBFu7s_C_B { unsigned short v1:7; char v2; bool v3; };
struct __attribute__((packed)) aBFu7s_D_B { unsigned short v1:7; double v2; bool v3; };
struct __attribute__((packed)) aBFu7s_F_B { unsigned short v1:7; float v2; bool v3; };
struct __attribute__((packed)) aBFu7s_I_B { unsigned short v1:7; int v2; bool v3; };
struct __attribute__((packed)) aBFu7s_Ip_B { unsigned short v1:7; int * v2; bool v3; };
struct __attribute__((packed)) aBFu7s_L_B { unsigned short v1:7; long long v2; bool v3; };
struct __attribute__((packed)) aBFu7s_S_B { unsigned short v1:7; short v2; bool v3; };
struct __attribute__((packed)) aBFu7s_Uc_B { unsigned short v1:7; unsigned char v2; bool v3; };
struct __attribute__((packed)) aBFu7s_Ui_B { unsigned short v1:7; unsigned int v2; bool v3; };
struct __attribute__((packed)) aBFu7s_Ul_B { unsigned short v1:7; unsigned long long v2; bool v3; };
struct __attribute__((packed)) aBFu7s_Us_B { unsigned short v1:7; unsigned short v2; bool v3; };
struct __attribute__((packed)) aBFu7s_Vp_B { unsigned short v1:7; void * v2; bool v3; };
struct __attribute__((packed)) aBFu8c_B { unsigned char v1:8; bool v2; };
struct __attribute__((packed)) aBFu8c_B_B { unsigned char v1:8; bool v2; bool v3; };
struct __attribute__((packed)) aBFu8c_B_BFu15i { unsigned char v1:8; bool v2; unsigned int v3:15; };
struct __attribute__((packed)) aBFu8c_B_BFu15ll { unsigned char v1:8; bool v2; unsigned long long v3:15; };
struct __attribute__((packed)) aBFu8c_B_BFu15s { unsigned char v1:8; bool v2; unsigned short v3:15; };
struct __attribute__((packed)) aBFu8c_B_BFu16i { unsigned char v1:8; bool v2; unsigned int v3:16; };
struct __attribute__((packed)) aBFu8c_B_BFu16ll { unsigned char v1:8; bool v2; unsigned long long v3:16; };
struct __attribute__((packed)) aBFu8c_B_BFu16s { unsigned char v1:8; bool v2; unsigned short v3:16; };
struct __attribute__((packed)) aBFu8c_B_BFu17i { unsigned char v1:8; bool v2; unsigned int v3:17; };
struct __attribute__((packed)) aBFu8c_B_BFu17ll { unsigned char v1:8; bool v2; unsigned long long v3:17; };
struct __attribute__((packed)) aBFu8c_B_BFu1c { unsigned char v1:8; bool v2; unsigned char v3:1; };
struct __attribute__((packed)) aBFu8c_B_BFu1i { unsigned char v1:8; bool v2; unsigned int v3:1; };
struct __attribute__((packed)) aBFu8c_B_BFu1ll { unsigned char v1:8; bool v2; unsigned long long v3:1; };
struct __attribute__((packed)) aBFu8c_B_BFu1s { unsigned char v1:8; bool v2; unsigned short v3:1; };
struct __attribute__((packed)) aBFu8c_B_BFu31i { unsigned char v1:8; bool v2; unsigned int v3:31; };
struct __attribute__((packed)) aBFu8c_B_BFu31ll { unsigned char v1:8; bool v2; unsigned long long v3:31; };
struct __attribute__((packed)) aBFu8c_B_BFu32i { unsigned char v1:8; bool v2; unsigned int v3:32; };
struct __attribute__((packed)) aBFu8c_B_BFu32ll { unsigned char v1:8; bool v2; unsigned long long v3:32; };
struct __attribute__((packed)) aBFu8c_B_BFu33 { unsigned char v1:8; bool v2; unsigned long long v3:33; };
struct __attribute__((packed)) aBFu8c_B_BFu7c { unsigned char v1:8; bool v2; unsigned char v3:7; };
struct __attribute__((packed)) aBFu8c_B_BFu7i { unsigned char v1:8; bool v2; unsigned int v3:7; };
struct __attribute__((packed)) aBFu8c_B_BFu7ll { unsigned char v1:8; bool v2; unsigned long long v3:7; };
struct __attribute__((packed)) aBFu8c_B_BFu7s { unsigned char v1:8; bool v2; unsigned short v3:7; };
struct __attribute__((packed)) aBFu8c_B_BFu8c { unsigned char v1:8; bool v2; unsigned char v3:8; };
struct __attribute__((packed)) aBFu8c_B_BFu8i { unsigned char v1:8; bool v2; unsigned int v3:8; };
struct __attribute__((packed)) aBFu8c_B_BFu8ll { unsigned char v1:8; bool v2; unsigned long long v3:8; };
struct __attribute__((packed)) aBFu8c_B_BFu8s { unsigned char v1:8; bool v2; unsigned short v3:8; };
struct __attribute__((packed)) aBFu8c_B_BFu9i { unsigned char v1:8; bool v2; unsigned int v3:9; };
struct __attribute__((packed)) aBFu8c_B_BFu9ll { unsigned char v1:8; bool v2; unsigned long long v3:9; };
struct __attribute__((packed)) aBFu8c_B_BFu9s { unsigned char v1:8; bool v2; unsigned short v3:9; };
struct __attribute__((packed)) aBFu8c_B_C { unsigned char v1:8; bool v2; char v3; };
struct __attribute__((packed)) aBFu8c_B_D { unsigned char v1:8; bool v2; double v3; };
struct __attribute__((packed)) aBFu8c_B_F { unsigned char v1:8; bool v2; float v3; };
struct __attribute__((packed)) aBFu8c_B_I { unsigned char v1:8; bool v2; int v3; };
struct __attribute__((packed)) aBFu8c_B_Ip { unsigned char v1:8; bool v2; int * v3; };
struct __attribute__((packed)) aBFu8c_B_L { unsigned char v1:8; bool v2; long long v3; };
struct __attribute__((packed)) aBFu8c_B_S { unsigned char v1:8; bool v2; short v3; };
struct __attribute__((packed)) aBFu8c_B_Uc { unsigned char v1:8; bool v2; unsigned char v3; };
struct __attribute__((packed)) aBFu8c_B_Ui { unsigned char v1:8; bool v2; unsigned int v3; };
struct __attribute__((packed)) aBFu8c_B_Ul { unsigned char v1:8; bool v2; unsigned long long v3; };
struct __attribute__((packed)) aBFu8c_B_Us { unsigned char v1:8; bool v2; unsigned short v3; };
struct __attribute__((packed)) aBFu8c_B_Vp { unsigned char v1:8; bool v2; void * v3; };
struct __attribute__((packed)) aBFu8c_BFu15i_B { unsigned char v1:8; unsigned int v2:15; bool v3; };
struct __attribute__((packed)) aBFu8c_BFu15ll_B { unsigned char v1:8; unsigned long long v2:15; bool v3; };
struct __attribute__((packed)) aBFu8c_BFu15s_B { unsigned char v1:8; unsigned short v2:15; bool v3; };
struct __attribute__((packed)) aBFu8c_BFu16i_B { unsigned char v1:8; unsigned int v2:16; bool v3; };
struct __attribute__((packed)) aBFu8c_BFu16ll_B { unsigned char v1:8; unsigned long long v2:16; bool v3; };
struct __attribute__((packed)) aBFu8c_BFu16s_B { unsigned char v1:8; unsigned short v2:16; bool v3; };
struct __attribute__((packed)) aBFu8c_BFu17i_B { unsigned char v1:8; unsigned int v2:17; bool v3; };
struct __attribute__((packed)) aBFu8c_BFu17ll_B { unsigned char v1:8; unsigned long long v2:17; bool v3; };
struct __attribute__((packed)) aBFu8c_BFu1c_B { unsigned char v1:8; unsigned char v2:1; bool v3; };
struct __attribute__((packed)) aBFu8c_BFu1i_B { unsigned char v1:8; unsigned int v2:1; bool v3; };
struct __attribute__((packed)) aBFu8c_BFu1ll_B { unsigned char v1:8; unsigned long long v2:1; bool v3; };
struct __attribute__((packed)) aBFu8c_BFu1s_B { unsigned char v1:8; unsigned short v2:1; bool v3; };
struct __attribute__((packed)) aBFu8c_BFu31i_B { unsigned char v1:8; unsigned int v2:31; bool v3; };
struct __attribute__((packed)) aBFu8c_BFu31ll_B { unsigned char v1:8; unsigned long long v2:31; bool v3; };
struct __attribute__((packed)) aBFu8c_BFu32i_B { unsigned char v1:8; unsigned int v2:32; bool v3; };
struct __attribute__((packed)) aBFu8c_BFu32ll_B { unsigned char v1:8; unsigned long long v2:32; bool v3; };
struct __attribute__((packed)) aBFu8c_BFu33_B { unsigned char v1:8; unsigned long long v2:33; bool v3; };
struct __attribute__((packed)) aBFu8c_BFu7c_B { unsigned char v1:8; unsigned char v2:7; bool v3; };
struct __attribute__((packed)) aBFu8c_BFu7i_B { unsigned char v1:8; unsigned int v2:7; bool v3; };
struct __attribute__((packed)) aBFu8c_BFu7ll_B { unsigned char v1:8; unsigned long long v2:7; bool v3; };
struct __attribute__((packed)) aBFu8c_BFu7s_B { unsigned char v1:8; unsigned short v2:7; bool v3; };
struct __attribute__((packed)) aBFu8c_BFu8c_B { unsigned char v1:8; unsigned char v2:8; bool v3; };
struct __attribute__((packed)) aBFu8c_BFu8i_B { unsigned char v1:8; unsigned int v2:8; bool v3; };
struct __attribute__((packed)) aBFu8c_BFu8ll_B { unsigned char v1:8; unsigned long long v2:8; bool v3; };
struct __attribute__((packed)) aBFu8c_BFu8s_B { unsigned char v1:8; unsigned short v2:8; bool v3; };
struct __attribute__((packed)) aBFu8c_BFu9i_B { unsigned char v1:8; unsigned int v2:9; bool v3; };
struct __attribute__((packed)) aBFu8c_BFu9ll_B { unsigned char v1:8; unsigned long long v2:9; bool v3; };
struct __attribute__((packed)) aBFu8c_BFu9s_B { unsigned char v1:8; unsigned short v2:9; bool v3; };
struct __attribute__((packed)) aBFu8c_C_B { unsigned char v1:8; char v2; bool v3; };
struct __attribute__((packed)) aBFu8c_D_B { unsigned char v1:8; double v2; bool v3; };
struct __attribute__((packed)) aBFu8c_F_B { unsigned char v1:8; float v2; bool v3; };
struct __attribute__((packed)) aBFu8c_I_B { unsigned char v1:8; int v2; bool v3; };
struct __attribute__((packed)) aBFu8c_Ip_B { unsigned char v1:8; int * v2; bool v3; };
struct __attribute__((packed)) aBFu8c_L_B { unsigned char v1:8; long long v2; bool v3; };
struct __attribute__((packed)) aBFu8c_S_B { unsigned char v1:8; short v2; bool v3; };
struct __attribute__((packed)) aBFu8c_Uc_B { unsigned char v1:8; unsigned char v2; bool v3; };
struct __attribute__((packed)) aBFu8c_Ui_B { unsigned char v1:8; unsigned int v2; bool v3; };
struct __attribute__((packed)) aBFu8c_Ul_B { unsigned char v1:8; unsigned long long v2; bool v3; };
struct __attribute__((packed)) aBFu8c_Us_B { unsigned char v1:8; unsigned short v2; bool v3; };
struct __attribute__((packed)) aBFu8c_Vp_B { unsigned char v1:8; void * v2; bool v3; };
struct __attribute__((packed)) aBFu8i_B { unsigned int v1:8; bool v2; };
struct __attribute__((packed)) aBFu8i_B_B { unsigned int v1:8; bool v2; bool v3; };
struct __attribute__((packed)) aBFu8i_B_BFu15i { unsigned int v1:8; bool v2; unsigned int v3:15; };
struct __attribute__((packed)) aBFu8i_B_BFu15ll { unsigned int v1:8; bool v2; unsigned long long v3:15; };
struct __attribute__((packed)) aBFu8i_B_BFu15s { unsigned int v1:8; bool v2; unsigned short v3:15; };
struct __attribute__((packed)) aBFu8i_B_BFu16i { unsigned int v1:8; bool v2; unsigned int v3:16; };
struct __attribute__((packed)) aBFu8i_B_BFu16ll { unsigned int v1:8; bool v2; unsigned long long v3:16; };
struct __attribute__((packed)) aBFu8i_B_BFu16s { unsigned int v1:8; bool v2; unsigned short v3:16; };
struct __attribute__((packed)) aBFu8i_B_BFu17i { unsigned int v1:8; bool v2; unsigned int v3:17; };
struct __attribute__((packed)) aBFu8i_B_BFu17ll { unsigned int v1:8; bool v2; unsigned long long v3:17; };
struct __attribute__((packed)) aBFu8i_B_BFu1c { unsigned int v1:8; bool v2; unsigned char v3:1; };
struct __attribute__((packed)) aBFu8i_B_BFu1i { unsigned int v1:8; bool v2; unsigned int v3:1; };
struct __attribute__((packed)) aBFu8i_B_BFu1ll { unsigned int v1:8; bool v2; unsigned long long v3:1; };
struct __attribute__((packed)) aBFu8i_B_BFu1s { unsigned int v1:8; bool v2; unsigned short v3:1; };
struct __attribute__((packed)) aBFu8i_B_BFu31i { unsigned int v1:8; bool v2; unsigned int v3:31; };
struct __attribute__((packed)) aBFu8i_B_BFu31ll { unsigned int v1:8; bool v2; unsigned long long v3:31; };
struct __attribute__((packed)) aBFu8i_B_BFu32i { unsigned int v1:8; bool v2; unsigned int v3:32; };
struct __attribute__((packed)) aBFu8i_B_BFu32ll { unsigned int v1:8; bool v2; unsigned long long v3:32; };
struct __attribute__((packed)) aBFu8i_B_BFu33 { unsigned int v1:8; bool v2; unsigned long long v3:33; };
struct __attribute__((packed)) aBFu8i_B_BFu7c { unsigned int v1:8; bool v2; unsigned char v3:7; };
struct __attribute__((packed)) aBFu8i_B_BFu7i { unsigned int v1:8; bool v2; unsigned int v3:7; };
struct __attribute__((packed)) aBFu8i_B_BFu7ll { unsigned int v1:8; bool v2; unsigned long long v3:7; };
struct __attribute__((packed)) aBFu8i_B_BFu7s { unsigned int v1:8; bool v2; unsigned short v3:7; };
struct __attribute__((packed)) aBFu8i_B_BFu8c { unsigned int v1:8; bool v2; unsigned char v3:8; };
struct __attribute__((packed)) aBFu8i_B_BFu8i { unsigned int v1:8; bool v2; unsigned int v3:8; };
struct __attribute__((packed)) aBFu8i_B_BFu8ll { unsigned int v1:8; bool v2; unsigned long long v3:8; };
struct __attribute__((packed)) aBFu8i_B_BFu8s { unsigned int v1:8; bool v2; unsigned short v3:8; };
struct __attribute__((packed)) aBFu8i_B_BFu9i { unsigned int v1:8; bool v2; unsigned int v3:9; };
struct __attribute__((packed)) aBFu8i_B_BFu9ll { unsigned int v1:8; bool v2; unsigned long long v3:9; };
struct __attribute__((packed)) aBFu8i_B_BFu9s { unsigned int v1:8; bool v2; unsigned short v3:9; };
struct __attribute__((packed)) aBFu8i_B_C { unsigned int v1:8; bool v2; char v3; };
struct __attribute__((packed)) aBFu8i_B_D { unsigned int v1:8; bool v2; double v3; };
struct __attribute__((packed)) aBFu8i_B_F { unsigned int v1:8; bool v2; float v3; };
struct __attribute__((packed)) aBFu8i_B_I { unsigned int v1:8; bool v2; int v3; };
struct __attribute__((packed)) aBFu8i_B_Ip { unsigned int v1:8; bool v2; int * v3; };
struct __attribute__((packed)) aBFu8i_B_L { unsigned int v1:8; bool v2; long long v3; };
struct __attribute__((packed)) aBFu8i_B_S { unsigned int v1:8; bool v2; short v3; };
struct __attribute__((packed)) aBFu8i_B_Uc { unsigned int v1:8; bool v2; unsigned char v3; };
struct __attribute__((packed)) aBFu8i_B_Ui { unsigned int v1:8; bool v2; unsigned int v3; };
struct __attribute__((packed)) aBFu8i_B_Ul { unsigned int v1:8; bool v2; unsigned long long v3; };
struct __attribute__((packed)) aBFu8i_B_Us { unsigned int v1:8; bool v2; unsigned short v3; };
struct __attribute__((packed)) aBFu8i_B_Vp { unsigned int v1:8; bool v2; void * v3; };
struct __attribute__((packed)) aBFu8i_BFu15i_B { unsigned int v1:8; unsigned int v2:15; bool v3; };
struct __attribute__((packed)) aBFu8i_BFu15ll_B { unsigned int v1:8; unsigned long long v2:15; bool v3; };
struct __attribute__((packed)) aBFu8i_BFu15s_B { unsigned int v1:8; unsigned short v2:15; bool v3; };
struct __attribute__((packed)) aBFu8i_BFu16i_B { unsigned int v1:8; unsigned int v2:16; bool v3; };
struct __attribute__((packed)) aBFu8i_BFu16ll_B { unsigned int v1:8; unsigned long long v2:16; bool v3; };
struct __attribute__((packed)) aBFu8i_BFu16s_B { unsigned int v1:8; unsigned short v2:16; bool v3; };
struct __attribute__((packed)) aBFu8i_BFu17i_B { unsigned int v1:8; unsigned int v2:17; bool v3; };
struct __attribute__((packed)) aBFu8i_BFu17ll_B { unsigned int v1:8; unsigned long long v2:17; bool v3; };
struct __attribute__((packed)) aBFu8i_BFu1c_B { unsigned int v1:8; unsigned char v2:1; bool v3; };
struct __attribute__((packed)) aBFu8i_BFu1i_B { unsigned int v1:8; unsigned int v2:1; bool v3; };
struct __attribute__((packed)) aBFu8i_BFu1ll_B { unsigned int v1:8; unsigned long long v2:1; bool v3; };
struct __attribute__((packed)) aBFu8i_BFu1s_B { unsigned int v1:8; unsigned short v2:1; bool v3; };
struct __attribute__((packed)) aBFu8i_BFu31i_B { unsigned int v1:8; unsigned int v2:31; bool v3; };
struct __attribute__((packed)) aBFu8i_BFu31ll_B { unsigned int v1:8; unsigned long long v2:31; bool v3; };
struct __attribute__((packed)) aBFu8i_BFu32i_B { unsigned int v1:8; unsigned int v2:32; bool v3; };
struct __attribute__((packed)) aBFu8i_BFu32ll_B { unsigned int v1:8; unsigned long long v2:32; bool v3; };
struct __attribute__((packed)) aBFu8i_BFu33_B { unsigned int v1:8; unsigned long long v2:33; bool v3; };
struct __attribute__((packed)) aBFu8i_BFu7c_B { unsigned int v1:8; unsigned char v2:7; bool v3; };
struct __attribute__((packed)) aBFu8i_BFu7i_B { unsigned int v1:8; unsigned int v2:7; bool v3; };
struct __attribute__((packed)) aBFu8i_BFu7ll_B { unsigned int v1:8; unsigned long long v2:7; bool v3; };
struct __attribute__((packed)) aBFu8i_BFu7s_B { unsigned int v1:8; unsigned short v2:7; bool v3; };
struct __attribute__((packed)) aBFu8i_BFu8c_B { unsigned int v1:8; unsigned char v2:8; bool v3; };
struct __attribute__((packed)) aBFu8i_BFu8i_B { unsigned int v1:8; unsigned int v2:8; bool v3; };
struct __attribute__((packed)) aBFu8i_BFu8ll_B { unsigned int v1:8; unsigned long long v2:8; bool v3; };
struct __attribute__((packed)) aBFu8i_BFu8s_B { unsigned int v1:8; unsigned short v2:8; bool v3; };
struct __attribute__((packed)) aBFu8i_BFu9i_B { unsigned int v1:8; unsigned int v2:9; bool v3; };
struct __attribute__((packed)) aBFu8i_BFu9ll_B { unsigned int v1:8; unsigned long long v2:9; bool v3; };
struct __attribute__((packed)) aBFu8i_BFu9s_B { unsigned int v1:8; unsigned short v2:9; bool v3; };
struct __attribute__((packed)) aBFu8i_C_B { unsigned int v1:8; char v2; bool v3; };
struct __attribute__((packed)) aBFu8i_D_B { unsigned int v1:8; double v2; bool v3; };
struct __attribute__((packed)) aBFu8i_F_B { unsigned int v1:8; float v2; bool v3; };
struct __attribute__((packed)) aBFu8i_I_B { unsigned int v1:8; int v2; bool v3; };
struct __attribute__((packed)) aBFu8i_Ip_B { unsigned int v1:8; int * v2; bool v3; };
struct __attribute__((packed)) aBFu8i_L_B { unsigned int v1:8; long long v2; bool v3; };
struct __attribute__((packed)) aBFu8i_S_B { unsigned int v1:8; short v2; bool v3; };
struct __attribute__((packed)) aBFu8i_Uc_B { unsigned int v1:8; unsigned char v2; bool v3; };
struct __attribute__((packed)) aBFu8i_Ui_B { unsigned int v1:8; unsigned int v2; bool v3; };
struct __attribute__((packed)) aBFu8i_Ul_B { unsigned int v1:8; unsigned long long v2; bool v3; };
struct __attribute__((packed)) aBFu8i_Us_B { unsigned int v1:8; unsigned short v2; bool v3; };
struct __attribute__((packed)) aBFu8i_Vp_B { unsigned int v1:8; void * v2; bool v3; };
struct __attribute__((packed)) aBFu8ll_B { unsigned long long v1:8; bool v2; };
struct __attribute__((packed)) aBFu8ll_B_B { unsigned long long v1:8; bool v2; bool v3; };
struct __attribute__((packed)) aBFu8ll_B_BFu15i { unsigned long long v1:8; bool v2; unsigned int v3:15; };
struct __attribute__((packed)) aBFu8ll_B_BFu15ll { unsigned long long v1:8; bool v2; unsigned long long v3:15; };
struct __attribute__((packed)) aBFu8ll_B_BFu15s { unsigned long long v1:8; bool v2; unsigned short v3:15; };
struct __attribute__((packed)) aBFu8ll_B_BFu16i { unsigned long long v1:8; bool v2; unsigned int v3:16; };
struct __attribute__((packed)) aBFu8ll_B_BFu16ll { unsigned long long v1:8; bool v2; unsigned long long v3:16; };
struct __attribute__((packed)) aBFu8ll_B_BFu16s { unsigned long long v1:8; bool v2; unsigned short v3:16; };
struct __attribute__((packed)) aBFu8ll_B_BFu17i { unsigned long long v1:8; bool v2; unsigned int v3:17; };
struct __attribute__((packed)) aBFu8ll_B_BFu17ll { unsigned long long v1:8; bool v2; unsigned long long v3:17; };
struct __attribute__((packed)) aBFu8ll_B_BFu1c { unsigned long long v1:8; bool v2; unsigned char v3:1; };
struct __attribute__((packed)) aBFu8ll_B_BFu1i { unsigned long long v1:8; bool v2; unsigned int v3:1; };
struct __attribute__((packed)) aBFu8ll_B_BFu1ll { unsigned long long v1:8; bool v2; unsigned long long v3:1; };
struct __attribute__((packed)) aBFu8ll_B_BFu1s { unsigned long long v1:8; bool v2; unsigned short v3:1; };
struct __attribute__((packed)) aBFu8ll_B_BFu31i { unsigned long long v1:8; bool v2; unsigned int v3:31; };
struct __attribute__((packed)) aBFu8ll_B_BFu31ll { unsigned long long v1:8; bool v2; unsigned long long v3:31; };
struct __attribute__((packed)) aBFu8ll_B_BFu32i { unsigned long long v1:8; bool v2; unsigned int v3:32; };
struct __attribute__((packed)) aBFu8ll_B_BFu32ll { unsigned long long v1:8; bool v2; unsigned long long v3:32; };
struct __attribute__((packed)) aBFu8ll_B_BFu33 { unsigned long long v1:8; bool v2; unsigned long long v3:33; };
struct __attribute__((packed)) aBFu8ll_B_BFu7c { unsigned long long v1:8; bool v2; unsigned char v3:7; };
struct __attribute__((packed)) aBFu8ll_B_BFu7i { unsigned long long v1:8; bool v2; unsigned int v3:7; };
struct __attribute__((packed)) aBFu8ll_B_BFu7ll { unsigned long long v1:8; bool v2; unsigned long long v3:7; };
struct __attribute__((packed)) aBFu8ll_B_BFu7s { unsigned long long v1:8; bool v2; unsigned short v3:7; };
struct __attribute__((packed)) aBFu8ll_B_BFu8c { unsigned long long v1:8; bool v2; unsigned char v3:8; };
struct __attribute__((packed)) aBFu8ll_B_BFu8i { unsigned long long v1:8; bool v2; unsigned int v3:8; };
struct __attribute__((packed)) aBFu8ll_B_BFu8ll { unsigned long long v1:8; bool v2; unsigned long long v3:8; };
struct __attribute__((packed)) aBFu8ll_B_BFu8s { unsigned long long v1:8; bool v2; unsigned short v3:8; };
struct __attribute__((packed)) aBFu8ll_B_BFu9i { unsigned long long v1:8; bool v2; unsigned int v3:9; };
struct __attribute__((packed)) aBFu8ll_B_BFu9ll { unsigned long long v1:8; bool v2; unsigned long long v3:9; };
struct __attribute__((packed)) aBFu8ll_B_BFu9s { unsigned long long v1:8; bool v2; unsigned short v3:9; };
struct __attribute__((packed)) aBFu8ll_B_C { unsigned long long v1:8; bool v2; char v3; };
struct __attribute__((packed)) aBFu8ll_B_D { unsigned long long v1:8; bool v2; double v3; };
struct __attribute__((packed)) aBFu8ll_B_F { unsigned long long v1:8; bool v2; float v3; };
struct __attribute__((packed)) aBFu8ll_B_I { unsigned long long v1:8; bool v2; int v3; };
struct __attribute__((packed)) aBFu8ll_B_Ip { unsigned long long v1:8; bool v2; int * v3; };
struct __attribute__((packed)) aBFu8ll_B_L { unsigned long long v1:8; bool v2; long long v3; };
struct __attribute__((packed)) aBFu8ll_B_S { unsigned long long v1:8; bool v2; short v3; };
struct __attribute__((packed)) aBFu8ll_B_Uc { unsigned long long v1:8; bool v2; unsigned char v3; };
struct __attribute__((packed)) aBFu8ll_B_Ui { unsigned long long v1:8; bool v2; unsigned int v3; };
struct __attribute__((packed)) aBFu8ll_B_Ul { unsigned long long v1:8; bool v2; unsigned long long v3; };
struct __attribute__((packed)) aBFu8ll_B_Us { unsigned long long v1:8; bool v2; unsigned short v3; };
struct __attribute__((packed)) aBFu8ll_B_Vp { unsigned long long v1:8; bool v2; void * v3; };
struct __attribute__((packed)) aBFu8ll_BFu15i_B { unsigned long long v1:8; unsigned int v2:15; bool v3; };
struct __attribute__((packed)) aBFu8ll_BFu15ll_B { unsigned long long v1:8; unsigned long long v2:15; bool v3; };
struct __attribute__((packed)) aBFu8ll_BFu15s_B { unsigned long long v1:8; unsigned short v2:15; bool v3; };
struct __attribute__((packed)) aBFu8ll_BFu16i_B { unsigned long long v1:8; unsigned int v2:16; bool v3; };
struct __attribute__((packed)) aBFu8ll_BFu16ll_B { unsigned long long v1:8; unsigned long long v2:16; bool v3; };
struct __attribute__((packed)) aBFu8ll_BFu16s_B { unsigned long long v1:8; unsigned short v2:16; bool v3; };
struct __attribute__((packed)) aBFu8ll_BFu17i_B { unsigned long long v1:8; unsigned int v2:17; bool v3; };
struct __attribute__((packed)) aBFu8ll_BFu17ll_B { unsigned long long v1:8; unsigned long long v2:17; bool v3; };
struct __attribute__((packed)) aBFu8ll_BFu1c_B { unsigned long long v1:8; unsigned char v2:1; bool v3; };
struct __attribute__((packed)) aBFu8ll_BFu1i_B { unsigned long long v1:8; unsigned int v2:1; bool v3; };
struct __attribute__((packed)) aBFu8ll_BFu1ll_B { unsigned long long v1:8; unsigned long long v2:1; bool v3; };
struct __attribute__((packed)) aBFu8ll_BFu1s_B { unsigned long long v1:8; unsigned short v2:1; bool v3; };
struct __attribute__((packed)) aBFu8ll_BFu31i_B { unsigned long long v1:8; unsigned int v2:31; bool v3; };
struct __attribute__((packed)) aBFu8ll_BFu31ll_B { unsigned long long v1:8; unsigned long long v2:31; bool v3; };
struct __attribute__((packed)) aBFu8ll_BFu32i_B { unsigned long long v1:8; unsigned int v2:32; bool v3; };
struct __attribute__((packed)) aBFu8ll_BFu32ll_B { unsigned long long v1:8; unsigned long long v2:32; bool v3; };
struct __attribute__((packed)) aBFu8ll_BFu33_B { unsigned long long v1:8; unsigned long long v2:33; bool v3; };
struct __attribute__((packed)) aBFu8ll_BFu7c_B { unsigned long long v1:8; unsigned char v2:7; bool v3; };
struct __attribute__((packed)) aBFu8ll_BFu7i_B { unsigned long long v1:8; unsigned int v2:7; bool v3; };
struct __attribute__((packed)) aBFu8ll_BFu7ll_B { unsigned long long v1:8; unsigned long long v2:7; bool v3; };
struct __attribute__((packed)) aBFu8ll_BFu7s_B { unsigned long long v1:8; unsigned short v2:7; bool v3; };
struct __attribute__((packed)) aBFu8ll_BFu8c_B { unsigned long long v1:8; unsigned char v2:8; bool v3; };
struct __attribute__((packed)) aBFu8ll_BFu8i_B { unsigned long long v1:8; unsigned int v2:8; bool v3; };
struct __attribute__((packed)) aBFu8ll_BFu8ll_B { unsigned long long v1:8; unsigned long long v2:8; bool v3; };
struct __attribute__((packed)) aBFu8ll_BFu8s_B { unsigned long long v1:8; unsigned short v2:8; bool v3; };
struct __attribute__((packed)) aBFu8ll_BFu9i_B { unsigned long long v1:8; unsigned int v2:9; bool v3; };
struct __attribute__((packed)) aBFu8ll_BFu9ll_B { unsigned long long v1:8; unsigned long long v2:9; bool v3; };
struct __attribute__((packed)) aBFu8ll_BFu9s_B { unsigned long long v1:8; unsigned short v2:9; bool v3; };
struct __attribute__((packed)) aBFu8ll_C_B { unsigned long long v1:8; char v2; bool v3; };
struct __attribute__((packed)) aBFu8ll_D_B { unsigned long long v1:8; double v2; bool v3; };
struct __attribute__((packed)) aBFu8ll_F_B { unsigned long long v1:8; float v2; bool v3; };
struct __attribute__((packed)) aBFu8ll_I_B { unsigned long long v1:8; int v2; bool v3; };
struct __attribute__((packed)) aBFu8ll_Ip_B { unsigned long long v1:8; int * v2; bool v3; };
struct __attribute__((packed)) aBFu8ll_L_B { unsigned long long v1:8; long long v2; bool v3; };
struct __attribute__((packed)) aBFu8ll_S_B { unsigned long long v1:8; short v2; bool v3; };
struct __attribute__((packed)) aBFu8ll_Uc_B { unsigned long long v1:8; unsigned char v2; bool v3; };
struct __attribute__((packed)) aBFu8ll_Ui_B { unsigned long long v1:8; unsigned int v2; bool v3; };
struct __attribute__((packed)) aBFu8ll_Ul_B { unsigned long long v1:8; unsigned long long v2; bool v3; };
struct __attribute__((packed)) aBFu8ll_Us_B { unsigned long long v1:8; unsigned short v2; bool v3; };
struct __attribute__((packed)) aBFu8ll_Vp_B { unsigned long long v1:8; void * v2; bool v3; };
struct __attribute__((packed)) aBFu8s_B { unsigned short v1:8; bool v2; };
struct __attribute__((packed)) aBFu8s_B_B { unsigned short v1:8; bool v2; bool v3; };
struct __attribute__((packed)) aBFu8s_B_BFu15i { unsigned short v1:8; bool v2; unsigned int v3:15; };
struct __attribute__((packed)) aBFu8s_B_BFu15ll { unsigned short v1:8; bool v2; unsigned long long v3:15; };
struct __attribute__((packed)) aBFu8s_B_BFu15s { unsigned short v1:8; bool v2; unsigned short v3:15; };
struct __attribute__((packed)) aBFu8s_B_BFu16i { unsigned short v1:8; bool v2; unsigned int v3:16; };
struct __attribute__((packed)) aBFu8s_B_BFu16ll { unsigned short v1:8; bool v2; unsigned long long v3:16; };
struct __attribute__((packed)) aBFu8s_B_BFu16s { unsigned short v1:8; bool v2; unsigned short v3:16; };
struct __attribute__((packed)) aBFu8s_B_BFu17i { unsigned short v1:8; bool v2; unsigned int v3:17; };
struct __attribute__((packed)) aBFu8s_B_BFu17ll { unsigned short v1:8; bool v2; unsigned long long v3:17; };
struct __attribute__((packed)) aBFu8s_B_BFu1c { unsigned short v1:8; bool v2; unsigned char v3:1; };
struct __attribute__((packed)) aBFu8s_B_BFu1i { unsigned short v1:8; bool v2; unsigned int v3:1; };
struct __attribute__((packed)) aBFu8s_B_BFu1ll { unsigned short v1:8; bool v2; unsigned long long v3:1; };
struct __attribute__((packed)) aBFu8s_B_BFu1s { unsigned short v1:8; bool v2; unsigned short v3:1; };
struct __attribute__((packed)) aBFu8s_B_BFu31i { unsigned short v1:8; bool v2; unsigned int v3:31; };
struct __attribute__((packed)) aBFu8s_B_BFu31ll { unsigned short v1:8; bool v2; unsigned long long v3:31; };
struct __attribute__((packed)) aBFu8s_B_BFu32i { unsigned short v1:8; bool v2; unsigned int v3:32; };
struct __attribute__((packed)) aBFu8s_B_BFu32ll { unsigned short v1:8; bool v2; unsigned long long v3:32; };
struct __attribute__((packed)) aBFu8s_B_BFu33 { unsigned short v1:8; bool v2; unsigned long long v3:33; };
struct __attribute__((packed)) aBFu8s_B_BFu7c { unsigned short v1:8; bool v2; unsigned char v3:7; };
struct __attribute__((packed)) aBFu8s_B_BFu7i { unsigned short v1:8; bool v2; unsigned int v3:7; };
struct __attribute__((packed)) aBFu8s_B_BFu7ll { unsigned short v1:8; bool v2; unsigned long long v3:7; };
struct __attribute__((packed)) aBFu8s_B_BFu7s { unsigned short v1:8; bool v2; unsigned short v3:7; };
struct __attribute__((packed)) aBFu8s_B_BFu8c { unsigned short v1:8; bool v2; unsigned char v3:8; };
struct __attribute__((packed)) aBFu8s_B_BFu8i { unsigned short v1:8; bool v2; unsigned int v3:8; };
struct __attribute__((packed)) aBFu8s_B_BFu8ll { unsigned short v1:8; bool v2; unsigned long long v3:8; };
struct __attribute__((packed)) aBFu8s_B_BFu8s { unsigned short v1:8; bool v2; unsigned short v3:8; };
struct __attribute__((packed)) aBFu8s_B_BFu9i { unsigned short v1:8; bool v2; unsigned int v3:9; };
struct __attribute__((packed)) aBFu8s_B_BFu9ll { unsigned short v1:8; bool v2; unsigned long long v3:9; };
struct __attribute__((packed)) aBFu8s_B_BFu9s { unsigned short v1:8; bool v2; unsigned short v3:9; };
struct __attribute__((packed)) aBFu8s_B_C { unsigned short v1:8; bool v2; char v3; };
struct __attribute__((packed)) aBFu8s_B_D { unsigned short v1:8; bool v2; double v3; };
struct __attribute__((packed)) aBFu8s_B_F { unsigned short v1:8; bool v2; float v3; };
struct __attribute__((packed)) aBFu8s_B_I { unsigned short v1:8; bool v2; int v3; };
struct __attribute__((packed)) aBFu8s_B_Ip { unsigned short v1:8; bool v2; int * v3; };
struct __attribute__((packed)) aBFu8s_B_L { unsigned short v1:8; bool v2; long long v3; };
struct __attribute__((packed)) aBFu8s_B_S { unsigned short v1:8; bool v2; short v3; };
struct __attribute__((packed)) aBFu8s_B_Uc { unsigned short v1:8; bool v2; unsigned char v3; };
struct __attribute__((packed)) aBFu8s_B_Ui { unsigned short v1:8; bool v2; unsigned int v3; };
struct __attribute__((packed)) aBFu8s_B_Ul { unsigned short v1:8; bool v2; unsigned long long v3; };
struct __attribute__((packed)) aBFu8s_B_Us { unsigned short v1:8; bool v2; unsigned short v3; };
struct __attribute__((packed)) aBFu8s_B_Vp { unsigned short v1:8; bool v2; void * v3; };
struct __attribute__((packed)) aBFu8s_BFu15i_B { unsigned short v1:8; unsigned int v2:15; bool v3; };
struct __attribute__((packed)) aBFu8s_BFu15ll_B { unsigned short v1:8; unsigned long long v2:15; bool v3; };
struct __attribute__((packed)) aBFu8s_BFu15s_B { unsigned short v1:8; unsigned short v2:15; bool v3; };
struct __attribute__((packed)) aBFu8s_BFu16i_B { unsigned short v1:8; unsigned int v2:16; bool v3; };
struct __attribute__((packed)) aBFu8s_BFu16ll_B { unsigned short v1:8; unsigned long long v2:16; bool v3; };
struct __attribute__((packed)) aBFu8s_BFu16s_B { unsigned short v1:8; unsigned short v2:16; bool v3; };
struct __attribute__((packed)) aBFu8s_BFu17i_B { unsigned short v1:8; unsigned int v2:17; bool v3; };
struct __attribute__((packed)) aBFu8s_BFu17ll_B { unsigned short v1:8; unsigned long long v2:17; bool v3; };
struct __attribute__((packed)) aBFu8s_BFu1c_B { unsigned short v1:8; unsigned char v2:1; bool v3; };
struct __attribute__((packed)) aBFu8s_BFu1i_B { unsigned short v1:8; unsigned int v2:1; bool v3; };
struct __attribute__((packed)) aBFu8s_BFu1ll_B { unsigned short v1:8; unsigned long long v2:1; bool v3; };
struct __attribute__((packed)) aBFu8s_BFu1s_B { unsigned short v1:8; unsigned short v2:1; bool v3; };
struct __attribute__((packed)) aBFu8s_BFu31i_B { unsigned short v1:8; unsigned int v2:31; bool v3; };
struct __attribute__((packed)) aBFu8s_BFu31ll_B { unsigned short v1:8; unsigned long long v2:31; bool v3; };
struct __attribute__((packed)) aBFu8s_BFu32i_B { unsigned short v1:8; unsigned int v2:32; bool v3; };
struct __attribute__((packed)) aBFu8s_BFu32ll_B { unsigned short v1:8; unsigned long long v2:32; bool v3; };
struct __attribute__((packed)) aBFu8s_BFu33_B { unsigned short v1:8; unsigned long long v2:33; bool v3; };
struct __attribute__((packed)) aBFu8s_BFu7c_B { unsigned short v1:8; unsigned char v2:7; bool v3; };
struct __attribute__((packed)) aBFu8s_BFu7i_B { unsigned short v1:8; unsigned int v2:7; bool v3; };
struct __attribute__((packed)) aBFu8s_BFu7ll_B { unsigned short v1:8; unsigned long long v2:7; bool v3; };
struct __attribute__((packed)) aBFu8s_BFu7s_B { unsigned short v1:8; unsigned short v2:7; bool v3; };
struct __attribute__((packed)) aBFu8s_BFu8c_B { unsigned short v1:8; unsigned char v2:8; bool v3; };
struct __attribute__((packed)) aBFu8s_BFu8i_B { unsigned short v1:8; unsigned int v2:8; bool v3; };
struct __attribute__((packed)) aBFu8s_BFu8ll_B { unsigned short v1:8; unsigned long long v2:8; bool v3; };
struct __attribute__((packed)) aBFu8s_BFu8s_B { unsigned short v1:8; unsigned short v2:8; bool v3; };
struct __attribute__((packed)) aBFu8s_BFu9i_B { unsigned short v1:8; unsigned int v2:9; bool v3; };
struct __attribute__((packed)) aBFu8s_BFu9ll_B { unsigned short v1:8; unsigned long long v2:9; bool v3; };
struct __attribute__((packed)) aBFu8s_BFu9s_B { unsigned short v1:8; unsigned short v2:9; bool v3; };
struct __attribute__((packed)) aBFu8s_C_B { unsigned short v1:8; char v2; bool v3; };
struct __attribute__((packed)) aBFu8s_D_B { unsigned short v1:8; double v2; bool v3; };
struct __attribute__((packed)) aBFu8s_F_B { unsigned short v1:8; float v2; bool v3; };
struct __attribute__((packed)) aBFu8s_I_B { unsigned short v1:8; int v2; bool v3; };
struct __attribute__((packed)) aBFu8s_Ip_B { unsigned short v1:8; int * v2; bool v3; };
struct __attribute__((packed)) aBFu8s_L_B { unsigned short v1:8; long long v2; bool v3; };
struct __attribute__((packed)) aBFu8s_S_B { unsigned short v1:8; short v2; bool v3; };
struct __attribute__((packed)) aBFu8s_Uc_B { unsigned short v1:8; unsigned char v2; bool v3; };
struct __attribute__((packed)) aBFu8s_Ui_B { unsigned short v1:8; unsigned int v2; bool v3; };
struct __attribute__((packed)) aBFu8s_Ul_B { unsigned short v1:8; unsigned long long v2; bool v3; };
struct __attribute__((packed)) aBFu8s_Us_B { unsigned short v1:8; unsigned short v2; bool v3; };
struct __attribute__((packed)) aBFu8s_Vp_B { unsigned short v1:8; void * v2; bool v3; };
struct __attribute__((packed)) aBFu9i_B { unsigned int v1:9; bool v2; };
struct __attribute__((packed)) aBFu9i_B_B { unsigned int v1:9; bool v2; bool v3; };
struct __attribute__((packed)) aBFu9i_B_BFu15i { unsigned int v1:9; bool v2; unsigned int v3:15; };
struct __attribute__((packed)) aBFu9i_B_BFu15ll { unsigned int v1:9; bool v2; unsigned long long v3:15; };
struct __attribute__((packed)) aBFu9i_B_BFu15s { unsigned int v1:9; bool v2; unsigned short v3:15; };
struct __attribute__((packed)) aBFu9i_B_BFu16i { unsigned int v1:9; bool v2; unsigned int v3:16; };
struct __attribute__((packed)) aBFu9i_B_BFu16ll { unsigned int v1:9; bool v2; unsigned long long v3:16; };
struct __attribute__((packed)) aBFu9i_B_BFu16s { unsigned int v1:9; bool v2; unsigned short v3:16; };
struct __attribute__((packed)) aBFu9i_B_BFu17i { unsigned int v1:9; bool v2; unsigned int v3:17; };
struct __attribute__((packed)) aBFu9i_B_BFu17ll { unsigned int v1:9; bool v2; unsigned long long v3:17; };
struct __attribute__((packed)) aBFu9i_B_BFu1c { unsigned int v1:9; bool v2; unsigned char v3:1; };
struct __attribute__((packed)) aBFu9i_B_BFu1i { unsigned int v1:9; bool v2; unsigned int v3:1; };
struct __attribute__((packed)) aBFu9i_B_BFu1ll { unsigned int v1:9; bool v2; unsigned long long v3:1; };
struct __attribute__((packed)) aBFu9i_B_BFu1s { unsigned int v1:9; bool v2; unsigned short v3:1; };
struct __attribute__((packed)) aBFu9i_B_BFu31i { unsigned int v1:9; bool v2; unsigned int v3:31; };
struct __attribute__((packed)) aBFu9i_B_BFu31ll { unsigned int v1:9; bool v2; unsigned long long v3:31; };
struct __attribute__((packed)) aBFu9i_B_BFu32i { unsigned int v1:9; bool v2; unsigned int v3:32; };
struct __attribute__((packed)) aBFu9i_B_BFu32ll { unsigned int v1:9; bool v2; unsigned long long v3:32; };
struct __attribute__((packed)) aBFu9i_B_BFu33 { unsigned int v1:9; bool v2; unsigned long long v3:33; };
struct __attribute__((packed)) aBFu9i_B_BFu7c { unsigned int v1:9; bool v2; unsigned char v3:7; };
struct __attribute__((packed)) aBFu9i_B_BFu7i { unsigned int v1:9; bool v2; unsigned int v3:7; };
struct __attribute__((packed)) aBFu9i_B_BFu7ll { unsigned int v1:9; bool v2; unsigned long long v3:7; };
struct __attribute__((packed)) aBFu9i_B_BFu7s { unsigned int v1:9; bool v2; unsigned short v3:7; };
struct __attribute__((packed)) aBFu9i_B_BFu8c { unsigned int v1:9; bool v2; unsigned char v3:8; };
struct __attribute__((packed)) aBFu9i_B_BFu8i { unsigned int v1:9; bool v2; unsigned int v3:8; };
struct __attribute__((packed)) aBFu9i_B_BFu8ll { unsigned int v1:9; bool v2; unsigned long long v3:8; };
struct __attribute__((packed)) aBFu9i_B_BFu8s { unsigned int v1:9; bool v2; unsigned short v3:8; };
struct __attribute__((packed)) aBFu9i_B_BFu9i { unsigned int v1:9; bool v2; unsigned int v3:9; };
struct __attribute__((packed)) aBFu9i_B_BFu9ll { unsigned int v1:9; bool v2; unsigned long long v3:9; };
struct __attribute__((packed)) aBFu9i_B_BFu9s { unsigned int v1:9; bool v2; unsigned short v3:9; };
struct __attribute__((packed)) aBFu9i_B_C { unsigned int v1:9; bool v2; char v3; };
struct __attribute__((packed)) aBFu9i_B_D { unsigned int v1:9; bool v2; double v3; };
struct __attribute__((packed)) aBFu9i_B_F { unsigned int v1:9; bool v2; float v3; };
struct __attribute__((packed)) aBFu9i_B_I { unsigned int v1:9; bool v2; int v3; };
struct __attribute__((packed)) aBFu9i_B_Ip { unsigned int v1:9; bool v2; int * v3; };
struct __attribute__((packed)) aBFu9i_B_L { unsigned int v1:9; bool v2; long long v3; };
struct __attribute__((packed)) aBFu9i_B_S { unsigned int v1:9; bool v2; short v3; };
struct __attribute__((packed)) aBFu9i_B_Uc { unsigned int v1:9; bool v2; unsigned char v3; };
struct __attribute__((packed)) aBFu9i_B_Ui { unsigned int v1:9; bool v2; unsigned int v3; };
struct __attribute__((packed)) aBFu9i_B_Ul { unsigned int v1:9; bool v2; unsigned long long v3; };
struct __attribute__((packed)) aBFu9i_B_Us { unsigned int v1:9; bool v2; unsigned short v3; };
struct __attribute__((packed)) aBFu9i_B_Vp { unsigned int v1:9; bool v2; void * v3; };
struct __attribute__((packed)) aBFu9i_BFu15i_B { unsigned int v1:9; unsigned int v2:15; bool v3; };
struct __attribute__((packed)) aBFu9i_BFu15ll_B { unsigned int v1:9; unsigned long long v2:15; bool v3; };
struct __attribute__((packed)) aBFu9i_BFu15s_B { unsigned int v1:9; unsigned short v2:15; bool v3; };
struct __attribute__((packed)) aBFu9i_BFu16i_B { unsigned int v1:9; unsigned int v2:16; bool v3; };
struct __attribute__((packed)) aBFu9i_BFu16ll_B { unsigned int v1:9; unsigned long long v2:16; bool v3; };
struct __attribute__((packed)) aBFu9i_BFu16s_B { unsigned int v1:9; unsigned short v2:16; bool v3; };
struct __attribute__((packed)) aBFu9i_BFu17i_B { unsigned int v1:9; unsigned int v2:17; bool v3; };
struct __attribute__((packed)) aBFu9i_BFu17ll_B { unsigned int v1:9; unsigned long long v2:17; bool v3; };
struct __attribute__((packed)) aBFu9i_BFu1c_B { unsigned int v1:9; unsigned char v2:1; bool v3; };
struct __attribute__((packed)) aBFu9i_BFu1i_B { unsigned int v1:9; unsigned int v2:1; bool v3; };
struct __attribute__((packed)) aBFu9i_BFu1ll_B { unsigned int v1:9; unsigned long long v2:1; bool v3; };
struct __attribute__((packed)) aBFu9i_BFu1s_B { unsigned int v1:9; unsigned short v2:1; bool v3; };
struct __attribute__((packed)) aBFu9i_BFu31i_B { unsigned int v1:9; unsigned int v2:31; bool v3; };
struct __attribute__((packed)) aBFu9i_BFu31ll_B { unsigned int v1:9; unsigned long long v2:31; bool v3; };
struct __attribute__((packed)) aBFu9i_BFu32i_B { unsigned int v1:9; unsigned int v2:32; bool v3; };
struct __attribute__((packed)) aBFu9i_BFu32ll_B { unsigned int v1:9; unsigned long long v2:32; bool v3; };
struct __attribute__((packed)) aBFu9i_BFu33_B { unsigned int v1:9; unsigned long long v2:33; bool v3; };
struct __attribute__((packed)) aBFu9i_BFu7c_B { unsigned int v1:9; unsigned char v2:7; bool v3; };
struct __attribute__((packed)) aBFu9i_BFu7i_B { unsigned int v1:9; unsigned int v2:7; bool v3; };
struct __attribute__((packed)) aBFu9i_BFu7ll_B { unsigned int v1:9; unsigned long long v2:7; bool v3; };
struct __attribute__((packed)) aBFu9i_BFu7s_B { unsigned int v1:9; unsigned short v2:7; bool v3; };
struct __attribute__((packed)) aBFu9i_BFu8c_B { unsigned int v1:9; unsigned char v2:8; bool v3; };
struct __attribute__((packed)) aBFu9i_BFu8i_B { unsigned int v1:9; unsigned int v2:8; bool v3; };
struct __attribute__((packed)) aBFu9i_BFu8ll_B { unsigned int v1:9; unsigned long long v2:8; bool v3; };
struct __attribute__((packed)) aBFu9i_BFu8s_B { unsigned int v1:9; unsigned short v2:8; bool v3; };
struct __attribute__((packed)) aBFu9i_BFu9i_B { unsigned int v1:9; unsigned int v2:9; bool v3; };
struct __attribute__((packed)) aBFu9i_BFu9ll_B { unsigned int v1:9; unsigned long long v2:9; bool v3; };
struct __attribute__((packed)) aBFu9i_BFu9s_B { unsigned int v1:9; unsigned short v2:9; bool v3; };
struct __attribute__((packed)) aBFu9i_C_B { unsigned int v1:9; char v2; bool v3; };
struct __attribute__((packed)) aBFu9i_D_B { unsigned int v1:9; double v2; bool v3; };
struct __attribute__((packed)) aBFu9i_F_B { unsigned int v1:9; float v2; bool v3; };
struct __attribute__((packed)) aBFu9i_I_B { unsigned int v1:9; int v2; bool v3; };
struct __attribute__((packed)) aBFu9i_Ip_B { unsigned int v1:9; int * v2; bool v3; };
struct __attribute__((packed)) aBFu9i_L_B { unsigned int v1:9; long long v2; bool v3; };
struct __attribute__((packed)) aBFu9i_S_B { unsigned int v1:9; short v2; bool v3; };
struct __attribute__((packed)) aBFu9i_Uc_B { unsigned int v1:9; unsigned char v2; bool v3; };
struct __attribute__((packed)) aBFu9i_Ui_B { unsigned int v1:9; unsigned int v2; bool v3; };
struct __attribute__((packed)) aBFu9i_Ul_B { unsigned int v1:9; unsigned long long v2; bool v3; };
struct __attribute__((packed)) aBFu9i_Us_B { unsigned int v1:9; unsigned short v2; bool v3; };
struct __attribute__((packed)) aBFu9i_Vp_B { unsigned int v1:9; void * v2; bool v3; };
struct __attribute__((packed)) aBFu9ll_B { unsigned long long v1:9; bool v2; };
struct __attribute__((packed)) aBFu9ll_B_B { unsigned long long v1:9; bool v2; bool v3; };
struct __attribute__((packed)) aBFu9ll_B_BFu15i { unsigned long long v1:9; bool v2; unsigned int v3:15; };
struct __attribute__((packed)) aBFu9ll_B_BFu15ll { unsigned long long v1:9; bool v2; unsigned long long v3:15; };
struct __attribute__((packed)) aBFu9ll_B_BFu15s { unsigned long long v1:9; bool v2; unsigned short v3:15; };
struct __attribute__((packed)) aBFu9ll_B_BFu16i { unsigned long long v1:9; bool v2; unsigned int v3:16; };
struct __attribute__((packed)) aBFu9ll_B_BFu16ll { unsigned long long v1:9; bool v2; unsigned long long v3:16; };
struct __attribute__((packed)) aBFu9ll_B_BFu16s { unsigned long long v1:9; bool v2; unsigned short v3:16; };
struct __attribute__((packed)) aBFu9ll_B_BFu17i { unsigned long long v1:9; bool v2; unsigned int v3:17; };
struct __attribute__((packed)) aBFu9ll_B_BFu17ll { unsigned long long v1:9; bool v2; unsigned long long v3:17; };
struct __attribute__((packed)) aBFu9ll_B_BFu1c { unsigned long long v1:9; bool v2; unsigned char v3:1; };
struct __attribute__((packed)) aBFu9ll_B_BFu1i { unsigned long long v1:9; bool v2; unsigned int v3:1; };
struct __attribute__((packed)) aBFu9ll_B_BFu1ll { unsigned long long v1:9; bool v2; unsigned long long v3:1; };
struct __attribute__((packed)) aBFu9ll_B_BFu1s { unsigned long long v1:9; bool v2; unsigned short v3:1; };
struct __attribute__((packed)) aBFu9ll_B_BFu31i { unsigned long long v1:9; bool v2; unsigned int v3:31; };
struct __attribute__((packed)) aBFu9ll_B_BFu31ll { unsigned long long v1:9; bool v2; unsigned long long v3:31; };
struct __attribute__((packed)) aBFu9ll_B_BFu32i { unsigned long long v1:9; bool v2; unsigned int v3:32; };
struct __attribute__((packed)) aBFu9ll_B_BFu32ll { unsigned long long v1:9; bool v2; unsigned long long v3:32; };
struct __attribute__((packed)) aBFu9ll_B_BFu33 { unsigned long long v1:9; bool v2; unsigned long long v3:33; };
struct __attribute__((packed)) aBFu9ll_B_BFu7c { unsigned long long v1:9; bool v2; unsigned char v3:7; };
struct __attribute__((packed)) aBFu9ll_B_BFu7i { unsigned long long v1:9; bool v2; unsigned int v3:7; };
struct __attribute__((packed)) aBFu9ll_B_BFu7ll { unsigned long long v1:9; bool v2; unsigned long long v3:7; };
struct __attribute__((packed)) aBFu9ll_B_BFu7s { unsigned long long v1:9; bool v2; unsigned short v3:7; };
struct __attribute__((packed)) aBFu9ll_B_BFu8c { unsigned long long v1:9; bool v2; unsigned char v3:8; };
struct __attribute__((packed)) aBFu9ll_B_BFu8i { unsigned long long v1:9; bool v2; unsigned int v3:8; };
struct __attribute__((packed)) aBFu9ll_B_BFu8ll { unsigned long long v1:9; bool v2; unsigned long long v3:8; };
struct __attribute__((packed)) aBFu9ll_B_BFu8s { unsigned long long v1:9; bool v2; unsigned short v3:8; };
struct __attribute__((packed)) aBFu9ll_B_BFu9i { unsigned long long v1:9; bool v2; unsigned int v3:9; };
struct __attribute__((packed)) aBFu9ll_B_BFu9ll { unsigned long long v1:9; bool v2; unsigned long long v3:9; };
struct __attribute__((packed)) aBFu9ll_B_BFu9s { unsigned long long v1:9; bool v2; unsigned short v3:9; };
struct __attribute__((packed)) aBFu9ll_B_C { unsigned long long v1:9; bool v2; char v3; };
struct __attribute__((packed)) aBFu9ll_B_D { unsigned long long v1:9; bool v2; double v3; };
struct __attribute__((packed)) aBFu9ll_B_F { unsigned long long v1:9; bool v2; float v3; };
struct __attribute__((packed)) aBFu9ll_B_I { unsigned long long v1:9; bool v2; int v3; };
struct __attribute__((packed)) aBFu9ll_B_Ip { unsigned long long v1:9; bool v2; int * v3; };
struct __attribute__((packed)) aBFu9ll_B_L { unsigned long long v1:9; bool v2; long long v3; };
struct __attribute__((packed)) aBFu9ll_B_S { unsigned long long v1:9; bool v2; short v3; };
struct __attribute__((packed)) aBFu9ll_B_Uc { unsigned long long v1:9; bool v2; unsigned char v3; };
struct __attribute__((packed)) aBFu9ll_B_Ui { unsigned long long v1:9; bool v2; unsigned int v3; };
struct __attribute__((packed)) aBFu9ll_B_Ul { unsigned long long v1:9; bool v2; unsigned long long v3; };
struct __attribute__((packed)) aBFu9ll_B_Us { unsigned long long v1:9; bool v2; unsigned short v3; };
struct __attribute__((packed)) aBFu9ll_B_Vp { unsigned long long v1:9; bool v2; void * v3; };
struct __attribute__((packed)) aBFu9ll_BFu15i_B { unsigned long long v1:9; unsigned int v2:15; bool v3; };
struct __attribute__((packed)) aBFu9ll_BFu15ll_B { unsigned long long v1:9; unsigned long long v2:15; bool v3; };
struct __attribute__((packed)) aBFu9ll_BFu15s_B { unsigned long long v1:9; unsigned short v2:15; bool v3; };
struct __attribute__((packed)) aBFu9ll_BFu16i_B { unsigned long long v1:9; unsigned int v2:16; bool v3; };
struct __attribute__((packed)) aBFu9ll_BFu16ll_B { unsigned long long v1:9; unsigned long long v2:16; bool v3; };
struct __attribute__((packed)) aBFu9ll_BFu16s_B { unsigned long long v1:9; unsigned short v2:16; bool v3; };
struct __attribute__((packed)) aBFu9ll_BFu17i_B { unsigned long long v1:9; unsigned int v2:17; bool v3; };
struct __attribute__((packed)) aBFu9ll_BFu17ll_B { unsigned long long v1:9; unsigned long long v2:17; bool v3; };
struct __attribute__((packed)) aBFu9ll_BFu1c_B { unsigned long long v1:9; unsigned char v2:1; bool v3; };
struct __attribute__((packed)) aBFu9ll_BFu1i_B { unsigned long long v1:9; unsigned int v2:1; bool v3; };
struct __attribute__((packed)) aBFu9ll_BFu1ll_B { unsigned long long v1:9; unsigned long long v2:1; bool v3; };
struct __attribute__((packed)) aBFu9ll_BFu1s_B { unsigned long long v1:9; unsigned short v2:1; bool v3; };
struct __attribute__((packed)) aBFu9ll_BFu31i_B { unsigned long long v1:9; unsigned int v2:31; bool v3; };
struct __attribute__((packed)) aBFu9ll_BFu31ll_B { unsigned long long v1:9; unsigned long long v2:31; bool v3; };
struct __attribute__((packed)) aBFu9ll_BFu32i_B { unsigned long long v1:9; unsigned int v2:32; bool v3; };
struct __attribute__((packed)) aBFu9ll_BFu32ll_B { unsigned long long v1:9; unsigned long long v2:32; bool v3; };
struct __attribute__((packed)) aBFu9ll_BFu33_B { unsigned long long v1:9; unsigned long long v2:33; bool v3; };
struct __attribute__((packed)) aBFu9ll_BFu7c_B { unsigned long long v1:9; unsigned char v2:7; bool v3; };
struct __attribute__((packed)) aBFu9ll_BFu7i_B { unsigned long long v1:9; unsigned int v2:7; bool v3; };
struct __attribute__((packed)) aBFu9ll_BFu7ll_B { unsigned long long v1:9; unsigned long long v2:7; bool v3; };
struct __attribute__((packed)) aBFu9ll_BFu7s_B { unsigned long long v1:9; unsigned short v2:7; bool v3; };
struct __attribute__((packed)) aBFu9ll_BFu8c_B { unsigned long long v1:9; unsigned char v2:8; bool v3; };
struct __attribute__((packed)) aBFu9ll_BFu8i_B { unsigned long long v1:9; unsigned int v2:8; bool v3; };
struct __attribute__((packed)) aBFu9ll_BFu8ll_B { unsigned long long v1:9; unsigned long long v2:8; bool v3; };
struct __attribute__((packed)) aBFu9ll_BFu8s_B { unsigned long long v1:9; unsigned short v2:8; bool v3; };
struct __attribute__((packed)) aBFu9ll_BFu9i_B { unsigned long long v1:9; unsigned int v2:9; bool v3; };
struct __attribute__((packed)) aBFu9ll_BFu9ll_B { unsigned long long v1:9; unsigned long long v2:9; bool v3; };
struct __attribute__((packed)) aBFu9ll_BFu9s_B { unsigned long long v1:9; unsigned short v2:9; bool v3; };
struct __attribute__((packed)) aBFu9ll_C_B { unsigned long long v1:9; char v2; bool v3; };
struct __attribute__((packed)) aBFu9ll_D_B { unsigned long long v1:9; double v2; bool v3; };
struct __attribute__((packed)) aBFu9ll_F_B { unsigned long long v1:9; float v2; bool v3; };
struct __attribute__((packed)) aBFu9ll_I_B { unsigned long long v1:9; int v2; bool v3; };
struct __attribute__((packed)) aBFu9ll_Ip_B { unsigned long long v1:9; int * v2; bool v3; };
struct __attribute__((packed)) aBFu9ll_L_B { unsigned long long v1:9; long long v2; bool v3; };
struct __attribute__((packed)) aBFu9ll_S_B { unsigned long long v1:9; short v2; bool v3; };
struct __attribute__((packed)) aBFu9ll_Uc_B { unsigned long long v1:9; unsigned char v2; bool v3; };
struct __attribute__((packed)) aBFu9ll_Ui_B { unsigned long long v1:9; unsigned int v2; bool v3; };
struct __attribute__((packed)) aBFu9ll_Ul_B { unsigned long long v1:9; unsigned long long v2; bool v3; };
struct __attribute__((packed)) aBFu9ll_Us_B { unsigned long long v1:9; unsigned short v2; bool v3; };
struct __attribute__((packed)) aBFu9ll_Vp_B { unsigned long long v1:9; void * v2; bool v3; };
struct __attribute__((packed)) aBFu9s_B { unsigned short v1:9; bool v2; };
struct __attribute__((packed)) aBFu9s_B_B { unsigned short v1:9; bool v2; bool v3; };
struct __attribute__((packed)) aBFu9s_B_BFu15i { unsigned short v1:9; bool v2; unsigned int v3:15; };
struct __attribute__((packed)) aBFu9s_B_BFu15ll { unsigned short v1:9; bool v2; unsigned long long v3:15; };
struct __attribute__((packed)) aBFu9s_B_BFu15s { unsigned short v1:9; bool v2; unsigned short v3:15; };
struct __attribute__((packed)) aBFu9s_B_BFu16i { unsigned short v1:9; bool v2; unsigned int v3:16; };
struct __attribute__((packed)) aBFu9s_B_BFu16ll { unsigned short v1:9; bool v2; unsigned long long v3:16; };
struct __attribute__((packed)) aBFu9s_B_BFu16s { unsigned short v1:9; bool v2; unsigned short v3:16; };
struct __attribute__((packed)) aBFu9s_B_BFu17i { unsigned short v1:9; bool v2; unsigned int v3:17; };
struct __attribute__((packed)) aBFu9s_B_BFu17ll { unsigned short v1:9; bool v2; unsigned long long v3:17; };
struct __attribute__((packed)) aBFu9s_B_BFu1c { unsigned short v1:9; bool v2; unsigned char v3:1; };
struct __attribute__((packed)) aBFu9s_B_BFu1i { unsigned short v1:9; bool v2; unsigned int v3:1; };
struct __attribute__((packed)) aBFu9s_B_BFu1ll { unsigned short v1:9; bool v2; unsigned long long v3:1; };
struct __attribute__((packed)) aBFu9s_B_BFu1s { unsigned short v1:9; bool v2; unsigned short v3:1; };
struct __attribute__((packed)) aBFu9s_B_BFu31i { unsigned short v1:9; bool v2; unsigned int v3:31; };
struct __attribute__((packed)) aBFu9s_B_BFu31ll { unsigned short v1:9; bool v2; unsigned long long v3:31; };
struct __attribute__((packed)) aBFu9s_B_BFu32i { unsigned short v1:9; bool v2; unsigned int v3:32; };
struct __attribute__((packed)) aBFu9s_B_BFu32ll { unsigned short v1:9; bool v2; unsigned long long v3:32; };
struct __attribute__((packed)) aBFu9s_B_BFu33 { unsigned short v1:9; bool v2; unsigned long long v3:33; };
struct __attribute__((packed)) aBFu9s_B_BFu7c { unsigned short v1:9; bool v2; unsigned char v3:7; };
struct __attribute__((packed)) aBFu9s_B_BFu7i { unsigned short v1:9; bool v2; unsigned int v3:7; };
struct __attribute__((packed)) aBFu9s_B_BFu7ll { unsigned short v1:9; bool v2; unsigned long long v3:7; };
struct __attribute__((packed)) aBFu9s_B_BFu7s { unsigned short v1:9; bool v2; unsigned short v3:7; };
struct __attribute__((packed)) aBFu9s_B_BFu8c { unsigned short v1:9; bool v2; unsigned char v3:8; };
struct __attribute__((packed)) aBFu9s_B_BFu8i { unsigned short v1:9; bool v2; unsigned int v3:8; };
struct __attribute__((packed)) aBFu9s_B_BFu8ll { unsigned short v1:9; bool v2; unsigned long long v3:8; };
struct __attribute__((packed)) aBFu9s_B_BFu8s { unsigned short v1:9; bool v2; unsigned short v3:8; };
struct __attribute__((packed)) aBFu9s_B_BFu9i { unsigned short v1:9; bool v2; unsigned int v3:9; };
struct __attribute__((packed)) aBFu9s_B_BFu9ll { unsigned short v1:9; bool v2; unsigned long long v3:9; };
struct __attribute__((packed)) aBFu9s_B_BFu9s { unsigned short v1:9; bool v2; unsigned short v3:9; };
struct __attribute__((packed)) aBFu9s_B_C { unsigned short v1:9; bool v2; char v3; };
struct __attribute__((packed)) aBFu9s_B_D { unsigned short v1:9; bool v2; double v3; };
struct __attribute__((packed)) aBFu9s_B_F { unsigned short v1:9; bool v2; float v3; };
struct __attribute__((packed)) aBFu9s_B_I { unsigned short v1:9; bool v2; int v3; };
struct __attribute__((packed)) aBFu9s_B_Ip { unsigned short v1:9; bool v2; int * v3; };
struct __attribute__((packed)) aBFu9s_B_L { unsigned short v1:9; bool v2; long long v3; };
struct __attribute__((packed)) aBFu9s_B_S { unsigned short v1:9; bool v2; short v3; };
struct __attribute__((packed)) aBFu9s_B_Uc { unsigned short v1:9; bool v2; unsigned char v3; };
struct __attribute__((packed)) aBFu9s_B_Ui { unsigned short v1:9; bool v2; unsigned int v3; };
struct __attribute__((packed)) aBFu9s_B_Ul { unsigned short v1:9; bool v2; unsigned long long v3; };
struct __attribute__((packed)) aBFu9s_B_Us { unsigned short v1:9; bool v2; unsigned short v3; };
struct __attribute__((packed)) aBFu9s_B_Vp { unsigned short v1:9; bool v2; void * v3; };
struct __attribute__((packed)) aBFu9s_BFu15i_B { unsigned short v1:9; unsigned int v2:15; bool v3; };
struct __attribute__((packed)) aBFu9s_BFu15ll_B { unsigned short v1:9; unsigned long long v2:15; bool v3; };
struct __attribute__((packed)) aBFu9s_BFu15s_B { unsigned short v1:9; unsigned short v2:15; bool v3; };
struct __attribute__((packed)) aBFu9s_BFu16i_B { unsigned short v1:9; unsigned int v2:16; bool v3; };
struct __attribute__((packed)) aBFu9s_BFu16ll_B { unsigned short v1:9; unsigned long long v2:16; bool v3; };
struct __attribute__((packed)) aBFu9s_BFu16s_B { unsigned short v1:9; unsigned short v2:16; bool v3; };
struct __attribute__((packed)) aBFu9s_BFu17i_B { unsigned short v1:9; unsigned int v2:17; bool v3; };
struct __attribute__((packed)) aBFu9s_BFu17ll_B { unsigned short v1:9; unsigned long long v2:17; bool v3; };
struct __attribute__((packed)) aBFu9s_BFu1c_B { unsigned short v1:9; unsigned char v2:1; bool v3; };
struct __attribute__((packed)) aBFu9s_BFu1i_B { unsigned short v1:9; unsigned int v2:1; bool v3; };
struct __attribute__((packed)) aBFu9s_BFu1ll_B { unsigned short v1:9; unsigned long long v2:1; bool v3; };
struct __attribute__((packed)) aBFu9s_BFu1s_B { unsigned short v1:9; unsigned short v2:1; bool v3; };
struct __attribute__((packed)) aBFu9s_BFu31i_B { unsigned short v1:9; unsigned int v2:31; bool v3; };
struct __attribute__((packed)) aBFu9s_BFu31ll_B { unsigned short v1:9; unsigned long long v2:31; bool v3; };
struct __attribute__((packed)) aBFu9s_BFu32i_B { unsigned short v1:9; unsigned int v2:32; bool v3; };
struct __attribute__((packed)) aBFu9s_BFu32ll_B { unsigned short v1:9; unsigned long long v2:32; bool v3; };
struct __attribute__((packed)) aBFu9s_BFu33_B { unsigned short v1:9; unsigned long long v2:33; bool v3; };
struct __attribute__((packed)) aBFu9s_BFu7c_B { unsigned short v1:9; unsigned char v2:7; bool v3; };
struct __attribute__((packed)) aBFu9s_BFu7i_B { unsigned short v1:9; unsigned int v2:7; bool v3; };
struct __attribute__((packed)) aBFu9s_BFu7ll_B { unsigned short v1:9; unsigned long long v2:7; bool v3; };
struct __attribute__((packed)) aBFu9s_BFu7s_B { unsigned short v1:9; unsigned short v2:7; bool v3; };
struct __attribute__((packed)) aBFu9s_BFu8c_B { unsigned short v1:9; unsigned char v2:8; bool v3; };
struct __attribute__((packed)) aBFu9s_BFu8i_B { unsigned short v1:9; unsigned int v2:8; bool v3; };
struct __attribute__((packed)) aBFu9s_BFu8ll_B { unsigned short v1:9; unsigned long long v2:8; bool v3; };
struct __attribute__((packed)) aBFu9s_BFu8s_B { unsigned short v1:9; unsigned short v2:8; bool v3; };
struct __attribute__((packed)) aBFu9s_BFu9i_B { unsigned short v1:9; unsigned int v2:9; bool v3; };
struct __attribute__((packed)) aBFu9s_BFu9ll_B { unsigned short v1:9; unsigned long long v2:9; bool v3; };
struct __attribute__((packed)) aBFu9s_BFu9s_B { unsigned short v1:9; unsigned short v2:9; bool v3; };
struct __attribute__((packed)) aBFu9s_C_B { unsigned short v1:9; char v2; bool v3; };
struct __attribute__((packed)) aBFu9s_D_B { unsigned short v1:9; double v2; bool v3; };
struct __attribute__((packed)) aBFu9s_F_B { unsigned short v1:9; float v2; bool v3; };
struct __attribute__((packed)) aBFu9s_I_B { unsigned short v1:9; int v2; bool v3; };
struct __attribute__((packed)) aBFu9s_Ip_B { unsigned short v1:9; int * v2; bool v3; };
struct __attribute__((packed)) aBFu9s_L_B { unsigned short v1:9; long long v2; bool v3; };
struct __attribute__((packed)) aBFu9s_S_B { unsigned short v1:9; short v2; bool v3; };
struct __attribute__((packed)) aBFu9s_Uc_B { unsigned short v1:9; unsigned char v2; bool v3; };
struct __attribute__((packed)) aBFu9s_Ui_B { unsigned short v1:9; unsigned int v2; bool v3; };
struct __attribute__((packed)) aBFu9s_Ul_B { unsigned short v1:9; unsigned long long v2; bool v3; };
struct __attribute__((packed)) aBFu9s_Us_B { unsigned short v1:9; unsigned short v2; bool v3; };
struct __attribute__((packed)) aBFu9s_Vp_B { unsigned short v1:9; void * v2; bool v3; };
struct __attribute__((packed)) aC_B { char v1; bool v2; };
struct __attribute__((packed)) aC_B_B { char v1; bool v2; bool v3; };
struct __attribute__((packed)) aC_B_BFu15i { char v1; bool v2; unsigned int v3:15; };
struct __attribute__((packed)) aC_B_BFu15ll { char v1; bool v2; unsigned long long v3:15; };
struct __attribute__((packed)) aC_B_BFu15s { char v1; bool v2; unsigned short v3:15; };
struct __attribute__((packed)) aC_B_BFu16i { char v1; bool v2; unsigned int v3:16; };
struct __attribute__((packed)) aC_B_BFu16ll { char v1; bool v2; unsigned long long v3:16; };
struct __attribute__((packed)) aC_B_BFu16s { char v1; bool v2; unsigned short v3:16; };
struct __attribute__((packed)) aC_B_BFu17i { char v1; bool v2; unsigned int v3:17; };
struct __attribute__((packed)) aC_B_BFu17ll { char v1; bool v2; unsigned long long v3:17; };
struct __attribute__((packed)) aC_B_BFu1c { char v1; bool v2; unsigned char v3:1; };
struct __attribute__((packed)) aC_B_BFu1i { char v1; bool v2; unsigned int v3:1; };
struct __attribute__((packed)) aC_B_BFu1ll { char v1; bool v2; unsigned long long v3:1; };
struct __attribute__((packed)) aC_B_BFu1s { char v1; bool v2; unsigned short v3:1; };
struct __attribute__((packed)) aC_B_BFu31i { char v1; bool v2; unsigned int v3:31; };
struct __attribute__((packed)) aC_B_BFu31ll { char v1; bool v2; unsigned long long v3:31; };
struct __attribute__((packed)) aC_B_BFu32i { char v1; bool v2; unsigned int v3:32; };
struct __attribute__((packed)) aC_B_BFu32ll { char v1; bool v2; unsigned long long v3:32; };
struct __attribute__((packed)) aC_B_BFu33 { char v1; bool v2; unsigned long long v3:33; };
struct __attribute__((packed)) aC_B_BFu7c { char v1; bool v2; unsigned char v3:7; };
struct __attribute__((packed)) aC_B_BFu7i { char v1; bool v2; unsigned int v3:7; };
struct __attribute__((packed)) aC_B_BFu7ll { char v1; bool v2; unsigned long long v3:7; };
struct __attribute__((packed)) aC_B_BFu7s { char v1; bool v2; unsigned short v3:7; };
struct __attribute__((packed)) aC_B_BFu8c { char v1; bool v2; unsigned char v3:8; };
struct __attribute__((packed)) aC_B_BFu8i { char v1; bool v2; unsigned int v3:8; };
struct __attribute__((packed)) aC_B_BFu8ll { char v1; bool v2; unsigned long long v3:8; };
struct __attribute__((packed)) aC_B_BFu8s { char v1; bool v2; unsigned short v3:8; };
struct __attribute__((packed)) aC_B_BFu9i { char v1; bool v2; unsigned int v3:9; };
struct __attribute__((packed)) aC_B_BFu9ll { char v1; bool v2; unsigned long long v3:9; };
struct __attribute__((packed)) aC_B_BFu9s { char v1; bool v2; unsigned short v3:9; };
struct __attribute__((packed)) aC_B_C { char v1; bool v2; char v3; };
struct __attribute__((packed)) aC_B_D { char v1; bool v2; double v3; };
struct __attribute__((packed)) aC_B_F { char v1; bool v2; float v3; };
struct __attribute__((packed)) aC_B_I { char v1; bool v2; int v3; };
struct __attribute__((packed)) aC_B_Ip { char v1; bool v2; int * v3; };
struct __attribute__((packed)) aC_B_L { char v1; bool v2; long long v3; };
struct __attribute__((packed)) aC_B_S { char v1; bool v2; short v3; };
struct __attribute__((packed)) aC_B_Uc { char v1; bool v2; unsigned char v3; };
struct __attribute__((packed)) aC_B_Ui { char v1; bool v2; unsigned int v3; };
struct __attribute__((packed)) aC_B_Ul { char v1; bool v2; unsigned long long v3; };
struct __attribute__((packed)) aC_B_Us { char v1; bool v2; unsigned short v3; };
struct __attribute__((packed)) aC_B_Vp { char v1; bool v2; void * v3; };
struct __attribute__((packed)) aC_BFu15i_B { char v1; unsigned int v2:15; bool v3; };
struct __attribute__((packed)) aC_BFu15ll_B { char v1; unsigned long long v2:15; bool v3; };
struct __attribute__((packed)) aC_BFu15s_B { char v1; unsigned short v2:15; bool v3; };
struct __attribute__((packed)) aC_BFu16i_B { char v1; unsigned int v2:16; bool v3; };
struct __attribute__((packed)) aC_BFu16ll_B { char v1; unsigned long long v2:16; bool v3; };
struct __attribute__((packed)) aC_BFu16s_B { char v1; unsigned short v2:16; bool v3; };
struct __attribute__((packed)) aC_BFu17i_B { char v1; unsigned int v2:17; bool v3; };
struct __attribute__((packed)) aC_BFu17ll_B { char v1; unsigned long long v2:17; bool v3; };
struct __attribute__((packed)) aC_BFu1c_B { char v1; unsigned char v2:1; bool v3; };
struct __attribute__((packed)) aC_BFu1i_B { char v1; unsigned int v2:1; bool v3; };
struct __attribute__((packed)) aC_BFu1ll_B { char v1; unsigned long long v2:1; bool v3; };
struct __attribute__((packed)) aC_BFu1s_B { char v1; unsigned short v2:1; bool v3; };
struct __attribute__((packed)) aC_BFu31i_B { char v1; unsigned int v2:31; bool v3; };
struct __attribute__((packed)) aC_BFu31ll_B { char v1; unsigned long long v2:31; bool v3; };
struct __attribute__((packed)) aC_BFu32i_B { char v1; unsigned int v2:32; bool v3; };
struct __attribute__((packed)) aC_BFu32ll_B { char v1; unsigned long long v2:32; bool v3; };
struct __attribute__((packed)) aC_BFu33_B { char v1; unsigned long long v2:33; bool v3; };
struct __attribute__((packed)) aC_BFu7c_B { char v1; unsigned char v2:7; bool v3; };
struct __attribute__((packed)) aC_BFu7i_B { char v1; unsigned int v2:7; bool v3; };
struct __attribute__((packed)) aC_BFu7ll_B { char v1; unsigned long long v2:7; bool v3; };
struct __attribute__((packed)) aC_BFu7s_B { char v1; unsigned short v2:7; bool v3; };
struct __attribute__((packed)) aC_BFu8c_B { char v1; unsigned char v2:8; bool v3; };
struct __attribute__((packed)) aC_BFu8i_B { char v1; unsigned int v2:8; bool v3; };
struct __attribute__((packed)) aC_BFu8ll_B { char v1; unsigned long long v2:8; bool v3; };
struct __attribute__((packed)) aC_BFu8s_B { char v1; unsigned short v2:8; bool v3; };
struct __attribute__((packed)) aC_BFu9i_B { char v1; unsigned int v2:9; bool v3; };
struct __attribute__((packed)) aC_BFu9ll_B { char v1; unsigned long long v2:9; bool v3; };
struct __attribute__((packed)) aC_BFu9s_B { char v1; unsigned short v2:9; bool v3; };
struct __attribute__((packed)) aC_C_B { char v1; char v2; bool v3; };
struct __attribute__((packed)) aC_D_B { char v1; double v2; bool v3; };
struct __attribute__((packed)) aC_F_B { char v1; float v2; bool v3; };
struct __attribute__((packed)) aC_I_B { char v1; int v2; bool v3; };
struct __attribute__((packed)) aC_Ip_B { char v1; int * v2; bool v3; };
struct __attribute__((packed)) aC_L_B { char v1; long long v2; bool v3; };
struct __attribute__((packed)) aC_S_B { char v1; short v2; bool v3; };
struct __attribute__((packed)) aC_Uc_B { char v1; unsigned char v2; bool v3; };
struct __attribute__((packed)) aC_Ui_B { char v1; unsigned int v2; bool v3; };
struct __attribute__((packed)) aC_Ul_B { char v1; unsigned long long v2; bool v3; };
struct __attribute__((packed)) aC_Us_B { char v1; unsigned short v2; bool v3; };
struct __attribute__((packed)) aC_Vp_B { char v1; void * v2; bool v3; };
struct __attribute__((packed)) aD_B { double v1; bool v2; };
struct __attribute__((packed)) aD_B_B { double v1; bool v2; bool v3; };
struct __attribute__((packed)) aD_B_BFu15i { double v1; bool v2; unsigned int v3:15; };
struct __attribute__((packed)) aD_B_BFu15ll { double v1; bool v2; unsigned long long v3:15; };
struct __attribute__((packed)) aD_B_BFu15s { double v1; bool v2; unsigned short v3:15; };
struct __attribute__((packed)) aD_B_BFu16i { double v1; bool v2; unsigned int v3:16; };
struct __attribute__((packed)) aD_B_BFu16ll { double v1; bool v2; unsigned long long v3:16; };
struct __attribute__((packed)) aD_B_BFu16s { double v1; bool v2; unsigned short v3:16; };
struct __attribute__((packed)) aD_B_BFu17i { double v1; bool v2; unsigned int v3:17; };
struct __attribute__((packed)) aD_B_BFu17ll { double v1; bool v2; unsigned long long v3:17; };
struct __attribute__((packed)) aD_B_BFu1c { double v1; bool v2; unsigned char v3:1; };
struct __attribute__((packed)) aD_B_BFu1i { double v1; bool v2; unsigned int v3:1; };
struct __attribute__((packed)) aD_B_BFu1ll { double v1; bool v2; unsigned long long v3:1; };
struct __attribute__((packed)) aD_B_BFu1s { double v1; bool v2; unsigned short v3:1; };
struct __attribute__((packed)) aD_B_BFu31i { double v1; bool v2; unsigned int v3:31; };
struct __attribute__((packed)) aD_B_BFu31ll { double v1; bool v2; unsigned long long v3:31; };
struct __attribute__((packed)) aD_B_BFu32i { double v1; bool v2; unsigned int v3:32; };
struct __attribute__((packed)) aD_B_BFu32ll { double v1; bool v2; unsigned long long v3:32; };
struct __attribute__((packed)) aD_B_BFu33 { double v1; bool v2; unsigned long long v3:33; };
struct __attribute__((packed)) aD_B_BFu7c { double v1; bool v2; unsigned char v3:7; };
struct __attribute__((packed)) aD_B_BFu7i { double v1; bool v2; unsigned int v3:7; };
struct __attribute__((packed)) aD_B_BFu7ll { double v1; bool v2; unsigned long long v3:7; };
struct __attribute__((packed)) aD_B_BFu7s { double v1; bool v2; unsigned short v3:7; };
struct __attribute__((packed)) aD_B_BFu8c { double v1; bool v2; unsigned char v3:8; };
struct __attribute__((packed)) aD_B_BFu8i { double v1; bool v2; unsigned int v3:8; };
struct __attribute__((packed)) aD_B_BFu8ll { double v1; bool v2; unsigned long long v3:8; };
struct __attribute__((packed)) aD_B_BFu8s { double v1; bool v2; unsigned short v3:8; };
struct __attribute__((packed)) aD_B_BFu9i { double v1; bool v2; unsigned int v3:9; };
struct __attribute__((packed)) aD_B_BFu9ll { double v1; bool v2; unsigned long long v3:9; };
struct __attribute__((packed)) aD_B_BFu9s { double v1; bool v2; unsigned short v3:9; };
struct __attribute__((packed)) aD_B_C { double v1; bool v2; char v3; };
struct __attribute__((packed)) aD_B_D { double v1; bool v2; double v3; };
struct __attribute__((packed)) aD_B_F { double v1; bool v2; float v3; };
struct __attribute__((packed)) aD_B_I { double v1; bool v2; int v3; };
struct __attribute__((packed)) aD_B_Ip { double v1; bool v2; int * v3; };
struct __attribute__((packed)) aD_B_L { double v1; bool v2; long long v3; };
struct __attribute__((packed)) aD_B_S { double v1; bool v2; short v3; };
struct __attribute__((packed)) aD_B_Uc { double v1; bool v2; unsigned char v3; };
struct __attribute__((packed)) aD_B_Ui { double v1; bool v2; unsigned int v3; };
struct __attribute__((packed)) aD_B_Ul { double v1; bool v2; unsigned long long v3; };
struct __attribute__((packed)) aD_B_Us { double v1; bool v2; unsigned short v3; };
struct __attribute__((packed)) aD_B_Vp { double v1; bool v2; void * v3; };
struct __attribute__((packed)) aD_BFu15i_B { double v1; unsigned int v2:15; bool v3; };
struct __attribute__((packed)) aD_BFu15ll_B { double v1; unsigned long long v2:15; bool v3; };
struct __attribute__((packed)) aD_BFu15s_B { double v1; unsigned short v2:15; bool v3; };
struct __attribute__((packed)) aD_BFu16i_B { double v1; unsigned int v2:16; bool v3; };
struct __attribute__((packed)) aD_BFu16ll_B { double v1; unsigned long long v2:16; bool v3; };
struct __attribute__((packed)) aD_BFu16s_B { double v1; unsigned short v2:16; bool v3; };
struct __attribute__((packed)) aD_BFu17i_B { double v1; unsigned int v2:17; bool v3; };
struct __attribute__((packed)) aD_BFu17ll_B { double v1; unsigned long long v2:17; bool v3; };
struct __attribute__((packed)) aD_BFu1c_B { double v1; unsigned char v2:1; bool v3; };
struct __attribute__((packed)) aD_BFu1i_B { double v1; unsigned int v2:1; bool v3; };
struct __attribute__((packed)) aD_BFu1ll_B { double v1; unsigned long long v2:1; bool v3; };
struct __attribute__((packed)) aD_BFu1s_B { double v1; unsigned short v2:1; bool v3; };
struct __attribute__((packed)) aD_BFu31i_B { double v1; unsigned int v2:31; bool v3; };
struct __attribute__((packed)) aD_BFu31ll_B { double v1; unsigned long long v2:31; bool v3; };
struct __attribute__((packed)) aD_BFu32i_B { double v1; unsigned int v2:32; bool v3; };
struct __attribute__((packed)) aD_BFu32ll_B { double v1; unsigned long long v2:32; bool v3; };
struct __attribute__((packed)) aD_BFu33_B { double v1; unsigned long long v2:33; bool v3; };
struct __attribute__((packed)) aD_BFu7c_B { double v1; unsigned char v2:7; bool v3; };
struct __attribute__((packed)) aD_BFu7i_B { double v1; unsigned int v2:7; bool v3; };
struct __attribute__((packed)) aD_BFu7ll_B { double v1; unsigned long long v2:7; bool v3; };
struct __attribute__((packed)) aD_BFu7s_B { double v1; unsigned short v2:7; bool v3; };
struct __attribute__((packed)) aD_BFu8c_B { double v1; unsigned char v2:8; bool v3; };
struct __attribute__((packed)) aD_BFu8i_B { double v1; unsigned int v2:8; bool v3; };
struct __attribute__((packed)) aD_BFu8ll_B { double v1; unsigned long long v2:8; bool v3; };
struct __attribute__((packed)) aD_BFu8s_B { double v1; unsigned short v2:8; bool v3; };
struct __attribute__((packed)) aD_BFu9i_B { double v1; unsigned int v2:9; bool v3; };
struct __attribute__((packed)) aD_BFu9ll_B { double v1; unsigned long long v2:9; bool v3; };
struct __attribute__((packed)) aD_BFu9s_B { double v1; unsigned short v2:9; bool v3; };
struct __attribute__((packed)) aD_C_B { double v1; char v2; bool v3; };
struct __attribute__((packed)) aD_D_B { double v1; double v2; bool v3; };
struct __attribute__((packed)) aD_F_B { double v1; float v2; bool v3; };
struct __attribute__((packed)) aD_I_B { double v1; int v2; bool v3; };
struct __attribute__((packed)) aD_Ip_B { double v1; int * v2; bool v3; };
struct __attribute__((packed)) aD_L_B { double v1; long long v2; bool v3; };
struct __attribute__((packed)) aD_S_B { double v1; short v2; bool v3; };
struct __attribute__((packed)) aD_Uc_B { double v1; unsigned char v2; bool v3; };
struct __attribute__((packed)) aD_Ui_B { double v1; unsigned int v2; bool v3; };
struct __attribute__((packed)) aD_Ul_B { double v1; unsigned long long v2; bool v3; };
struct __attribute__((packed)) aD_Us_B { double v1; unsigned short v2; bool v3; };
struct __attribute__((packed)) aD_Vp_B { double v1; void * v2; bool v3; };
struct __attribute__((packed)) aF_B { float v1; bool v2; };
struct __attribute__((packed)) aF_B_B { float v1; bool v2; bool v3; };
struct __attribute__((packed)) aF_B_BFu15i { float v1; bool v2; unsigned int v3:15; };
struct __attribute__((packed)) aF_B_BFu15ll { float v1; bool v2; unsigned long long v3:15; };
struct __attribute__((packed)) aF_B_BFu15s { float v1; bool v2; unsigned short v3:15; };
struct __attribute__((packed)) aF_B_BFu16i { float v1; bool v2; unsigned int v3:16; };
struct __attribute__((packed)) aF_B_BFu16ll { float v1; bool v2; unsigned long long v3:16; };
struct __attribute__((packed)) aF_B_BFu16s { float v1; bool v2; unsigned short v3:16; };
struct __attribute__((packed)) aF_B_BFu17i { float v1; bool v2; unsigned int v3:17; };
struct __attribute__((packed)) aF_B_BFu17ll { float v1; bool v2; unsigned long long v3:17; };
struct __attribute__((packed)) aF_B_BFu1c { float v1; bool v2; unsigned char v3:1; };
struct __attribute__((packed)) aF_B_BFu1i { float v1; bool v2; unsigned int v3:1; };
struct __attribute__((packed)) aF_B_BFu1ll { float v1; bool v2; unsigned long long v3:1; };
struct __attribute__((packed)) aF_B_BFu1s { float v1; bool v2; unsigned short v3:1; };
struct __attribute__((packed)) aF_B_BFu31i { float v1; bool v2; unsigned int v3:31; };
struct __attribute__((packed)) aF_B_BFu31ll { float v1; bool v2; unsigned long long v3:31; };
struct __attribute__((packed)) aF_B_BFu32i { float v1; bool v2; unsigned int v3:32; };
struct __attribute__((packed)) aF_B_BFu32ll { float v1; bool v2; unsigned long long v3:32; };
struct __attribute__((packed)) aF_B_BFu33 { float v1; bool v2; unsigned long long v3:33; };
struct __attribute__((packed)) aF_B_BFu7c { float v1; bool v2; unsigned char v3:7; };
struct __attribute__((packed)) aF_B_BFu7i { float v1; bool v2; unsigned int v3:7; };
struct __attribute__((packed)) aF_B_BFu7ll { float v1; bool v2; unsigned long long v3:7; };
struct __attribute__((packed)) aF_B_BFu7s { float v1; bool v2; unsigned short v3:7; };
struct __attribute__((packed)) aF_B_BFu8c { float v1; bool v2; unsigned char v3:8; };
struct __attribute__((packed)) aF_B_BFu8i { float v1; bool v2; unsigned int v3:8; };
struct __attribute__((packed)) aF_B_BFu8ll { float v1; bool v2; unsigned long long v3:8; };
struct __attribute__((packed)) aF_B_BFu8s { float v1; bool v2; unsigned short v3:8; };
struct __attribute__((packed)) aF_B_BFu9i { float v1; bool v2; unsigned int v3:9; };
struct __attribute__((packed)) aF_B_BFu9ll { float v1; bool v2; unsigned long long v3:9; };
struct __attribute__((packed)) aF_B_BFu9s { float v1; bool v2; unsigned short v3:9; };
struct __attribute__((packed)) aF_B_C { float v1; bool v2; char v3; };
struct __attribute__((packed)) aF_B_D { float v1; bool v2; double v3; };
struct __attribute__((packed)) aF_B_F { float v1; bool v2; float v3; };
struct __attribute__((packed)) aF_B_I { float v1; bool v2; int v3; };
struct __attribute__((packed)) aF_B_Ip { float v1; bool v2; int * v3; };
struct __attribute__((packed)) aF_B_L { float v1; bool v2; long long v3; };
struct __attribute__((packed)) aF_B_S { float v1; bool v2; short v3; };
struct __attribute__((packed)) aF_B_Uc { float v1; bool v2; unsigned char v3; };
struct __attribute__((packed)) aF_B_Ui { float v1; bool v2; unsigned int v3; };
struct __attribute__((packed)) aF_B_Ul { float v1; bool v2; unsigned long long v3; };
struct __attribute__((packed)) aF_B_Us { float v1; bool v2; unsigned short v3; };
struct __attribute__((packed)) aF_B_Vp { float v1; bool v2; void * v3; };
struct __attribute__((packed)) aF_BFu15i_B { float v1; unsigned int v2:15; bool v3; };
struct __attribute__((packed)) aF_BFu15ll_B { float v1; unsigned long long v2:15; bool v3; };
struct __attribute__((packed)) aF_BFu15s_B { float v1; unsigned short v2:15; bool v3; };
struct __attribute__((packed)) aF_BFu16i_B { float v1; unsigned int v2:16; bool v3; };
struct __attribute__((packed)) aF_BFu16ll_B { float v1; unsigned long long v2:16; bool v3; };
struct __attribute__((packed)) aF_BFu16s_B { float v1; unsigned short v2:16; bool v3; };
struct __attribute__((packed)) aF_BFu17i_B { float v1; unsigned int v2:17; bool v3; };
struct __attribute__((packed)) aF_BFu17ll_B { float v1; unsigned long long v2:17; bool v3; };
struct __attribute__((packed)) aF_BFu1c_B { float v1; unsigned char v2:1; bool v3; };
struct __attribute__((packed)) aF_BFu1i_B { float v1; unsigned int v2:1; bool v3; };
struct __attribute__((packed)) aF_BFu1ll_B { float v1; unsigned long long v2:1; bool v3; };
struct __attribute__((packed)) aF_BFu1s_B { float v1; unsigned short v2:1; bool v3; };
struct __attribute__((packed)) aF_BFu31i_B { float v1; unsigned int v2:31; bool v3; };
struct __attribute__((packed)) aF_BFu31ll_B { float v1; unsigned long long v2:31; bool v3; };
struct __attribute__((packed)) aF_BFu32i_B { float v1; unsigned int v2:32; bool v3; };
struct __attribute__((packed)) aF_BFu32ll_B { float v1; unsigned long long v2:32; bool v3; };
struct __attribute__((packed)) aF_BFu33_B { float v1; unsigned long long v2:33; bool v3; };
struct __attribute__((packed)) aF_BFu7c_B { float v1; unsigned char v2:7; bool v3; };
struct __attribute__((packed)) aF_BFu7i_B { float v1; unsigned int v2:7; bool v3; };
struct __attribute__((packed)) aF_BFu7ll_B { float v1; unsigned long long v2:7; bool v3; };
struct __attribute__((packed)) aF_BFu7s_B { float v1; unsigned short v2:7; bool v3; };
struct __attribute__((packed)) aF_BFu8c_B { float v1; unsigned char v2:8; bool v3; };
struct __attribute__((packed)) aF_BFu8i_B { float v1; unsigned int v2:8; bool v3; };
struct __attribute__((packed)) aF_BFu8ll_B { float v1; unsigned long long v2:8; bool v3; };
struct __attribute__((packed)) aF_BFu8s_B { float v1; unsigned short v2:8; bool v3; };
struct __attribute__((packed)) aF_BFu9i_B { float v1; unsigned int v2:9; bool v3; };
struct __attribute__((packed)) aF_BFu9ll_B { float v1; unsigned long long v2:9; bool v3; };
struct __attribute__((packed)) aF_BFu9s_B { float v1; unsigned short v2:9; bool v3; };
struct __attribute__((packed)) aF_C_B { float v1; char v2; bool v3; };
struct __attribute__((packed)) aF_D_B { float v1; double v2; bool v3; };
struct __attribute__((packed)) aF_F_B { float v1; float v2; bool v3; };
struct __attribute__((packed)) aF_I_B { float v1; int v2; bool v3; };
struct __attribute__((packed)) aF_Ip_B { float v1; int * v2; bool v3; };
struct __attribute__((packed)) aF_L_B { float v1; long long v2; bool v3; };
struct __attribute__((packed)) aF_S_B { float v1; short v2; bool v3; };
struct __attribute__((packed)) aF_Uc_B { float v1; unsigned char v2; bool v3; };
struct __attribute__((packed)) aF_Ui_B { float v1; unsigned int v2; bool v3; };
struct __attribute__((packed)) aF_Ul_B { float v1; unsigned long long v2; bool v3; };
struct __attribute__((packed)) aF_Us_B { float v1; unsigned short v2; bool v3; };
struct __attribute__((packed)) aF_Vp_B { float v1; void * v2; bool v3; };
struct __attribute__((packed)) aI_B { int v1; bool v2; };
struct __attribute__((packed)) aI_B_B { int v1; bool v2; bool v3; };
struct __attribute__((packed)) aI_B_BFu15i { int v1; bool v2; unsigned int v3:15; };
struct __attribute__((packed)) aI_B_BFu15ll { int v1; bool v2; unsigned long long v3:15; };
struct __attribute__((packed)) aI_B_BFu15s { int v1; bool v2; unsigned short v3:15; };
struct __attribute__((packed)) aI_B_BFu16i { int v1; bool v2; unsigned int v3:16; };
struct __attribute__((packed)) aI_B_BFu16ll { int v1; bool v2; unsigned long long v3:16; };
struct __attribute__((packed)) aI_B_BFu16s { int v1; bool v2; unsigned short v3:16; };
struct __attribute__((packed)) aI_B_BFu17i { int v1; bool v2; unsigned int v3:17; };
struct __attribute__((packed)) aI_B_BFu17ll { int v1; bool v2; unsigned long long v3:17; };
struct __attribute__((packed)) aI_B_BFu1c { int v1; bool v2; unsigned char v3:1; };
struct __attribute__((packed)) aI_B_BFu1i { int v1; bool v2; unsigned int v3:1; };
struct __attribute__((packed)) aI_B_BFu1ll { int v1; bool v2; unsigned long long v3:1; };
struct __attribute__((packed)) aI_B_BFu1s { int v1; bool v2; unsigned short v3:1; };
struct __attribute__((packed)) aI_B_BFu31i { int v1; bool v2; unsigned int v3:31; };
struct __attribute__((packed)) aI_B_BFu31ll { int v1; bool v2; unsigned long long v3:31; };
struct __attribute__((packed)) aI_B_BFu32i { int v1; bool v2; unsigned int v3:32; };
struct __attribute__((packed)) aI_B_BFu32ll { int v1; bool v2; unsigned long long v3:32; };
struct __attribute__((packed)) aI_B_BFu33 { int v1; bool v2; unsigned long long v3:33; };
struct __attribute__((packed)) aI_B_BFu7c { int v1; bool v2; unsigned char v3:7; };
struct __attribute__((packed)) aI_B_BFu7i { int v1; bool v2; unsigned int v3:7; };
struct __attribute__((packed)) aI_B_BFu7ll { int v1; bool v2; unsigned long long v3:7; };
struct __attribute__((packed)) aI_B_BFu7s { int v1; bool v2; unsigned short v3:7; };
struct __attribute__((packed)) aI_B_BFu8c { int v1; bool v2; unsigned char v3:8; };
struct __attribute__((packed)) aI_B_BFu8i { int v1; bool v2; unsigned int v3:8; };
struct __attribute__((packed)) aI_B_BFu8ll { int v1; bool v2; unsigned long long v3:8; };
struct __attribute__((packed)) aI_B_BFu8s { int v1; bool v2; unsigned short v3:8; };
struct __attribute__((packed)) aI_B_BFu9i { int v1; bool v2; unsigned int v3:9; };
struct __attribute__((packed)) aI_B_BFu9ll { int v1; bool v2; unsigned long long v3:9; };
struct __attribute__((packed)) aI_B_BFu9s { int v1; bool v2; unsigned short v3:9; };
struct __attribute__((packed)) aI_B_C { int v1; bool v2; char v3; };
struct __attribute__((packed)) aI_B_D { int v1; bool v2; double v3; };
struct __attribute__((packed)) aI_B_F { int v1; bool v2; float v3; };
struct __attribute__((packed)) aI_B_I { int v1; bool v2; int v3; };
struct __attribute__((packed)) aI_B_Ip { int v1; bool v2; int * v3; };
struct __attribute__((packed)) aI_B_L { int v1; bool v2; long long v3; };
struct __attribute__((packed)) aI_B_S { int v1; bool v2; short v3; };
struct __attribute__((packed)) aI_B_Uc { int v1; bool v2; unsigned char v3; };
struct __attribute__((packed)) aI_B_Ui { int v1; bool v2; unsigned int v3; };
struct __attribute__((packed)) aI_B_Ul { int v1; bool v2; unsigned long long v3; };
struct __attribute__((packed)) aI_B_Us { int v1; bool v2; unsigned short v3; };
struct __attribute__((packed)) aI_B_Vp { int v1; bool v2; void * v3; };
struct __attribute__((packed)) aI_BFu15i_B { int v1; unsigned int v2:15; bool v3; };
struct __attribute__((packed)) aI_BFu15ll_B { int v1; unsigned long long v2:15; bool v3; };
struct __attribute__((packed)) aI_BFu15s_B { int v1; unsigned short v2:15; bool v3; };
struct __attribute__((packed)) aI_BFu16i_B { int v1; unsigned int v2:16; bool v3; };
struct __attribute__((packed)) aI_BFu16ll_B { int v1; unsigned long long v2:16; bool v3; };
struct __attribute__((packed)) aI_BFu16s_B { int v1; unsigned short v2:16; bool v3; };
struct __attribute__((packed)) aI_BFu17i_B { int v1; unsigned int v2:17; bool v3; };
struct __attribute__((packed)) aI_BFu17ll_B { int v1; unsigned long long v2:17; bool v3; };
struct __attribute__((packed)) aI_BFu1c_B { int v1; unsigned char v2:1; bool v3; };
struct __attribute__((packed)) aI_BFu1i_B { int v1; unsigned int v2:1; bool v3; };
struct __attribute__((packed)) aI_BFu1ll_B { int v1; unsigned long long v2:1; bool v3; };
struct __attribute__((packed)) aI_BFu1s_B { int v1; unsigned short v2:1; bool v3; };
struct __attribute__((packed)) aI_BFu31i_B { int v1; unsigned int v2:31; bool v3; };
struct __attribute__((packed)) aI_BFu31ll_B { int v1; unsigned long long v2:31; bool v3; };
struct __attribute__((packed)) aI_BFu32i_B { int v1; unsigned int v2:32; bool v3; };
struct __attribute__((packed)) aI_BFu32ll_B { int v1; unsigned long long v2:32; bool v3; };
struct __attribute__((packed)) aI_BFu33_B { int v1; unsigned long long v2:33; bool v3; };
struct __attribute__((packed)) aI_BFu7c_B { int v1; unsigned char v2:7; bool v3; };
struct __attribute__((packed)) aI_BFu7i_B { int v1; unsigned int v2:7; bool v3; };
struct __attribute__((packed)) aI_BFu7ll_B { int v1; unsigned long long v2:7; bool v3; };
struct __attribute__((packed)) aI_BFu7s_B { int v1; unsigned short v2:7; bool v3; };
struct __attribute__((packed)) aI_BFu8c_B { int v1; unsigned char v2:8; bool v3; };
struct __attribute__((packed)) aI_BFu8i_B { int v1; unsigned int v2:8; bool v3; };
struct __attribute__((packed)) aI_BFu8ll_B { int v1; unsigned long long v2:8; bool v3; };
struct __attribute__((packed)) aI_BFu8s_B { int v1; unsigned short v2:8; bool v3; };
struct __attribute__((packed)) aI_BFu9i_B { int v1; unsigned int v2:9; bool v3; };
struct __attribute__((packed)) aI_BFu9ll_B { int v1; unsigned long long v2:9; bool v3; };
struct __attribute__((packed)) aI_BFu9s_B { int v1; unsigned short v2:9; bool v3; };
struct __attribute__((packed)) aI_C_B { int v1; char v2; bool v3; };
struct __attribute__((packed)) aI_D_B { int v1; double v2; bool v3; };
struct __attribute__((packed)) aI_F_B { int v1; float v2; bool v3; };
struct __attribute__((packed)) aI_I_B { int v1; int v2; bool v3; };
struct __attribute__((packed)) aI_Ip_B { int v1; int * v2; bool v3; };
struct __attribute__((packed)) aI_L_B { int v1; long long v2; bool v3; };
struct __attribute__((packed)) aI_S_B { int v1; short v2; bool v3; };
struct __attribute__((packed)) aI_Uc_B { int v1; unsigned char v2; bool v3; };
struct __attribute__((packed)) aI_Ui_B { int v1; unsigned int v2; bool v3; };
struct __attribute__((packed)) aI_Ul_B { int v1; unsigned long long v2; bool v3; };
struct __attribute__((packed)) aI_Us_B { int v1; unsigned short v2; bool v3; };
struct __attribute__((packed)) aI_Vp_B { int v1; void * v2; bool v3; };
struct __attribute__((packed)) aIp_B { int * v1; bool v2; };
struct __attribute__((packed)) aIp_B_B { int * v1; bool v2; bool v3; };
struct __attribute__((packed)) aIp_B_BFu15i { int * v1; bool v2; unsigned int v3:15; };
struct __attribute__((packed)) aIp_B_BFu15ll { int * v1; bool v2; unsigned long long v3:15; };
struct __attribute__((packed)) aIp_B_BFu15s { int * v1; bool v2; unsigned short v3:15; };
struct __attribute__((packed)) aIp_B_BFu16i { int * v1; bool v2; unsigned int v3:16; };
struct __attribute__((packed)) aIp_B_BFu16ll { int * v1; bool v2; unsigned long long v3:16; };
struct __attribute__((packed)) aIp_B_BFu16s { int * v1; bool v2; unsigned short v3:16; };
struct __attribute__((packed)) aIp_B_BFu17i { int * v1; bool v2; unsigned int v3:17; };
struct __attribute__((packed)) aIp_B_BFu17ll { int * v1; bool v2; unsigned long long v3:17; };
struct __attribute__((packed)) aIp_B_BFu1c { int * v1; bool v2; unsigned char v3:1; };
struct __attribute__((packed)) aIp_B_BFu1i { int * v1; bool v2; unsigned int v3:1; };
struct __attribute__((packed)) aIp_B_BFu1ll { int * v1; bool v2; unsigned long long v3:1; };
struct __attribute__((packed)) aIp_B_BFu1s { int * v1; bool v2; unsigned short v3:1; };
struct __attribute__((packed)) aIp_B_BFu31i { int * v1; bool v2; unsigned int v3:31; };
struct __attribute__((packed)) aIp_B_BFu31ll { int * v1; bool v2; unsigned long long v3:31; };
struct __attribute__((packed)) aIp_B_BFu32i { int * v1; bool v2; unsigned int v3:32; };
struct __attribute__((packed)) aIp_B_BFu32ll { int * v1; bool v2; unsigned long long v3:32; };
struct __attribute__((packed)) aIp_B_BFu33 { int * v1; bool v2; unsigned long long v3:33; };
struct __attribute__((packed)) aIp_B_BFu7c { int * v1; bool v2; unsigned char v3:7; };
struct __attribute__((packed)) aIp_B_BFu7i { int * v1; bool v2; unsigned int v3:7; };
struct __attribute__((packed)) aIp_B_BFu7ll { int * v1; bool v2; unsigned long long v3:7; };
struct __attribute__((packed)) aIp_B_BFu7s { int * v1; bool v2; unsigned short v3:7; };
struct __attribute__((packed)) aIp_B_BFu8c { int * v1; bool v2; unsigned char v3:8; };
struct __attribute__((packed)) aIp_B_BFu8i { int * v1; bool v2; unsigned int v3:8; };
struct __attribute__((packed)) aIp_B_BFu8ll { int * v1; bool v2; unsigned long long v3:8; };
struct __attribute__((packed)) aIp_B_BFu8s { int * v1; bool v2; unsigned short v3:8; };
struct __attribute__((packed)) aIp_B_BFu9i { int * v1; bool v2; unsigned int v3:9; };
struct __attribute__((packed)) aIp_B_BFu9ll { int * v1; bool v2; unsigned long long v3:9; };
struct __attribute__((packed)) aIp_B_BFu9s { int * v1; bool v2; unsigned short v3:9; };
struct __attribute__((packed)) aIp_B_C { int * v1; bool v2; char v3; };
struct __attribute__((packed)) aIp_B_D { int * v1; bool v2; double v3; };
struct __attribute__((packed)) aIp_B_F { int * v1; bool v2; float v3; };
struct __attribute__((packed)) aIp_B_I { int * v1; bool v2; int v3; };
struct __attribute__((packed)) aIp_B_Ip { int * v1; bool v2; int * v3; };
struct __attribute__((packed)) aIp_B_L { int * v1; bool v2; long long v3; };
struct __attribute__((packed)) aIp_B_S { int * v1; bool v2; short v3; };
struct __attribute__((packed)) aIp_B_Uc { int * v1; bool v2; unsigned char v3; };
struct __attribute__((packed)) aIp_B_Ui { int * v1; bool v2; unsigned int v3; };
struct __attribute__((packed)) aIp_B_Ul { int * v1; bool v2; unsigned long long v3; };
struct __attribute__((packed)) aIp_B_Us { int * v1; bool v2; unsigned short v3; };
struct __attribute__((packed)) aIp_B_Vp { int * v1; bool v2; void * v3; };
struct __attribute__((packed)) aIp_BFu15i_B { int * v1; unsigned int v2:15; bool v3; };
struct __attribute__((packed)) aIp_BFu15ll_B { int * v1; unsigned long long v2:15; bool v3; };
struct __attribute__((packed)) aIp_BFu15s_B { int * v1; unsigned short v2:15; bool v3; };
struct __attribute__((packed)) aIp_BFu16i_B { int * v1; unsigned int v2:16; bool v3; };
struct __attribute__((packed)) aIp_BFu16ll_B { int * v1; unsigned long long v2:16; bool v3; };
struct __attribute__((packed)) aIp_BFu16s_B { int * v1; unsigned short v2:16; bool v3; };
struct __attribute__((packed)) aIp_BFu17i_B { int * v1; unsigned int v2:17; bool v3; };
struct __attribute__((packed)) aIp_BFu17ll_B { int * v1; unsigned long long v2:17; bool v3; };
struct __attribute__((packed)) aIp_BFu1c_B { int * v1; unsigned char v2:1; bool v3; };
struct __attribute__((packed)) aIp_BFu1i_B { int * v1; unsigned int v2:1; bool v3; };
struct __attribute__((packed)) aIp_BFu1ll_B { int * v1; unsigned long long v2:1; bool v3; };
struct __attribute__((packed)) aIp_BFu1s_B { int * v1; unsigned short v2:1; bool v3; };
struct __attribute__((packed)) aIp_BFu31i_B { int * v1; unsigned int v2:31; bool v3; };
struct __attribute__((packed)) aIp_BFu31ll_B { int * v1; unsigned long long v2:31; bool v3; };
struct __attribute__((packed)) aIp_BFu32i_B { int * v1; unsigned int v2:32; bool v3; };
struct __attribute__((packed)) aIp_BFu32ll_B { int * v1; unsigned long long v2:32; bool v3; };
struct __attribute__((packed)) aIp_BFu33_B { int * v1; unsigned long long v2:33; bool v3; };
struct __attribute__((packed)) aIp_BFu7c_B { int * v1; unsigned char v2:7; bool v3; };
struct __attribute__((packed)) aIp_BFu7i_B { int * v1; unsigned int v2:7; bool v3; };
struct __attribute__((packed)) aIp_BFu7ll_B { int * v1; unsigned long long v2:7; bool v3; };
struct __attribute__((packed)) aIp_BFu7s_B { int * v1; unsigned short v2:7; bool v3; };
struct __attribute__((packed)) aIp_BFu8c_B { int * v1; unsigned char v2:8; bool v3; };
struct __attribute__((packed)) aIp_BFu8i_B { int * v1; unsigned int v2:8; bool v3; };
struct __attribute__((packed)) aIp_BFu8ll_B { int * v1; unsigned long long v2:8; bool v3; };
struct __attribute__((packed)) aIp_BFu8s_B { int * v1; unsigned short v2:8; bool v3; };
struct __attribute__((packed)) aIp_BFu9i_B { int * v1; unsigned int v2:9; bool v3; };
struct __attribute__((packed)) aIp_BFu9ll_B { int * v1; unsigned long long v2:9; bool v3; };
struct __attribute__((packed)) aIp_BFu9s_B { int * v1; unsigned short v2:9; bool v3; };
struct __attribute__((packed)) aIp_C_B { int * v1; char v2; bool v3; };
struct __attribute__((packed)) aIp_D_B { int * v1; double v2; bool v3; };
struct __attribute__((packed)) aIp_F_B { int * v1; float v2; bool v3; };
struct __attribute__((packed)) aIp_I_B { int * v1; int v2; bool v3; };
struct __attribute__((packed)) aIp_Ip_B { int * v1; int * v2; bool v3; };
struct __attribute__((packed)) aIp_L_B { int * v1; long long v2; bool v3; };
struct __attribute__((packed)) aIp_S_B { int * v1; short v2; bool v3; };
struct __attribute__((packed)) aIp_Uc_B { int * v1; unsigned char v2; bool v3; };
struct __attribute__((packed)) aIp_Ui_B { int * v1; unsigned int v2; bool v3; };
struct __attribute__((packed)) aIp_Ul_B { int * v1; unsigned long long v2; bool v3; };
struct __attribute__((packed)) aIp_Us_B { int * v1; unsigned short v2; bool v3; };
struct __attribute__((packed)) aIp_Vp_B { int * v1; void * v2; bool v3; };
struct __attribute__((packed)) aL_B { long long v1; bool v2; };
struct __attribute__((packed)) aL_B_B { long long v1; bool v2; bool v3; };
struct __attribute__((packed)) aL_B_BFu15i { long long v1; bool v2; unsigned int v3:15; };
struct __attribute__((packed)) aL_B_BFu15ll { long long v1; bool v2; unsigned long long v3:15; };
struct __attribute__((packed)) aL_B_BFu15s { long long v1; bool v2; unsigned short v3:15; };
struct __attribute__((packed)) aL_B_BFu16i { long long v1; bool v2; unsigned int v3:16; };
struct __attribute__((packed)) aL_B_BFu16ll { long long v1; bool v2; unsigned long long v3:16; };
struct __attribute__((packed)) aL_B_BFu16s { long long v1; bool v2; unsigned short v3:16; };
struct __attribute__((packed)) aL_B_BFu17i { long long v1; bool v2; unsigned int v3:17; };
struct __attribute__((packed)) aL_B_BFu17ll { long long v1; bool v2; unsigned long long v3:17; };
struct __attribute__((packed)) aL_B_BFu1c { long long v1; bool v2; unsigned char v3:1; };
struct __attribute__((packed)) aL_B_BFu1i { long long v1; bool v2; unsigned int v3:1; };
struct __attribute__((packed)) aL_B_BFu1ll { long long v1; bool v2; unsigned long long v3:1; };
struct __attribute__((packed)) aL_B_BFu1s { long long v1; bool v2; unsigned short v3:1; };
struct __attribute__((packed)) aL_B_BFu31i { long long v1; bool v2; unsigned int v3:31; };
struct __attribute__((packed)) aL_B_BFu31ll { long long v1; bool v2; unsigned long long v3:31; };
struct __attribute__((packed)) aL_B_BFu32i { long long v1; bool v2; unsigned int v3:32; };
struct __attribute__((packed)) aL_B_BFu32ll { long long v1; bool v2; unsigned long long v3:32; };
struct __attribute__((packed)) aL_B_BFu33 { long long v1; bool v2; unsigned long long v3:33; };
struct __attribute__((packed)) aL_B_BFu7c { long long v1; bool v2; unsigned char v3:7; };
struct __attribute__((packed)) aL_B_BFu7i { long long v1; bool v2; unsigned int v3:7; };
struct __attribute__((packed)) aL_B_BFu7ll { long long v1; bool v2; unsigned long long v3:7; };
struct __attribute__((packed)) aL_B_BFu7s { long long v1; bool v2; unsigned short v3:7; };
struct __attribute__((packed)) aL_B_BFu8c { long long v1; bool v2; unsigned char v3:8; };
struct __attribute__((packed)) aL_B_BFu8i { long long v1; bool v2; unsigned int v3:8; };
struct __attribute__((packed)) aL_B_BFu8ll { long long v1; bool v2; unsigned long long v3:8; };
struct __attribute__((packed)) aL_B_BFu8s { long long v1; bool v2; unsigned short v3:8; };
struct __attribute__((packed)) aL_B_BFu9i { long long v1; bool v2; unsigned int v3:9; };
struct __attribute__((packed)) aL_B_BFu9ll { long long v1; bool v2; unsigned long long v3:9; };
struct __attribute__((packed)) aL_B_BFu9s { long long v1; bool v2; unsigned short v3:9; };
struct __attribute__((packed)) aL_B_C { long long v1; bool v2; char v3; };
struct __attribute__((packed)) aL_B_D { long long v1; bool v2; double v3; };
struct __attribute__((packed)) aL_B_F { long long v1; bool v2; float v3; };
struct __attribute__((packed)) aL_B_I { long long v1; bool v2; int v3; };
struct __attribute__((packed)) aL_B_Ip { long long v1; bool v2; int * v3; };
struct __attribute__((packed)) aL_B_L { long long v1; bool v2; long long v3; };
struct __attribute__((packed)) aL_B_S { long long v1; bool v2; short v3; };
struct __attribute__((packed)) aL_B_Uc { long long v1; bool v2; unsigned char v3; };
struct __attribute__((packed)) aL_B_Ui { long long v1; bool v2; unsigned int v3; };
struct __attribute__((packed)) aL_B_Ul { long long v1; bool v2; unsigned long long v3; };
struct __attribute__((packed)) aL_B_Us { long long v1; bool v2; unsigned short v3; };
struct __attribute__((packed)) aL_B_Vp { long long v1; bool v2; void * v3; };
struct __attribute__((packed)) aL_BFu15i_B { long long v1; unsigned int v2:15; bool v3; };
struct __attribute__((packed)) aL_BFu15ll_B { long long v1; unsigned long long v2:15; bool v3; };
struct __attribute__((packed)) aL_BFu15s_B { long long v1; unsigned short v2:15; bool v3; };
struct __attribute__((packed)) aL_BFu16i_B { long long v1; unsigned int v2:16; bool v3; };
struct __attribute__((packed)) aL_BFu16ll_B { long long v1; unsigned long long v2:16; bool v3; };
struct __attribute__((packed)) aL_BFu16s_B { long long v1; unsigned short v2:16; bool v3; };
struct __attribute__((packed)) aL_BFu17i_B { long long v1; unsigned int v2:17; bool v3; };
struct __attribute__((packed)) aL_BFu17ll_B { long long v1; unsigned long long v2:17; bool v3; };
struct __attribute__((packed)) aL_BFu1c_B { long long v1; unsigned char v2:1; bool v3; };
struct __attribute__((packed)) aL_BFu1i_B { long long v1; unsigned int v2:1; bool v3; };
struct __attribute__((packed)) aL_BFu1ll_B { long long v1; unsigned long long v2:1; bool v3; };
struct __attribute__((packed)) aL_BFu1s_B { long long v1; unsigned short v2:1; bool v3; };
struct __attribute__((packed)) aL_BFu31i_B { long long v1; unsigned int v2:31; bool v3; };
struct __attribute__((packed)) aL_BFu31ll_B { long long v1; unsigned long long v2:31; bool v3; };
struct __attribute__((packed)) aL_BFu32i_B { long long v1; unsigned int v2:32; bool v3; };
struct __attribute__((packed)) aL_BFu32ll_B { long long v1; unsigned long long v2:32; bool v3; };
struct __attribute__((packed)) aL_BFu33_B { long long v1; unsigned long long v2:33; bool v3; };
struct __attribute__((packed)) aL_BFu7c_B { long long v1; unsigned char v2:7; bool v3; };
struct __attribute__((packed)) aL_BFu7i_B { long long v1; unsigned int v2:7; bool v3; };
struct __attribute__((packed)) aL_BFu7ll_B { long long v1; unsigned long long v2:7; bool v3; };
struct __attribute__((packed)) aL_BFu7s_B { long long v1; unsigned short v2:7; bool v3; };
struct __attribute__((packed)) aL_BFu8c_B { long long v1; unsigned char v2:8; bool v3; };
struct __attribute__((packed)) aL_BFu8i_B { long long v1; unsigned int v2:8; bool v3; };
struct __attribute__((packed)) aL_BFu8ll_B { long long v1; unsigned long long v2:8; bool v3; };
struct __attribute__((packed)) aL_BFu8s_B { long long v1; unsigned short v2:8; bool v3; };
struct __attribute__((packed)) aL_BFu9i_B { long long v1; unsigned int v2:9; bool v3; };
struct __attribute__((packed)) aL_BFu9ll_B { long long v1; unsigned long long v2:9; bool v3; };
struct __attribute__((packed)) aL_BFu9s_B { long long v1; unsigned short v2:9; bool v3; };
struct __attribute__((packed)) aL_C_B { long long v1; char v2; bool v3; };
struct __attribute__((packed)) aL_D_B { long long v1; double v2; bool v3; };
struct __attribute__((packed)) aL_F_B { long long v1; float v2; bool v3; };
struct __attribute__((packed)) aL_I_B { long long v1; int v2; bool v3; };
struct __attribute__((packed)) aL_Ip_B { long long v1; int * v2; bool v3; };
struct __attribute__((packed)) aL_L_B { long long v1; long long v2; bool v3; };
struct __attribute__((packed)) aL_S_B { long long v1; short v2; bool v3; };
struct __attribute__((packed)) aL_Uc_B { long long v1; unsigned char v2; bool v3; };
struct __attribute__((packed)) aL_Ui_B { long long v1; unsigned int v2; bool v3; };
struct __attribute__((packed)) aL_Ul_B { long long v1; unsigned long long v2; bool v3; };
struct __attribute__((packed)) aL_Us_B { long long v1; unsigned short v2; bool v3; };
struct __attribute__((packed)) aL_Vp_B { long long v1; void * v2; bool v3; };
struct __attribute__((packed)) aS_B { short v1; bool v2; };
struct __attribute__((packed)) aS_B_B { short v1; bool v2; bool v3; };
struct __attribute__((packed)) aS_B_BFu15i { short v1; bool v2; unsigned int v3:15; };
struct __attribute__((packed)) aS_B_BFu15ll { short v1; bool v2; unsigned long long v3:15; };
struct __attribute__((packed)) aS_B_BFu15s { short v1; bool v2; unsigned short v3:15; };
struct __attribute__((packed)) aS_B_BFu16i { short v1; bool v2; unsigned int v3:16; };
struct __attribute__((packed)) aS_B_BFu16ll { short v1; bool v2; unsigned long long v3:16; };
struct __attribute__((packed)) aS_B_BFu16s { short v1; bool v2; unsigned short v3:16; };
struct __attribute__((packed)) aS_B_BFu17i { short v1; bool v2; unsigned int v3:17; };
struct __attribute__((packed)) aS_B_BFu17ll { short v1; bool v2; unsigned long long v3:17; };
struct __attribute__((packed)) aS_B_BFu1c { short v1; bool v2; unsigned char v3:1; };
struct __attribute__((packed)) aS_B_BFu1i { short v1; bool v2; unsigned int v3:1; };
struct __attribute__((packed)) aS_B_BFu1ll { short v1; bool v2; unsigned long long v3:1; };
struct __attribute__((packed)) aS_B_BFu1s { short v1; bool v2; unsigned short v3:1; };
struct __attribute__((packed)) aS_B_BFu31i { short v1; bool v2; unsigned int v3:31; };
struct __attribute__((packed)) aS_B_BFu31ll { short v1; bool v2; unsigned long long v3:31; };
struct __attribute__((packed)) aS_B_BFu32i { short v1; bool v2; unsigned int v3:32; };
struct __attribute__((packed)) aS_B_BFu32ll { short v1; bool v2; unsigned long long v3:32; };
struct __attribute__((packed)) aS_B_BFu33 { short v1; bool v2; unsigned long long v3:33; };
struct __attribute__((packed)) aS_B_BFu7c { short v1; bool v2; unsigned char v3:7; };
struct __attribute__((packed)) aS_B_BFu7i { short v1; bool v2; unsigned int v3:7; };
struct __attribute__((packed)) aS_B_BFu7ll { short v1; bool v2; unsigned long long v3:7; };
struct __attribute__((packed)) aS_B_BFu7s { short v1; bool v2; unsigned short v3:7; };
struct __attribute__((packed)) aS_B_BFu8c { short v1; bool v2; unsigned char v3:8; };
struct __attribute__((packed)) aS_B_BFu8i { short v1; bool v2; unsigned int v3:8; };
struct __attribute__((packed)) aS_B_BFu8ll { short v1; bool v2; unsigned long long v3:8; };
struct __attribute__((packed)) aS_B_BFu8s { short v1; bool v2; unsigned short v3:8; };
struct __attribute__((packed)) aS_B_BFu9i { short v1; bool v2; unsigned int v3:9; };
struct __attribute__((packed)) aS_B_BFu9ll { short v1; bool v2; unsigned long long v3:9; };
struct __attribute__((packed)) aS_B_BFu9s { short v1; bool v2; unsigned short v3:9; };
struct __attribute__((packed)) aS_B_C { short v1; bool v2; char v3; };
struct __attribute__((packed)) aS_B_D { short v1; bool v2; double v3; };
struct __attribute__((packed)) aS_B_F { short v1; bool v2; float v3; };
struct __attribute__((packed)) aS_B_I { short v1; bool v2; int v3; };
struct __attribute__((packed)) aS_B_Ip { short v1; bool v2; int * v3; };
struct __attribute__((packed)) aS_B_L { short v1; bool v2; long long v3; };
struct __attribute__((packed)) aS_B_S { short v1; bool v2; short v3; };
struct __attribute__((packed)) aS_B_Uc { short v1; bool v2; unsigned char v3; };
struct __attribute__((packed)) aS_B_Ui { short v1; bool v2; unsigned int v3; };
struct __attribute__((packed)) aS_B_Ul { short v1; bool v2; unsigned long long v3; };
struct __attribute__((packed)) aS_B_Us { short v1; bool v2; unsigned short v3; };
struct __attribute__((packed)) aS_B_Vp { short v1; bool v2; void * v3; };
struct __attribute__((packed)) aS_BFu15i_B { short v1; unsigned int v2:15; bool v3; };
struct __attribute__((packed)) aS_BFu15ll_B { short v1; unsigned long long v2:15; bool v3; };
struct __attribute__((packed)) aS_BFu15s_B { short v1; unsigned short v2:15; bool v3; };
struct __attribute__((packed)) aS_BFu16i_B { short v1; unsigned int v2:16; bool v3; };
struct __attribute__((packed)) aS_BFu16ll_B { short v1; unsigned long long v2:16; bool v3; };
struct __attribute__((packed)) aS_BFu16s_B { short v1; unsigned short v2:16; bool v3; };
struct __attribute__((packed)) aS_BFu17i_B { short v1; unsigned int v2:17; bool v3; };
struct __attribute__((packed)) aS_BFu17ll_B { short v1; unsigned long long v2:17; bool v3; };
struct __attribute__((packed)) aS_BFu1c_B { short v1; unsigned char v2:1; bool v3; };
struct __attribute__((packed)) aS_BFu1i_B { short v1; unsigned int v2:1; bool v3; };
struct __attribute__((packed)) aS_BFu1ll_B { short v1; unsigned long long v2:1; bool v3; };
struct __attribute__((packed)) aS_BFu1s_B { short v1; unsigned short v2:1; bool v3; };
struct __attribute__((packed)) aS_BFu31i_B { short v1; unsigned int v2:31; bool v3; };
struct __attribute__((packed)) aS_BFu31ll_B { short v1; unsigned long long v2:31; bool v3; };
struct __attribute__((packed)) aS_BFu32i_B { short v1; unsigned int v2:32; bool v3; };
struct __attribute__((packed)) aS_BFu32ll_B { short v1; unsigned long long v2:32; bool v3; };
struct __attribute__((packed)) aS_BFu33_B { short v1; unsigned long long v2:33; bool v3; };
struct __attribute__((packed)) aS_BFu7c_B { short v1; unsigned char v2:7; bool v3; };
struct __attribute__((packed)) aS_BFu7i_B { short v1; unsigned int v2:7; bool v3; };
struct __attribute__((packed)) aS_BFu7ll_B { short v1; unsigned long long v2:7; bool v3; };
struct __attribute__((packed)) aS_BFu7s_B { short v1; unsigned short v2:7; bool v3; };
struct __attribute__((packed)) aS_BFu8c_B { short v1; unsigned char v2:8; bool v3; };
struct __attribute__((packed)) aS_BFu8i_B { short v1; unsigned int v2:8; bool v3; };
struct __attribute__((packed)) aS_BFu8ll_B { short v1; unsigned long long v2:8; bool v3; };
struct __attribute__((packed)) aS_BFu8s_B { short v1; unsigned short v2:8; bool v3; };
struct __attribute__((packed)) aS_BFu9i_B { short v1; unsigned int v2:9; bool v3; };
struct __attribute__((packed)) aS_BFu9ll_B { short v1; unsigned long long v2:9; bool v3; };
struct __attribute__((packed)) aS_BFu9s_B { short v1; unsigned short v2:9; bool v3; };
struct __attribute__((packed)) aS_C_B { short v1; char v2; bool v3; };
struct __attribute__((packed)) aS_D_B { short v1; double v2; bool v3; };
struct __attribute__((packed)) aS_F_B { short v1; float v2; bool v3; };
struct __attribute__((packed)) aS_I_B { short v1; int v2; bool v3; };
struct __attribute__((packed)) aS_Ip_B { short v1; int * v2; bool v3; };
struct __attribute__((packed)) aS_L_B { short v1; long long v2; bool v3; };
struct __attribute__((packed)) aS_S_B { short v1; short v2; bool v3; };
struct __attribute__((packed)) aS_Uc_B { short v1; unsigned char v2; bool v3; };
struct __attribute__((packed)) aS_Ui_B { short v1; unsigned int v2; bool v3; };
struct __attribute__((packed)) aS_Ul_B { short v1; unsigned long long v2; bool v3; };
struct __attribute__((packed)) aS_Us_B { short v1; unsigned short v2; bool v3; };
struct __attribute__((packed)) aS_Vp_B { short v1; void * v2; bool v3; };
struct __attribute__((packed)) aUc_B { unsigned char v1; bool v2; };
struct __attribute__((packed)) aUc_B_B { unsigned char v1; bool v2; bool v3; };
struct __attribute__((packed)) aUc_B_BFu15i { unsigned char v1; bool v2; unsigned int v3:15; };
struct __attribute__((packed)) aUc_B_BFu15ll { unsigned char v1; bool v2; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_B_BFu15s { unsigned char v1; bool v2; unsigned short v3:15; };
struct __attribute__((packed)) aUc_B_BFu16i { unsigned char v1; bool v2; unsigned int v3:16; };
struct __attribute__((packed)) aUc_B_BFu16ll { unsigned char v1; bool v2; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_B_BFu16s { unsigned char v1; bool v2; unsigned short v3:16; };
struct __attribute__((packed)) aUc_B_BFu17i { unsigned char v1; bool v2; unsigned int v3:17; };
struct __attribute__((packed)) aUc_B_BFu17ll { unsigned char v1; bool v2; unsigned long long v3:17; };
struct __attribute__((packed)) aUc_B_BFu1c { unsigned char v1; bool v2; unsigned char v3:1; };
struct __attribute__((packed)) aUc_B_BFu1i { unsigned char v1; bool v2; unsigned int v3:1; };
struct __attribute__((packed)) aUc_B_BFu1ll { unsigned char v1; bool v2; unsigned long long v3:1; };
struct __attribute__((packed)) aUc_B_BFu1s { unsigned char v1; bool v2; unsigned short v3:1; };
struct __attribute__((packed)) aUc_B_BFu31i { unsigned char v1; bool v2; unsigned int v3:31; };
struct __attribute__((packed)) aUc_B_BFu31ll { unsigned char v1; bool v2; unsigned long long v3:31; };
struct __attribute__((packed)) aUc_B_BFu32i { unsigned char v1; bool v2; unsigned int v3:32; };
struct __attribute__((packed)) aUc_B_BFu32ll { unsigned char v1; bool v2; unsigned long long v3:32; };
struct __attribute__((packed)) aUc_B_BFu33 { unsigned char v1; bool v2; unsigned long long v3:33; };
struct __attribute__((packed)) aUc_B_BFu7c { unsigned char v1; bool v2; unsigned char v3:7; };
struct __attribute__((packed)) aUc_B_BFu7i { unsigned char v1; bool v2; unsigned int v3:7; };
struct __attribute__((packed)) aUc_B_BFu7ll { unsigned char v1; bool v2; unsigned long long v3:7; };
struct __attribute__((packed)) aUc_B_BFu7s { unsigned char v1; bool v2; unsigned short v3:7; };
struct __attribute__((packed)) aUc_B_BFu8c { unsigned char v1; bool v2; unsigned char v3:8; };
struct __attribute__((packed)) aUc_B_BFu8i { unsigned char v1; bool v2; unsigned int v3:8; };
struct __attribute__((packed)) aUc_B_BFu8ll { unsigned char v1; bool v2; unsigned long long v3:8; };
struct __attribute__((packed)) aUc_B_BFu8s { unsigned char v1; bool v2; unsigned short v3:8; };
struct __attribute__((packed)) aUc_B_BFu9i { unsigned char v1; bool v2; unsigned int v3:9; };
struct __attribute__((packed)) aUc_B_BFu9ll { unsigned char v1; bool v2; unsigned long long v3:9; };
struct __attribute__((packed)) aUc_B_BFu9s { unsigned char v1; bool v2; unsigned short v3:9; };
struct __attribute__((packed)) aUc_B_C { unsigned char v1; bool v2; char v3; };
struct __attribute__((packed)) aUc_B_D { unsigned char v1; bool v2; double v3; };
struct __attribute__((packed)) aUc_B_F { unsigned char v1; bool v2; float v3; };
struct __attribute__((packed)) aUc_B_I { unsigned char v1; bool v2; int v3; };
struct __attribute__((packed)) aUc_B_Ip { unsigned char v1; bool v2; int * v3; };
struct __attribute__((packed)) aUc_B_L { unsigned char v1; bool v2; long long v3; };
struct __attribute__((packed)) aUc_B_S { unsigned char v1; bool v2; short v3; };
struct __attribute__((packed)) aUc_B_Uc { unsigned char v1; bool v2; unsigned char v3; };
struct __attribute__((packed)) aUc_B_Ui { unsigned char v1; bool v2; unsigned int v3; };
struct __attribute__((packed)) aUc_B_Ul { unsigned char v1; bool v2; unsigned long long v3; };
struct __attribute__((packed)) aUc_B_Us { unsigned char v1; bool v2; unsigned short v3; };
struct __attribute__((packed)) aUc_B_Vp { unsigned char v1; bool v2; void * v3; };
struct __attribute__((packed)) aUc_BFu15i_B { unsigned char v1; unsigned int v2:15; bool v3; };
struct __attribute__((packed)) aUc_BFu15ll_B { unsigned char v1; unsigned long long v2:15; bool v3; };
struct __attribute__((packed)) aUc_BFu15s_B { unsigned char v1; unsigned short v2:15; bool v3; };
struct __attribute__((packed)) aUc_BFu16i_B { unsigned char v1; unsigned int v2:16; bool v3; };
struct __attribute__((packed)) aUc_BFu16ll_B { unsigned char v1; unsigned long long v2:16; bool v3; };
struct __attribute__((packed)) aUc_BFu16s_B { unsigned char v1; unsigned short v2:16; bool v3; };
struct __attribute__((packed)) aUc_BFu17i_B { unsigned char v1; unsigned int v2:17; bool v3; };
struct __attribute__((packed)) aUc_BFu17ll_B { unsigned char v1; unsigned long long v2:17; bool v3; };
struct __attribute__((packed)) aUc_BFu1c_B { unsigned char v1; unsigned char v2:1; bool v3; };
struct __attribute__((packed)) aUc_BFu1i_B { unsigned char v1; unsigned int v2:1; bool v3; };
struct __attribute__((packed)) aUc_BFu1ll_B { unsigned char v1; unsigned long long v2:1; bool v3; };
struct __attribute__((packed)) aUc_BFu1s_B { unsigned char v1; unsigned short v2:1; bool v3; };
struct __attribute__((packed)) aUc_BFu31i_B { unsigned char v1; unsigned int v2:31; bool v3; };
struct __attribute__((packed)) aUc_BFu31ll_B { unsigned char v1; unsigned long long v2:31; bool v3; };
struct __attribute__((packed)) aUc_BFu32i_B { unsigned char v1; unsigned int v2:32; bool v3; };
struct __attribute__((packed)) aUc_BFu32ll_B { unsigned char v1; unsigned long long v2:32; bool v3; };
struct __attribute__((packed)) aUc_BFu33_B { unsigned char v1; unsigned long long v2:33; bool v3; };
struct __attribute__((packed)) aUc_BFu7c_B { unsigned char v1; unsigned char v2:7; bool v3; };
struct __attribute__((packed)) aUc_BFu7i_B { unsigned char v1; unsigned int v2:7; bool v3; };
struct __attribute__((packed)) aUc_BFu7ll_B { unsigned char v1; unsigned long long v2:7; bool v3; };
struct __attribute__((packed)) aUc_BFu7s_B { unsigned char v1; unsigned short v2:7; bool v3; };
struct __attribute__((packed)) aUc_BFu8c_B { unsigned char v1; unsigned char v2:8; bool v3; };
struct __attribute__((packed)) aUc_BFu8i_B { unsigned char v1; unsigned int v2:8; bool v3; };
struct __attribute__((packed)) aUc_BFu8ll_B { unsigned char v1; unsigned long long v2:8; bool v3; };
struct __attribute__((packed)) aUc_BFu8s_B { unsigned char v1; unsigned short v2:8; bool v3; };
struct __attribute__((packed)) aUc_BFu9i_B { unsigned char v1; unsigned int v2:9; bool v3; };
struct __attribute__((packed)) aUc_BFu9ll_B { unsigned char v1; unsigned long long v2:9; bool v3; };
struct __attribute__((packed)) aUc_BFu9s_B { unsigned char v1; unsigned short v2:9; bool v3; };
struct __attribute__((packed)) aUc_C_B { unsigned char v1; char v2; bool v3; };
struct __attribute__((packed)) aUc_D_B { unsigned char v1; double v2; bool v3; };
struct __attribute__((packed)) aUc_F_B { unsigned char v1; float v2; bool v3; };
struct __attribute__((packed)) aUc_I_B { unsigned char v1; int v2; bool v3; };
struct __attribute__((packed)) aUc_Ip_B { unsigned char v1; int * v2; bool v3; };
struct __attribute__((packed)) aUc_L_B { unsigned char v1; long long v2; bool v3; };
struct __attribute__((packed)) aUc_S_B { unsigned char v1; short v2; bool v3; };
struct __attribute__((packed)) aUc_Uc_B { unsigned char v1; unsigned char v2; bool v3; };
struct __attribute__((packed)) aUc_Ui_B { unsigned char v1; unsigned int v2; bool v3; };
struct __attribute__((packed)) aUc_Ul_B { unsigned char v1; unsigned long long v2; bool v3; };
struct __attribute__((packed)) aUc_Us_B { unsigned char v1; unsigned short v2; bool v3; };
struct __attribute__((packed)) aUc_Vp_B { unsigned char v1; void * v2; bool v3; };
struct __attribute__((packed)) aUi_B { unsigned int v1; bool v2; };
struct __attribute__((packed)) aUi_B_B { unsigned int v1; bool v2; bool v3; };
struct __attribute__((packed)) aUi_B_BFu15i { unsigned int v1; bool v2; unsigned int v3:15; };
struct __attribute__((packed)) aUi_B_BFu15ll { unsigned int v1; bool v2; unsigned long long v3:15; };
struct __attribute__((packed)) aUi_B_BFu15s { unsigned int v1; bool v2; unsigned short v3:15; };
struct __attribute__((packed)) aUi_B_BFu16i { unsigned int v1; bool v2; unsigned int v3:16; };
struct __attribute__((packed)) aUi_B_BFu16ll { unsigned int v1; bool v2; unsigned long long v3:16; };
struct __attribute__((packed)) aUi_B_BFu16s { unsigned int v1; bool v2; unsigned short v3:16; };
struct __attribute__((packed)) aUi_B_BFu17i { unsigned int v1; bool v2; unsigned int v3:17; };
struct __attribute__((packed)) aUi_B_BFu17ll { unsigned int v1; bool v2; unsigned long long v3:17; };
struct __attribute__((packed)) aUi_B_BFu1c { unsigned int v1; bool v2; unsigned char v3:1; };
struct __attribute__((packed)) aUi_B_BFu1i { unsigned int v1; bool v2; unsigned int v3:1; };
struct __attribute__((packed)) aUi_B_BFu1ll { unsigned int v1; bool v2; unsigned long long v3:1; };
struct __attribute__((packed)) aUi_B_BFu1s { unsigned int v1; bool v2; unsigned short v3:1; };
struct __attribute__((packed)) aUi_B_BFu31i { unsigned int v1; bool v2; unsigned int v3:31; };
struct __attribute__((packed)) aUi_B_BFu31ll { unsigned int v1; bool v2; unsigned long long v3:31; };
struct __attribute__((packed)) aUi_B_BFu32i { unsigned int v1; bool v2; unsigned int v3:32; };
struct __attribute__((packed)) aUi_B_BFu32ll { unsigned int v1; bool v2; unsigned long long v3:32; };
struct __attribute__((packed)) aUi_B_BFu33 { unsigned int v1; bool v2; unsigned long long v3:33; };
struct __attribute__((packed)) aUi_B_BFu7c { unsigned int v1; bool v2; unsigned char v3:7; };
struct __attribute__((packed)) aUi_B_BFu7i { unsigned int v1; bool v2; unsigned int v3:7; };
struct __attribute__((packed)) aUi_B_BFu7ll { unsigned int v1; bool v2; unsigned long long v3:7; };
struct __attribute__((packed)) aUi_B_BFu7s { unsigned int v1; bool v2; unsigned short v3:7; };
struct __attribute__((packed)) aUi_B_BFu8c { unsigned int v1; bool v2; unsigned char v3:8; };
struct __attribute__((packed)) aUi_B_BFu8i { unsigned int v1; bool v2; unsigned int v3:8; };
struct __attribute__((packed)) aUi_B_BFu8ll { unsigned int v1; bool v2; unsigned long long v3:8; };
struct __attribute__((packed)) aUi_B_BFu8s { unsigned int v1; bool v2; unsigned short v3:8; };
struct __attribute__((packed)) aUi_B_BFu9i { unsigned int v1; bool v2; unsigned int v3:9; };
struct __attribute__((packed)) aUi_B_BFu9ll { unsigned int v1; bool v2; unsigned long long v3:9; };
struct __attribute__((packed)) aUi_B_BFu9s { unsigned int v1; bool v2; unsigned short v3:9; };
struct __attribute__((packed)) aUi_B_C { unsigned int v1; bool v2; char v3; };
struct __attribute__((packed)) aUi_B_D { unsigned int v1; bool v2; double v3; };
struct __attribute__((packed)) aUi_B_F { unsigned int v1; bool v2; float v3; };
struct __attribute__((packed)) aUi_B_I { unsigned int v1; bool v2; int v3; };
struct __attribute__((packed)) aUi_B_Ip { unsigned int v1; bool v2; int * v3; };
struct __attribute__((packed)) aUi_B_L { unsigned int v1; bool v2; long long v3; };
struct __attribute__((packed)) aUi_B_S { unsigned int v1; bool v2; short v3; };
struct __attribute__((packed)) aUi_B_Uc { unsigned int v1; bool v2; unsigned char v3; };
struct __attribute__((packed)) aUi_B_Ui { unsigned int v1; bool v2; unsigned int v3; };
struct __attribute__((packed)) aUi_B_Ul { unsigned int v1; bool v2; unsigned long long v3; };
struct __attribute__((packed)) aUi_B_Us { unsigned int v1; bool v2; unsigned short v3; };
struct __attribute__((packed)) aUi_B_Vp { unsigned int v1; bool v2; void * v3; };
struct __attribute__((packed)) aUi_BFu15i_B { unsigned int v1; unsigned int v2:15; bool v3; };
struct __attribute__((packed)) aUi_BFu15ll_B { unsigned int v1; unsigned long long v2:15; bool v3; };
struct __attribute__((packed)) aUi_BFu15s_B { unsigned int v1; unsigned short v2:15; bool v3; };
struct __attribute__((packed)) aUi_BFu16i_B { unsigned int v1; unsigned int v2:16; bool v3; };
struct __attribute__((packed)) aUi_BFu16ll_B { unsigned int v1; unsigned long long v2:16; bool v3; };
struct __attribute__((packed)) aUi_BFu16s_B { unsigned int v1; unsigned short v2:16; bool v3; };
struct __attribute__((packed)) aUi_BFu17i_B { unsigned int v1; unsigned int v2:17; bool v3; };
struct __attribute__((packed)) aUi_BFu17ll_B { unsigned int v1; unsigned long long v2:17; bool v3; };
struct __attribute__((packed)) aUi_BFu1c_B { unsigned int v1; unsigned char v2:1; bool v3; };
struct __attribute__((packed)) aUi_BFu1i_B { unsigned int v1; unsigned int v2:1; bool v3; };
struct __attribute__((packed)) aUi_BFu1ll_B { unsigned int v1; unsigned long long v2:1; bool v3; };
struct __attribute__((packed)) aUi_BFu1s_B { unsigned int v1; unsigned short v2:1; bool v3; };
struct __attribute__((packed)) aUi_BFu31i_B { unsigned int v1; unsigned int v2:31; bool v3; };
struct __attribute__((packed)) aUi_BFu31ll_B { unsigned int v1; unsigned long long v2:31; bool v3; };
struct __attribute__((packed)) aUi_BFu32i_B { unsigned int v1; unsigned int v2:32; bool v3; };
struct __attribute__((packed)) aUi_BFu32ll_B { unsigned int v1; unsigned long long v2:32; bool v3; };
struct __attribute__((packed)) aUi_BFu33_B { unsigned int v1; unsigned long long v2:33; bool v3; };
struct __attribute__((packed)) aUi_BFu7c_B { unsigned int v1; unsigned char v2:7; bool v3; };
struct __attribute__((packed)) aUi_BFu7i_B { unsigned int v1; unsigned int v2:7; bool v3; };
struct __attribute__((packed)) aUi_BFu7ll_B { unsigned int v1; unsigned long long v2:7; bool v3; };
struct __attribute__((packed)) aUi_BFu7s_B { unsigned int v1; unsigned short v2:7; bool v3; };
struct __attribute__((packed)) aUi_BFu8c_B { unsigned int v1; unsigned char v2:8; bool v3; };
struct __attribute__((packed)) aUi_BFu8i_B { unsigned int v1; unsigned int v2:8; bool v3; };
struct __attribute__((packed)) aUi_BFu8ll_B { unsigned int v1; unsigned long long v2:8; bool v3; };
struct __attribute__((packed)) aUi_BFu8s_B { unsigned int v1; unsigned short v2:8; bool v3; };
struct __attribute__((packed)) aUi_BFu9i_B { unsigned int v1; unsigned int v2:9; bool v3; };
struct __attribute__((packed)) aUi_BFu9ll_B { unsigned int v1; unsigned long long v2:9; bool v3; };
struct __attribute__((packed)) aUi_BFu9s_B { unsigned int v1; unsigned short v2:9; bool v3; };
struct __attribute__((packed)) aUi_C_B { unsigned int v1; char v2; bool v3; };
struct __attribute__((packed)) aUi_D_B { unsigned int v1; double v2; bool v3; };
struct __attribute__((packed)) aUi_F_B { unsigned int v1; float v2; bool v3; };
struct __attribute__((packed)) aUi_I_B { unsigned int v1; int v2; bool v3; };
struct __attribute__((packed)) aUi_Ip_B { unsigned int v1; int * v2; bool v3; };
struct __attribute__((packed)) aUi_L_B { unsigned int v1; long long v2; bool v3; };
struct __attribute__((packed)) aUi_S_B { unsigned int v1; short v2; bool v3; };
struct __attribute__((packed)) aUi_Uc_B { unsigned int v1; unsigned char v2; bool v3; };
struct __attribute__((packed)) aUi_Ui_B { unsigned int v1; unsigned int v2; bool v3; };
struct __attribute__((packed)) aUi_Ul_B { unsigned int v1; unsigned long long v2; bool v3; };
struct __attribute__((packed)) aUi_Us_B { unsigned int v1; unsigned short v2; bool v3; };
struct __attribute__((packed)) aUi_Vp_B { unsigned int v1; void * v2; bool v3; };
struct __attribute__((packed)) aUl_B { unsigned long long v1; bool v2; };
struct __attribute__((packed)) aUl_B_B { unsigned long long v1; bool v2; bool v3; };
struct __attribute__((packed)) aUl_B_BFu15i { unsigned long long v1; bool v2; unsigned int v3:15; };
struct __attribute__((packed)) aUl_B_BFu15ll { unsigned long long v1; bool v2; unsigned long long v3:15; };
struct __attribute__((packed)) aUl_B_BFu15s { unsigned long long v1; bool v2; unsigned short v3:15; };
struct __attribute__((packed)) aUl_B_BFu16i { unsigned long long v1; bool v2; unsigned int v3:16; };
struct __attribute__((packed)) aUl_B_BFu16ll { unsigned long long v1; bool v2; unsigned long long v3:16; };
struct __attribute__((packed)) aUl_B_BFu16s { unsigned long long v1; bool v2; unsigned short v3:16; };
struct __attribute__((packed)) aUl_B_BFu17i { unsigned long long v1; bool v2; unsigned int v3:17; };
struct __attribute__((packed)) aUl_B_BFu17ll { unsigned long long v1; bool v2; unsigned long long v3:17; };
struct __attribute__((packed)) aUl_B_BFu1c { unsigned long long v1; bool v2; unsigned char v3:1; };
struct __attribute__((packed)) aUl_B_BFu1i { unsigned long long v1; bool v2; unsigned int v3:1; };
struct __attribute__((packed)) aUl_B_BFu1ll { unsigned long long v1; bool v2; unsigned long long v3:1; };
struct __attribute__((packed)) aUl_B_BFu1s { unsigned long long v1; bool v2; unsigned short v3:1; };
struct __attribute__((packed)) aUl_B_BFu31i { unsigned long long v1; bool v2; unsigned int v3:31; };
struct __attribute__((packed)) aUl_B_BFu31ll { unsigned long long v1; bool v2; unsigned long long v3:31; };
struct __attribute__((packed)) aUl_B_BFu32i { unsigned long long v1; bool v2; unsigned int v3:32; };
struct __attribute__((packed)) aUl_B_BFu32ll { unsigned long long v1; bool v2; unsigned long long v3:32; };
struct __attribute__((packed)) aUl_B_BFu33 { unsigned long long v1; bool v2; unsigned long long v3:33; };
struct __attribute__((packed)) aUl_B_BFu7c { unsigned long long v1; bool v2; unsigned char v3:7; };
struct __attribute__((packed)) aUl_B_BFu7i { unsigned long long v1; bool v2; unsigned int v3:7; };
struct __attribute__((packed)) aUl_B_BFu7ll { unsigned long long v1; bool v2; unsigned long long v3:7; };
struct __attribute__((packed)) aUl_B_BFu7s { unsigned long long v1; bool v2; unsigned short v3:7; };
struct __attribute__((packed)) aUl_B_BFu8c { unsigned long long v1; bool v2; unsigned char v3:8; };
struct __attribute__((packed)) aUl_B_BFu8i { unsigned long long v1; bool v2; unsigned int v3:8; };
struct __attribute__((packed)) aUl_B_BFu8ll { unsigned long long v1; bool v2; unsigned long long v3:8; };
struct __attribute__((packed)) aUl_B_BFu8s { unsigned long long v1; bool v2; unsigned short v3:8; };
struct __attribute__((packed)) aUl_B_BFu9i { unsigned long long v1; bool v2; unsigned int v3:9; };
struct __attribute__((packed)) aUl_B_BFu9ll { unsigned long long v1; bool v2; unsigned long long v3:9; };
struct __attribute__((packed)) aUl_B_BFu9s { unsigned long long v1; bool v2; unsigned short v3:9; };
struct __attribute__((packed)) aUl_B_C { unsigned long long v1; bool v2; char v3; };
struct __attribute__((packed)) aUl_B_D { unsigned long long v1; bool v2; double v3; };
struct __attribute__((packed)) aUl_B_F { unsigned long long v1; bool v2; float v3; };
struct __attribute__((packed)) aUl_B_I { unsigned long long v1; bool v2; int v3; };
struct __attribute__((packed)) aUl_B_Ip { unsigned long long v1; bool v2; int * v3; };
struct __attribute__((packed)) aUl_B_L { unsigned long long v1; bool v2; long long v3; };
struct __attribute__((packed)) aUl_B_S { unsigned long long v1; bool v2; short v3; };
struct __attribute__((packed)) aUl_B_Uc { unsigned long long v1; bool v2; unsigned char v3; };
struct __attribute__((packed)) aUl_B_Ui { unsigned long long v1; bool v2; unsigned int v3; };
struct __attribute__((packed)) aUl_B_Ul { unsigned long long v1; bool v2; unsigned long long v3; };
struct __attribute__((packed)) aUl_B_Us { unsigned long long v1; bool v2; unsigned short v3; };
struct __attribute__((packed)) aUl_B_Vp { unsigned long long v1; bool v2; void * v3; };
struct __attribute__((packed)) aUl_BFu15i_B { unsigned long long v1; unsigned int v2:15; bool v3; };
struct __attribute__((packed)) aUl_BFu15ll_B { unsigned long long v1; unsigned long long v2:15; bool v3; };
struct __attribute__((packed)) aUl_BFu15s_B { unsigned long long v1; unsigned short v2:15; bool v3; };
struct __attribute__((packed)) aUl_BFu16i_B { unsigned long long v1; unsigned int v2:16; bool v3; };
struct __attribute__((packed)) aUl_BFu16ll_B { unsigned long long v1; unsigned long long v2:16; bool v3; };
struct __attribute__((packed)) aUl_BFu16s_B { unsigned long long v1; unsigned short v2:16; bool v3; };
struct __attribute__((packed)) aUl_BFu17i_B { unsigned long long v1; unsigned int v2:17; bool v3; };
struct __attribute__((packed)) aUl_BFu17ll_B { unsigned long long v1; unsigned long long v2:17; bool v3; };
struct __attribute__((packed)) aUl_BFu1c_B { unsigned long long v1; unsigned char v2:1; bool v3; };
struct __attribute__((packed)) aUl_BFu1i_B { unsigned long long v1; unsigned int v2:1; bool v3; };
struct __attribute__((packed)) aUl_BFu1ll_B { unsigned long long v1; unsigned long long v2:1; bool v3; };
struct __attribute__((packed)) aUl_BFu1s_B { unsigned long long v1; unsigned short v2:1; bool v3; };
struct __attribute__((packed)) aUl_BFu31i_B { unsigned long long v1; unsigned int v2:31; bool v3; };
struct __attribute__((packed)) aUl_BFu31ll_B { unsigned long long v1; unsigned long long v2:31; bool v3; };
struct __attribute__((packed)) aUl_BFu32i_B { unsigned long long v1; unsigned int v2:32; bool v3; };
struct __attribute__((packed)) aUl_BFu32ll_B { unsigned long long v1; unsigned long long v2:32; bool v3; };
struct __attribute__((packed)) aUl_BFu33_B { unsigned long long v1; unsigned long long v2:33; bool v3; };
struct __attribute__((packed)) aUl_BFu7c_B { unsigned long long v1; unsigned char v2:7; bool v3; };
struct __attribute__((packed)) aUl_BFu7i_B { unsigned long long v1; unsigned int v2:7; bool v3; };
struct __attribute__((packed)) aUl_BFu7ll_B { unsigned long long v1; unsigned long long v2:7; bool v3; };
struct __attribute__((packed)) aUl_BFu7s_B { unsigned long long v1; unsigned short v2:7; bool v3; };
struct __attribute__((packed)) aUl_BFu8c_B { unsigned long long v1; unsigned char v2:8; bool v3; };
struct __attribute__((packed)) aUl_BFu8i_B { unsigned long long v1; unsigned int v2:8; bool v3; };
struct __attribute__((packed)) aUl_BFu8ll_B { unsigned long long v1; unsigned long long v2:8; bool v3; };
struct __attribute__((packed)) aUl_BFu8s_B { unsigned long long v1; unsigned short v2:8; bool v3; };
struct __attribute__((packed)) aUl_BFu9i_B { unsigned long long v1; unsigned int v2:9; bool v3; };
struct __attribute__((packed)) aUl_BFu9ll_B { unsigned long long v1; unsigned long long v2:9; bool v3; };
struct __attribute__((packed)) aUl_BFu9s_B { unsigned long long v1; unsigned short v2:9; bool v3; };
struct __attribute__((packed)) aUl_C_B { unsigned long long v1; char v2; bool v3; };
struct __attribute__((packed)) aUl_D_B { unsigned long long v1; double v2; bool v3; };
struct __attribute__((packed)) aUl_F_B { unsigned long long v1; float v2; bool v3; };
struct __attribute__((packed)) aUl_I_B { unsigned long long v1; int v2; bool v3; };
struct __attribute__((packed)) aUl_Ip_B { unsigned long long v1; int * v2; bool v3; };
struct __attribute__((packed)) aUl_L_B { unsigned long long v1; long long v2; bool v3; };
struct __attribute__((packed)) aUl_S_B { unsigned long long v1; short v2; bool v3; };
struct __attribute__((packed)) aUl_Uc_B { unsigned long long v1; unsigned char v2; bool v3; };
struct __attribute__((packed)) aUl_Ui_B { unsigned long long v1; unsigned int v2; bool v3; };
struct __attribute__((packed)) aUl_Ul_B { unsigned long long v1; unsigned long long v2; bool v3; };
struct __attribute__((packed)) aUl_Us_B { unsigned long long v1; unsigned short v2; bool v3; };
struct __attribute__((packed)) aUl_Vp_B { unsigned long long v1; void * v2; bool v3; };
struct __attribute__((packed)) aUs_B { unsigned short v1; bool v2; };
struct __attribute__((packed)) aUs_B_B { unsigned short v1; bool v2; bool v3; };
struct __attribute__((packed)) aUs_B_BFu15i { unsigned short v1; bool v2; unsigned int v3:15; };
struct __attribute__((packed)) aUs_B_BFu15ll { unsigned short v1; bool v2; unsigned long long v3:15; };
struct __attribute__((packed)) aUs_B_BFu15s { unsigned short v1; bool v2; unsigned short v3:15; };
struct __attribute__((packed)) aUs_B_BFu16i { unsigned short v1; bool v2; unsigned int v3:16; };
struct __attribute__((packed)) aUs_B_BFu16ll { unsigned short v1; bool v2; unsigned long long v3:16; };
struct __attribute__((packed)) aUs_B_BFu16s { unsigned short v1; bool v2; unsigned short v3:16; };
struct __attribute__((packed)) aUs_B_BFu17i { unsigned short v1; bool v2; unsigned int v3:17; };
struct __attribute__((packed)) aUs_B_BFu17ll { unsigned short v1; bool v2; unsigned long long v3:17; };
struct __attribute__((packed)) aUs_B_BFu1c { unsigned short v1; bool v2; unsigned char v3:1; };
struct __attribute__((packed)) aUs_B_BFu1i { unsigned short v1; bool v2; unsigned int v3:1; };
struct __attribute__((packed)) aUs_B_BFu1ll { unsigned short v1; bool v2; unsigned long long v3:1; };
struct __attribute__((packed)) aUs_B_BFu1s { unsigned short v1; bool v2; unsigned short v3:1; };
struct __attribute__((packed)) aUs_B_BFu31i { unsigned short v1; bool v2; unsigned int v3:31; };
struct __attribute__((packed)) aUs_B_BFu31ll { unsigned short v1; bool v2; unsigned long long v3:31; };
struct __attribute__((packed)) aUs_B_BFu32i { unsigned short v1; bool v2; unsigned int v3:32; };
struct __attribute__((packed)) aUs_B_BFu32ll { unsigned short v1; bool v2; unsigned long long v3:32; };
struct __attribute__((packed)) aUs_B_BFu33 { unsigned short v1; bool v2; unsigned long long v3:33; };
struct __attribute__((packed)) aUs_B_BFu7c { unsigned short v1; bool v2; unsigned char v3:7; };
struct __attribute__((packed)) aUs_B_BFu7i { unsigned short v1; bool v2; unsigned int v3:7; };
struct __attribute__((packed)) aUs_B_BFu7ll { unsigned short v1; bool v2; unsigned long long v3:7; };
struct __attribute__((packed)) aUs_B_BFu7s { unsigned short v1; bool v2; unsigned short v3:7; };
struct __attribute__((packed)) aUs_B_BFu8c { unsigned short v1; bool v2; unsigned char v3:8; };
struct __attribute__((packed)) aUs_B_BFu8i { unsigned short v1; bool v2; unsigned int v3:8; };
struct __attribute__((packed)) aUs_B_BFu8ll { unsigned short v1; bool v2; unsigned long long v3:8; };
struct __attribute__((packed)) aUs_B_BFu8s { unsigned short v1; bool v2; unsigned short v3:8; };
struct __attribute__((packed)) aUs_B_BFu9i { unsigned short v1; bool v2; unsigned int v3:9; };
struct __attribute__((packed)) aUs_B_BFu9ll { unsigned short v1; bool v2; unsigned long long v3:9; };
struct __attribute__((packed)) aUs_B_BFu9s { unsigned short v1; bool v2; unsigned short v3:9; };
struct __attribute__((packed)) aUs_B_C { unsigned short v1; bool v2; char v3; };
struct __attribute__((packed)) aUs_B_D { unsigned short v1; bool v2; double v3; };
struct __attribute__((packed)) aUs_B_F { unsigned short v1; bool v2; float v3; };
struct __attribute__((packed)) aUs_B_I { unsigned short v1; bool v2; int v3; };
struct __attribute__((packed)) aUs_B_Ip { unsigned short v1; bool v2; int * v3; };
struct __attribute__((packed)) aUs_B_L { unsigned short v1; bool v2; long long v3; };
struct __attribute__((packed)) aUs_B_S { unsigned short v1; bool v2; short v3; };
struct __attribute__((packed)) aUs_B_Uc { unsigned short v1; bool v2; unsigned char v3; };
struct __attribute__((packed)) aUs_B_Ui { unsigned short v1; bool v2; unsigned int v3; };
struct __attribute__((packed)) aUs_B_Ul { unsigned short v1; bool v2; unsigned long long v3; };
struct __attribute__((packed)) aUs_B_Us { unsigned short v1; bool v2; unsigned short v3; };
struct __attribute__((packed)) aUs_B_Vp { unsigned short v1; bool v2; void * v3; };
struct __attribute__((packed)) aUs_BFu15i_B { unsigned short v1; unsigned int v2:15; bool v3; };
struct __attribute__((packed)) aUs_BFu15ll_B { unsigned short v1; unsigned long long v2:15; bool v3; };
struct __attribute__((packed)) aUs_BFu15s_B { unsigned short v1; unsigned short v2:15; bool v3; };
struct __attribute__((packed)) aUs_BFu16i_B { unsigned short v1; unsigned int v2:16; bool v3; };
struct __attribute__((packed)) aUs_BFu16ll_B { unsigned short v1; unsigned long long v2:16; bool v3; };
struct __attribute__((packed)) aUs_BFu16s_B { unsigned short v1; unsigned short v2:16; bool v3; };
struct __attribute__((packed)) aUs_BFu17i_B { unsigned short v1; unsigned int v2:17; bool v3; };
struct __attribute__((packed)) aUs_BFu17ll_B { unsigned short v1; unsigned long long v2:17; bool v3; };
struct __attribute__((packed)) aUs_BFu1c_B { unsigned short v1; unsigned char v2:1; bool v3; };
struct __attribute__((packed)) aUs_BFu1i_B { unsigned short v1; unsigned int v2:1; bool v3; };
struct __attribute__((packed)) aUs_BFu1ll_B { unsigned short v1; unsigned long long v2:1; bool v3; };
struct __attribute__((packed)) aUs_BFu1s_B { unsigned short v1; unsigned short v2:1; bool v3; };
struct __attribute__((packed)) aUs_BFu31i_B { unsigned short v1; unsigned int v2:31; bool v3; };
struct __attribute__((packed)) aUs_BFu31ll_B { unsigned short v1; unsigned long long v2:31; bool v3; };
struct __attribute__((packed)) aUs_BFu32i_B { unsigned short v1; unsigned int v2:32; bool v3; };
struct __attribute__((packed)) aUs_BFu32ll_B { unsigned short v1; unsigned long long v2:32; bool v3; };
struct __attribute__((packed)) aUs_BFu33_B { unsigned short v1; unsigned long long v2:33; bool v3; };
struct __attribute__((packed)) aUs_BFu7c_B { unsigned short v1; unsigned char v2:7; bool v3; };
struct __attribute__((packed)) aUs_BFu7i_B { unsigned short v1; unsigned int v2:7; bool v3; };
struct __attribute__((packed)) aUs_BFu7ll_B { unsigned short v1; unsigned long long v2:7; bool v3; };
struct __attribute__((packed)) aUs_BFu7s_B { unsigned short v1; unsigned short v2:7; bool v3; };
struct __attribute__((packed)) aUs_BFu8c_B { unsigned short v1; unsigned char v2:8; bool v3; };
struct __attribute__((packed)) aUs_BFu8i_B { unsigned short v1; unsigned int v2:8; bool v3; };
struct __attribute__((packed)) aUs_BFu8ll_B { unsigned short v1; unsigned long long v2:8; bool v3; };
struct __attribute__((packed)) aUs_BFu8s_B { unsigned short v1; unsigned short v2:8; bool v3; };
struct __attribute__((packed)) aUs_BFu9i_B { unsigned short v1; unsigned int v2:9; bool v3; };
struct __attribute__((packed)) aUs_BFu9ll_B { unsigned short v1; unsigned long long v2:9; bool v3; };
struct __attribute__((packed)) aUs_BFu9s_B { unsigned short v1; unsigned short v2:9; bool v3; };
struct __attribute__((packed)) aUs_C_B { unsigned short v1; char v2; bool v3; };
struct __attribute__((packed)) aUs_D_B { unsigned short v1; double v2; bool v3; };
struct __attribute__((packed)) aUs_F_B { unsigned short v1; float v2; bool v3; };
struct __attribute__((packed)) aUs_I_B { unsigned short v1; int v2; bool v3; };
struct __attribute__((packed)) aUs_Ip_B { unsigned short v1; int * v2; bool v3; };
struct __attribute__((packed)) aUs_L_B { unsigned short v1; long long v2; bool v3; };
struct __attribute__((packed)) aUs_S_B { unsigned short v1; short v2; bool v3; };
struct __attribute__((packed)) aUs_Uc_B { unsigned short v1; unsigned char v2; bool v3; };
struct __attribute__((packed)) aUs_Ui_B { unsigned short v1; unsigned int v2; bool v3; };
struct __attribute__((packed)) aUs_Ul_B { unsigned short v1; unsigned long long v2; bool v3; };
struct __attribute__((packed)) aUs_Us_B { unsigned short v1; unsigned short v2; bool v3; };
struct __attribute__((packed)) aUs_Vp_B { unsigned short v1; void * v2; bool v3; };
struct __attribute__((packed)) aVp_B { void * v1; bool v2; };
struct __attribute__((packed)) aVp_B_B { void * v1; bool v2; bool v3; };
struct __attribute__((packed)) aVp_B_BFu15i { void * v1; bool v2; unsigned int v3:15; };
struct __attribute__((packed)) aVp_B_BFu15ll { void * v1; bool v2; unsigned long long v3:15; };
struct __attribute__((packed)) aVp_B_BFu15s { void * v1; bool v2; unsigned short v3:15; };
struct __attribute__((packed)) aVp_B_BFu16i { void * v1; bool v2; unsigned int v3:16; };
struct __attribute__((packed)) aVp_B_BFu16ll { void * v1; bool v2; unsigned long long v3:16; };
struct __attribute__((packed)) aVp_B_BFu16s { void * v1; bool v2; unsigned short v3:16; };
struct __attribute__((packed)) aVp_B_BFu17i { void * v1; bool v2; unsigned int v3:17; };
struct __attribute__((packed)) aVp_B_BFu17ll { void * v1; bool v2; unsigned long long v3:17; };
struct __attribute__((packed)) aVp_B_BFu1c { void * v1; bool v2; unsigned char v3:1; };
struct __attribute__((packed)) aVp_B_BFu1i { void * v1; bool v2; unsigned int v3:1; };
struct __attribute__((packed)) aVp_B_BFu1ll { void * v1; bool v2; unsigned long long v3:1; };
struct __attribute__((packed)) aVp_B_BFu1s { void * v1; bool v2; unsigned short v3:1; };
struct __attribute__((packed)) aVp_B_BFu31i { void * v1; bool v2; unsigned int v3:31; };
struct __attribute__((packed)) aVp_B_BFu31ll { void * v1; bool v2; unsigned long long v3:31; };
struct __attribute__((packed)) aVp_B_BFu32i { void * v1; bool v2; unsigned int v3:32; };
struct __attribute__((packed)) aVp_B_BFu32ll { void * v1; bool v2; unsigned long long v3:32; };
struct __attribute__((packed)) aVp_B_BFu33 { void * v1; bool v2; unsigned long long v3:33; };
struct __attribute__((packed)) aVp_B_BFu7c { void * v1; bool v2; unsigned char v3:7; };
struct __attribute__((packed)) aVp_B_BFu7i { void * v1; bool v2; unsigned int v3:7; };
struct __attribute__((packed)) aVp_B_BFu7ll { void * v1; bool v2; unsigned long long v3:7; };
struct __attribute__((packed)) aVp_B_BFu7s { void * v1; bool v2; unsigned short v3:7; };
struct __attribute__((packed)) aVp_B_BFu8c { void * v1; bool v2; unsigned char v3:8; };
struct __attribute__((packed)) aVp_B_BFu8i { void * v1; bool v2; unsigned int v3:8; };
struct __attribute__((packed)) aVp_B_BFu8ll { void * v1; bool v2; unsigned long long v3:8; };
struct __attribute__((packed)) aVp_B_BFu8s { void * v1; bool v2; unsigned short v3:8; };
struct __attribute__((packed)) aVp_B_BFu9i { void * v1; bool v2; unsigned int v3:9; };
struct __attribute__((packed)) aVp_B_BFu9ll { void * v1; bool v2; unsigned long long v3:9; };
struct __attribute__((packed)) aVp_B_BFu9s { void * v1; bool v2; unsigned short v3:9; };
struct __attribute__((packed)) aVp_B_C { void * v1; bool v2; char v3; };
struct __attribute__((packed)) aVp_B_D { void * v1; bool v2; double v3; };
struct __attribute__((packed)) aVp_B_F { void * v1; bool v2; float v3; };
struct __attribute__((packed)) aVp_B_I { void * v1; bool v2; int v3; };
struct __attribute__((packed)) aVp_B_Ip { void * v1; bool v2; int * v3; };
struct __attribute__((packed)) aVp_B_L { void * v1; bool v2; long long v3; };
struct __attribute__((packed)) aVp_B_S { void * v1; bool v2; short v3; };
struct __attribute__((packed)) aVp_B_Uc { void * v1; bool v2; unsigned char v3; };
struct __attribute__((packed)) aVp_B_Ui { void * v1; bool v2; unsigned int v3; };
struct __attribute__((packed)) aVp_B_Ul { void * v1; bool v2; unsigned long long v3; };
struct __attribute__((packed)) aVp_B_Us { void * v1; bool v2; unsigned short v3; };
struct __attribute__((packed)) aVp_B_Vp { void * v1; bool v2; void * v3; };
struct __attribute__((packed)) aVp_BFu15i_B { void * v1; unsigned int v2:15; bool v3; };
struct __attribute__((packed)) aVp_BFu15ll_B { void * v1; unsigned long long v2:15; bool v3; };
struct __attribute__((packed)) aVp_BFu15s_B { void * v1; unsigned short v2:15; bool v3; };
struct __attribute__((packed)) aVp_BFu16i_B { void * v1; unsigned int v2:16; bool v3; };
struct __attribute__((packed)) aVp_BFu16ll_B { void * v1; unsigned long long v2:16; bool v3; };
struct __attribute__((packed)) aVp_BFu16s_B { void * v1; unsigned short v2:16; bool v3; };
struct __attribute__((packed)) aVp_BFu17i_B { void * v1; unsigned int v2:17; bool v3; };
struct __attribute__((packed)) aVp_BFu17ll_B { void * v1; unsigned long long v2:17; bool v3; };
struct __attribute__((packed)) aVp_BFu1c_B { void * v1; unsigned char v2:1; bool v3; };
struct __attribute__((packed)) aVp_BFu1i_B { void * v1; unsigned int v2:1; bool v3; };
struct __attribute__((packed)) aVp_BFu1ll_B { void * v1; unsigned long long v2:1; bool v3; };
struct __attribute__((packed)) aVp_BFu1s_B { void * v1; unsigned short v2:1; bool v3; };
struct __attribute__((packed)) aVp_BFu31i_B { void * v1; unsigned int v2:31; bool v3; };
struct __attribute__((packed)) aVp_BFu31ll_B { void * v1; unsigned long long v2:31; bool v3; };
struct __attribute__((packed)) aVp_BFu32i_B { void * v1; unsigned int v2:32; bool v3; };
struct __attribute__((packed)) aVp_BFu32ll_B { void * v1; unsigned long long v2:32; bool v3; };
struct __attribute__((packed)) aVp_BFu33_B { void * v1; unsigned long long v2:33; bool v3; };
struct __attribute__((packed)) aVp_BFu7c_B { void * v1; unsigned char v2:7; bool v3; };
struct __attribute__((packed)) aVp_BFu7i_B { void * v1; unsigned int v2:7; bool v3; };
struct __attribute__((packed)) aVp_BFu7ll_B { void * v1; unsigned long long v2:7; bool v3; };
struct __attribute__((packed)) aVp_BFu7s_B { void * v1; unsigned short v2:7; bool v3; };
struct __attribute__((packed)) aVp_BFu8c_B { void * v1; unsigned char v2:8; bool v3; };
struct __attribute__((packed)) aVp_BFu8i_B { void * v1; unsigned int v2:8; bool v3; };
struct __attribute__((packed)) aVp_BFu8ll_B { void * v1; unsigned long long v2:8; bool v3; };
struct __attribute__((packed)) aVp_BFu8s_B { void * v1; unsigned short v2:8; bool v3; };
struct __attribute__((packed)) aVp_BFu9i_B { void * v1; unsigned int v2:9; bool v3; };
struct __attribute__((packed)) aVp_BFu9ll_B { void * v1; unsigned long long v2:9; bool v3; };
struct __attribute__((packed)) aVp_BFu9s_B { void * v1; unsigned short v2:9; bool v3; };
struct __attribute__((packed)) aVp_C_B { void * v1; char v2; bool v3; };
struct __attribute__((packed)) aVp_D_B { void * v1; double v2; bool v3; };
struct __attribute__((packed)) aVp_F_B { void * v1; float v2; bool v3; };
struct __attribute__((packed)) aVp_I_B { void * v1; int v2; bool v3; };
struct __attribute__((packed)) aVp_Ip_B { void * v1; int * v2; bool v3; };
struct __attribute__((packed)) aVp_L_B { void * v1; long long v2; bool v3; };
struct __attribute__((packed)) aVp_S_B { void * v1; short v2; bool v3; };
struct __attribute__((packed)) aVp_Uc_B { void * v1; unsigned char v2; bool v3; };
struct __attribute__((packed)) aVp_Ui_B { void * v1; unsigned int v2; bool v3; };
struct __attribute__((packed)) aVp_Ul_B { void * v1; unsigned long long v2; bool v3; };
struct __attribute__((packed)) aVp_Us_B { void * v1; unsigned short v2; bool v3; };
struct __attribute__((packed)) aVp_Vp_B { void * v1; void * v2; bool v3; };
#pragma pack(1)
struct B { bool v1; };
struct B_B { bool v1; bool v2; };
struct B_B_B { bool v1; bool v2; bool v3; };
struct B_B_BFu15i { bool v1; bool v2; unsigned int v3:15; };
struct B_B_BFu15ll { bool v1; bool v2; unsigned long long v3:15; };
struct B_B_BFu15s { bool v1; bool v2; unsigned short v3:15; };
struct B_B_BFu16i { bool v1; bool v2; unsigned int v3:16; };
struct B_B_BFu16ll { bool v1; bool v2; unsigned long long v3:16; };
struct B_B_BFu16s { bool v1; bool v2; unsigned short v3:16; };
struct B_B_BFu17i { bool v1; bool v2; unsigned int v3:17; };
struct B_B_BFu17ll { bool v1; bool v2; unsigned long long v3:17; };
struct B_B_BFu1c { bool v1; bool v2; unsigned char v3:1; };
struct B_B_BFu1i { bool v1; bool v2; unsigned int v3:1; };
struct B_B_BFu1ll { bool v1; bool v2; unsigned long long v3:1; };
struct B_B_BFu1s { bool v1; bool v2; unsigned short v3:1; };
struct B_B_BFu31i { bool v1; bool v2; unsigned int v3:31; };
struct B_B_BFu31ll { bool v1; bool v2; unsigned long long v3:31; };
struct B_B_BFu32i { bool v1; bool v2; unsigned int v3:32; };
struct B_B_BFu32ll { bool v1; bool v2; unsigned long long v3:32; };
struct B_B_BFu33 { bool v1; bool v2; unsigned long long v3:33; };
struct B_B_BFu7c { bool v1; bool v2; unsigned char v3:7; };
struct B_B_BFu7i { bool v1; bool v2; unsigned int v3:7; };
struct B_B_BFu7ll { bool v1; bool v2; unsigned long long v3:7; };
struct B_B_BFu7s { bool v1; bool v2; unsigned short v3:7; };
struct B_B_BFu8c { bool v1; bool v2; unsigned char v3:8; };
struct B_B_BFu8i { bool v1; bool v2; unsigned int v3:8; };
struct B_B_BFu8ll { bool v1; bool v2; unsigned long long v3:8; };
struct B_B_BFu8s { bool v1; bool v2; unsigned short v3:8; };
struct B_B_BFu9i { bool v1; bool v2; unsigned int v3:9; };
struct B_B_BFu9ll { bool v1; bool v2; unsigned long long v3:9; };
struct B_B_BFu9s { bool v1; bool v2; unsigned short v3:9; };
struct B_B_C { bool v1; bool v2; char v3; };
struct B_B_D { bool v1; bool v2; double v3; };
struct B_B_F { bool v1; bool v2; float v3; };
struct B_B_I { bool v1; bool v2; int v3; };
struct B_B_Ip { bool v1; bool v2; int * v3; };
struct B_B_L { bool v1; bool v2; long long v3; };
struct B_B_S { bool v1; bool v2; short v3; };
struct B_B_Uc { bool v1; bool v2; unsigned char v3; };
struct B_B_Ui { bool v1; bool v2; unsigned int v3; };
struct B_B_Ul { bool v1; bool v2; unsigned long long v3; };
struct B_B_Us { bool v1; bool v2; unsigned short v3; };
struct B_B_Vp { bool v1; bool v2; void * v3; };
struct B_BFu15i { bool v1; unsigned int v2:15; };
struct B_BFu15i_B { bool v1; unsigned int v2:15; bool v3; };
struct B_BFu15i_BFu15i { bool v1; unsigned int v2:15; unsigned int v3:15; };
struct B_BFu15i_BFu15ll { bool v1; unsigned int v2:15; unsigned long long v3:15; };
struct B_BFu15i_BFu15s { bool v1; unsigned int v2:15; unsigned short v3:15; };
struct B_BFu15i_BFu16i { bool v1; unsigned int v2:15; unsigned int v3:16; };
struct B_BFu15i_BFu16ll { bool v1; unsigned int v2:15; unsigned long long v3:16; };
struct B_BFu15i_BFu16s { bool v1; unsigned int v2:15; unsigned short v3:16; };
struct B_BFu15i_BFu17i { bool v1; unsigned int v2:15; unsigned int v3:17; };
struct B_BFu15i_BFu17ll { bool v1; unsigned int v2:15; unsigned long long v3:17; };
struct B_BFu15i_BFu1c { bool v1; unsigned int v2:15; unsigned char v3:1; };
struct B_BFu15i_BFu1i { bool v1; unsigned int v2:15; unsigned int v3:1; };
struct B_BFu15i_BFu1ll { bool v1; unsigned int v2:15; unsigned long long v3:1; };
struct B_BFu15i_BFu1s { bool v1; unsigned int v2:15; unsigned short v3:1; };
struct B_BFu15i_BFu31i { bool v1; unsigned int v2:15; unsigned int v3:31; };
struct B_BFu15i_BFu31ll { bool v1; unsigned int v2:15; unsigned long long v3:31; };
struct B_BFu15i_BFu32i { bool v1; unsigned int v2:15; unsigned int v3:32; };
struct B_BFu15i_BFu32ll { bool v1; unsigned int v2:15; unsigned long long v3:32; };
struct B_BFu15i_BFu33 { bool v1; unsigned int v2:15; unsigned long long v3:33; };
struct B_BFu15i_BFu7c { bool v1; unsigned int v2:15; unsigned char v3:7; };
struct B_BFu15i_BFu7i { bool v1; unsigned int v2:15; unsigned int v3:7; };
struct B_BFu15i_BFu7ll { bool v1; unsigned int v2:15; unsigned long long v3:7; };
struct B_BFu15i_BFu7s { bool v1; unsigned int v2:15; unsigned short v3:7; };
struct B_BFu15i_BFu8c { bool v1; unsigned int v2:15; unsigned char v3:8; };
struct B_BFu15i_BFu8i { bool v1; unsigned int v2:15; unsigned int v3:8; };
struct B_BFu15i_BFu8ll { bool v1; unsigned int v2:15; unsigned long long v3:8; };
struct B_BFu15i_BFu8s { bool v1; unsigned int v2:15; unsigned short v3:8; };
struct B_BFu15i_BFu9i { bool v1; unsigned int v2:15; unsigned int v3:9; };
struct B_BFu15i_BFu9ll { bool v1; unsigned int v2:15; unsigned long long v3:9; };
struct B_BFu15i_BFu9s { bool v1; unsigned int v2:15; unsigned short v3:9; };
struct B_BFu15i_C { bool v1; unsigned int v2:15; char v3; };
struct B_BFu15i_D { bool v1; unsigned int v2:15; double v3; };
struct B_BFu15i_F { bool v1; unsigned int v2:15; float v3; };
struct B_BFu15i_I { bool v1; unsigned int v2:15; int v3; };
struct B_BFu15i_Ip { bool v1; unsigned int v2:15; int * v3; };
struct B_BFu15i_L { bool v1; unsigned int v2:15; long long v3; };
struct B_BFu15i_S { bool v1; unsigned int v2:15; short v3; };
struct B_BFu15i_Uc { bool v1; unsigned int v2:15; unsigned char v3; };
struct B_BFu15i_Ui { bool v1; unsigned int v2:15; unsigned int v3; };
struct B_BFu15i_Ul { bool v1; unsigned int v2:15; unsigned long long v3; };
struct B_BFu15i_Us { bool v1; unsigned int v2:15; unsigned short v3; };
struct B_BFu15i_Vp { bool v1; unsigned int v2:15; void * v3; };
struct B_BFu15ll { bool v1; unsigned long long v2:15; };
struct B_BFu15ll_B { bool v1; unsigned long long v2:15; bool v3; };
struct B_BFu15ll_BFu15i { bool v1; unsigned long long v2:15; unsigned int v3:15; };
struct B_BFu15ll_BFu15ll { bool v1; unsigned long long v2:15; unsigned long long v3:15; };
struct B_BFu15ll_BFu15s { bool v1; unsigned long long v2:15; unsigned short v3:15; };
struct B_BFu15ll_BFu16i { bool v1; unsigned long long v2:15; unsigned int v3:16; };
struct B_BFu15ll_BFu16ll { bool v1; unsigned long long v2:15; unsigned long long v3:16; };
struct B_BFu15ll_BFu16s { bool v1; unsigned long long v2:15; unsigned short v3:16; };
struct B_BFu15ll_BFu17i { bool v1; unsigned long long v2:15; unsigned int v3:17; };
struct B_BFu15ll_BFu17ll { bool v1; unsigned long long v2:15; unsigned long long v3:17; };
struct B_BFu15ll_BFu1c { bool v1; unsigned long long v2:15; unsigned char v3:1; };
struct B_BFu15ll_BFu1i { bool v1; unsigned long long v2:15; unsigned int v3:1; };
struct B_BFu15ll_BFu1ll { bool v1; unsigned long long v2:15; unsigned long long v3:1; };
struct B_BFu15ll_BFu1s { bool v1; unsigned long long v2:15; unsigned short v3:1; };
struct B_BFu15ll_BFu31i { bool v1; unsigned long long v2:15; unsigned int v3:31; };
struct B_BFu15ll_BFu31ll { bool v1; unsigned long long v2:15; unsigned long long v3:31; };
struct B_BFu15ll_BFu32i { bool v1; unsigned long long v2:15; unsigned int v3:32; };
struct B_BFu15ll_BFu32ll { bool v1; unsigned long long v2:15; unsigned long long v3:32; };
struct B_BFu15ll_BFu33 { bool v1; unsigned long long v2:15; unsigned long long v3:33; };
struct B_BFu15ll_BFu7c { bool v1; unsigned long long v2:15; unsigned char v3:7; };
struct B_BFu15ll_BFu7i { bool v1; unsigned long long v2:15; unsigned int v3:7; };
struct B_BFu15ll_BFu7ll { bool v1; unsigned long long v2:15; unsigned long long v3:7; };
struct B_BFu15ll_BFu7s { bool v1; unsigned long long v2:15; unsigned short v3:7; };
struct B_BFu15ll_BFu8c { bool v1; unsigned long long v2:15; unsigned char v3:8; };
struct B_BFu15ll_BFu8i { bool v1; unsigned long long v2:15; unsigned int v3:8; };
struct B_BFu15ll_BFu8ll { bool v1; unsigned long long v2:15; unsigned long long v3:8; };
struct B_BFu15ll_BFu8s { bool v1; unsigned long long v2:15; unsigned short v3:8; };
struct B_BFu15ll_BFu9i { bool v1; unsigned long long v2:15; unsigned int v3:9; };
struct B_BFu15ll_BFu9ll { bool v1; unsigned long long v2:15; unsigned long long v3:9; };
struct B_BFu15ll_BFu9s { bool v1; unsigned long long v2:15; unsigned short v3:9; };
struct B_BFu15ll_C { bool v1; unsigned long long v2:15; char v3; };
struct B_BFu15ll_D { bool v1; unsigned long long v2:15; double v3; };
struct B_BFu15ll_F { bool v1; unsigned long long v2:15; float v3; };
struct B_BFu15ll_I { bool v1; unsigned long long v2:15; int v3; };
struct B_BFu15ll_Ip { bool v1; unsigned long long v2:15; int * v3; };
struct B_BFu15ll_L { bool v1; unsigned long long v2:15; long long v3; };
struct B_BFu15ll_S { bool v1; unsigned long long v2:15; short v3; };
struct B_BFu15ll_Uc { bool v1; unsigned long long v2:15; unsigned char v3; };
struct B_BFu15ll_Ui { bool v1; unsigned long long v2:15; unsigned int v3; };
struct B_BFu15ll_Ul { bool v1; unsigned long long v2:15; unsigned long long v3; };
struct B_BFu15ll_Us { bool v1; unsigned long long v2:15; unsigned short v3; };
struct B_BFu15ll_Vp { bool v1; unsigned long long v2:15; void * v3; };
struct B_BFu15s { bool v1; unsigned short v2:15; };
struct B_BFu15s_B { bool v1; unsigned short v2:15; bool v3; };
struct B_BFu15s_BFu15i { bool v1; unsigned short v2:15; unsigned int v3:15; };
struct B_BFu15s_BFu15ll { bool v1; unsigned short v2:15; unsigned long long v3:15; };
struct B_BFu15s_BFu15s { bool v1; unsigned short v2:15; unsigned short v3:15; };
struct B_BFu15s_BFu16i { bool v1; unsigned short v2:15; unsigned int v3:16; };
struct B_BFu15s_BFu16ll { bool v1; unsigned short v2:15; unsigned long long v3:16; };
struct B_BFu15s_BFu16s { bool v1; unsigned short v2:15; unsigned short v3:16; };
struct B_BFu15s_BFu17i { bool v1; unsigned short v2:15; unsigned int v3:17; };
struct B_BFu15s_BFu17ll { bool v1; unsigned short v2:15; unsigned long long v3:17; };
struct B_BFu15s_BFu1c { bool v1; unsigned short v2:15; unsigned char v3:1; };
struct B_BFu15s_BFu1i { bool v1; unsigned short v2:15; unsigned int v3:1; };
struct B_BFu15s_BFu1ll { bool v1; unsigned short v2:15; unsigned long long v3:1; };
struct B_BFu15s_BFu1s { bool v1; unsigned short v2:15; unsigned short v3:1; };
struct B_BFu15s_BFu31i { bool v1; unsigned short v2:15; unsigned int v3:31; };
struct B_BFu15s_BFu31ll { bool v1; unsigned short v2:15; unsigned long long v3:31; };
struct B_BFu15s_BFu32i { bool v1; unsigned short v2:15; unsigned int v3:32; };
struct B_BFu15s_BFu32ll { bool v1; unsigned short v2:15; unsigned long long v3:32; };
struct B_BFu15s_BFu33 { bool v1; unsigned short v2:15; unsigned long long v3:33; };
struct B_BFu15s_BFu7c { bool v1; unsigned short v2:15; unsigned char v3:7; };
struct B_BFu15s_BFu7i { bool v1; unsigned short v2:15; unsigned int v3:7; };
struct B_BFu15s_BFu7ll { bool v1; unsigned short v2:15; unsigned long long v3:7; };
struct B_BFu15s_BFu7s { bool v1; unsigned short v2:15; unsigned short v3:7; };
struct B_BFu15s_BFu8c { bool v1; unsigned short v2:15; unsigned char v3:8; };
struct B_BFu15s_BFu8i { bool v1; unsigned short v2:15; unsigned int v3:8; };
struct B_BFu15s_BFu8ll { bool v1; unsigned short v2:15; unsigned long long v3:8; };
struct B_BFu15s_BFu8s { bool v1; unsigned short v2:15; unsigned short v3:8; };
struct B_BFu15s_BFu9i { bool v1; unsigned short v2:15; unsigned int v3:9; };
struct B_BFu15s_BFu9ll { bool v1; unsigned short v2:15; unsigned long long v3:9; };
struct B_BFu15s_BFu9s { bool v1; unsigned short v2:15; unsigned short v3:9; };
struct B_BFu15s_C { bool v1; unsigned short v2:15; char v3; };
struct B_BFu15s_D { bool v1; unsigned short v2:15; double v3; };
struct B_BFu15s_F { bool v1; unsigned short v2:15; float v3; };
struct B_BFu15s_I { bool v1; unsigned short v2:15; int v3; };
struct B_BFu15s_Ip { bool v1; unsigned short v2:15; int * v3; };
struct B_BFu15s_L { bool v1; unsigned short v2:15; long long v3; };
struct B_BFu15s_S { bool v1; unsigned short v2:15; short v3; };
struct B_BFu15s_Uc { bool v1; unsigned short v2:15; unsigned char v3; };
struct B_BFu15s_Ui { bool v1; unsigned short v2:15; unsigned int v3; };
struct B_BFu15s_Ul { bool v1; unsigned short v2:15; unsigned long long v3; };
struct B_BFu15s_Us { bool v1; unsigned short v2:15; unsigned short v3; };
struct B_BFu15s_Vp { bool v1; unsigned short v2:15; void * v3; };
struct B_BFu16i { bool v1; unsigned int v2:16; };
struct B_BFu16i_B { bool v1; unsigned int v2:16; bool v3; };
struct B_BFu16i_BFu15i { bool v1; unsigned int v2:16; unsigned int v3:15; };
struct B_BFu16i_BFu15ll { bool v1; unsigned int v2:16; unsigned long long v3:15; };
struct B_BFu16i_BFu15s { bool v1; unsigned int v2:16; unsigned short v3:15; };
struct B_BFu16i_BFu16i { bool v1; unsigned int v2:16; unsigned int v3:16; };
struct B_BFu16i_BFu16ll { bool v1; unsigned int v2:16; unsigned long long v3:16; };
struct B_BFu16i_BFu16s { bool v1; unsigned int v2:16; unsigned short v3:16; };
struct B_BFu16i_BFu17i { bool v1; unsigned int v2:16; unsigned int v3:17; };
struct B_BFu16i_BFu17ll { bool v1; unsigned int v2:16; unsigned long long v3:17; };
struct B_BFu16i_BFu1c { bool v1; unsigned int v2:16; unsigned char v3:1; };
struct B_BFu16i_BFu1i { bool v1; unsigned int v2:16; unsigned int v3:1; };
struct B_BFu16i_BFu1ll { bool v1; unsigned int v2:16; unsigned long long v3:1; };
struct B_BFu16i_BFu1s { bool v1; unsigned int v2:16; unsigned short v3:1; };
struct B_BFu16i_BFu31i { bool v1; unsigned int v2:16; unsigned int v3:31; };
struct B_BFu16i_BFu31ll { bool v1; unsigned int v2:16; unsigned long long v3:31; };
struct B_BFu16i_BFu32i { bool v1; unsigned int v2:16; unsigned int v3:32; };
struct B_BFu16i_BFu32ll { bool v1; unsigned int v2:16; unsigned long long v3:32; };
struct B_BFu16i_BFu33 { bool v1; unsigned int v2:16; unsigned long long v3:33; };
struct B_BFu16i_BFu7c { bool v1; unsigned int v2:16; unsigned char v3:7; };
struct B_BFu16i_BFu7i { bool v1; unsigned int v2:16; unsigned int v3:7; };
struct B_BFu16i_BFu7ll { bool v1; unsigned int v2:16; unsigned long long v3:7; };
struct B_BFu16i_BFu7s { bool v1; unsigned int v2:16; unsigned short v3:7; };
struct B_BFu16i_BFu8c { bool v1; unsigned int v2:16; unsigned char v3:8; };
struct B_BFu16i_BFu8i { bool v1; unsigned int v2:16; unsigned int v3:8; };
struct B_BFu16i_BFu8ll { bool v1; unsigned int v2:16; unsigned long long v3:8; };
struct B_BFu16i_BFu8s { bool v1; unsigned int v2:16; unsigned short v3:8; };
struct B_BFu16i_BFu9i { bool v1; unsigned int v2:16; unsigned int v3:9; };
struct B_BFu16i_BFu9ll { bool v1; unsigned int v2:16; unsigned long long v3:9; };
struct B_BFu16i_BFu9s { bool v1; unsigned int v2:16; unsigned short v3:9; };
struct B_BFu16i_C { bool v1; unsigned int v2:16; char v3; };
struct B_BFu16i_D { bool v1; unsigned int v2:16; double v3; };
struct B_BFu16i_F { bool v1; unsigned int v2:16; float v3; };
struct B_BFu16i_I { bool v1; unsigned int v2:16; int v3; };
struct B_BFu16i_Ip { bool v1; unsigned int v2:16; int * v3; };
struct B_BFu16i_L { bool v1; unsigned int v2:16; long long v3; };
struct B_BFu16i_S { bool v1; unsigned int v2:16; short v3; };
struct B_BFu16i_Uc { bool v1; unsigned int v2:16; unsigned char v3; };
struct B_BFu16i_Ui { bool v1; unsigned int v2:16; unsigned int v3; };
struct B_BFu16i_Ul { bool v1; unsigned int v2:16; unsigned long long v3; };
struct B_BFu16i_Us { bool v1; unsigned int v2:16; unsigned short v3; };
struct B_BFu16i_Vp { bool v1; unsigned int v2:16; void * v3; };
struct B_BFu16ll { bool v1; unsigned long long v2:16; };
struct B_BFu16ll_B { bool v1; unsigned long long v2:16; bool v3; };
struct B_BFu16ll_BFu15i { bool v1; unsigned long long v2:16; unsigned int v3:15; };
struct B_BFu16ll_BFu15ll { bool v1; unsigned long long v2:16; unsigned long long v3:15; };
struct B_BFu16ll_BFu15s { bool v1; unsigned long long v2:16; unsigned short v3:15; };
struct B_BFu16ll_BFu16i { bool v1; unsigned long long v2:16; unsigned int v3:16; };
struct B_BFu16ll_BFu16ll { bool v1; unsigned long long v2:16; unsigned long long v3:16; };
struct B_BFu16ll_BFu16s { bool v1; unsigned long long v2:16; unsigned short v3:16; };
struct B_BFu16ll_BFu17i { bool v1; unsigned long long v2:16; unsigned int v3:17; };
struct B_BFu16ll_BFu17ll { bool v1; unsigned long long v2:16; unsigned long long v3:17; };
struct B_BFu16ll_BFu1c { bool v1; unsigned long long v2:16; unsigned char v3:1; };
struct B_BFu16ll_BFu1i { bool v1; unsigned long long v2:16; unsigned int v3:1; };
struct B_BFu16ll_BFu1ll { bool v1; unsigned long long v2:16; unsigned long long v3:1; };
struct B_BFu16ll_BFu1s { bool v1; unsigned long long v2:16; unsigned short v3:1; };
struct B_BFu16ll_BFu31i { bool v1; unsigned long long v2:16; unsigned int v3:31; };
struct B_BFu16ll_BFu31ll { bool v1; unsigned long long v2:16; unsigned long long v3:31; };
struct B_BFu16ll_BFu32i { bool v1; unsigned long long v2:16; unsigned int v3:32; };
struct B_BFu16ll_BFu32ll { bool v1; unsigned long long v2:16; unsigned long long v3:32; };
struct B_BFu16ll_BFu33 { bool v1; unsigned long long v2:16; unsigned long long v3:33; };
struct B_BFu16ll_BFu7c { bool v1; unsigned long long v2:16; unsigned char v3:7; };
struct B_BFu16ll_BFu7i { bool v1; unsigned long long v2:16; unsigned int v3:7; };
struct B_BFu16ll_BFu7ll { bool v1; unsigned long long v2:16; unsigned long long v3:7; };
struct B_BFu16ll_BFu7s { bool v1; unsigned long long v2:16; unsigned short v3:7; };
struct B_BFu16ll_BFu8c { bool v1; unsigned long long v2:16; unsigned char v3:8; };
struct B_BFu16ll_BFu8i { bool v1; unsigned long long v2:16; unsigned int v3:8; };
struct B_BFu16ll_BFu8ll { bool v1; unsigned long long v2:16; unsigned long long v3:8; };
struct B_BFu16ll_BFu8s { bool v1; unsigned long long v2:16; unsigned short v3:8; };
struct B_BFu16ll_BFu9i { bool v1; unsigned long long v2:16; unsigned int v3:9; };
struct B_BFu16ll_BFu9ll { bool v1; unsigned long long v2:16; unsigned long long v3:9; };
struct B_BFu16ll_BFu9s { bool v1; unsigned long long v2:16; unsigned short v3:9; };
struct B_BFu16ll_C { bool v1; unsigned long long v2:16; char v3; };
struct B_BFu16ll_D { bool v1; unsigned long long v2:16; double v3; };
struct B_BFu16ll_F { bool v1; unsigned long long v2:16; float v3; };
struct B_BFu16ll_I { bool v1; unsigned long long v2:16; int v3; };
struct B_BFu16ll_Ip { bool v1; unsigned long long v2:16; int * v3; };
struct B_BFu16ll_L { bool v1; unsigned long long v2:16; long long v3; };
struct B_BFu16ll_S { bool v1; unsigned long long v2:16; short v3; };
struct B_BFu16ll_Uc { bool v1; unsigned long long v2:16; unsigned char v3; };
struct B_BFu16ll_Ui { bool v1; unsigned long long v2:16; unsigned int v3; };
struct B_BFu16ll_Ul { bool v1; unsigned long long v2:16; unsigned long long v3; };
struct B_BFu16ll_Us { bool v1; unsigned long long v2:16; unsigned short v3; };
struct B_BFu16ll_Vp { bool v1; unsigned long long v2:16; void * v3; };
struct B_BFu16s { bool v1; unsigned short v2:16; };
struct B_BFu16s_B { bool v1; unsigned short v2:16; bool v3; };
struct B_BFu16s_BFu15i { bool v1; unsigned short v2:16; unsigned int v3:15; };
struct B_BFu16s_BFu15ll { bool v1; unsigned short v2:16; unsigned long long v3:15; };
struct B_BFu16s_BFu15s { bool v1; unsigned short v2:16; unsigned short v3:15; };
struct B_BFu16s_BFu16i { bool v1; unsigned short v2:16; unsigned int v3:16; };
struct B_BFu16s_BFu16ll { bool v1; unsigned short v2:16; unsigned long long v3:16; };
struct B_BFu16s_BFu16s { bool v1; unsigned short v2:16; unsigned short v3:16; };
struct B_BFu16s_BFu17i { bool v1; unsigned short v2:16; unsigned int v3:17; };
struct B_BFu16s_BFu17ll { bool v1; unsigned short v2:16; unsigned long long v3:17; };
struct B_BFu16s_BFu1c { bool v1; unsigned short v2:16; unsigned char v3:1; };
struct B_BFu16s_BFu1i { bool v1; unsigned short v2:16; unsigned int v3:1; };
struct B_BFu16s_BFu1ll { bool v1; unsigned short v2:16; unsigned long long v3:1; };
struct B_BFu16s_BFu1s { bool v1; unsigned short v2:16; unsigned short v3:1; };
struct B_BFu16s_BFu31i { bool v1; unsigned short v2:16; unsigned int v3:31; };
struct B_BFu16s_BFu31ll { bool v1; unsigned short v2:16; unsigned long long v3:31; };
struct B_BFu16s_BFu32i { bool v1; unsigned short v2:16; unsigned int v3:32; };
struct B_BFu16s_BFu32ll { bool v1; unsigned short v2:16; unsigned long long v3:32; };
struct B_BFu16s_BFu33 { bool v1; unsigned short v2:16; unsigned long long v3:33; };
struct B_BFu16s_BFu7c { bool v1; unsigned short v2:16; unsigned char v3:7; };
struct B_BFu16s_BFu7i { bool v1; unsigned short v2:16; unsigned int v3:7; };
struct B_BFu16s_BFu7ll { bool v1; unsigned short v2:16; unsigned long long v3:7; };
struct B_BFu16s_BFu7s { bool v1; unsigned short v2:16; unsigned short v3:7; };
struct B_BFu16s_BFu8c { bool v1; unsigned short v2:16; unsigned char v3:8; };
struct B_BFu16s_BFu8i { bool v1; unsigned short v2:16; unsigned int v3:8; };
struct B_BFu16s_BFu8ll { bool v1; unsigned short v2:16; unsigned long long v3:8; };
struct B_BFu16s_BFu8s { bool v1; unsigned short v2:16; unsigned short v3:8; };
struct B_BFu16s_BFu9i { bool v1; unsigned short v2:16; unsigned int v3:9; };
struct B_BFu16s_BFu9ll { bool v1; unsigned short v2:16; unsigned long long v3:9; };
struct B_BFu16s_BFu9s { bool v1; unsigned short v2:16; unsigned short v3:9; };
struct B_BFu16s_C { bool v1; unsigned short v2:16; char v3; };
struct B_BFu16s_D { bool v1; unsigned short v2:16; double v3; };
struct B_BFu16s_F { bool v1; unsigned short v2:16; float v3; };
struct B_BFu16s_I { bool v1; unsigned short v2:16; int v3; };
struct B_BFu16s_Ip { bool v1; unsigned short v2:16; int * v3; };
struct B_BFu16s_L { bool v1; unsigned short v2:16; long long v3; };
struct B_BFu16s_S { bool v1; unsigned short v2:16; short v3; };
struct B_BFu16s_Uc { bool v1; unsigned short v2:16; unsigned char v3; };
struct B_BFu16s_Ui { bool v1; unsigned short v2:16; unsigned int v3; };
struct B_BFu16s_Ul { bool v1; unsigned short v2:16; unsigned long long v3; };
struct B_BFu16s_Us { bool v1; unsigned short v2:16; unsigned short v3; };
struct B_BFu16s_Vp { bool v1; unsigned short v2:16; void * v3; };
struct B_BFu17i { bool v1; unsigned int v2:17; };
struct B_BFu17i_B { bool v1; unsigned int v2:17; bool v3; };
struct B_BFu17i_BFu15i { bool v1; unsigned int v2:17; unsigned int v3:15; };
struct B_BFu17i_BFu15ll { bool v1; unsigned int v2:17; unsigned long long v3:15; };
struct B_BFu17i_BFu15s { bool v1; unsigned int v2:17; unsigned short v3:15; };
struct B_BFu17i_BFu16i { bool v1; unsigned int v2:17; unsigned int v3:16; };
struct B_BFu17i_BFu16ll { bool v1; unsigned int v2:17; unsigned long long v3:16; };
struct B_BFu17i_BFu16s { bool v1; unsigned int v2:17; unsigned short v3:16; };
struct B_BFu17i_BFu17i { bool v1; unsigned int v2:17; unsigned int v3:17; };
struct B_BFu17i_BFu17ll { bool v1; unsigned int v2:17; unsigned long long v3:17; };
struct B_BFu17i_BFu1c { bool v1; unsigned int v2:17; unsigned char v3:1; };
struct B_BFu17i_BFu1i { bool v1; unsigned int v2:17; unsigned int v3:1; };
struct B_BFu17i_BFu1ll { bool v1; unsigned int v2:17; unsigned long long v3:1; };
struct B_BFu17i_BFu1s { bool v1; unsigned int v2:17; unsigned short v3:1; };
struct B_BFu17i_BFu31i { bool v1; unsigned int v2:17; unsigned int v3:31; };
struct B_BFu17i_BFu31ll { bool v1; unsigned int v2:17; unsigned long long v3:31; };
struct B_BFu17i_BFu32i { bool v1; unsigned int v2:17; unsigned int v3:32; };
struct B_BFu17i_BFu32ll { bool v1; unsigned int v2:17; unsigned long long v3:32; };
struct B_BFu17i_BFu33 { bool v1; unsigned int v2:17; unsigned long long v3:33; };
struct B_BFu17i_BFu7c { bool v1; unsigned int v2:17; unsigned char v3:7; };
struct B_BFu17i_BFu7i { bool v1; unsigned int v2:17; unsigned int v3:7; };
struct B_BFu17i_BFu7ll { bool v1; unsigned int v2:17; unsigned long long v3:7; };
struct B_BFu17i_BFu7s { bool v1; unsigned int v2:17; unsigned short v3:7; };
struct B_BFu17i_BFu8c { bool v1; unsigned int v2:17; unsigned char v3:8; };
struct B_BFu17i_BFu8i { bool v1; unsigned int v2:17; unsigned int v3:8; };
struct B_BFu17i_BFu8ll { bool v1; unsigned int v2:17; unsigned long long v3:8; };
struct B_BFu17i_BFu8s { bool v1; unsigned int v2:17; unsigned short v3:8; };
struct B_BFu17i_BFu9i { bool v1; unsigned int v2:17; unsigned int v3:9; };
struct B_BFu17i_BFu9ll { bool v1; unsigned int v2:17; unsigned long long v3:9; };
struct B_BFu17i_BFu9s { bool v1; unsigned int v2:17; unsigned short v3:9; };
struct B_BFu17i_C { bool v1; unsigned int v2:17; char v3; };
struct B_BFu17i_D { bool v1; unsigned int v2:17; double v3; };
struct B_BFu17i_F { bool v1; unsigned int v2:17; float v3; };
struct B_BFu17i_I { bool v1; unsigned int v2:17; int v3; };
struct B_BFu17i_Ip { bool v1; unsigned int v2:17; int * v3; };
struct B_BFu17i_L { bool v1; unsigned int v2:17; long long v3; };
struct B_BFu17i_S { bool v1; unsigned int v2:17; short v3; };
struct B_BFu17i_Uc { bool v1; unsigned int v2:17; unsigned char v3; };
struct B_BFu17i_Ui { bool v1; unsigned int v2:17; unsigned int v3; };
struct B_BFu17i_Ul { bool v1; unsigned int v2:17; unsigned long long v3; };
struct B_BFu17i_Us { bool v1; unsigned int v2:17; unsigned short v3; };
struct B_BFu17i_Vp { bool v1; unsigned int v2:17; void * v3; };
struct B_BFu17ll { bool v1; unsigned long long v2:17; };
struct B_BFu17ll_B { bool v1; unsigned long long v2:17; bool v3; };
struct B_BFu17ll_BFu15i { bool v1; unsigned long long v2:17; unsigned int v3:15; };
struct B_BFu17ll_BFu15ll { bool v1; unsigned long long v2:17; unsigned long long v3:15; };
struct B_BFu17ll_BFu15s { bool v1; unsigned long long v2:17; unsigned short v3:15; };
struct B_BFu17ll_BFu16i { bool v1; unsigned long long v2:17; unsigned int v3:16; };
struct B_BFu17ll_BFu16ll { bool v1; unsigned long long v2:17; unsigned long long v3:16; };
struct B_BFu17ll_BFu16s { bool v1; unsigned long long v2:17; unsigned short v3:16; };
struct B_BFu17ll_BFu17i { bool v1; unsigned long long v2:17; unsigned int v3:17; };
struct B_BFu17ll_BFu17ll { bool v1; unsigned long long v2:17; unsigned long long v3:17; };
struct B_BFu17ll_BFu1c { bool v1; unsigned long long v2:17; unsigned char v3:1; };
struct B_BFu17ll_BFu1i { bool v1; unsigned long long v2:17; unsigned int v3:1; };
struct B_BFu17ll_BFu1ll { bool v1; unsigned long long v2:17; unsigned long long v3:1; };
struct B_BFu17ll_BFu1s { bool v1; unsigned long long v2:17; unsigned short v3:1; };
struct B_BFu17ll_BFu31i { bool v1; unsigned long long v2:17; unsigned int v3:31; };
struct B_BFu17ll_BFu31ll { bool v1; unsigned long long v2:17; unsigned long long v3:31; };
struct B_BFu17ll_BFu32i { bool v1; unsigned long long v2:17; unsigned int v3:32; };
struct B_BFu17ll_BFu32ll { bool v1; unsigned long long v2:17; unsigned long long v3:32; };
struct B_BFu17ll_BFu33 { bool v1; unsigned long long v2:17; unsigned long long v3:33; };
struct B_BFu17ll_BFu7c { bool v1; unsigned long long v2:17; unsigned char v3:7; };
struct B_BFu17ll_BFu7i { bool v1; unsigned long long v2:17; unsigned int v3:7; };
struct B_BFu17ll_BFu7ll { bool v1; unsigned long long v2:17; unsigned long long v3:7; };
struct B_BFu17ll_BFu7s { bool v1; unsigned long long v2:17; unsigned short v3:7; };
struct B_BFu17ll_BFu8c { bool v1; unsigned long long v2:17; unsigned char v3:8; };
struct B_BFu17ll_BFu8i { bool v1; unsigned long long v2:17; unsigned int v3:8; };
struct B_BFu17ll_BFu8ll { bool v1; unsigned long long v2:17; unsigned long long v3:8; };
struct B_BFu17ll_BFu8s { bool v1; unsigned long long v2:17; unsigned short v3:8; };
struct B_BFu17ll_BFu9i { bool v1; unsigned long long v2:17; unsigned int v3:9; };
struct B_BFu17ll_BFu9ll { bool v1; unsigned long long v2:17; unsigned long long v3:9; };
struct B_BFu17ll_BFu9s { bool v1; unsigned long long v2:17; unsigned short v3:9; };
struct B_BFu17ll_C { bool v1; unsigned long long v2:17; char v3; };
struct B_BFu17ll_D { bool v1; unsigned long long v2:17; double v3; };
struct B_BFu17ll_F { bool v1; unsigned long long v2:17; float v3; };
struct B_BFu17ll_I { bool v1; unsigned long long v2:17; int v3; };
struct B_BFu17ll_Ip { bool v1; unsigned long long v2:17; int * v3; };
struct B_BFu17ll_L { bool v1; unsigned long long v2:17; long long v3; };
struct B_BFu17ll_S { bool v1; unsigned long long v2:17; short v3; };
struct B_BFu17ll_Uc { bool v1; unsigned long long v2:17; unsigned char v3; };
struct B_BFu17ll_Ui { bool v1; unsigned long long v2:17; unsigned int v3; };
struct B_BFu17ll_Ul { bool v1; unsigned long long v2:17; unsigned long long v3; };
struct B_BFu17ll_Us { bool v1; unsigned long long v2:17; unsigned short v3; };
struct B_BFu17ll_Vp { bool v1; unsigned long long v2:17; void * v3; };
struct B_BFu1c { bool v1; unsigned char v2:1; };
struct B_BFu1c_B { bool v1; unsigned char v2:1; bool v3; };
struct B_BFu1c_BFu15i { bool v1; unsigned char v2:1; unsigned int v3:15; };
struct B_BFu1c_BFu15ll { bool v1; unsigned char v2:1; unsigned long long v3:15; };
struct B_BFu1c_BFu15s { bool v1; unsigned char v2:1; unsigned short v3:15; };
struct B_BFu1c_BFu16i { bool v1; unsigned char v2:1; unsigned int v3:16; };
struct B_BFu1c_BFu16ll { bool v1; unsigned char v2:1; unsigned long long v3:16; };
struct B_BFu1c_BFu16s { bool v1; unsigned char v2:1; unsigned short v3:16; };
struct B_BFu1c_BFu17i { bool v1; unsigned char v2:1; unsigned int v3:17; };
struct B_BFu1c_BFu17ll { bool v1; unsigned char v2:1; unsigned long long v3:17; };
struct B_BFu1c_BFu1c { bool v1; unsigned char v2:1; unsigned char v3:1; };
struct B_BFu1c_BFu1i { bool v1; unsigned char v2:1; unsigned int v3:1; };
struct B_BFu1c_BFu1ll { bool v1; unsigned char v2:1; unsigned long long v3:1; };
struct B_BFu1c_BFu1s { bool v1; unsigned char v2:1; unsigned short v3:1; };
struct B_BFu1c_BFu31i { bool v1; unsigned char v2:1; unsigned int v3:31; };
struct B_BFu1c_BFu31ll { bool v1; unsigned char v2:1; unsigned long long v3:31; };
struct B_BFu1c_BFu32i { bool v1; unsigned char v2:1; unsigned int v3:32; };
struct B_BFu1c_BFu32ll { bool v1; unsigned char v2:1; unsigned long long v3:32; };
struct B_BFu1c_BFu33 { bool v1; unsigned char v2:1; unsigned long long v3:33; };
struct B_BFu1c_BFu7c { bool v1; unsigned char v2:1; unsigned char v3:7; };
struct B_BFu1c_BFu7i { bool v1; unsigned char v2:1; unsigned int v3:7; };
struct B_BFu1c_BFu7ll { bool v1; unsigned char v2:1; unsigned long long v3:7; };
struct B_BFu1c_BFu7s { bool v1; unsigned char v2:1; unsigned short v3:7; };
struct B_BFu1c_BFu8c { bool v1; unsigned char v2:1; unsigned char v3:8; };
struct B_BFu1c_BFu8i { bool v1; unsigned char v2:1; unsigned int v3:8; };
struct B_BFu1c_BFu8ll { bool v1; unsigned char v2:1; unsigned long long v3:8; };
struct B_BFu1c_BFu8s { bool v1; unsigned char v2:1; unsigned short v3:8; };
struct B_BFu1c_BFu9i { bool v1; unsigned char v2:1; unsigned int v3:9; };
struct B_BFu1c_BFu9ll { bool v1; unsigned char v2:1; unsigned long long v3:9; };
struct B_BFu1c_BFu9s { bool v1; unsigned char v2:1; unsigned short v3:9; };
struct B_BFu1c_C { bool v1; unsigned char v2:1; char v3; };
struct B_BFu1c_D { bool v1; unsigned char v2:1; double v3; };
struct B_BFu1c_F { bool v1; unsigned char v2:1; float v3; };
struct B_BFu1c_I { bool v1; unsigned char v2:1; int v3; };
struct B_BFu1c_Ip { bool v1; unsigned char v2:1; int * v3; };
struct B_BFu1c_L { bool v1; unsigned char v2:1; long long v3; };
struct B_BFu1c_S { bool v1; unsigned char v2:1; short v3; };
struct B_BFu1c_Uc { bool v1; unsigned char v2:1; unsigned char v3; };
struct B_BFu1c_Ui { bool v1; unsigned char v2:1; unsigned int v3; };
struct B_BFu1c_Ul { bool v1; unsigned char v2:1; unsigned long long v3; };
struct B_BFu1c_Us { bool v1; unsigned char v2:1; unsigned short v3; };
struct B_BFu1c_Vp { bool v1; unsigned char v2:1; void * v3; };
struct B_BFu1i { bool v1; unsigned int v2:1; };
struct B_BFu1i_B { bool v1; unsigned int v2:1; bool v3; };
struct B_BFu1i_BFu15i { bool v1; unsigned int v2:1; unsigned int v3:15; };
struct B_BFu1i_BFu15ll { bool v1; unsigned int v2:1; unsigned long long v3:15; };
struct B_BFu1i_BFu15s { bool v1; unsigned int v2:1; unsigned short v3:15; };
struct B_BFu1i_BFu16i { bool v1; unsigned int v2:1; unsigned int v3:16; };
struct B_BFu1i_BFu16ll { bool v1; unsigned int v2:1; unsigned long long v3:16; };
struct B_BFu1i_BFu16s { bool v1; unsigned int v2:1; unsigned short v3:16; };
struct B_BFu1i_BFu17i { bool v1; unsigned int v2:1; unsigned int v3:17; };
struct B_BFu1i_BFu17ll { bool v1; unsigned int v2:1; unsigned long long v3:17; };
struct B_BFu1i_BFu1c { bool v1; unsigned int v2:1; unsigned char v3:1; };
struct B_BFu1i_BFu1i { bool v1; unsigned int v2:1; unsigned int v3:1; };
struct B_BFu1i_BFu1ll { bool v1; unsigned int v2:1; unsigned long long v3:1; };
struct B_BFu1i_BFu1s { bool v1; unsigned int v2:1; unsigned short v3:1; };
struct B_BFu1i_BFu31i { bool v1; unsigned int v2:1; unsigned int v3:31; };
struct B_BFu1i_BFu31ll { bool v1; unsigned int v2:1; unsigned long long v3:31; };
struct B_BFu1i_BFu32i { bool v1; unsigned int v2:1; unsigned int v3:32; };
struct B_BFu1i_BFu32ll { bool v1; unsigned int v2:1; unsigned long long v3:32; };
struct B_BFu1i_BFu33 { bool v1; unsigned int v2:1; unsigned long long v3:33; };
struct B_BFu1i_BFu7c { bool v1; unsigned int v2:1; unsigned char v3:7; };
struct B_BFu1i_BFu7i { bool v1; unsigned int v2:1; unsigned int v3:7; };
struct B_BFu1i_BFu7ll { bool v1; unsigned int v2:1; unsigned long long v3:7; };
struct B_BFu1i_BFu7s { bool v1; unsigned int v2:1; unsigned short v3:7; };
struct B_BFu1i_BFu8c { bool v1; unsigned int v2:1; unsigned char v3:8; };
struct B_BFu1i_BFu8i { bool v1; unsigned int v2:1; unsigned int v3:8; };
struct B_BFu1i_BFu8ll { bool v1; unsigned int v2:1; unsigned long long v3:8; };
struct B_BFu1i_BFu8s { bool v1; unsigned int v2:1; unsigned short v3:8; };
struct B_BFu1i_BFu9i { bool v1; unsigned int v2:1; unsigned int v3:9; };
struct B_BFu1i_BFu9ll { bool v1; unsigned int v2:1; unsigned long long v3:9; };
struct B_BFu1i_BFu9s { bool v1; unsigned int v2:1; unsigned short v3:9; };
struct B_BFu1i_C { bool v1; unsigned int v2:1; char v3; };
struct B_BFu1i_D { bool v1; unsigned int v2:1; double v3; };
struct B_BFu1i_F { bool v1; unsigned int v2:1; float v3; };
struct B_BFu1i_I { bool v1; unsigned int v2:1; int v3; };
struct B_BFu1i_Ip { bool v1; unsigned int v2:1; int * v3; };
struct B_BFu1i_L { bool v1; unsigned int v2:1; long long v3; };
struct B_BFu1i_S { bool v1; unsigned int v2:1; short v3; };
struct B_BFu1i_Uc { bool v1; unsigned int v2:1; unsigned char v3; };
struct B_BFu1i_Ui { bool v1; unsigned int v2:1; unsigned int v3; };
struct B_BFu1i_Ul { bool v1; unsigned int v2:1; unsigned long long v3; };
struct B_BFu1i_Us { bool v1; unsigned int v2:1; unsigned short v3; };
struct B_BFu1i_Vp { bool v1; unsigned int v2:1; void * v3; };
struct B_BFu1ll { bool v1; unsigned long long v2:1; };
struct B_BFu1ll_B { bool v1; unsigned long long v2:1; bool v3; };
struct B_BFu1ll_BFu15i { bool v1; unsigned long long v2:1; unsigned int v3:15; };
struct B_BFu1ll_BFu15ll { bool v1; unsigned long long v2:1; unsigned long long v3:15; };
struct B_BFu1ll_BFu15s { bool v1; unsigned long long v2:1; unsigned short v3:15; };
struct B_BFu1ll_BFu16i { bool v1; unsigned long long v2:1; unsigned int v3:16; };
struct B_BFu1ll_BFu16ll { bool v1; unsigned long long v2:1; unsigned long long v3:16; };
struct B_BFu1ll_BFu16s { bool v1; unsigned long long v2:1; unsigned short v3:16; };
struct B_BFu1ll_BFu17i { bool v1; unsigned long long v2:1; unsigned int v3:17; };
struct B_BFu1ll_BFu17ll { bool v1; unsigned long long v2:1; unsigned long long v3:17; };
struct B_BFu1ll_BFu1c { bool v1; unsigned long long v2:1; unsigned char v3:1; };
struct B_BFu1ll_BFu1i { bool v1; unsigned long long v2:1; unsigned int v3:1; };
struct B_BFu1ll_BFu1ll { bool v1; unsigned long long v2:1; unsigned long long v3:1; };
struct B_BFu1ll_BFu1s { bool v1; unsigned long long v2:1; unsigned short v3:1; };
struct B_BFu1ll_BFu31i { bool v1; unsigned long long v2:1; unsigned int v3:31; };
struct B_BFu1ll_BFu31ll { bool v1; unsigned long long v2:1; unsigned long long v3:31; };
struct B_BFu1ll_BFu32i { bool v1; unsigned long long v2:1; unsigned int v3:32; };
struct B_BFu1ll_BFu32ll { bool v1; unsigned long long v2:1; unsigned long long v3:32; };
struct B_BFu1ll_BFu33 { bool v1; unsigned long long v2:1; unsigned long long v3:33; };
struct B_BFu1ll_BFu7c { bool v1; unsigned long long v2:1; unsigned char v3:7; };
struct B_BFu1ll_BFu7i { bool v1; unsigned long long v2:1; unsigned int v3:7; };
struct B_BFu1ll_BFu7ll { bool v1; unsigned long long v2:1; unsigned long long v3:7; };
struct B_BFu1ll_BFu7s { bool v1; unsigned long long v2:1; unsigned short v3:7; };
struct B_BFu1ll_BFu8c { bool v1; unsigned long long v2:1; unsigned char v3:8; };
struct B_BFu1ll_BFu8i { bool v1; unsigned long long v2:1; unsigned int v3:8; };
struct B_BFu1ll_BFu8ll { bool v1; unsigned long long v2:1; unsigned long long v3:8; };
struct B_BFu1ll_BFu8s { bool v1; unsigned long long v2:1; unsigned short v3:8; };
struct B_BFu1ll_BFu9i { bool v1; unsigned long long v2:1; unsigned int v3:9; };
struct B_BFu1ll_BFu9ll { bool v1; unsigned long long v2:1; unsigned long long v3:9; };
struct B_BFu1ll_BFu9s { bool v1; unsigned long long v2:1; unsigned short v3:9; };
struct B_BFu1ll_C { bool v1; unsigned long long v2:1; char v3; };
struct B_BFu1ll_D { bool v1; unsigned long long v2:1; double v3; };
struct B_BFu1ll_F { bool v1; unsigned long long v2:1; float v3; };
struct B_BFu1ll_I { bool v1; unsigned long long v2:1; int v3; };
struct B_BFu1ll_Ip { bool v1; unsigned long long v2:1; int * v3; };
struct B_BFu1ll_L { bool v1; unsigned long long v2:1; long long v3; };
struct B_BFu1ll_S { bool v1; unsigned long long v2:1; short v3; };
struct B_BFu1ll_Uc { bool v1; unsigned long long v2:1; unsigned char v3; };
struct B_BFu1ll_Ui { bool v1; unsigned long long v2:1; unsigned int v3; };
struct B_BFu1ll_Ul { bool v1; unsigned long long v2:1; unsigned long long v3; };
struct B_BFu1ll_Us { bool v1; unsigned long long v2:1; unsigned short v3; };
struct B_BFu1ll_Vp { bool v1; unsigned long long v2:1; void * v3; };
struct B_BFu1s { bool v1; unsigned short v2:1; };
struct B_BFu1s_B { bool v1; unsigned short v2:1; bool v3; };
struct B_BFu1s_BFu15i { bool v1; unsigned short v2:1; unsigned int v3:15; };
struct B_BFu1s_BFu15ll { bool v1; unsigned short v2:1; unsigned long long v3:15; };
struct B_BFu1s_BFu15s { bool v1; unsigned short v2:1; unsigned short v3:15; };
struct B_BFu1s_BFu16i { bool v1; unsigned short v2:1; unsigned int v3:16; };
struct B_BFu1s_BFu16ll { bool v1; unsigned short v2:1; unsigned long long v3:16; };
struct B_BFu1s_BFu16s { bool v1; unsigned short v2:1; unsigned short v3:16; };
struct B_BFu1s_BFu17i { bool v1; unsigned short v2:1; unsigned int v3:17; };
struct B_BFu1s_BFu17ll { bool v1; unsigned short v2:1; unsigned long long v3:17; };
struct B_BFu1s_BFu1c { bool v1; unsigned short v2:1; unsigned char v3:1; };
struct B_BFu1s_BFu1i { bool v1; unsigned short v2:1; unsigned int v3:1; };
struct B_BFu1s_BFu1ll { bool v1; unsigned short v2:1; unsigned long long v3:1; };
struct B_BFu1s_BFu1s { bool v1; unsigned short v2:1; unsigned short v3:1; };
struct B_BFu1s_BFu31i { bool v1; unsigned short v2:1; unsigned int v3:31; };
struct B_BFu1s_BFu31ll { bool v1; unsigned short v2:1; unsigned long long v3:31; };
struct B_BFu1s_BFu32i { bool v1; unsigned short v2:1; unsigned int v3:32; };
struct B_BFu1s_BFu32ll { bool v1; unsigned short v2:1; unsigned long long v3:32; };
struct B_BFu1s_BFu33 { bool v1; unsigned short v2:1; unsigned long long v3:33; };
struct B_BFu1s_BFu7c { bool v1; unsigned short v2:1; unsigned char v3:7; };
struct B_BFu1s_BFu7i { bool v1; unsigned short v2:1; unsigned int v3:7; };
struct B_BFu1s_BFu7ll { bool v1; unsigned short v2:1; unsigned long long v3:7; };
struct B_BFu1s_BFu7s { bool v1; unsigned short v2:1; unsigned short v3:7; };
struct B_BFu1s_BFu8c { bool v1; unsigned short v2:1; unsigned char v3:8; };
struct B_BFu1s_BFu8i { bool v1; unsigned short v2:1; unsigned int v3:8; };
struct B_BFu1s_BFu8ll { bool v1; unsigned short v2:1; unsigned long long v3:8; };
struct B_BFu1s_BFu8s { bool v1; unsigned short v2:1; unsigned short v3:8; };
struct B_BFu1s_BFu9i { bool v1; unsigned short v2:1; unsigned int v3:9; };
struct B_BFu1s_BFu9ll { bool v1; unsigned short v2:1; unsigned long long v3:9; };
struct B_BFu1s_BFu9s { bool v1; unsigned short v2:1; unsigned short v3:9; };
struct B_BFu1s_C { bool v1; unsigned short v2:1; char v3; };
struct B_BFu1s_D { bool v1; unsigned short v2:1; double v3; };
struct B_BFu1s_F { bool v1; unsigned short v2:1; float v3; };
struct B_BFu1s_I { bool v1; unsigned short v2:1; int v3; };
struct B_BFu1s_Ip { bool v1; unsigned short v2:1; int * v3; };
struct B_BFu1s_L { bool v1; unsigned short v2:1; long long v3; };
struct B_BFu1s_S { bool v1; unsigned short v2:1; short v3; };
struct B_BFu1s_Uc { bool v1; unsigned short v2:1; unsigned char v3; };
struct B_BFu1s_Ui { bool v1; unsigned short v2:1; unsigned int v3; };
struct B_BFu1s_Ul { bool v1; unsigned short v2:1; unsigned long long v3; };
struct B_BFu1s_Us { bool v1; unsigned short v2:1; unsigned short v3; };
struct B_BFu1s_Vp { bool v1; unsigned short v2:1; void * v3; };
struct B_BFu31i { bool v1; unsigned int v2:31; };
struct B_BFu31i_B { bool v1; unsigned int v2:31; bool v3; };
struct B_BFu31i_BFu15i { bool v1; unsigned int v2:31; unsigned int v3:15; };
struct B_BFu31i_BFu15ll { bool v1; unsigned int v2:31; unsigned long long v3:15; };
struct B_BFu31i_BFu15s { bool v1; unsigned int v2:31; unsigned short v3:15; };
struct B_BFu31i_BFu16i { bool v1; unsigned int v2:31; unsigned int v3:16; };
struct B_BFu31i_BFu16ll { bool v1; unsigned int v2:31; unsigned long long v3:16; };
struct B_BFu31i_BFu16s { bool v1; unsigned int v2:31; unsigned short v3:16; };
struct B_BFu31i_BFu17i { bool v1; unsigned int v2:31; unsigned int v3:17; };
struct B_BFu31i_BFu17ll { bool v1; unsigned int v2:31; unsigned long long v3:17; };
struct B_BFu31i_BFu1c { bool v1; unsigned int v2:31; unsigned char v3:1; };
struct B_BFu31i_BFu1i { bool v1; unsigned int v2:31; unsigned int v3:1; };
struct B_BFu31i_BFu1ll { bool v1; unsigned int v2:31; unsigned long long v3:1; };
struct B_BFu31i_BFu1s { bool v1; unsigned int v2:31; unsigned short v3:1; };
struct B_BFu31i_BFu31i { bool v1; unsigned int v2:31; unsigned int v3:31; };
struct B_BFu31i_BFu31ll { bool v1; unsigned int v2:31; unsigned long long v3:31; };
struct B_BFu31i_BFu32i { bool v1; unsigned int v2:31; unsigned int v3:32; };
struct B_BFu31i_BFu32ll { bool v1; unsigned int v2:31; unsigned long long v3:32; };
struct B_BFu31i_BFu33 { bool v1; unsigned int v2:31; unsigned long long v3:33; };
struct B_BFu31i_BFu7c { bool v1; unsigned int v2:31; unsigned char v3:7; };
struct B_BFu31i_BFu7i { bool v1; unsigned int v2:31; unsigned int v3:7; };
struct B_BFu31i_BFu7ll { bool v1; unsigned int v2:31; unsigned long long v3:7; };
struct B_BFu31i_BFu7s { bool v1; unsigned int v2:31; unsigned short v3:7; };
struct B_BFu31i_BFu8c { bool v1; unsigned int v2:31; unsigned char v3:8; };
struct B_BFu31i_BFu8i { bool v1; unsigned int v2:31; unsigned int v3:8; };
struct B_BFu31i_BFu8ll { bool v1; unsigned int v2:31; unsigned long long v3:8; };
struct B_BFu31i_BFu8s { bool v1; unsigned int v2:31; unsigned short v3:8; };
struct B_BFu31i_BFu9i { bool v1; unsigned int v2:31; unsigned int v3:9; };
struct B_BFu31i_BFu9ll { bool v1; unsigned int v2:31; unsigned long long v3:9; };
struct B_BFu31i_BFu9s { bool v1; unsigned int v2:31; unsigned short v3:9; };
struct B_BFu31i_C { bool v1; unsigned int v2:31; char v3; };
struct B_BFu31i_D { bool v1; unsigned int v2:31; double v3; };
struct B_BFu31i_F { bool v1; unsigned int v2:31; float v3; };
struct B_BFu31i_I { bool v1; unsigned int v2:31; int v3; };
struct B_BFu31i_Ip { bool v1; unsigned int v2:31; int * v3; };
struct B_BFu31i_L { bool v1; unsigned int v2:31; long long v3; };
struct B_BFu31i_S { bool v1; unsigned int v2:31; short v3; };
struct B_BFu31i_Uc { bool v1; unsigned int v2:31; unsigned char v3; };
struct B_BFu31i_Ui { bool v1; unsigned int v2:31; unsigned int v3; };
struct B_BFu31i_Ul { bool v1; unsigned int v2:31; unsigned long long v3; };
struct B_BFu31i_Us { bool v1; unsigned int v2:31; unsigned short v3; };
struct B_BFu31i_Vp { bool v1; unsigned int v2:31; void * v3; };
struct B_BFu31ll { bool v1; unsigned long long v2:31; };
struct B_BFu31ll_B { bool v1; unsigned long long v2:31; bool v3; };
struct B_BFu31ll_BFu15i { bool v1; unsigned long long v2:31; unsigned int v3:15; };
struct B_BFu31ll_BFu15ll { bool v1; unsigned long long v2:31; unsigned long long v3:15; };
struct B_BFu31ll_BFu15s { bool v1; unsigned long long v2:31; unsigned short v3:15; };
struct B_BFu31ll_BFu16i { bool v1; unsigned long long v2:31; unsigned int v3:16; };
struct B_BFu31ll_BFu16ll { bool v1; unsigned long long v2:31; unsigned long long v3:16; };
struct B_BFu31ll_BFu16s { bool v1; unsigned long long v2:31; unsigned short v3:16; };
struct B_BFu31ll_BFu17i { bool v1; unsigned long long v2:31; unsigned int v3:17; };
struct B_BFu31ll_BFu17ll { bool v1; unsigned long long v2:31; unsigned long long v3:17; };
struct B_BFu31ll_BFu1c { bool v1; unsigned long long v2:31; unsigned char v3:1; };
struct B_BFu31ll_BFu1i { bool v1; unsigned long long v2:31; unsigned int v3:1; };
struct B_BFu31ll_BFu1ll { bool v1; unsigned long long v2:31; unsigned long long v3:1; };
struct B_BFu31ll_BFu1s { bool v1; unsigned long long v2:31; unsigned short v3:1; };
struct B_BFu31ll_BFu31i { bool v1; unsigned long long v2:31; unsigned int v3:31; };
struct B_BFu31ll_BFu31ll { bool v1; unsigned long long v2:31; unsigned long long v3:31; };
struct B_BFu31ll_BFu32i { bool v1; unsigned long long v2:31; unsigned int v3:32; };
struct B_BFu31ll_BFu32ll { bool v1; unsigned long long v2:31; unsigned long long v3:32; };
struct B_BFu31ll_BFu33 { bool v1; unsigned long long v2:31; unsigned long long v3:33; };
struct B_BFu31ll_BFu7c { bool v1; unsigned long long v2:31; unsigned char v3:7; };
struct B_BFu31ll_BFu7i { bool v1; unsigned long long v2:31; unsigned int v3:7; };
struct B_BFu31ll_BFu7ll { bool v1; unsigned long long v2:31; unsigned long long v3:7; };
struct B_BFu31ll_BFu7s { bool v1; unsigned long long v2:31; unsigned short v3:7; };
struct B_BFu31ll_BFu8c { bool v1; unsigned long long v2:31; unsigned char v3:8; };
struct B_BFu31ll_BFu8i { bool v1; unsigned long long v2:31; unsigned int v3:8; };
struct B_BFu31ll_BFu8ll { bool v1; unsigned long long v2:31; unsigned long long v3:8; };
struct B_BFu31ll_BFu8s { bool v1; unsigned long long v2:31; unsigned short v3:8; };
struct B_BFu31ll_BFu9i { bool v1; unsigned long long v2:31; unsigned int v3:9; };
struct B_BFu31ll_BFu9ll { bool v1; unsigned long long v2:31; unsigned long long v3:9; };
struct B_BFu31ll_BFu9s { bool v1; unsigned long long v2:31; unsigned short v3:9; };
struct B_BFu31ll_C { bool v1; unsigned long long v2:31; char v3; };
struct B_BFu31ll_D { bool v1; unsigned long long v2:31; double v3; };
struct B_BFu31ll_F { bool v1; unsigned long long v2:31; float v3; };
struct B_BFu31ll_I { bool v1; unsigned long long v2:31; int v3; };
struct B_BFu31ll_Ip { bool v1; unsigned long long v2:31; int * v3; };
struct B_BFu31ll_L { bool v1; unsigned long long v2:31; long long v3; };
struct B_BFu31ll_S { bool v1; unsigned long long v2:31; short v3; };
struct B_BFu31ll_Uc { bool v1; unsigned long long v2:31; unsigned char v3; };
struct B_BFu31ll_Ui { bool v1; unsigned long long v2:31; unsigned int v3; };
struct B_BFu31ll_Ul { bool v1; unsigned long long v2:31; unsigned long long v3; };
struct B_BFu31ll_Us { bool v1; unsigned long long v2:31; unsigned short v3; };
struct B_BFu31ll_Vp { bool v1; unsigned long long v2:31; void * v3; };
struct B_BFu32i { bool v1; unsigned int v2:32; };
struct B_BFu32i_B { bool v1; unsigned int v2:32; bool v3; };
struct B_BFu32i_BFu15i { bool v1; unsigned int v2:32; unsigned int v3:15; };
struct B_BFu32i_BFu15ll { bool v1; unsigned int v2:32; unsigned long long v3:15; };
struct B_BFu32i_BFu15s { bool v1; unsigned int v2:32; unsigned short v3:15; };
struct B_BFu32i_BFu16i { bool v1; unsigned int v2:32; unsigned int v3:16; };
struct B_BFu32i_BFu16ll { bool v1; unsigned int v2:32; unsigned long long v3:16; };
struct B_BFu32i_BFu16s { bool v1; unsigned int v2:32; unsigned short v3:16; };
struct B_BFu32i_BFu17i { bool v1; unsigned int v2:32; unsigned int v3:17; };
struct B_BFu32i_BFu17ll { bool v1; unsigned int v2:32; unsigned long long v3:17; };
struct B_BFu32i_BFu1c { bool v1; unsigned int v2:32; unsigned char v3:1; };
struct B_BFu32i_BFu1i { bool v1; unsigned int v2:32; unsigned int v3:1; };
struct B_BFu32i_BFu1ll { bool v1; unsigned int v2:32; unsigned long long v3:1; };
struct B_BFu32i_BFu1s { bool v1; unsigned int v2:32; unsigned short v3:1; };
struct B_BFu32i_BFu31i { bool v1; unsigned int v2:32; unsigned int v3:31; };
struct B_BFu32i_BFu31ll { bool v1; unsigned int v2:32; unsigned long long v3:31; };
struct B_BFu32i_BFu32i { bool v1; unsigned int v2:32; unsigned int v3:32; };
struct B_BFu32i_BFu32ll { bool v1; unsigned int v2:32; unsigned long long v3:32; };
struct B_BFu32i_BFu33 { bool v1; unsigned int v2:32; unsigned long long v3:33; };
struct B_BFu32i_BFu7c { bool v1; unsigned int v2:32; unsigned char v3:7; };
struct B_BFu32i_BFu7i { bool v1; unsigned int v2:32; unsigned int v3:7; };
struct B_BFu32i_BFu7ll { bool v1; unsigned int v2:32; unsigned long long v3:7; };
struct B_BFu32i_BFu7s { bool v1; unsigned int v2:32; unsigned short v3:7; };
struct B_BFu32i_BFu8c { bool v1; unsigned int v2:32; unsigned char v3:8; };
struct B_BFu32i_BFu8i { bool v1; unsigned int v2:32; unsigned int v3:8; };
struct B_BFu32i_BFu8ll { bool v1; unsigned int v2:32; unsigned long long v3:8; };
struct B_BFu32i_BFu8s { bool v1; unsigned int v2:32; unsigned short v3:8; };
struct B_BFu32i_BFu9i { bool v1; unsigned int v2:32; unsigned int v3:9; };
struct B_BFu32i_BFu9ll { bool v1; unsigned int v2:32; unsigned long long v3:9; };
struct B_BFu32i_BFu9s { bool v1; unsigned int v2:32; unsigned short v3:9; };
struct B_BFu32i_C { bool v1; unsigned int v2:32; char v3; };
struct B_BFu32i_D { bool v1; unsigned int v2:32; double v3; };
struct B_BFu32i_F { bool v1; unsigned int v2:32; float v3; };
struct B_BFu32i_I { bool v1; unsigned int v2:32; int v3; };
struct B_BFu32i_Ip { bool v1; unsigned int v2:32; int * v3; };
struct B_BFu32i_L { bool v1; unsigned int v2:32; long long v3; };
struct B_BFu32i_S { bool v1; unsigned int v2:32; short v3; };
struct B_BFu32i_Uc { bool v1; unsigned int v2:32; unsigned char v3; };
struct B_BFu32i_Ui { bool v1; unsigned int v2:32; unsigned int v3; };
struct B_BFu32i_Ul { bool v1; unsigned int v2:32; unsigned long long v3; };
struct B_BFu32i_Us { bool v1; unsigned int v2:32; unsigned short v3; };
struct B_BFu32i_Vp { bool v1; unsigned int v2:32; void * v3; };
struct B_BFu32ll { bool v1; unsigned long long v2:32; };
struct B_BFu32ll_B { bool v1; unsigned long long v2:32; bool v3; };
struct B_BFu32ll_BFu15i { bool v1; unsigned long long v2:32; unsigned int v3:15; };
struct B_BFu32ll_BFu15ll { bool v1; unsigned long long v2:32; unsigned long long v3:15; };
struct B_BFu32ll_BFu15s { bool v1; unsigned long long v2:32; unsigned short v3:15; };
struct B_BFu32ll_BFu16i { bool v1; unsigned long long v2:32; unsigned int v3:16; };
struct B_BFu32ll_BFu16ll { bool v1; unsigned long long v2:32; unsigned long long v3:16; };
struct B_BFu32ll_BFu16s { bool v1; unsigned long long v2:32; unsigned short v3:16; };
struct B_BFu32ll_BFu17i { bool v1; unsigned long long v2:32; unsigned int v3:17; };
struct B_BFu32ll_BFu17ll { bool v1; unsigned long long v2:32; unsigned long long v3:17; };
struct B_BFu32ll_BFu1c { bool v1; unsigned long long v2:32; unsigned char v3:1; };
struct B_BFu32ll_BFu1i { bool v1; unsigned long long v2:32; unsigned int v3:1; };
struct B_BFu32ll_BFu1ll { bool v1; unsigned long long v2:32; unsigned long long v3:1; };
struct B_BFu32ll_BFu1s { bool v1; unsigned long long v2:32; unsigned short v3:1; };
struct B_BFu32ll_BFu31i { bool v1; unsigned long long v2:32; unsigned int v3:31; };
struct B_BFu32ll_BFu31ll { bool v1; unsigned long long v2:32; unsigned long long v3:31; };
struct B_BFu32ll_BFu32i { bool v1; unsigned long long v2:32; unsigned int v3:32; };
struct B_BFu32ll_BFu32ll { bool v1; unsigned long long v2:32; unsigned long long v3:32; };
struct B_BFu32ll_BFu33 { bool v1; unsigned long long v2:32; unsigned long long v3:33; };
struct B_BFu32ll_BFu7c { bool v1; unsigned long long v2:32; unsigned char v3:7; };
struct B_BFu32ll_BFu7i { bool v1; unsigned long long v2:32; unsigned int v3:7; };
struct B_BFu32ll_BFu7ll { bool v1; unsigned long long v2:32; unsigned long long v3:7; };
struct B_BFu32ll_BFu7s { bool v1; unsigned long long v2:32; unsigned short v3:7; };
struct B_BFu32ll_BFu8c { bool v1; unsigned long long v2:32; unsigned char v3:8; };
struct B_BFu32ll_BFu8i { bool v1; unsigned long long v2:32; unsigned int v3:8; };
struct B_BFu32ll_BFu8ll { bool v1; unsigned long long v2:32; unsigned long long v3:8; };
struct B_BFu32ll_BFu8s { bool v1; unsigned long long v2:32; unsigned short v3:8; };
struct B_BFu32ll_BFu9i { bool v1; unsigned long long v2:32; unsigned int v3:9; };
struct B_BFu32ll_BFu9ll { bool v1; unsigned long long v2:32; unsigned long long v3:9; };
struct B_BFu32ll_BFu9s { bool v1; unsigned long long v2:32; unsigned short v3:9; };
struct B_BFu32ll_C { bool v1; unsigned long long v2:32; char v3; };
struct B_BFu32ll_D { bool v1; unsigned long long v2:32; double v3; };
struct B_BFu32ll_F { bool v1; unsigned long long v2:32; float v3; };
struct B_BFu32ll_I { bool v1; unsigned long long v2:32; int v3; };
struct B_BFu32ll_Ip { bool v1; unsigned long long v2:32; int * v3; };
struct B_BFu32ll_L { bool v1; unsigned long long v2:32; long long v3; };
struct B_BFu32ll_S { bool v1; unsigned long long v2:32; short v3; };
struct B_BFu32ll_Uc { bool v1; unsigned long long v2:32; unsigned char v3; };
struct B_BFu32ll_Ui { bool v1; unsigned long long v2:32; unsigned int v3; };
struct B_BFu32ll_Ul { bool v1; unsigned long long v2:32; unsigned long long v3; };
struct B_BFu32ll_Us { bool v1; unsigned long long v2:32; unsigned short v3; };
struct B_BFu32ll_Vp { bool v1; unsigned long long v2:32; void * v3; };
struct B_BFu33 { bool v1; unsigned long long v2:33; };
struct B_BFu33_B { bool v1; unsigned long long v2:33; bool v3; };
struct B_BFu33_BFu15i { bool v1; unsigned long long v2:33; unsigned int v3:15; };
struct B_BFu33_BFu15ll { bool v1; unsigned long long v2:33; unsigned long long v3:15; };
struct B_BFu33_BFu15s { bool v1; unsigned long long v2:33; unsigned short v3:15; };
struct B_BFu33_BFu16i { bool v1; unsigned long long v2:33; unsigned int v3:16; };
struct B_BFu33_BFu16ll { bool v1; unsigned long long v2:33; unsigned long long v3:16; };
struct B_BFu33_BFu16s { bool v1; unsigned long long v2:33; unsigned short v3:16; };
struct B_BFu33_BFu17i { bool v1; unsigned long long v2:33; unsigned int v3:17; };
struct B_BFu33_BFu17ll { bool v1; unsigned long long v2:33; unsigned long long v3:17; };
struct B_BFu33_BFu1c { bool v1; unsigned long long v2:33; unsigned char v3:1; };
struct B_BFu33_BFu1i { bool v1; unsigned long long v2:33; unsigned int v3:1; };
struct B_BFu33_BFu1ll { bool v1; unsigned long long v2:33; unsigned long long v3:1; };
struct B_BFu33_BFu1s { bool v1; unsigned long long v2:33; unsigned short v3:1; };
struct B_BFu33_BFu31i { bool v1; unsigned long long v2:33; unsigned int v3:31; };
struct B_BFu33_BFu31ll { bool v1; unsigned long long v2:33; unsigned long long v3:31; };
struct B_BFu33_BFu32i { bool v1; unsigned long long v2:33; unsigned int v3:32; };
struct B_BFu33_BFu32ll { bool v1; unsigned long long v2:33; unsigned long long v3:32; };
struct B_BFu33_BFu33 { bool v1; unsigned long long v2:33; unsigned long long v3:33; };
struct B_BFu33_BFu7c { bool v1; unsigned long long v2:33; unsigned char v3:7; };
struct B_BFu33_BFu7i { bool v1; unsigned long long v2:33; unsigned int v3:7; };
struct B_BFu33_BFu7ll { bool v1; unsigned long long v2:33; unsigned long long v3:7; };
struct B_BFu33_BFu7s { bool v1; unsigned long long v2:33; unsigned short v3:7; };
struct B_BFu33_BFu8c { bool v1; unsigned long long v2:33; unsigned char v3:8; };
struct B_BFu33_BFu8i { bool v1; unsigned long long v2:33; unsigned int v3:8; };
struct B_BFu33_BFu8ll { bool v1; unsigned long long v2:33; unsigned long long v3:8; };
struct B_BFu33_BFu8s { bool v1; unsigned long long v2:33; unsigned short v3:8; };
struct B_BFu33_BFu9i { bool v1; unsigned long long v2:33; unsigned int v3:9; };
struct B_BFu33_BFu9ll { bool v1; unsigned long long v2:33; unsigned long long v3:9; };
struct B_BFu33_BFu9s { bool v1; unsigned long long v2:33; unsigned short v3:9; };
struct B_BFu33_C { bool v1; unsigned long long v2:33; char v3; };
struct B_BFu33_D { bool v1; unsigned long long v2:33; double v3; };
struct B_BFu33_F { bool v1; unsigned long long v2:33; float v3; };
struct B_BFu33_I { bool v1; unsigned long long v2:33; int v3; };
struct B_BFu33_Ip { bool v1; unsigned long long v2:33; int * v3; };
struct B_BFu33_L { bool v1; unsigned long long v2:33; long long v3; };
struct B_BFu33_S { bool v1; unsigned long long v2:33; short v3; };
struct B_BFu33_Uc { bool v1; unsigned long long v2:33; unsigned char v3; };
struct B_BFu33_Ui { bool v1; unsigned long long v2:33; unsigned int v3; };
struct B_BFu33_Ul { bool v1; unsigned long long v2:33; unsigned long long v3; };
struct B_BFu33_Us { bool v1; unsigned long long v2:33; unsigned short v3; };
struct B_BFu33_Vp { bool v1; unsigned long long v2:33; void * v3; };
struct B_BFu7c { bool v1; unsigned char v2:7; };
struct B_BFu7c_B { bool v1; unsigned char v2:7; bool v3; };
struct B_BFu7c_BFu15i { bool v1; unsigned char v2:7; unsigned int v3:15; };
struct B_BFu7c_BFu15ll { bool v1; unsigned char v2:7; unsigned long long v3:15; };
struct B_BFu7c_BFu15s { bool v1; unsigned char v2:7; unsigned short v3:15; };
struct B_BFu7c_BFu16i { bool v1; unsigned char v2:7; unsigned int v3:16; };
struct B_BFu7c_BFu16ll { bool v1; unsigned char v2:7; unsigned long long v3:16; };
struct B_BFu7c_BFu16s { bool v1; unsigned char v2:7; unsigned short v3:16; };
struct B_BFu7c_BFu17i { bool v1; unsigned char v2:7; unsigned int v3:17; };
struct B_BFu7c_BFu17ll { bool v1; unsigned char v2:7; unsigned long long v3:17; };
struct B_BFu7c_BFu1c { bool v1; unsigned char v2:7; unsigned char v3:1; };
struct B_BFu7c_BFu1i { bool v1; unsigned char v2:7; unsigned int v3:1; };
struct B_BFu7c_BFu1ll { bool v1; unsigned char v2:7; unsigned long long v3:1; };
struct B_BFu7c_BFu1s { bool v1; unsigned char v2:7; unsigned short v3:1; };
struct B_BFu7c_BFu31i { bool v1; unsigned char v2:7; unsigned int v3:31; };
struct B_BFu7c_BFu31ll { bool v1; unsigned char v2:7; unsigned long long v3:31; };
struct B_BFu7c_BFu32i { bool v1; unsigned char v2:7; unsigned int v3:32; };
struct B_BFu7c_BFu32ll { bool v1; unsigned char v2:7; unsigned long long v3:32; };
struct B_BFu7c_BFu33 { bool v1; unsigned char v2:7; unsigned long long v3:33; };
struct B_BFu7c_BFu7c { bool v1; unsigned char v2:7; unsigned char v3:7; };
struct B_BFu7c_BFu7i { bool v1; unsigned char v2:7; unsigned int v3:7; };
struct B_BFu7c_BFu7ll { bool v1; unsigned char v2:7; unsigned long long v3:7; };
struct B_BFu7c_BFu7s { bool v1; unsigned char v2:7; unsigned short v3:7; };
struct B_BFu7c_BFu8c { bool v1; unsigned char v2:7; unsigned char v3:8; };
struct B_BFu7c_BFu8i { bool v1; unsigned char v2:7; unsigned int v3:8; };
struct B_BFu7c_BFu8ll { bool v1; unsigned char v2:7; unsigned long long v3:8; };
struct B_BFu7c_BFu8s { bool v1; unsigned char v2:7; unsigned short v3:8; };
struct B_BFu7c_BFu9i { bool v1; unsigned char v2:7; unsigned int v3:9; };
struct B_BFu7c_BFu9ll { bool v1; unsigned char v2:7; unsigned long long v3:9; };
struct B_BFu7c_BFu9s { bool v1; unsigned char v2:7; unsigned short v3:9; };
struct B_BFu7c_C { bool v1; unsigned char v2:7; char v3; };
struct B_BFu7c_D { bool v1; unsigned char v2:7; double v3; };
struct B_BFu7c_F { bool v1; unsigned char v2:7; float v3; };
struct B_BFu7c_I { bool v1; unsigned char v2:7; int v3; };
struct B_BFu7c_Ip { bool v1; unsigned char v2:7; int * v3; };
struct B_BFu7c_L { bool v1; unsigned char v2:7; long long v3; };
struct B_BFu7c_S { bool v1; unsigned char v2:7; short v3; };
struct B_BFu7c_Uc { bool v1; unsigned char v2:7; unsigned char v3; };
struct B_BFu7c_Ui { bool v1; unsigned char v2:7; unsigned int v3; };
struct B_BFu7c_Ul { bool v1; unsigned char v2:7; unsigned long long v3; };
struct B_BFu7c_Us { bool v1; unsigned char v2:7; unsigned short v3; };
struct B_BFu7c_Vp { bool v1; unsigned char v2:7; void * v3; };
struct B_BFu7i { bool v1; unsigned int v2:7; };
struct B_BFu7i_B { bool v1; unsigned int v2:7; bool v3; };
struct B_BFu7i_BFu15i { bool v1; unsigned int v2:7; unsigned int v3:15; };
struct B_BFu7i_BFu15ll { bool v1; unsigned int v2:7; unsigned long long v3:15; };
struct B_BFu7i_BFu15s { bool v1; unsigned int v2:7; unsigned short v3:15; };
struct B_BFu7i_BFu16i { bool v1; unsigned int v2:7; unsigned int v3:16; };
struct B_BFu7i_BFu16ll { bool v1; unsigned int v2:7; unsigned long long v3:16; };
struct B_BFu7i_BFu16s { bool v1; unsigned int v2:7; unsigned short v3:16; };
struct B_BFu7i_BFu17i { bool v1; unsigned int v2:7; unsigned int v3:17; };
struct B_BFu7i_BFu17ll { bool v1; unsigned int v2:7; unsigned long long v3:17; };
struct B_BFu7i_BFu1c { bool v1; unsigned int v2:7; unsigned char v3:1; };
struct B_BFu7i_BFu1i { bool v1; unsigned int v2:7; unsigned int v3:1; };
struct B_BFu7i_BFu1ll { bool v1; unsigned int v2:7; unsigned long long v3:1; };
struct B_BFu7i_BFu1s { bool v1; unsigned int v2:7; unsigned short v3:1; };
struct B_BFu7i_BFu31i { bool v1; unsigned int v2:7; unsigned int v3:31; };
struct B_BFu7i_BFu31ll { bool v1; unsigned int v2:7; unsigned long long v3:31; };
struct B_BFu7i_BFu32i { bool v1; unsigned int v2:7; unsigned int v3:32; };
struct B_BFu7i_BFu32ll { bool v1; unsigned int v2:7; unsigned long long v3:32; };
struct B_BFu7i_BFu33 { bool v1; unsigned int v2:7; unsigned long long v3:33; };
struct B_BFu7i_BFu7c { bool v1; unsigned int v2:7; unsigned char v3:7; };
struct B_BFu7i_BFu7i { bool v1; unsigned int v2:7; unsigned int v3:7; };
struct B_BFu7i_BFu7ll { bool v1; unsigned int v2:7; unsigned long long v3:7; };
struct B_BFu7i_BFu7s { bool v1; unsigned int v2:7; unsigned short v3:7; };
struct B_BFu7i_BFu8c { bool v1; unsigned int v2:7; unsigned char v3:8; };
struct B_BFu7i_BFu8i { bool v1; unsigned int v2:7; unsigned int v3:8; };
struct B_BFu7i_BFu8ll { bool v1; unsigned int v2:7; unsigned long long v3:8; };
struct B_BFu7i_BFu8s { bool v1; unsigned int v2:7; unsigned short v3:8; };
struct B_BFu7i_BFu9i { bool v1; unsigned int v2:7; unsigned int v3:9; };
struct B_BFu7i_BFu9ll { bool v1; unsigned int v2:7; unsigned long long v3:9; };
struct B_BFu7i_BFu9s { bool v1; unsigned int v2:7; unsigned short v3:9; };
struct B_BFu7i_C { bool v1; unsigned int v2:7; char v3; };
struct B_BFu7i_D { bool v1; unsigned int v2:7; double v3; };
struct B_BFu7i_F { bool v1; unsigned int v2:7; float v3; };
struct B_BFu7i_I { bool v1; unsigned int v2:7; int v3; };
struct B_BFu7i_Ip { bool v1; unsigned int v2:7; int * v3; };
struct B_BFu7i_L { bool v1; unsigned int v2:7; long long v3; };
struct B_BFu7i_S { bool v1; unsigned int v2:7; short v3; };
struct B_BFu7i_Uc { bool v1; unsigned int v2:7; unsigned char v3; };
struct B_BFu7i_Ui { bool v1; unsigned int v2:7; unsigned int v3; };
struct B_BFu7i_Ul { bool v1; unsigned int v2:7; unsigned long long v3; };
struct B_BFu7i_Us { bool v1; unsigned int v2:7; unsigned short v3; };
struct B_BFu7i_Vp { bool v1; unsigned int v2:7; void * v3; };
struct B_BFu7ll { bool v1; unsigned long long v2:7; };
struct B_BFu7ll_B { bool v1; unsigned long long v2:7; bool v3; };
struct B_BFu7ll_BFu15i { bool v1; unsigned long long v2:7; unsigned int v3:15; };
struct B_BFu7ll_BFu15ll { bool v1; unsigned long long v2:7; unsigned long long v3:15; };
struct B_BFu7ll_BFu15s { bool v1; unsigned long long v2:7; unsigned short v3:15; };
struct B_BFu7ll_BFu16i { bool v1; unsigned long long v2:7; unsigned int v3:16; };
struct B_BFu7ll_BFu16ll { bool v1; unsigned long long v2:7; unsigned long long v3:16; };
struct B_BFu7ll_BFu16s { bool v1; unsigned long long v2:7; unsigned short v3:16; };
struct B_BFu7ll_BFu17i { bool v1; unsigned long long v2:7; unsigned int v3:17; };
struct B_BFu7ll_BFu17ll { bool v1; unsigned long long v2:7; unsigned long long v3:17; };
struct B_BFu7ll_BFu1c { bool v1; unsigned long long v2:7; unsigned char v3:1; };
struct B_BFu7ll_BFu1i { bool v1; unsigned long long v2:7; unsigned int v3:1; };
struct B_BFu7ll_BFu1ll { bool v1; unsigned long long v2:7; unsigned long long v3:1; };
struct B_BFu7ll_BFu1s { bool v1; unsigned long long v2:7; unsigned short v3:1; };
struct B_BFu7ll_BFu31i { bool v1; unsigned long long v2:7; unsigned int v3:31; };
struct B_BFu7ll_BFu31ll { bool v1; unsigned long long v2:7; unsigned long long v3:31; };
struct B_BFu7ll_BFu32i { bool v1; unsigned long long v2:7; unsigned int v3:32; };
struct B_BFu7ll_BFu32ll { bool v1; unsigned long long v2:7; unsigned long long v3:32; };
struct B_BFu7ll_BFu33 { bool v1; unsigned long long v2:7; unsigned long long v3:33; };
struct B_BFu7ll_BFu7c { bool v1; unsigned long long v2:7; unsigned char v3:7; };
struct B_BFu7ll_BFu7i { bool v1; unsigned long long v2:7; unsigned int v3:7; };
struct B_BFu7ll_BFu7ll { bool v1; unsigned long long v2:7; unsigned long long v3:7; };
struct B_BFu7ll_BFu7s { bool v1; unsigned long long v2:7; unsigned short v3:7; };
struct B_BFu7ll_BFu8c { bool v1; unsigned long long v2:7; unsigned char v3:8; };
struct B_BFu7ll_BFu8i { bool v1; unsigned long long v2:7; unsigned int v3:8; };
struct B_BFu7ll_BFu8ll { bool v1; unsigned long long v2:7; unsigned long long v3:8; };
struct B_BFu7ll_BFu8s { bool v1; unsigned long long v2:7; unsigned short v3:8; };
struct B_BFu7ll_BFu9i { bool v1; unsigned long long v2:7; unsigned int v3:9; };
struct B_BFu7ll_BFu9ll { bool v1; unsigned long long v2:7; unsigned long long v3:9; };
struct B_BFu7ll_BFu9s { bool v1; unsigned long long v2:7; unsigned short v3:9; };
struct B_BFu7ll_C { bool v1; unsigned long long v2:7; char v3; };
struct B_BFu7ll_D { bool v1; unsigned long long v2:7; double v3; };
struct B_BFu7ll_F { bool v1; unsigned long long v2:7; float v3; };
struct B_BFu7ll_I { bool v1; unsigned long long v2:7; int v3; };
struct B_BFu7ll_Ip { bool v1; unsigned long long v2:7; int * v3; };
struct B_BFu7ll_L { bool v1; unsigned long long v2:7; long long v3; };
struct B_BFu7ll_S { bool v1; unsigned long long v2:7; short v3; };
struct B_BFu7ll_Uc { bool v1; unsigned long long v2:7; unsigned char v3; };
struct B_BFu7ll_Ui { bool v1; unsigned long long v2:7; unsigned int v3; };
struct B_BFu7ll_Ul { bool v1; unsigned long long v2:7; unsigned long long v3; };
struct B_BFu7ll_Us { bool v1; unsigned long long v2:7; unsigned short v3; };
struct B_BFu7ll_Vp { bool v1; unsigned long long v2:7; void * v3; };
struct B_BFu7s { bool v1; unsigned short v2:7; };
struct B_BFu7s_B { bool v1; unsigned short v2:7; bool v3; };
struct B_BFu7s_BFu15i { bool v1; unsigned short v2:7; unsigned int v3:15; };
struct B_BFu7s_BFu15ll { bool v1; unsigned short v2:7; unsigned long long v3:15; };
struct B_BFu7s_BFu15s { bool v1; unsigned short v2:7; unsigned short v3:15; };
struct B_BFu7s_BFu16i { bool v1; unsigned short v2:7; unsigned int v3:16; };
struct B_BFu7s_BFu16ll { bool v1; unsigned short v2:7; unsigned long long v3:16; };
struct B_BFu7s_BFu16s { bool v1; unsigned short v2:7; unsigned short v3:16; };
struct B_BFu7s_BFu17i { bool v1; unsigned short v2:7; unsigned int v3:17; };
struct B_BFu7s_BFu17ll { bool v1; unsigned short v2:7; unsigned long long v3:17; };
struct B_BFu7s_BFu1c { bool v1; unsigned short v2:7; unsigned char v3:1; };
struct B_BFu7s_BFu1i { bool v1; unsigned short v2:7; unsigned int v3:1; };
struct B_BFu7s_BFu1ll { bool v1; unsigned short v2:7; unsigned long long v3:1; };
struct B_BFu7s_BFu1s { bool v1; unsigned short v2:7; unsigned short v3:1; };
struct B_BFu7s_BFu31i { bool v1; unsigned short v2:7; unsigned int v3:31; };
struct B_BFu7s_BFu31ll { bool v1; unsigned short v2:7; unsigned long long v3:31; };
struct B_BFu7s_BFu32i { bool v1; unsigned short v2:7; unsigned int v3:32; };
struct B_BFu7s_BFu32ll { bool v1; unsigned short v2:7; unsigned long long v3:32; };
struct B_BFu7s_BFu33 { bool v1; unsigned short v2:7; unsigned long long v3:33; };
struct B_BFu7s_BFu7c { bool v1; unsigned short v2:7; unsigned char v3:7; };
struct B_BFu7s_BFu7i { bool v1; unsigned short v2:7; unsigned int v3:7; };
struct B_BFu7s_BFu7ll { bool v1; unsigned short v2:7; unsigned long long v3:7; };
struct B_BFu7s_BFu7s { bool v1; unsigned short v2:7; unsigned short v3:7; };
struct B_BFu7s_BFu8c { bool v1; unsigned short v2:7; unsigned char v3:8; };
struct B_BFu7s_BFu8i { bool v1; unsigned short v2:7; unsigned int v3:8; };
struct B_BFu7s_BFu8ll { bool v1; unsigned short v2:7; unsigned long long v3:8; };
struct B_BFu7s_BFu8s { bool v1; unsigned short v2:7; unsigned short v3:8; };
struct B_BFu7s_BFu9i { bool v1; unsigned short v2:7; unsigned int v3:9; };
struct B_BFu7s_BFu9ll { bool v1; unsigned short v2:7; unsigned long long v3:9; };
struct B_BFu7s_BFu9s { bool v1; unsigned short v2:7; unsigned short v3:9; };
struct B_BFu7s_C { bool v1; unsigned short v2:7; char v3; };
struct B_BFu7s_D { bool v1; unsigned short v2:7; double v3; };
struct B_BFu7s_F { bool v1; unsigned short v2:7; float v3; };
struct B_BFu7s_I { bool v1; unsigned short v2:7; int v3; };
struct B_BFu7s_Ip { bool v1; unsigned short v2:7; int * v3; };
struct B_BFu7s_L { bool v1; unsigned short v2:7; long long v3; };
struct B_BFu7s_S { bool v1; unsigned short v2:7; short v3; };
struct B_BFu7s_Uc { bool v1; unsigned short v2:7; unsigned char v3; };
struct B_BFu7s_Ui { bool v1; unsigned short v2:7; unsigned int v3; };
struct B_BFu7s_Ul { bool v1; unsigned short v2:7; unsigned long long v3; };
struct B_BFu7s_Us { bool v1; unsigned short v2:7; unsigned short v3; };
struct B_BFu7s_Vp { bool v1; unsigned short v2:7; void * v3; };
struct B_BFu8c { bool v1; unsigned char v2:8; };
struct B_BFu8c_B { bool v1; unsigned char v2:8; bool v3; };
struct B_BFu8c_BFu15i { bool v1; unsigned char v2:8; unsigned int v3:15; };
struct B_BFu8c_BFu15ll { bool v1; unsigned char v2:8; unsigned long long v3:15; };
struct B_BFu8c_BFu15s { bool v1; unsigned char v2:8; unsigned short v3:15; };
struct B_BFu8c_BFu16i { bool v1; unsigned char v2:8; unsigned int v3:16; };
struct B_BFu8c_BFu16ll { bool v1; unsigned char v2:8; unsigned long long v3:16; };
struct B_BFu8c_BFu16s { bool v1; unsigned char v2:8; unsigned short v3:16; };
struct B_BFu8c_BFu17i { bool v1; unsigned char v2:8; unsigned int v3:17; };
struct B_BFu8c_BFu17ll { bool v1; unsigned char v2:8; unsigned long long v3:17; };
struct B_BFu8c_BFu1c { bool v1; unsigned char v2:8; unsigned char v3:1; };
struct B_BFu8c_BFu1i { bool v1; unsigned char v2:8; unsigned int v3:1; };
struct B_BFu8c_BFu1ll { bool v1; unsigned char v2:8; unsigned long long v3:1; };
struct B_BFu8c_BFu1s { bool v1; unsigned char v2:8; unsigned short v3:1; };
struct B_BFu8c_BFu31i { bool v1; unsigned char v2:8; unsigned int v3:31; };
struct B_BFu8c_BFu31ll { bool v1; unsigned char v2:8; unsigned long long v3:31; };
struct B_BFu8c_BFu32i { bool v1; unsigned char v2:8; unsigned int v3:32; };
struct B_BFu8c_BFu32ll { bool v1; unsigned char v2:8; unsigned long long v3:32; };
struct B_BFu8c_BFu33 { bool v1; unsigned char v2:8; unsigned long long v3:33; };
struct B_BFu8c_BFu7c { bool v1; unsigned char v2:8; unsigned char v3:7; };
struct B_BFu8c_BFu7i { bool v1; unsigned char v2:8; unsigned int v3:7; };
struct B_BFu8c_BFu7ll { bool v1; unsigned char v2:8; unsigned long long v3:7; };
struct B_BFu8c_BFu7s { bool v1; unsigned char v2:8; unsigned short v3:7; };
struct B_BFu8c_BFu8c { bool v1; unsigned char v2:8; unsigned char v3:8; };
struct B_BFu8c_BFu8i { bool v1; unsigned char v2:8; unsigned int v3:8; };
struct B_BFu8c_BFu8ll { bool v1; unsigned char v2:8; unsigned long long v3:8; };
struct B_BFu8c_BFu8s { bool v1; unsigned char v2:8; unsigned short v3:8; };
struct B_BFu8c_BFu9i { bool v1; unsigned char v2:8; unsigned int v3:9; };
struct B_BFu8c_BFu9ll { bool v1; unsigned char v2:8; unsigned long long v3:9; };
struct B_BFu8c_BFu9s { bool v1; unsigned char v2:8; unsigned short v3:9; };
struct B_BFu8c_C { bool v1; unsigned char v2:8; char v3; };
struct B_BFu8c_D { bool v1; unsigned char v2:8; double v3; };
struct B_BFu8c_F { bool v1; unsigned char v2:8; float v3; };
struct B_BFu8c_I { bool v1; unsigned char v2:8; int v3; };
struct B_BFu8c_Ip { bool v1; unsigned char v2:8; int * v3; };
struct B_BFu8c_L { bool v1; unsigned char v2:8; long long v3; };
struct B_BFu8c_S { bool v1; unsigned char v2:8; short v3; };
struct B_BFu8c_Uc { bool v1; unsigned char v2:8; unsigned char v3; };
struct B_BFu8c_Ui { bool v1; unsigned char v2:8; unsigned int v3; };
struct B_BFu8c_Ul { bool v1; unsigned char v2:8; unsigned long long v3; };
struct B_BFu8c_Us { bool v1; unsigned char v2:8; unsigned short v3; };
struct B_BFu8c_Vp { bool v1; unsigned char v2:8; void * v3; };
struct B_BFu8i { bool v1; unsigned int v2:8; };
struct B_BFu8i_B { bool v1; unsigned int v2:8; bool v3; };
struct B_BFu8i_BFu15i { bool v1; unsigned int v2:8; unsigned int v3:15; };
struct B_BFu8i_BFu15ll { bool v1; unsigned int v2:8; unsigned long long v3:15; };
struct B_BFu8i_BFu15s { bool v1; unsigned int v2:8; unsigned short v3:15; };
struct B_BFu8i_BFu16i { bool v1; unsigned int v2:8; unsigned int v3:16; };
struct B_BFu8i_BFu16ll { bool v1; unsigned int v2:8; unsigned long long v3:16; };
struct B_BFu8i_BFu16s { bool v1; unsigned int v2:8; unsigned short v3:16; };
struct B_BFu8i_BFu17i { bool v1; unsigned int v2:8; unsigned int v3:17; };
struct B_BFu8i_BFu17ll { bool v1; unsigned int v2:8; unsigned long long v3:17; };
struct B_BFu8i_BFu1c { bool v1; unsigned int v2:8; unsigned char v3:1; };
struct B_BFu8i_BFu1i { bool v1; unsigned int v2:8; unsigned int v3:1; };
struct B_BFu8i_BFu1ll { bool v1; unsigned int v2:8; unsigned long long v3:1; };
struct B_BFu8i_BFu1s { bool v1; unsigned int v2:8; unsigned short v3:1; };
struct B_BFu8i_BFu31i { bool v1; unsigned int v2:8; unsigned int v3:31; };
struct B_BFu8i_BFu31ll { bool v1; unsigned int v2:8; unsigned long long v3:31; };
struct B_BFu8i_BFu32i { bool v1; unsigned int v2:8; unsigned int v3:32; };
struct B_BFu8i_BFu32ll { bool v1; unsigned int v2:8; unsigned long long v3:32; };
struct B_BFu8i_BFu33 { bool v1; unsigned int v2:8; unsigned long long v3:33; };
struct B_BFu8i_BFu7c { bool v1; unsigned int v2:8; unsigned char v3:7; };
struct B_BFu8i_BFu7i { bool v1; unsigned int v2:8; unsigned int v3:7; };
struct B_BFu8i_BFu7ll { bool v1; unsigned int v2:8; unsigned long long v3:7; };
struct B_BFu8i_BFu7s { bool v1; unsigned int v2:8; unsigned short v3:7; };
struct B_BFu8i_BFu8c { bool v1; unsigned int v2:8; unsigned char v3:8; };
struct B_BFu8i_BFu8i { bool v1; unsigned int v2:8; unsigned int v3:8; };
struct B_BFu8i_BFu8ll { bool v1; unsigned int v2:8; unsigned long long v3:8; };
struct B_BFu8i_BFu8s { bool v1; unsigned int v2:8; unsigned short v3:8; };
struct B_BFu8i_BFu9i { bool v1; unsigned int v2:8; unsigned int v3:9; };
struct B_BFu8i_BFu9ll { bool v1; unsigned int v2:8; unsigned long long v3:9; };
struct B_BFu8i_BFu9s { bool v1; unsigned int v2:8; unsigned short v3:9; };
#endif // __cplusplus
#ifdef __cplusplus


static void Test_aBFu32ll_BFu16s_B()
{
  {
    init_simple_test("aBFu32ll_BFu16s_B");
    static aBFu32ll_BFu16s_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu32ll_BFu16s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu16s_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu16s_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu16s_B");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aBFu32ll_BFu16s_B");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aBFu32ll_BFu16s_B");
    check_field_offset(lv, v3, 6, "aBFu32ll_BFu16s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_BFu16s_B(Test_aBFu32ll_BFu16s_B, "aBFu32ll_BFu16s_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_BFu17i_B()
{
  {
    init_simple_test("aBFu32ll_BFu17i_B");
    static aBFu32ll_BFu17i_B lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu17i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu17i_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu17i_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu17i_B");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aBFu32ll_BFu17i_B");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aBFu32ll_BFu17i_B");
    check_field_offset(lv, v3, 7, "aBFu32ll_BFu17i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_BFu17i_B(Test_aBFu32ll_BFu17i_B, "aBFu32ll_BFu17i_B", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_BFu17ll_B()
{
  {
    init_simple_test("aBFu32ll_BFu17ll_B");
    static aBFu32ll_BFu17ll_B lv;
    check2(sizeof(lv), 8, "sizeof(aBFu32ll_BFu17ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu17ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu17ll_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu17ll_B");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aBFu32ll_BFu17ll_B");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aBFu32ll_BFu17ll_B");
    check_field_offset(lv, v3, 7, "aBFu32ll_BFu17ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_BFu17ll_B(Test_aBFu32ll_BFu17ll_B, "aBFu32ll_BFu17ll_B", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_BFu1c_B()
{
  {
    init_simple_test("aBFu32ll_BFu1c_B");
    static aBFu32ll_BFu1c_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu1c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu1c_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu1c_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu1c_B");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu1c_B");
    check_field_offset(lv, v3, 5, "aBFu32ll_BFu1c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_BFu1c_B(Test_aBFu32ll_BFu1c_B, "aBFu32ll_BFu1c_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_BFu1i_B()
{
  {
    init_simple_test("aBFu32ll_BFu1i_B");
    static aBFu32ll_BFu1i_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu1i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu1i_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu1i_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu1i_B");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu1i_B");
    check_field_offset(lv, v3, 5, "aBFu32ll_BFu1i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_BFu1i_B(Test_aBFu32ll_BFu1i_B, "aBFu32ll_BFu1i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_BFu1ll_B()
{
  {
    init_simple_test("aBFu32ll_BFu1ll_B");
    static aBFu32ll_BFu1ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu1ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu1ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu1ll_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu1ll_B");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu1ll_B");
    check_field_offset(lv, v3, 5, "aBFu32ll_BFu1ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_BFu1ll_B(Test_aBFu32ll_BFu1ll_B, "aBFu32ll_BFu1ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_BFu1s_B()
{
  {
    init_simple_test("aBFu32ll_BFu1s_B");
    static aBFu32ll_BFu1s_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu1s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu1s_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu1s_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu1s_B");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aBFu32ll_BFu1s_B");
    check_field_offset(lv, v3, 5, "aBFu32ll_BFu1s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_BFu1s_B(Test_aBFu32ll_BFu1s_B, "aBFu32ll_BFu1s_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_BFu31i_B()
{
  {
    init_simple_test("aBFu32ll_BFu31i_B");
    static aBFu32ll_BFu31i_B lv;
    check2(sizeof(lv), 9, "sizeof(aBFu32ll_BFu31i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu31i_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu31i_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu31i_B");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aBFu32ll_BFu31i_B");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aBFu32ll_BFu31i_B");
    check_field_offset(lv, v3, 8, "aBFu32ll_BFu31i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_BFu31i_B(Test_aBFu32ll_BFu31i_B, "aBFu32ll_BFu31i_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_BFu31ll_B()
{
  {
    init_simple_test("aBFu32ll_BFu31ll_B");
    static aBFu32ll_BFu31ll_B lv;
    check2(sizeof(lv), 9, "sizeof(aBFu32ll_BFu31ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu31ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu31ll_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu31ll_B");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aBFu32ll_BFu31ll_B");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aBFu32ll_BFu31ll_B");
    check_field_offset(lv, v3, 8, "aBFu32ll_BFu31ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_BFu31ll_B(Test_aBFu32ll_BFu31ll_B, "aBFu32ll_BFu31ll_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_BFu32i_B()
{
  {
    init_simple_test("aBFu32ll_BFu32i_B");
    static aBFu32ll_BFu32i_B lv;
    check2(sizeof(lv), 9, "sizeof(aBFu32ll_BFu32i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu32i_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu32i_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu32i_B");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aBFu32ll_BFu32i_B");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu32i_B");
    check_field_offset(lv, v3, 8, "aBFu32ll_BFu32i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_BFu32i_B(Test_aBFu32ll_BFu32i_B, "aBFu32ll_BFu32i_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_BFu32ll_B()
{
  {
    init_simple_test("aBFu32ll_BFu32ll_B");
    static aBFu32ll_BFu32ll_B lv;
    check2(sizeof(lv), 9, "sizeof(aBFu32ll_BFu32ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu32ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu32ll_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu32ll_B");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aBFu32ll_BFu32ll_B");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu32ll_B");
    check_field_offset(lv, v3, 8, "aBFu32ll_BFu32ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_BFu32ll_B(Test_aBFu32ll_BFu32ll_B, "aBFu32ll_BFu32ll_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_BFu33_B()
{
  {
    init_simple_test("aBFu32ll_BFu33_B");
    static aBFu32ll_BFu33_B lv;
    check2(sizeof(lv), 10, "sizeof(aBFu32ll_BFu33_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu33_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu33_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu33_B");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "aBFu32ll_BFu33_B");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "aBFu32ll_BFu33_B");
    check_field_offset(lv, v3, 9, "aBFu32ll_BFu33_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_BFu33_B(Test_aBFu32ll_BFu33_B, "aBFu32ll_BFu33_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_BFu7c_B()
{
  {
    init_simple_test("aBFu32ll_BFu7c_B");
    static aBFu32ll_BFu7c_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu7c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu7c_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu7c_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu7c_B");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu7c_B");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu7c_B");
    check_field_offset(lv, v3, 5, "aBFu32ll_BFu7c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_BFu7c_B(Test_aBFu32ll_BFu7c_B, "aBFu32ll_BFu7c_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_BFu7i_B()
{
  {
    init_simple_test("aBFu32ll_BFu7i_B");
    static aBFu32ll_BFu7i_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu7i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu7i_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu7i_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu7i_B");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu7i_B");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu7i_B");
    check_field_offset(lv, v3, 5, "aBFu32ll_BFu7i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_BFu7i_B(Test_aBFu32ll_BFu7i_B, "aBFu32ll_BFu7i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_BFu7ll_B()
{
  {
    init_simple_test("aBFu32ll_BFu7ll_B");
    static aBFu32ll_BFu7ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu7ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu7ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu7ll_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu7ll_B");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu7ll_B");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu7ll_B");
    check_field_offset(lv, v3, 5, "aBFu32ll_BFu7ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_BFu7ll_B(Test_aBFu32ll_BFu7ll_B, "aBFu32ll_BFu7ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_BFu7s_B()
{
  {
    init_simple_test("aBFu32ll_BFu7s_B");
    static aBFu32ll_BFu7s_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu7s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu7s_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu7s_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu7s_B");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aBFu32ll_BFu7s_B");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aBFu32ll_BFu7s_B");
    check_field_offset(lv, v3, 5, "aBFu32ll_BFu7s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_BFu7s_B(Test_aBFu32ll_BFu7s_B, "aBFu32ll_BFu7s_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_BFu8c_B()
{
  {
    init_simple_test("aBFu32ll_BFu8c_B");
    static aBFu32ll_BFu8c_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu8c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu8c_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu8c_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu8c_B");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu8c_B");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu8c_B");
    check_field_offset(lv, v3, 5, "aBFu32ll_BFu8c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_BFu8c_B(Test_aBFu32ll_BFu8c_B, "aBFu32ll_BFu8c_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_BFu8i_B()
{
  {
    init_simple_test("aBFu32ll_BFu8i_B");
    static aBFu32ll_BFu8i_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu8i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu8i_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu8i_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu8i_B");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu8i_B");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu8i_B");
    check_field_offset(lv, v3, 5, "aBFu32ll_BFu8i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_BFu8i_B(Test_aBFu32ll_BFu8i_B, "aBFu32ll_BFu8i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_BFu8ll_B()
{
  {
    init_simple_test("aBFu32ll_BFu8ll_B");
    static aBFu32ll_BFu8ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu8ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu8ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu8ll_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu8ll_B");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu8ll_B");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu8ll_B");
    check_field_offset(lv, v3, 5, "aBFu32ll_BFu8ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_BFu8ll_B(Test_aBFu32ll_BFu8ll_B, "aBFu32ll_BFu8ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_BFu8s_B()
{
  {
    init_simple_test("aBFu32ll_BFu8s_B");
    static aBFu32ll_BFu8s_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_BFu8s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu8s_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu8s_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu8s_B");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aBFu32ll_BFu8s_B");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aBFu32ll_BFu8s_B");
    check_field_offset(lv, v3, 5, "aBFu32ll_BFu8s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_BFu8s_B(Test_aBFu32ll_BFu8s_B, "aBFu32ll_BFu8s_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_BFu9i_B()
{
  {
    init_simple_test("aBFu32ll_BFu9i_B");
    static aBFu32ll_BFu9i_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu32ll_BFu9i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu9i_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu9i_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu9i_B");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32ll_BFu9i_B");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32ll_BFu9i_B");
    check_field_offset(lv, v3, 6, "aBFu32ll_BFu9i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_BFu9i_B(Test_aBFu32ll_BFu9i_B, "aBFu32ll_BFu9i_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_BFu9ll_B()
{
  {
    init_simple_test("aBFu32ll_BFu9ll_B");
    static aBFu32ll_BFu9ll_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu32ll_BFu9ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu9ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu9ll_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu9ll_B");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32ll_BFu9ll_B");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32ll_BFu9ll_B");
    check_field_offset(lv, v3, 6, "aBFu32ll_BFu9ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_BFu9ll_B(Test_aBFu32ll_BFu9ll_B, "aBFu32ll_BFu9ll_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_BFu9s_B()
{
  {
    init_simple_test("aBFu32ll_BFu9s_B");
    static aBFu32ll_BFu9s_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu32ll_BFu9s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_BFu9s_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_BFu9s_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_BFu9s_B");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aBFu32ll_BFu9s_B");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aBFu32ll_BFu9s_B");
    check_field_offset(lv, v3, 6, "aBFu32ll_BFu9s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_BFu9s_B(Test_aBFu32ll_BFu9s_B, "aBFu32ll_BFu9s_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_C_B()
{
  {
    init_simple_test("aBFu32ll_C_B");
    static aBFu32ll_C_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_C_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_C_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_C_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_C_B");
    check_field_offset(lv, v2, 4, "aBFu32ll_C_B.v2");
    check_field_offset(lv, v3, 5, "aBFu32ll_C_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_C_B(Test_aBFu32ll_C_B, "aBFu32ll_C_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_D_B()
{
  {
    init_simple_test("aBFu32ll_D_B");
    static aBFu32ll_D_B lv;
    check2(sizeof(lv), 13, "sizeof(aBFu32ll_D_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_D_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_D_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_D_B");
    check_field_offset(lv, v2, 4, "aBFu32ll_D_B.v2");
    check_field_offset(lv, v3, 12, "aBFu32ll_D_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_D_B(Test_aBFu32ll_D_B, "aBFu32ll_D_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_F_B()
{
  {
    init_simple_test("aBFu32ll_F_B");
    static aBFu32ll_F_B lv;
    check2(sizeof(lv), 9, "sizeof(aBFu32ll_F_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_F_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_F_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_F_B");
    check_field_offset(lv, v2, 4, "aBFu32ll_F_B.v2");
    check_field_offset(lv, v3, 8, "aBFu32ll_F_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_F_B(Test_aBFu32ll_F_B, "aBFu32ll_F_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_I_B()
{
  {
    init_simple_test("aBFu32ll_I_B");
    static aBFu32ll_I_B lv;
    check2(sizeof(lv), 9, "sizeof(aBFu32ll_I_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_I_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_I_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_I_B");
    check_field_offset(lv, v2, 4, "aBFu32ll_I_B.v2");
    check_field_offset(lv, v3, 8, "aBFu32ll_I_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_I_B(Test_aBFu32ll_I_B, "aBFu32ll_I_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_Ip_B()
{
  {
    init_simple_test("aBFu32ll_Ip_B");
    static aBFu32ll_Ip_B lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aBFu32ll_Ip_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_Ip_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_Ip_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_Ip_B");
    check_field_offset(lv, v2, 4, "aBFu32ll_Ip_B.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "aBFu32ll_Ip_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_Ip_B(Test_aBFu32ll_Ip_B, "aBFu32ll_Ip_B", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_L_B()
{
  {
    init_simple_test("aBFu32ll_L_B");
    static aBFu32ll_L_B lv;
    check2(sizeof(lv), 13, "sizeof(aBFu32ll_L_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_L_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_L_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_L_B");
    check_field_offset(lv, v2, 4, "aBFu32ll_L_B.v2");
    check_field_offset(lv, v3, 12, "aBFu32ll_L_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_L_B(Test_aBFu32ll_L_B, "aBFu32ll_L_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_S_B()
{
  {
    init_simple_test("aBFu32ll_S_B");
    static aBFu32ll_S_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu32ll_S_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_S_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_S_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_S_B");
    check_field_offset(lv, v2, 4, "aBFu32ll_S_B.v2");
    check_field_offset(lv, v3, 6, "aBFu32ll_S_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_S_B(Test_aBFu32ll_S_B, "aBFu32ll_S_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_Uc_B()
{
  {
    init_simple_test("aBFu32ll_Uc_B");
    static aBFu32ll_Uc_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu32ll_Uc_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_Uc_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_Uc_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_Uc_B");
    check_field_offset(lv, v2, 4, "aBFu32ll_Uc_B.v2");
    check_field_offset(lv, v3, 5, "aBFu32ll_Uc_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_Uc_B(Test_aBFu32ll_Uc_B, "aBFu32ll_Uc_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_Ui_B()
{
  {
    init_simple_test("aBFu32ll_Ui_B");
    static aBFu32ll_Ui_B lv;
    check2(sizeof(lv), 9, "sizeof(aBFu32ll_Ui_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_Ui_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_Ui_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_Ui_B");
    check_field_offset(lv, v2, 4, "aBFu32ll_Ui_B.v2");
    check_field_offset(lv, v3, 8, "aBFu32ll_Ui_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_Ui_B(Test_aBFu32ll_Ui_B, "aBFu32ll_Ui_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_Ul_B()
{
  {
    init_simple_test("aBFu32ll_Ul_B");
    static aBFu32ll_Ul_B lv;
    check2(sizeof(lv), 13, "sizeof(aBFu32ll_Ul_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_Ul_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_Ul_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_Ul_B");
    check_field_offset(lv, v2, 4, "aBFu32ll_Ul_B.v2");
    check_field_offset(lv, v3, 12, "aBFu32ll_Ul_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_Ul_B(Test_aBFu32ll_Ul_B, "aBFu32ll_Ul_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_Us_B()
{
  {
    init_simple_test("aBFu32ll_Us_B");
    static aBFu32ll_Us_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu32ll_Us_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_Us_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_Us_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_Us_B");
    check_field_offset(lv, v2, 4, "aBFu32ll_Us_B.v2");
    check_field_offset(lv, v3, 6, "aBFu32ll_Us_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_Us_B(Test_aBFu32ll_Us_B, "aBFu32ll_Us_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu32ll_Vp_B()
{
  {
    init_simple_test("aBFu32ll_Vp_B");
    static aBFu32ll_Vp_B lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aBFu32ll_Vp_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu32ll_Vp_B)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "aBFu32ll_Vp_B");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "aBFu32ll_Vp_B");
    check_field_offset(lv, v2, 4, "aBFu32ll_Vp_B.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "aBFu32ll_Vp_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu32ll_Vp_B(Test_aBFu32ll_Vp_B, "aBFu32ll_Vp_B", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B()
{
  {
    init_simple_test("aBFu33_B");
    static aBFu33_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu33_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B");
    check_field_offset(lv, v2, 5, "aBFu33_B.v2");
  }
}
static Arrange_To_Call_Me vaBFu33_B(Test_aBFu33_B, "aBFu33_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_B()
{
  {
    init_simple_test("aBFu33_B_B");
    static aBFu33_B_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_B_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_B");
    check_field_offset(lv, v2, 5, "aBFu33_B_B.v2");
    check_field_offset(lv, v3, 6, "aBFu33_B_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_B_B(Test_aBFu33_B_B, "aBFu33_B_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_BFu15i()
{
  {
    init_simple_test("aBFu33_B_BFu15i");
    static aBFu33_B_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu33_B_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_BFu15i");
    check_field_offset(lv, v2, 5, "aBFu33_B_BFu15i.v2");
    set_bf_and_test(lv, v3, 6, 0, 15, 1, "aBFu33_B_BFu15i");
    set_bf_and_test(lv, v3, 6, 0, 15, hide_ull(1LL<<14), "aBFu33_B_BFu15i");
  }
}
static Arrange_To_Call_Me vaBFu33_B_BFu15i(Test_aBFu33_B_BFu15i, "aBFu33_B_BFu15i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_BFu15ll()
{
  {
    init_simple_test("aBFu33_B_BFu15ll");
    static aBFu33_B_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu33_B_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_BFu15ll");
    check_field_offset(lv, v2, 5, "aBFu33_B_BFu15ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 15, 1, "aBFu33_B_BFu15ll");
    set_bf_and_test(lv, v3, 6, 0, 15, hide_ull(1LL<<14), "aBFu33_B_BFu15ll");
  }
}
static Arrange_To_Call_Me vaBFu33_B_BFu15ll(Test_aBFu33_B_BFu15ll, "aBFu33_B_BFu15ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_BFu15s()
{
  {
    init_simple_test("aBFu33_B_BFu15s");
    static aBFu33_B_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu33_B_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_BFu15s");
    check_field_offset(lv, v2, 5, "aBFu33_B_BFu15s.v2");
    set_bf_and_test(lv, v3, 6, 0, 15, 1, "aBFu33_B_BFu15s");
    set_bf_and_test(lv, v3, 6, 0, 15, hide_ull(1LL<<14), "aBFu33_B_BFu15s");
  }
}
static Arrange_To_Call_Me vaBFu33_B_BFu15s(Test_aBFu33_B_BFu15s, "aBFu33_B_BFu15s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_BFu16i()
{
  {
    init_simple_test("aBFu33_B_BFu16i");
    static aBFu33_B_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu33_B_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_BFu16i");
    check_field_offset(lv, v2, 5, "aBFu33_B_BFu16i.v2");
    set_bf_and_test(lv, v3, 6, 0, 16, 1, "aBFu33_B_BFu16i");
    set_bf_and_test(lv, v3, 6, 0, 16, hide_ull(1LL<<15), "aBFu33_B_BFu16i");
  }
}
static Arrange_To_Call_Me vaBFu33_B_BFu16i(Test_aBFu33_B_BFu16i, "aBFu33_B_BFu16i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_BFu16ll()
{
  {
    init_simple_test("aBFu33_B_BFu16ll");
    static aBFu33_B_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu33_B_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_BFu16ll");
    check_field_offset(lv, v2, 5, "aBFu33_B_BFu16ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 16, 1, "aBFu33_B_BFu16ll");
    set_bf_and_test(lv, v3, 6, 0, 16, hide_ull(1LL<<15), "aBFu33_B_BFu16ll");
  }
}
static Arrange_To_Call_Me vaBFu33_B_BFu16ll(Test_aBFu33_B_BFu16ll, "aBFu33_B_BFu16ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_BFu16s()
{
  {
    init_simple_test("aBFu33_B_BFu16s");
    static aBFu33_B_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu33_B_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_BFu16s");
    check_field_offset(lv, v2, 5, "aBFu33_B_BFu16s.v2");
    set_bf_and_test(lv, v3, 6, 0, 16, 1, "aBFu33_B_BFu16s");
    set_bf_and_test(lv, v3, 6, 0, 16, hide_ull(1LL<<15), "aBFu33_B_BFu16s");
  }
}
static Arrange_To_Call_Me vaBFu33_B_BFu16s(Test_aBFu33_B_BFu16s, "aBFu33_B_BFu16s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_BFu17i()
{
  {
    init_simple_test("aBFu33_B_BFu17i");
    static aBFu33_B_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aBFu33_B_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_BFu17i");
    check_field_offset(lv, v2, 5, "aBFu33_B_BFu17i.v2");
    set_bf_and_test(lv, v3, 6, 0, 17, 1, "aBFu33_B_BFu17i");
    set_bf_and_test(lv, v3, 6, 0, 17, hide_ull(1LL<<16), "aBFu33_B_BFu17i");
  }
}
static Arrange_To_Call_Me vaBFu33_B_BFu17i(Test_aBFu33_B_BFu17i, "aBFu33_B_BFu17i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_BFu17ll()
{
  {
    init_simple_test("aBFu33_B_BFu17ll");
    static aBFu33_B_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aBFu33_B_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_BFu17ll");
    check_field_offset(lv, v2, 5, "aBFu33_B_BFu17ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 17, 1, "aBFu33_B_BFu17ll");
    set_bf_and_test(lv, v3, 6, 0, 17, hide_ull(1LL<<16), "aBFu33_B_BFu17ll");
  }
}
static Arrange_To_Call_Me vaBFu33_B_BFu17ll(Test_aBFu33_B_BFu17ll, "aBFu33_B_BFu17ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_BFu1c()
{
  {
    init_simple_test("aBFu33_B_BFu1c");
    static aBFu33_B_BFu1c lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_B_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_BFu1c");
    check_field_offset(lv, v2, 5, "aBFu33_B_BFu1c.v2");
    set_bf_and_test(lv, v3, 6, 0, 1, 1, "aBFu33_B_BFu1c");
  }
}
static Arrange_To_Call_Me vaBFu33_B_BFu1c(Test_aBFu33_B_BFu1c, "aBFu33_B_BFu1c", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_BFu1i()
{
  {
    init_simple_test("aBFu33_B_BFu1i");
    static aBFu33_B_BFu1i lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_B_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_BFu1i");
    check_field_offset(lv, v2, 5, "aBFu33_B_BFu1i.v2");
    set_bf_and_test(lv, v3, 6, 0, 1, 1, "aBFu33_B_BFu1i");
  }
}
static Arrange_To_Call_Me vaBFu33_B_BFu1i(Test_aBFu33_B_BFu1i, "aBFu33_B_BFu1i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_BFu1ll()
{
  {
    init_simple_test("aBFu33_B_BFu1ll");
    static aBFu33_B_BFu1ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_B_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_BFu1ll");
    check_field_offset(lv, v2, 5, "aBFu33_B_BFu1ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 1, 1, "aBFu33_B_BFu1ll");
  }
}
static Arrange_To_Call_Me vaBFu33_B_BFu1ll(Test_aBFu33_B_BFu1ll, "aBFu33_B_BFu1ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_BFu1s()
{
  {
    init_simple_test("aBFu33_B_BFu1s");
    static aBFu33_B_BFu1s lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_B_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_BFu1s");
    check_field_offset(lv, v2, 5, "aBFu33_B_BFu1s.v2");
    set_bf_and_test(lv, v3, 6, 0, 1, 1, "aBFu33_B_BFu1s");
  }
}
static Arrange_To_Call_Me vaBFu33_B_BFu1s(Test_aBFu33_B_BFu1s, "aBFu33_B_BFu1s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_BFu31i()
{
  {
    init_simple_test("aBFu33_B_BFu31i");
    static aBFu33_B_BFu31i lv;
    check2(sizeof(lv), 10, "sizeof(aBFu33_B_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_BFu31i");
    check_field_offset(lv, v2, 5, "aBFu33_B_BFu31i.v2");
    set_bf_and_test(lv, v3, 6, 0, 31, 1, "aBFu33_B_BFu31i");
    set_bf_and_test(lv, v3, 6, 0, 31, hide_ull(1LL<<30), "aBFu33_B_BFu31i");
  }
}
static Arrange_To_Call_Me vaBFu33_B_BFu31i(Test_aBFu33_B_BFu31i, "aBFu33_B_BFu31i", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_BFu31ll()
{
  {
    init_simple_test("aBFu33_B_BFu31ll");
    static aBFu33_B_BFu31ll lv;
    check2(sizeof(lv), 10, "sizeof(aBFu33_B_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_BFu31ll");
    check_field_offset(lv, v2, 5, "aBFu33_B_BFu31ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 31, 1, "aBFu33_B_BFu31ll");
    set_bf_and_test(lv, v3, 6, 0, 31, hide_ull(1LL<<30), "aBFu33_B_BFu31ll");
  }
}
static Arrange_To_Call_Me vaBFu33_B_BFu31ll(Test_aBFu33_B_BFu31ll, "aBFu33_B_BFu31ll", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_BFu32i()
{
  {
    init_simple_test("aBFu33_B_BFu32i");
    static aBFu33_B_BFu32i lv;
    check2(sizeof(lv), 10, "sizeof(aBFu33_B_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_BFu32i");
    check_field_offset(lv, v2, 5, "aBFu33_B_BFu32i.v2");
    set_bf_and_test(lv, v3, 6, 0, 32, 1, "aBFu33_B_BFu32i");
    set_bf_and_test(lv, v3, 6, 0, 32, hide_ull(1LL<<31), "aBFu33_B_BFu32i");
  }
}
static Arrange_To_Call_Me vaBFu33_B_BFu32i(Test_aBFu33_B_BFu32i, "aBFu33_B_BFu32i", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_BFu32ll()
{
  {
    init_simple_test("aBFu33_B_BFu32ll");
    static aBFu33_B_BFu32ll lv;
    check2(sizeof(lv), 10, "sizeof(aBFu33_B_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_BFu32ll");
    check_field_offset(lv, v2, 5, "aBFu33_B_BFu32ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 32, 1, "aBFu33_B_BFu32ll");
    set_bf_and_test(lv, v3, 6, 0, 32, hide_ull(1LL<<31), "aBFu33_B_BFu32ll");
  }
}
static Arrange_To_Call_Me vaBFu33_B_BFu32ll(Test_aBFu33_B_BFu32ll, "aBFu33_B_BFu32ll", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_BFu33()
{
  {
    init_simple_test("aBFu33_B_BFu33");
    static aBFu33_B_BFu33 lv;
    check2(sizeof(lv), 11, "sizeof(aBFu33_B_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_BFu33");
    check_field_offset(lv, v2, 5, "aBFu33_B_BFu33.v2");
    set_bf_and_test(lv, v3, 6, 0, 33, 1, "aBFu33_B_BFu33");
    set_bf_and_test(lv, v3, 6, 0, 33, hide_ull(1LL<<32), "aBFu33_B_BFu33");
  }
}
static Arrange_To_Call_Me vaBFu33_B_BFu33(Test_aBFu33_B_BFu33, "aBFu33_B_BFu33", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_BFu7c()
{
  {
    init_simple_test("aBFu33_B_BFu7c");
    static aBFu33_B_BFu7c lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_B_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_BFu7c");
    check_field_offset(lv, v2, 5, "aBFu33_B_BFu7c.v2");
    set_bf_and_test(lv, v3, 6, 0, 7, 1, "aBFu33_B_BFu7c");
    set_bf_and_test(lv, v3, 6, 0, 7, hide_ull(1LL<<6), "aBFu33_B_BFu7c");
  }
}
static Arrange_To_Call_Me vaBFu33_B_BFu7c(Test_aBFu33_B_BFu7c, "aBFu33_B_BFu7c", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_BFu7i()
{
  {
    init_simple_test("aBFu33_B_BFu7i");
    static aBFu33_B_BFu7i lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_B_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_BFu7i");
    check_field_offset(lv, v2, 5, "aBFu33_B_BFu7i.v2");
    set_bf_and_test(lv, v3, 6, 0, 7, 1, "aBFu33_B_BFu7i");
    set_bf_and_test(lv, v3, 6, 0, 7, hide_ull(1LL<<6), "aBFu33_B_BFu7i");
  }
}
static Arrange_To_Call_Me vaBFu33_B_BFu7i(Test_aBFu33_B_BFu7i, "aBFu33_B_BFu7i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_BFu7ll()
{
  {
    init_simple_test("aBFu33_B_BFu7ll");
    static aBFu33_B_BFu7ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_B_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_BFu7ll");
    check_field_offset(lv, v2, 5, "aBFu33_B_BFu7ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 7, 1, "aBFu33_B_BFu7ll");
    set_bf_and_test(lv, v3, 6, 0, 7, hide_ull(1LL<<6), "aBFu33_B_BFu7ll");
  }
}
static Arrange_To_Call_Me vaBFu33_B_BFu7ll(Test_aBFu33_B_BFu7ll, "aBFu33_B_BFu7ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_BFu7s()
{
  {
    init_simple_test("aBFu33_B_BFu7s");
    static aBFu33_B_BFu7s lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_B_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_BFu7s");
    check_field_offset(lv, v2, 5, "aBFu33_B_BFu7s.v2");
    set_bf_and_test(lv, v3, 6, 0, 7, 1, "aBFu33_B_BFu7s");
    set_bf_and_test(lv, v3, 6, 0, 7, hide_ull(1LL<<6), "aBFu33_B_BFu7s");
  }
}
static Arrange_To_Call_Me vaBFu33_B_BFu7s(Test_aBFu33_B_BFu7s, "aBFu33_B_BFu7s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_BFu8c()
{
  {
    init_simple_test("aBFu33_B_BFu8c");
    static aBFu33_B_BFu8c lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_B_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_BFu8c");
    check_field_offset(lv, v2, 5, "aBFu33_B_BFu8c.v2");
    set_bf_and_test(lv, v3, 6, 0, 8, 1, "aBFu33_B_BFu8c");
    set_bf_and_test(lv, v3, 6, 0, 8, hide_ull(1LL<<7), "aBFu33_B_BFu8c");
  }
}
static Arrange_To_Call_Me vaBFu33_B_BFu8c(Test_aBFu33_B_BFu8c, "aBFu33_B_BFu8c", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_BFu8i()
{
  {
    init_simple_test("aBFu33_B_BFu8i");
    static aBFu33_B_BFu8i lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_B_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_BFu8i");
    check_field_offset(lv, v2, 5, "aBFu33_B_BFu8i.v2");
    set_bf_and_test(lv, v3, 6, 0, 8, 1, "aBFu33_B_BFu8i");
    set_bf_and_test(lv, v3, 6, 0, 8, hide_ull(1LL<<7), "aBFu33_B_BFu8i");
  }
}
static Arrange_To_Call_Me vaBFu33_B_BFu8i(Test_aBFu33_B_BFu8i, "aBFu33_B_BFu8i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_BFu8ll()
{
  {
    init_simple_test("aBFu33_B_BFu8ll");
    static aBFu33_B_BFu8ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_B_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_BFu8ll");
    check_field_offset(lv, v2, 5, "aBFu33_B_BFu8ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 8, 1, "aBFu33_B_BFu8ll");
    set_bf_and_test(lv, v3, 6, 0, 8, hide_ull(1LL<<7), "aBFu33_B_BFu8ll");
  }
}
static Arrange_To_Call_Me vaBFu33_B_BFu8ll(Test_aBFu33_B_BFu8ll, "aBFu33_B_BFu8ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_BFu8s()
{
  {
    init_simple_test("aBFu33_B_BFu8s");
    static aBFu33_B_BFu8s lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_B_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_BFu8s");
    check_field_offset(lv, v2, 5, "aBFu33_B_BFu8s.v2");
    set_bf_and_test(lv, v3, 6, 0, 8, 1, "aBFu33_B_BFu8s");
    set_bf_and_test(lv, v3, 6, 0, 8, hide_ull(1LL<<7), "aBFu33_B_BFu8s");
  }
}
static Arrange_To_Call_Me vaBFu33_B_BFu8s(Test_aBFu33_B_BFu8s, "aBFu33_B_BFu8s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_BFu9i()
{
  {
    init_simple_test("aBFu33_B_BFu9i");
    static aBFu33_B_BFu9i lv;
    check2(sizeof(lv), 8, "sizeof(aBFu33_B_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_BFu9i");
    check_field_offset(lv, v2, 5, "aBFu33_B_BFu9i.v2");
    set_bf_and_test(lv, v3, 6, 0, 9, 1, "aBFu33_B_BFu9i");
    set_bf_and_test(lv, v3, 6, 0, 9, hide_ull(1LL<<8), "aBFu33_B_BFu9i");
  }
}
static Arrange_To_Call_Me vaBFu33_B_BFu9i(Test_aBFu33_B_BFu9i, "aBFu33_B_BFu9i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_BFu9ll()
{
  {
    init_simple_test("aBFu33_B_BFu9ll");
    static aBFu33_B_BFu9ll lv;
    check2(sizeof(lv), 8, "sizeof(aBFu33_B_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_BFu9ll");
    check_field_offset(lv, v2, 5, "aBFu33_B_BFu9ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 9, 1, "aBFu33_B_BFu9ll");
    set_bf_and_test(lv, v3, 6, 0, 9, hide_ull(1LL<<8), "aBFu33_B_BFu9ll");
  }
}
static Arrange_To_Call_Me vaBFu33_B_BFu9ll(Test_aBFu33_B_BFu9ll, "aBFu33_B_BFu9ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_BFu9s()
{
  {
    init_simple_test("aBFu33_B_BFu9s");
    static aBFu33_B_BFu9s lv;
    check2(sizeof(lv), 8, "sizeof(aBFu33_B_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_BFu9s");
    check_field_offset(lv, v2, 5, "aBFu33_B_BFu9s.v2");
    set_bf_and_test(lv, v3, 6, 0, 9, 1, "aBFu33_B_BFu9s");
    set_bf_and_test(lv, v3, 6, 0, 9, hide_ull(1LL<<8), "aBFu33_B_BFu9s");
  }
}
static Arrange_To_Call_Me vaBFu33_B_BFu9s(Test_aBFu33_B_BFu9s, "aBFu33_B_BFu9s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_C()
{
  {
    init_simple_test("aBFu33_B_C");
    static aBFu33_B_C lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_B_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_C)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_C");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_C");
    check_field_offset(lv, v2, 5, "aBFu33_B_C.v2");
    check_field_offset(lv, v3, 6, "aBFu33_B_C.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_B_C(Test_aBFu33_B_C, "aBFu33_B_C", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_D()
{
  {
    init_simple_test("aBFu33_B_D");
    static aBFu33_B_D lv;
    check2(sizeof(lv), 14, "sizeof(aBFu33_B_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_D)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_D");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_D");
    check_field_offset(lv, v2, 5, "aBFu33_B_D.v2");
    check_field_offset(lv, v3, 6, "aBFu33_B_D.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_B_D(Test_aBFu33_B_D, "aBFu33_B_D", 14);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_F()
{
  {
    init_simple_test("aBFu33_B_F");
    static aBFu33_B_F lv;
    check2(sizeof(lv), 10, "sizeof(aBFu33_B_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_F)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_F");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_F");
    check_field_offset(lv, v2, 5, "aBFu33_B_F.v2");
    check_field_offset(lv, v3, 6, "aBFu33_B_F.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_B_F(Test_aBFu33_B_F, "aBFu33_B_F", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_I()
{
  {
    init_simple_test("aBFu33_B_I");
    static aBFu33_B_I lv;
    check2(sizeof(lv), 10, "sizeof(aBFu33_B_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_I)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_I");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_I");
    check_field_offset(lv, v2, 5, "aBFu33_B_I.v2");
    check_field_offset(lv, v3, 6, "aBFu33_B_I.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_B_I(Test_aBFu33_B_I, "aBFu33_B_I", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_Ip()
{
  {
    init_simple_test("aBFu33_B_Ip");
    static aBFu33_B_Ip lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aBFu33_B_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_Ip");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_Ip");
    check_field_offset(lv, v2, 5, "aBFu33_B_Ip.v2");
    check_field_offset(lv, v3, 6, "aBFu33_B_Ip.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_B_Ip(Test_aBFu33_B_Ip, "aBFu33_B_Ip", ABISELECT(14,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_L()
{
  {
    init_simple_test("aBFu33_B_L");
    static aBFu33_B_L lv;
    check2(sizeof(lv), 14, "sizeof(aBFu33_B_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_L)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_L");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_L");
    check_field_offset(lv, v2, 5, "aBFu33_B_L.v2");
    check_field_offset(lv, v3, 6, "aBFu33_B_L.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_B_L(Test_aBFu33_B_L, "aBFu33_B_L", 14);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_S()
{
  {
    init_simple_test("aBFu33_B_S");
    static aBFu33_B_S lv;
    check2(sizeof(lv), 8, "sizeof(aBFu33_B_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_S)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_S");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_S");
    check_field_offset(lv, v2, 5, "aBFu33_B_S.v2");
    check_field_offset(lv, v3, 6, "aBFu33_B_S.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_B_S(Test_aBFu33_B_S, "aBFu33_B_S", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_Uc()
{
  {
    init_simple_test("aBFu33_B_Uc");
    static aBFu33_B_Uc lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_B_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_Uc");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_Uc");
    check_field_offset(lv, v2, 5, "aBFu33_B_Uc.v2");
    check_field_offset(lv, v3, 6, "aBFu33_B_Uc.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_B_Uc(Test_aBFu33_B_Uc, "aBFu33_B_Uc", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_Ui()
{
  {
    init_simple_test("aBFu33_B_Ui");
    static aBFu33_B_Ui lv;
    check2(sizeof(lv), 10, "sizeof(aBFu33_B_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_Ui");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_Ui");
    check_field_offset(lv, v2, 5, "aBFu33_B_Ui.v2");
    check_field_offset(lv, v3, 6, "aBFu33_B_Ui.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_B_Ui(Test_aBFu33_B_Ui, "aBFu33_B_Ui", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_Ul()
{
  {
    init_simple_test("aBFu33_B_Ul");
    static aBFu33_B_Ul lv;
    check2(sizeof(lv), 14, "sizeof(aBFu33_B_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_Ul");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_Ul");
    check_field_offset(lv, v2, 5, "aBFu33_B_Ul.v2");
    check_field_offset(lv, v3, 6, "aBFu33_B_Ul.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_B_Ul(Test_aBFu33_B_Ul, "aBFu33_B_Ul", 14);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_Us()
{
  {
    init_simple_test("aBFu33_B_Us");
    static aBFu33_B_Us lv;
    check2(sizeof(lv), 8, "sizeof(aBFu33_B_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_Us)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_Us");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_Us");
    check_field_offset(lv, v2, 5, "aBFu33_B_Us.v2");
    check_field_offset(lv, v3, 6, "aBFu33_B_Us.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_B_Us(Test_aBFu33_B_Us, "aBFu33_B_Us", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_B_Vp()
{
  {
    init_simple_test("aBFu33_B_Vp");
    static aBFu33_B_Vp lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aBFu33_B_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_B_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_B_Vp");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_B_Vp");
    check_field_offset(lv, v2, 5, "aBFu33_B_Vp.v2");
    check_field_offset(lv, v3, 6, "aBFu33_B_Vp.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_B_Vp(Test_aBFu33_B_Vp, "aBFu33_B_Vp", ABISELECT(14,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_BFu15i_B()
{
  {
    init_simple_test("aBFu33_BFu15i_B");
    static aBFu33_BFu15i_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_BFu15i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu15i_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu15i_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu15i_B");
    set_bf_and_test(lv, v2, 4, 1, 15, 1, "aBFu33_BFu15i_B");
    set_bf_and_test(lv, v2, 4, 1, 15, hide_ull(1LL<<14), "aBFu33_BFu15i_B");
    check_field_offset(lv, v3, 6, "aBFu33_BFu15i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_BFu15i_B(Test_aBFu33_BFu15i_B, "aBFu33_BFu15i_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_BFu15ll_B()
{
  {
    init_simple_test("aBFu33_BFu15ll_B");
    static aBFu33_BFu15ll_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_BFu15ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu15ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu15ll_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu15ll_B");
    set_bf_and_test(lv, v2, 4, 1, 15, 1, "aBFu33_BFu15ll_B");
    set_bf_and_test(lv, v2, 4, 1, 15, hide_ull(1LL<<14), "aBFu33_BFu15ll_B");
    check_field_offset(lv, v3, 6, "aBFu33_BFu15ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_BFu15ll_B(Test_aBFu33_BFu15ll_B, "aBFu33_BFu15ll_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_BFu15s_B()
{
  {
    init_simple_test("aBFu33_BFu15s_B");
    static aBFu33_BFu15s_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_BFu15s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu15s_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu15s_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu15s_B");
    set_bf_and_test(lv, v2, 4, 1, 15, 1, "aBFu33_BFu15s_B");
    set_bf_and_test(lv, v2, 4, 1, 15, hide_ull(1LL<<14), "aBFu33_BFu15s_B");
    check_field_offset(lv, v3, 6, "aBFu33_BFu15s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_BFu15s_B(Test_aBFu33_BFu15s_B, "aBFu33_BFu15s_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_BFu16i_B()
{
  {
    init_simple_test("aBFu33_BFu16i_B");
    static aBFu33_BFu16i_B lv;
    check2(sizeof(lv), 8, "sizeof(aBFu33_BFu16i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu16i_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu16i_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu16i_B");
    set_bf_and_test(lv, v2, 4, 1, 16, 1, "aBFu33_BFu16i_B");
    set_bf_and_test(lv, v2, 4, 1, 16, hide_ull(1LL<<15), "aBFu33_BFu16i_B");
    check_field_offset(lv, v3, 7, "aBFu33_BFu16i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_BFu16i_B(Test_aBFu33_BFu16i_B, "aBFu33_BFu16i_B", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_BFu16ll_B()
{
  {
    init_simple_test("aBFu33_BFu16ll_B");
    static aBFu33_BFu16ll_B lv;
    check2(sizeof(lv), 8, "sizeof(aBFu33_BFu16ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu16ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu16ll_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu16ll_B");
    set_bf_and_test(lv, v2, 4, 1, 16, 1, "aBFu33_BFu16ll_B");
    set_bf_and_test(lv, v2, 4, 1, 16, hide_ull(1LL<<15), "aBFu33_BFu16ll_B");
    check_field_offset(lv, v3, 7, "aBFu33_BFu16ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_BFu16ll_B(Test_aBFu33_BFu16ll_B, "aBFu33_BFu16ll_B", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_BFu16s_B()
{
  {
    init_simple_test("aBFu33_BFu16s_B");
    static aBFu33_BFu16s_B lv;
    check2(sizeof(lv), 8, "sizeof(aBFu33_BFu16s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu16s_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu16s_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu16s_B");
    set_bf_and_test(lv, v2, 4, 1, 16, 1, "aBFu33_BFu16s_B");
    set_bf_and_test(lv, v2, 4, 1, 16, hide_ull(1LL<<15), "aBFu33_BFu16s_B");
    check_field_offset(lv, v3, 7, "aBFu33_BFu16s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_BFu16s_B(Test_aBFu33_BFu16s_B, "aBFu33_BFu16s_B", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_BFu17i_B()
{
  {
    init_simple_test("aBFu33_BFu17i_B");
    static aBFu33_BFu17i_B lv;
    check2(sizeof(lv), 8, "sizeof(aBFu33_BFu17i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu17i_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu17i_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu17i_B");
    set_bf_and_test(lv, v2, 4, 1, 17, 1, "aBFu33_BFu17i_B");
    set_bf_and_test(lv, v2, 4, 1, 17, hide_ull(1LL<<16), "aBFu33_BFu17i_B");
    check_field_offset(lv, v3, 7, "aBFu33_BFu17i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_BFu17i_B(Test_aBFu33_BFu17i_B, "aBFu33_BFu17i_B", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_BFu17ll_B()
{
  {
    init_simple_test("aBFu33_BFu17ll_B");
    static aBFu33_BFu17ll_B lv;
    check2(sizeof(lv), 8, "sizeof(aBFu33_BFu17ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu17ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu17ll_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu17ll_B");
    set_bf_and_test(lv, v2, 4, 1, 17, 1, "aBFu33_BFu17ll_B");
    set_bf_and_test(lv, v2, 4, 1, 17, hide_ull(1LL<<16), "aBFu33_BFu17ll_B");
    check_field_offset(lv, v3, 7, "aBFu33_BFu17ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_BFu17ll_B(Test_aBFu33_BFu17ll_B, "aBFu33_BFu17ll_B", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_BFu1c_B()
{
  {
    init_simple_test("aBFu33_BFu1c_B");
    static aBFu33_BFu1c_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu33_BFu1c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu1c_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu1c_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu1c_B");
    set_bf_and_test(lv, v2, 4, 1, 1, 1, "aBFu33_BFu1c_B");
    check_field_offset(lv, v3, 5, "aBFu33_BFu1c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_BFu1c_B(Test_aBFu33_BFu1c_B, "aBFu33_BFu1c_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_BFu1i_B()
{
  {
    init_simple_test("aBFu33_BFu1i_B");
    static aBFu33_BFu1i_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu33_BFu1i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu1i_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu1i_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu1i_B");
    set_bf_and_test(lv, v2, 4, 1, 1, 1, "aBFu33_BFu1i_B");
    check_field_offset(lv, v3, 5, "aBFu33_BFu1i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_BFu1i_B(Test_aBFu33_BFu1i_B, "aBFu33_BFu1i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_BFu1ll_B()
{
  {
    init_simple_test("aBFu33_BFu1ll_B");
    static aBFu33_BFu1ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu33_BFu1ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu1ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu1ll_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu1ll_B");
    set_bf_and_test(lv, v2, 4, 1, 1, 1, "aBFu33_BFu1ll_B");
    check_field_offset(lv, v3, 5, "aBFu33_BFu1ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_BFu1ll_B(Test_aBFu33_BFu1ll_B, "aBFu33_BFu1ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_BFu1s_B()
{
  {
    init_simple_test("aBFu33_BFu1s_B");
    static aBFu33_BFu1s_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu33_BFu1s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu1s_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu1s_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu1s_B");
    set_bf_and_test(lv, v2, 4, 1, 1, 1, "aBFu33_BFu1s_B");
    check_field_offset(lv, v3, 5, "aBFu33_BFu1s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_BFu1s_B(Test_aBFu33_BFu1s_B, "aBFu33_BFu1s_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_BFu31i_B()
{
  {
    init_simple_test("aBFu33_BFu31i_B");
    static aBFu33_BFu31i_B lv;
    check2(sizeof(lv), 9, "sizeof(aBFu33_BFu31i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu31i_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu31i_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu31i_B");
    set_bf_and_test(lv, v2, 4, 1, 31, 1, "aBFu33_BFu31i_B");
    set_bf_and_test(lv, v2, 4, 1, 31, hide_ull(1LL<<30), "aBFu33_BFu31i_B");
    check_field_offset(lv, v3, 8, "aBFu33_BFu31i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_BFu31i_B(Test_aBFu33_BFu31i_B, "aBFu33_BFu31i_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_BFu31ll_B()
{
  {
    init_simple_test("aBFu33_BFu31ll_B");
    static aBFu33_BFu31ll_B lv;
    check2(sizeof(lv), 9, "sizeof(aBFu33_BFu31ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu31ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu31ll_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu31ll_B");
    set_bf_and_test(lv, v2, 4, 1, 31, 1, "aBFu33_BFu31ll_B");
    set_bf_and_test(lv, v2, 4, 1, 31, hide_ull(1LL<<30), "aBFu33_BFu31ll_B");
    check_field_offset(lv, v3, 8, "aBFu33_BFu31ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_BFu31ll_B(Test_aBFu33_BFu31ll_B, "aBFu33_BFu31ll_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_BFu32i_B()
{
  {
    init_simple_test("aBFu33_BFu32i_B");
    static aBFu33_BFu32i_B lv;
    check2(sizeof(lv), 10, "sizeof(aBFu33_BFu32i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu32i_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu32i_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu32i_B");
    set_bf_and_test(lv, v2, 4, 1, 32, 1, "aBFu33_BFu32i_B");
    set_bf_and_test(lv, v2, 4, 1, 32, hide_ull(1LL<<31), "aBFu33_BFu32i_B");
    check_field_offset(lv, v3, 9, "aBFu33_BFu32i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_BFu32i_B(Test_aBFu33_BFu32i_B, "aBFu33_BFu32i_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_BFu32ll_B()
{
  {
    init_simple_test("aBFu33_BFu32ll_B");
    static aBFu33_BFu32ll_B lv;
    check2(sizeof(lv), 10, "sizeof(aBFu33_BFu32ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu32ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu32ll_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu32ll_B");
    set_bf_and_test(lv, v2, 4, 1, 32, 1, "aBFu33_BFu32ll_B");
    set_bf_and_test(lv, v2, 4, 1, 32, hide_ull(1LL<<31), "aBFu33_BFu32ll_B");
    check_field_offset(lv, v3, 9, "aBFu33_BFu32ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_BFu32ll_B(Test_aBFu33_BFu32ll_B, "aBFu33_BFu32ll_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_BFu33_B()
{
  {
    init_simple_test("aBFu33_BFu33_B");
    static aBFu33_BFu33_B lv;
    check2(sizeof(lv), 10, "sizeof(aBFu33_BFu33_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu33_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu33_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu33_B");
    set_bf_and_test(lv, v2, 4, 1, 33, 1, "aBFu33_BFu33_B");
    set_bf_and_test(lv, v2, 4, 1, 33, hide_ull(1LL<<32), "aBFu33_BFu33_B");
    check_field_offset(lv, v3, 9, "aBFu33_BFu33_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_BFu33_B(Test_aBFu33_BFu33_B, "aBFu33_BFu33_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_BFu7c_B()
{
  {
    init_simple_test("aBFu33_BFu7c_B");
    static aBFu33_BFu7c_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu33_BFu7c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu7c_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu7c_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu7c_B");
    set_bf_and_test(lv, v2, 4, 1, 7, 1, "aBFu33_BFu7c_B");
    set_bf_and_test(lv, v2, 4, 1, 7, hide_ull(1LL<<6), "aBFu33_BFu7c_B");
    check_field_offset(lv, v3, 5, "aBFu33_BFu7c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_BFu7c_B(Test_aBFu33_BFu7c_B, "aBFu33_BFu7c_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_BFu7i_B()
{
  {
    init_simple_test("aBFu33_BFu7i_B");
    static aBFu33_BFu7i_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu33_BFu7i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu7i_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu7i_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu7i_B");
    set_bf_and_test(lv, v2, 4, 1, 7, 1, "aBFu33_BFu7i_B");
    set_bf_and_test(lv, v2, 4, 1, 7, hide_ull(1LL<<6), "aBFu33_BFu7i_B");
    check_field_offset(lv, v3, 5, "aBFu33_BFu7i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_BFu7i_B(Test_aBFu33_BFu7i_B, "aBFu33_BFu7i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_BFu7ll_B()
{
  {
    init_simple_test("aBFu33_BFu7ll_B");
    static aBFu33_BFu7ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu33_BFu7ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu7ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu7ll_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu7ll_B");
    set_bf_and_test(lv, v2, 4, 1, 7, 1, "aBFu33_BFu7ll_B");
    set_bf_and_test(lv, v2, 4, 1, 7, hide_ull(1LL<<6), "aBFu33_BFu7ll_B");
    check_field_offset(lv, v3, 5, "aBFu33_BFu7ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_BFu7ll_B(Test_aBFu33_BFu7ll_B, "aBFu33_BFu7ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_BFu7s_B()
{
  {
    init_simple_test("aBFu33_BFu7s_B");
    static aBFu33_BFu7s_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu33_BFu7s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu7s_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu7s_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu7s_B");
    set_bf_and_test(lv, v2, 4, 1, 7, 1, "aBFu33_BFu7s_B");
    set_bf_and_test(lv, v2, 4, 1, 7, hide_ull(1LL<<6), "aBFu33_BFu7s_B");
    check_field_offset(lv, v3, 5, "aBFu33_BFu7s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_BFu7s_B(Test_aBFu33_BFu7s_B, "aBFu33_BFu7s_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_BFu8c_B()
{
  {
    init_simple_test("aBFu33_BFu8c_B");
    static aBFu33_BFu8c_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_BFu8c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu8c_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu8c_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu8c_B");
    set_bf_and_test(lv, v2, 4, 1, 8, 1, "aBFu33_BFu8c_B");
    set_bf_and_test(lv, v2, 4, 1, 8, hide_ull(1LL<<7), "aBFu33_BFu8c_B");
    check_field_offset(lv, v3, 6, "aBFu33_BFu8c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_BFu8c_B(Test_aBFu33_BFu8c_B, "aBFu33_BFu8c_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_BFu8i_B()
{
  {
    init_simple_test("aBFu33_BFu8i_B");
    static aBFu33_BFu8i_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_BFu8i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu8i_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu8i_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu8i_B");
    set_bf_and_test(lv, v2, 4, 1, 8, 1, "aBFu33_BFu8i_B");
    set_bf_and_test(lv, v2, 4, 1, 8, hide_ull(1LL<<7), "aBFu33_BFu8i_B");
    check_field_offset(lv, v3, 6, "aBFu33_BFu8i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_BFu8i_B(Test_aBFu33_BFu8i_B, "aBFu33_BFu8i_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_BFu8ll_B()
{
  {
    init_simple_test("aBFu33_BFu8ll_B");
    static aBFu33_BFu8ll_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_BFu8ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu8ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu8ll_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu8ll_B");
    set_bf_and_test(lv, v2, 4, 1, 8, 1, "aBFu33_BFu8ll_B");
    set_bf_and_test(lv, v2, 4, 1, 8, hide_ull(1LL<<7), "aBFu33_BFu8ll_B");
    check_field_offset(lv, v3, 6, "aBFu33_BFu8ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_BFu8ll_B(Test_aBFu33_BFu8ll_B, "aBFu33_BFu8ll_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_BFu8s_B()
{
  {
    init_simple_test("aBFu33_BFu8s_B");
    static aBFu33_BFu8s_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_BFu8s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu8s_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu8s_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu8s_B");
    set_bf_and_test(lv, v2, 4, 1, 8, 1, "aBFu33_BFu8s_B");
    set_bf_and_test(lv, v2, 4, 1, 8, hide_ull(1LL<<7), "aBFu33_BFu8s_B");
    check_field_offset(lv, v3, 6, "aBFu33_BFu8s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_BFu8s_B(Test_aBFu33_BFu8s_B, "aBFu33_BFu8s_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_BFu9i_B()
{
  {
    init_simple_test("aBFu33_BFu9i_B");
    static aBFu33_BFu9i_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_BFu9i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu9i_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu9i_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu9i_B");
    set_bf_and_test(lv, v2, 4, 1, 9, 1, "aBFu33_BFu9i_B");
    set_bf_and_test(lv, v2, 4, 1, 9, hide_ull(1LL<<8), "aBFu33_BFu9i_B");
    check_field_offset(lv, v3, 6, "aBFu33_BFu9i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_BFu9i_B(Test_aBFu33_BFu9i_B, "aBFu33_BFu9i_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_BFu9ll_B()
{
  {
    init_simple_test("aBFu33_BFu9ll_B");
    static aBFu33_BFu9ll_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_BFu9ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu9ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu9ll_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu9ll_B");
    set_bf_and_test(lv, v2, 4, 1, 9, 1, "aBFu33_BFu9ll_B");
    set_bf_and_test(lv, v2, 4, 1, 9, hide_ull(1LL<<8), "aBFu33_BFu9ll_B");
    check_field_offset(lv, v3, 6, "aBFu33_BFu9ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_BFu9ll_B(Test_aBFu33_BFu9ll_B, "aBFu33_BFu9ll_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_BFu9s_B()
{
  {
    init_simple_test("aBFu33_BFu9s_B");
    static aBFu33_BFu9s_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_BFu9s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_BFu9s_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_BFu9s_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_BFu9s_B");
    set_bf_and_test(lv, v2, 4, 1, 9, 1, "aBFu33_BFu9s_B");
    set_bf_and_test(lv, v2, 4, 1, 9, hide_ull(1LL<<8), "aBFu33_BFu9s_B");
    check_field_offset(lv, v3, 6, "aBFu33_BFu9s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_BFu9s_B(Test_aBFu33_BFu9s_B, "aBFu33_BFu9s_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_C_B()
{
  {
    init_simple_test("aBFu33_C_B");
    static aBFu33_C_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_C_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_C_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_C_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_C_B");
    check_field_offset(lv, v2, 5, "aBFu33_C_B.v2");
    check_field_offset(lv, v3, 6, "aBFu33_C_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_C_B(Test_aBFu33_C_B, "aBFu33_C_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_D_B()
{
  {
    init_simple_test("aBFu33_D_B");
    static aBFu33_D_B lv;
    check2(sizeof(lv), 14, "sizeof(aBFu33_D_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_D_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_D_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_D_B");
    check_field_offset(lv, v2, 5, "aBFu33_D_B.v2");
    check_field_offset(lv, v3, 13, "aBFu33_D_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_D_B(Test_aBFu33_D_B, "aBFu33_D_B", 14);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_F_B()
{
  {
    init_simple_test("aBFu33_F_B");
    static aBFu33_F_B lv;
    check2(sizeof(lv), 10, "sizeof(aBFu33_F_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_F_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_F_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_F_B");
    check_field_offset(lv, v2, 5, "aBFu33_F_B.v2");
    check_field_offset(lv, v3, 9, "aBFu33_F_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_F_B(Test_aBFu33_F_B, "aBFu33_F_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_I_B()
{
  {
    init_simple_test("aBFu33_I_B");
    static aBFu33_I_B lv;
    check2(sizeof(lv), 10, "sizeof(aBFu33_I_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_I_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_I_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_I_B");
    check_field_offset(lv, v2, 5, "aBFu33_I_B.v2");
    check_field_offset(lv, v3, 9, "aBFu33_I_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_I_B(Test_aBFu33_I_B, "aBFu33_I_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_Ip_B()
{
  {
    init_simple_test("aBFu33_Ip_B");
    static aBFu33_Ip_B lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aBFu33_Ip_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_Ip_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_Ip_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_Ip_B");
    check_field_offset(lv, v2, 5, "aBFu33_Ip_B.v2");
    check_field_offset(lv, v3, ABISELECT(13,9), "aBFu33_Ip_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_Ip_B(Test_aBFu33_Ip_B, "aBFu33_Ip_B", ABISELECT(14,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_L_B()
{
  {
    init_simple_test("aBFu33_L_B");
    static aBFu33_L_B lv;
    check2(sizeof(lv), 14, "sizeof(aBFu33_L_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_L_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_L_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_L_B");
    check_field_offset(lv, v2, 5, "aBFu33_L_B.v2");
    check_field_offset(lv, v3, 13, "aBFu33_L_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_L_B(Test_aBFu33_L_B, "aBFu33_L_B", 14);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_S_B()
{
  {
    init_simple_test("aBFu33_S_B");
    static aBFu33_S_B lv;
    check2(sizeof(lv), 8, "sizeof(aBFu33_S_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_S_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_S_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_S_B");
    check_field_offset(lv, v2, 5, "aBFu33_S_B.v2");
    check_field_offset(lv, v3, 7, "aBFu33_S_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_S_B(Test_aBFu33_S_B, "aBFu33_S_B", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_Uc_B()
{
  {
    init_simple_test("aBFu33_Uc_B");
    static aBFu33_Uc_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu33_Uc_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_Uc_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_Uc_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_Uc_B");
    check_field_offset(lv, v2, 5, "aBFu33_Uc_B.v2");
    check_field_offset(lv, v3, 6, "aBFu33_Uc_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_Uc_B(Test_aBFu33_Uc_B, "aBFu33_Uc_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_Ui_B()
{
  {
    init_simple_test("aBFu33_Ui_B");
    static aBFu33_Ui_B lv;
    check2(sizeof(lv), 10, "sizeof(aBFu33_Ui_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_Ui_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_Ui_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_Ui_B");
    check_field_offset(lv, v2, 5, "aBFu33_Ui_B.v2");
    check_field_offset(lv, v3, 9, "aBFu33_Ui_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_Ui_B(Test_aBFu33_Ui_B, "aBFu33_Ui_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_Ul_B()
{
  {
    init_simple_test("aBFu33_Ul_B");
    static aBFu33_Ul_B lv;
    check2(sizeof(lv), 14, "sizeof(aBFu33_Ul_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_Ul_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_Ul_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_Ul_B");
    check_field_offset(lv, v2, 5, "aBFu33_Ul_B.v2");
    check_field_offset(lv, v3, 13, "aBFu33_Ul_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_Ul_B(Test_aBFu33_Ul_B, "aBFu33_Ul_B", 14);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_Us_B()
{
  {
    init_simple_test("aBFu33_Us_B");
    static aBFu33_Us_B lv;
    check2(sizeof(lv), 8, "sizeof(aBFu33_Us_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_Us_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_Us_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_Us_B");
    check_field_offset(lv, v2, 5, "aBFu33_Us_B.v2");
    check_field_offset(lv, v3, 7, "aBFu33_Us_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_Us_B(Test_aBFu33_Us_B, "aBFu33_Us_B", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu33_Vp_B()
{
  {
    init_simple_test("aBFu33_Vp_B");
    static aBFu33_Vp_B lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aBFu33_Vp_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu33_Vp_B)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "aBFu33_Vp_B");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "aBFu33_Vp_B");
    check_field_offset(lv, v2, 5, "aBFu33_Vp_B.v2");
    check_field_offset(lv, v3, ABISELECT(13,9), "aBFu33_Vp_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu33_Vp_B(Test_aBFu33_Vp_B, "aBFu33_Vp_B", ABISELECT(14,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B()
{
  {
    init_simple_test("aBFu7c_B");
    static aBFu7c_B lv;
    check2(sizeof(lv), 2, "sizeof(aBFu7c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B");
    check_field_offset(lv, v2, 1, "aBFu7c_B.v2");
  }
}
static Arrange_To_Call_Me vaBFu7c_B(Test_aBFu7c_B, "aBFu7c_B", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_B()
{
  {
    init_simple_test("aBFu7c_B_B");
    static aBFu7c_B_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7c_B_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_B");
    check_field_offset(lv, v2, 1, "aBFu7c_B_B.v2");
    check_field_offset(lv, v3, 2, "aBFu7c_B_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_B(Test_aBFu7c_B_B, "aBFu7c_B_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_BFu15i()
{
  {
    init_simple_test("aBFu7c_B_BFu15i");
    static aBFu7c_B_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7c_B_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu15i");
    check_field_offset(lv, v2, 1, "aBFu7c_B_BFu15i.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aBFu7c_B_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aBFu7c_B_BFu15i");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_BFu15i(Test_aBFu7c_B_BFu15i, "aBFu7c_B_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_BFu15ll()
{
  {
    init_simple_test("aBFu7c_B_BFu15ll");
    static aBFu7c_B_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7c_B_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu15ll");
    check_field_offset(lv, v2, 1, "aBFu7c_B_BFu15ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aBFu7c_B_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aBFu7c_B_BFu15ll");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_BFu15ll(Test_aBFu7c_B_BFu15ll, "aBFu7c_B_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_BFu15s()
{
  {
    init_simple_test("aBFu7c_B_BFu15s");
    static aBFu7c_B_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7c_B_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu15s");
    check_field_offset(lv, v2, 1, "aBFu7c_B_BFu15s.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aBFu7c_B_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aBFu7c_B_BFu15s");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_BFu15s(Test_aBFu7c_B_BFu15s, "aBFu7c_B_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_BFu16i()
{
  {
    init_simple_test("aBFu7c_B_BFu16i");
    static aBFu7c_B_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7c_B_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu16i");
    check_field_offset(lv, v2, 1, "aBFu7c_B_BFu16i.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aBFu7c_B_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aBFu7c_B_BFu16i");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_BFu16i(Test_aBFu7c_B_BFu16i, "aBFu7c_B_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_BFu16ll()
{
  {
    init_simple_test("aBFu7c_B_BFu16ll");
    static aBFu7c_B_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7c_B_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu16ll");
    check_field_offset(lv, v2, 1, "aBFu7c_B_BFu16ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aBFu7c_B_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aBFu7c_B_BFu16ll");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_BFu16ll(Test_aBFu7c_B_BFu16ll, "aBFu7c_B_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_BFu16s()
{
  {
    init_simple_test("aBFu7c_B_BFu16s");
    static aBFu7c_B_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7c_B_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu16s");
    check_field_offset(lv, v2, 1, "aBFu7c_B_BFu16s.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aBFu7c_B_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aBFu7c_B_BFu16s");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_BFu16s(Test_aBFu7c_B_BFu16s, "aBFu7c_B_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_BFu17i()
{
  {
    init_simple_test("aBFu7c_B_BFu17i");
    static aBFu7c_B_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu7c_B_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu17i");
    check_field_offset(lv, v2, 1, "aBFu7c_B_BFu17i.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aBFu7c_B_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aBFu7c_B_BFu17i");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_BFu17i(Test_aBFu7c_B_BFu17i, "aBFu7c_B_BFu17i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_BFu17ll()
{
  {
    init_simple_test("aBFu7c_B_BFu17ll");
    static aBFu7c_B_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu7c_B_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu17ll");
    check_field_offset(lv, v2, 1, "aBFu7c_B_BFu17ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aBFu7c_B_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aBFu7c_B_BFu17ll");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_BFu17ll(Test_aBFu7c_B_BFu17ll, "aBFu7c_B_BFu17ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_BFu1c()
{
  {
    init_simple_test("aBFu7c_B_BFu1c");
    static aBFu7c_B_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7c_B_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu1c");
    check_field_offset(lv, v2, 1, "aBFu7c_B_BFu1c.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu7c_B_BFu1c");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_BFu1c(Test_aBFu7c_B_BFu1c, "aBFu7c_B_BFu1c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_BFu1i()
{
  {
    init_simple_test("aBFu7c_B_BFu1i");
    static aBFu7c_B_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7c_B_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu1i");
    check_field_offset(lv, v2, 1, "aBFu7c_B_BFu1i.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu7c_B_BFu1i");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_BFu1i(Test_aBFu7c_B_BFu1i, "aBFu7c_B_BFu1i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_BFu1ll()
{
  {
    init_simple_test("aBFu7c_B_BFu1ll");
    static aBFu7c_B_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7c_B_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu1ll");
    check_field_offset(lv, v2, 1, "aBFu7c_B_BFu1ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu7c_B_BFu1ll");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_BFu1ll(Test_aBFu7c_B_BFu1ll, "aBFu7c_B_BFu1ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_BFu1s()
{
  {
    init_simple_test("aBFu7c_B_BFu1s");
    static aBFu7c_B_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7c_B_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu1s");
    check_field_offset(lv, v2, 1, "aBFu7c_B_BFu1s.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu7c_B_BFu1s");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_BFu1s(Test_aBFu7c_B_BFu1s, "aBFu7c_B_BFu1s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_BFu31i()
{
  {
    init_simple_test("aBFu7c_B_BFu31i");
    static aBFu7c_B_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7c_B_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu31i");
    check_field_offset(lv, v2, 1, "aBFu7c_B_BFu31i.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aBFu7c_B_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aBFu7c_B_BFu31i");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_BFu31i(Test_aBFu7c_B_BFu31i, "aBFu7c_B_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_BFu31ll()
{
  {
    init_simple_test("aBFu7c_B_BFu31ll");
    static aBFu7c_B_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7c_B_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu31ll");
    check_field_offset(lv, v2, 1, "aBFu7c_B_BFu31ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aBFu7c_B_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aBFu7c_B_BFu31ll");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_BFu31ll(Test_aBFu7c_B_BFu31ll, "aBFu7c_B_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_BFu32i()
{
  {
    init_simple_test("aBFu7c_B_BFu32i");
    static aBFu7c_B_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7c_B_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu32i");
    check_field_offset(lv, v2, 1, "aBFu7c_B_BFu32i.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aBFu7c_B_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aBFu7c_B_BFu32i");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_BFu32i(Test_aBFu7c_B_BFu32i, "aBFu7c_B_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_BFu32ll()
{
  {
    init_simple_test("aBFu7c_B_BFu32ll");
    static aBFu7c_B_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7c_B_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu32ll");
    check_field_offset(lv, v2, 1, "aBFu7c_B_BFu32ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aBFu7c_B_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aBFu7c_B_BFu32ll");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_BFu32ll(Test_aBFu7c_B_BFu32ll, "aBFu7c_B_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_BFu33()
{
  {
    init_simple_test("aBFu7c_B_BFu33");
    static aBFu7c_B_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aBFu7c_B_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu33");
    check_field_offset(lv, v2, 1, "aBFu7c_B_BFu33.v2");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "aBFu7c_B_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "aBFu7c_B_BFu33");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_BFu33(Test_aBFu7c_B_BFu33, "aBFu7c_B_BFu33", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_BFu7c()
{
  {
    init_simple_test("aBFu7c_B_BFu7c");
    static aBFu7c_B_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7c_B_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu7c");
    check_field_offset(lv, v2, 1, "aBFu7c_B_BFu7c.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu7c_B_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu7c");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_BFu7c(Test_aBFu7c_B_BFu7c, "aBFu7c_B_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_BFu7i()
{
  {
    init_simple_test("aBFu7c_B_BFu7i");
    static aBFu7c_B_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7c_B_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu7i");
    check_field_offset(lv, v2, 1, "aBFu7c_B_BFu7i.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu7c_B_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu7i");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_BFu7i(Test_aBFu7c_B_BFu7i, "aBFu7c_B_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_BFu7ll()
{
  {
    init_simple_test("aBFu7c_B_BFu7ll");
    static aBFu7c_B_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7c_B_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu7ll");
    check_field_offset(lv, v2, 1, "aBFu7c_B_BFu7ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu7c_B_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu7ll");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_BFu7ll(Test_aBFu7c_B_BFu7ll, "aBFu7c_B_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_BFu7s()
{
  {
    init_simple_test("aBFu7c_B_BFu7s");
    static aBFu7c_B_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7c_B_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu7s");
    check_field_offset(lv, v2, 1, "aBFu7c_B_BFu7s.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu7c_B_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu7s");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_BFu7s(Test_aBFu7c_B_BFu7s, "aBFu7c_B_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_BFu8c()
{
  {
    init_simple_test("aBFu7c_B_BFu8c");
    static aBFu7c_B_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7c_B_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu8c");
    check_field_offset(lv, v2, 1, "aBFu7c_B_BFu8c.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu7c_B_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu7c_B_BFu8c");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_BFu8c(Test_aBFu7c_B_BFu8c, "aBFu7c_B_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_BFu8i()
{
  {
    init_simple_test("aBFu7c_B_BFu8i");
    static aBFu7c_B_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7c_B_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu8i");
    check_field_offset(lv, v2, 1, "aBFu7c_B_BFu8i.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu7c_B_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu7c_B_BFu8i");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_BFu8i(Test_aBFu7c_B_BFu8i, "aBFu7c_B_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_BFu8ll()
{
  {
    init_simple_test("aBFu7c_B_BFu8ll");
    static aBFu7c_B_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7c_B_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu8ll");
    check_field_offset(lv, v2, 1, "aBFu7c_B_BFu8ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu7c_B_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu7c_B_BFu8ll");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_BFu8ll(Test_aBFu7c_B_BFu8ll, "aBFu7c_B_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_BFu8s()
{
  {
    init_simple_test("aBFu7c_B_BFu8s");
    static aBFu7c_B_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7c_B_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu8s");
    check_field_offset(lv, v2, 1, "aBFu7c_B_BFu8s.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu7c_B_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu7c_B_BFu8s");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_BFu8s(Test_aBFu7c_B_BFu8s, "aBFu7c_B_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_BFu9i()
{
  {
    init_simple_test("aBFu7c_B_BFu9i");
    static aBFu7c_B_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7c_B_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu9i");
    check_field_offset(lv, v2, 1, "aBFu7c_B_BFu9i.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aBFu7c_B_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aBFu7c_B_BFu9i");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_BFu9i(Test_aBFu7c_B_BFu9i, "aBFu7c_B_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_BFu9ll()
{
  {
    init_simple_test("aBFu7c_B_BFu9ll");
    static aBFu7c_B_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7c_B_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu9ll");
    check_field_offset(lv, v2, 1, "aBFu7c_B_BFu9ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aBFu7c_B_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aBFu7c_B_BFu9ll");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_BFu9ll(Test_aBFu7c_B_BFu9ll, "aBFu7c_B_BFu9ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_BFu9s()
{
  {
    init_simple_test("aBFu7c_B_BFu9s");
    static aBFu7c_B_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7c_B_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_BFu9s");
    check_field_offset(lv, v2, 1, "aBFu7c_B_BFu9s.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aBFu7c_B_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aBFu7c_B_BFu9s");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_BFu9s(Test_aBFu7c_B_BFu9s, "aBFu7c_B_BFu9s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_C()
{
  {
    init_simple_test("aBFu7c_B_C");
    static aBFu7c_B_C lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7c_B_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_C)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_C");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_C");
    check_field_offset(lv, v2, 1, "aBFu7c_B_C.v2");
    check_field_offset(lv, v3, 2, "aBFu7c_B_C.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_C(Test_aBFu7c_B_C, "aBFu7c_B_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_D()
{
  {
    init_simple_test("aBFu7c_B_D");
    static aBFu7c_B_D lv;
    check2(sizeof(lv), 10, "sizeof(aBFu7c_B_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_D)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_D");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_D");
    check_field_offset(lv, v2, 1, "aBFu7c_B_D.v2");
    check_field_offset(lv, v3, 2, "aBFu7c_B_D.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_D(Test_aBFu7c_B_D, "aBFu7c_B_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_F()
{
  {
    init_simple_test("aBFu7c_B_F");
    static aBFu7c_B_F lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7c_B_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_F)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_F");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_F");
    check_field_offset(lv, v2, 1, "aBFu7c_B_F.v2");
    check_field_offset(lv, v3, 2, "aBFu7c_B_F.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_F(Test_aBFu7c_B_F, "aBFu7c_B_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_I()
{
  {
    init_simple_test("aBFu7c_B_I");
    static aBFu7c_B_I lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7c_B_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_I)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_I");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_I");
    check_field_offset(lv, v2, 1, "aBFu7c_B_I.v2");
    check_field_offset(lv, v3, 2, "aBFu7c_B_I.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_I(Test_aBFu7c_B_I, "aBFu7c_B_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_Ip()
{
  {
    init_simple_test("aBFu7c_B_Ip");
    static aBFu7c_B_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu7c_B_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_Ip");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_Ip");
    check_field_offset(lv, v2, 1, "aBFu7c_B_Ip.v2");
    check_field_offset(lv, v3, 2, "aBFu7c_B_Ip.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_Ip(Test_aBFu7c_B_Ip, "aBFu7c_B_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_L()
{
  {
    init_simple_test("aBFu7c_B_L");
    static aBFu7c_B_L lv;
    check2(sizeof(lv), 10, "sizeof(aBFu7c_B_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_L)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_L");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_L");
    check_field_offset(lv, v2, 1, "aBFu7c_B_L.v2");
    check_field_offset(lv, v3, 2, "aBFu7c_B_L.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_L(Test_aBFu7c_B_L, "aBFu7c_B_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_S()
{
  {
    init_simple_test("aBFu7c_B_S");
    static aBFu7c_B_S lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7c_B_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_S)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_S");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_S");
    check_field_offset(lv, v2, 1, "aBFu7c_B_S.v2");
    check_field_offset(lv, v3, 2, "aBFu7c_B_S.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_S(Test_aBFu7c_B_S, "aBFu7c_B_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_Uc()
{
  {
    init_simple_test("aBFu7c_B_Uc");
    static aBFu7c_B_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7c_B_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_Uc");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_Uc");
    check_field_offset(lv, v2, 1, "aBFu7c_B_Uc.v2");
    check_field_offset(lv, v3, 2, "aBFu7c_B_Uc.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_Uc(Test_aBFu7c_B_Uc, "aBFu7c_B_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_Ui()
{
  {
    init_simple_test("aBFu7c_B_Ui");
    static aBFu7c_B_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7c_B_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_Ui");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_Ui");
    check_field_offset(lv, v2, 1, "aBFu7c_B_Ui.v2");
    check_field_offset(lv, v3, 2, "aBFu7c_B_Ui.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_Ui(Test_aBFu7c_B_Ui, "aBFu7c_B_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_Ul()
{
  {
    init_simple_test("aBFu7c_B_Ul");
    static aBFu7c_B_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aBFu7c_B_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_Ul");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_Ul");
    check_field_offset(lv, v2, 1, "aBFu7c_B_Ul.v2");
    check_field_offset(lv, v3, 2, "aBFu7c_B_Ul.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_Ul(Test_aBFu7c_B_Ul, "aBFu7c_B_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_Us()
{
  {
    init_simple_test("aBFu7c_B_Us");
    static aBFu7c_B_Us lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7c_B_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_Us)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_Us");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_Us");
    check_field_offset(lv, v2, 1, "aBFu7c_B_Us.v2");
    check_field_offset(lv, v3, 2, "aBFu7c_B_Us.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_Us(Test_aBFu7c_B_Us, "aBFu7c_B_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_B_Vp()
{
  {
    init_simple_test("aBFu7c_B_Vp");
    static aBFu7c_B_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu7c_B_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_B_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_B_Vp");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_B_Vp");
    check_field_offset(lv, v2, 1, "aBFu7c_B_Vp.v2");
    check_field_offset(lv, v3, 2, "aBFu7c_B_Vp.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_B_Vp(Test_aBFu7c_B_Vp, "aBFu7c_B_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_BFu15i_B()
{
  {
    init_simple_test("aBFu7c_BFu15i_B");
    static aBFu7c_BFu15i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7c_BFu15i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_BFu15i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_BFu15i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_BFu15i_B");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "aBFu7c_BFu15i_B");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "aBFu7c_BFu15i_B");
    check_field_offset(lv, v3, 3, "aBFu7c_BFu15i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_BFu15i_B(Test_aBFu7c_BFu15i_B, "aBFu7c_BFu15i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_BFu15ll_B()
{
  {
    init_simple_test("aBFu7c_BFu15ll_B");
    static aBFu7c_BFu15ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7c_BFu15ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_BFu15ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_BFu15ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_BFu15ll_B");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "aBFu7c_BFu15ll_B");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "aBFu7c_BFu15ll_B");
    check_field_offset(lv, v3, 3, "aBFu7c_BFu15ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_BFu15ll_B(Test_aBFu7c_BFu15ll_B, "aBFu7c_BFu15ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_BFu15s_B()
{
  {
    init_simple_test("aBFu7c_BFu15s_B");
    static aBFu7c_BFu15s_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7c_BFu15s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_BFu15s_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_BFu15s_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_BFu15s_B");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "aBFu7c_BFu15s_B");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "aBFu7c_BFu15s_B");
    check_field_offset(lv, v3, 3, "aBFu7c_BFu15s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_BFu15s_B(Test_aBFu7c_BFu15s_B, "aBFu7c_BFu15s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_BFu16i_B()
{
  {
    init_simple_test("aBFu7c_BFu16i_B");
    static aBFu7c_BFu16i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7c_BFu16i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_BFu16i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_BFu16i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_BFu16i_B");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "aBFu7c_BFu16i_B");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "aBFu7c_BFu16i_B");
    check_field_offset(lv, v3, 3, "aBFu7c_BFu16i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_BFu16i_B(Test_aBFu7c_BFu16i_B, "aBFu7c_BFu16i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_BFu16ll_B()
{
  {
    init_simple_test("aBFu7c_BFu16ll_B");
    static aBFu7c_BFu16ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7c_BFu16ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_BFu16ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_BFu16ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_BFu16ll_B");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "aBFu7c_BFu16ll_B");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "aBFu7c_BFu16ll_B");
    check_field_offset(lv, v3, 3, "aBFu7c_BFu16ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_BFu16ll_B(Test_aBFu7c_BFu16ll_B, "aBFu7c_BFu16ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_BFu16s_B()
{
  {
    init_simple_test("aBFu7c_BFu16s_B");
    static aBFu7c_BFu16s_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7c_BFu16s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_BFu16s_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_BFu16s_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_BFu16s_B");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "aBFu7c_BFu16s_B");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "aBFu7c_BFu16s_B");
    check_field_offset(lv, v3, 3, "aBFu7c_BFu16s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_BFu16s_B(Test_aBFu7c_BFu16s_B, "aBFu7c_BFu16s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_BFu17i_B()
{
  {
    init_simple_test("aBFu7c_BFu17i_B");
    static aBFu7c_BFu17i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7c_BFu17i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_BFu17i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_BFu17i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_BFu17i_B");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "aBFu7c_BFu17i_B");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "aBFu7c_BFu17i_B");
    check_field_offset(lv, v3, 3, "aBFu7c_BFu17i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_BFu17i_B(Test_aBFu7c_BFu17i_B, "aBFu7c_BFu17i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_BFu17ll_B()
{
  {
    init_simple_test("aBFu7c_BFu17ll_B");
    static aBFu7c_BFu17ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7c_BFu17ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_BFu17ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_BFu17ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_BFu17ll_B");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "aBFu7c_BFu17ll_B");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "aBFu7c_BFu17ll_B");
    check_field_offset(lv, v3, 3, "aBFu7c_BFu17ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_BFu17ll_B(Test_aBFu7c_BFu17ll_B, "aBFu7c_BFu17ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_BFu1c_B()
{
  {
    init_simple_test("aBFu7c_BFu1c_B");
    static aBFu7c_BFu1c_B lv;
    check2(sizeof(lv), 2, "sizeof(aBFu7c_BFu1c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_BFu1c_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_BFu1c_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_BFu1c_B");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "aBFu7c_BFu1c_B");
    check_field_offset(lv, v3, 1, "aBFu7c_BFu1c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_BFu1c_B(Test_aBFu7c_BFu1c_B, "aBFu7c_BFu1c_B", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_BFu1i_B()
{
  {
    init_simple_test("aBFu7c_BFu1i_B");
    static aBFu7c_BFu1i_B lv;
    check2(sizeof(lv), 2, "sizeof(aBFu7c_BFu1i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_BFu1i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_BFu1i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_BFu1i_B");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "aBFu7c_BFu1i_B");
    check_field_offset(lv, v3, 1, "aBFu7c_BFu1i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_BFu1i_B(Test_aBFu7c_BFu1i_B, "aBFu7c_BFu1i_B", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_BFu1ll_B()
{
  {
    init_simple_test("aBFu7c_BFu1ll_B");
    static aBFu7c_BFu1ll_B lv;
    check2(sizeof(lv), 2, "sizeof(aBFu7c_BFu1ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_BFu1ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_BFu1ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_BFu1ll_B");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "aBFu7c_BFu1ll_B");
    check_field_offset(lv, v3, 1, "aBFu7c_BFu1ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_BFu1ll_B(Test_aBFu7c_BFu1ll_B, "aBFu7c_BFu1ll_B", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_BFu1s_B()
{
  {
    init_simple_test("aBFu7c_BFu1s_B");
    static aBFu7c_BFu1s_B lv;
    check2(sizeof(lv), 2, "sizeof(aBFu7c_BFu1s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_BFu1s_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_BFu1s_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_BFu1s_B");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "aBFu7c_BFu1s_B");
    check_field_offset(lv, v3, 1, "aBFu7c_BFu1s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_BFu1s_B(Test_aBFu7c_BFu1s_B, "aBFu7c_BFu1s_B", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_BFu31i_B()
{
  {
    init_simple_test("aBFu7c_BFu31i_B");
    static aBFu7c_BFu31i_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7c_BFu31i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_BFu31i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_BFu31i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_BFu31i_B");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "aBFu7c_BFu31i_B");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "aBFu7c_BFu31i_B");
    check_field_offset(lv, v3, 5, "aBFu7c_BFu31i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_BFu31i_B(Test_aBFu7c_BFu31i_B, "aBFu7c_BFu31i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_BFu31ll_B()
{
  {
    init_simple_test("aBFu7c_BFu31ll_B");
    static aBFu7c_BFu31ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7c_BFu31ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_BFu31ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_BFu31ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_BFu31ll_B");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "aBFu7c_BFu31ll_B");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "aBFu7c_BFu31ll_B");
    check_field_offset(lv, v3, 5, "aBFu7c_BFu31ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_BFu31ll_B(Test_aBFu7c_BFu31ll_B, "aBFu7c_BFu31ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_BFu32i_B()
{
  {
    init_simple_test("aBFu7c_BFu32i_B");
    static aBFu7c_BFu32i_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7c_BFu32i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_BFu32i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_BFu32i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_BFu32i_B");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "aBFu7c_BFu32i_B");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "aBFu7c_BFu32i_B");
    check_field_offset(lv, v3, 5, "aBFu7c_BFu32i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_BFu32i_B(Test_aBFu7c_BFu32i_B, "aBFu7c_BFu32i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_BFu32ll_B()
{
  {
    init_simple_test("aBFu7c_BFu32ll_B");
    static aBFu7c_BFu32ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7c_BFu32ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_BFu32ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_BFu32ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_BFu32ll_B");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "aBFu7c_BFu32ll_B");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "aBFu7c_BFu32ll_B");
    check_field_offset(lv, v3, 5, "aBFu7c_BFu32ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_BFu32ll_B(Test_aBFu7c_BFu32ll_B, "aBFu7c_BFu32ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_BFu33_B()
{
  {
    init_simple_test("aBFu7c_BFu33_B");
    static aBFu7c_BFu33_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7c_BFu33_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_BFu33_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_BFu33_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_BFu33_B");
    set_bf_and_test(lv, v2, 0, 7, 33, 1, "aBFu7c_BFu33_B");
    set_bf_and_test(lv, v2, 0, 7, 33, hide_ull(1LL<<32), "aBFu7c_BFu33_B");
    check_field_offset(lv, v3, 5, "aBFu7c_BFu33_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_BFu33_B(Test_aBFu7c_BFu33_B, "aBFu7c_BFu33_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_BFu7c_B()
{
  {
    init_simple_test("aBFu7c_BFu7c_B");
    static aBFu7c_BFu7c_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7c_BFu7c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_BFu7c_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_BFu7c_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_BFu7c_B");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "aBFu7c_BFu7c_B");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "aBFu7c_BFu7c_B");
    check_field_offset(lv, v3, 2, "aBFu7c_BFu7c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_BFu7c_B(Test_aBFu7c_BFu7c_B, "aBFu7c_BFu7c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_BFu7i_B()
{
  {
    init_simple_test("aBFu7c_BFu7i_B");
    static aBFu7c_BFu7i_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7c_BFu7i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_BFu7i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_BFu7i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_BFu7i_B");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "aBFu7c_BFu7i_B");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "aBFu7c_BFu7i_B");
    check_field_offset(lv, v3, 2, "aBFu7c_BFu7i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_BFu7i_B(Test_aBFu7c_BFu7i_B, "aBFu7c_BFu7i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_BFu7ll_B()
{
  {
    init_simple_test("aBFu7c_BFu7ll_B");
    static aBFu7c_BFu7ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7c_BFu7ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_BFu7ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_BFu7ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_BFu7ll_B");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "aBFu7c_BFu7ll_B");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "aBFu7c_BFu7ll_B");
    check_field_offset(lv, v3, 2, "aBFu7c_BFu7ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_BFu7ll_B(Test_aBFu7c_BFu7ll_B, "aBFu7c_BFu7ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_BFu7s_B()
{
  {
    init_simple_test("aBFu7c_BFu7s_B");
    static aBFu7c_BFu7s_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7c_BFu7s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_BFu7s_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_BFu7s_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_BFu7s_B");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "aBFu7c_BFu7s_B");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "aBFu7c_BFu7s_B");
    check_field_offset(lv, v3, 2, "aBFu7c_BFu7s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_BFu7s_B(Test_aBFu7c_BFu7s_B, "aBFu7c_BFu7s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_BFu8c_B()
{
  {
    init_simple_test("aBFu7c_BFu8c_B");
    static aBFu7c_BFu8c_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7c_BFu8c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_BFu8c_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_BFu8c_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_BFu8c_B");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "aBFu7c_BFu8c_B");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "aBFu7c_BFu8c_B");
    check_field_offset(lv, v3, 2, "aBFu7c_BFu8c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_BFu8c_B(Test_aBFu7c_BFu8c_B, "aBFu7c_BFu8c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_BFu8i_B()
{
  {
    init_simple_test("aBFu7c_BFu8i_B");
    static aBFu7c_BFu8i_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7c_BFu8i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_BFu8i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_BFu8i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_BFu8i_B");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "aBFu7c_BFu8i_B");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "aBFu7c_BFu8i_B");
    check_field_offset(lv, v3, 2, "aBFu7c_BFu8i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_BFu8i_B(Test_aBFu7c_BFu8i_B, "aBFu7c_BFu8i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_BFu8ll_B()
{
  {
    init_simple_test("aBFu7c_BFu8ll_B");
    static aBFu7c_BFu8ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7c_BFu8ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_BFu8ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_BFu8ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_BFu8ll_B");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "aBFu7c_BFu8ll_B");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "aBFu7c_BFu8ll_B");
    check_field_offset(lv, v3, 2, "aBFu7c_BFu8ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_BFu8ll_B(Test_aBFu7c_BFu8ll_B, "aBFu7c_BFu8ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_BFu8s_B()
{
  {
    init_simple_test("aBFu7c_BFu8s_B");
    static aBFu7c_BFu8s_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7c_BFu8s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_BFu8s_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_BFu8s_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_BFu8s_B");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "aBFu7c_BFu8s_B");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "aBFu7c_BFu8s_B");
    check_field_offset(lv, v3, 2, "aBFu7c_BFu8s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_BFu8s_B(Test_aBFu7c_BFu8s_B, "aBFu7c_BFu8s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_BFu9i_B()
{
  {
    init_simple_test("aBFu7c_BFu9i_B");
    static aBFu7c_BFu9i_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7c_BFu9i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_BFu9i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_BFu9i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_BFu9i_B");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "aBFu7c_BFu9i_B");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "aBFu7c_BFu9i_B");
    check_field_offset(lv, v3, 2, "aBFu7c_BFu9i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_BFu9i_B(Test_aBFu7c_BFu9i_B, "aBFu7c_BFu9i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_BFu9ll_B()
{
  {
    init_simple_test("aBFu7c_BFu9ll_B");
    static aBFu7c_BFu9ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7c_BFu9ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_BFu9ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_BFu9ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_BFu9ll_B");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "aBFu7c_BFu9ll_B");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "aBFu7c_BFu9ll_B");
    check_field_offset(lv, v3, 2, "aBFu7c_BFu9ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_BFu9ll_B(Test_aBFu7c_BFu9ll_B, "aBFu7c_BFu9ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_BFu9s_B()
{
  {
    init_simple_test("aBFu7c_BFu9s_B");
    static aBFu7c_BFu9s_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7c_BFu9s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_BFu9s_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_BFu9s_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_BFu9s_B");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "aBFu7c_BFu9s_B");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "aBFu7c_BFu9s_B");
    check_field_offset(lv, v3, 2, "aBFu7c_BFu9s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_BFu9s_B(Test_aBFu7c_BFu9s_B, "aBFu7c_BFu9s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_C_B()
{
  {
    init_simple_test("aBFu7c_C_B");
    static aBFu7c_C_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7c_C_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_C_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_C_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_C_B");
    check_field_offset(lv, v2, 1, "aBFu7c_C_B.v2");
    check_field_offset(lv, v3, 2, "aBFu7c_C_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_C_B(Test_aBFu7c_C_B, "aBFu7c_C_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_D_B()
{
  {
    init_simple_test("aBFu7c_D_B");
    static aBFu7c_D_B lv;
    check2(sizeof(lv), 10, "sizeof(aBFu7c_D_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_D_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_D_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_D_B");
    check_field_offset(lv, v2, 1, "aBFu7c_D_B.v2");
    check_field_offset(lv, v3, 9, "aBFu7c_D_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_D_B(Test_aBFu7c_D_B, "aBFu7c_D_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_F_B()
{
  {
    init_simple_test("aBFu7c_F_B");
    static aBFu7c_F_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7c_F_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_F_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_F_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_F_B");
    check_field_offset(lv, v2, 1, "aBFu7c_F_B.v2");
    check_field_offset(lv, v3, 5, "aBFu7c_F_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_F_B(Test_aBFu7c_F_B, "aBFu7c_F_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_I_B()
{
  {
    init_simple_test("aBFu7c_I_B");
    static aBFu7c_I_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7c_I_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_I_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_I_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_I_B");
    check_field_offset(lv, v2, 1, "aBFu7c_I_B.v2");
    check_field_offset(lv, v3, 5, "aBFu7c_I_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_I_B(Test_aBFu7c_I_B, "aBFu7c_I_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_Ip_B()
{
  {
    init_simple_test("aBFu7c_Ip_B");
    static aBFu7c_Ip_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu7c_Ip_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_Ip_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_Ip_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_Ip_B");
    check_field_offset(lv, v2, 1, "aBFu7c_Ip_B.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aBFu7c_Ip_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_Ip_B(Test_aBFu7c_Ip_B, "aBFu7c_Ip_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_L_B()
{
  {
    init_simple_test("aBFu7c_L_B");
    static aBFu7c_L_B lv;
    check2(sizeof(lv), 10, "sizeof(aBFu7c_L_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_L_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_L_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_L_B");
    check_field_offset(lv, v2, 1, "aBFu7c_L_B.v2");
    check_field_offset(lv, v3, 9, "aBFu7c_L_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_L_B(Test_aBFu7c_L_B, "aBFu7c_L_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_S_B()
{
  {
    init_simple_test("aBFu7c_S_B");
    static aBFu7c_S_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7c_S_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_S_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_S_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_S_B");
    check_field_offset(lv, v2, 1, "aBFu7c_S_B.v2");
    check_field_offset(lv, v3, 3, "aBFu7c_S_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_S_B(Test_aBFu7c_S_B, "aBFu7c_S_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_Uc_B()
{
  {
    init_simple_test("aBFu7c_Uc_B");
    static aBFu7c_Uc_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7c_Uc_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_Uc_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_Uc_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_Uc_B");
    check_field_offset(lv, v2, 1, "aBFu7c_Uc_B.v2");
    check_field_offset(lv, v3, 2, "aBFu7c_Uc_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_Uc_B(Test_aBFu7c_Uc_B, "aBFu7c_Uc_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_Ui_B()
{
  {
    init_simple_test("aBFu7c_Ui_B");
    static aBFu7c_Ui_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7c_Ui_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_Ui_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_Ui_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_Ui_B");
    check_field_offset(lv, v2, 1, "aBFu7c_Ui_B.v2");
    check_field_offset(lv, v3, 5, "aBFu7c_Ui_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_Ui_B(Test_aBFu7c_Ui_B, "aBFu7c_Ui_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_Ul_B()
{
  {
    init_simple_test("aBFu7c_Ul_B");
    static aBFu7c_Ul_B lv;
    check2(sizeof(lv), 10, "sizeof(aBFu7c_Ul_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_Ul_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_Ul_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_Ul_B");
    check_field_offset(lv, v2, 1, "aBFu7c_Ul_B.v2");
    check_field_offset(lv, v3, 9, "aBFu7c_Ul_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_Ul_B(Test_aBFu7c_Ul_B, "aBFu7c_Ul_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_Us_B()
{
  {
    init_simple_test("aBFu7c_Us_B");
    static aBFu7c_Us_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7c_Us_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_Us_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_Us_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_Us_B");
    check_field_offset(lv, v2, 1, "aBFu7c_Us_B.v2");
    check_field_offset(lv, v3, 3, "aBFu7c_Us_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_Us_B(Test_aBFu7c_Us_B, "aBFu7c_Us_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7c_Vp_B()
{
  {
    init_simple_test("aBFu7c_Vp_B");
    static aBFu7c_Vp_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu7c_Vp_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7c_Vp_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7c_Vp_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7c_Vp_B");
    check_field_offset(lv, v2, 1, "aBFu7c_Vp_B.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aBFu7c_Vp_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7c_Vp_B(Test_aBFu7c_Vp_B, "aBFu7c_Vp_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B()
{
  {
    init_simple_test("aBFu7i_B");
    static aBFu7i_B lv;
    check2(sizeof(lv), 2, "sizeof(aBFu7i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B");
    check_field_offset(lv, v2, 1, "aBFu7i_B.v2");
  }
}
static Arrange_To_Call_Me vaBFu7i_B(Test_aBFu7i_B, "aBFu7i_B", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_B()
{
  {
    init_simple_test("aBFu7i_B_B");
    static aBFu7i_B_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7i_B_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_B");
    check_field_offset(lv, v2, 1, "aBFu7i_B_B.v2");
    check_field_offset(lv, v3, 2, "aBFu7i_B_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_B(Test_aBFu7i_B_B, "aBFu7i_B_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_BFu15i()
{
  {
    init_simple_test("aBFu7i_B_BFu15i");
    static aBFu7i_B_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7i_B_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu15i");
    check_field_offset(lv, v2, 1, "aBFu7i_B_BFu15i.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aBFu7i_B_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aBFu7i_B_BFu15i");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_BFu15i(Test_aBFu7i_B_BFu15i, "aBFu7i_B_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_BFu15ll()
{
  {
    init_simple_test("aBFu7i_B_BFu15ll");
    static aBFu7i_B_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7i_B_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu15ll");
    check_field_offset(lv, v2, 1, "aBFu7i_B_BFu15ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aBFu7i_B_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aBFu7i_B_BFu15ll");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_BFu15ll(Test_aBFu7i_B_BFu15ll, "aBFu7i_B_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_BFu15s()
{
  {
    init_simple_test("aBFu7i_B_BFu15s");
    static aBFu7i_B_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7i_B_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu15s");
    check_field_offset(lv, v2, 1, "aBFu7i_B_BFu15s.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aBFu7i_B_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aBFu7i_B_BFu15s");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_BFu15s(Test_aBFu7i_B_BFu15s, "aBFu7i_B_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_BFu16i()
{
  {
    init_simple_test("aBFu7i_B_BFu16i");
    static aBFu7i_B_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7i_B_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu16i");
    check_field_offset(lv, v2, 1, "aBFu7i_B_BFu16i.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aBFu7i_B_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aBFu7i_B_BFu16i");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_BFu16i(Test_aBFu7i_B_BFu16i, "aBFu7i_B_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_BFu16ll()
{
  {
    init_simple_test("aBFu7i_B_BFu16ll");
    static aBFu7i_B_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7i_B_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu16ll");
    check_field_offset(lv, v2, 1, "aBFu7i_B_BFu16ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aBFu7i_B_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aBFu7i_B_BFu16ll");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_BFu16ll(Test_aBFu7i_B_BFu16ll, "aBFu7i_B_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_BFu16s()
{
  {
    init_simple_test("aBFu7i_B_BFu16s");
    static aBFu7i_B_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7i_B_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu16s");
    check_field_offset(lv, v2, 1, "aBFu7i_B_BFu16s.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aBFu7i_B_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aBFu7i_B_BFu16s");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_BFu16s(Test_aBFu7i_B_BFu16s, "aBFu7i_B_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_BFu17i()
{
  {
    init_simple_test("aBFu7i_B_BFu17i");
    static aBFu7i_B_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu7i_B_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu17i");
    check_field_offset(lv, v2, 1, "aBFu7i_B_BFu17i.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aBFu7i_B_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aBFu7i_B_BFu17i");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_BFu17i(Test_aBFu7i_B_BFu17i, "aBFu7i_B_BFu17i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_BFu17ll()
{
  {
    init_simple_test("aBFu7i_B_BFu17ll");
    static aBFu7i_B_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu7i_B_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu17ll");
    check_field_offset(lv, v2, 1, "aBFu7i_B_BFu17ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aBFu7i_B_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aBFu7i_B_BFu17ll");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_BFu17ll(Test_aBFu7i_B_BFu17ll, "aBFu7i_B_BFu17ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_BFu1c()
{
  {
    init_simple_test("aBFu7i_B_BFu1c");
    static aBFu7i_B_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7i_B_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu1c");
    check_field_offset(lv, v2, 1, "aBFu7i_B_BFu1c.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu7i_B_BFu1c");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_BFu1c(Test_aBFu7i_B_BFu1c, "aBFu7i_B_BFu1c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_BFu1i()
{
  {
    init_simple_test("aBFu7i_B_BFu1i");
    static aBFu7i_B_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7i_B_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu1i");
    check_field_offset(lv, v2, 1, "aBFu7i_B_BFu1i.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu7i_B_BFu1i");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_BFu1i(Test_aBFu7i_B_BFu1i, "aBFu7i_B_BFu1i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_BFu1ll()
{
  {
    init_simple_test("aBFu7i_B_BFu1ll");
    static aBFu7i_B_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7i_B_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu1ll");
    check_field_offset(lv, v2, 1, "aBFu7i_B_BFu1ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu7i_B_BFu1ll");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_BFu1ll(Test_aBFu7i_B_BFu1ll, "aBFu7i_B_BFu1ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_BFu1s()
{
  {
    init_simple_test("aBFu7i_B_BFu1s");
    static aBFu7i_B_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7i_B_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu1s");
    check_field_offset(lv, v2, 1, "aBFu7i_B_BFu1s.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu7i_B_BFu1s");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_BFu1s(Test_aBFu7i_B_BFu1s, "aBFu7i_B_BFu1s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_BFu31i()
{
  {
    init_simple_test("aBFu7i_B_BFu31i");
    static aBFu7i_B_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7i_B_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu31i");
    check_field_offset(lv, v2, 1, "aBFu7i_B_BFu31i.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aBFu7i_B_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aBFu7i_B_BFu31i");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_BFu31i(Test_aBFu7i_B_BFu31i, "aBFu7i_B_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_BFu31ll()
{
  {
    init_simple_test("aBFu7i_B_BFu31ll");
    static aBFu7i_B_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7i_B_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu31ll");
    check_field_offset(lv, v2, 1, "aBFu7i_B_BFu31ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aBFu7i_B_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aBFu7i_B_BFu31ll");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_BFu31ll(Test_aBFu7i_B_BFu31ll, "aBFu7i_B_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_BFu32i()
{
  {
    init_simple_test("aBFu7i_B_BFu32i");
    static aBFu7i_B_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7i_B_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu32i");
    check_field_offset(lv, v2, 1, "aBFu7i_B_BFu32i.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aBFu7i_B_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aBFu7i_B_BFu32i");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_BFu32i(Test_aBFu7i_B_BFu32i, "aBFu7i_B_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_BFu32ll()
{
  {
    init_simple_test("aBFu7i_B_BFu32ll");
    static aBFu7i_B_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7i_B_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu32ll");
    check_field_offset(lv, v2, 1, "aBFu7i_B_BFu32ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aBFu7i_B_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aBFu7i_B_BFu32ll");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_BFu32ll(Test_aBFu7i_B_BFu32ll, "aBFu7i_B_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_BFu33()
{
  {
    init_simple_test("aBFu7i_B_BFu33");
    static aBFu7i_B_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aBFu7i_B_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu33");
    check_field_offset(lv, v2, 1, "aBFu7i_B_BFu33.v2");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "aBFu7i_B_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "aBFu7i_B_BFu33");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_BFu33(Test_aBFu7i_B_BFu33, "aBFu7i_B_BFu33", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_BFu7c()
{
  {
    init_simple_test("aBFu7i_B_BFu7c");
    static aBFu7i_B_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7i_B_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu7c");
    check_field_offset(lv, v2, 1, "aBFu7i_B_BFu7c.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu7i_B_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu7c");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_BFu7c(Test_aBFu7i_B_BFu7c, "aBFu7i_B_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_BFu7i()
{
  {
    init_simple_test("aBFu7i_B_BFu7i");
    static aBFu7i_B_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7i_B_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu7i");
    check_field_offset(lv, v2, 1, "aBFu7i_B_BFu7i.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu7i_B_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu7i");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_BFu7i(Test_aBFu7i_B_BFu7i, "aBFu7i_B_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_BFu7ll()
{
  {
    init_simple_test("aBFu7i_B_BFu7ll");
    static aBFu7i_B_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7i_B_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu7ll");
    check_field_offset(lv, v2, 1, "aBFu7i_B_BFu7ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu7i_B_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu7ll");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_BFu7ll(Test_aBFu7i_B_BFu7ll, "aBFu7i_B_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_BFu7s()
{
  {
    init_simple_test("aBFu7i_B_BFu7s");
    static aBFu7i_B_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7i_B_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu7s");
    check_field_offset(lv, v2, 1, "aBFu7i_B_BFu7s.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu7i_B_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu7s");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_BFu7s(Test_aBFu7i_B_BFu7s, "aBFu7i_B_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_BFu8c()
{
  {
    init_simple_test("aBFu7i_B_BFu8c");
    static aBFu7i_B_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7i_B_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu8c");
    check_field_offset(lv, v2, 1, "aBFu7i_B_BFu8c.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu7i_B_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu7i_B_BFu8c");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_BFu8c(Test_aBFu7i_B_BFu8c, "aBFu7i_B_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_BFu8i()
{
  {
    init_simple_test("aBFu7i_B_BFu8i");
    static aBFu7i_B_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7i_B_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu8i");
    check_field_offset(lv, v2, 1, "aBFu7i_B_BFu8i.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu7i_B_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu7i_B_BFu8i");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_BFu8i(Test_aBFu7i_B_BFu8i, "aBFu7i_B_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_BFu8ll()
{
  {
    init_simple_test("aBFu7i_B_BFu8ll");
    static aBFu7i_B_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7i_B_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu8ll");
    check_field_offset(lv, v2, 1, "aBFu7i_B_BFu8ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu7i_B_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu7i_B_BFu8ll");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_BFu8ll(Test_aBFu7i_B_BFu8ll, "aBFu7i_B_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_BFu8s()
{
  {
    init_simple_test("aBFu7i_B_BFu8s");
    static aBFu7i_B_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7i_B_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu8s");
    check_field_offset(lv, v2, 1, "aBFu7i_B_BFu8s.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu7i_B_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu7i_B_BFu8s");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_BFu8s(Test_aBFu7i_B_BFu8s, "aBFu7i_B_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_BFu9i()
{
  {
    init_simple_test("aBFu7i_B_BFu9i");
    static aBFu7i_B_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7i_B_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu9i");
    check_field_offset(lv, v2, 1, "aBFu7i_B_BFu9i.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aBFu7i_B_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aBFu7i_B_BFu9i");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_BFu9i(Test_aBFu7i_B_BFu9i, "aBFu7i_B_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_BFu9ll()
{
  {
    init_simple_test("aBFu7i_B_BFu9ll");
    static aBFu7i_B_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7i_B_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu9ll");
    check_field_offset(lv, v2, 1, "aBFu7i_B_BFu9ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aBFu7i_B_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aBFu7i_B_BFu9ll");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_BFu9ll(Test_aBFu7i_B_BFu9ll, "aBFu7i_B_BFu9ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_BFu9s()
{
  {
    init_simple_test("aBFu7i_B_BFu9s");
    static aBFu7i_B_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7i_B_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_BFu9s");
    check_field_offset(lv, v2, 1, "aBFu7i_B_BFu9s.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aBFu7i_B_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aBFu7i_B_BFu9s");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_BFu9s(Test_aBFu7i_B_BFu9s, "aBFu7i_B_BFu9s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_C()
{
  {
    init_simple_test("aBFu7i_B_C");
    static aBFu7i_B_C lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7i_B_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_C)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_C");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_C");
    check_field_offset(lv, v2, 1, "aBFu7i_B_C.v2");
    check_field_offset(lv, v3, 2, "aBFu7i_B_C.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_C(Test_aBFu7i_B_C, "aBFu7i_B_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_D()
{
  {
    init_simple_test("aBFu7i_B_D");
    static aBFu7i_B_D lv;
    check2(sizeof(lv), 10, "sizeof(aBFu7i_B_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_D)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_D");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_D");
    check_field_offset(lv, v2, 1, "aBFu7i_B_D.v2");
    check_field_offset(lv, v3, 2, "aBFu7i_B_D.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_D(Test_aBFu7i_B_D, "aBFu7i_B_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_F()
{
  {
    init_simple_test("aBFu7i_B_F");
    static aBFu7i_B_F lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7i_B_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_F)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_F");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_F");
    check_field_offset(lv, v2, 1, "aBFu7i_B_F.v2");
    check_field_offset(lv, v3, 2, "aBFu7i_B_F.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_F(Test_aBFu7i_B_F, "aBFu7i_B_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_I()
{
  {
    init_simple_test("aBFu7i_B_I");
    static aBFu7i_B_I lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7i_B_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_I)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_I");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_I");
    check_field_offset(lv, v2, 1, "aBFu7i_B_I.v2");
    check_field_offset(lv, v3, 2, "aBFu7i_B_I.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_I(Test_aBFu7i_B_I, "aBFu7i_B_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_Ip()
{
  {
    init_simple_test("aBFu7i_B_Ip");
    static aBFu7i_B_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu7i_B_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_Ip");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_Ip");
    check_field_offset(lv, v2, 1, "aBFu7i_B_Ip.v2");
    check_field_offset(lv, v3, 2, "aBFu7i_B_Ip.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_Ip(Test_aBFu7i_B_Ip, "aBFu7i_B_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_L()
{
  {
    init_simple_test("aBFu7i_B_L");
    static aBFu7i_B_L lv;
    check2(sizeof(lv), 10, "sizeof(aBFu7i_B_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_L)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_L");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_L");
    check_field_offset(lv, v2, 1, "aBFu7i_B_L.v2");
    check_field_offset(lv, v3, 2, "aBFu7i_B_L.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_L(Test_aBFu7i_B_L, "aBFu7i_B_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_S()
{
  {
    init_simple_test("aBFu7i_B_S");
    static aBFu7i_B_S lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7i_B_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_S)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_S");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_S");
    check_field_offset(lv, v2, 1, "aBFu7i_B_S.v2");
    check_field_offset(lv, v3, 2, "aBFu7i_B_S.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_S(Test_aBFu7i_B_S, "aBFu7i_B_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_Uc()
{
  {
    init_simple_test("aBFu7i_B_Uc");
    static aBFu7i_B_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7i_B_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_Uc");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_Uc");
    check_field_offset(lv, v2, 1, "aBFu7i_B_Uc.v2");
    check_field_offset(lv, v3, 2, "aBFu7i_B_Uc.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_Uc(Test_aBFu7i_B_Uc, "aBFu7i_B_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_Ui()
{
  {
    init_simple_test("aBFu7i_B_Ui");
    static aBFu7i_B_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7i_B_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_Ui");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_Ui");
    check_field_offset(lv, v2, 1, "aBFu7i_B_Ui.v2");
    check_field_offset(lv, v3, 2, "aBFu7i_B_Ui.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_Ui(Test_aBFu7i_B_Ui, "aBFu7i_B_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_Ul()
{
  {
    init_simple_test("aBFu7i_B_Ul");
    static aBFu7i_B_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aBFu7i_B_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_Ul");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_Ul");
    check_field_offset(lv, v2, 1, "aBFu7i_B_Ul.v2");
    check_field_offset(lv, v3, 2, "aBFu7i_B_Ul.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_Ul(Test_aBFu7i_B_Ul, "aBFu7i_B_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_Us()
{
  {
    init_simple_test("aBFu7i_B_Us");
    static aBFu7i_B_Us lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7i_B_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_Us)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_Us");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_Us");
    check_field_offset(lv, v2, 1, "aBFu7i_B_Us.v2");
    check_field_offset(lv, v3, 2, "aBFu7i_B_Us.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_Us(Test_aBFu7i_B_Us, "aBFu7i_B_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_B_Vp()
{
  {
    init_simple_test("aBFu7i_B_Vp");
    static aBFu7i_B_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu7i_B_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_B_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_B_Vp");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_B_Vp");
    check_field_offset(lv, v2, 1, "aBFu7i_B_Vp.v2");
    check_field_offset(lv, v3, 2, "aBFu7i_B_Vp.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_B_Vp(Test_aBFu7i_B_Vp, "aBFu7i_B_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_BFu15i_B()
{
  {
    init_simple_test("aBFu7i_BFu15i_B");
    static aBFu7i_BFu15i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7i_BFu15i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_BFu15i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_BFu15i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_BFu15i_B");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "aBFu7i_BFu15i_B");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "aBFu7i_BFu15i_B");
    check_field_offset(lv, v3, 3, "aBFu7i_BFu15i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_BFu15i_B(Test_aBFu7i_BFu15i_B, "aBFu7i_BFu15i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_BFu15ll_B()
{
  {
    init_simple_test("aBFu7i_BFu15ll_B");
    static aBFu7i_BFu15ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7i_BFu15ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_BFu15ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_BFu15ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_BFu15ll_B");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "aBFu7i_BFu15ll_B");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "aBFu7i_BFu15ll_B");
    check_field_offset(lv, v3, 3, "aBFu7i_BFu15ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_BFu15ll_B(Test_aBFu7i_BFu15ll_B, "aBFu7i_BFu15ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_BFu15s_B()
{
  {
    init_simple_test("aBFu7i_BFu15s_B");
    static aBFu7i_BFu15s_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7i_BFu15s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_BFu15s_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_BFu15s_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_BFu15s_B");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "aBFu7i_BFu15s_B");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "aBFu7i_BFu15s_B");
    check_field_offset(lv, v3, 3, "aBFu7i_BFu15s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_BFu15s_B(Test_aBFu7i_BFu15s_B, "aBFu7i_BFu15s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_BFu16i_B()
{
  {
    init_simple_test("aBFu7i_BFu16i_B");
    static aBFu7i_BFu16i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7i_BFu16i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_BFu16i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_BFu16i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_BFu16i_B");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "aBFu7i_BFu16i_B");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "aBFu7i_BFu16i_B");
    check_field_offset(lv, v3, 3, "aBFu7i_BFu16i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_BFu16i_B(Test_aBFu7i_BFu16i_B, "aBFu7i_BFu16i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_BFu16ll_B()
{
  {
    init_simple_test("aBFu7i_BFu16ll_B");
    static aBFu7i_BFu16ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7i_BFu16ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_BFu16ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_BFu16ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_BFu16ll_B");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "aBFu7i_BFu16ll_B");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "aBFu7i_BFu16ll_B");
    check_field_offset(lv, v3, 3, "aBFu7i_BFu16ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_BFu16ll_B(Test_aBFu7i_BFu16ll_B, "aBFu7i_BFu16ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_BFu16s_B()
{
  {
    init_simple_test("aBFu7i_BFu16s_B");
    static aBFu7i_BFu16s_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7i_BFu16s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_BFu16s_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_BFu16s_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_BFu16s_B");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "aBFu7i_BFu16s_B");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "aBFu7i_BFu16s_B");
    check_field_offset(lv, v3, 3, "aBFu7i_BFu16s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_BFu16s_B(Test_aBFu7i_BFu16s_B, "aBFu7i_BFu16s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_BFu17i_B()
{
  {
    init_simple_test("aBFu7i_BFu17i_B");
    static aBFu7i_BFu17i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7i_BFu17i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_BFu17i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_BFu17i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_BFu17i_B");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "aBFu7i_BFu17i_B");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "aBFu7i_BFu17i_B");
    check_field_offset(lv, v3, 3, "aBFu7i_BFu17i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_BFu17i_B(Test_aBFu7i_BFu17i_B, "aBFu7i_BFu17i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_BFu17ll_B()
{
  {
    init_simple_test("aBFu7i_BFu17ll_B");
    static aBFu7i_BFu17ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7i_BFu17ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_BFu17ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_BFu17ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_BFu17ll_B");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "aBFu7i_BFu17ll_B");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "aBFu7i_BFu17ll_B");
    check_field_offset(lv, v3, 3, "aBFu7i_BFu17ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_BFu17ll_B(Test_aBFu7i_BFu17ll_B, "aBFu7i_BFu17ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_BFu1c_B()
{
  {
    init_simple_test("aBFu7i_BFu1c_B");
    static aBFu7i_BFu1c_B lv;
    check2(sizeof(lv), 2, "sizeof(aBFu7i_BFu1c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_BFu1c_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_BFu1c_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_BFu1c_B");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "aBFu7i_BFu1c_B");
    check_field_offset(lv, v3, 1, "aBFu7i_BFu1c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_BFu1c_B(Test_aBFu7i_BFu1c_B, "aBFu7i_BFu1c_B", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_BFu1i_B()
{
  {
    init_simple_test("aBFu7i_BFu1i_B");
    static aBFu7i_BFu1i_B lv;
    check2(sizeof(lv), 2, "sizeof(aBFu7i_BFu1i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_BFu1i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_BFu1i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_BFu1i_B");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "aBFu7i_BFu1i_B");
    check_field_offset(lv, v3, 1, "aBFu7i_BFu1i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_BFu1i_B(Test_aBFu7i_BFu1i_B, "aBFu7i_BFu1i_B", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_BFu1ll_B()
{
  {
    init_simple_test("aBFu7i_BFu1ll_B");
    static aBFu7i_BFu1ll_B lv;
    check2(sizeof(lv), 2, "sizeof(aBFu7i_BFu1ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_BFu1ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_BFu1ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_BFu1ll_B");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "aBFu7i_BFu1ll_B");
    check_field_offset(lv, v3, 1, "aBFu7i_BFu1ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_BFu1ll_B(Test_aBFu7i_BFu1ll_B, "aBFu7i_BFu1ll_B", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_BFu1s_B()
{
  {
    init_simple_test("aBFu7i_BFu1s_B");
    static aBFu7i_BFu1s_B lv;
    check2(sizeof(lv), 2, "sizeof(aBFu7i_BFu1s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_BFu1s_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_BFu1s_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_BFu1s_B");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "aBFu7i_BFu1s_B");
    check_field_offset(lv, v3, 1, "aBFu7i_BFu1s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_BFu1s_B(Test_aBFu7i_BFu1s_B, "aBFu7i_BFu1s_B", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_BFu31i_B()
{
  {
    init_simple_test("aBFu7i_BFu31i_B");
    static aBFu7i_BFu31i_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7i_BFu31i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_BFu31i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_BFu31i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_BFu31i_B");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "aBFu7i_BFu31i_B");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "aBFu7i_BFu31i_B");
    check_field_offset(lv, v3, 5, "aBFu7i_BFu31i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_BFu31i_B(Test_aBFu7i_BFu31i_B, "aBFu7i_BFu31i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_BFu31ll_B()
{
  {
    init_simple_test("aBFu7i_BFu31ll_B");
    static aBFu7i_BFu31ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7i_BFu31ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_BFu31ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_BFu31ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_BFu31ll_B");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "aBFu7i_BFu31ll_B");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "aBFu7i_BFu31ll_B");
    check_field_offset(lv, v3, 5, "aBFu7i_BFu31ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_BFu31ll_B(Test_aBFu7i_BFu31ll_B, "aBFu7i_BFu31ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_BFu32i_B()
{
  {
    init_simple_test("aBFu7i_BFu32i_B");
    static aBFu7i_BFu32i_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7i_BFu32i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_BFu32i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_BFu32i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_BFu32i_B");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "aBFu7i_BFu32i_B");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "aBFu7i_BFu32i_B");
    check_field_offset(lv, v3, 5, "aBFu7i_BFu32i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_BFu32i_B(Test_aBFu7i_BFu32i_B, "aBFu7i_BFu32i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_BFu32ll_B()
{
  {
    init_simple_test("aBFu7i_BFu32ll_B");
    static aBFu7i_BFu32ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7i_BFu32ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_BFu32ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_BFu32ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_BFu32ll_B");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "aBFu7i_BFu32ll_B");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "aBFu7i_BFu32ll_B");
    check_field_offset(lv, v3, 5, "aBFu7i_BFu32ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_BFu32ll_B(Test_aBFu7i_BFu32ll_B, "aBFu7i_BFu32ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_BFu33_B()
{
  {
    init_simple_test("aBFu7i_BFu33_B");
    static aBFu7i_BFu33_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7i_BFu33_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_BFu33_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_BFu33_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_BFu33_B");
    set_bf_and_test(lv, v2, 0, 7, 33, 1, "aBFu7i_BFu33_B");
    set_bf_and_test(lv, v2, 0, 7, 33, hide_ull(1LL<<32), "aBFu7i_BFu33_B");
    check_field_offset(lv, v3, 5, "aBFu7i_BFu33_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_BFu33_B(Test_aBFu7i_BFu33_B, "aBFu7i_BFu33_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_BFu7c_B()
{
  {
    init_simple_test("aBFu7i_BFu7c_B");
    static aBFu7i_BFu7c_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7i_BFu7c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_BFu7c_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_BFu7c_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_BFu7c_B");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "aBFu7i_BFu7c_B");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "aBFu7i_BFu7c_B");
    check_field_offset(lv, v3, 2, "aBFu7i_BFu7c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_BFu7c_B(Test_aBFu7i_BFu7c_B, "aBFu7i_BFu7c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_BFu7i_B()
{
  {
    init_simple_test("aBFu7i_BFu7i_B");
    static aBFu7i_BFu7i_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7i_BFu7i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_BFu7i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_BFu7i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_BFu7i_B");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "aBFu7i_BFu7i_B");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "aBFu7i_BFu7i_B");
    check_field_offset(lv, v3, 2, "aBFu7i_BFu7i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_BFu7i_B(Test_aBFu7i_BFu7i_B, "aBFu7i_BFu7i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_BFu7ll_B()
{
  {
    init_simple_test("aBFu7i_BFu7ll_B");
    static aBFu7i_BFu7ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7i_BFu7ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_BFu7ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_BFu7ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_BFu7ll_B");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "aBFu7i_BFu7ll_B");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "aBFu7i_BFu7ll_B");
    check_field_offset(lv, v3, 2, "aBFu7i_BFu7ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_BFu7ll_B(Test_aBFu7i_BFu7ll_B, "aBFu7i_BFu7ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_BFu7s_B()
{
  {
    init_simple_test("aBFu7i_BFu7s_B");
    static aBFu7i_BFu7s_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7i_BFu7s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_BFu7s_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_BFu7s_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_BFu7s_B");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "aBFu7i_BFu7s_B");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "aBFu7i_BFu7s_B");
    check_field_offset(lv, v3, 2, "aBFu7i_BFu7s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_BFu7s_B(Test_aBFu7i_BFu7s_B, "aBFu7i_BFu7s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_BFu8c_B()
{
  {
    init_simple_test("aBFu7i_BFu8c_B");
    static aBFu7i_BFu8c_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7i_BFu8c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_BFu8c_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_BFu8c_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_BFu8c_B");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "aBFu7i_BFu8c_B");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "aBFu7i_BFu8c_B");
    check_field_offset(lv, v3, 2, "aBFu7i_BFu8c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_BFu8c_B(Test_aBFu7i_BFu8c_B, "aBFu7i_BFu8c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_BFu8i_B()
{
  {
    init_simple_test("aBFu7i_BFu8i_B");
    static aBFu7i_BFu8i_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7i_BFu8i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_BFu8i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_BFu8i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_BFu8i_B");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "aBFu7i_BFu8i_B");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "aBFu7i_BFu8i_B");
    check_field_offset(lv, v3, 2, "aBFu7i_BFu8i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_BFu8i_B(Test_aBFu7i_BFu8i_B, "aBFu7i_BFu8i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_BFu8ll_B()
{
  {
    init_simple_test("aBFu7i_BFu8ll_B");
    static aBFu7i_BFu8ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7i_BFu8ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_BFu8ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_BFu8ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_BFu8ll_B");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "aBFu7i_BFu8ll_B");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "aBFu7i_BFu8ll_B");
    check_field_offset(lv, v3, 2, "aBFu7i_BFu8ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_BFu8ll_B(Test_aBFu7i_BFu8ll_B, "aBFu7i_BFu8ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_BFu8s_B()
{
  {
    init_simple_test("aBFu7i_BFu8s_B");
    static aBFu7i_BFu8s_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7i_BFu8s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_BFu8s_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_BFu8s_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_BFu8s_B");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "aBFu7i_BFu8s_B");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "aBFu7i_BFu8s_B");
    check_field_offset(lv, v3, 2, "aBFu7i_BFu8s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_BFu8s_B(Test_aBFu7i_BFu8s_B, "aBFu7i_BFu8s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_BFu9i_B()
{
  {
    init_simple_test("aBFu7i_BFu9i_B");
    static aBFu7i_BFu9i_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7i_BFu9i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_BFu9i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_BFu9i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_BFu9i_B");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "aBFu7i_BFu9i_B");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "aBFu7i_BFu9i_B");
    check_field_offset(lv, v3, 2, "aBFu7i_BFu9i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_BFu9i_B(Test_aBFu7i_BFu9i_B, "aBFu7i_BFu9i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_BFu9ll_B()
{
  {
    init_simple_test("aBFu7i_BFu9ll_B");
    static aBFu7i_BFu9ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7i_BFu9ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_BFu9ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_BFu9ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_BFu9ll_B");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "aBFu7i_BFu9ll_B");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "aBFu7i_BFu9ll_B");
    check_field_offset(lv, v3, 2, "aBFu7i_BFu9ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_BFu9ll_B(Test_aBFu7i_BFu9ll_B, "aBFu7i_BFu9ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_BFu9s_B()
{
  {
    init_simple_test("aBFu7i_BFu9s_B");
    static aBFu7i_BFu9s_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7i_BFu9s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_BFu9s_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_BFu9s_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_BFu9s_B");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "aBFu7i_BFu9s_B");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "aBFu7i_BFu9s_B");
    check_field_offset(lv, v3, 2, "aBFu7i_BFu9s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_BFu9s_B(Test_aBFu7i_BFu9s_B, "aBFu7i_BFu9s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_C_B()
{
  {
    init_simple_test("aBFu7i_C_B");
    static aBFu7i_C_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7i_C_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_C_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_C_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_C_B");
    check_field_offset(lv, v2, 1, "aBFu7i_C_B.v2");
    check_field_offset(lv, v3, 2, "aBFu7i_C_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_C_B(Test_aBFu7i_C_B, "aBFu7i_C_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_D_B()
{
  {
    init_simple_test("aBFu7i_D_B");
    static aBFu7i_D_B lv;
    check2(sizeof(lv), 10, "sizeof(aBFu7i_D_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_D_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_D_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_D_B");
    check_field_offset(lv, v2, 1, "aBFu7i_D_B.v2");
    check_field_offset(lv, v3, 9, "aBFu7i_D_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_D_B(Test_aBFu7i_D_B, "aBFu7i_D_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_F_B()
{
  {
    init_simple_test("aBFu7i_F_B");
    static aBFu7i_F_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7i_F_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_F_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_F_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_F_B");
    check_field_offset(lv, v2, 1, "aBFu7i_F_B.v2");
    check_field_offset(lv, v3, 5, "aBFu7i_F_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_F_B(Test_aBFu7i_F_B, "aBFu7i_F_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_I_B()
{
  {
    init_simple_test("aBFu7i_I_B");
    static aBFu7i_I_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7i_I_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_I_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_I_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_I_B");
    check_field_offset(lv, v2, 1, "aBFu7i_I_B.v2");
    check_field_offset(lv, v3, 5, "aBFu7i_I_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_I_B(Test_aBFu7i_I_B, "aBFu7i_I_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_Ip_B()
{
  {
    init_simple_test("aBFu7i_Ip_B");
    static aBFu7i_Ip_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu7i_Ip_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_Ip_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_Ip_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_Ip_B");
    check_field_offset(lv, v2, 1, "aBFu7i_Ip_B.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aBFu7i_Ip_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_Ip_B(Test_aBFu7i_Ip_B, "aBFu7i_Ip_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_L_B()
{
  {
    init_simple_test("aBFu7i_L_B");
    static aBFu7i_L_B lv;
    check2(sizeof(lv), 10, "sizeof(aBFu7i_L_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_L_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_L_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_L_B");
    check_field_offset(lv, v2, 1, "aBFu7i_L_B.v2");
    check_field_offset(lv, v3, 9, "aBFu7i_L_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_L_B(Test_aBFu7i_L_B, "aBFu7i_L_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_S_B()
{
  {
    init_simple_test("aBFu7i_S_B");
    static aBFu7i_S_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7i_S_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_S_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_S_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_S_B");
    check_field_offset(lv, v2, 1, "aBFu7i_S_B.v2");
    check_field_offset(lv, v3, 3, "aBFu7i_S_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_S_B(Test_aBFu7i_S_B, "aBFu7i_S_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_Uc_B()
{
  {
    init_simple_test("aBFu7i_Uc_B");
    static aBFu7i_Uc_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7i_Uc_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_Uc_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_Uc_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_Uc_B");
    check_field_offset(lv, v2, 1, "aBFu7i_Uc_B.v2");
    check_field_offset(lv, v3, 2, "aBFu7i_Uc_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_Uc_B(Test_aBFu7i_Uc_B, "aBFu7i_Uc_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_Ui_B()
{
  {
    init_simple_test("aBFu7i_Ui_B");
    static aBFu7i_Ui_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7i_Ui_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_Ui_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_Ui_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_Ui_B");
    check_field_offset(lv, v2, 1, "aBFu7i_Ui_B.v2");
    check_field_offset(lv, v3, 5, "aBFu7i_Ui_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_Ui_B(Test_aBFu7i_Ui_B, "aBFu7i_Ui_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_Ul_B()
{
  {
    init_simple_test("aBFu7i_Ul_B");
    static aBFu7i_Ul_B lv;
    check2(sizeof(lv), 10, "sizeof(aBFu7i_Ul_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_Ul_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_Ul_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_Ul_B");
    check_field_offset(lv, v2, 1, "aBFu7i_Ul_B.v2");
    check_field_offset(lv, v3, 9, "aBFu7i_Ul_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_Ul_B(Test_aBFu7i_Ul_B, "aBFu7i_Ul_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_Us_B()
{
  {
    init_simple_test("aBFu7i_Us_B");
    static aBFu7i_Us_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7i_Us_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_Us_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_Us_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_Us_B");
    check_field_offset(lv, v2, 1, "aBFu7i_Us_B.v2");
    check_field_offset(lv, v3, 3, "aBFu7i_Us_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_Us_B(Test_aBFu7i_Us_B, "aBFu7i_Us_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7i_Vp_B()
{
  {
    init_simple_test("aBFu7i_Vp_B");
    static aBFu7i_Vp_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu7i_Vp_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7i_Vp_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7i_Vp_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7i_Vp_B");
    check_field_offset(lv, v2, 1, "aBFu7i_Vp_B.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aBFu7i_Vp_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7i_Vp_B(Test_aBFu7i_Vp_B, "aBFu7i_Vp_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B()
{
  {
    init_simple_test("aBFu7ll_B");
    static aBFu7ll_B lv;
    check2(sizeof(lv), 2, "sizeof(aBFu7ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B");
    check_field_offset(lv, v2, 1, "aBFu7ll_B.v2");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B(Test_aBFu7ll_B, "aBFu7ll_B", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_B()
{
  {
    init_simple_test("aBFu7ll_B_B");
    static aBFu7ll_B_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7ll_B_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_B");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_B.v2");
    check_field_offset(lv, v3, 2, "aBFu7ll_B_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_B(Test_aBFu7ll_B_B, "aBFu7ll_B_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_BFu15i()
{
  {
    init_simple_test("aBFu7ll_B_BFu15i");
    static aBFu7ll_B_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7ll_B_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu15i");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_BFu15i.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aBFu7ll_B_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aBFu7ll_B_BFu15i");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_BFu15i(Test_aBFu7ll_B_BFu15i, "aBFu7ll_B_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_BFu15ll()
{
  {
    init_simple_test("aBFu7ll_B_BFu15ll");
    static aBFu7ll_B_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7ll_B_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu15ll");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_BFu15ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aBFu7ll_B_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aBFu7ll_B_BFu15ll");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_BFu15ll(Test_aBFu7ll_B_BFu15ll, "aBFu7ll_B_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_BFu15s()
{
  {
    init_simple_test("aBFu7ll_B_BFu15s");
    static aBFu7ll_B_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7ll_B_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu15s");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_BFu15s.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aBFu7ll_B_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aBFu7ll_B_BFu15s");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_BFu15s(Test_aBFu7ll_B_BFu15s, "aBFu7ll_B_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_BFu16i()
{
  {
    init_simple_test("aBFu7ll_B_BFu16i");
    static aBFu7ll_B_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7ll_B_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu16i");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_BFu16i.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aBFu7ll_B_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aBFu7ll_B_BFu16i");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_BFu16i(Test_aBFu7ll_B_BFu16i, "aBFu7ll_B_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_BFu16ll()
{
  {
    init_simple_test("aBFu7ll_B_BFu16ll");
    static aBFu7ll_B_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7ll_B_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu16ll");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_BFu16ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aBFu7ll_B_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aBFu7ll_B_BFu16ll");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_BFu16ll(Test_aBFu7ll_B_BFu16ll, "aBFu7ll_B_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_BFu16s()
{
  {
    init_simple_test("aBFu7ll_B_BFu16s");
    static aBFu7ll_B_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7ll_B_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu16s");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_BFu16s.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aBFu7ll_B_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aBFu7ll_B_BFu16s");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_BFu16s(Test_aBFu7ll_B_BFu16s, "aBFu7ll_B_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_BFu17i()
{
  {
    init_simple_test("aBFu7ll_B_BFu17i");
    static aBFu7ll_B_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu7ll_B_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu17i");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_BFu17i.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aBFu7ll_B_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aBFu7ll_B_BFu17i");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_BFu17i(Test_aBFu7ll_B_BFu17i, "aBFu7ll_B_BFu17i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_BFu17ll()
{
  {
    init_simple_test("aBFu7ll_B_BFu17ll");
    static aBFu7ll_B_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu7ll_B_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu17ll");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_BFu17ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aBFu7ll_B_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aBFu7ll_B_BFu17ll");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_BFu17ll(Test_aBFu7ll_B_BFu17ll, "aBFu7ll_B_BFu17ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_BFu1c()
{
  {
    init_simple_test("aBFu7ll_B_BFu1c");
    static aBFu7ll_B_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7ll_B_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu1c");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_BFu1c.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu7ll_B_BFu1c");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_BFu1c(Test_aBFu7ll_B_BFu1c, "aBFu7ll_B_BFu1c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_BFu1i()
{
  {
    init_simple_test("aBFu7ll_B_BFu1i");
    static aBFu7ll_B_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7ll_B_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu1i");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_BFu1i.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu7ll_B_BFu1i");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_BFu1i(Test_aBFu7ll_B_BFu1i, "aBFu7ll_B_BFu1i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_BFu1ll()
{
  {
    init_simple_test("aBFu7ll_B_BFu1ll");
    static aBFu7ll_B_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7ll_B_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu1ll");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_BFu1ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu7ll_B_BFu1ll");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_BFu1ll(Test_aBFu7ll_B_BFu1ll, "aBFu7ll_B_BFu1ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_BFu1s()
{
  {
    init_simple_test("aBFu7ll_B_BFu1s");
    static aBFu7ll_B_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7ll_B_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu1s");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_BFu1s.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu7ll_B_BFu1s");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_BFu1s(Test_aBFu7ll_B_BFu1s, "aBFu7ll_B_BFu1s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_BFu31i()
{
  {
    init_simple_test("aBFu7ll_B_BFu31i");
    static aBFu7ll_B_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7ll_B_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu31i");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_BFu31i.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aBFu7ll_B_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aBFu7ll_B_BFu31i");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_BFu31i(Test_aBFu7ll_B_BFu31i, "aBFu7ll_B_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_BFu31ll()
{
  {
    init_simple_test("aBFu7ll_B_BFu31ll");
    static aBFu7ll_B_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7ll_B_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu31ll");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_BFu31ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aBFu7ll_B_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aBFu7ll_B_BFu31ll");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_BFu31ll(Test_aBFu7ll_B_BFu31ll, "aBFu7ll_B_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_BFu32i()
{
  {
    init_simple_test("aBFu7ll_B_BFu32i");
    static aBFu7ll_B_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7ll_B_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu32i");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_BFu32i.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aBFu7ll_B_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aBFu7ll_B_BFu32i");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_BFu32i(Test_aBFu7ll_B_BFu32i, "aBFu7ll_B_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_BFu32ll()
{
  {
    init_simple_test("aBFu7ll_B_BFu32ll");
    static aBFu7ll_B_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7ll_B_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu32ll");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_BFu32ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aBFu7ll_B_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aBFu7ll_B_BFu32ll");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_BFu32ll(Test_aBFu7ll_B_BFu32ll, "aBFu7ll_B_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_BFu33()
{
  {
    init_simple_test("aBFu7ll_B_BFu33");
    static aBFu7ll_B_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aBFu7ll_B_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu33");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_BFu33.v2");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "aBFu7ll_B_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "aBFu7ll_B_BFu33");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_BFu33(Test_aBFu7ll_B_BFu33, "aBFu7ll_B_BFu33", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_BFu7c()
{
  {
    init_simple_test("aBFu7ll_B_BFu7c");
    static aBFu7ll_B_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7ll_B_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu7c");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_BFu7c.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu7ll_B_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu7c");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_BFu7c(Test_aBFu7ll_B_BFu7c, "aBFu7ll_B_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_BFu7i()
{
  {
    init_simple_test("aBFu7ll_B_BFu7i");
    static aBFu7ll_B_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7ll_B_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu7i");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_BFu7i.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu7ll_B_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu7i");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_BFu7i(Test_aBFu7ll_B_BFu7i, "aBFu7ll_B_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_BFu7ll()
{
  {
    init_simple_test("aBFu7ll_B_BFu7ll");
    static aBFu7ll_B_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7ll_B_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu7ll");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_BFu7ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu7ll_B_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu7ll");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_BFu7ll(Test_aBFu7ll_B_BFu7ll, "aBFu7ll_B_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_BFu7s()
{
  {
    init_simple_test("aBFu7ll_B_BFu7s");
    static aBFu7ll_B_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7ll_B_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu7s");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_BFu7s.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu7ll_B_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu7s");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_BFu7s(Test_aBFu7ll_B_BFu7s, "aBFu7ll_B_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_BFu8c()
{
  {
    init_simple_test("aBFu7ll_B_BFu8c");
    static aBFu7ll_B_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7ll_B_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu8c");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_BFu8c.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu7ll_B_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu7ll_B_BFu8c");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_BFu8c(Test_aBFu7ll_B_BFu8c, "aBFu7ll_B_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_BFu8i()
{
  {
    init_simple_test("aBFu7ll_B_BFu8i");
    static aBFu7ll_B_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7ll_B_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu8i");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_BFu8i.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu7ll_B_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu7ll_B_BFu8i");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_BFu8i(Test_aBFu7ll_B_BFu8i, "aBFu7ll_B_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_BFu8ll()
{
  {
    init_simple_test("aBFu7ll_B_BFu8ll");
    static aBFu7ll_B_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7ll_B_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu8ll");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_BFu8ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu7ll_B_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu7ll_B_BFu8ll");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_BFu8ll(Test_aBFu7ll_B_BFu8ll, "aBFu7ll_B_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_BFu8s()
{
  {
    init_simple_test("aBFu7ll_B_BFu8s");
    static aBFu7ll_B_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7ll_B_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu8s");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_BFu8s.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu7ll_B_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu7ll_B_BFu8s");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_BFu8s(Test_aBFu7ll_B_BFu8s, "aBFu7ll_B_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_BFu9i()
{
  {
    init_simple_test("aBFu7ll_B_BFu9i");
    static aBFu7ll_B_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7ll_B_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu9i");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_BFu9i.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aBFu7ll_B_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aBFu7ll_B_BFu9i");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_BFu9i(Test_aBFu7ll_B_BFu9i, "aBFu7ll_B_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_BFu9ll()
{
  {
    init_simple_test("aBFu7ll_B_BFu9ll");
    static aBFu7ll_B_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7ll_B_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu9ll");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_BFu9ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aBFu7ll_B_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aBFu7ll_B_BFu9ll");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_BFu9ll(Test_aBFu7ll_B_BFu9ll, "aBFu7ll_B_BFu9ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_BFu9s()
{
  {
    init_simple_test("aBFu7ll_B_BFu9s");
    static aBFu7ll_B_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7ll_B_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_BFu9s");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_BFu9s.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aBFu7ll_B_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aBFu7ll_B_BFu9s");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_BFu9s(Test_aBFu7ll_B_BFu9s, "aBFu7ll_B_BFu9s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_C()
{
  {
    init_simple_test("aBFu7ll_B_C");
    static aBFu7ll_B_C lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7ll_B_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_C)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_C");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_C");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_C.v2");
    check_field_offset(lv, v3, 2, "aBFu7ll_B_C.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_C(Test_aBFu7ll_B_C, "aBFu7ll_B_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_D()
{
  {
    init_simple_test("aBFu7ll_B_D");
    static aBFu7ll_B_D lv;
    check2(sizeof(lv), 10, "sizeof(aBFu7ll_B_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_D)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_D");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_D");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_D.v2");
    check_field_offset(lv, v3, 2, "aBFu7ll_B_D.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_D(Test_aBFu7ll_B_D, "aBFu7ll_B_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_F()
{
  {
    init_simple_test("aBFu7ll_B_F");
    static aBFu7ll_B_F lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7ll_B_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_F)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_F");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_F");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_F.v2");
    check_field_offset(lv, v3, 2, "aBFu7ll_B_F.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_F(Test_aBFu7ll_B_F, "aBFu7ll_B_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_I()
{
  {
    init_simple_test("aBFu7ll_B_I");
    static aBFu7ll_B_I lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7ll_B_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_I)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_I");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_I");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_I.v2");
    check_field_offset(lv, v3, 2, "aBFu7ll_B_I.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_I(Test_aBFu7ll_B_I, "aBFu7ll_B_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_Ip()
{
  {
    init_simple_test("aBFu7ll_B_Ip");
    static aBFu7ll_B_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu7ll_B_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_Ip");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_Ip");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_Ip.v2");
    check_field_offset(lv, v3, 2, "aBFu7ll_B_Ip.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_Ip(Test_aBFu7ll_B_Ip, "aBFu7ll_B_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_L()
{
  {
    init_simple_test("aBFu7ll_B_L");
    static aBFu7ll_B_L lv;
    check2(sizeof(lv), 10, "sizeof(aBFu7ll_B_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_L)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_L");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_L");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_L.v2");
    check_field_offset(lv, v3, 2, "aBFu7ll_B_L.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_L(Test_aBFu7ll_B_L, "aBFu7ll_B_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_S()
{
  {
    init_simple_test("aBFu7ll_B_S");
    static aBFu7ll_B_S lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7ll_B_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_S)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_S");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_S");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_S.v2");
    check_field_offset(lv, v3, 2, "aBFu7ll_B_S.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_S(Test_aBFu7ll_B_S, "aBFu7ll_B_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_Uc()
{
  {
    init_simple_test("aBFu7ll_B_Uc");
    static aBFu7ll_B_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7ll_B_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_Uc");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_Uc");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_Uc.v2");
    check_field_offset(lv, v3, 2, "aBFu7ll_B_Uc.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_Uc(Test_aBFu7ll_B_Uc, "aBFu7ll_B_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_Ui()
{
  {
    init_simple_test("aBFu7ll_B_Ui");
    static aBFu7ll_B_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7ll_B_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_Ui");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_Ui");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_Ui.v2");
    check_field_offset(lv, v3, 2, "aBFu7ll_B_Ui.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_Ui(Test_aBFu7ll_B_Ui, "aBFu7ll_B_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_Ul()
{
  {
    init_simple_test("aBFu7ll_B_Ul");
    static aBFu7ll_B_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aBFu7ll_B_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_Ul");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_Ul");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_Ul.v2");
    check_field_offset(lv, v3, 2, "aBFu7ll_B_Ul.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_Ul(Test_aBFu7ll_B_Ul, "aBFu7ll_B_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_Us()
{
  {
    init_simple_test("aBFu7ll_B_Us");
    static aBFu7ll_B_Us lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7ll_B_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_Us)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_Us");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_Us");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_Us.v2");
    check_field_offset(lv, v3, 2, "aBFu7ll_B_Us.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_Us(Test_aBFu7ll_B_Us, "aBFu7ll_B_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_B_Vp()
{
  {
    init_simple_test("aBFu7ll_B_Vp");
    static aBFu7ll_B_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu7ll_B_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_B_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_B_Vp");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_B_Vp");
    check_field_offset(lv, v2, 1, "aBFu7ll_B_Vp.v2");
    check_field_offset(lv, v3, 2, "aBFu7ll_B_Vp.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_B_Vp(Test_aBFu7ll_B_Vp, "aBFu7ll_B_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_BFu15i_B()
{
  {
    init_simple_test("aBFu7ll_BFu15i_B");
    static aBFu7ll_BFu15i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7ll_BFu15i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_BFu15i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_BFu15i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_BFu15i_B");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "aBFu7ll_BFu15i_B");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "aBFu7ll_BFu15i_B");
    check_field_offset(lv, v3, 3, "aBFu7ll_BFu15i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_BFu15i_B(Test_aBFu7ll_BFu15i_B, "aBFu7ll_BFu15i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_BFu15ll_B()
{
  {
    init_simple_test("aBFu7ll_BFu15ll_B");
    static aBFu7ll_BFu15ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7ll_BFu15ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_BFu15ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_BFu15ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_BFu15ll_B");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "aBFu7ll_BFu15ll_B");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "aBFu7ll_BFu15ll_B");
    check_field_offset(lv, v3, 3, "aBFu7ll_BFu15ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_BFu15ll_B(Test_aBFu7ll_BFu15ll_B, "aBFu7ll_BFu15ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_BFu15s_B()
{
  {
    init_simple_test("aBFu7ll_BFu15s_B");
    static aBFu7ll_BFu15s_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7ll_BFu15s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_BFu15s_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_BFu15s_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_BFu15s_B");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "aBFu7ll_BFu15s_B");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "aBFu7ll_BFu15s_B");
    check_field_offset(lv, v3, 3, "aBFu7ll_BFu15s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_BFu15s_B(Test_aBFu7ll_BFu15s_B, "aBFu7ll_BFu15s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_BFu16i_B()
{
  {
    init_simple_test("aBFu7ll_BFu16i_B");
    static aBFu7ll_BFu16i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7ll_BFu16i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_BFu16i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_BFu16i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_BFu16i_B");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "aBFu7ll_BFu16i_B");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "aBFu7ll_BFu16i_B");
    check_field_offset(lv, v3, 3, "aBFu7ll_BFu16i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_BFu16i_B(Test_aBFu7ll_BFu16i_B, "aBFu7ll_BFu16i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_BFu16ll_B()
{
  {
    init_simple_test("aBFu7ll_BFu16ll_B");
    static aBFu7ll_BFu16ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7ll_BFu16ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_BFu16ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_BFu16ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_BFu16ll_B");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "aBFu7ll_BFu16ll_B");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "aBFu7ll_BFu16ll_B");
    check_field_offset(lv, v3, 3, "aBFu7ll_BFu16ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_BFu16ll_B(Test_aBFu7ll_BFu16ll_B, "aBFu7ll_BFu16ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_BFu16s_B()
{
  {
    init_simple_test("aBFu7ll_BFu16s_B");
    static aBFu7ll_BFu16s_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7ll_BFu16s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_BFu16s_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_BFu16s_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_BFu16s_B");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "aBFu7ll_BFu16s_B");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "aBFu7ll_BFu16s_B");
    check_field_offset(lv, v3, 3, "aBFu7ll_BFu16s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_BFu16s_B(Test_aBFu7ll_BFu16s_B, "aBFu7ll_BFu16s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_BFu17i_B()
{
  {
    init_simple_test("aBFu7ll_BFu17i_B");
    static aBFu7ll_BFu17i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7ll_BFu17i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_BFu17i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_BFu17i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_BFu17i_B");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "aBFu7ll_BFu17i_B");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "aBFu7ll_BFu17i_B");
    check_field_offset(lv, v3, 3, "aBFu7ll_BFu17i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_BFu17i_B(Test_aBFu7ll_BFu17i_B, "aBFu7ll_BFu17i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_BFu17ll_B()
{
  {
    init_simple_test("aBFu7ll_BFu17ll_B");
    static aBFu7ll_BFu17ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7ll_BFu17ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_BFu17ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_BFu17ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_BFu17ll_B");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "aBFu7ll_BFu17ll_B");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "aBFu7ll_BFu17ll_B");
    check_field_offset(lv, v3, 3, "aBFu7ll_BFu17ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_BFu17ll_B(Test_aBFu7ll_BFu17ll_B, "aBFu7ll_BFu17ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_BFu1c_B()
{
  {
    init_simple_test("aBFu7ll_BFu1c_B");
    static aBFu7ll_BFu1c_B lv;
    check2(sizeof(lv), 2, "sizeof(aBFu7ll_BFu1c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_BFu1c_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_BFu1c_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_BFu1c_B");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "aBFu7ll_BFu1c_B");
    check_field_offset(lv, v3, 1, "aBFu7ll_BFu1c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_BFu1c_B(Test_aBFu7ll_BFu1c_B, "aBFu7ll_BFu1c_B", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_BFu1i_B()
{
  {
    init_simple_test("aBFu7ll_BFu1i_B");
    static aBFu7ll_BFu1i_B lv;
    check2(sizeof(lv), 2, "sizeof(aBFu7ll_BFu1i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_BFu1i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_BFu1i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_BFu1i_B");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "aBFu7ll_BFu1i_B");
    check_field_offset(lv, v3, 1, "aBFu7ll_BFu1i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_BFu1i_B(Test_aBFu7ll_BFu1i_B, "aBFu7ll_BFu1i_B", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_BFu1ll_B()
{
  {
    init_simple_test("aBFu7ll_BFu1ll_B");
    static aBFu7ll_BFu1ll_B lv;
    check2(sizeof(lv), 2, "sizeof(aBFu7ll_BFu1ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_BFu1ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_BFu1ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_BFu1ll_B");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "aBFu7ll_BFu1ll_B");
    check_field_offset(lv, v3, 1, "aBFu7ll_BFu1ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_BFu1ll_B(Test_aBFu7ll_BFu1ll_B, "aBFu7ll_BFu1ll_B", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_BFu1s_B()
{
  {
    init_simple_test("aBFu7ll_BFu1s_B");
    static aBFu7ll_BFu1s_B lv;
    check2(sizeof(lv), 2, "sizeof(aBFu7ll_BFu1s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_BFu1s_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_BFu1s_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_BFu1s_B");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "aBFu7ll_BFu1s_B");
    check_field_offset(lv, v3, 1, "aBFu7ll_BFu1s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_BFu1s_B(Test_aBFu7ll_BFu1s_B, "aBFu7ll_BFu1s_B", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_BFu31i_B()
{
  {
    init_simple_test("aBFu7ll_BFu31i_B");
    static aBFu7ll_BFu31i_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7ll_BFu31i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_BFu31i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_BFu31i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_BFu31i_B");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "aBFu7ll_BFu31i_B");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "aBFu7ll_BFu31i_B");
    check_field_offset(lv, v3, 5, "aBFu7ll_BFu31i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_BFu31i_B(Test_aBFu7ll_BFu31i_B, "aBFu7ll_BFu31i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_BFu31ll_B()
{
  {
    init_simple_test("aBFu7ll_BFu31ll_B");
    static aBFu7ll_BFu31ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7ll_BFu31ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_BFu31ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_BFu31ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_BFu31ll_B");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "aBFu7ll_BFu31ll_B");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "aBFu7ll_BFu31ll_B");
    check_field_offset(lv, v3, 5, "aBFu7ll_BFu31ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_BFu31ll_B(Test_aBFu7ll_BFu31ll_B, "aBFu7ll_BFu31ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_BFu32i_B()
{
  {
    init_simple_test("aBFu7ll_BFu32i_B");
    static aBFu7ll_BFu32i_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7ll_BFu32i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_BFu32i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_BFu32i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_BFu32i_B");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "aBFu7ll_BFu32i_B");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "aBFu7ll_BFu32i_B");
    check_field_offset(lv, v3, 5, "aBFu7ll_BFu32i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_BFu32i_B(Test_aBFu7ll_BFu32i_B, "aBFu7ll_BFu32i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_BFu32ll_B()
{
  {
    init_simple_test("aBFu7ll_BFu32ll_B");
    static aBFu7ll_BFu32ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7ll_BFu32ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_BFu32ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_BFu32ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_BFu32ll_B");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "aBFu7ll_BFu32ll_B");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "aBFu7ll_BFu32ll_B");
    check_field_offset(lv, v3, 5, "aBFu7ll_BFu32ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_BFu32ll_B(Test_aBFu7ll_BFu32ll_B, "aBFu7ll_BFu32ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_BFu33_B()
{
  {
    init_simple_test("aBFu7ll_BFu33_B");
    static aBFu7ll_BFu33_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7ll_BFu33_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_BFu33_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_BFu33_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_BFu33_B");
    set_bf_and_test(lv, v2, 0, 7, 33, 1, "aBFu7ll_BFu33_B");
    set_bf_and_test(lv, v2, 0, 7, 33, hide_ull(1LL<<32), "aBFu7ll_BFu33_B");
    check_field_offset(lv, v3, 5, "aBFu7ll_BFu33_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_BFu33_B(Test_aBFu7ll_BFu33_B, "aBFu7ll_BFu33_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_BFu7c_B()
{
  {
    init_simple_test("aBFu7ll_BFu7c_B");
    static aBFu7ll_BFu7c_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7ll_BFu7c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_BFu7c_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_BFu7c_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_BFu7c_B");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "aBFu7ll_BFu7c_B");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "aBFu7ll_BFu7c_B");
    check_field_offset(lv, v3, 2, "aBFu7ll_BFu7c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_BFu7c_B(Test_aBFu7ll_BFu7c_B, "aBFu7ll_BFu7c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_BFu7i_B()
{
  {
    init_simple_test("aBFu7ll_BFu7i_B");
    static aBFu7ll_BFu7i_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7ll_BFu7i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_BFu7i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_BFu7i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_BFu7i_B");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "aBFu7ll_BFu7i_B");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "aBFu7ll_BFu7i_B");
    check_field_offset(lv, v3, 2, "aBFu7ll_BFu7i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_BFu7i_B(Test_aBFu7ll_BFu7i_B, "aBFu7ll_BFu7i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_BFu7ll_B()
{
  {
    init_simple_test("aBFu7ll_BFu7ll_B");
    static aBFu7ll_BFu7ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7ll_BFu7ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_BFu7ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_BFu7ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_BFu7ll_B");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "aBFu7ll_BFu7ll_B");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "aBFu7ll_BFu7ll_B");
    check_field_offset(lv, v3, 2, "aBFu7ll_BFu7ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_BFu7ll_B(Test_aBFu7ll_BFu7ll_B, "aBFu7ll_BFu7ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_BFu7s_B()
{
  {
    init_simple_test("aBFu7ll_BFu7s_B");
    static aBFu7ll_BFu7s_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7ll_BFu7s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_BFu7s_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_BFu7s_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_BFu7s_B");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "aBFu7ll_BFu7s_B");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "aBFu7ll_BFu7s_B");
    check_field_offset(lv, v3, 2, "aBFu7ll_BFu7s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_BFu7s_B(Test_aBFu7ll_BFu7s_B, "aBFu7ll_BFu7s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_BFu8c_B()
{
  {
    init_simple_test("aBFu7ll_BFu8c_B");
    static aBFu7ll_BFu8c_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7ll_BFu8c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_BFu8c_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_BFu8c_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_BFu8c_B");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "aBFu7ll_BFu8c_B");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "aBFu7ll_BFu8c_B");
    check_field_offset(lv, v3, 2, "aBFu7ll_BFu8c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_BFu8c_B(Test_aBFu7ll_BFu8c_B, "aBFu7ll_BFu8c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_BFu8i_B()
{
  {
    init_simple_test("aBFu7ll_BFu8i_B");
    static aBFu7ll_BFu8i_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7ll_BFu8i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_BFu8i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_BFu8i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_BFu8i_B");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "aBFu7ll_BFu8i_B");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "aBFu7ll_BFu8i_B");
    check_field_offset(lv, v3, 2, "aBFu7ll_BFu8i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_BFu8i_B(Test_aBFu7ll_BFu8i_B, "aBFu7ll_BFu8i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_BFu8ll_B()
{
  {
    init_simple_test("aBFu7ll_BFu8ll_B");
    static aBFu7ll_BFu8ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7ll_BFu8ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_BFu8ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_BFu8ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_BFu8ll_B");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "aBFu7ll_BFu8ll_B");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "aBFu7ll_BFu8ll_B");
    check_field_offset(lv, v3, 2, "aBFu7ll_BFu8ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_BFu8ll_B(Test_aBFu7ll_BFu8ll_B, "aBFu7ll_BFu8ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_BFu8s_B()
{
  {
    init_simple_test("aBFu7ll_BFu8s_B");
    static aBFu7ll_BFu8s_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7ll_BFu8s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_BFu8s_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_BFu8s_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_BFu8s_B");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "aBFu7ll_BFu8s_B");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "aBFu7ll_BFu8s_B");
    check_field_offset(lv, v3, 2, "aBFu7ll_BFu8s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_BFu8s_B(Test_aBFu7ll_BFu8s_B, "aBFu7ll_BFu8s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_BFu9i_B()
{
  {
    init_simple_test("aBFu7ll_BFu9i_B");
    static aBFu7ll_BFu9i_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7ll_BFu9i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_BFu9i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_BFu9i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_BFu9i_B");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "aBFu7ll_BFu9i_B");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "aBFu7ll_BFu9i_B");
    check_field_offset(lv, v3, 2, "aBFu7ll_BFu9i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_BFu9i_B(Test_aBFu7ll_BFu9i_B, "aBFu7ll_BFu9i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_BFu9ll_B()
{
  {
    init_simple_test("aBFu7ll_BFu9ll_B");
    static aBFu7ll_BFu9ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7ll_BFu9ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_BFu9ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_BFu9ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_BFu9ll_B");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "aBFu7ll_BFu9ll_B");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "aBFu7ll_BFu9ll_B");
    check_field_offset(lv, v3, 2, "aBFu7ll_BFu9ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_BFu9ll_B(Test_aBFu7ll_BFu9ll_B, "aBFu7ll_BFu9ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_BFu9s_B()
{
  {
    init_simple_test("aBFu7ll_BFu9s_B");
    static aBFu7ll_BFu9s_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7ll_BFu9s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_BFu9s_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_BFu9s_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_BFu9s_B");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "aBFu7ll_BFu9s_B");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "aBFu7ll_BFu9s_B");
    check_field_offset(lv, v3, 2, "aBFu7ll_BFu9s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_BFu9s_B(Test_aBFu7ll_BFu9s_B, "aBFu7ll_BFu9s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_C_B()
{
  {
    init_simple_test("aBFu7ll_C_B");
    static aBFu7ll_C_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7ll_C_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_C_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_C_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_C_B");
    check_field_offset(lv, v2, 1, "aBFu7ll_C_B.v2");
    check_field_offset(lv, v3, 2, "aBFu7ll_C_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_C_B(Test_aBFu7ll_C_B, "aBFu7ll_C_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_D_B()
{
  {
    init_simple_test("aBFu7ll_D_B");
    static aBFu7ll_D_B lv;
    check2(sizeof(lv), 10, "sizeof(aBFu7ll_D_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_D_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_D_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_D_B");
    check_field_offset(lv, v2, 1, "aBFu7ll_D_B.v2");
    check_field_offset(lv, v3, 9, "aBFu7ll_D_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_D_B(Test_aBFu7ll_D_B, "aBFu7ll_D_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_F_B()
{
  {
    init_simple_test("aBFu7ll_F_B");
    static aBFu7ll_F_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7ll_F_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_F_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_F_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_F_B");
    check_field_offset(lv, v2, 1, "aBFu7ll_F_B.v2");
    check_field_offset(lv, v3, 5, "aBFu7ll_F_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_F_B(Test_aBFu7ll_F_B, "aBFu7ll_F_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_I_B()
{
  {
    init_simple_test("aBFu7ll_I_B");
    static aBFu7ll_I_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7ll_I_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_I_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_I_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_I_B");
    check_field_offset(lv, v2, 1, "aBFu7ll_I_B.v2");
    check_field_offset(lv, v3, 5, "aBFu7ll_I_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_I_B(Test_aBFu7ll_I_B, "aBFu7ll_I_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_Ip_B()
{
  {
    init_simple_test("aBFu7ll_Ip_B");
    static aBFu7ll_Ip_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu7ll_Ip_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_Ip_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_Ip_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_Ip_B");
    check_field_offset(lv, v2, 1, "aBFu7ll_Ip_B.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aBFu7ll_Ip_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_Ip_B(Test_aBFu7ll_Ip_B, "aBFu7ll_Ip_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_L_B()
{
  {
    init_simple_test("aBFu7ll_L_B");
    static aBFu7ll_L_B lv;
    check2(sizeof(lv), 10, "sizeof(aBFu7ll_L_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_L_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_L_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_L_B");
    check_field_offset(lv, v2, 1, "aBFu7ll_L_B.v2");
    check_field_offset(lv, v3, 9, "aBFu7ll_L_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_L_B(Test_aBFu7ll_L_B, "aBFu7ll_L_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_S_B()
{
  {
    init_simple_test("aBFu7ll_S_B");
    static aBFu7ll_S_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7ll_S_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_S_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_S_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_S_B");
    check_field_offset(lv, v2, 1, "aBFu7ll_S_B.v2");
    check_field_offset(lv, v3, 3, "aBFu7ll_S_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_S_B(Test_aBFu7ll_S_B, "aBFu7ll_S_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_Uc_B()
{
  {
    init_simple_test("aBFu7ll_Uc_B");
    static aBFu7ll_Uc_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7ll_Uc_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_Uc_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_Uc_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_Uc_B");
    check_field_offset(lv, v2, 1, "aBFu7ll_Uc_B.v2");
    check_field_offset(lv, v3, 2, "aBFu7ll_Uc_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_Uc_B(Test_aBFu7ll_Uc_B, "aBFu7ll_Uc_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_Ui_B()
{
  {
    init_simple_test("aBFu7ll_Ui_B");
    static aBFu7ll_Ui_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7ll_Ui_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_Ui_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_Ui_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_Ui_B");
    check_field_offset(lv, v2, 1, "aBFu7ll_Ui_B.v2");
    check_field_offset(lv, v3, 5, "aBFu7ll_Ui_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_Ui_B(Test_aBFu7ll_Ui_B, "aBFu7ll_Ui_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_Ul_B()
{
  {
    init_simple_test("aBFu7ll_Ul_B");
    static aBFu7ll_Ul_B lv;
    check2(sizeof(lv), 10, "sizeof(aBFu7ll_Ul_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_Ul_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_Ul_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_Ul_B");
    check_field_offset(lv, v2, 1, "aBFu7ll_Ul_B.v2");
    check_field_offset(lv, v3, 9, "aBFu7ll_Ul_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_Ul_B(Test_aBFu7ll_Ul_B, "aBFu7ll_Ul_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_Us_B()
{
  {
    init_simple_test("aBFu7ll_Us_B");
    static aBFu7ll_Us_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7ll_Us_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_Us_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_Us_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_Us_B");
    check_field_offset(lv, v2, 1, "aBFu7ll_Us_B.v2");
    check_field_offset(lv, v3, 3, "aBFu7ll_Us_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_Us_B(Test_aBFu7ll_Us_B, "aBFu7ll_Us_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7ll_Vp_B()
{
  {
    init_simple_test("aBFu7ll_Vp_B");
    static aBFu7ll_Vp_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu7ll_Vp_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7ll_Vp_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7ll_Vp_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7ll_Vp_B");
    check_field_offset(lv, v2, 1, "aBFu7ll_Vp_B.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aBFu7ll_Vp_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7ll_Vp_B(Test_aBFu7ll_Vp_B, "aBFu7ll_Vp_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B()
{
  {
    init_simple_test("aBFu7s_B");
    static aBFu7s_B lv;
    check2(sizeof(lv), 2, "sizeof(aBFu7s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B");
    check_field_offset(lv, v2, 1, "aBFu7s_B.v2");
  }
}
static Arrange_To_Call_Me vaBFu7s_B(Test_aBFu7s_B, "aBFu7s_B", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_B()
{
  {
    init_simple_test("aBFu7s_B_B");
    static aBFu7s_B_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7s_B_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_B");
    check_field_offset(lv, v2, 1, "aBFu7s_B_B.v2");
    check_field_offset(lv, v3, 2, "aBFu7s_B_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_B(Test_aBFu7s_B_B, "aBFu7s_B_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_BFu15i()
{
  {
    init_simple_test("aBFu7s_B_BFu15i");
    static aBFu7s_B_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7s_B_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu15i");
    check_field_offset(lv, v2, 1, "aBFu7s_B_BFu15i.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aBFu7s_B_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aBFu7s_B_BFu15i");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_BFu15i(Test_aBFu7s_B_BFu15i, "aBFu7s_B_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_BFu15ll()
{
  {
    init_simple_test("aBFu7s_B_BFu15ll");
    static aBFu7s_B_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7s_B_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu15ll");
    check_field_offset(lv, v2, 1, "aBFu7s_B_BFu15ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aBFu7s_B_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aBFu7s_B_BFu15ll");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_BFu15ll(Test_aBFu7s_B_BFu15ll, "aBFu7s_B_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_BFu15s()
{
  {
    init_simple_test("aBFu7s_B_BFu15s");
    static aBFu7s_B_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7s_B_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu15s");
    check_field_offset(lv, v2, 1, "aBFu7s_B_BFu15s.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aBFu7s_B_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aBFu7s_B_BFu15s");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_BFu15s(Test_aBFu7s_B_BFu15s, "aBFu7s_B_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_BFu16i()
{
  {
    init_simple_test("aBFu7s_B_BFu16i");
    static aBFu7s_B_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7s_B_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu16i");
    check_field_offset(lv, v2, 1, "aBFu7s_B_BFu16i.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aBFu7s_B_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aBFu7s_B_BFu16i");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_BFu16i(Test_aBFu7s_B_BFu16i, "aBFu7s_B_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_BFu16ll()
{
  {
    init_simple_test("aBFu7s_B_BFu16ll");
    static aBFu7s_B_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7s_B_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu16ll");
    check_field_offset(lv, v2, 1, "aBFu7s_B_BFu16ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aBFu7s_B_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aBFu7s_B_BFu16ll");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_BFu16ll(Test_aBFu7s_B_BFu16ll, "aBFu7s_B_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_BFu16s()
{
  {
    init_simple_test("aBFu7s_B_BFu16s");
    static aBFu7s_B_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7s_B_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu16s");
    check_field_offset(lv, v2, 1, "aBFu7s_B_BFu16s.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aBFu7s_B_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aBFu7s_B_BFu16s");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_BFu16s(Test_aBFu7s_B_BFu16s, "aBFu7s_B_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_BFu17i()
{
  {
    init_simple_test("aBFu7s_B_BFu17i");
    static aBFu7s_B_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu7s_B_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu17i");
    check_field_offset(lv, v2, 1, "aBFu7s_B_BFu17i.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aBFu7s_B_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aBFu7s_B_BFu17i");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_BFu17i(Test_aBFu7s_B_BFu17i, "aBFu7s_B_BFu17i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_BFu17ll()
{
  {
    init_simple_test("aBFu7s_B_BFu17ll");
    static aBFu7s_B_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu7s_B_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu17ll");
    check_field_offset(lv, v2, 1, "aBFu7s_B_BFu17ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aBFu7s_B_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aBFu7s_B_BFu17ll");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_BFu17ll(Test_aBFu7s_B_BFu17ll, "aBFu7s_B_BFu17ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_BFu1c()
{
  {
    init_simple_test("aBFu7s_B_BFu1c");
    static aBFu7s_B_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7s_B_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu1c");
    check_field_offset(lv, v2, 1, "aBFu7s_B_BFu1c.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu7s_B_BFu1c");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_BFu1c(Test_aBFu7s_B_BFu1c, "aBFu7s_B_BFu1c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_BFu1i()
{
  {
    init_simple_test("aBFu7s_B_BFu1i");
    static aBFu7s_B_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7s_B_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu1i");
    check_field_offset(lv, v2, 1, "aBFu7s_B_BFu1i.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu7s_B_BFu1i");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_BFu1i(Test_aBFu7s_B_BFu1i, "aBFu7s_B_BFu1i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_BFu1ll()
{
  {
    init_simple_test("aBFu7s_B_BFu1ll");
    static aBFu7s_B_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7s_B_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu1ll");
    check_field_offset(lv, v2, 1, "aBFu7s_B_BFu1ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu7s_B_BFu1ll");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_BFu1ll(Test_aBFu7s_B_BFu1ll, "aBFu7s_B_BFu1ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_BFu1s()
{
  {
    init_simple_test("aBFu7s_B_BFu1s");
    static aBFu7s_B_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7s_B_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu1s");
    check_field_offset(lv, v2, 1, "aBFu7s_B_BFu1s.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu7s_B_BFu1s");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_BFu1s(Test_aBFu7s_B_BFu1s, "aBFu7s_B_BFu1s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_BFu31i()
{
  {
    init_simple_test("aBFu7s_B_BFu31i");
    static aBFu7s_B_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7s_B_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu31i");
    check_field_offset(lv, v2, 1, "aBFu7s_B_BFu31i.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aBFu7s_B_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aBFu7s_B_BFu31i");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_BFu31i(Test_aBFu7s_B_BFu31i, "aBFu7s_B_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_BFu31ll()
{
  {
    init_simple_test("aBFu7s_B_BFu31ll");
    static aBFu7s_B_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7s_B_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu31ll");
    check_field_offset(lv, v2, 1, "aBFu7s_B_BFu31ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aBFu7s_B_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aBFu7s_B_BFu31ll");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_BFu31ll(Test_aBFu7s_B_BFu31ll, "aBFu7s_B_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_BFu32i()
{
  {
    init_simple_test("aBFu7s_B_BFu32i");
    static aBFu7s_B_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7s_B_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu32i");
    check_field_offset(lv, v2, 1, "aBFu7s_B_BFu32i.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aBFu7s_B_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aBFu7s_B_BFu32i");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_BFu32i(Test_aBFu7s_B_BFu32i, "aBFu7s_B_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_BFu32ll()
{
  {
    init_simple_test("aBFu7s_B_BFu32ll");
    static aBFu7s_B_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7s_B_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu32ll");
    check_field_offset(lv, v2, 1, "aBFu7s_B_BFu32ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aBFu7s_B_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aBFu7s_B_BFu32ll");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_BFu32ll(Test_aBFu7s_B_BFu32ll, "aBFu7s_B_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_BFu33()
{
  {
    init_simple_test("aBFu7s_B_BFu33");
    static aBFu7s_B_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aBFu7s_B_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu33");
    check_field_offset(lv, v2, 1, "aBFu7s_B_BFu33.v2");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "aBFu7s_B_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "aBFu7s_B_BFu33");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_BFu33(Test_aBFu7s_B_BFu33, "aBFu7s_B_BFu33", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_BFu7c()
{
  {
    init_simple_test("aBFu7s_B_BFu7c");
    static aBFu7s_B_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7s_B_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu7c");
    check_field_offset(lv, v2, 1, "aBFu7s_B_BFu7c.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu7s_B_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu7c");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_BFu7c(Test_aBFu7s_B_BFu7c, "aBFu7s_B_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_BFu7i()
{
  {
    init_simple_test("aBFu7s_B_BFu7i");
    static aBFu7s_B_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7s_B_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu7i");
    check_field_offset(lv, v2, 1, "aBFu7s_B_BFu7i.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu7s_B_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu7i");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_BFu7i(Test_aBFu7s_B_BFu7i, "aBFu7s_B_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_BFu7ll()
{
  {
    init_simple_test("aBFu7s_B_BFu7ll");
    static aBFu7s_B_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7s_B_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu7ll");
    check_field_offset(lv, v2, 1, "aBFu7s_B_BFu7ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu7s_B_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu7ll");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_BFu7ll(Test_aBFu7s_B_BFu7ll, "aBFu7s_B_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_BFu7s()
{
  {
    init_simple_test("aBFu7s_B_BFu7s");
    static aBFu7s_B_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7s_B_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu7s");
    check_field_offset(lv, v2, 1, "aBFu7s_B_BFu7s.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu7s_B_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu7s");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_BFu7s(Test_aBFu7s_B_BFu7s, "aBFu7s_B_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_BFu8c()
{
  {
    init_simple_test("aBFu7s_B_BFu8c");
    static aBFu7s_B_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7s_B_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu8c");
    check_field_offset(lv, v2, 1, "aBFu7s_B_BFu8c.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu7s_B_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu7s_B_BFu8c");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_BFu8c(Test_aBFu7s_B_BFu8c, "aBFu7s_B_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_BFu8i()
{
  {
    init_simple_test("aBFu7s_B_BFu8i");
    static aBFu7s_B_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7s_B_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu8i");
    check_field_offset(lv, v2, 1, "aBFu7s_B_BFu8i.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu7s_B_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu7s_B_BFu8i");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_BFu8i(Test_aBFu7s_B_BFu8i, "aBFu7s_B_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_BFu8ll()
{
  {
    init_simple_test("aBFu7s_B_BFu8ll");
    static aBFu7s_B_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7s_B_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu8ll");
    check_field_offset(lv, v2, 1, "aBFu7s_B_BFu8ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu7s_B_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu7s_B_BFu8ll");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_BFu8ll(Test_aBFu7s_B_BFu8ll, "aBFu7s_B_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_BFu8s()
{
  {
    init_simple_test("aBFu7s_B_BFu8s");
    static aBFu7s_B_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7s_B_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu8s");
    check_field_offset(lv, v2, 1, "aBFu7s_B_BFu8s.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu7s_B_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu7s_B_BFu8s");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_BFu8s(Test_aBFu7s_B_BFu8s, "aBFu7s_B_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_BFu9i()
{
  {
    init_simple_test("aBFu7s_B_BFu9i");
    static aBFu7s_B_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7s_B_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu9i");
    check_field_offset(lv, v2, 1, "aBFu7s_B_BFu9i.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aBFu7s_B_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aBFu7s_B_BFu9i");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_BFu9i(Test_aBFu7s_B_BFu9i, "aBFu7s_B_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_BFu9ll()
{
  {
    init_simple_test("aBFu7s_B_BFu9ll");
    static aBFu7s_B_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7s_B_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu9ll");
    check_field_offset(lv, v2, 1, "aBFu7s_B_BFu9ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aBFu7s_B_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aBFu7s_B_BFu9ll");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_BFu9ll(Test_aBFu7s_B_BFu9ll, "aBFu7s_B_BFu9ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_BFu9s()
{
  {
    init_simple_test("aBFu7s_B_BFu9s");
    static aBFu7s_B_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7s_B_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_BFu9s");
    check_field_offset(lv, v2, 1, "aBFu7s_B_BFu9s.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aBFu7s_B_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aBFu7s_B_BFu9s");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_BFu9s(Test_aBFu7s_B_BFu9s, "aBFu7s_B_BFu9s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_C()
{
  {
    init_simple_test("aBFu7s_B_C");
    static aBFu7s_B_C lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7s_B_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_C)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_C");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_C");
    check_field_offset(lv, v2, 1, "aBFu7s_B_C.v2");
    check_field_offset(lv, v3, 2, "aBFu7s_B_C.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_C(Test_aBFu7s_B_C, "aBFu7s_B_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_D()
{
  {
    init_simple_test("aBFu7s_B_D");
    static aBFu7s_B_D lv;
    check2(sizeof(lv), 10, "sizeof(aBFu7s_B_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_D)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_D");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_D");
    check_field_offset(lv, v2, 1, "aBFu7s_B_D.v2");
    check_field_offset(lv, v3, 2, "aBFu7s_B_D.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_D(Test_aBFu7s_B_D, "aBFu7s_B_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_F()
{
  {
    init_simple_test("aBFu7s_B_F");
    static aBFu7s_B_F lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7s_B_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_F)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_F");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_F");
    check_field_offset(lv, v2, 1, "aBFu7s_B_F.v2");
    check_field_offset(lv, v3, 2, "aBFu7s_B_F.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_F(Test_aBFu7s_B_F, "aBFu7s_B_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_I()
{
  {
    init_simple_test("aBFu7s_B_I");
    static aBFu7s_B_I lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7s_B_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_I)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_I");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_I");
    check_field_offset(lv, v2, 1, "aBFu7s_B_I.v2");
    check_field_offset(lv, v3, 2, "aBFu7s_B_I.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_I(Test_aBFu7s_B_I, "aBFu7s_B_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_Ip()
{
  {
    init_simple_test("aBFu7s_B_Ip");
    static aBFu7s_B_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu7s_B_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_Ip");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_Ip");
    check_field_offset(lv, v2, 1, "aBFu7s_B_Ip.v2");
    check_field_offset(lv, v3, 2, "aBFu7s_B_Ip.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_Ip(Test_aBFu7s_B_Ip, "aBFu7s_B_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_L()
{
  {
    init_simple_test("aBFu7s_B_L");
    static aBFu7s_B_L lv;
    check2(sizeof(lv), 10, "sizeof(aBFu7s_B_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_L)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_L");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_L");
    check_field_offset(lv, v2, 1, "aBFu7s_B_L.v2");
    check_field_offset(lv, v3, 2, "aBFu7s_B_L.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_L(Test_aBFu7s_B_L, "aBFu7s_B_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_S()
{
  {
    init_simple_test("aBFu7s_B_S");
    static aBFu7s_B_S lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7s_B_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_S)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_S");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_S");
    check_field_offset(lv, v2, 1, "aBFu7s_B_S.v2");
    check_field_offset(lv, v3, 2, "aBFu7s_B_S.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_S(Test_aBFu7s_B_S, "aBFu7s_B_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_Uc()
{
  {
    init_simple_test("aBFu7s_B_Uc");
    static aBFu7s_B_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7s_B_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_Uc");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_Uc");
    check_field_offset(lv, v2, 1, "aBFu7s_B_Uc.v2");
    check_field_offset(lv, v3, 2, "aBFu7s_B_Uc.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_Uc(Test_aBFu7s_B_Uc, "aBFu7s_B_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_Ui()
{
  {
    init_simple_test("aBFu7s_B_Ui");
    static aBFu7s_B_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7s_B_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_Ui");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_Ui");
    check_field_offset(lv, v2, 1, "aBFu7s_B_Ui.v2");
    check_field_offset(lv, v3, 2, "aBFu7s_B_Ui.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_Ui(Test_aBFu7s_B_Ui, "aBFu7s_B_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_Ul()
{
  {
    init_simple_test("aBFu7s_B_Ul");
    static aBFu7s_B_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aBFu7s_B_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_Ul");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_Ul");
    check_field_offset(lv, v2, 1, "aBFu7s_B_Ul.v2");
    check_field_offset(lv, v3, 2, "aBFu7s_B_Ul.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_Ul(Test_aBFu7s_B_Ul, "aBFu7s_B_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_Us()
{
  {
    init_simple_test("aBFu7s_B_Us");
    static aBFu7s_B_Us lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7s_B_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_Us)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_Us");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_Us");
    check_field_offset(lv, v2, 1, "aBFu7s_B_Us.v2");
    check_field_offset(lv, v3, 2, "aBFu7s_B_Us.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_Us(Test_aBFu7s_B_Us, "aBFu7s_B_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_B_Vp()
{
  {
    init_simple_test("aBFu7s_B_Vp");
    static aBFu7s_B_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu7s_B_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_B_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_B_Vp");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_B_Vp");
    check_field_offset(lv, v2, 1, "aBFu7s_B_Vp.v2");
    check_field_offset(lv, v3, 2, "aBFu7s_B_Vp.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_B_Vp(Test_aBFu7s_B_Vp, "aBFu7s_B_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_BFu15i_B()
{
  {
    init_simple_test("aBFu7s_BFu15i_B");
    static aBFu7s_BFu15i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7s_BFu15i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_BFu15i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_BFu15i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_BFu15i_B");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "aBFu7s_BFu15i_B");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "aBFu7s_BFu15i_B");
    check_field_offset(lv, v3, 3, "aBFu7s_BFu15i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_BFu15i_B(Test_aBFu7s_BFu15i_B, "aBFu7s_BFu15i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_BFu15ll_B()
{
  {
    init_simple_test("aBFu7s_BFu15ll_B");
    static aBFu7s_BFu15ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7s_BFu15ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_BFu15ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_BFu15ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_BFu15ll_B");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "aBFu7s_BFu15ll_B");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "aBFu7s_BFu15ll_B");
    check_field_offset(lv, v3, 3, "aBFu7s_BFu15ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_BFu15ll_B(Test_aBFu7s_BFu15ll_B, "aBFu7s_BFu15ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_BFu15s_B()
{
  {
    init_simple_test("aBFu7s_BFu15s_B");
    static aBFu7s_BFu15s_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7s_BFu15s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_BFu15s_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_BFu15s_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_BFu15s_B");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "aBFu7s_BFu15s_B");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "aBFu7s_BFu15s_B");
    check_field_offset(lv, v3, 3, "aBFu7s_BFu15s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_BFu15s_B(Test_aBFu7s_BFu15s_B, "aBFu7s_BFu15s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_BFu16i_B()
{
  {
    init_simple_test("aBFu7s_BFu16i_B");
    static aBFu7s_BFu16i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7s_BFu16i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_BFu16i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_BFu16i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_BFu16i_B");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "aBFu7s_BFu16i_B");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "aBFu7s_BFu16i_B");
    check_field_offset(lv, v3, 3, "aBFu7s_BFu16i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_BFu16i_B(Test_aBFu7s_BFu16i_B, "aBFu7s_BFu16i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_BFu16ll_B()
{
  {
    init_simple_test("aBFu7s_BFu16ll_B");
    static aBFu7s_BFu16ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7s_BFu16ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_BFu16ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_BFu16ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_BFu16ll_B");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "aBFu7s_BFu16ll_B");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "aBFu7s_BFu16ll_B");
    check_field_offset(lv, v3, 3, "aBFu7s_BFu16ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_BFu16ll_B(Test_aBFu7s_BFu16ll_B, "aBFu7s_BFu16ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_BFu16s_B()
{
  {
    init_simple_test("aBFu7s_BFu16s_B");
    static aBFu7s_BFu16s_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7s_BFu16s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_BFu16s_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_BFu16s_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_BFu16s_B");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "aBFu7s_BFu16s_B");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "aBFu7s_BFu16s_B");
    check_field_offset(lv, v3, 3, "aBFu7s_BFu16s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_BFu16s_B(Test_aBFu7s_BFu16s_B, "aBFu7s_BFu16s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_BFu17i_B()
{
  {
    init_simple_test("aBFu7s_BFu17i_B");
    static aBFu7s_BFu17i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7s_BFu17i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_BFu17i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_BFu17i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_BFu17i_B");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "aBFu7s_BFu17i_B");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "aBFu7s_BFu17i_B");
    check_field_offset(lv, v3, 3, "aBFu7s_BFu17i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_BFu17i_B(Test_aBFu7s_BFu17i_B, "aBFu7s_BFu17i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_BFu17ll_B()
{
  {
    init_simple_test("aBFu7s_BFu17ll_B");
    static aBFu7s_BFu17ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7s_BFu17ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_BFu17ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_BFu17ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_BFu17ll_B");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "aBFu7s_BFu17ll_B");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "aBFu7s_BFu17ll_B");
    check_field_offset(lv, v3, 3, "aBFu7s_BFu17ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_BFu17ll_B(Test_aBFu7s_BFu17ll_B, "aBFu7s_BFu17ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_BFu1c_B()
{
  {
    init_simple_test("aBFu7s_BFu1c_B");
    static aBFu7s_BFu1c_B lv;
    check2(sizeof(lv), 2, "sizeof(aBFu7s_BFu1c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_BFu1c_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_BFu1c_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_BFu1c_B");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "aBFu7s_BFu1c_B");
    check_field_offset(lv, v3, 1, "aBFu7s_BFu1c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_BFu1c_B(Test_aBFu7s_BFu1c_B, "aBFu7s_BFu1c_B", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_BFu1i_B()
{
  {
    init_simple_test("aBFu7s_BFu1i_B");
    static aBFu7s_BFu1i_B lv;
    check2(sizeof(lv), 2, "sizeof(aBFu7s_BFu1i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_BFu1i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_BFu1i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_BFu1i_B");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "aBFu7s_BFu1i_B");
    check_field_offset(lv, v3, 1, "aBFu7s_BFu1i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_BFu1i_B(Test_aBFu7s_BFu1i_B, "aBFu7s_BFu1i_B", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_BFu1ll_B()
{
  {
    init_simple_test("aBFu7s_BFu1ll_B");
    static aBFu7s_BFu1ll_B lv;
    check2(sizeof(lv), 2, "sizeof(aBFu7s_BFu1ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_BFu1ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_BFu1ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_BFu1ll_B");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "aBFu7s_BFu1ll_B");
    check_field_offset(lv, v3, 1, "aBFu7s_BFu1ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_BFu1ll_B(Test_aBFu7s_BFu1ll_B, "aBFu7s_BFu1ll_B", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_BFu1s_B()
{
  {
    init_simple_test("aBFu7s_BFu1s_B");
    static aBFu7s_BFu1s_B lv;
    check2(sizeof(lv), 2, "sizeof(aBFu7s_BFu1s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_BFu1s_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_BFu1s_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_BFu1s_B");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "aBFu7s_BFu1s_B");
    check_field_offset(lv, v3, 1, "aBFu7s_BFu1s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_BFu1s_B(Test_aBFu7s_BFu1s_B, "aBFu7s_BFu1s_B", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_BFu31i_B()
{
  {
    init_simple_test("aBFu7s_BFu31i_B");
    static aBFu7s_BFu31i_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7s_BFu31i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_BFu31i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_BFu31i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_BFu31i_B");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "aBFu7s_BFu31i_B");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "aBFu7s_BFu31i_B");
    check_field_offset(lv, v3, 5, "aBFu7s_BFu31i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_BFu31i_B(Test_aBFu7s_BFu31i_B, "aBFu7s_BFu31i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_BFu31ll_B()
{
  {
    init_simple_test("aBFu7s_BFu31ll_B");
    static aBFu7s_BFu31ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7s_BFu31ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_BFu31ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_BFu31ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_BFu31ll_B");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "aBFu7s_BFu31ll_B");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "aBFu7s_BFu31ll_B");
    check_field_offset(lv, v3, 5, "aBFu7s_BFu31ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_BFu31ll_B(Test_aBFu7s_BFu31ll_B, "aBFu7s_BFu31ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_BFu32i_B()
{
  {
    init_simple_test("aBFu7s_BFu32i_B");
    static aBFu7s_BFu32i_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7s_BFu32i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_BFu32i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_BFu32i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_BFu32i_B");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "aBFu7s_BFu32i_B");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "aBFu7s_BFu32i_B");
    check_field_offset(lv, v3, 5, "aBFu7s_BFu32i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_BFu32i_B(Test_aBFu7s_BFu32i_B, "aBFu7s_BFu32i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_BFu32ll_B()
{
  {
    init_simple_test("aBFu7s_BFu32ll_B");
    static aBFu7s_BFu32ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7s_BFu32ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_BFu32ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_BFu32ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_BFu32ll_B");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "aBFu7s_BFu32ll_B");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "aBFu7s_BFu32ll_B");
    check_field_offset(lv, v3, 5, "aBFu7s_BFu32ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_BFu32ll_B(Test_aBFu7s_BFu32ll_B, "aBFu7s_BFu32ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_BFu33_B()
{
  {
    init_simple_test("aBFu7s_BFu33_B");
    static aBFu7s_BFu33_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7s_BFu33_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_BFu33_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_BFu33_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_BFu33_B");
    set_bf_and_test(lv, v2, 0, 7, 33, 1, "aBFu7s_BFu33_B");
    set_bf_and_test(lv, v2, 0, 7, 33, hide_ull(1LL<<32), "aBFu7s_BFu33_B");
    check_field_offset(lv, v3, 5, "aBFu7s_BFu33_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_BFu33_B(Test_aBFu7s_BFu33_B, "aBFu7s_BFu33_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_BFu7c_B()
{
  {
    init_simple_test("aBFu7s_BFu7c_B");
    static aBFu7s_BFu7c_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7s_BFu7c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_BFu7c_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_BFu7c_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_BFu7c_B");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "aBFu7s_BFu7c_B");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "aBFu7s_BFu7c_B");
    check_field_offset(lv, v3, 2, "aBFu7s_BFu7c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_BFu7c_B(Test_aBFu7s_BFu7c_B, "aBFu7s_BFu7c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_BFu7i_B()
{
  {
    init_simple_test("aBFu7s_BFu7i_B");
    static aBFu7s_BFu7i_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7s_BFu7i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_BFu7i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_BFu7i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_BFu7i_B");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "aBFu7s_BFu7i_B");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "aBFu7s_BFu7i_B");
    check_field_offset(lv, v3, 2, "aBFu7s_BFu7i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_BFu7i_B(Test_aBFu7s_BFu7i_B, "aBFu7s_BFu7i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_BFu7ll_B()
{
  {
    init_simple_test("aBFu7s_BFu7ll_B");
    static aBFu7s_BFu7ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7s_BFu7ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_BFu7ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_BFu7ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_BFu7ll_B");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "aBFu7s_BFu7ll_B");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "aBFu7s_BFu7ll_B");
    check_field_offset(lv, v3, 2, "aBFu7s_BFu7ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_BFu7ll_B(Test_aBFu7s_BFu7ll_B, "aBFu7s_BFu7ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_BFu7s_B()
{
  {
    init_simple_test("aBFu7s_BFu7s_B");
    static aBFu7s_BFu7s_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7s_BFu7s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_BFu7s_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_BFu7s_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_BFu7s_B");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "aBFu7s_BFu7s_B");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "aBFu7s_BFu7s_B");
    check_field_offset(lv, v3, 2, "aBFu7s_BFu7s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_BFu7s_B(Test_aBFu7s_BFu7s_B, "aBFu7s_BFu7s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_BFu8c_B()
{
  {
    init_simple_test("aBFu7s_BFu8c_B");
    static aBFu7s_BFu8c_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7s_BFu8c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_BFu8c_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_BFu8c_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_BFu8c_B");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "aBFu7s_BFu8c_B");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "aBFu7s_BFu8c_B");
    check_field_offset(lv, v3, 2, "aBFu7s_BFu8c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_BFu8c_B(Test_aBFu7s_BFu8c_B, "aBFu7s_BFu8c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_BFu8i_B()
{
  {
    init_simple_test("aBFu7s_BFu8i_B");
    static aBFu7s_BFu8i_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7s_BFu8i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_BFu8i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_BFu8i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_BFu8i_B");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "aBFu7s_BFu8i_B");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "aBFu7s_BFu8i_B");
    check_field_offset(lv, v3, 2, "aBFu7s_BFu8i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_BFu8i_B(Test_aBFu7s_BFu8i_B, "aBFu7s_BFu8i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_BFu8ll_B()
{
  {
    init_simple_test("aBFu7s_BFu8ll_B");
    static aBFu7s_BFu8ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7s_BFu8ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_BFu8ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_BFu8ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_BFu8ll_B");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "aBFu7s_BFu8ll_B");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "aBFu7s_BFu8ll_B");
    check_field_offset(lv, v3, 2, "aBFu7s_BFu8ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_BFu8ll_B(Test_aBFu7s_BFu8ll_B, "aBFu7s_BFu8ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_BFu8s_B()
{
  {
    init_simple_test("aBFu7s_BFu8s_B");
    static aBFu7s_BFu8s_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7s_BFu8s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_BFu8s_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_BFu8s_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_BFu8s_B");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "aBFu7s_BFu8s_B");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "aBFu7s_BFu8s_B");
    check_field_offset(lv, v3, 2, "aBFu7s_BFu8s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_BFu8s_B(Test_aBFu7s_BFu8s_B, "aBFu7s_BFu8s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_BFu9i_B()
{
  {
    init_simple_test("aBFu7s_BFu9i_B");
    static aBFu7s_BFu9i_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7s_BFu9i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_BFu9i_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_BFu9i_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_BFu9i_B");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "aBFu7s_BFu9i_B");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "aBFu7s_BFu9i_B");
    check_field_offset(lv, v3, 2, "aBFu7s_BFu9i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_BFu9i_B(Test_aBFu7s_BFu9i_B, "aBFu7s_BFu9i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_BFu9ll_B()
{
  {
    init_simple_test("aBFu7s_BFu9ll_B");
    static aBFu7s_BFu9ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7s_BFu9ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_BFu9ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_BFu9ll_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_BFu9ll_B");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "aBFu7s_BFu9ll_B");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "aBFu7s_BFu9ll_B");
    check_field_offset(lv, v3, 2, "aBFu7s_BFu9ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_BFu9ll_B(Test_aBFu7s_BFu9ll_B, "aBFu7s_BFu9ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_BFu9s_B()
{
  {
    init_simple_test("aBFu7s_BFu9s_B");
    static aBFu7s_BFu9s_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7s_BFu9s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_BFu9s_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_BFu9s_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_BFu9s_B");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "aBFu7s_BFu9s_B");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "aBFu7s_BFu9s_B");
    check_field_offset(lv, v3, 2, "aBFu7s_BFu9s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_BFu9s_B(Test_aBFu7s_BFu9s_B, "aBFu7s_BFu9s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_C_B()
{
  {
    init_simple_test("aBFu7s_C_B");
    static aBFu7s_C_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7s_C_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_C_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_C_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_C_B");
    check_field_offset(lv, v2, 1, "aBFu7s_C_B.v2");
    check_field_offset(lv, v3, 2, "aBFu7s_C_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_C_B(Test_aBFu7s_C_B, "aBFu7s_C_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_D_B()
{
  {
    init_simple_test("aBFu7s_D_B");
    static aBFu7s_D_B lv;
    check2(sizeof(lv), 10, "sizeof(aBFu7s_D_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_D_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_D_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_D_B");
    check_field_offset(lv, v2, 1, "aBFu7s_D_B.v2");
    check_field_offset(lv, v3, 9, "aBFu7s_D_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_D_B(Test_aBFu7s_D_B, "aBFu7s_D_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_F_B()
{
  {
    init_simple_test("aBFu7s_F_B");
    static aBFu7s_F_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7s_F_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_F_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_F_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_F_B");
    check_field_offset(lv, v2, 1, "aBFu7s_F_B.v2");
    check_field_offset(lv, v3, 5, "aBFu7s_F_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_F_B(Test_aBFu7s_F_B, "aBFu7s_F_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_I_B()
{
  {
    init_simple_test("aBFu7s_I_B");
    static aBFu7s_I_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7s_I_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_I_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_I_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_I_B");
    check_field_offset(lv, v2, 1, "aBFu7s_I_B.v2");
    check_field_offset(lv, v3, 5, "aBFu7s_I_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_I_B(Test_aBFu7s_I_B, "aBFu7s_I_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_Ip_B()
{
  {
    init_simple_test("aBFu7s_Ip_B");
    static aBFu7s_Ip_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu7s_Ip_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_Ip_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_Ip_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_Ip_B");
    check_field_offset(lv, v2, 1, "aBFu7s_Ip_B.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aBFu7s_Ip_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_Ip_B(Test_aBFu7s_Ip_B, "aBFu7s_Ip_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_L_B()
{
  {
    init_simple_test("aBFu7s_L_B");
    static aBFu7s_L_B lv;
    check2(sizeof(lv), 10, "sizeof(aBFu7s_L_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_L_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_L_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_L_B");
    check_field_offset(lv, v2, 1, "aBFu7s_L_B.v2");
    check_field_offset(lv, v3, 9, "aBFu7s_L_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_L_B(Test_aBFu7s_L_B, "aBFu7s_L_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_S_B()
{
  {
    init_simple_test("aBFu7s_S_B");
    static aBFu7s_S_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7s_S_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_S_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_S_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_S_B");
    check_field_offset(lv, v2, 1, "aBFu7s_S_B.v2");
    check_field_offset(lv, v3, 3, "aBFu7s_S_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_S_B(Test_aBFu7s_S_B, "aBFu7s_S_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_Uc_B()
{
  {
    init_simple_test("aBFu7s_Uc_B");
    static aBFu7s_Uc_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu7s_Uc_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_Uc_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_Uc_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_Uc_B");
    check_field_offset(lv, v2, 1, "aBFu7s_Uc_B.v2");
    check_field_offset(lv, v3, 2, "aBFu7s_Uc_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_Uc_B(Test_aBFu7s_Uc_B, "aBFu7s_Uc_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_Ui_B()
{
  {
    init_simple_test("aBFu7s_Ui_B");
    static aBFu7s_Ui_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu7s_Ui_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_Ui_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_Ui_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_Ui_B");
    check_field_offset(lv, v2, 1, "aBFu7s_Ui_B.v2");
    check_field_offset(lv, v3, 5, "aBFu7s_Ui_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_Ui_B(Test_aBFu7s_Ui_B, "aBFu7s_Ui_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_Ul_B()
{
  {
    init_simple_test("aBFu7s_Ul_B");
    static aBFu7s_Ul_B lv;
    check2(sizeof(lv), 10, "sizeof(aBFu7s_Ul_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_Ul_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_Ul_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_Ul_B");
    check_field_offset(lv, v2, 1, "aBFu7s_Ul_B.v2");
    check_field_offset(lv, v3, 9, "aBFu7s_Ul_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_Ul_B(Test_aBFu7s_Ul_B, "aBFu7s_Ul_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_Us_B()
{
  {
    init_simple_test("aBFu7s_Us_B");
    static aBFu7s_Us_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu7s_Us_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_Us_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_Us_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_Us_B");
    check_field_offset(lv, v2, 1, "aBFu7s_Us_B.v2");
    check_field_offset(lv, v3, 3, "aBFu7s_Us_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_Us_B(Test_aBFu7s_Us_B, "aBFu7s_Us_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu7s_Vp_B()
{
  {
    init_simple_test("aBFu7s_Vp_B");
    static aBFu7s_Vp_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu7s_Vp_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu7s_Vp_B)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "aBFu7s_Vp_B");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "aBFu7s_Vp_B");
    check_field_offset(lv, v2, 1, "aBFu7s_Vp_B.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aBFu7s_Vp_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu7s_Vp_B(Test_aBFu7s_Vp_B, "aBFu7s_Vp_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B()
{
  {
    init_simple_test("aBFu8c_B");
    static aBFu8c_B lv;
    check2(sizeof(lv), 2, "sizeof(aBFu8c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B");
    check_field_offset(lv, v2, 1, "aBFu8c_B.v2");
  }
}
static Arrange_To_Call_Me vaBFu8c_B(Test_aBFu8c_B, "aBFu8c_B", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_B()
{
  {
    init_simple_test("aBFu8c_B_B");
    static aBFu8c_B_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8c_B_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_B");
    check_field_offset(lv, v2, 1, "aBFu8c_B_B.v2");
    check_field_offset(lv, v3, 2, "aBFu8c_B_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_B(Test_aBFu8c_B_B, "aBFu8c_B_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_BFu15i()
{
  {
    init_simple_test("aBFu8c_B_BFu15i");
    static aBFu8c_B_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8c_B_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu15i");
    check_field_offset(lv, v2, 1, "aBFu8c_B_BFu15i.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aBFu8c_B_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aBFu8c_B_BFu15i");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_BFu15i(Test_aBFu8c_B_BFu15i, "aBFu8c_B_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_BFu15ll()
{
  {
    init_simple_test("aBFu8c_B_BFu15ll");
    static aBFu8c_B_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8c_B_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu15ll");
    check_field_offset(lv, v2, 1, "aBFu8c_B_BFu15ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aBFu8c_B_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aBFu8c_B_BFu15ll");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_BFu15ll(Test_aBFu8c_B_BFu15ll, "aBFu8c_B_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_BFu15s()
{
  {
    init_simple_test("aBFu8c_B_BFu15s");
    static aBFu8c_B_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8c_B_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu15s");
    check_field_offset(lv, v2, 1, "aBFu8c_B_BFu15s.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aBFu8c_B_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aBFu8c_B_BFu15s");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_BFu15s(Test_aBFu8c_B_BFu15s, "aBFu8c_B_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_BFu16i()
{
  {
    init_simple_test("aBFu8c_B_BFu16i");
    static aBFu8c_B_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8c_B_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu16i");
    check_field_offset(lv, v2, 1, "aBFu8c_B_BFu16i.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aBFu8c_B_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aBFu8c_B_BFu16i");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_BFu16i(Test_aBFu8c_B_BFu16i, "aBFu8c_B_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_BFu16ll()
{
  {
    init_simple_test("aBFu8c_B_BFu16ll");
    static aBFu8c_B_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8c_B_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu16ll");
    check_field_offset(lv, v2, 1, "aBFu8c_B_BFu16ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aBFu8c_B_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aBFu8c_B_BFu16ll");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_BFu16ll(Test_aBFu8c_B_BFu16ll, "aBFu8c_B_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_BFu16s()
{
  {
    init_simple_test("aBFu8c_B_BFu16s");
    static aBFu8c_B_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8c_B_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu16s");
    check_field_offset(lv, v2, 1, "aBFu8c_B_BFu16s.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aBFu8c_B_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aBFu8c_B_BFu16s");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_BFu16s(Test_aBFu8c_B_BFu16s, "aBFu8c_B_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_BFu17i()
{
  {
    init_simple_test("aBFu8c_B_BFu17i");
    static aBFu8c_B_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu8c_B_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu17i");
    check_field_offset(lv, v2, 1, "aBFu8c_B_BFu17i.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aBFu8c_B_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aBFu8c_B_BFu17i");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_BFu17i(Test_aBFu8c_B_BFu17i, "aBFu8c_B_BFu17i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_BFu17ll()
{
  {
    init_simple_test("aBFu8c_B_BFu17ll");
    static aBFu8c_B_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu8c_B_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu17ll");
    check_field_offset(lv, v2, 1, "aBFu8c_B_BFu17ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aBFu8c_B_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aBFu8c_B_BFu17ll");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_BFu17ll(Test_aBFu8c_B_BFu17ll, "aBFu8c_B_BFu17ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_BFu1c()
{
  {
    init_simple_test("aBFu8c_B_BFu1c");
    static aBFu8c_B_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8c_B_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu1c");
    check_field_offset(lv, v2, 1, "aBFu8c_B_BFu1c.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu8c_B_BFu1c");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_BFu1c(Test_aBFu8c_B_BFu1c, "aBFu8c_B_BFu1c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_BFu1i()
{
  {
    init_simple_test("aBFu8c_B_BFu1i");
    static aBFu8c_B_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8c_B_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu1i");
    check_field_offset(lv, v2, 1, "aBFu8c_B_BFu1i.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu8c_B_BFu1i");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_BFu1i(Test_aBFu8c_B_BFu1i, "aBFu8c_B_BFu1i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_BFu1ll()
{
  {
    init_simple_test("aBFu8c_B_BFu1ll");
    static aBFu8c_B_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8c_B_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu1ll");
    check_field_offset(lv, v2, 1, "aBFu8c_B_BFu1ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu8c_B_BFu1ll");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_BFu1ll(Test_aBFu8c_B_BFu1ll, "aBFu8c_B_BFu1ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_BFu1s()
{
  {
    init_simple_test("aBFu8c_B_BFu1s");
    static aBFu8c_B_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8c_B_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu1s");
    check_field_offset(lv, v2, 1, "aBFu8c_B_BFu1s.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu8c_B_BFu1s");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_BFu1s(Test_aBFu8c_B_BFu1s, "aBFu8c_B_BFu1s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_BFu31i()
{
  {
    init_simple_test("aBFu8c_B_BFu31i");
    static aBFu8c_B_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8c_B_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu31i");
    check_field_offset(lv, v2, 1, "aBFu8c_B_BFu31i.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aBFu8c_B_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aBFu8c_B_BFu31i");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_BFu31i(Test_aBFu8c_B_BFu31i, "aBFu8c_B_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_BFu31ll()
{
  {
    init_simple_test("aBFu8c_B_BFu31ll");
    static aBFu8c_B_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8c_B_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu31ll");
    check_field_offset(lv, v2, 1, "aBFu8c_B_BFu31ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aBFu8c_B_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aBFu8c_B_BFu31ll");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_BFu31ll(Test_aBFu8c_B_BFu31ll, "aBFu8c_B_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_BFu32i()
{
  {
    init_simple_test("aBFu8c_B_BFu32i");
    static aBFu8c_B_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8c_B_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu32i");
    check_field_offset(lv, v2, 1, "aBFu8c_B_BFu32i.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aBFu8c_B_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aBFu8c_B_BFu32i");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_BFu32i(Test_aBFu8c_B_BFu32i, "aBFu8c_B_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_BFu32ll()
{
  {
    init_simple_test("aBFu8c_B_BFu32ll");
    static aBFu8c_B_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8c_B_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu32ll");
    check_field_offset(lv, v2, 1, "aBFu8c_B_BFu32ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aBFu8c_B_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aBFu8c_B_BFu32ll");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_BFu32ll(Test_aBFu8c_B_BFu32ll, "aBFu8c_B_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_BFu33()
{
  {
    init_simple_test("aBFu8c_B_BFu33");
    static aBFu8c_B_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aBFu8c_B_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu33");
    check_field_offset(lv, v2, 1, "aBFu8c_B_BFu33.v2");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "aBFu8c_B_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "aBFu8c_B_BFu33");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_BFu33(Test_aBFu8c_B_BFu33, "aBFu8c_B_BFu33", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_BFu7c()
{
  {
    init_simple_test("aBFu8c_B_BFu7c");
    static aBFu8c_B_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8c_B_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu7c");
    check_field_offset(lv, v2, 1, "aBFu8c_B_BFu7c.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu8c_B_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu8c_B_BFu7c");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_BFu7c(Test_aBFu8c_B_BFu7c, "aBFu8c_B_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_BFu7i()
{
  {
    init_simple_test("aBFu8c_B_BFu7i");
    static aBFu8c_B_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8c_B_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu7i");
    check_field_offset(lv, v2, 1, "aBFu8c_B_BFu7i.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu8c_B_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu8c_B_BFu7i");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_BFu7i(Test_aBFu8c_B_BFu7i, "aBFu8c_B_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_BFu7ll()
{
  {
    init_simple_test("aBFu8c_B_BFu7ll");
    static aBFu8c_B_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8c_B_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu7ll");
    check_field_offset(lv, v2, 1, "aBFu8c_B_BFu7ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu8c_B_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu8c_B_BFu7ll");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_BFu7ll(Test_aBFu8c_B_BFu7ll, "aBFu8c_B_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_BFu7s()
{
  {
    init_simple_test("aBFu8c_B_BFu7s");
    static aBFu8c_B_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8c_B_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu7s");
    check_field_offset(lv, v2, 1, "aBFu8c_B_BFu7s.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu8c_B_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu8c_B_BFu7s");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_BFu7s(Test_aBFu8c_B_BFu7s, "aBFu8c_B_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_BFu8c()
{
  {
    init_simple_test("aBFu8c_B_BFu8c");
    static aBFu8c_B_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8c_B_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu8c");
    check_field_offset(lv, v2, 1, "aBFu8c_B_BFu8c.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu8c_B_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu8c");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_BFu8c(Test_aBFu8c_B_BFu8c, "aBFu8c_B_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_BFu8i()
{
  {
    init_simple_test("aBFu8c_B_BFu8i");
    static aBFu8c_B_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8c_B_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu8i");
    check_field_offset(lv, v2, 1, "aBFu8c_B_BFu8i.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu8c_B_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu8i");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_BFu8i(Test_aBFu8c_B_BFu8i, "aBFu8c_B_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_BFu8ll()
{
  {
    init_simple_test("aBFu8c_B_BFu8ll");
    static aBFu8c_B_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8c_B_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu8ll");
    check_field_offset(lv, v2, 1, "aBFu8c_B_BFu8ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu8c_B_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu8ll");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_BFu8ll(Test_aBFu8c_B_BFu8ll, "aBFu8c_B_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_BFu8s()
{
  {
    init_simple_test("aBFu8c_B_BFu8s");
    static aBFu8c_B_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8c_B_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu8s");
    check_field_offset(lv, v2, 1, "aBFu8c_B_BFu8s.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu8c_B_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu8s");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_BFu8s(Test_aBFu8c_B_BFu8s, "aBFu8c_B_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_BFu9i()
{
  {
    init_simple_test("aBFu8c_B_BFu9i");
    static aBFu8c_B_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8c_B_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu9i");
    check_field_offset(lv, v2, 1, "aBFu8c_B_BFu9i.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aBFu8c_B_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aBFu8c_B_BFu9i");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_BFu9i(Test_aBFu8c_B_BFu9i, "aBFu8c_B_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_BFu9ll()
{
  {
    init_simple_test("aBFu8c_B_BFu9ll");
    static aBFu8c_B_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8c_B_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu9ll");
    check_field_offset(lv, v2, 1, "aBFu8c_B_BFu9ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aBFu8c_B_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aBFu8c_B_BFu9ll");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_BFu9ll(Test_aBFu8c_B_BFu9ll, "aBFu8c_B_BFu9ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_BFu9s()
{
  {
    init_simple_test("aBFu8c_B_BFu9s");
    static aBFu8c_B_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8c_B_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_BFu9s");
    check_field_offset(lv, v2, 1, "aBFu8c_B_BFu9s.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aBFu8c_B_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aBFu8c_B_BFu9s");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_BFu9s(Test_aBFu8c_B_BFu9s, "aBFu8c_B_BFu9s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_C()
{
  {
    init_simple_test("aBFu8c_B_C");
    static aBFu8c_B_C lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8c_B_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_C)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_C");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_C");
    check_field_offset(lv, v2, 1, "aBFu8c_B_C.v2");
    check_field_offset(lv, v3, 2, "aBFu8c_B_C.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_C(Test_aBFu8c_B_C, "aBFu8c_B_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_D()
{
  {
    init_simple_test("aBFu8c_B_D");
    static aBFu8c_B_D lv;
    check2(sizeof(lv), 10, "sizeof(aBFu8c_B_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_D)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_D");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_D");
    check_field_offset(lv, v2, 1, "aBFu8c_B_D.v2");
    check_field_offset(lv, v3, 2, "aBFu8c_B_D.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_D(Test_aBFu8c_B_D, "aBFu8c_B_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_F()
{
  {
    init_simple_test("aBFu8c_B_F");
    static aBFu8c_B_F lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8c_B_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_F)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_F");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_F");
    check_field_offset(lv, v2, 1, "aBFu8c_B_F.v2");
    check_field_offset(lv, v3, 2, "aBFu8c_B_F.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_F(Test_aBFu8c_B_F, "aBFu8c_B_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_I()
{
  {
    init_simple_test("aBFu8c_B_I");
    static aBFu8c_B_I lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8c_B_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_I)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_I");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_I");
    check_field_offset(lv, v2, 1, "aBFu8c_B_I.v2");
    check_field_offset(lv, v3, 2, "aBFu8c_B_I.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_I(Test_aBFu8c_B_I, "aBFu8c_B_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_Ip()
{
  {
    init_simple_test("aBFu8c_B_Ip");
    static aBFu8c_B_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu8c_B_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_Ip");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_Ip");
    check_field_offset(lv, v2, 1, "aBFu8c_B_Ip.v2");
    check_field_offset(lv, v3, 2, "aBFu8c_B_Ip.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_Ip(Test_aBFu8c_B_Ip, "aBFu8c_B_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_L()
{
  {
    init_simple_test("aBFu8c_B_L");
    static aBFu8c_B_L lv;
    check2(sizeof(lv), 10, "sizeof(aBFu8c_B_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_L)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_L");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_L");
    check_field_offset(lv, v2, 1, "aBFu8c_B_L.v2");
    check_field_offset(lv, v3, 2, "aBFu8c_B_L.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_L(Test_aBFu8c_B_L, "aBFu8c_B_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_S()
{
  {
    init_simple_test("aBFu8c_B_S");
    static aBFu8c_B_S lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8c_B_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_S)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_S");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_S");
    check_field_offset(lv, v2, 1, "aBFu8c_B_S.v2");
    check_field_offset(lv, v3, 2, "aBFu8c_B_S.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_S(Test_aBFu8c_B_S, "aBFu8c_B_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_Uc()
{
  {
    init_simple_test("aBFu8c_B_Uc");
    static aBFu8c_B_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8c_B_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_Uc");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_Uc");
    check_field_offset(lv, v2, 1, "aBFu8c_B_Uc.v2");
    check_field_offset(lv, v3, 2, "aBFu8c_B_Uc.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_Uc(Test_aBFu8c_B_Uc, "aBFu8c_B_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_Ui()
{
  {
    init_simple_test("aBFu8c_B_Ui");
    static aBFu8c_B_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8c_B_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_Ui");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_Ui");
    check_field_offset(lv, v2, 1, "aBFu8c_B_Ui.v2");
    check_field_offset(lv, v3, 2, "aBFu8c_B_Ui.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_Ui(Test_aBFu8c_B_Ui, "aBFu8c_B_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_Ul()
{
  {
    init_simple_test("aBFu8c_B_Ul");
    static aBFu8c_B_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aBFu8c_B_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_Ul");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_Ul");
    check_field_offset(lv, v2, 1, "aBFu8c_B_Ul.v2");
    check_field_offset(lv, v3, 2, "aBFu8c_B_Ul.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_Ul(Test_aBFu8c_B_Ul, "aBFu8c_B_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_Us()
{
  {
    init_simple_test("aBFu8c_B_Us");
    static aBFu8c_B_Us lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8c_B_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_Us)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_Us");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_Us");
    check_field_offset(lv, v2, 1, "aBFu8c_B_Us.v2");
    check_field_offset(lv, v3, 2, "aBFu8c_B_Us.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_Us(Test_aBFu8c_B_Us, "aBFu8c_B_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_B_Vp()
{
  {
    init_simple_test("aBFu8c_B_Vp");
    static aBFu8c_B_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu8c_B_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_B_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_B_Vp");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_B_Vp");
    check_field_offset(lv, v2, 1, "aBFu8c_B_Vp.v2");
    check_field_offset(lv, v3, 2, "aBFu8c_B_Vp.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_B_Vp(Test_aBFu8c_B_Vp, "aBFu8c_B_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_BFu15i_B()
{
  {
    init_simple_test("aBFu8c_BFu15i_B");
    static aBFu8c_BFu15i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8c_BFu15i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_BFu15i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_BFu15i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu15i_B");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aBFu8c_BFu15i_B");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aBFu8c_BFu15i_B");
    check_field_offset(lv, v3, 3, "aBFu8c_BFu15i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_BFu15i_B(Test_aBFu8c_BFu15i_B, "aBFu8c_BFu15i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_BFu15ll_B()
{
  {
    init_simple_test("aBFu8c_BFu15ll_B");
    static aBFu8c_BFu15ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8c_BFu15ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_BFu15ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_BFu15ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu15ll_B");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aBFu8c_BFu15ll_B");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aBFu8c_BFu15ll_B");
    check_field_offset(lv, v3, 3, "aBFu8c_BFu15ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_BFu15ll_B(Test_aBFu8c_BFu15ll_B, "aBFu8c_BFu15ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_BFu15s_B()
{
  {
    init_simple_test("aBFu8c_BFu15s_B");
    static aBFu8c_BFu15s_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8c_BFu15s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_BFu15s_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_BFu15s_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu15s_B");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aBFu8c_BFu15s_B");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aBFu8c_BFu15s_B");
    check_field_offset(lv, v3, 3, "aBFu8c_BFu15s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_BFu15s_B(Test_aBFu8c_BFu15s_B, "aBFu8c_BFu15s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_BFu16i_B()
{
  {
    init_simple_test("aBFu8c_BFu16i_B");
    static aBFu8c_BFu16i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8c_BFu16i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_BFu16i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_BFu16i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu16i_B");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aBFu8c_BFu16i_B");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aBFu8c_BFu16i_B");
    check_field_offset(lv, v3, 3, "aBFu8c_BFu16i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_BFu16i_B(Test_aBFu8c_BFu16i_B, "aBFu8c_BFu16i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_BFu16ll_B()
{
  {
    init_simple_test("aBFu8c_BFu16ll_B");
    static aBFu8c_BFu16ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8c_BFu16ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_BFu16ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_BFu16ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu16ll_B");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aBFu8c_BFu16ll_B");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aBFu8c_BFu16ll_B");
    check_field_offset(lv, v3, 3, "aBFu8c_BFu16ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_BFu16ll_B(Test_aBFu8c_BFu16ll_B, "aBFu8c_BFu16ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_BFu16s_B()
{
  {
    init_simple_test("aBFu8c_BFu16s_B");
    static aBFu8c_BFu16s_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8c_BFu16s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_BFu16s_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_BFu16s_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu16s_B");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aBFu8c_BFu16s_B");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aBFu8c_BFu16s_B");
    check_field_offset(lv, v3, 3, "aBFu8c_BFu16s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_BFu16s_B(Test_aBFu8c_BFu16s_B, "aBFu8c_BFu16s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_BFu17i_B()
{
  {
    init_simple_test("aBFu8c_BFu17i_B");
    static aBFu8c_BFu17i_B lv;
    check2(sizeof(lv), 5, "sizeof(aBFu8c_BFu17i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_BFu17i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_BFu17i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu17i_B");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aBFu8c_BFu17i_B");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aBFu8c_BFu17i_B");
    check_field_offset(lv, v3, 4, "aBFu8c_BFu17i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_BFu17i_B(Test_aBFu8c_BFu17i_B, "aBFu8c_BFu17i_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_BFu17ll_B()
{
  {
    init_simple_test("aBFu8c_BFu17ll_B");
    static aBFu8c_BFu17ll_B lv;
    check2(sizeof(lv), 5, "sizeof(aBFu8c_BFu17ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_BFu17ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_BFu17ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu17ll_B");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aBFu8c_BFu17ll_B");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aBFu8c_BFu17ll_B");
    check_field_offset(lv, v3, 4, "aBFu8c_BFu17ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_BFu17ll_B(Test_aBFu8c_BFu17ll_B, "aBFu8c_BFu17ll_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_BFu1c_B()
{
  {
    init_simple_test("aBFu8c_BFu1c_B");
    static aBFu8c_BFu1c_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8c_BFu1c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_BFu1c_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_BFu1c_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu1c_B");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aBFu8c_BFu1c_B");
    check_field_offset(lv, v3, 2, "aBFu8c_BFu1c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_BFu1c_B(Test_aBFu8c_BFu1c_B, "aBFu8c_BFu1c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_BFu1i_B()
{
  {
    init_simple_test("aBFu8c_BFu1i_B");
    static aBFu8c_BFu1i_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8c_BFu1i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_BFu1i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_BFu1i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu1i_B");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aBFu8c_BFu1i_B");
    check_field_offset(lv, v3, 2, "aBFu8c_BFu1i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_BFu1i_B(Test_aBFu8c_BFu1i_B, "aBFu8c_BFu1i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_BFu1ll_B()
{
  {
    init_simple_test("aBFu8c_BFu1ll_B");
    static aBFu8c_BFu1ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8c_BFu1ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_BFu1ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_BFu1ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu1ll_B");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aBFu8c_BFu1ll_B");
    check_field_offset(lv, v3, 2, "aBFu8c_BFu1ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_BFu1ll_B(Test_aBFu8c_BFu1ll_B, "aBFu8c_BFu1ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_BFu1s_B()
{
  {
    init_simple_test("aBFu8c_BFu1s_B");
    static aBFu8c_BFu1s_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8c_BFu1s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_BFu1s_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_BFu1s_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu1s_B");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aBFu8c_BFu1s_B");
    check_field_offset(lv, v3, 2, "aBFu8c_BFu1s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_BFu1s_B(Test_aBFu8c_BFu1s_B, "aBFu8c_BFu1s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_BFu31i_B()
{
  {
    init_simple_test("aBFu8c_BFu31i_B");
    static aBFu8c_BFu31i_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8c_BFu31i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_BFu31i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_BFu31i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu31i_B");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aBFu8c_BFu31i_B");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aBFu8c_BFu31i_B");
    check_field_offset(lv, v3, 5, "aBFu8c_BFu31i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_BFu31i_B(Test_aBFu8c_BFu31i_B, "aBFu8c_BFu31i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_BFu31ll_B()
{
  {
    init_simple_test("aBFu8c_BFu31ll_B");
    static aBFu8c_BFu31ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8c_BFu31ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_BFu31ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_BFu31ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu31ll_B");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aBFu8c_BFu31ll_B");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aBFu8c_BFu31ll_B");
    check_field_offset(lv, v3, 5, "aBFu8c_BFu31ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_BFu31ll_B(Test_aBFu8c_BFu31ll_B, "aBFu8c_BFu31ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_BFu32i_B()
{
  {
    init_simple_test("aBFu8c_BFu32i_B");
    static aBFu8c_BFu32i_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8c_BFu32i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_BFu32i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_BFu32i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu32i_B");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aBFu8c_BFu32i_B");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aBFu8c_BFu32i_B");
    check_field_offset(lv, v3, 5, "aBFu8c_BFu32i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_BFu32i_B(Test_aBFu8c_BFu32i_B, "aBFu8c_BFu32i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_BFu32ll_B()
{
  {
    init_simple_test("aBFu8c_BFu32ll_B");
    static aBFu8c_BFu32ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8c_BFu32ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_BFu32ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_BFu32ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu32ll_B");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aBFu8c_BFu32ll_B");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aBFu8c_BFu32ll_B");
    check_field_offset(lv, v3, 5, "aBFu8c_BFu32ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_BFu32ll_B(Test_aBFu8c_BFu32ll_B, "aBFu8c_BFu32ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_BFu33_B()
{
  {
    init_simple_test("aBFu8c_BFu33_B");
    static aBFu8c_BFu33_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu8c_BFu33_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_BFu33_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_BFu33_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu33_B");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aBFu8c_BFu33_B");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aBFu8c_BFu33_B");
    check_field_offset(lv, v3, 6, "aBFu8c_BFu33_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_BFu33_B(Test_aBFu8c_BFu33_B, "aBFu8c_BFu33_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_BFu7c_B()
{
  {
    init_simple_test("aBFu8c_BFu7c_B");
    static aBFu8c_BFu7c_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8c_BFu7c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_BFu7c_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_BFu7c_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu7c_B");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aBFu8c_BFu7c_B");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aBFu8c_BFu7c_B");
    check_field_offset(lv, v3, 2, "aBFu8c_BFu7c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_BFu7c_B(Test_aBFu8c_BFu7c_B, "aBFu8c_BFu7c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_BFu7i_B()
{
  {
    init_simple_test("aBFu8c_BFu7i_B");
    static aBFu8c_BFu7i_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8c_BFu7i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_BFu7i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_BFu7i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu7i_B");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aBFu8c_BFu7i_B");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aBFu8c_BFu7i_B");
    check_field_offset(lv, v3, 2, "aBFu8c_BFu7i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_BFu7i_B(Test_aBFu8c_BFu7i_B, "aBFu8c_BFu7i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_BFu7ll_B()
{
  {
    init_simple_test("aBFu8c_BFu7ll_B");
    static aBFu8c_BFu7ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8c_BFu7ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_BFu7ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_BFu7ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu7ll_B");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aBFu8c_BFu7ll_B");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aBFu8c_BFu7ll_B");
    check_field_offset(lv, v3, 2, "aBFu8c_BFu7ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_BFu7ll_B(Test_aBFu8c_BFu7ll_B, "aBFu8c_BFu7ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_BFu7s_B()
{
  {
    init_simple_test("aBFu8c_BFu7s_B");
    static aBFu8c_BFu7s_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8c_BFu7s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_BFu7s_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_BFu7s_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu7s_B");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aBFu8c_BFu7s_B");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aBFu8c_BFu7s_B");
    check_field_offset(lv, v3, 2, "aBFu8c_BFu7s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_BFu7s_B(Test_aBFu8c_BFu7s_B, "aBFu8c_BFu7s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_BFu8c_B()
{
  {
    init_simple_test("aBFu8c_BFu8c_B");
    static aBFu8c_BFu8c_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8c_BFu8c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_BFu8c_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_BFu8c_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu8c_B");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aBFu8c_BFu8c_B");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu8c_B");
    check_field_offset(lv, v3, 2, "aBFu8c_BFu8c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_BFu8c_B(Test_aBFu8c_BFu8c_B, "aBFu8c_BFu8c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_BFu8i_B()
{
  {
    init_simple_test("aBFu8c_BFu8i_B");
    static aBFu8c_BFu8i_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8c_BFu8i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_BFu8i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_BFu8i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu8i_B");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aBFu8c_BFu8i_B");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu8i_B");
    check_field_offset(lv, v3, 2, "aBFu8c_BFu8i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_BFu8i_B(Test_aBFu8c_BFu8i_B, "aBFu8c_BFu8i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_BFu8ll_B()
{
  {
    init_simple_test("aBFu8c_BFu8ll_B");
    static aBFu8c_BFu8ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8c_BFu8ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_BFu8ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_BFu8ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu8ll_B");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aBFu8c_BFu8ll_B");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu8ll_B");
    check_field_offset(lv, v3, 2, "aBFu8c_BFu8ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_BFu8ll_B(Test_aBFu8c_BFu8ll_B, "aBFu8c_BFu8ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_BFu8s_B()
{
  {
    init_simple_test("aBFu8c_BFu8s_B");
    static aBFu8c_BFu8s_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8c_BFu8s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_BFu8s_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_BFu8s_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu8s_B");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aBFu8c_BFu8s_B");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu8s_B");
    check_field_offset(lv, v3, 2, "aBFu8c_BFu8s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_BFu8s_B(Test_aBFu8c_BFu8s_B, "aBFu8c_BFu8s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_BFu9i_B()
{
  {
    init_simple_test("aBFu8c_BFu9i_B");
    static aBFu8c_BFu9i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8c_BFu9i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_BFu9i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_BFu9i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu9i_B");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aBFu8c_BFu9i_B");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aBFu8c_BFu9i_B");
    check_field_offset(lv, v3, 3, "aBFu8c_BFu9i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_BFu9i_B(Test_aBFu8c_BFu9i_B, "aBFu8c_BFu9i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_BFu9ll_B()
{
  {
    init_simple_test("aBFu8c_BFu9ll_B");
    static aBFu8c_BFu9ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8c_BFu9ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_BFu9ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_BFu9ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu9ll_B");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aBFu8c_BFu9ll_B");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aBFu8c_BFu9ll_B");
    check_field_offset(lv, v3, 3, "aBFu8c_BFu9ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_BFu9ll_B(Test_aBFu8c_BFu9ll_B, "aBFu8c_BFu9ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_BFu9s_B()
{
  {
    init_simple_test("aBFu8c_BFu9s_B");
    static aBFu8c_BFu9s_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8c_BFu9s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_BFu9s_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_BFu9s_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_BFu9s_B");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aBFu8c_BFu9s_B");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aBFu8c_BFu9s_B");
    check_field_offset(lv, v3, 3, "aBFu8c_BFu9s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_BFu9s_B(Test_aBFu8c_BFu9s_B, "aBFu8c_BFu9s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_C_B()
{
  {
    init_simple_test("aBFu8c_C_B");
    static aBFu8c_C_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8c_C_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_C_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_C_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_C_B");
    check_field_offset(lv, v2, 1, "aBFu8c_C_B.v2");
    check_field_offset(lv, v3, 2, "aBFu8c_C_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_C_B(Test_aBFu8c_C_B, "aBFu8c_C_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_D_B()
{
  {
    init_simple_test("aBFu8c_D_B");
    static aBFu8c_D_B lv;
    check2(sizeof(lv), 10, "sizeof(aBFu8c_D_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_D_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_D_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_D_B");
    check_field_offset(lv, v2, 1, "aBFu8c_D_B.v2");
    check_field_offset(lv, v3, 9, "aBFu8c_D_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_D_B(Test_aBFu8c_D_B, "aBFu8c_D_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_F_B()
{
  {
    init_simple_test("aBFu8c_F_B");
    static aBFu8c_F_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8c_F_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_F_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_F_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_F_B");
    check_field_offset(lv, v2, 1, "aBFu8c_F_B.v2");
    check_field_offset(lv, v3, 5, "aBFu8c_F_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_F_B(Test_aBFu8c_F_B, "aBFu8c_F_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_I_B()
{
  {
    init_simple_test("aBFu8c_I_B");
    static aBFu8c_I_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8c_I_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_I_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_I_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_I_B");
    check_field_offset(lv, v2, 1, "aBFu8c_I_B.v2");
    check_field_offset(lv, v3, 5, "aBFu8c_I_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_I_B(Test_aBFu8c_I_B, "aBFu8c_I_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_Ip_B()
{
  {
    init_simple_test("aBFu8c_Ip_B");
    static aBFu8c_Ip_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu8c_Ip_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_Ip_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_Ip_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_Ip_B");
    check_field_offset(lv, v2, 1, "aBFu8c_Ip_B.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aBFu8c_Ip_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_Ip_B(Test_aBFu8c_Ip_B, "aBFu8c_Ip_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_L_B()
{
  {
    init_simple_test("aBFu8c_L_B");
    static aBFu8c_L_B lv;
    check2(sizeof(lv), 10, "sizeof(aBFu8c_L_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_L_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_L_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_L_B");
    check_field_offset(lv, v2, 1, "aBFu8c_L_B.v2");
    check_field_offset(lv, v3, 9, "aBFu8c_L_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_L_B(Test_aBFu8c_L_B, "aBFu8c_L_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_S_B()
{
  {
    init_simple_test("aBFu8c_S_B");
    static aBFu8c_S_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8c_S_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_S_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_S_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_S_B");
    check_field_offset(lv, v2, 1, "aBFu8c_S_B.v2");
    check_field_offset(lv, v3, 3, "aBFu8c_S_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_S_B(Test_aBFu8c_S_B, "aBFu8c_S_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_Uc_B()
{
  {
    init_simple_test("aBFu8c_Uc_B");
    static aBFu8c_Uc_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8c_Uc_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_Uc_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_Uc_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_Uc_B");
    check_field_offset(lv, v2, 1, "aBFu8c_Uc_B.v2");
    check_field_offset(lv, v3, 2, "aBFu8c_Uc_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_Uc_B(Test_aBFu8c_Uc_B, "aBFu8c_Uc_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_Ui_B()
{
  {
    init_simple_test("aBFu8c_Ui_B");
    static aBFu8c_Ui_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8c_Ui_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_Ui_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_Ui_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_Ui_B");
    check_field_offset(lv, v2, 1, "aBFu8c_Ui_B.v2");
    check_field_offset(lv, v3, 5, "aBFu8c_Ui_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_Ui_B(Test_aBFu8c_Ui_B, "aBFu8c_Ui_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_Ul_B()
{
  {
    init_simple_test("aBFu8c_Ul_B");
    static aBFu8c_Ul_B lv;
    check2(sizeof(lv), 10, "sizeof(aBFu8c_Ul_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_Ul_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_Ul_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_Ul_B");
    check_field_offset(lv, v2, 1, "aBFu8c_Ul_B.v2");
    check_field_offset(lv, v3, 9, "aBFu8c_Ul_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_Ul_B(Test_aBFu8c_Ul_B, "aBFu8c_Ul_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_Us_B()
{
  {
    init_simple_test("aBFu8c_Us_B");
    static aBFu8c_Us_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8c_Us_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_Us_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_Us_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_Us_B");
    check_field_offset(lv, v2, 1, "aBFu8c_Us_B.v2");
    check_field_offset(lv, v3, 3, "aBFu8c_Us_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_Us_B(Test_aBFu8c_Us_B, "aBFu8c_Us_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8c_Vp_B()
{
  {
    init_simple_test("aBFu8c_Vp_B");
    static aBFu8c_Vp_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu8c_Vp_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8c_Vp_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8c_Vp_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8c_Vp_B");
    check_field_offset(lv, v2, 1, "aBFu8c_Vp_B.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aBFu8c_Vp_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8c_Vp_B(Test_aBFu8c_Vp_B, "aBFu8c_Vp_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B()
{
  {
    init_simple_test("aBFu8i_B");
    static aBFu8i_B lv;
    check2(sizeof(lv), 2, "sizeof(aBFu8i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B");
    check_field_offset(lv, v2, 1, "aBFu8i_B.v2");
  }
}
static Arrange_To_Call_Me vaBFu8i_B(Test_aBFu8i_B, "aBFu8i_B", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_B()
{
  {
    init_simple_test("aBFu8i_B_B");
    static aBFu8i_B_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8i_B_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_B");
    check_field_offset(lv, v2, 1, "aBFu8i_B_B.v2");
    check_field_offset(lv, v3, 2, "aBFu8i_B_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_B(Test_aBFu8i_B_B, "aBFu8i_B_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_BFu15i()
{
  {
    init_simple_test("aBFu8i_B_BFu15i");
    static aBFu8i_B_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8i_B_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu15i");
    check_field_offset(lv, v2, 1, "aBFu8i_B_BFu15i.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aBFu8i_B_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aBFu8i_B_BFu15i");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_BFu15i(Test_aBFu8i_B_BFu15i, "aBFu8i_B_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_BFu15ll()
{
  {
    init_simple_test("aBFu8i_B_BFu15ll");
    static aBFu8i_B_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8i_B_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu15ll");
    check_field_offset(lv, v2, 1, "aBFu8i_B_BFu15ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aBFu8i_B_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aBFu8i_B_BFu15ll");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_BFu15ll(Test_aBFu8i_B_BFu15ll, "aBFu8i_B_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_BFu15s()
{
  {
    init_simple_test("aBFu8i_B_BFu15s");
    static aBFu8i_B_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8i_B_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu15s");
    check_field_offset(lv, v2, 1, "aBFu8i_B_BFu15s.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aBFu8i_B_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aBFu8i_B_BFu15s");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_BFu15s(Test_aBFu8i_B_BFu15s, "aBFu8i_B_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_BFu16i()
{
  {
    init_simple_test("aBFu8i_B_BFu16i");
    static aBFu8i_B_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8i_B_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu16i");
    check_field_offset(lv, v2, 1, "aBFu8i_B_BFu16i.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aBFu8i_B_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aBFu8i_B_BFu16i");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_BFu16i(Test_aBFu8i_B_BFu16i, "aBFu8i_B_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_BFu16ll()
{
  {
    init_simple_test("aBFu8i_B_BFu16ll");
    static aBFu8i_B_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8i_B_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu16ll");
    check_field_offset(lv, v2, 1, "aBFu8i_B_BFu16ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aBFu8i_B_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aBFu8i_B_BFu16ll");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_BFu16ll(Test_aBFu8i_B_BFu16ll, "aBFu8i_B_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_BFu16s()
{
  {
    init_simple_test("aBFu8i_B_BFu16s");
    static aBFu8i_B_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8i_B_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu16s");
    check_field_offset(lv, v2, 1, "aBFu8i_B_BFu16s.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aBFu8i_B_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aBFu8i_B_BFu16s");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_BFu16s(Test_aBFu8i_B_BFu16s, "aBFu8i_B_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_BFu17i()
{
  {
    init_simple_test("aBFu8i_B_BFu17i");
    static aBFu8i_B_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu8i_B_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu17i");
    check_field_offset(lv, v2, 1, "aBFu8i_B_BFu17i.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aBFu8i_B_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aBFu8i_B_BFu17i");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_BFu17i(Test_aBFu8i_B_BFu17i, "aBFu8i_B_BFu17i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_BFu17ll()
{
  {
    init_simple_test("aBFu8i_B_BFu17ll");
    static aBFu8i_B_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu8i_B_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu17ll");
    check_field_offset(lv, v2, 1, "aBFu8i_B_BFu17ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aBFu8i_B_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aBFu8i_B_BFu17ll");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_BFu17ll(Test_aBFu8i_B_BFu17ll, "aBFu8i_B_BFu17ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_BFu1c()
{
  {
    init_simple_test("aBFu8i_B_BFu1c");
    static aBFu8i_B_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8i_B_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu1c");
    check_field_offset(lv, v2, 1, "aBFu8i_B_BFu1c.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu8i_B_BFu1c");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_BFu1c(Test_aBFu8i_B_BFu1c, "aBFu8i_B_BFu1c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_BFu1i()
{
  {
    init_simple_test("aBFu8i_B_BFu1i");
    static aBFu8i_B_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8i_B_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu1i");
    check_field_offset(lv, v2, 1, "aBFu8i_B_BFu1i.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu8i_B_BFu1i");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_BFu1i(Test_aBFu8i_B_BFu1i, "aBFu8i_B_BFu1i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_BFu1ll()
{
  {
    init_simple_test("aBFu8i_B_BFu1ll");
    static aBFu8i_B_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8i_B_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu1ll");
    check_field_offset(lv, v2, 1, "aBFu8i_B_BFu1ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu8i_B_BFu1ll");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_BFu1ll(Test_aBFu8i_B_BFu1ll, "aBFu8i_B_BFu1ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_BFu1s()
{
  {
    init_simple_test("aBFu8i_B_BFu1s");
    static aBFu8i_B_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8i_B_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu1s");
    check_field_offset(lv, v2, 1, "aBFu8i_B_BFu1s.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu8i_B_BFu1s");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_BFu1s(Test_aBFu8i_B_BFu1s, "aBFu8i_B_BFu1s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_BFu31i()
{
  {
    init_simple_test("aBFu8i_B_BFu31i");
    static aBFu8i_B_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8i_B_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu31i");
    check_field_offset(lv, v2, 1, "aBFu8i_B_BFu31i.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aBFu8i_B_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aBFu8i_B_BFu31i");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_BFu31i(Test_aBFu8i_B_BFu31i, "aBFu8i_B_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_BFu31ll()
{
  {
    init_simple_test("aBFu8i_B_BFu31ll");
    static aBFu8i_B_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8i_B_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu31ll");
    check_field_offset(lv, v2, 1, "aBFu8i_B_BFu31ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aBFu8i_B_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aBFu8i_B_BFu31ll");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_BFu31ll(Test_aBFu8i_B_BFu31ll, "aBFu8i_B_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_BFu32i()
{
  {
    init_simple_test("aBFu8i_B_BFu32i");
    static aBFu8i_B_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8i_B_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu32i");
    check_field_offset(lv, v2, 1, "aBFu8i_B_BFu32i.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aBFu8i_B_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aBFu8i_B_BFu32i");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_BFu32i(Test_aBFu8i_B_BFu32i, "aBFu8i_B_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_BFu32ll()
{
  {
    init_simple_test("aBFu8i_B_BFu32ll");
    static aBFu8i_B_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8i_B_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu32ll");
    check_field_offset(lv, v2, 1, "aBFu8i_B_BFu32ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aBFu8i_B_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aBFu8i_B_BFu32ll");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_BFu32ll(Test_aBFu8i_B_BFu32ll, "aBFu8i_B_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_BFu33()
{
  {
    init_simple_test("aBFu8i_B_BFu33");
    static aBFu8i_B_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aBFu8i_B_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu33");
    check_field_offset(lv, v2, 1, "aBFu8i_B_BFu33.v2");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "aBFu8i_B_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "aBFu8i_B_BFu33");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_BFu33(Test_aBFu8i_B_BFu33, "aBFu8i_B_BFu33", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_BFu7c()
{
  {
    init_simple_test("aBFu8i_B_BFu7c");
    static aBFu8i_B_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8i_B_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu7c");
    check_field_offset(lv, v2, 1, "aBFu8i_B_BFu7c.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu8i_B_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu8i_B_BFu7c");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_BFu7c(Test_aBFu8i_B_BFu7c, "aBFu8i_B_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_BFu7i()
{
  {
    init_simple_test("aBFu8i_B_BFu7i");
    static aBFu8i_B_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8i_B_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu7i");
    check_field_offset(lv, v2, 1, "aBFu8i_B_BFu7i.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu8i_B_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu8i_B_BFu7i");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_BFu7i(Test_aBFu8i_B_BFu7i, "aBFu8i_B_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_BFu7ll()
{
  {
    init_simple_test("aBFu8i_B_BFu7ll");
    static aBFu8i_B_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8i_B_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu7ll");
    check_field_offset(lv, v2, 1, "aBFu8i_B_BFu7ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu8i_B_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu8i_B_BFu7ll");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_BFu7ll(Test_aBFu8i_B_BFu7ll, "aBFu8i_B_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_BFu7s()
{
  {
    init_simple_test("aBFu8i_B_BFu7s");
    static aBFu8i_B_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8i_B_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu7s");
    check_field_offset(lv, v2, 1, "aBFu8i_B_BFu7s.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu8i_B_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu8i_B_BFu7s");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_BFu7s(Test_aBFu8i_B_BFu7s, "aBFu8i_B_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_BFu8c()
{
  {
    init_simple_test("aBFu8i_B_BFu8c");
    static aBFu8i_B_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8i_B_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu8c");
    check_field_offset(lv, v2, 1, "aBFu8i_B_BFu8c.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu8i_B_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu8c");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_BFu8c(Test_aBFu8i_B_BFu8c, "aBFu8i_B_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_BFu8i()
{
  {
    init_simple_test("aBFu8i_B_BFu8i");
    static aBFu8i_B_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8i_B_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu8i");
    check_field_offset(lv, v2, 1, "aBFu8i_B_BFu8i.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu8i_B_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu8i");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_BFu8i(Test_aBFu8i_B_BFu8i, "aBFu8i_B_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_BFu8ll()
{
  {
    init_simple_test("aBFu8i_B_BFu8ll");
    static aBFu8i_B_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8i_B_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu8ll");
    check_field_offset(lv, v2, 1, "aBFu8i_B_BFu8ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu8i_B_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu8ll");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_BFu8ll(Test_aBFu8i_B_BFu8ll, "aBFu8i_B_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_BFu8s()
{
  {
    init_simple_test("aBFu8i_B_BFu8s");
    static aBFu8i_B_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8i_B_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu8s");
    check_field_offset(lv, v2, 1, "aBFu8i_B_BFu8s.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu8i_B_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu8s");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_BFu8s(Test_aBFu8i_B_BFu8s, "aBFu8i_B_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_BFu9i()
{
  {
    init_simple_test("aBFu8i_B_BFu9i");
    static aBFu8i_B_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8i_B_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu9i");
    check_field_offset(lv, v2, 1, "aBFu8i_B_BFu9i.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aBFu8i_B_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aBFu8i_B_BFu9i");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_BFu9i(Test_aBFu8i_B_BFu9i, "aBFu8i_B_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_BFu9ll()
{
  {
    init_simple_test("aBFu8i_B_BFu9ll");
    static aBFu8i_B_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8i_B_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu9ll");
    check_field_offset(lv, v2, 1, "aBFu8i_B_BFu9ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aBFu8i_B_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aBFu8i_B_BFu9ll");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_BFu9ll(Test_aBFu8i_B_BFu9ll, "aBFu8i_B_BFu9ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_BFu9s()
{
  {
    init_simple_test("aBFu8i_B_BFu9s");
    static aBFu8i_B_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8i_B_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_BFu9s");
    check_field_offset(lv, v2, 1, "aBFu8i_B_BFu9s.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aBFu8i_B_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aBFu8i_B_BFu9s");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_BFu9s(Test_aBFu8i_B_BFu9s, "aBFu8i_B_BFu9s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_C()
{
  {
    init_simple_test("aBFu8i_B_C");
    static aBFu8i_B_C lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8i_B_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_C)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_C");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_C");
    check_field_offset(lv, v2, 1, "aBFu8i_B_C.v2");
    check_field_offset(lv, v3, 2, "aBFu8i_B_C.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_C(Test_aBFu8i_B_C, "aBFu8i_B_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_D()
{
  {
    init_simple_test("aBFu8i_B_D");
    static aBFu8i_B_D lv;
    check2(sizeof(lv), 10, "sizeof(aBFu8i_B_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_D)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_D");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_D");
    check_field_offset(lv, v2, 1, "aBFu8i_B_D.v2");
    check_field_offset(lv, v3, 2, "aBFu8i_B_D.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_D(Test_aBFu8i_B_D, "aBFu8i_B_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_F()
{
  {
    init_simple_test("aBFu8i_B_F");
    static aBFu8i_B_F lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8i_B_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_F)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_F");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_F");
    check_field_offset(lv, v2, 1, "aBFu8i_B_F.v2");
    check_field_offset(lv, v3, 2, "aBFu8i_B_F.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_F(Test_aBFu8i_B_F, "aBFu8i_B_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_I()
{
  {
    init_simple_test("aBFu8i_B_I");
    static aBFu8i_B_I lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8i_B_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_I)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_I");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_I");
    check_field_offset(lv, v2, 1, "aBFu8i_B_I.v2");
    check_field_offset(lv, v3, 2, "aBFu8i_B_I.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_I(Test_aBFu8i_B_I, "aBFu8i_B_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_Ip()
{
  {
    init_simple_test("aBFu8i_B_Ip");
    static aBFu8i_B_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu8i_B_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_Ip");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_Ip");
    check_field_offset(lv, v2, 1, "aBFu8i_B_Ip.v2");
    check_field_offset(lv, v3, 2, "aBFu8i_B_Ip.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_Ip(Test_aBFu8i_B_Ip, "aBFu8i_B_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_L()
{
  {
    init_simple_test("aBFu8i_B_L");
    static aBFu8i_B_L lv;
    check2(sizeof(lv), 10, "sizeof(aBFu8i_B_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_L)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_L");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_L");
    check_field_offset(lv, v2, 1, "aBFu8i_B_L.v2");
    check_field_offset(lv, v3, 2, "aBFu8i_B_L.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_L(Test_aBFu8i_B_L, "aBFu8i_B_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_S()
{
  {
    init_simple_test("aBFu8i_B_S");
    static aBFu8i_B_S lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8i_B_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_S)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_S");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_S");
    check_field_offset(lv, v2, 1, "aBFu8i_B_S.v2");
    check_field_offset(lv, v3, 2, "aBFu8i_B_S.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_S(Test_aBFu8i_B_S, "aBFu8i_B_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_Uc()
{
  {
    init_simple_test("aBFu8i_B_Uc");
    static aBFu8i_B_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8i_B_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_Uc");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_Uc");
    check_field_offset(lv, v2, 1, "aBFu8i_B_Uc.v2");
    check_field_offset(lv, v3, 2, "aBFu8i_B_Uc.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_Uc(Test_aBFu8i_B_Uc, "aBFu8i_B_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_Ui()
{
  {
    init_simple_test("aBFu8i_B_Ui");
    static aBFu8i_B_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8i_B_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_Ui");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_Ui");
    check_field_offset(lv, v2, 1, "aBFu8i_B_Ui.v2");
    check_field_offset(lv, v3, 2, "aBFu8i_B_Ui.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_Ui(Test_aBFu8i_B_Ui, "aBFu8i_B_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_Ul()
{
  {
    init_simple_test("aBFu8i_B_Ul");
    static aBFu8i_B_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aBFu8i_B_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_Ul");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_Ul");
    check_field_offset(lv, v2, 1, "aBFu8i_B_Ul.v2");
    check_field_offset(lv, v3, 2, "aBFu8i_B_Ul.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_Ul(Test_aBFu8i_B_Ul, "aBFu8i_B_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_Us()
{
  {
    init_simple_test("aBFu8i_B_Us");
    static aBFu8i_B_Us lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8i_B_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_Us)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_Us");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_Us");
    check_field_offset(lv, v2, 1, "aBFu8i_B_Us.v2");
    check_field_offset(lv, v3, 2, "aBFu8i_B_Us.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_Us(Test_aBFu8i_B_Us, "aBFu8i_B_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_B_Vp()
{
  {
    init_simple_test("aBFu8i_B_Vp");
    static aBFu8i_B_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu8i_B_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_B_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_B_Vp");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_B_Vp");
    check_field_offset(lv, v2, 1, "aBFu8i_B_Vp.v2");
    check_field_offset(lv, v3, 2, "aBFu8i_B_Vp.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_B_Vp(Test_aBFu8i_B_Vp, "aBFu8i_B_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_BFu15i_B()
{
  {
    init_simple_test("aBFu8i_BFu15i_B");
    static aBFu8i_BFu15i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8i_BFu15i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_BFu15i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_BFu15i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu15i_B");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aBFu8i_BFu15i_B");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aBFu8i_BFu15i_B");
    check_field_offset(lv, v3, 3, "aBFu8i_BFu15i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_BFu15i_B(Test_aBFu8i_BFu15i_B, "aBFu8i_BFu15i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_BFu15ll_B()
{
  {
    init_simple_test("aBFu8i_BFu15ll_B");
    static aBFu8i_BFu15ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8i_BFu15ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_BFu15ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_BFu15ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu15ll_B");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aBFu8i_BFu15ll_B");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aBFu8i_BFu15ll_B");
    check_field_offset(lv, v3, 3, "aBFu8i_BFu15ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_BFu15ll_B(Test_aBFu8i_BFu15ll_B, "aBFu8i_BFu15ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_BFu15s_B()
{
  {
    init_simple_test("aBFu8i_BFu15s_B");
    static aBFu8i_BFu15s_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8i_BFu15s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_BFu15s_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_BFu15s_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu15s_B");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aBFu8i_BFu15s_B");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aBFu8i_BFu15s_B");
    check_field_offset(lv, v3, 3, "aBFu8i_BFu15s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_BFu15s_B(Test_aBFu8i_BFu15s_B, "aBFu8i_BFu15s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_BFu16i_B()
{
  {
    init_simple_test("aBFu8i_BFu16i_B");
    static aBFu8i_BFu16i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8i_BFu16i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_BFu16i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_BFu16i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu16i_B");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aBFu8i_BFu16i_B");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aBFu8i_BFu16i_B");
    check_field_offset(lv, v3, 3, "aBFu8i_BFu16i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_BFu16i_B(Test_aBFu8i_BFu16i_B, "aBFu8i_BFu16i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_BFu16ll_B()
{
  {
    init_simple_test("aBFu8i_BFu16ll_B");
    static aBFu8i_BFu16ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8i_BFu16ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_BFu16ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_BFu16ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu16ll_B");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aBFu8i_BFu16ll_B");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aBFu8i_BFu16ll_B");
    check_field_offset(lv, v3, 3, "aBFu8i_BFu16ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_BFu16ll_B(Test_aBFu8i_BFu16ll_B, "aBFu8i_BFu16ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_BFu16s_B()
{
  {
    init_simple_test("aBFu8i_BFu16s_B");
    static aBFu8i_BFu16s_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8i_BFu16s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_BFu16s_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_BFu16s_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu16s_B");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aBFu8i_BFu16s_B");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aBFu8i_BFu16s_B");
    check_field_offset(lv, v3, 3, "aBFu8i_BFu16s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_BFu16s_B(Test_aBFu8i_BFu16s_B, "aBFu8i_BFu16s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_BFu17i_B()
{
  {
    init_simple_test("aBFu8i_BFu17i_B");
    static aBFu8i_BFu17i_B lv;
    check2(sizeof(lv), 5, "sizeof(aBFu8i_BFu17i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_BFu17i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_BFu17i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu17i_B");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aBFu8i_BFu17i_B");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aBFu8i_BFu17i_B");
    check_field_offset(lv, v3, 4, "aBFu8i_BFu17i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_BFu17i_B(Test_aBFu8i_BFu17i_B, "aBFu8i_BFu17i_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_BFu17ll_B()
{
  {
    init_simple_test("aBFu8i_BFu17ll_B");
    static aBFu8i_BFu17ll_B lv;
    check2(sizeof(lv), 5, "sizeof(aBFu8i_BFu17ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_BFu17ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_BFu17ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu17ll_B");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aBFu8i_BFu17ll_B");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aBFu8i_BFu17ll_B");
    check_field_offset(lv, v3, 4, "aBFu8i_BFu17ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_BFu17ll_B(Test_aBFu8i_BFu17ll_B, "aBFu8i_BFu17ll_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_BFu1c_B()
{
  {
    init_simple_test("aBFu8i_BFu1c_B");
    static aBFu8i_BFu1c_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8i_BFu1c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_BFu1c_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_BFu1c_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu1c_B");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aBFu8i_BFu1c_B");
    check_field_offset(lv, v3, 2, "aBFu8i_BFu1c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_BFu1c_B(Test_aBFu8i_BFu1c_B, "aBFu8i_BFu1c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_BFu1i_B()
{
  {
    init_simple_test("aBFu8i_BFu1i_B");
    static aBFu8i_BFu1i_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8i_BFu1i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_BFu1i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_BFu1i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu1i_B");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aBFu8i_BFu1i_B");
    check_field_offset(lv, v3, 2, "aBFu8i_BFu1i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_BFu1i_B(Test_aBFu8i_BFu1i_B, "aBFu8i_BFu1i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_BFu1ll_B()
{
  {
    init_simple_test("aBFu8i_BFu1ll_B");
    static aBFu8i_BFu1ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8i_BFu1ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_BFu1ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_BFu1ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu1ll_B");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aBFu8i_BFu1ll_B");
    check_field_offset(lv, v3, 2, "aBFu8i_BFu1ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_BFu1ll_B(Test_aBFu8i_BFu1ll_B, "aBFu8i_BFu1ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_BFu1s_B()
{
  {
    init_simple_test("aBFu8i_BFu1s_B");
    static aBFu8i_BFu1s_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8i_BFu1s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_BFu1s_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_BFu1s_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu1s_B");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aBFu8i_BFu1s_B");
    check_field_offset(lv, v3, 2, "aBFu8i_BFu1s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_BFu1s_B(Test_aBFu8i_BFu1s_B, "aBFu8i_BFu1s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_BFu31i_B()
{
  {
    init_simple_test("aBFu8i_BFu31i_B");
    static aBFu8i_BFu31i_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8i_BFu31i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_BFu31i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_BFu31i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu31i_B");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aBFu8i_BFu31i_B");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aBFu8i_BFu31i_B");
    check_field_offset(lv, v3, 5, "aBFu8i_BFu31i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_BFu31i_B(Test_aBFu8i_BFu31i_B, "aBFu8i_BFu31i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_BFu31ll_B()
{
  {
    init_simple_test("aBFu8i_BFu31ll_B");
    static aBFu8i_BFu31ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8i_BFu31ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_BFu31ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_BFu31ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu31ll_B");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aBFu8i_BFu31ll_B");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aBFu8i_BFu31ll_B");
    check_field_offset(lv, v3, 5, "aBFu8i_BFu31ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_BFu31ll_B(Test_aBFu8i_BFu31ll_B, "aBFu8i_BFu31ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_BFu32i_B()
{
  {
    init_simple_test("aBFu8i_BFu32i_B");
    static aBFu8i_BFu32i_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8i_BFu32i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_BFu32i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_BFu32i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu32i_B");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aBFu8i_BFu32i_B");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aBFu8i_BFu32i_B");
    check_field_offset(lv, v3, 5, "aBFu8i_BFu32i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_BFu32i_B(Test_aBFu8i_BFu32i_B, "aBFu8i_BFu32i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_BFu32ll_B()
{
  {
    init_simple_test("aBFu8i_BFu32ll_B");
    static aBFu8i_BFu32ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8i_BFu32ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_BFu32ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_BFu32ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu32ll_B");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aBFu8i_BFu32ll_B");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aBFu8i_BFu32ll_B");
    check_field_offset(lv, v3, 5, "aBFu8i_BFu32ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_BFu32ll_B(Test_aBFu8i_BFu32ll_B, "aBFu8i_BFu32ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_BFu33_B()
{
  {
    init_simple_test("aBFu8i_BFu33_B");
    static aBFu8i_BFu33_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu8i_BFu33_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_BFu33_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_BFu33_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu33_B");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aBFu8i_BFu33_B");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aBFu8i_BFu33_B");
    check_field_offset(lv, v3, 6, "aBFu8i_BFu33_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_BFu33_B(Test_aBFu8i_BFu33_B, "aBFu8i_BFu33_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_BFu7c_B()
{
  {
    init_simple_test("aBFu8i_BFu7c_B");
    static aBFu8i_BFu7c_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8i_BFu7c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_BFu7c_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_BFu7c_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu7c_B");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aBFu8i_BFu7c_B");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aBFu8i_BFu7c_B");
    check_field_offset(lv, v3, 2, "aBFu8i_BFu7c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_BFu7c_B(Test_aBFu8i_BFu7c_B, "aBFu8i_BFu7c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_BFu7i_B()
{
  {
    init_simple_test("aBFu8i_BFu7i_B");
    static aBFu8i_BFu7i_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8i_BFu7i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_BFu7i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_BFu7i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu7i_B");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aBFu8i_BFu7i_B");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aBFu8i_BFu7i_B");
    check_field_offset(lv, v3, 2, "aBFu8i_BFu7i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_BFu7i_B(Test_aBFu8i_BFu7i_B, "aBFu8i_BFu7i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_BFu7ll_B()
{
  {
    init_simple_test("aBFu8i_BFu7ll_B");
    static aBFu8i_BFu7ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8i_BFu7ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_BFu7ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_BFu7ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu7ll_B");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aBFu8i_BFu7ll_B");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aBFu8i_BFu7ll_B");
    check_field_offset(lv, v3, 2, "aBFu8i_BFu7ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_BFu7ll_B(Test_aBFu8i_BFu7ll_B, "aBFu8i_BFu7ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_BFu7s_B()
{
  {
    init_simple_test("aBFu8i_BFu7s_B");
    static aBFu8i_BFu7s_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8i_BFu7s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_BFu7s_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_BFu7s_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu7s_B");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aBFu8i_BFu7s_B");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aBFu8i_BFu7s_B");
    check_field_offset(lv, v3, 2, "aBFu8i_BFu7s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_BFu7s_B(Test_aBFu8i_BFu7s_B, "aBFu8i_BFu7s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_BFu8c_B()
{
  {
    init_simple_test("aBFu8i_BFu8c_B");
    static aBFu8i_BFu8c_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8i_BFu8c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_BFu8c_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_BFu8c_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu8c_B");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aBFu8i_BFu8c_B");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu8c_B");
    check_field_offset(lv, v3, 2, "aBFu8i_BFu8c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_BFu8c_B(Test_aBFu8i_BFu8c_B, "aBFu8i_BFu8c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_BFu8i_B()
{
  {
    init_simple_test("aBFu8i_BFu8i_B");
    static aBFu8i_BFu8i_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8i_BFu8i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_BFu8i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_BFu8i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu8i_B");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aBFu8i_BFu8i_B");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu8i_B");
    check_field_offset(lv, v3, 2, "aBFu8i_BFu8i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_BFu8i_B(Test_aBFu8i_BFu8i_B, "aBFu8i_BFu8i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_BFu8ll_B()
{
  {
    init_simple_test("aBFu8i_BFu8ll_B");
    static aBFu8i_BFu8ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8i_BFu8ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_BFu8ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_BFu8ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu8ll_B");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aBFu8i_BFu8ll_B");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu8ll_B");
    check_field_offset(lv, v3, 2, "aBFu8i_BFu8ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_BFu8ll_B(Test_aBFu8i_BFu8ll_B, "aBFu8i_BFu8ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_BFu8s_B()
{
  {
    init_simple_test("aBFu8i_BFu8s_B");
    static aBFu8i_BFu8s_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8i_BFu8s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_BFu8s_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_BFu8s_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu8s_B");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aBFu8i_BFu8s_B");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu8s_B");
    check_field_offset(lv, v3, 2, "aBFu8i_BFu8s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_BFu8s_B(Test_aBFu8i_BFu8s_B, "aBFu8i_BFu8s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_BFu9i_B()
{
  {
    init_simple_test("aBFu8i_BFu9i_B");
    static aBFu8i_BFu9i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8i_BFu9i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_BFu9i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_BFu9i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu9i_B");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aBFu8i_BFu9i_B");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aBFu8i_BFu9i_B");
    check_field_offset(lv, v3, 3, "aBFu8i_BFu9i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_BFu9i_B(Test_aBFu8i_BFu9i_B, "aBFu8i_BFu9i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_BFu9ll_B()
{
  {
    init_simple_test("aBFu8i_BFu9ll_B");
    static aBFu8i_BFu9ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8i_BFu9ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_BFu9ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_BFu9ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu9ll_B");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aBFu8i_BFu9ll_B");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aBFu8i_BFu9ll_B");
    check_field_offset(lv, v3, 3, "aBFu8i_BFu9ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_BFu9ll_B(Test_aBFu8i_BFu9ll_B, "aBFu8i_BFu9ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_BFu9s_B()
{
  {
    init_simple_test("aBFu8i_BFu9s_B");
    static aBFu8i_BFu9s_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8i_BFu9s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_BFu9s_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_BFu9s_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_BFu9s_B");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aBFu8i_BFu9s_B");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aBFu8i_BFu9s_B");
    check_field_offset(lv, v3, 3, "aBFu8i_BFu9s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_BFu9s_B(Test_aBFu8i_BFu9s_B, "aBFu8i_BFu9s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_C_B()
{
  {
    init_simple_test("aBFu8i_C_B");
    static aBFu8i_C_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8i_C_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_C_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_C_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_C_B");
    check_field_offset(lv, v2, 1, "aBFu8i_C_B.v2");
    check_field_offset(lv, v3, 2, "aBFu8i_C_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_C_B(Test_aBFu8i_C_B, "aBFu8i_C_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_D_B()
{
  {
    init_simple_test("aBFu8i_D_B");
    static aBFu8i_D_B lv;
    check2(sizeof(lv), 10, "sizeof(aBFu8i_D_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_D_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_D_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_D_B");
    check_field_offset(lv, v2, 1, "aBFu8i_D_B.v2");
    check_field_offset(lv, v3, 9, "aBFu8i_D_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_D_B(Test_aBFu8i_D_B, "aBFu8i_D_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_F_B()
{
  {
    init_simple_test("aBFu8i_F_B");
    static aBFu8i_F_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8i_F_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_F_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_F_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_F_B");
    check_field_offset(lv, v2, 1, "aBFu8i_F_B.v2");
    check_field_offset(lv, v3, 5, "aBFu8i_F_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_F_B(Test_aBFu8i_F_B, "aBFu8i_F_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_I_B()
{
  {
    init_simple_test("aBFu8i_I_B");
    static aBFu8i_I_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8i_I_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_I_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_I_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_I_B");
    check_field_offset(lv, v2, 1, "aBFu8i_I_B.v2");
    check_field_offset(lv, v3, 5, "aBFu8i_I_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_I_B(Test_aBFu8i_I_B, "aBFu8i_I_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_Ip_B()
{
  {
    init_simple_test("aBFu8i_Ip_B");
    static aBFu8i_Ip_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu8i_Ip_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_Ip_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_Ip_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_Ip_B");
    check_field_offset(lv, v2, 1, "aBFu8i_Ip_B.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aBFu8i_Ip_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_Ip_B(Test_aBFu8i_Ip_B, "aBFu8i_Ip_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_L_B()
{
  {
    init_simple_test("aBFu8i_L_B");
    static aBFu8i_L_B lv;
    check2(sizeof(lv), 10, "sizeof(aBFu8i_L_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_L_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_L_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_L_B");
    check_field_offset(lv, v2, 1, "aBFu8i_L_B.v2");
    check_field_offset(lv, v3, 9, "aBFu8i_L_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_L_B(Test_aBFu8i_L_B, "aBFu8i_L_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_S_B()
{
  {
    init_simple_test("aBFu8i_S_B");
    static aBFu8i_S_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8i_S_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_S_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_S_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_S_B");
    check_field_offset(lv, v2, 1, "aBFu8i_S_B.v2");
    check_field_offset(lv, v3, 3, "aBFu8i_S_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_S_B(Test_aBFu8i_S_B, "aBFu8i_S_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_Uc_B()
{
  {
    init_simple_test("aBFu8i_Uc_B");
    static aBFu8i_Uc_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8i_Uc_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_Uc_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_Uc_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_Uc_B");
    check_field_offset(lv, v2, 1, "aBFu8i_Uc_B.v2");
    check_field_offset(lv, v3, 2, "aBFu8i_Uc_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_Uc_B(Test_aBFu8i_Uc_B, "aBFu8i_Uc_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_Ui_B()
{
  {
    init_simple_test("aBFu8i_Ui_B");
    static aBFu8i_Ui_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8i_Ui_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_Ui_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_Ui_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_Ui_B");
    check_field_offset(lv, v2, 1, "aBFu8i_Ui_B.v2");
    check_field_offset(lv, v3, 5, "aBFu8i_Ui_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_Ui_B(Test_aBFu8i_Ui_B, "aBFu8i_Ui_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_Ul_B()
{
  {
    init_simple_test("aBFu8i_Ul_B");
    static aBFu8i_Ul_B lv;
    check2(sizeof(lv), 10, "sizeof(aBFu8i_Ul_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_Ul_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_Ul_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_Ul_B");
    check_field_offset(lv, v2, 1, "aBFu8i_Ul_B.v2");
    check_field_offset(lv, v3, 9, "aBFu8i_Ul_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_Ul_B(Test_aBFu8i_Ul_B, "aBFu8i_Ul_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_Us_B()
{
  {
    init_simple_test("aBFu8i_Us_B");
    static aBFu8i_Us_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8i_Us_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_Us_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_Us_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_Us_B");
    check_field_offset(lv, v2, 1, "aBFu8i_Us_B.v2");
    check_field_offset(lv, v3, 3, "aBFu8i_Us_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_Us_B(Test_aBFu8i_Us_B, "aBFu8i_Us_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8i_Vp_B()
{
  {
    init_simple_test("aBFu8i_Vp_B");
    static aBFu8i_Vp_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu8i_Vp_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8i_Vp_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8i_Vp_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8i_Vp_B");
    check_field_offset(lv, v2, 1, "aBFu8i_Vp_B.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aBFu8i_Vp_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8i_Vp_B(Test_aBFu8i_Vp_B, "aBFu8i_Vp_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B()
{
  {
    init_simple_test("aBFu8ll_B");
    static aBFu8ll_B lv;
    check2(sizeof(lv), 2, "sizeof(aBFu8ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B");
    check_field_offset(lv, v2, 1, "aBFu8ll_B.v2");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B(Test_aBFu8ll_B, "aBFu8ll_B", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_B()
{
  {
    init_simple_test("aBFu8ll_B_B");
    static aBFu8ll_B_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8ll_B_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_B");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_B.v2");
    check_field_offset(lv, v3, 2, "aBFu8ll_B_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_B(Test_aBFu8ll_B_B, "aBFu8ll_B_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_BFu15i()
{
  {
    init_simple_test("aBFu8ll_B_BFu15i");
    static aBFu8ll_B_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8ll_B_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu15i");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_BFu15i.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aBFu8ll_B_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aBFu8ll_B_BFu15i");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_BFu15i(Test_aBFu8ll_B_BFu15i, "aBFu8ll_B_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_BFu15ll()
{
  {
    init_simple_test("aBFu8ll_B_BFu15ll");
    static aBFu8ll_B_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8ll_B_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu15ll");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_BFu15ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aBFu8ll_B_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aBFu8ll_B_BFu15ll");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_BFu15ll(Test_aBFu8ll_B_BFu15ll, "aBFu8ll_B_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_BFu15s()
{
  {
    init_simple_test("aBFu8ll_B_BFu15s");
    static aBFu8ll_B_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8ll_B_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu15s");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_BFu15s.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aBFu8ll_B_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aBFu8ll_B_BFu15s");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_BFu15s(Test_aBFu8ll_B_BFu15s, "aBFu8ll_B_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_BFu16i()
{
  {
    init_simple_test("aBFu8ll_B_BFu16i");
    static aBFu8ll_B_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8ll_B_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu16i");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_BFu16i.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aBFu8ll_B_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aBFu8ll_B_BFu16i");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_BFu16i(Test_aBFu8ll_B_BFu16i, "aBFu8ll_B_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_BFu16ll()
{
  {
    init_simple_test("aBFu8ll_B_BFu16ll");
    static aBFu8ll_B_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8ll_B_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu16ll");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_BFu16ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aBFu8ll_B_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aBFu8ll_B_BFu16ll");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_BFu16ll(Test_aBFu8ll_B_BFu16ll, "aBFu8ll_B_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_BFu16s()
{
  {
    init_simple_test("aBFu8ll_B_BFu16s");
    static aBFu8ll_B_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8ll_B_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu16s");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_BFu16s.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aBFu8ll_B_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aBFu8ll_B_BFu16s");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_BFu16s(Test_aBFu8ll_B_BFu16s, "aBFu8ll_B_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_BFu17i()
{
  {
    init_simple_test("aBFu8ll_B_BFu17i");
    static aBFu8ll_B_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu8ll_B_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu17i");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_BFu17i.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aBFu8ll_B_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aBFu8ll_B_BFu17i");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_BFu17i(Test_aBFu8ll_B_BFu17i, "aBFu8ll_B_BFu17i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_BFu17ll()
{
  {
    init_simple_test("aBFu8ll_B_BFu17ll");
    static aBFu8ll_B_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu8ll_B_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu17ll");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_BFu17ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aBFu8ll_B_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aBFu8ll_B_BFu17ll");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_BFu17ll(Test_aBFu8ll_B_BFu17ll, "aBFu8ll_B_BFu17ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_BFu1c()
{
  {
    init_simple_test("aBFu8ll_B_BFu1c");
    static aBFu8ll_B_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8ll_B_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu1c");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_BFu1c.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu8ll_B_BFu1c");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_BFu1c(Test_aBFu8ll_B_BFu1c, "aBFu8ll_B_BFu1c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_BFu1i()
{
  {
    init_simple_test("aBFu8ll_B_BFu1i");
    static aBFu8ll_B_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8ll_B_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu1i");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_BFu1i.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu8ll_B_BFu1i");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_BFu1i(Test_aBFu8ll_B_BFu1i, "aBFu8ll_B_BFu1i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_BFu1ll()
{
  {
    init_simple_test("aBFu8ll_B_BFu1ll");
    static aBFu8ll_B_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8ll_B_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu1ll");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_BFu1ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu8ll_B_BFu1ll");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_BFu1ll(Test_aBFu8ll_B_BFu1ll, "aBFu8ll_B_BFu1ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_BFu1s()
{
  {
    init_simple_test("aBFu8ll_B_BFu1s");
    static aBFu8ll_B_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8ll_B_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu1s");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_BFu1s.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu8ll_B_BFu1s");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_BFu1s(Test_aBFu8ll_B_BFu1s, "aBFu8ll_B_BFu1s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_BFu31i()
{
  {
    init_simple_test("aBFu8ll_B_BFu31i");
    static aBFu8ll_B_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8ll_B_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu31i");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_BFu31i.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aBFu8ll_B_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aBFu8ll_B_BFu31i");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_BFu31i(Test_aBFu8ll_B_BFu31i, "aBFu8ll_B_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_BFu31ll()
{
  {
    init_simple_test("aBFu8ll_B_BFu31ll");
    static aBFu8ll_B_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8ll_B_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu31ll");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_BFu31ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aBFu8ll_B_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aBFu8ll_B_BFu31ll");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_BFu31ll(Test_aBFu8ll_B_BFu31ll, "aBFu8ll_B_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_BFu32i()
{
  {
    init_simple_test("aBFu8ll_B_BFu32i");
    static aBFu8ll_B_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8ll_B_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu32i");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_BFu32i.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aBFu8ll_B_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aBFu8ll_B_BFu32i");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_BFu32i(Test_aBFu8ll_B_BFu32i, "aBFu8ll_B_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_BFu32ll()
{
  {
    init_simple_test("aBFu8ll_B_BFu32ll");
    static aBFu8ll_B_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8ll_B_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu32ll");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_BFu32ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aBFu8ll_B_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aBFu8ll_B_BFu32ll");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_BFu32ll(Test_aBFu8ll_B_BFu32ll, "aBFu8ll_B_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_BFu33()
{
  {
    init_simple_test("aBFu8ll_B_BFu33");
    static aBFu8ll_B_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aBFu8ll_B_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu33");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_BFu33.v2");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "aBFu8ll_B_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "aBFu8ll_B_BFu33");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_BFu33(Test_aBFu8ll_B_BFu33, "aBFu8ll_B_BFu33", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_BFu7c()
{
  {
    init_simple_test("aBFu8ll_B_BFu7c");
    static aBFu8ll_B_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8ll_B_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu7c");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_BFu7c.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu8ll_B_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu8ll_B_BFu7c");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_BFu7c(Test_aBFu8ll_B_BFu7c, "aBFu8ll_B_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_BFu7i()
{
  {
    init_simple_test("aBFu8ll_B_BFu7i");
    static aBFu8ll_B_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8ll_B_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu7i");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_BFu7i.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu8ll_B_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu8ll_B_BFu7i");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_BFu7i(Test_aBFu8ll_B_BFu7i, "aBFu8ll_B_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_BFu7ll()
{
  {
    init_simple_test("aBFu8ll_B_BFu7ll");
    static aBFu8ll_B_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8ll_B_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu7ll");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_BFu7ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu8ll_B_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu8ll_B_BFu7ll");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_BFu7ll(Test_aBFu8ll_B_BFu7ll, "aBFu8ll_B_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_BFu7s()
{
  {
    init_simple_test("aBFu8ll_B_BFu7s");
    static aBFu8ll_B_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8ll_B_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu7s");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_BFu7s.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu8ll_B_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu8ll_B_BFu7s");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_BFu7s(Test_aBFu8ll_B_BFu7s, "aBFu8ll_B_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_BFu8c()
{
  {
    init_simple_test("aBFu8ll_B_BFu8c");
    static aBFu8ll_B_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8ll_B_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu8c");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_BFu8c.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu8ll_B_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu8c");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_BFu8c(Test_aBFu8ll_B_BFu8c, "aBFu8ll_B_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_BFu8i()
{
  {
    init_simple_test("aBFu8ll_B_BFu8i");
    static aBFu8ll_B_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8ll_B_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu8i");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_BFu8i.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu8ll_B_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu8i");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_BFu8i(Test_aBFu8ll_B_BFu8i, "aBFu8ll_B_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_BFu8ll()
{
  {
    init_simple_test("aBFu8ll_B_BFu8ll");
    static aBFu8ll_B_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8ll_B_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu8ll");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_BFu8ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu8ll_B_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu8ll");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_BFu8ll(Test_aBFu8ll_B_BFu8ll, "aBFu8ll_B_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_BFu8s()
{
  {
    init_simple_test("aBFu8ll_B_BFu8s");
    static aBFu8ll_B_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8ll_B_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu8s");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_BFu8s.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu8ll_B_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu8s");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_BFu8s(Test_aBFu8ll_B_BFu8s, "aBFu8ll_B_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_BFu9i()
{
  {
    init_simple_test("aBFu8ll_B_BFu9i");
    static aBFu8ll_B_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8ll_B_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu9i");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_BFu9i.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aBFu8ll_B_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aBFu8ll_B_BFu9i");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_BFu9i(Test_aBFu8ll_B_BFu9i, "aBFu8ll_B_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_BFu9ll()
{
  {
    init_simple_test("aBFu8ll_B_BFu9ll");
    static aBFu8ll_B_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8ll_B_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu9ll");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_BFu9ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aBFu8ll_B_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aBFu8ll_B_BFu9ll");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_BFu9ll(Test_aBFu8ll_B_BFu9ll, "aBFu8ll_B_BFu9ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_BFu9s()
{
  {
    init_simple_test("aBFu8ll_B_BFu9s");
    static aBFu8ll_B_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8ll_B_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_BFu9s");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_BFu9s.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aBFu8ll_B_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aBFu8ll_B_BFu9s");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_BFu9s(Test_aBFu8ll_B_BFu9s, "aBFu8ll_B_BFu9s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_C()
{
  {
    init_simple_test("aBFu8ll_B_C");
    static aBFu8ll_B_C lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8ll_B_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_C)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_C");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_C");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_C.v2");
    check_field_offset(lv, v3, 2, "aBFu8ll_B_C.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_C(Test_aBFu8ll_B_C, "aBFu8ll_B_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_D()
{
  {
    init_simple_test("aBFu8ll_B_D");
    static aBFu8ll_B_D lv;
    check2(sizeof(lv), 10, "sizeof(aBFu8ll_B_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_D)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_D");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_D");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_D.v2");
    check_field_offset(lv, v3, 2, "aBFu8ll_B_D.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_D(Test_aBFu8ll_B_D, "aBFu8ll_B_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_F()
{
  {
    init_simple_test("aBFu8ll_B_F");
    static aBFu8ll_B_F lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8ll_B_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_F)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_F");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_F");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_F.v2");
    check_field_offset(lv, v3, 2, "aBFu8ll_B_F.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_F(Test_aBFu8ll_B_F, "aBFu8ll_B_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_I()
{
  {
    init_simple_test("aBFu8ll_B_I");
    static aBFu8ll_B_I lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8ll_B_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_I)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_I");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_I");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_I.v2");
    check_field_offset(lv, v3, 2, "aBFu8ll_B_I.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_I(Test_aBFu8ll_B_I, "aBFu8ll_B_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_Ip()
{
  {
    init_simple_test("aBFu8ll_B_Ip");
    static aBFu8ll_B_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu8ll_B_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_Ip");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_Ip");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_Ip.v2");
    check_field_offset(lv, v3, 2, "aBFu8ll_B_Ip.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_Ip(Test_aBFu8ll_B_Ip, "aBFu8ll_B_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_L()
{
  {
    init_simple_test("aBFu8ll_B_L");
    static aBFu8ll_B_L lv;
    check2(sizeof(lv), 10, "sizeof(aBFu8ll_B_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_L)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_L");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_L");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_L.v2");
    check_field_offset(lv, v3, 2, "aBFu8ll_B_L.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_L(Test_aBFu8ll_B_L, "aBFu8ll_B_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_S()
{
  {
    init_simple_test("aBFu8ll_B_S");
    static aBFu8ll_B_S lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8ll_B_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_S)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_S");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_S");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_S.v2");
    check_field_offset(lv, v3, 2, "aBFu8ll_B_S.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_S(Test_aBFu8ll_B_S, "aBFu8ll_B_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_Uc()
{
  {
    init_simple_test("aBFu8ll_B_Uc");
    static aBFu8ll_B_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8ll_B_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_Uc");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_Uc");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_Uc.v2");
    check_field_offset(lv, v3, 2, "aBFu8ll_B_Uc.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_Uc(Test_aBFu8ll_B_Uc, "aBFu8ll_B_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_Ui()
{
  {
    init_simple_test("aBFu8ll_B_Ui");
    static aBFu8ll_B_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8ll_B_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_Ui");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_Ui");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_Ui.v2");
    check_field_offset(lv, v3, 2, "aBFu8ll_B_Ui.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_Ui(Test_aBFu8ll_B_Ui, "aBFu8ll_B_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_Ul()
{
  {
    init_simple_test("aBFu8ll_B_Ul");
    static aBFu8ll_B_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aBFu8ll_B_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_Ul");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_Ul");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_Ul.v2");
    check_field_offset(lv, v3, 2, "aBFu8ll_B_Ul.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_Ul(Test_aBFu8ll_B_Ul, "aBFu8ll_B_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_Us()
{
  {
    init_simple_test("aBFu8ll_B_Us");
    static aBFu8ll_B_Us lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8ll_B_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_Us)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_Us");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_Us");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_Us.v2");
    check_field_offset(lv, v3, 2, "aBFu8ll_B_Us.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_Us(Test_aBFu8ll_B_Us, "aBFu8ll_B_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_B_Vp()
{
  {
    init_simple_test("aBFu8ll_B_Vp");
    static aBFu8ll_B_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu8ll_B_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_B_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_B_Vp");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_B_Vp");
    check_field_offset(lv, v2, 1, "aBFu8ll_B_Vp.v2");
    check_field_offset(lv, v3, 2, "aBFu8ll_B_Vp.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_B_Vp(Test_aBFu8ll_B_Vp, "aBFu8ll_B_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_BFu15i_B()
{
  {
    init_simple_test("aBFu8ll_BFu15i_B");
    static aBFu8ll_BFu15i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8ll_BFu15i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_BFu15i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_BFu15i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu15i_B");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aBFu8ll_BFu15i_B");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aBFu8ll_BFu15i_B");
    check_field_offset(lv, v3, 3, "aBFu8ll_BFu15i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_BFu15i_B(Test_aBFu8ll_BFu15i_B, "aBFu8ll_BFu15i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_BFu15ll_B()
{
  {
    init_simple_test("aBFu8ll_BFu15ll_B");
    static aBFu8ll_BFu15ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8ll_BFu15ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_BFu15ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_BFu15ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu15ll_B");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aBFu8ll_BFu15ll_B");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aBFu8ll_BFu15ll_B");
    check_field_offset(lv, v3, 3, "aBFu8ll_BFu15ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_BFu15ll_B(Test_aBFu8ll_BFu15ll_B, "aBFu8ll_BFu15ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_BFu15s_B()
{
  {
    init_simple_test("aBFu8ll_BFu15s_B");
    static aBFu8ll_BFu15s_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8ll_BFu15s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_BFu15s_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_BFu15s_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu15s_B");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aBFu8ll_BFu15s_B");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aBFu8ll_BFu15s_B");
    check_field_offset(lv, v3, 3, "aBFu8ll_BFu15s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_BFu15s_B(Test_aBFu8ll_BFu15s_B, "aBFu8ll_BFu15s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_BFu16i_B()
{
  {
    init_simple_test("aBFu8ll_BFu16i_B");
    static aBFu8ll_BFu16i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8ll_BFu16i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_BFu16i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_BFu16i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu16i_B");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aBFu8ll_BFu16i_B");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aBFu8ll_BFu16i_B");
    check_field_offset(lv, v3, 3, "aBFu8ll_BFu16i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_BFu16i_B(Test_aBFu8ll_BFu16i_B, "aBFu8ll_BFu16i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_BFu16ll_B()
{
  {
    init_simple_test("aBFu8ll_BFu16ll_B");
    static aBFu8ll_BFu16ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8ll_BFu16ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_BFu16ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_BFu16ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu16ll_B");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aBFu8ll_BFu16ll_B");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aBFu8ll_BFu16ll_B");
    check_field_offset(lv, v3, 3, "aBFu8ll_BFu16ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_BFu16ll_B(Test_aBFu8ll_BFu16ll_B, "aBFu8ll_BFu16ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_BFu16s_B()
{
  {
    init_simple_test("aBFu8ll_BFu16s_B");
    static aBFu8ll_BFu16s_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8ll_BFu16s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_BFu16s_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_BFu16s_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu16s_B");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aBFu8ll_BFu16s_B");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aBFu8ll_BFu16s_B");
    check_field_offset(lv, v3, 3, "aBFu8ll_BFu16s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_BFu16s_B(Test_aBFu8ll_BFu16s_B, "aBFu8ll_BFu16s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_BFu17i_B()
{
  {
    init_simple_test("aBFu8ll_BFu17i_B");
    static aBFu8ll_BFu17i_B lv;
    check2(sizeof(lv), 5, "sizeof(aBFu8ll_BFu17i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_BFu17i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_BFu17i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu17i_B");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aBFu8ll_BFu17i_B");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aBFu8ll_BFu17i_B");
    check_field_offset(lv, v3, 4, "aBFu8ll_BFu17i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_BFu17i_B(Test_aBFu8ll_BFu17i_B, "aBFu8ll_BFu17i_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_BFu17ll_B()
{
  {
    init_simple_test("aBFu8ll_BFu17ll_B");
    static aBFu8ll_BFu17ll_B lv;
    check2(sizeof(lv), 5, "sizeof(aBFu8ll_BFu17ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_BFu17ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_BFu17ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu17ll_B");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aBFu8ll_BFu17ll_B");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aBFu8ll_BFu17ll_B");
    check_field_offset(lv, v3, 4, "aBFu8ll_BFu17ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_BFu17ll_B(Test_aBFu8ll_BFu17ll_B, "aBFu8ll_BFu17ll_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_BFu1c_B()
{
  {
    init_simple_test("aBFu8ll_BFu1c_B");
    static aBFu8ll_BFu1c_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8ll_BFu1c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_BFu1c_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_BFu1c_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu1c_B");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aBFu8ll_BFu1c_B");
    check_field_offset(lv, v3, 2, "aBFu8ll_BFu1c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_BFu1c_B(Test_aBFu8ll_BFu1c_B, "aBFu8ll_BFu1c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_BFu1i_B()
{
  {
    init_simple_test("aBFu8ll_BFu1i_B");
    static aBFu8ll_BFu1i_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8ll_BFu1i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_BFu1i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_BFu1i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu1i_B");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aBFu8ll_BFu1i_B");
    check_field_offset(lv, v3, 2, "aBFu8ll_BFu1i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_BFu1i_B(Test_aBFu8ll_BFu1i_B, "aBFu8ll_BFu1i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_BFu1ll_B()
{
  {
    init_simple_test("aBFu8ll_BFu1ll_B");
    static aBFu8ll_BFu1ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8ll_BFu1ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_BFu1ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_BFu1ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu1ll_B");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aBFu8ll_BFu1ll_B");
    check_field_offset(lv, v3, 2, "aBFu8ll_BFu1ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_BFu1ll_B(Test_aBFu8ll_BFu1ll_B, "aBFu8ll_BFu1ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_BFu1s_B()
{
  {
    init_simple_test("aBFu8ll_BFu1s_B");
    static aBFu8ll_BFu1s_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8ll_BFu1s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_BFu1s_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_BFu1s_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu1s_B");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aBFu8ll_BFu1s_B");
    check_field_offset(lv, v3, 2, "aBFu8ll_BFu1s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_BFu1s_B(Test_aBFu8ll_BFu1s_B, "aBFu8ll_BFu1s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_BFu31i_B()
{
  {
    init_simple_test("aBFu8ll_BFu31i_B");
    static aBFu8ll_BFu31i_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8ll_BFu31i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_BFu31i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_BFu31i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu31i_B");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aBFu8ll_BFu31i_B");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aBFu8ll_BFu31i_B");
    check_field_offset(lv, v3, 5, "aBFu8ll_BFu31i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_BFu31i_B(Test_aBFu8ll_BFu31i_B, "aBFu8ll_BFu31i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_BFu31ll_B()
{
  {
    init_simple_test("aBFu8ll_BFu31ll_B");
    static aBFu8ll_BFu31ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8ll_BFu31ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_BFu31ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_BFu31ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu31ll_B");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aBFu8ll_BFu31ll_B");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aBFu8ll_BFu31ll_B");
    check_field_offset(lv, v3, 5, "aBFu8ll_BFu31ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_BFu31ll_B(Test_aBFu8ll_BFu31ll_B, "aBFu8ll_BFu31ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_BFu32i_B()
{
  {
    init_simple_test("aBFu8ll_BFu32i_B");
    static aBFu8ll_BFu32i_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8ll_BFu32i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_BFu32i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_BFu32i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu32i_B");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aBFu8ll_BFu32i_B");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aBFu8ll_BFu32i_B");
    check_field_offset(lv, v3, 5, "aBFu8ll_BFu32i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_BFu32i_B(Test_aBFu8ll_BFu32i_B, "aBFu8ll_BFu32i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_BFu32ll_B()
{
  {
    init_simple_test("aBFu8ll_BFu32ll_B");
    static aBFu8ll_BFu32ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8ll_BFu32ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_BFu32ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_BFu32ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu32ll_B");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aBFu8ll_BFu32ll_B");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aBFu8ll_BFu32ll_B");
    check_field_offset(lv, v3, 5, "aBFu8ll_BFu32ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_BFu32ll_B(Test_aBFu8ll_BFu32ll_B, "aBFu8ll_BFu32ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_BFu33_B()
{
  {
    init_simple_test("aBFu8ll_BFu33_B");
    static aBFu8ll_BFu33_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu8ll_BFu33_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_BFu33_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_BFu33_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu33_B");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aBFu8ll_BFu33_B");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aBFu8ll_BFu33_B");
    check_field_offset(lv, v3, 6, "aBFu8ll_BFu33_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_BFu33_B(Test_aBFu8ll_BFu33_B, "aBFu8ll_BFu33_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_BFu7c_B()
{
  {
    init_simple_test("aBFu8ll_BFu7c_B");
    static aBFu8ll_BFu7c_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8ll_BFu7c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_BFu7c_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_BFu7c_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu7c_B");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aBFu8ll_BFu7c_B");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aBFu8ll_BFu7c_B");
    check_field_offset(lv, v3, 2, "aBFu8ll_BFu7c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_BFu7c_B(Test_aBFu8ll_BFu7c_B, "aBFu8ll_BFu7c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_BFu7i_B()
{
  {
    init_simple_test("aBFu8ll_BFu7i_B");
    static aBFu8ll_BFu7i_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8ll_BFu7i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_BFu7i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_BFu7i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu7i_B");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aBFu8ll_BFu7i_B");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aBFu8ll_BFu7i_B");
    check_field_offset(lv, v3, 2, "aBFu8ll_BFu7i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_BFu7i_B(Test_aBFu8ll_BFu7i_B, "aBFu8ll_BFu7i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_BFu7ll_B()
{
  {
    init_simple_test("aBFu8ll_BFu7ll_B");
    static aBFu8ll_BFu7ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8ll_BFu7ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_BFu7ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_BFu7ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu7ll_B");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aBFu8ll_BFu7ll_B");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aBFu8ll_BFu7ll_B");
    check_field_offset(lv, v3, 2, "aBFu8ll_BFu7ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_BFu7ll_B(Test_aBFu8ll_BFu7ll_B, "aBFu8ll_BFu7ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_BFu7s_B()
{
  {
    init_simple_test("aBFu8ll_BFu7s_B");
    static aBFu8ll_BFu7s_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8ll_BFu7s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_BFu7s_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_BFu7s_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu7s_B");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aBFu8ll_BFu7s_B");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aBFu8ll_BFu7s_B");
    check_field_offset(lv, v3, 2, "aBFu8ll_BFu7s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_BFu7s_B(Test_aBFu8ll_BFu7s_B, "aBFu8ll_BFu7s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_BFu8c_B()
{
  {
    init_simple_test("aBFu8ll_BFu8c_B");
    static aBFu8ll_BFu8c_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8ll_BFu8c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_BFu8c_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_BFu8c_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu8c_B");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aBFu8ll_BFu8c_B");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu8c_B");
    check_field_offset(lv, v3, 2, "aBFu8ll_BFu8c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_BFu8c_B(Test_aBFu8ll_BFu8c_B, "aBFu8ll_BFu8c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_BFu8i_B()
{
  {
    init_simple_test("aBFu8ll_BFu8i_B");
    static aBFu8ll_BFu8i_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8ll_BFu8i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_BFu8i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_BFu8i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu8i_B");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aBFu8ll_BFu8i_B");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu8i_B");
    check_field_offset(lv, v3, 2, "aBFu8ll_BFu8i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_BFu8i_B(Test_aBFu8ll_BFu8i_B, "aBFu8ll_BFu8i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_BFu8ll_B()
{
  {
    init_simple_test("aBFu8ll_BFu8ll_B");
    static aBFu8ll_BFu8ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8ll_BFu8ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_BFu8ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_BFu8ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu8ll_B");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aBFu8ll_BFu8ll_B");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu8ll_B");
    check_field_offset(lv, v3, 2, "aBFu8ll_BFu8ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_BFu8ll_B(Test_aBFu8ll_BFu8ll_B, "aBFu8ll_BFu8ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_BFu8s_B()
{
  {
    init_simple_test("aBFu8ll_BFu8s_B");
    static aBFu8ll_BFu8s_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8ll_BFu8s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_BFu8s_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_BFu8s_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu8s_B");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aBFu8ll_BFu8s_B");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu8s_B");
    check_field_offset(lv, v3, 2, "aBFu8ll_BFu8s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_BFu8s_B(Test_aBFu8ll_BFu8s_B, "aBFu8ll_BFu8s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_BFu9i_B()
{
  {
    init_simple_test("aBFu8ll_BFu9i_B");
    static aBFu8ll_BFu9i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8ll_BFu9i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_BFu9i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_BFu9i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu9i_B");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aBFu8ll_BFu9i_B");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aBFu8ll_BFu9i_B");
    check_field_offset(lv, v3, 3, "aBFu8ll_BFu9i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_BFu9i_B(Test_aBFu8ll_BFu9i_B, "aBFu8ll_BFu9i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_BFu9ll_B()
{
  {
    init_simple_test("aBFu8ll_BFu9ll_B");
    static aBFu8ll_BFu9ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8ll_BFu9ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_BFu9ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_BFu9ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu9ll_B");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aBFu8ll_BFu9ll_B");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aBFu8ll_BFu9ll_B");
    check_field_offset(lv, v3, 3, "aBFu8ll_BFu9ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_BFu9ll_B(Test_aBFu8ll_BFu9ll_B, "aBFu8ll_BFu9ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_BFu9s_B()
{
  {
    init_simple_test("aBFu8ll_BFu9s_B");
    static aBFu8ll_BFu9s_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8ll_BFu9s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_BFu9s_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_BFu9s_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_BFu9s_B");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aBFu8ll_BFu9s_B");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aBFu8ll_BFu9s_B");
    check_field_offset(lv, v3, 3, "aBFu8ll_BFu9s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_BFu9s_B(Test_aBFu8ll_BFu9s_B, "aBFu8ll_BFu9s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_C_B()
{
  {
    init_simple_test("aBFu8ll_C_B");
    static aBFu8ll_C_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8ll_C_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_C_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_C_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_C_B");
    check_field_offset(lv, v2, 1, "aBFu8ll_C_B.v2");
    check_field_offset(lv, v3, 2, "aBFu8ll_C_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_C_B(Test_aBFu8ll_C_B, "aBFu8ll_C_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_D_B()
{
  {
    init_simple_test("aBFu8ll_D_B");
    static aBFu8ll_D_B lv;
    check2(sizeof(lv), 10, "sizeof(aBFu8ll_D_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_D_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_D_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_D_B");
    check_field_offset(lv, v2, 1, "aBFu8ll_D_B.v2");
    check_field_offset(lv, v3, 9, "aBFu8ll_D_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_D_B(Test_aBFu8ll_D_B, "aBFu8ll_D_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_F_B()
{
  {
    init_simple_test("aBFu8ll_F_B");
    static aBFu8ll_F_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8ll_F_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_F_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_F_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_F_B");
    check_field_offset(lv, v2, 1, "aBFu8ll_F_B.v2");
    check_field_offset(lv, v3, 5, "aBFu8ll_F_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_F_B(Test_aBFu8ll_F_B, "aBFu8ll_F_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_I_B()
{
  {
    init_simple_test("aBFu8ll_I_B");
    static aBFu8ll_I_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8ll_I_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_I_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_I_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_I_B");
    check_field_offset(lv, v2, 1, "aBFu8ll_I_B.v2");
    check_field_offset(lv, v3, 5, "aBFu8ll_I_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_I_B(Test_aBFu8ll_I_B, "aBFu8ll_I_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_Ip_B()
{
  {
    init_simple_test("aBFu8ll_Ip_B");
    static aBFu8ll_Ip_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu8ll_Ip_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_Ip_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_Ip_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_Ip_B");
    check_field_offset(lv, v2, 1, "aBFu8ll_Ip_B.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aBFu8ll_Ip_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_Ip_B(Test_aBFu8ll_Ip_B, "aBFu8ll_Ip_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_L_B()
{
  {
    init_simple_test("aBFu8ll_L_B");
    static aBFu8ll_L_B lv;
    check2(sizeof(lv), 10, "sizeof(aBFu8ll_L_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_L_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_L_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_L_B");
    check_field_offset(lv, v2, 1, "aBFu8ll_L_B.v2");
    check_field_offset(lv, v3, 9, "aBFu8ll_L_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_L_B(Test_aBFu8ll_L_B, "aBFu8ll_L_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_S_B()
{
  {
    init_simple_test("aBFu8ll_S_B");
    static aBFu8ll_S_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8ll_S_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_S_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_S_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_S_B");
    check_field_offset(lv, v2, 1, "aBFu8ll_S_B.v2");
    check_field_offset(lv, v3, 3, "aBFu8ll_S_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_S_B(Test_aBFu8ll_S_B, "aBFu8ll_S_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_Uc_B()
{
  {
    init_simple_test("aBFu8ll_Uc_B");
    static aBFu8ll_Uc_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8ll_Uc_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_Uc_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_Uc_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_Uc_B");
    check_field_offset(lv, v2, 1, "aBFu8ll_Uc_B.v2");
    check_field_offset(lv, v3, 2, "aBFu8ll_Uc_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_Uc_B(Test_aBFu8ll_Uc_B, "aBFu8ll_Uc_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_Ui_B()
{
  {
    init_simple_test("aBFu8ll_Ui_B");
    static aBFu8ll_Ui_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8ll_Ui_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_Ui_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_Ui_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_Ui_B");
    check_field_offset(lv, v2, 1, "aBFu8ll_Ui_B.v2");
    check_field_offset(lv, v3, 5, "aBFu8ll_Ui_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_Ui_B(Test_aBFu8ll_Ui_B, "aBFu8ll_Ui_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_Ul_B()
{
  {
    init_simple_test("aBFu8ll_Ul_B");
    static aBFu8ll_Ul_B lv;
    check2(sizeof(lv), 10, "sizeof(aBFu8ll_Ul_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_Ul_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_Ul_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_Ul_B");
    check_field_offset(lv, v2, 1, "aBFu8ll_Ul_B.v2");
    check_field_offset(lv, v3, 9, "aBFu8ll_Ul_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_Ul_B(Test_aBFu8ll_Ul_B, "aBFu8ll_Ul_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_Us_B()
{
  {
    init_simple_test("aBFu8ll_Us_B");
    static aBFu8ll_Us_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8ll_Us_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_Us_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_Us_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_Us_B");
    check_field_offset(lv, v2, 1, "aBFu8ll_Us_B.v2");
    check_field_offset(lv, v3, 3, "aBFu8ll_Us_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_Us_B(Test_aBFu8ll_Us_B, "aBFu8ll_Us_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8ll_Vp_B()
{
  {
    init_simple_test("aBFu8ll_Vp_B");
    static aBFu8ll_Vp_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu8ll_Vp_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8ll_Vp_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8ll_Vp_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8ll_Vp_B");
    check_field_offset(lv, v2, 1, "aBFu8ll_Vp_B.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aBFu8ll_Vp_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8ll_Vp_B(Test_aBFu8ll_Vp_B, "aBFu8ll_Vp_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B()
{
  {
    init_simple_test("aBFu8s_B");
    static aBFu8s_B lv;
    check2(sizeof(lv), 2, "sizeof(aBFu8s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B");
    check_field_offset(lv, v2, 1, "aBFu8s_B.v2");
  }
}
static Arrange_To_Call_Me vaBFu8s_B(Test_aBFu8s_B, "aBFu8s_B", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_B()
{
  {
    init_simple_test("aBFu8s_B_B");
    static aBFu8s_B_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8s_B_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_B");
    check_field_offset(lv, v2, 1, "aBFu8s_B_B.v2");
    check_field_offset(lv, v3, 2, "aBFu8s_B_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_B(Test_aBFu8s_B_B, "aBFu8s_B_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_BFu15i()
{
  {
    init_simple_test("aBFu8s_B_BFu15i");
    static aBFu8s_B_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8s_B_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu15i");
    check_field_offset(lv, v2, 1, "aBFu8s_B_BFu15i.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aBFu8s_B_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aBFu8s_B_BFu15i");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_BFu15i(Test_aBFu8s_B_BFu15i, "aBFu8s_B_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_BFu15ll()
{
  {
    init_simple_test("aBFu8s_B_BFu15ll");
    static aBFu8s_B_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8s_B_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu15ll");
    check_field_offset(lv, v2, 1, "aBFu8s_B_BFu15ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aBFu8s_B_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aBFu8s_B_BFu15ll");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_BFu15ll(Test_aBFu8s_B_BFu15ll, "aBFu8s_B_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_BFu15s()
{
  {
    init_simple_test("aBFu8s_B_BFu15s");
    static aBFu8s_B_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8s_B_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu15s");
    check_field_offset(lv, v2, 1, "aBFu8s_B_BFu15s.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aBFu8s_B_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aBFu8s_B_BFu15s");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_BFu15s(Test_aBFu8s_B_BFu15s, "aBFu8s_B_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_BFu16i()
{
  {
    init_simple_test("aBFu8s_B_BFu16i");
    static aBFu8s_B_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8s_B_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu16i");
    check_field_offset(lv, v2, 1, "aBFu8s_B_BFu16i.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aBFu8s_B_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aBFu8s_B_BFu16i");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_BFu16i(Test_aBFu8s_B_BFu16i, "aBFu8s_B_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_BFu16ll()
{
  {
    init_simple_test("aBFu8s_B_BFu16ll");
    static aBFu8s_B_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8s_B_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu16ll");
    check_field_offset(lv, v2, 1, "aBFu8s_B_BFu16ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aBFu8s_B_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aBFu8s_B_BFu16ll");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_BFu16ll(Test_aBFu8s_B_BFu16ll, "aBFu8s_B_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_BFu16s()
{
  {
    init_simple_test("aBFu8s_B_BFu16s");
    static aBFu8s_B_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8s_B_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu16s");
    check_field_offset(lv, v2, 1, "aBFu8s_B_BFu16s.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aBFu8s_B_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aBFu8s_B_BFu16s");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_BFu16s(Test_aBFu8s_B_BFu16s, "aBFu8s_B_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_BFu17i()
{
  {
    init_simple_test("aBFu8s_B_BFu17i");
    static aBFu8s_B_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu8s_B_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu17i");
    check_field_offset(lv, v2, 1, "aBFu8s_B_BFu17i.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aBFu8s_B_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aBFu8s_B_BFu17i");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_BFu17i(Test_aBFu8s_B_BFu17i, "aBFu8s_B_BFu17i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_BFu17ll()
{
  {
    init_simple_test("aBFu8s_B_BFu17ll");
    static aBFu8s_B_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu8s_B_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu17ll");
    check_field_offset(lv, v2, 1, "aBFu8s_B_BFu17ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aBFu8s_B_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aBFu8s_B_BFu17ll");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_BFu17ll(Test_aBFu8s_B_BFu17ll, "aBFu8s_B_BFu17ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_BFu1c()
{
  {
    init_simple_test("aBFu8s_B_BFu1c");
    static aBFu8s_B_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8s_B_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu1c");
    check_field_offset(lv, v2, 1, "aBFu8s_B_BFu1c.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu8s_B_BFu1c");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_BFu1c(Test_aBFu8s_B_BFu1c, "aBFu8s_B_BFu1c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_BFu1i()
{
  {
    init_simple_test("aBFu8s_B_BFu1i");
    static aBFu8s_B_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8s_B_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu1i");
    check_field_offset(lv, v2, 1, "aBFu8s_B_BFu1i.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu8s_B_BFu1i");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_BFu1i(Test_aBFu8s_B_BFu1i, "aBFu8s_B_BFu1i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_BFu1ll()
{
  {
    init_simple_test("aBFu8s_B_BFu1ll");
    static aBFu8s_B_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8s_B_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu1ll");
    check_field_offset(lv, v2, 1, "aBFu8s_B_BFu1ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu8s_B_BFu1ll");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_BFu1ll(Test_aBFu8s_B_BFu1ll, "aBFu8s_B_BFu1ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_BFu1s()
{
  {
    init_simple_test("aBFu8s_B_BFu1s");
    static aBFu8s_B_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8s_B_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu1s");
    check_field_offset(lv, v2, 1, "aBFu8s_B_BFu1s.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aBFu8s_B_BFu1s");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_BFu1s(Test_aBFu8s_B_BFu1s, "aBFu8s_B_BFu1s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_BFu31i()
{
  {
    init_simple_test("aBFu8s_B_BFu31i");
    static aBFu8s_B_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8s_B_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu31i");
    check_field_offset(lv, v2, 1, "aBFu8s_B_BFu31i.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aBFu8s_B_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aBFu8s_B_BFu31i");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_BFu31i(Test_aBFu8s_B_BFu31i, "aBFu8s_B_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_BFu31ll()
{
  {
    init_simple_test("aBFu8s_B_BFu31ll");
    static aBFu8s_B_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8s_B_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu31ll");
    check_field_offset(lv, v2, 1, "aBFu8s_B_BFu31ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aBFu8s_B_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aBFu8s_B_BFu31ll");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_BFu31ll(Test_aBFu8s_B_BFu31ll, "aBFu8s_B_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_BFu32i()
{
  {
    init_simple_test("aBFu8s_B_BFu32i");
    static aBFu8s_B_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8s_B_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu32i");
    check_field_offset(lv, v2, 1, "aBFu8s_B_BFu32i.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aBFu8s_B_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aBFu8s_B_BFu32i");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_BFu32i(Test_aBFu8s_B_BFu32i, "aBFu8s_B_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_BFu32ll()
{
  {
    init_simple_test("aBFu8s_B_BFu32ll");
    static aBFu8s_B_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8s_B_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu32ll");
    check_field_offset(lv, v2, 1, "aBFu8s_B_BFu32ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aBFu8s_B_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aBFu8s_B_BFu32ll");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_BFu32ll(Test_aBFu8s_B_BFu32ll, "aBFu8s_B_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_BFu33()
{
  {
    init_simple_test("aBFu8s_B_BFu33");
    static aBFu8s_B_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aBFu8s_B_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu33");
    check_field_offset(lv, v2, 1, "aBFu8s_B_BFu33.v2");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "aBFu8s_B_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "aBFu8s_B_BFu33");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_BFu33(Test_aBFu8s_B_BFu33, "aBFu8s_B_BFu33", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_BFu7c()
{
  {
    init_simple_test("aBFu8s_B_BFu7c");
    static aBFu8s_B_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8s_B_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu7c");
    check_field_offset(lv, v2, 1, "aBFu8s_B_BFu7c.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu8s_B_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu8s_B_BFu7c");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_BFu7c(Test_aBFu8s_B_BFu7c, "aBFu8s_B_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_BFu7i()
{
  {
    init_simple_test("aBFu8s_B_BFu7i");
    static aBFu8s_B_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8s_B_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu7i");
    check_field_offset(lv, v2, 1, "aBFu8s_B_BFu7i.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu8s_B_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu8s_B_BFu7i");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_BFu7i(Test_aBFu8s_B_BFu7i, "aBFu8s_B_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_BFu7ll()
{
  {
    init_simple_test("aBFu8s_B_BFu7ll");
    static aBFu8s_B_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8s_B_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu7ll");
    check_field_offset(lv, v2, 1, "aBFu8s_B_BFu7ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu8s_B_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu8s_B_BFu7ll");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_BFu7ll(Test_aBFu8s_B_BFu7ll, "aBFu8s_B_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_BFu7s()
{
  {
    init_simple_test("aBFu8s_B_BFu7s");
    static aBFu8s_B_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8s_B_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu7s");
    check_field_offset(lv, v2, 1, "aBFu8s_B_BFu7s.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aBFu8s_B_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aBFu8s_B_BFu7s");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_BFu7s(Test_aBFu8s_B_BFu7s, "aBFu8s_B_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_BFu8c()
{
  {
    init_simple_test("aBFu8s_B_BFu8c");
    static aBFu8s_B_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8s_B_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu8c");
    check_field_offset(lv, v2, 1, "aBFu8s_B_BFu8c.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu8s_B_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu8c");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_BFu8c(Test_aBFu8s_B_BFu8c, "aBFu8s_B_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_BFu8i()
{
  {
    init_simple_test("aBFu8s_B_BFu8i");
    static aBFu8s_B_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8s_B_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu8i");
    check_field_offset(lv, v2, 1, "aBFu8s_B_BFu8i.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu8s_B_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu8i");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_BFu8i(Test_aBFu8s_B_BFu8i, "aBFu8s_B_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_BFu8ll()
{
  {
    init_simple_test("aBFu8s_B_BFu8ll");
    static aBFu8s_B_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8s_B_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu8ll");
    check_field_offset(lv, v2, 1, "aBFu8s_B_BFu8ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu8s_B_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu8ll");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_BFu8ll(Test_aBFu8s_B_BFu8ll, "aBFu8s_B_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_BFu8s()
{
  {
    init_simple_test("aBFu8s_B_BFu8s");
    static aBFu8s_B_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8s_B_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu8s");
    check_field_offset(lv, v2, 1, "aBFu8s_B_BFu8s.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aBFu8s_B_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu8s");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_BFu8s(Test_aBFu8s_B_BFu8s, "aBFu8s_B_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_BFu9i()
{
  {
    init_simple_test("aBFu8s_B_BFu9i");
    static aBFu8s_B_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8s_B_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu9i");
    check_field_offset(lv, v2, 1, "aBFu8s_B_BFu9i.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aBFu8s_B_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aBFu8s_B_BFu9i");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_BFu9i(Test_aBFu8s_B_BFu9i, "aBFu8s_B_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_BFu9ll()
{
  {
    init_simple_test("aBFu8s_B_BFu9ll");
    static aBFu8s_B_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8s_B_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu9ll");
    check_field_offset(lv, v2, 1, "aBFu8s_B_BFu9ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aBFu8s_B_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aBFu8s_B_BFu9ll");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_BFu9ll(Test_aBFu8s_B_BFu9ll, "aBFu8s_B_BFu9ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_BFu9s()
{
  {
    init_simple_test("aBFu8s_B_BFu9s");
    static aBFu8s_B_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8s_B_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_BFu9s");
    check_field_offset(lv, v2, 1, "aBFu8s_B_BFu9s.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aBFu8s_B_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aBFu8s_B_BFu9s");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_BFu9s(Test_aBFu8s_B_BFu9s, "aBFu8s_B_BFu9s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_C()
{
  {
    init_simple_test("aBFu8s_B_C");
    static aBFu8s_B_C lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8s_B_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_C)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_C");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_C");
    check_field_offset(lv, v2, 1, "aBFu8s_B_C.v2");
    check_field_offset(lv, v3, 2, "aBFu8s_B_C.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_C(Test_aBFu8s_B_C, "aBFu8s_B_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_D()
{
  {
    init_simple_test("aBFu8s_B_D");
    static aBFu8s_B_D lv;
    check2(sizeof(lv), 10, "sizeof(aBFu8s_B_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_D)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_D");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_D");
    check_field_offset(lv, v2, 1, "aBFu8s_B_D.v2");
    check_field_offset(lv, v3, 2, "aBFu8s_B_D.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_D(Test_aBFu8s_B_D, "aBFu8s_B_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_F()
{
  {
    init_simple_test("aBFu8s_B_F");
    static aBFu8s_B_F lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8s_B_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_F)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_F");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_F");
    check_field_offset(lv, v2, 1, "aBFu8s_B_F.v2");
    check_field_offset(lv, v3, 2, "aBFu8s_B_F.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_F(Test_aBFu8s_B_F, "aBFu8s_B_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_I()
{
  {
    init_simple_test("aBFu8s_B_I");
    static aBFu8s_B_I lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8s_B_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_I)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_I");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_I");
    check_field_offset(lv, v2, 1, "aBFu8s_B_I.v2");
    check_field_offset(lv, v3, 2, "aBFu8s_B_I.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_I(Test_aBFu8s_B_I, "aBFu8s_B_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_Ip()
{
  {
    init_simple_test("aBFu8s_B_Ip");
    static aBFu8s_B_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu8s_B_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_Ip");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_Ip");
    check_field_offset(lv, v2, 1, "aBFu8s_B_Ip.v2");
    check_field_offset(lv, v3, 2, "aBFu8s_B_Ip.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_Ip(Test_aBFu8s_B_Ip, "aBFu8s_B_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_L()
{
  {
    init_simple_test("aBFu8s_B_L");
    static aBFu8s_B_L lv;
    check2(sizeof(lv), 10, "sizeof(aBFu8s_B_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_L)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_L");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_L");
    check_field_offset(lv, v2, 1, "aBFu8s_B_L.v2");
    check_field_offset(lv, v3, 2, "aBFu8s_B_L.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_L(Test_aBFu8s_B_L, "aBFu8s_B_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_S()
{
  {
    init_simple_test("aBFu8s_B_S");
    static aBFu8s_B_S lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8s_B_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_S)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_S");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_S");
    check_field_offset(lv, v2, 1, "aBFu8s_B_S.v2");
    check_field_offset(lv, v3, 2, "aBFu8s_B_S.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_S(Test_aBFu8s_B_S, "aBFu8s_B_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_Uc()
{
  {
    init_simple_test("aBFu8s_B_Uc");
    static aBFu8s_B_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8s_B_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_Uc");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_Uc");
    check_field_offset(lv, v2, 1, "aBFu8s_B_Uc.v2");
    check_field_offset(lv, v3, 2, "aBFu8s_B_Uc.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_Uc(Test_aBFu8s_B_Uc, "aBFu8s_B_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_Ui()
{
  {
    init_simple_test("aBFu8s_B_Ui");
    static aBFu8s_B_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8s_B_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_Ui");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_Ui");
    check_field_offset(lv, v2, 1, "aBFu8s_B_Ui.v2");
    check_field_offset(lv, v3, 2, "aBFu8s_B_Ui.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_Ui(Test_aBFu8s_B_Ui, "aBFu8s_B_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_Ul()
{
  {
    init_simple_test("aBFu8s_B_Ul");
    static aBFu8s_B_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aBFu8s_B_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_Ul");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_Ul");
    check_field_offset(lv, v2, 1, "aBFu8s_B_Ul.v2");
    check_field_offset(lv, v3, 2, "aBFu8s_B_Ul.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_Ul(Test_aBFu8s_B_Ul, "aBFu8s_B_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_Us()
{
  {
    init_simple_test("aBFu8s_B_Us");
    static aBFu8s_B_Us lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8s_B_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_Us)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_Us");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_Us");
    check_field_offset(lv, v2, 1, "aBFu8s_B_Us.v2");
    check_field_offset(lv, v3, 2, "aBFu8s_B_Us.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_Us(Test_aBFu8s_B_Us, "aBFu8s_B_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_B_Vp()
{
  {
    init_simple_test("aBFu8s_B_Vp");
    static aBFu8s_B_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu8s_B_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_B_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_B_Vp");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_B_Vp");
    check_field_offset(lv, v2, 1, "aBFu8s_B_Vp.v2");
    check_field_offset(lv, v3, 2, "aBFu8s_B_Vp.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_B_Vp(Test_aBFu8s_B_Vp, "aBFu8s_B_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_BFu15i_B()
{
  {
    init_simple_test("aBFu8s_BFu15i_B");
    static aBFu8s_BFu15i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8s_BFu15i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_BFu15i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_BFu15i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu15i_B");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aBFu8s_BFu15i_B");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aBFu8s_BFu15i_B");
    check_field_offset(lv, v3, 3, "aBFu8s_BFu15i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_BFu15i_B(Test_aBFu8s_BFu15i_B, "aBFu8s_BFu15i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_BFu15ll_B()
{
  {
    init_simple_test("aBFu8s_BFu15ll_B");
    static aBFu8s_BFu15ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8s_BFu15ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_BFu15ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_BFu15ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu15ll_B");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aBFu8s_BFu15ll_B");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aBFu8s_BFu15ll_B");
    check_field_offset(lv, v3, 3, "aBFu8s_BFu15ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_BFu15ll_B(Test_aBFu8s_BFu15ll_B, "aBFu8s_BFu15ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_BFu15s_B()
{
  {
    init_simple_test("aBFu8s_BFu15s_B");
    static aBFu8s_BFu15s_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8s_BFu15s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_BFu15s_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_BFu15s_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu15s_B");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aBFu8s_BFu15s_B");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aBFu8s_BFu15s_B");
    check_field_offset(lv, v3, 3, "aBFu8s_BFu15s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_BFu15s_B(Test_aBFu8s_BFu15s_B, "aBFu8s_BFu15s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_BFu16i_B()
{
  {
    init_simple_test("aBFu8s_BFu16i_B");
    static aBFu8s_BFu16i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8s_BFu16i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_BFu16i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_BFu16i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu16i_B");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aBFu8s_BFu16i_B");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aBFu8s_BFu16i_B");
    check_field_offset(lv, v3, 3, "aBFu8s_BFu16i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_BFu16i_B(Test_aBFu8s_BFu16i_B, "aBFu8s_BFu16i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_BFu16ll_B()
{
  {
    init_simple_test("aBFu8s_BFu16ll_B");
    static aBFu8s_BFu16ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8s_BFu16ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_BFu16ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_BFu16ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu16ll_B");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aBFu8s_BFu16ll_B");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aBFu8s_BFu16ll_B");
    check_field_offset(lv, v3, 3, "aBFu8s_BFu16ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_BFu16ll_B(Test_aBFu8s_BFu16ll_B, "aBFu8s_BFu16ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_BFu16s_B()
{
  {
    init_simple_test("aBFu8s_BFu16s_B");
    static aBFu8s_BFu16s_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8s_BFu16s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_BFu16s_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_BFu16s_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu16s_B");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aBFu8s_BFu16s_B");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aBFu8s_BFu16s_B");
    check_field_offset(lv, v3, 3, "aBFu8s_BFu16s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_BFu16s_B(Test_aBFu8s_BFu16s_B, "aBFu8s_BFu16s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_BFu17i_B()
{
  {
    init_simple_test("aBFu8s_BFu17i_B");
    static aBFu8s_BFu17i_B lv;
    check2(sizeof(lv), 5, "sizeof(aBFu8s_BFu17i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_BFu17i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_BFu17i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu17i_B");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aBFu8s_BFu17i_B");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aBFu8s_BFu17i_B");
    check_field_offset(lv, v3, 4, "aBFu8s_BFu17i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_BFu17i_B(Test_aBFu8s_BFu17i_B, "aBFu8s_BFu17i_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_BFu17ll_B()
{
  {
    init_simple_test("aBFu8s_BFu17ll_B");
    static aBFu8s_BFu17ll_B lv;
    check2(sizeof(lv), 5, "sizeof(aBFu8s_BFu17ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_BFu17ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_BFu17ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu17ll_B");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aBFu8s_BFu17ll_B");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aBFu8s_BFu17ll_B");
    check_field_offset(lv, v3, 4, "aBFu8s_BFu17ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_BFu17ll_B(Test_aBFu8s_BFu17ll_B, "aBFu8s_BFu17ll_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_BFu1c_B()
{
  {
    init_simple_test("aBFu8s_BFu1c_B");
    static aBFu8s_BFu1c_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8s_BFu1c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_BFu1c_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_BFu1c_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu1c_B");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aBFu8s_BFu1c_B");
    check_field_offset(lv, v3, 2, "aBFu8s_BFu1c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_BFu1c_B(Test_aBFu8s_BFu1c_B, "aBFu8s_BFu1c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_BFu1i_B()
{
  {
    init_simple_test("aBFu8s_BFu1i_B");
    static aBFu8s_BFu1i_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8s_BFu1i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_BFu1i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_BFu1i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu1i_B");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aBFu8s_BFu1i_B");
    check_field_offset(lv, v3, 2, "aBFu8s_BFu1i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_BFu1i_B(Test_aBFu8s_BFu1i_B, "aBFu8s_BFu1i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_BFu1ll_B()
{
  {
    init_simple_test("aBFu8s_BFu1ll_B");
    static aBFu8s_BFu1ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8s_BFu1ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_BFu1ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_BFu1ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu1ll_B");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aBFu8s_BFu1ll_B");
    check_field_offset(lv, v3, 2, "aBFu8s_BFu1ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_BFu1ll_B(Test_aBFu8s_BFu1ll_B, "aBFu8s_BFu1ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_BFu1s_B()
{
  {
    init_simple_test("aBFu8s_BFu1s_B");
    static aBFu8s_BFu1s_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8s_BFu1s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_BFu1s_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_BFu1s_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu1s_B");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aBFu8s_BFu1s_B");
    check_field_offset(lv, v3, 2, "aBFu8s_BFu1s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_BFu1s_B(Test_aBFu8s_BFu1s_B, "aBFu8s_BFu1s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_BFu31i_B()
{
  {
    init_simple_test("aBFu8s_BFu31i_B");
    static aBFu8s_BFu31i_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8s_BFu31i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_BFu31i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_BFu31i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu31i_B");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aBFu8s_BFu31i_B");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aBFu8s_BFu31i_B");
    check_field_offset(lv, v3, 5, "aBFu8s_BFu31i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_BFu31i_B(Test_aBFu8s_BFu31i_B, "aBFu8s_BFu31i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_BFu31ll_B()
{
  {
    init_simple_test("aBFu8s_BFu31ll_B");
    static aBFu8s_BFu31ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8s_BFu31ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_BFu31ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_BFu31ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu31ll_B");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aBFu8s_BFu31ll_B");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aBFu8s_BFu31ll_B");
    check_field_offset(lv, v3, 5, "aBFu8s_BFu31ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_BFu31ll_B(Test_aBFu8s_BFu31ll_B, "aBFu8s_BFu31ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_BFu32i_B()
{
  {
    init_simple_test("aBFu8s_BFu32i_B");
    static aBFu8s_BFu32i_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8s_BFu32i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_BFu32i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_BFu32i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu32i_B");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aBFu8s_BFu32i_B");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aBFu8s_BFu32i_B");
    check_field_offset(lv, v3, 5, "aBFu8s_BFu32i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_BFu32i_B(Test_aBFu8s_BFu32i_B, "aBFu8s_BFu32i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_BFu32ll_B()
{
  {
    init_simple_test("aBFu8s_BFu32ll_B");
    static aBFu8s_BFu32ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8s_BFu32ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_BFu32ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_BFu32ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu32ll_B");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aBFu8s_BFu32ll_B");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aBFu8s_BFu32ll_B");
    check_field_offset(lv, v3, 5, "aBFu8s_BFu32ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_BFu32ll_B(Test_aBFu8s_BFu32ll_B, "aBFu8s_BFu32ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_BFu33_B()
{
  {
    init_simple_test("aBFu8s_BFu33_B");
    static aBFu8s_BFu33_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu8s_BFu33_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_BFu33_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_BFu33_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu33_B");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aBFu8s_BFu33_B");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aBFu8s_BFu33_B");
    check_field_offset(lv, v3, 6, "aBFu8s_BFu33_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_BFu33_B(Test_aBFu8s_BFu33_B, "aBFu8s_BFu33_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_BFu7c_B()
{
  {
    init_simple_test("aBFu8s_BFu7c_B");
    static aBFu8s_BFu7c_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8s_BFu7c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_BFu7c_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_BFu7c_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu7c_B");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aBFu8s_BFu7c_B");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aBFu8s_BFu7c_B");
    check_field_offset(lv, v3, 2, "aBFu8s_BFu7c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_BFu7c_B(Test_aBFu8s_BFu7c_B, "aBFu8s_BFu7c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_BFu7i_B()
{
  {
    init_simple_test("aBFu8s_BFu7i_B");
    static aBFu8s_BFu7i_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8s_BFu7i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_BFu7i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_BFu7i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu7i_B");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aBFu8s_BFu7i_B");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aBFu8s_BFu7i_B");
    check_field_offset(lv, v3, 2, "aBFu8s_BFu7i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_BFu7i_B(Test_aBFu8s_BFu7i_B, "aBFu8s_BFu7i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_BFu7ll_B()
{
  {
    init_simple_test("aBFu8s_BFu7ll_B");
    static aBFu8s_BFu7ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8s_BFu7ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_BFu7ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_BFu7ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu7ll_B");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aBFu8s_BFu7ll_B");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aBFu8s_BFu7ll_B");
    check_field_offset(lv, v3, 2, "aBFu8s_BFu7ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_BFu7ll_B(Test_aBFu8s_BFu7ll_B, "aBFu8s_BFu7ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_BFu7s_B()
{
  {
    init_simple_test("aBFu8s_BFu7s_B");
    static aBFu8s_BFu7s_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8s_BFu7s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_BFu7s_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_BFu7s_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu7s_B");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aBFu8s_BFu7s_B");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aBFu8s_BFu7s_B");
    check_field_offset(lv, v3, 2, "aBFu8s_BFu7s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_BFu7s_B(Test_aBFu8s_BFu7s_B, "aBFu8s_BFu7s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_BFu8c_B()
{
  {
    init_simple_test("aBFu8s_BFu8c_B");
    static aBFu8s_BFu8c_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8s_BFu8c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_BFu8c_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_BFu8c_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu8c_B");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aBFu8s_BFu8c_B");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu8c_B");
    check_field_offset(lv, v3, 2, "aBFu8s_BFu8c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_BFu8c_B(Test_aBFu8s_BFu8c_B, "aBFu8s_BFu8c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_BFu8i_B()
{
  {
    init_simple_test("aBFu8s_BFu8i_B");
    static aBFu8s_BFu8i_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8s_BFu8i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_BFu8i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_BFu8i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu8i_B");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aBFu8s_BFu8i_B");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu8i_B");
    check_field_offset(lv, v3, 2, "aBFu8s_BFu8i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_BFu8i_B(Test_aBFu8s_BFu8i_B, "aBFu8s_BFu8i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_BFu8ll_B()
{
  {
    init_simple_test("aBFu8s_BFu8ll_B");
    static aBFu8s_BFu8ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8s_BFu8ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_BFu8ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_BFu8ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu8ll_B");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aBFu8s_BFu8ll_B");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu8ll_B");
    check_field_offset(lv, v3, 2, "aBFu8s_BFu8ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_BFu8ll_B(Test_aBFu8s_BFu8ll_B, "aBFu8s_BFu8ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_BFu8s_B()
{
  {
    init_simple_test("aBFu8s_BFu8s_B");
    static aBFu8s_BFu8s_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8s_BFu8s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_BFu8s_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_BFu8s_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu8s_B");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aBFu8s_BFu8s_B");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu8s_B");
    check_field_offset(lv, v3, 2, "aBFu8s_BFu8s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_BFu8s_B(Test_aBFu8s_BFu8s_B, "aBFu8s_BFu8s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_BFu9i_B()
{
  {
    init_simple_test("aBFu8s_BFu9i_B");
    static aBFu8s_BFu9i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8s_BFu9i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_BFu9i_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_BFu9i_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu9i_B");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aBFu8s_BFu9i_B");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aBFu8s_BFu9i_B");
    check_field_offset(lv, v3, 3, "aBFu8s_BFu9i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_BFu9i_B(Test_aBFu8s_BFu9i_B, "aBFu8s_BFu9i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_BFu9ll_B()
{
  {
    init_simple_test("aBFu8s_BFu9ll_B");
    static aBFu8s_BFu9ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8s_BFu9ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_BFu9ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_BFu9ll_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu9ll_B");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aBFu8s_BFu9ll_B");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aBFu8s_BFu9ll_B");
    check_field_offset(lv, v3, 3, "aBFu8s_BFu9ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_BFu9ll_B(Test_aBFu8s_BFu9ll_B, "aBFu8s_BFu9ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_BFu9s_B()
{
  {
    init_simple_test("aBFu8s_BFu9s_B");
    static aBFu8s_BFu9s_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8s_BFu9s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_BFu9s_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_BFu9s_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_BFu9s_B");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aBFu8s_BFu9s_B");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aBFu8s_BFu9s_B");
    check_field_offset(lv, v3, 3, "aBFu8s_BFu9s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_BFu9s_B(Test_aBFu8s_BFu9s_B, "aBFu8s_BFu9s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_C_B()
{
  {
    init_simple_test("aBFu8s_C_B");
    static aBFu8s_C_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8s_C_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_C_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_C_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_C_B");
    check_field_offset(lv, v2, 1, "aBFu8s_C_B.v2");
    check_field_offset(lv, v3, 2, "aBFu8s_C_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_C_B(Test_aBFu8s_C_B, "aBFu8s_C_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_D_B()
{
  {
    init_simple_test("aBFu8s_D_B");
    static aBFu8s_D_B lv;
    check2(sizeof(lv), 10, "sizeof(aBFu8s_D_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_D_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_D_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_D_B");
    check_field_offset(lv, v2, 1, "aBFu8s_D_B.v2");
    check_field_offset(lv, v3, 9, "aBFu8s_D_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_D_B(Test_aBFu8s_D_B, "aBFu8s_D_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_F_B()
{
  {
    init_simple_test("aBFu8s_F_B");
    static aBFu8s_F_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8s_F_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_F_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_F_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_F_B");
    check_field_offset(lv, v2, 1, "aBFu8s_F_B.v2");
    check_field_offset(lv, v3, 5, "aBFu8s_F_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_F_B(Test_aBFu8s_F_B, "aBFu8s_F_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_I_B()
{
  {
    init_simple_test("aBFu8s_I_B");
    static aBFu8s_I_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8s_I_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_I_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_I_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_I_B");
    check_field_offset(lv, v2, 1, "aBFu8s_I_B.v2");
    check_field_offset(lv, v3, 5, "aBFu8s_I_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_I_B(Test_aBFu8s_I_B, "aBFu8s_I_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_Ip_B()
{
  {
    init_simple_test("aBFu8s_Ip_B");
    static aBFu8s_Ip_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu8s_Ip_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_Ip_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_Ip_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_Ip_B");
    check_field_offset(lv, v2, 1, "aBFu8s_Ip_B.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aBFu8s_Ip_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_Ip_B(Test_aBFu8s_Ip_B, "aBFu8s_Ip_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_L_B()
{
  {
    init_simple_test("aBFu8s_L_B");
    static aBFu8s_L_B lv;
    check2(sizeof(lv), 10, "sizeof(aBFu8s_L_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_L_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_L_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_L_B");
    check_field_offset(lv, v2, 1, "aBFu8s_L_B.v2");
    check_field_offset(lv, v3, 9, "aBFu8s_L_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_L_B(Test_aBFu8s_L_B, "aBFu8s_L_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_S_B()
{
  {
    init_simple_test("aBFu8s_S_B");
    static aBFu8s_S_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8s_S_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_S_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_S_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_S_B");
    check_field_offset(lv, v2, 1, "aBFu8s_S_B.v2");
    check_field_offset(lv, v3, 3, "aBFu8s_S_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_S_B(Test_aBFu8s_S_B, "aBFu8s_S_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_Uc_B()
{
  {
    init_simple_test("aBFu8s_Uc_B");
    static aBFu8s_Uc_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu8s_Uc_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_Uc_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_Uc_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_Uc_B");
    check_field_offset(lv, v2, 1, "aBFu8s_Uc_B.v2");
    check_field_offset(lv, v3, 2, "aBFu8s_Uc_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_Uc_B(Test_aBFu8s_Uc_B, "aBFu8s_Uc_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_Ui_B()
{
  {
    init_simple_test("aBFu8s_Ui_B");
    static aBFu8s_Ui_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu8s_Ui_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_Ui_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_Ui_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_Ui_B");
    check_field_offset(lv, v2, 1, "aBFu8s_Ui_B.v2");
    check_field_offset(lv, v3, 5, "aBFu8s_Ui_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_Ui_B(Test_aBFu8s_Ui_B, "aBFu8s_Ui_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_Ul_B()
{
  {
    init_simple_test("aBFu8s_Ul_B");
    static aBFu8s_Ul_B lv;
    check2(sizeof(lv), 10, "sizeof(aBFu8s_Ul_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_Ul_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_Ul_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_Ul_B");
    check_field_offset(lv, v2, 1, "aBFu8s_Ul_B.v2");
    check_field_offset(lv, v3, 9, "aBFu8s_Ul_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_Ul_B(Test_aBFu8s_Ul_B, "aBFu8s_Ul_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_Us_B()
{
  {
    init_simple_test("aBFu8s_Us_B");
    static aBFu8s_Us_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu8s_Us_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_Us_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_Us_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_Us_B");
    check_field_offset(lv, v2, 1, "aBFu8s_Us_B.v2");
    check_field_offset(lv, v3, 3, "aBFu8s_Us_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_Us_B(Test_aBFu8s_Us_B, "aBFu8s_Us_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu8s_Vp_B()
{
  {
    init_simple_test("aBFu8s_Vp_B");
    static aBFu8s_Vp_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aBFu8s_Vp_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu8s_Vp_B)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "aBFu8s_Vp_B");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "aBFu8s_Vp_B");
    check_field_offset(lv, v2, 1, "aBFu8s_Vp_B.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aBFu8s_Vp_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu8s_Vp_B(Test_aBFu8s_Vp_B, "aBFu8s_Vp_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B()
{
  {
    init_simple_test("aBFu9i_B");
    static aBFu9i_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu9i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B");
    check_field_offset(lv, v2, 2, "aBFu9i_B.v2");
  }
}
static Arrange_To_Call_Me vaBFu9i_B(Test_aBFu9i_B, "aBFu9i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_B()
{
  {
    init_simple_test("aBFu9i_B_B");
    static aBFu9i_B_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9i_B_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_B");
    check_field_offset(lv, v2, 2, "aBFu9i_B_B.v2");
    check_field_offset(lv, v3, 3, "aBFu9i_B_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_B(Test_aBFu9i_B_B, "aBFu9i_B_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_BFu15i()
{
  {
    init_simple_test("aBFu9i_B_BFu15i");
    static aBFu9i_B_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9i_B_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_BFu15i");
    check_field_offset(lv, v2, 2, "aBFu9i_B_BFu15i.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aBFu9i_B_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aBFu9i_B_BFu15i");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_BFu15i(Test_aBFu9i_B_BFu15i, "aBFu9i_B_BFu15i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_BFu15ll()
{
  {
    init_simple_test("aBFu9i_B_BFu15ll");
    static aBFu9i_B_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9i_B_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_BFu15ll");
    check_field_offset(lv, v2, 2, "aBFu9i_B_BFu15ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aBFu9i_B_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aBFu9i_B_BFu15ll");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_BFu15ll(Test_aBFu9i_B_BFu15ll, "aBFu9i_B_BFu15ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_BFu15s()
{
  {
    init_simple_test("aBFu9i_B_BFu15s");
    static aBFu9i_B_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9i_B_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_BFu15s");
    check_field_offset(lv, v2, 2, "aBFu9i_B_BFu15s.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aBFu9i_B_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aBFu9i_B_BFu15s");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_BFu15s(Test_aBFu9i_B_BFu15s, "aBFu9i_B_BFu15s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_BFu16i()
{
  {
    init_simple_test("aBFu9i_B_BFu16i");
    static aBFu9i_B_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9i_B_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_BFu16i");
    check_field_offset(lv, v2, 2, "aBFu9i_B_BFu16i.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aBFu9i_B_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aBFu9i_B_BFu16i");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_BFu16i(Test_aBFu9i_B_BFu16i, "aBFu9i_B_BFu16i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_BFu16ll()
{
  {
    init_simple_test("aBFu9i_B_BFu16ll");
    static aBFu9i_B_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9i_B_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_BFu16ll");
    check_field_offset(lv, v2, 2, "aBFu9i_B_BFu16ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aBFu9i_B_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aBFu9i_B_BFu16ll");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_BFu16ll(Test_aBFu9i_B_BFu16ll, "aBFu9i_B_BFu16ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_BFu16s()
{
  {
    init_simple_test("aBFu9i_B_BFu16s");
    static aBFu9i_B_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9i_B_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_BFu16s");
    check_field_offset(lv, v2, 2, "aBFu9i_B_BFu16s.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aBFu9i_B_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aBFu9i_B_BFu16s");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_BFu16s(Test_aBFu9i_B_BFu16s, "aBFu9i_B_BFu16s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_BFu17i()
{
  {
    init_simple_test("aBFu9i_B_BFu17i");
    static aBFu9i_B_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu9i_B_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_BFu17i");
    check_field_offset(lv, v2, 2, "aBFu9i_B_BFu17i.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aBFu9i_B_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aBFu9i_B_BFu17i");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_BFu17i(Test_aBFu9i_B_BFu17i, "aBFu9i_B_BFu17i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_BFu17ll()
{
  {
    init_simple_test("aBFu9i_B_BFu17ll");
    static aBFu9i_B_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu9i_B_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_BFu17ll");
    check_field_offset(lv, v2, 2, "aBFu9i_B_BFu17ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aBFu9i_B_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aBFu9i_B_BFu17ll");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_BFu17ll(Test_aBFu9i_B_BFu17ll, "aBFu9i_B_BFu17ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_BFu1c()
{
  {
    init_simple_test("aBFu9i_B_BFu1c");
    static aBFu9i_B_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9i_B_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_BFu1c");
    check_field_offset(lv, v2, 2, "aBFu9i_B_BFu1c.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aBFu9i_B_BFu1c");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_BFu1c(Test_aBFu9i_B_BFu1c, "aBFu9i_B_BFu1c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_BFu1i()
{
  {
    init_simple_test("aBFu9i_B_BFu1i");
    static aBFu9i_B_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9i_B_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_BFu1i");
    check_field_offset(lv, v2, 2, "aBFu9i_B_BFu1i.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aBFu9i_B_BFu1i");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_BFu1i(Test_aBFu9i_B_BFu1i, "aBFu9i_B_BFu1i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_BFu1ll()
{
  {
    init_simple_test("aBFu9i_B_BFu1ll");
    static aBFu9i_B_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9i_B_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_BFu1ll");
    check_field_offset(lv, v2, 2, "aBFu9i_B_BFu1ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aBFu9i_B_BFu1ll");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_BFu1ll(Test_aBFu9i_B_BFu1ll, "aBFu9i_B_BFu1ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_BFu1s()
{
  {
    init_simple_test("aBFu9i_B_BFu1s");
    static aBFu9i_B_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9i_B_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_BFu1s");
    check_field_offset(lv, v2, 2, "aBFu9i_B_BFu1s.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aBFu9i_B_BFu1s");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_BFu1s(Test_aBFu9i_B_BFu1s, "aBFu9i_B_BFu1s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_BFu31i()
{
  {
    init_simple_test("aBFu9i_B_BFu31i");
    static aBFu9i_B_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9i_B_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_BFu31i");
    check_field_offset(lv, v2, 2, "aBFu9i_B_BFu31i.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aBFu9i_B_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aBFu9i_B_BFu31i");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_BFu31i(Test_aBFu9i_B_BFu31i, "aBFu9i_B_BFu31i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_BFu31ll()
{
  {
    init_simple_test("aBFu9i_B_BFu31ll");
    static aBFu9i_B_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9i_B_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_BFu31ll");
    check_field_offset(lv, v2, 2, "aBFu9i_B_BFu31ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aBFu9i_B_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aBFu9i_B_BFu31ll");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_BFu31ll(Test_aBFu9i_B_BFu31ll, "aBFu9i_B_BFu31ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_BFu32i()
{
  {
    init_simple_test("aBFu9i_B_BFu32i");
    static aBFu9i_B_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9i_B_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_BFu32i");
    check_field_offset(lv, v2, 2, "aBFu9i_B_BFu32i.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aBFu9i_B_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aBFu9i_B_BFu32i");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_BFu32i(Test_aBFu9i_B_BFu32i, "aBFu9i_B_BFu32i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_BFu32ll()
{
  {
    init_simple_test("aBFu9i_B_BFu32ll");
    static aBFu9i_B_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9i_B_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_BFu32ll");
    check_field_offset(lv, v2, 2, "aBFu9i_B_BFu32ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aBFu9i_B_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aBFu9i_B_BFu32ll");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_BFu32ll(Test_aBFu9i_B_BFu32ll, "aBFu9i_B_BFu32ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_BFu33()
{
  {
    init_simple_test("aBFu9i_B_BFu33");
    static aBFu9i_B_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(aBFu9i_B_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_BFu33");
    check_field_offset(lv, v2, 2, "aBFu9i_B_BFu33.v2");
    set_bf_and_test(lv, v3, 3, 0, 33, 1, "aBFu9i_B_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, hide_ull(1LL<<32), "aBFu9i_B_BFu33");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_BFu33(Test_aBFu9i_B_BFu33, "aBFu9i_B_BFu33", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_BFu7c()
{
  {
    init_simple_test("aBFu9i_B_BFu7c");
    static aBFu9i_B_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9i_B_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_BFu7c");
    check_field_offset(lv, v2, 2, "aBFu9i_B_BFu7c.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aBFu9i_B_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aBFu9i_B_BFu7c");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_BFu7c(Test_aBFu9i_B_BFu7c, "aBFu9i_B_BFu7c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_BFu7i()
{
  {
    init_simple_test("aBFu9i_B_BFu7i");
    static aBFu9i_B_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9i_B_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_BFu7i");
    check_field_offset(lv, v2, 2, "aBFu9i_B_BFu7i.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aBFu9i_B_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aBFu9i_B_BFu7i");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_BFu7i(Test_aBFu9i_B_BFu7i, "aBFu9i_B_BFu7i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_BFu7ll()
{
  {
    init_simple_test("aBFu9i_B_BFu7ll");
    static aBFu9i_B_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9i_B_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_BFu7ll");
    check_field_offset(lv, v2, 2, "aBFu9i_B_BFu7ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aBFu9i_B_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aBFu9i_B_BFu7ll");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_BFu7ll(Test_aBFu9i_B_BFu7ll, "aBFu9i_B_BFu7ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_BFu7s()
{
  {
    init_simple_test("aBFu9i_B_BFu7s");
    static aBFu9i_B_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9i_B_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_BFu7s");
    check_field_offset(lv, v2, 2, "aBFu9i_B_BFu7s.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aBFu9i_B_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aBFu9i_B_BFu7s");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_BFu7s(Test_aBFu9i_B_BFu7s, "aBFu9i_B_BFu7s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_BFu8c()
{
  {
    init_simple_test("aBFu9i_B_BFu8c");
    static aBFu9i_B_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9i_B_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_BFu8c");
    check_field_offset(lv, v2, 2, "aBFu9i_B_BFu8c.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aBFu9i_B_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aBFu9i_B_BFu8c");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_BFu8c(Test_aBFu9i_B_BFu8c, "aBFu9i_B_BFu8c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_BFu8i()
{
  {
    init_simple_test("aBFu9i_B_BFu8i");
    static aBFu9i_B_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9i_B_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_BFu8i");
    check_field_offset(lv, v2, 2, "aBFu9i_B_BFu8i.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aBFu9i_B_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aBFu9i_B_BFu8i");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_BFu8i(Test_aBFu9i_B_BFu8i, "aBFu9i_B_BFu8i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_BFu8ll()
{
  {
    init_simple_test("aBFu9i_B_BFu8ll");
    static aBFu9i_B_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9i_B_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_BFu8ll");
    check_field_offset(lv, v2, 2, "aBFu9i_B_BFu8ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aBFu9i_B_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aBFu9i_B_BFu8ll");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_BFu8ll(Test_aBFu9i_B_BFu8ll, "aBFu9i_B_BFu8ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_BFu8s()
{
  {
    init_simple_test("aBFu9i_B_BFu8s");
    static aBFu9i_B_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9i_B_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_BFu8s");
    check_field_offset(lv, v2, 2, "aBFu9i_B_BFu8s.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aBFu9i_B_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aBFu9i_B_BFu8s");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_BFu8s(Test_aBFu9i_B_BFu8s, "aBFu9i_B_BFu8s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_BFu9i()
{
  {
    init_simple_test("aBFu9i_B_BFu9i");
    static aBFu9i_B_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9i_B_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_BFu9i");
    check_field_offset(lv, v2, 2, "aBFu9i_B_BFu9i.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aBFu9i_B_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_BFu9i");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_BFu9i(Test_aBFu9i_B_BFu9i, "aBFu9i_B_BFu9i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_BFu9ll()
{
  {
    init_simple_test("aBFu9i_B_BFu9ll");
    static aBFu9i_B_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9i_B_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_BFu9ll");
    check_field_offset(lv, v2, 2, "aBFu9i_B_BFu9ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aBFu9i_B_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_BFu9ll");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_BFu9ll(Test_aBFu9i_B_BFu9ll, "aBFu9i_B_BFu9ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_BFu9s()
{
  {
    init_simple_test("aBFu9i_B_BFu9s");
    static aBFu9i_B_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9i_B_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_BFu9s");
    check_field_offset(lv, v2, 2, "aBFu9i_B_BFu9s.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aBFu9i_B_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_BFu9s");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_BFu9s(Test_aBFu9i_B_BFu9s, "aBFu9i_B_BFu9s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_C()
{
  {
    init_simple_test("aBFu9i_B_C");
    static aBFu9i_B_C lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9i_B_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_C)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_C");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_C");
    check_field_offset(lv, v2, 2, "aBFu9i_B_C.v2");
    check_field_offset(lv, v3, 3, "aBFu9i_B_C.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_C(Test_aBFu9i_B_C, "aBFu9i_B_C", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_D()
{
  {
    init_simple_test("aBFu9i_B_D");
    static aBFu9i_B_D lv;
    check2(sizeof(lv), 11, "sizeof(aBFu9i_B_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_D)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_D");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_D");
    check_field_offset(lv, v2, 2, "aBFu9i_B_D.v2");
    check_field_offset(lv, v3, 3, "aBFu9i_B_D.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_D(Test_aBFu9i_B_D, "aBFu9i_B_D", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_F()
{
  {
    init_simple_test("aBFu9i_B_F");
    static aBFu9i_B_F lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9i_B_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_F)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_F");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_F");
    check_field_offset(lv, v2, 2, "aBFu9i_B_F.v2");
    check_field_offset(lv, v3, 3, "aBFu9i_B_F.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_F(Test_aBFu9i_B_F, "aBFu9i_B_F", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_I()
{
  {
    init_simple_test("aBFu9i_B_I");
    static aBFu9i_B_I lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9i_B_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_I)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_I");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_I");
    check_field_offset(lv, v2, 2, "aBFu9i_B_I.v2");
    check_field_offset(lv, v3, 3, "aBFu9i_B_I.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_I(Test_aBFu9i_B_I, "aBFu9i_B_I", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_Ip()
{
  {
    init_simple_test("aBFu9i_B_Ip");
    static aBFu9i_B_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aBFu9i_B_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_Ip");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_Ip");
    check_field_offset(lv, v2, 2, "aBFu9i_B_Ip.v2");
    check_field_offset(lv, v3, 3, "aBFu9i_B_Ip.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_Ip(Test_aBFu9i_B_Ip, "aBFu9i_B_Ip", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_L()
{
  {
    init_simple_test("aBFu9i_B_L");
    static aBFu9i_B_L lv;
    check2(sizeof(lv), 11, "sizeof(aBFu9i_B_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_L)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_L");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_L");
    check_field_offset(lv, v2, 2, "aBFu9i_B_L.v2");
    check_field_offset(lv, v3, 3, "aBFu9i_B_L.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_L(Test_aBFu9i_B_L, "aBFu9i_B_L", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_S()
{
  {
    init_simple_test("aBFu9i_B_S");
    static aBFu9i_B_S lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9i_B_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_S)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_S");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_S");
    check_field_offset(lv, v2, 2, "aBFu9i_B_S.v2");
    check_field_offset(lv, v3, 3, "aBFu9i_B_S.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_S(Test_aBFu9i_B_S, "aBFu9i_B_S", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_Uc()
{
  {
    init_simple_test("aBFu9i_B_Uc");
    static aBFu9i_B_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9i_B_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_Uc");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_Uc");
    check_field_offset(lv, v2, 2, "aBFu9i_B_Uc.v2");
    check_field_offset(lv, v3, 3, "aBFu9i_B_Uc.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_Uc(Test_aBFu9i_B_Uc, "aBFu9i_B_Uc", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_Ui()
{
  {
    init_simple_test("aBFu9i_B_Ui");
    static aBFu9i_B_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9i_B_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_Ui");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_Ui");
    check_field_offset(lv, v2, 2, "aBFu9i_B_Ui.v2");
    check_field_offset(lv, v3, 3, "aBFu9i_B_Ui.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_Ui(Test_aBFu9i_B_Ui, "aBFu9i_B_Ui", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_Ul()
{
  {
    init_simple_test("aBFu9i_B_Ul");
    static aBFu9i_B_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aBFu9i_B_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_Ul");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_Ul");
    check_field_offset(lv, v2, 2, "aBFu9i_B_Ul.v2");
    check_field_offset(lv, v3, 3, "aBFu9i_B_Ul.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_Ul(Test_aBFu9i_B_Ul, "aBFu9i_B_Ul", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_Us()
{
  {
    init_simple_test("aBFu9i_B_Us");
    static aBFu9i_B_Us lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9i_B_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_Us)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_Us");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_Us");
    check_field_offset(lv, v2, 2, "aBFu9i_B_Us.v2");
    check_field_offset(lv, v3, 3, "aBFu9i_B_Us.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_Us(Test_aBFu9i_B_Us, "aBFu9i_B_Us", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_B_Vp()
{
  {
    init_simple_test("aBFu9i_B_Vp");
    static aBFu9i_B_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aBFu9i_B_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_B_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_B_Vp");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_B_Vp");
    check_field_offset(lv, v2, 2, "aBFu9i_B_Vp.v2");
    check_field_offset(lv, v3, 3, "aBFu9i_B_Vp.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_B_Vp(Test_aBFu9i_B_Vp, "aBFu9i_B_Vp", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_BFu15i_B()
{
  {
    init_simple_test("aBFu9i_BFu15i_B");
    static aBFu9i_BFu15i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9i_BFu15i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_BFu15i_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_BFu15i_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_BFu15i_B");
    set_bf_and_test(lv, v2, 1, 1, 15, 1, "aBFu9i_BFu15i_B");
    set_bf_and_test(lv, v2, 1, 1, 15, hide_ull(1LL<<14), "aBFu9i_BFu15i_B");
    check_field_offset(lv, v3, 3, "aBFu9i_BFu15i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_BFu15i_B(Test_aBFu9i_BFu15i_B, "aBFu9i_BFu15i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_BFu15ll_B()
{
  {
    init_simple_test("aBFu9i_BFu15ll_B");
    static aBFu9i_BFu15ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9i_BFu15ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_BFu15ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_BFu15ll_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_BFu15ll_B");
    set_bf_and_test(lv, v2, 1, 1, 15, 1, "aBFu9i_BFu15ll_B");
    set_bf_and_test(lv, v2, 1, 1, 15, hide_ull(1LL<<14), "aBFu9i_BFu15ll_B");
    check_field_offset(lv, v3, 3, "aBFu9i_BFu15ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_BFu15ll_B(Test_aBFu9i_BFu15ll_B, "aBFu9i_BFu15ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_BFu15s_B()
{
  {
    init_simple_test("aBFu9i_BFu15s_B");
    static aBFu9i_BFu15s_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9i_BFu15s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_BFu15s_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_BFu15s_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_BFu15s_B");
    set_bf_and_test(lv, v2, 1, 1, 15, 1, "aBFu9i_BFu15s_B");
    set_bf_and_test(lv, v2, 1, 1, 15, hide_ull(1LL<<14), "aBFu9i_BFu15s_B");
    check_field_offset(lv, v3, 3, "aBFu9i_BFu15s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_BFu15s_B(Test_aBFu9i_BFu15s_B, "aBFu9i_BFu15s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_BFu16i_B()
{
  {
    init_simple_test("aBFu9i_BFu16i_B");
    static aBFu9i_BFu16i_B lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9i_BFu16i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_BFu16i_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_BFu16i_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_BFu16i_B");
    set_bf_and_test(lv, v2, 1, 1, 16, 1, "aBFu9i_BFu16i_B");
    set_bf_and_test(lv, v2, 1, 1, 16, hide_ull(1LL<<15), "aBFu9i_BFu16i_B");
    check_field_offset(lv, v3, 4, "aBFu9i_BFu16i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_BFu16i_B(Test_aBFu9i_BFu16i_B, "aBFu9i_BFu16i_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_BFu16ll_B()
{
  {
    init_simple_test("aBFu9i_BFu16ll_B");
    static aBFu9i_BFu16ll_B lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9i_BFu16ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_BFu16ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_BFu16ll_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_BFu16ll_B");
    set_bf_and_test(lv, v2, 1, 1, 16, 1, "aBFu9i_BFu16ll_B");
    set_bf_and_test(lv, v2, 1, 1, 16, hide_ull(1LL<<15), "aBFu9i_BFu16ll_B");
    check_field_offset(lv, v3, 4, "aBFu9i_BFu16ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_BFu16ll_B(Test_aBFu9i_BFu16ll_B, "aBFu9i_BFu16ll_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_BFu16s_B()
{
  {
    init_simple_test("aBFu9i_BFu16s_B");
    static aBFu9i_BFu16s_B lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9i_BFu16s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_BFu16s_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_BFu16s_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_BFu16s_B");
    set_bf_and_test(lv, v2, 1, 1, 16, 1, "aBFu9i_BFu16s_B");
    set_bf_and_test(lv, v2, 1, 1, 16, hide_ull(1LL<<15), "aBFu9i_BFu16s_B");
    check_field_offset(lv, v3, 4, "aBFu9i_BFu16s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_BFu16s_B(Test_aBFu9i_BFu16s_B, "aBFu9i_BFu16s_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_BFu17i_B()
{
  {
    init_simple_test("aBFu9i_BFu17i_B");
    static aBFu9i_BFu17i_B lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9i_BFu17i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_BFu17i_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_BFu17i_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_BFu17i_B");
    set_bf_and_test(lv, v2, 1, 1, 17, 1, "aBFu9i_BFu17i_B");
    set_bf_and_test(lv, v2, 1, 1, 17, hide_ull(1LL<<16), "aBFu9i_BFu17i_B");
    check_field_offset(lv, v3, 4, "aBFu9i_BFu17i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_BFu17i_B(Test_aBFu9i_BFu17i_B, "aBFu9i_BFu17i_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_BFu17ll_B()
{
  {
    init_simple_test("aBFu9i_BFu17ll_B");
    static aBFu9i_BFu17ll_B lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9i_BFu17ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_BFu17ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_BFu17ll_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_BFu17ll_B");
    set_bf_and_test(lv, v2, 1, 1, 17, 1, "aBFu9i_BFu17ll_B");
    set_bf_and_test(lv, v2, 1, 1, 17, hide_ull(1LL<<16), "aBFu9i_BFu17ll_B");
    check_field_offset(lv, v3, 4, "aBFu9i_BFu17ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_BFu17ll_B(Test_aBFu9i_BFu17ll_B, "aBFu9i_BFu17ll_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_BFu1c_B()
{
  {
    init_simple_test("aBFu9i_BFu1c_B");
    static aBFu9i_BFu1c_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu9i_BFu1c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_BFu1c_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_BFu1c_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_BFu1c_B");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "aBFu9i_BFu1c_B");
    check_field_offset(lv, v3, 2, "aBFu9i_BFu1c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_BFu1c_B(Test_aBFu9i_BFu1c_B, "aBFu9i_BFu1c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_BFu1i_B()
{
  {
    init_simple_test("aBFu9i_BFu1i_B");
    static aBFu9i_BFu1i_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu9i_BFu1i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_BFu1i_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_BFu1i_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_BFu1i_B");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "aBFu9i_BFu1i_B");
    check_field_offset(lv, v3, 2, "aBFu9i_BFu1i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_BFu1i_B(Test_aBFu9i_BFu1i_B, "aBFu9i_BFu1i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_BFu1ll_B()
{
  {
    init_simple_test("aBFu9i_BFu1ll_B");
    static aBFu9i_BFu1ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu9i_BFu1ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_BFu1ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_BFu1ll_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_BFu1ll_B");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "aBFu9i_BFu1ll_B");
    check_field_offset(lv, v3, 2, "aBFu9i_BFu1ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_BFu1ll_B(Test_aBFu9i_BFu1ll_B, "aBFu9i_BFu1ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_BFu1s_B()
{
  {
    init_simple_test("aBFu9i_BFu1s_B");
    static aBFu9i_BFu1s_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu9i_BFu1s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_BFu1s_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_BFu1s_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_BFu1s_B");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "aBFu9i_BFu1s_B");
    check_field_offset(lv, v3, 2, "aBFu9i_BFu1s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_BFu1s_B(Test_aBFu9i_BFu1s_B, "aBFu9i_BFu1s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_BFu31i_B()
{
  {
    init_simple_test("aBFu9i_BFu31i_B");
    static aBFu9i_BFu31i_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu9i_BFu31i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_BFu31i_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_BFu31i_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_BFu31i_B");
    set_bf_and_test(lv, v2, 1, 1, 31, 1, "aBFu9i_BFu31i_B");
    set_bf_and_test(lv, v2, 1, 1, 31, hide_ull(1LL<<30), "aBFu9i_BFu31i_B");
    check_field_offset(lv, v3, 5, "aBFu9i_BFu31i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_BFu31i_B(Test_aBFu9i_BFu31i_B, "aBFu9i_BFu31i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_BFu31ll_B()
{
  {
    init_simple_test("aBFu9i_BFu31ll_B");
    static aBFu9i_BFu31ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu9i_BFu31ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_BFu31ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_BFu31ll_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_BFu31ll_B");
    set_bf_and_test(lv, v2, 1, 1, 31, 1, "aBFu9i_BFu31ll_B");
    set_bf_and_test(lv, v2, 1, 1, 31, hide_ull(1LL<<30), "aBFu9i_BFu31ll_B");
    check_field_offset(lv, v3, 5, "aBFu9i_BFu31ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_BFu31ll_B(Test_aBFu9i_BFu31ll_B, "aBFu9i_BFu31ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_BFu32i_B()
{
  {
    init_simple_test("aBFu9i_BFu32i_B");
    static aBFu9i_BFu32i_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9i_BFu32i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_BFu32i_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_BFu32i_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_BFu32i_B");
    set_bf_and_test(lv, v2, 1, 1, 32, 1, "aBFu9i_BFu32i_B");
    set_bf_and_test(lv, v2, 1, 1, 32, hide_ull(1LL<<31), "aBFu9i_BFu32i_B");
    check_field_offset(lv, v3, 6, "aBFu9i_BFu32i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_BFu32i_B(Test_aBFu9i_BFu32i_B, "aBFu9i_BFu32i_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_BFu32ll_B()
{
  {
    init_simple_test("aBFu9i_BFu32ll_B");
    static aBFu9i_BFu32ll_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9i_BFu32ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_BFu32ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_BFu32ll_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_BFu32ll_B");
    set_bf_and_test(lv, v2, 1, 1, 32, 1, "aBFu9i_BFu32ll_B");
    set_bf_and_test(lv, v2, 1, 1, 32, hide_ull(1LL<<31), "aBFu9i_BFu32ll_B");
    check_field_offset(lv, v3, 6, "aBFu9i_BFu32ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_BFu32ll_B(Test_aBFu9i_BFu32ll_B, "aBFu9i_BFu32ll_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_BFu33_B()
{
  {
    init_simple_test("aBFu9i_BFu33_B");
    static aBFu9i_BFu33_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9i_BFu33_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_BFu33_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_BFu33_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_BFu33_B");
    set_bf_and_test(lv, v2, 1, 1, 33, 1, "aBFu9i_BFu33_B");
    set_bf_and_test(lv, v2, 1, 1, 33, hide_ull(1LL<<32), "aBFu9i_BFu33_B");
    check_field_offset(lv, v3, 6, "aBFu9i_BFu33_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_BFu33_B(Test_aBFu9i_BFu33_B, "aBFu9i_BFu33_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_BFu7c_B()
{
  {
    init_simple_test("aBFu9i_BFu7c_B");
    static aBFu9i_BFu7c_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu9i_BFu7c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_BFu7c_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_BFu7c_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_BFu7c_B");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "aBFu9i_BFu7c_B");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "aBFu9i_BFu7c_B");
    check_field_offset(lv, v3, 2, "aBFu9i_BFu7c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_BFu7c_B(Test_aBFu9i_BFu7c_B, "aBFu9i_BFu7c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_BFu7i_B()
{
  {
    init_simple_test("aBFu9i_BFu7i_B");
    static aBFu9i_BFu7i_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu9i_BFu7i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_BFu7i_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_BFu7i_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_BFu7i_B");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "aBFu9i_BFu7i_B");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "aBFu9i_BFu7i_B");
    check_field_offset(lv, v3, 2, "aBFu9i_BFu7i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_BFu7i_B(Test_aBFu9i_BFu7i_B, "aBFu9i_BFu7i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_BFu7ll_B()
{
  {
    init_simple_test("aBFu9i_BFu7ll_B");
    static aBFu9i_BFu7ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu9i_BFu7ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_BFu7ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_BFu7ll_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_BFu7ll_B");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "aBFu9i_BFu7ll_B");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "aBFu9i_BFu7ll_B");
    check_field_offset(lv, v3, 2, "aBFu9i_BFu7ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_BFu7ll_B(Test_aBFu9i_BFu7ll_B, "aBFu9i_BFu7ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_BFu7s_B()
{
  {
    init_simple_test("aBFu9i_BFu7s_B");
    static aBFu9i_BFu7s_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu9i_BFu7s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_BFu7s_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_BFu7s_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_BFu7s_B");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "aBFu9i_BFu7s_B");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "aBFu9i_BFu7s_B");
    check_field_offset(lv, v3, 2, "aBFu9i_BFu7s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_BFu7s_B(Test_aBFu9i_BFu7s_B, "aBFu9i_BFu7s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_BFu8c_B()
{
  {
    init_simple_test("aBFu9i_BFu8c_B");
    static aBFu9i_BFu8c_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9i_BFu8c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_BFu8c_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_BFu8c_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_BFu8c_B");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "aBFu9i_BFu8c_B");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "aBFu9i_BFu8c_B");
    check_field_offset(lv, v3, 3, "aBFu9i_BFu8c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_BFu8c_B(Test_aBFu9i_BFu8c_B, "aBFu9i_BFu8c_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_BFu8i_B()
{
  {
    init_simple_test("aBFu9i_BFu8i_B");
    static aBFu9i_BFu8i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9i_BFu8i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_BFu8i_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_BFu8i_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_BFu8i_B");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "aBFu9i_BFu8i_B");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "aBFu9i_BFu8i_B");
    check_field_offset(lv, v3, 3, "aBFu9i_BFu8i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_BFu8i_B(Test_aBFu9i_BFu8i_B, "aBFu9i_BFu8i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_BFu8ll_B()
{
  {
    init_simple_test("aBFu9i_BFu8ll_B");
    static aBFu9i_BFu8ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9i_BFu8ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_BFu8ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_BFu8ll_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_BFu8ll_B");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "aBFu9i_BFu8ll_B");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "aBFu9i_BFu8ll_B");
    check_field_offset(lv, v3, 3, "aBFu9i_BFu8ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_BFu8ll_B(Test_aBFu9i_BFu8ll_B, "aBFu9i_BFu8ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_BFu8s_B()
{
  {
    init_simple_test("aBFu9i_BFu8s_B");
    static aBFu9i_BFu8s_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9i_BFu8s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_BFu8s_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_BFu8s_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_BFu8s_B");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "aBFu9i_BFu8s_B");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "aBFu9i_BFu8s_B");
    check_field_offset(lv, v3, 3, "aBFu9i_BFu8s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_BFu8s_B(Test_aBFu9i_BFu8s_B, "aBFu9i_BFu8s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_BFu9i_B()
{
  {
    init_simple_test("aBFu9i_BFu9i_B");
    static aBFu9i_BFu9i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9i_BFu9i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_BFu9i_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_BFu9i_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_BFu9i_B");
    set_bf_and_test(lv, v2, 1, 1, 9, 1, "aBFu9i_BFu9i_B");
    set_bf_and_test(lv, v2, 1, 1, 9, hide_ull(1LL<<8), "aBFu9i_BFu9i_B");
    check_field_offset(lv, v3, 3, "aBFu9i_BFu9i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_BFu9i_B(Test_aBFu9i_BFu9i_B, "aBFu9i_BFu9i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_BFu9ll_B()
{
  {
    init_simple_test("aBFu9i_BFu9ll_B");
    static aBFu9i_BFu9ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9i_BFu9ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_BFu9ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_BFu9ll_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_BFu9ll_B");
    set_bf_and_test(lv, v2, 1, 1, 9, 1, "aBFu9i_BFu9ll_B");
    set_bf_and_test(lv, v2, 1, 1, 9, hide_ull(1LL<<8), "aBFu9i_BFu9ll_B");
    check_field_offset(lv, v3, 3, "aBFu9i_BFu9ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_BFu9ll_B(Test_aBFu9i_BFu9ll_B, "aBFu9i_BFu9ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_BFu9s_B()
{
  {
    init_simple_test("aBFu9i_BFu9s_B");
    static aBFu9i_BFu9s_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9i_BFu9s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_BFu9s_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_BFu9s_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_BFu9s_B");
    set_bf_and_test(lv, v2, 1, 1, 9, 1, "aBFu9i_BFu9s_B");
    set_bf_and_test(lv, v2, 1, 1, 9, hide_ull(1LL<<8), "aBFu9i_BFu9s_B");
    check_field_offset(lv, v3, 3, "aBFu9i_BFu9s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_BFu9s_B(Test_aBFu9i_BFu9s_B, "aBFu9i_BFu9s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_C_B()
{
  {
    init_simple_test("aBFu9i_C_B");
    static aBFu9i_C_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9i_C_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_C_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_C_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_C_B");
    check_field_offset(lv, v2, 2, "aBFu9i_C_B.v2");
    check_field_offset(lv, v3, 3, "aBFu9i_C_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_C_B(Test_aBFu9i_C_B, "aBFu9i_C_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_D_B()
{
  {
    init_simple_test("aBFu9i_D_B");
    static aBFu9i_D_B lv;
    check2(sizeof(lv), 11, "sizeof(aBFu9i_D_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_D_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_D_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_D_B");
    check_field_offset(lv, v2, 2, "aBFu9i_D_B.v2");
    check_field_offset(lv, v3, 10, "aBFu9i_D_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_D_B(Test_aBFu9i_D_B, "aBFu9i_D_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_F_B()
{
  {
    init_simple_test("aBFu9i_F_B");
    static aBFu9i_F_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9i_F_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_F_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_F_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_F_B");
    check_field_offset(lv, v2, 2, "aBFu9i_F_B.v2");
    check_field_offset(lv, v3, 6, "aBFu9i_F_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_F_B(Test_aBFu9i_F_B, "aBFu9i_F_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_I_B()
{
  {
    init_simple_test("aBFu9i_I_B");
    static aBFu9i_I_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9i_I_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_I_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_I_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_I_B");
    check_field_offset(lv, v2, 2, "aBFu9i_I_B.v2");
    check_field_offset(lv, v3, 6, "aBFu9i_I_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_I_B(Test_aBFu9i_I_B, "aBFu9i_I_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_Ip_B()
{
  {
    init_simple_test("aBFu9i_Ip_B");
    static aBFu9i_Ip_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aBFu9i_Ip_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_Ip_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_Ip_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_Ip_B");
    check_field_offset(lv, v2, 2, "aBFu9i_Ip_B.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aBFu9i_Ip_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_Ip_B(Test_aBFu9i_Ip_B, "aBFu9i_Ip_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_L_B()
{
  {
    init_simple_test("aBFu9i_L_B");
    static aBFu9i_L_B lv;
    check2(sizeof(lv), 11, "sizeof(aBFu9i_L_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_L_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_L_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_L_B");
    check_field_offset(lv, v2, 2, "aBFu9i_L_B.v2");
    check_field_offset(lv, v3, 10, "aBFu9i_L_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_L_B(Test_aBFu9i_L_B, "aBFu9i_L_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_S_B()
{
  {
    init_simple_test("aBFu9i_S_B");
    static aBFu9i_S_B lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9i_S_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_S_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_S_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_S_B");
    check_field_offset(lv, v2, 2, "aBFu9i_S_B.v2");
    check_field_offset(lv, v3, 4, "aBFu9i_S_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_S_B(Test_aBFu9i_S_B, "aBFu9i_S_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_Uc_B()
{
  {
    init_simple_test("aBFu9i_Uc_B");
    static aBFu9i_Uc_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9i_Uc_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_Uc_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_Uc_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_Uc_B");
    check_field_offset(lv, v2, 2, "aBFu9i_Uc_B.v2");
    check_field_offset(lv, v3, 3, "aBFu9i_Uc_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_Uc_B(Test_aBFu9i_Uc_B, "aBFu9i_Uc_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_Ui_B()
{
  {
    init_simple_test("aBFu9i_Ui_B");
    static aBFu9i_Ui_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9i_Ui_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_Ui_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_Ui_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_Ui_B");
    check_field_offset(lv, v2, 2, "aBFu9i_Ui_B.v2");
    check_field_offset(lv, v3, 6, "aBFu9i_Ui_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_Ui_B(Test_aBFu9i_Ui_B, "aBFu9i_Ui_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_Ul_B()
{
  {
    init_simple_test("aBFu9i_Ul_B");
    static aBFu9i_Ul_B lv;
    check2(sizeof(lv), 11, "sizeof(aBFu9i_Ul_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_Ul_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_Ul_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_Ul_B");
    check_field_offset(lv, v2, 2, "aBFu9i_Ul_B.v2");
    check_field_offset(lv, v3, 10, "aBFu9i_Ul_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_Ul_B(Test_aBFu9i_Ul_B, "aBFu9i_Ul_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_Us_B()
{
  {
    init_simple_test("aBFu9i_Us_B");
    static aBFu9i_Us_B lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9i_Us_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_Us_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_Us_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_Us_B");
    check_field_offset(lv, v2, 2, "aBFu9i_Us_B.v2");
    check_field_offset(lv, v3, 4, "aBFu9i_Us_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_Us_B(Test_aBFu9i_Us_B, "aBFu9i_Us_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9i_Vp_B()
{
  {
    init_simple_test("aBFu9i_Vp_B");
    static aBFu9i_Vp_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aBFu9i_Vp_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9i_Vp_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9i_Vp_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9i_Vp_B");
    check_field_offset(lv, v2, 2, "aBFu9i_Vp_B.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aBFu9i_Vp_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9i_Vp_B(Test_aBFu9i_Vp_B, "aBFu9i_Vp_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B()
{
  {
    init_simple_test("aBFu9ll_B");
    static aBFu9ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu9ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B");
    check_field_offset(lv, v2, 2, "aBFu9ll_B.v2");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B(Test_aBFu9ll_B, "aBFu9ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_B()
{
  {
    init_simple_test("aBFu9ll_B_B");
    static aBFu9ll_B_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9ll_B_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_B");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_B.v2");
    check_field_offset(lv, v3, 3, "aBFu9ll_B_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_B(Test_aBFu9ll_B_B, "aBFu9ll_B_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_BFu15i()
{
  {
    init_simple_test("aBFu9ll_B_BFu15i");
    static aBFu9ll_B_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9ll_B_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_BFu15i");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_BFu15i.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aBFu9ll_B_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aBFu9ll_B_BFu15i");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_BFu15i(Test_aBFu9ll_B_BFu15i, "aBFu9ll_B_BFu15i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_BFu15ll()
{
  {
    init_simple_test("aBFu9ll_B_BFu15ll");
    static aBFu9ll_B_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9ll_B_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_BFu15ll");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_BFu15ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aBFu9ll_B_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aBFu9ll_B_BFu15ll");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_BFu15ll(Test_aBFu9ll_B_BFu15ll, "aBFu9ll_B_BFu15ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_BFu15s()
{
  {
    init_simple_test("aBFu9ll_B_BFu15s");
    static aBFu9ll_B_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9ll_B_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_BFu15s");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_BFu15s.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aBFu9ll_B_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aBFu9ll_B_BFu15s");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_BFu15s(Test_aBFu9ll_B_BFu15s, "aBFu9ll_B_BFu15s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_BFu16i()
{
  {
    init_simple_test("aBFu9ll_B_BFu16i");
    static aBFu9ll_B_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9ll_B_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_BFu16i");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_BFu16i.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aBFu9ll_B_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aBFu9ll_B_BFu16i");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_BFu16i(Test_aBFu9ll_B_BFu16i, "aBFu9ll_B_BFu16i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_BFu16ll()
{
  {
    init_simple_test("aBFu9ll_B_BFu16ll");
    static aBFu9ll_B_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9ll_B_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_BFu16ll");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_BFu16ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aBFu9ll_B_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aBFu9ll_B_BFu16ll");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_BFu16ll(Test_aBFu9ll_B_BFu16ll, "aBFu9ll_B_BFu16ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_BFu16s()
{
  {
    init_simple_test("aBFu9ll_B_BFu16s");
    static aBFu9ll_B_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9ll_B_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_BFu16s");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_BFu16s.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aBFu9ll_B_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aBFu9ll_B_BFu16s");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_BFu16s(Test_aBFu9ll_B_BFu16s, "aBFu9ll_B_BFu16s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_BFu17i()
{
  {
    init_simple_test("aBFu9ll_B_BFu17i");
    static aBFu9ll_B_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu9ll_B_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_BFu17i");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_BFu17i.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aBFu9ll_B_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aBFu9ll_B_BFu17i");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_BFu17i(Test_aBFu9ll_B_BFu17i, "aBFu9ll_B_BFu17i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_BFu17ll()
{
  {
    init_simple_test("aBFu9ll_B_BFu17ll");
    static aBFu9ll_B_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu9ll_B_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_BFu17ll");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_BFu17ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aBFu9ll_B_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aBFu9ll_B_BFu17ll");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_BFu17ll(Test_aBFu9ll_B_BFu17ll, "aBFu9ll_B_BFu17ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_BFu1c()
{
  {
    init_simple_test("aBFu9ll_B_BFu1c");
    static aBFu9ll_B_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9ll_B_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_BFu1c");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_BFu1c.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aBFu9ll_B_BFu1c");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_BFu1c(Test_aBFu9ll_B_BFu1c, "aBFu9ll_B_BFu1c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_BFu1i()
{
  {
    init_simple_test("aBFu9ll_B_BFu1i");
    static aBFu9ll_B_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9ll_B_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_BFu1i");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_BFu1i.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aBFu9ll_B_BFu1i");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_BFu1i(Test_aBFu9ll_B_BFu1i, "aBFu9ll_B_BFu1i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_BFu1ll()
{
  {
    init_simple_test("aBFu9ll_B_BFu1ll");
    static aBFu9ll_B_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9ll_B_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_BFu1ll");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_BFu1ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aBFu9ll_B_BFu1ll");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_BFu1ll(Test_aBFu9ll_B_BFu1ll, "aBFu9ll_B_BFu1ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_BFu1s()
{
  {
    init_simple_test("aBFu9ll_B_BFu1s");
    static aBFu9ll_B_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9ll_B_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_BFu1s");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_BFu1s.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aBFu9ll_B_BFu1s");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_BFu1s(Test_aBFu9ll_B_BFu1s, "aBFu9ll_B_BFu1s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_BFu31i()
{
  {
    init_simple_test("aBFu9ll_B_BFu31i");
    static aBFu9ll_B_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9ll_B_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_BFu31i");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_BFu31i.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aBFu9ll_B_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aBFu9ll_B_BFu31i");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_BFu31i(Test_aBFu9ll_B_BFu31i, "aBFu9ll_B_BFu31i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_BFu31ll()
{
  {
    init_simple_test("aBFu9ll_B_BFu31ll");
    static aBFu9ll_B_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9ll_B_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_BFu31ll");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_BFu31ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aBFu9ll_B_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aBFu9ll_B_BFu31ll");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_BFu31ll(Test_aBFu9ll_B_BFu31ll, "aBFu9ll_B_BFu31ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_BFu32i()
{
  {
    init_simple_test("aBFu9ll_B_BFu32i");
    static aBFu9ll_B_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9ll_B_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_BFu32i");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_BFu32i.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aBFu9ll_B_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aBFu9ll_B_BFu32i");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_BFu32i(Test_aBFu9ll_B_BFu32i, "aBFu9ll_B_BFu32i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_BFu32ll()
{
  {
    init_simple_test("aBFu9ll_B_BFu32ll");
    static aBFu9ll_B_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9ll_B_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_BFu32ll");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_BFu32ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aBFu9ll_B_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aBFu9ll_B_BFu32ll");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_BFu32ll(Test_aBFu9ll_B_BFu32ll, "aBFu9ll_B_BFu32ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_BFu33()
{
  {
    init_simple_test("aBFu9ll_B_BFu33");
    static aBFu9ll_B_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(aBFu9ll_B_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_BFu33");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_BFu33.v2");
    set_bf_and_test(lv, v3, 3, 0, 33, 1, "aBFu9ll_B_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, hide_ull(1LL<<32), "aBFu9ll_B_BFu33");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_BFu33(Test_aBFu9ll_B_BFu33, "aBFu9ll_B_BFu33", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_BFu7c()
{
  {
    init_simple_test("aBFu9ll_B_BFu7c");
    static aBFu9ll_B_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9ll_B_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_BFu7c");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_BFu7c.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aBFu9ll_B_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aBFu9ll_B_BFu7c");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_BFu7c(Test_aBFu9ll_B_BFu7c, "aBFu9ll_B_BFu7c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_BFu7i()
{
  {
    init_simple_test("aBFu9ll_B_BFu7i");
    static aBFu9ll_B_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9ll_B_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_BFu7i");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_BFu7i.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aBFu9ll_B_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aBFu9ll_B_BFu7i");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_BFu7i(Test_aBFu9ll_B_BFu7i, "aBFu9ll_B_BFu7i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_BFu7ll()
{
  {
    init_simple_test("aBFu9ll_B_BFu7ll");
    static aBFu9ll_B_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9ll_B_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_BFu7ll");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_BFu7ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aBFu9ll_B_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aBFu9ll_B_BFu7ll");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_BFu7ll(Test_aBFu9ll_B_BFu7ll, "aBFu9ll_B_BFu7ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_BFu7s()
{
  {
    init_simple_test("aBFu9ll_B_BFu7s");
    static aBFu9ll_B_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9ll_B_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_BFu7s");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_BFu7s.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aBFu9ll_B_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aBFu9ll_B_BFu7s");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_BFu7s(Test_aBFu9ll_B_BFu7s, "aBFu9ll_B_BFu7s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_BFu8c()
{
  {
    init_simple_test("aBFu9ll_B_BFu8c");
    static aBFu9ll_B_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9ll_B_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_BFu8c");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_BFu8c.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aBFu9ll_B_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aBFu9ll_B_BFu8c");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_BFu8c(Test_aBFu9ll_B_BFu8c, "aBFu9ll_B_BFu8c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_BFu8i()
{
  {
    init_simple_test("aBFu9ll_B_BFu8i");
    static aBFu9ll_B_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9ll_B_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_BFu8i");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_BFu8i.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aBFu9ll_B_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aBFu9ll_B_BFu8i");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_BFu8i(Test_aBFu9ll_B_BFu8i, "aBFu9ll_B_BFu8i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_BFu8ll()
{
  {
    init_simple_test("aBFu9ll_B_BFu8ll");
    static aBFu9ll_B_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9ll_B_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_BFu8ll");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_BFu8ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aBFu9ll_B_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aBFu9ll_B_BFu8ll");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_BFu8ll(Test_aBFu9ll_B_BFu8ll, "aBFu9ll_B_BFu8ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_BFu8s()
{
  {
    init_simple_test("aBFu9ll_B_BFu8s");
    static aBFu9ll_B_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9ll_B_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_BFu8s");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_BFu8s.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aBFu9ll_B_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aBFu9ll_B_BFu8s");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_BFu8s(Test_aBFu9ll_B_BFu8s, "aBFu9ll_B_BFu8s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_BFu9i()
{
  {
    init_simple_test("aBFu9ll_B_BFu9i");
    static aBFu9ll_B_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9ll_B_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_BFu9i");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_BFu9i.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aBFu9ll_B_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_BFu9i");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_BFu9i(Test_aBFu9ll_B_BFu9i, "aBFu9ll_B_BFu9i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_BFu9ll()
{
  {
    init_simple_test("aBFu9ll_B_BFu9ll");
    static aBFu9ll_B_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9ll_B_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_BFu9ll");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_BFu9ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aBFu9ll_B_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_BFu9ll");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_BFu9ll(Test_aBFu9ll_B_BFu9ll, "aBFu9ll_B_BFu9ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_BFu9s()
{
  {
    init_simple_test("aBFu9ll_B_BFu9s");
    static aBFu9ll_B_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9ll_B_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_BFu9s");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_BFu9s.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aBFu9ll_B_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_BFu9s");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_BFu9s(Test_aBFu9ll_B_BFu9s, "aBFu9ll_B_BFu9s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_C()
{
  {
    init_simple_test("aBFu9ll_B_C");
    static aBFu9ll_B_C lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9ll_B_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_C)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_C");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_C");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_C.v2");
    check_field_offset(lv, v3, 3, "aBFu9ll_B_C.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_C(Test_aBFu9ll_B_C, "aBFu9ll_B_C", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_D()
{
  {
    init_simple_test("aBFu9ll_B_D");
    static aBFu9ll_B_D lv;
    check2(sizeof(lv), 11, "sizeof(aBFu9ll_B_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_D)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_D");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_D");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_D.v2");
    check_field_offset(lv, v3, 3, "aBFu9ll_B_D.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_D(Test_aBFu9ll_B_D, "aBFu9ll_B_D", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_F()
{
  {
    init_simple_test("aBFu9ll_B_F");
    static aBFu9ll_B_F lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9ll_B_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_F)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_F");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_F");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_F.v2");
    check_field_offset(lv, v3, 3, "aBFu9ll_B_F.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_F(Test_aBFu9ll_B_F, "aBFu9ll_B_F", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_I()
{
  {
    init_simple_test("aBFu9ll_B_I");
    static aBFu9ll_B_I lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9ll_B_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_I)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_I");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_I");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_I.v2");
    check_field_offset(lv, v3, 3, "aBFu9ll_B_I.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_I(Test_aBFu9ll_B_I, "aBFu9ll_B_I", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_Ip()
{
  {
    init_simple_test("aBFu9ll_B_Ip");
    static aBFu9ll_B_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aBFu9ll_B_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_Ip");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_Ip");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_Ip.v2");
    check_field_offset(lv, v3, 3, "aBFu9ll_B_Ip.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_Ip(Test_aBFu9ll_B_Ip, "aBFu9ll_B_Ip", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_L()
{
  {
    init_simple_test("aBFu9ll_B_L");
    static aBFu9ll_B_L lv;
    check2(sizeof(lv), 11, "sizeof(aBFu9ll_B_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_L)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_L");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_L");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_L.v2");
    check_field_offset(lv, v3, 3, "aBFu9ll_B_L.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_L(Test_aBFu9ll_B_L, "aBFu9ll_B_L", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_S()
{
  {
    init_simple_test("aBFu9ll_B_S");
    static aBFu9ll_B_S lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9ll_B_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_S)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_S");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_S");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_S.v2");
    check_field_offset(lv, v3, 3, "aBFu9ll_B_S.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_S(Test_aBFu9ll_B_S, "aBFu9ll_B_S", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_Uc()
{
  {
    init_simple_test("aBFu9ll_B_Uc");
    static aBFu9ll_B_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9ll_B_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_Uc");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_Uc");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_Uc.v2");
    check_field_offset(lv, v3, 3, "aBFu9ll_B_Uc.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_Uc(Test_aBFu9ll_B_Uc, "aBFu9ll_B_Uc", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_Ui()
{
  {
    init_simple_test("aBFu9ll_B_Ui");
    static aBFu9ll_B_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9ll_B_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_Ui");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_Ui");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_Ui.v2");
    check_field_offset(lv, v3, 3, "aBFu9ll_B_Ui.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_Ui(Test_aBFu9ll_B_Ui, "aBFu9ll_B_Ui", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_Ul()
{
  {
    init_simple_test("aBFu9ll_B_Ul");
    static aBFu9ll_B_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aBFu9ll_B_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_Ul");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_Ul");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_Ul.v2");
    check_field_offset(lv, v3, 3, "aBFu9ll_B_Ul.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_Ul(Test_aBFu9ll_B_Ul, "aBFu9ll_B_Ul", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_Us()
{
  {
    init_simple_test("aBFu9ll_B_Us");
    static aBFu9ll_B_Us lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9ll_B_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_Us)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_Us");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_Us");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_Us.v2");
    check_field_offset(lv, v3, 3, "aBFu9ll_B_Us.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_Us(Test_aBFu9ll_B_Us, "aBFu9ll_B_Us", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_B_Vp()
{
  {
    init_simple_test("aBFu9ll_B_Vp");
    static aBFu9ll_B_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aBFu9ll_B_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_B_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_B_Vp");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_B_Vp");
    check_field_offset(lv, v2, 2, "aBFu9ll_B_Vp.v2");
    check_field_offset(lv, v3, 3, "aBFu9ll_B_Vp.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_B_Vp(Test_aBFu9ll_B_Vp, "aBFu9ll_B_Vp", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_BFu15i_B()
{
  {
    init_simple_test("aBFu9ll_BFu15i_B");
    static aBFu9ll_BFu15i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9ll_BFu15i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_BFu15i_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_BFu15i_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_BFu15i_B");
    set_bf_and_test(lv, v2, 1, 1, 15, 1, "aBFu9ll_BFu15i_B");
    set_bf_and_test(lv, v2, 1, 1, 15, hide_ull(1LL<<14), "aBFu9ll_BFu15i_B");
    check_field_offset(lv, v3, 3, "aBFu9ll_BFu15i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_BFu15i_B(Test_aBFu9ll_BFu15i_B, "aBFu9ll_BFu15i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_BFu15ll_B()
{
  {
    init_simple_test("aBFu9ll_BFu15ll_B");
    static aBFu9ll_BFu15ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9ll_BFu15ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_BFu15ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_BFu15ll_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_BFu15ll_B");
    set_bf_and_test(lv, v2, 1, 1, 15, 1, "aBFu9ll_BFu15ll_B");
    set_bf_and_test(lv, v2, 1, 1, 15, hide_ull(1LL<<14), "aBFu9ll_BFu15ll_B");
    check_field_offset(lv, v3, 3, "aBFu9ll_BFu15ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_BFu15ll_B(Test_aBFu9ll_BFu15ll_B, "aBFu9ll_BFu15ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_BFu15s_B()
{
  {
    init_simple_test("aBFu9ll_BFu15s_B");
    static aBFu9ll_BFu15s_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9ll_BFu15s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_BFu15s_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_BFu15s_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_BFu15s_B");
    set_bf_and_test(lv, v2, 1, 1, 15, 1, "aBFu9ll_BFu15s_B");
    set_bf_and_test(lv, v2, 1, 1, 15, hide_ull(1LL<<14), "aBFu9ll_BFu15s_B");
    check_field_offset(lv, v3, 3, "aBFu9ll_BFu15s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_BFu15s_B(Test_aBFu9ll_BFu15s_B, "aBFu9ll_BFu15s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_BFu16i_B()
{
  {
    init_simple_test("aBFu9ll_BFu16i_B");
    static aBFu9ll_BFu16i_B lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9ll_BFu16i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_BFu16i_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_BFu16i_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_BFu16i_B");
    set_bf_and_test(lv, v2, 1, 1, 16, 1, "aBFu9ll_BFu16i_B");
    set_bf_and_test(lv, v2, 1, 1, 16, hide_ull(1LL<<15), "aBFu9ll_BFu16i_B");
    check_field_offset(lv, v3, 4, "aBFu9ll_BFu16i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_BFu16i_B(Test_aBFu9ll_BFu16i_B, "aBFu9ll_BFu16i_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_BFu16ll_B()
{
  {
    init_simple_test("aBFu9ll_BFu16ll_B");
    static aBFu9ll_BFu16ll_B lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9ll_BFu16ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_BFu16ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_BFu16ll_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_BFu16ll_B");
    set_bf_and_test(lv, v2, 1, 1, 16, 1, "aBFu9ll_BFu16ll_B");
    set_bf_and_test(lv, v2, 1, 1, 16, hide_ull(1LL<<15), "aBFu9ll_BFu16ll_B");
    check_field_offset(lv, v3, 4, "aBFu9ll_BFu16ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_BFu16ll_B(Test_aBFu9ll_BFu16ll_B, "aBFu9ll_BFu16ll_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_BFu16s_B()
{
  {
    init_simple_test("aBFu9ll_BFu16s_B");
    static aBFu9ll_BFu16s_B lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9ll_BFu16s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_BFu16s_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_BFu16s_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_BFu16s_B");
    set_bf_and_test(lv, v2, 1, 1, 16, 1, "aBFu9ll_BFu16s_B");
    set_bf_and_test(lv, v2, 1, 1, 16, hide_ull(1LL<<15), "aBFu9ll_BFu16s_B");
    check_field_offset(lv, v3, 4, "aBFu9ll_BFu16s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_BFu16s_B(Test_aBFu9ll_BFu16s_B, "aBFu9ll_BFu16s_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_BFu17i_B()
{
  {
    init_simple_test("aBFu9ll_BFu17i_B");
    static aBFu9ll_BFu17i_B lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9ll_BFu17i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_BFu17i_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_BFu17i_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_BFu17i_B");
    set_bf_and_test(lv, v2, 1, 1, 17, 1, "aBFu9ll_BFu17i_B");
    set_bf_and_test(lv, v2, 1, 1, 17, hide_ull(1LL<<16), "aBFu9ll_BFu17i_B");
    check_field_offset(lv, v3, 4, "aBFu9ll_BFu17i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_BFu17i_B(Test_aBFu9ll_BFu17i_B, "aBFu9ll_BFu17i_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_BFu17ll_B()
{
  {
    init_simple_test("aBFu9ll_BFu17ll_B");
    static aBFu9ll_BFu17ll_B lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9ll_BFu17ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_BFu17ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_BFu17ll_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_BFu17ll_B");
    set_bf_and_test(lv, v2, 1, 1, 17, 1, "aBFu9ll_BFu17ll_B");
    set_bf_and_test(lv, v2, 1, 1, 17, hide_ull(1LL<<16), "aBFu9ll_BFu17ll_B");
    check_field_offset(lv, v3, 4, "aBFu9ll_BFu17ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_BFu17ll_B(Test_aBFu9ll_BFu17ll_B, "aBFu9ll_BFu17ll_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_BFu1c_B()
{
  {
    init_simple_test("aBFu9ll_BFu1c_B");
    static aBFu9ll_BFu1c_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu9ll_BFu1c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_BFu1c_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_BFu1c_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_BFu1c_B");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "aBFu9ll_BFu1c_B");
    check_field_offset(lv, v3, 2, "aBFu9ll_BFu1c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_BFu1c_B(Test_aBFu9ll_BFu1c_B, "aBFu9ll_BFu1c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_BFu1i_B()
{
  {
    init_simple_test("aBFu9ll_BFu1i_B");
    static aBFu9ll_BFu1i_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu9ll_BFu1i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_BFu1i_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_BFu1i_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_BFu1i_B");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "aBFu9ll_BFu1i_B");
    check_field_offset(lv, v3, 2, "aBFu9ll_BFu1i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_BFu1i_B(Test_aBFu9ll_BFu1i_B, "aBFu9ll_BFu1i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_BFu1ll_B()
{
  {
    init_simple_test("aBFu9ll_BFu1ll_B");
    static aBFu9ll_BFu1ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu9ll_BFu1ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_BFu1ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_BFu1ll_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_BFu1ll_B");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "aBFu9ll_BFu1ll_B");
    check_field_offset(lv, v3, 2, "aBFu9ll_BFu1ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_BFu1ll_B(Test_aBFu9ll_BFu1ll_B, "aBFu9ll_BFu1ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_BFu1s_B()
{
  {
    init_simple_test("aBFu9ll_BFu1s_B");
    static aBFu9ll_BFu1s_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu9ll_BFu1s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_BFu1s_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_BFu1s_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_BFu1s_B");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "aBFu9ll_BFu1s_B");
    check_field_offset(lv, v3, 2, "aBFu9ll_BFu1s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_BFu1s_B(Test_aBFu9ll_BFu1s_B, "aBFu9ll_BFu1s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_BFu31i_B()
{
  {
    init_simple_test("aBFu9ll_BFu31i_B");
    static aBFu9ll_BFu31i_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu9ll_BFu31i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_BFu31i_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_BFu31i_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_BFu31i_B");
    set_bf_and_test(lv, v2, 1, 1, 31, 1, "aBFu9ll_BFu31i_B");
    set_bf_and_test(lv, v2, 1, 1, 31, hide_ull(1LL<<30), "aBFu9ll_BFu31i_B");
    check_field_offset(lv, v3, 5, "aBFu9ll_BFu31i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_BFu31i_B(Test_aBFu9ll_BFu31i_B, "aBFu9ll_BFu31i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_BFu31ll_B()
{
  {
    init_simple_test("aBFu9ll_BFu31ll_B");
    static aBFu9ll_BFu31ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu9ll_BFu31ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_BFu31ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_BFu31ll_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_BFu31ll_B");
    set_bf_and_test(lv, v2, 1, 1, 31, 1, "aBFu9ll_BFu31ll_B");
    set_bf_and_test(lv, v2, 1, 1, 31, hide_ull(1LL<<30), "aBFu9ll_BFu31ll_B");
    check_field_offset(lv, v3, 5, "aBFu9ll_BFu31ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_BFu31ll_B(Test_aBFu9ll_BFu31ll_B, "aBFu9ll_BFu31ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_BFu32i_B()
{
  {
    init_simple_test("aBFu9ll_BFu32i_B");
    static aBFu9ll_BFu32i_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9ll_BFu32i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_BFu32i_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_BFu32i_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_BFu32i_B");
    set_bf_and_test(lv, v2, 1, 1, 32, 1, "aBFu9ll_BFu32i_B");
    set_bf_and_test(lv, v2, 1, 1, 32, hide_ull(1LL<<31), "aBFu9ll_BFu32i_B");
    check_field_offset(lv, v3, 6, "aBFu9ll_BFu32i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_BFu32i_B(Test_aBFu9ll_BFu32i_B, "aBFu9ll_BFu32i_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_BFu32ll_B()
{
  {
    init_simple_test("aBFu9ll_BFu32ll_B");
    static aBFu9ll_BFu32ll_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9ll_BFu32ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_BFu32ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_BFu32ll_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_BFu32ll_B");
    set_bf_and_test(lv, v2, 1, 1, 32, 1, "aBFu9ll_BFu32ll_B");
    set_bf_and_test(lv, v2, 1, 1, 32, hide_ull(1LL<<31), "aBFu9ll_BFu32ll_B");
    check_field_offset(lv, v3, 6, "aBFu9ll_BFu32ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_BFu32ll_B(Test_aBFu9ll_BFu32ll_B, "aBFu9ll_BFu32ll_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_BFu33_B()
{
  {
    init_simple_test("aBFu9ll_BFu33_B");
    static aBFu9ll_BFu33_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9ll_BFu33_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_BFu33_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_BFu33_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_BFu33_B");
    set_bf_and_test(lv, v2, 1, 1, 33, 1, "aBFu9ll_BFu33_B");
    set_bf_and_test(lv, v2, 1, 1, 33, hide_ull(1LL<<32), "aBFu9ll_BFu33_B");
    check_field_offset(lv, v3, 6, "aBFu9ll_BFu33_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_BFu33_B(Test_aBFu9ll_BFu33_B, "aBFu9ll_BFu33_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_BFu7c_B()
{
  {
    init_simple_test("aBFu9ll_BFu7c_B");
    static aBFu9ll_BFu7c_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu9ll_BFu7c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_BFu7c_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_BFu7c_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_BFu7c_B");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "aBFu9ll_BFu7c_B");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "aBFu9ll_BFu7c_B");
    check_field_offset(lv, v3, 2, "aBFu9ll_BFu7c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_BFu7c_B(Test_aBFu9ll_BFu7c_B, "aBFu9ll_BFu7c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_BFu7i_B()
{
  {
    init_simple_test("aBFu9ll_BFu7i_B");
    static aBFu9ll_BFu7i_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu9ll_BFu7i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_BFu7i_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_BFu7i_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_BFu7i_B");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "aBFu9ll_BFu7i_B");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "aBFu9ll_BFu7i_B");
    check_field_offset(lv, v3, 2, "aBFu9ll_BFu7i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_BFu7i_B(Test_aBFu9ll_BFu7i_B, "aBFu9ll_BFu7i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_BFu7ll_B()
{
  {
    init_simple_test("aBFu9ll_BFu7ll_B");
    static aBFu9ll_BFu7ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu9ll_BFu7ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_BFu7ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_BFu7ll_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_BFu7ll_B");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "aBFu9ll_BFu7ll_B");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "aBFu9ll_BFu7ll_B");
    check_field_offset(lv, v3, 2, "aBFu9ll_BFu7ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_BFu7ll_B(Test_aBFu9ll_BFu7ll_B, "aBFu9ll_BFu7ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_BFu7s_B()
{
  {
    init_simple_test("aBFu9ll_BFu7s_B");
    static aBFu9ll_BFu7s_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu9ll_BFu7s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_BFu7s_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_BFu7s_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_BFu7s_B");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "aBFu9ll_BFu7s_B");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "aBFu9ll_BFu7s_B");
    check_field_offset(lv, v3, 2, "aBFu9ll_BFu7s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_BFu7s_B(Test_aBFu9ll_BFu7s_B, "aBFu9ll_BFu7s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_BFu8c_B()
{
  {
    init_simple_test("aBFu9ll_BFu8c_B");
    static aBFu9ll_BFu8c_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9ll_BFu8c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_BFu8c_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_BFu8c_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_BFu8c_B");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "aBFu9ll_BFu8c_B");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "aBFu9ll_BFu8c_B");
    check_field_offset(lv, v3, 3, "aBFu9ll_BFu8c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_BFu8c_B(Test_aBFu9ll_BFu8c_B, "aBFu9ll_BFu8c_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_BFu8i_B()
{
  {
    init_simple_test("aBFu9ll_BFu8i_B");
    static aBFu9ll_BFu8i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9ll_BFu8i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_BFu8i_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_BFu8i_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_BFu8i_B");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "aBFu9ll_BFu8i_B");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "aBFu9ll_BFu8i_B");
    check_field_offset(lv, v3, 3, "aBFu9ll_BFu8i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_BFu8i_B(Test_aBFu9ll_BFu8i_B, "aBFu9ll_BFu8i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_BFu8ll_B()
{
  {
    init_simple_test("aBFu9ll_BFu8ll_B");
    static aBFu9ll_BFu8ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9ll_BFu8ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_BFu8ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_BFu8ll_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_BFu8ll_B");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "aBFu9ll_BFu8ll_B");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "aBFu9ll_BFu8ll_B");
    check_field_offset(lv, v3, 3, "aBFu9ll_BFu8ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_BFu8ll_B(Test_aBFu9ll_BFu8ll_B, "aBFu9ll_BFu8ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_BFu8s_B()
{
  {
    init_simple_test("aBFu9ll_BFu8s_B");
    static aBFu9ll_BFu8s_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9ll_BFu8s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_BFu8s_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_BFu8s_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_BFu8s_B");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "aBFu9ll_BFu8s_B");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "aBFu9ll_BFu8s_B");
    check_field_offset(lv, v3, 3, "aBFu9ll_BFu8s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_BFu8s_B(Test_aBFu9ll_BFu8s_B, "aBFu9ll_BFu8s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_BFu9i_B()
{
  {
    init_simple_test("aBFu9ll_BFu9i_B");
    static aBFu9ll_BFu9i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9ll_BFu9i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_BFu9i_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_BFu9i_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_BFu9i_B");
    set_bf_and_test(lv, v2, 1, 1, 9, 1, "aBFu9ll_BFu9i_B");
    set_bf_and_test(lv, v2, 1, 1, 9, hide_ull(1LL<<8), "aBFu9ll_BFu9i_B");
    check_field_offset(lv, v3, 3, "aBFu9ll_BFu9i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_BFu9i_B(Test_aBFu9ll_BFu9i_B, "aBFu9ll_BFu9i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_BFu9ll_B()
{
  {
    init_simple_test("aBFu9ll_BFu9ll_B");
    static aBFu9ll_BFu9ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9ll_BFu9ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_BFu9ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_BFu9ll_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_BFu9ll_B");
    set_bf_and_test(lv, v2, 1, 1, 9, 1, "aBFu9ll_BFu9ll_B");
    set_bf_and_test(lv, v2, 1, 1, 9, hide_ull(1LL<<8), "aBFu9ll_BFu9ll_B");
    check_field_offset(lv, v3, 3, "aBFu9ll_BFu9ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_BFu9ll_B(Test_aBFu9ll_BFu9ll_B, "aBFu9ll_BFu9ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_BFu9s_B()
{
  {
    init_simple_test("aBFu9ll_BFu9s_B");
    static aBFu9ll_BFu9s_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9ll_BFu9s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_BFu9s_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_BFu9s_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_BFu9s_B");
    set_bf_and_test(lv, v2, 1, 1, 9, 1, "aBFu9ll_BFu9s_B");
    set_bf_and_test(lv, v2, 1, 1, 9, hide_ull(1LL<<8), "aBFu9ll_BFu9s_B");
    check_field_offset(lv, v3, 3, "aBFu9ll_BFu9s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_BFu9s_B(Test_aBFu9ll_BFu9s_B, "aBFu9ll_BFu9s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_C_B()
{
  {
    init_simple_test("aBFu9ll_C_B");
    static aBFu9ll_C_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9ll_C_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_C_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_C_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_C_B");
    check_field_offset(lv, v2, 2, "aBFu9ll_C_B.v2");
    check_field_offset(lv, v3, 3, "aBFu9ll_C_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_C_B(Test_aBFu9ll_C_B, "aBFu9ll_C_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_D_B()
{
  {
    init_simple_test("aBFu9ll_D_B");
    static aBFu9ll_D_B lv;
    check2(sizeof(lv), 11, "sizeof(aBFu9ll_D_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_D_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_D_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_D_B");
    check_field_offset(lv, v2, 2, "aBFu9ll_D_B.v2");
    check_field_offset(lv, v3, 10, "aBFu9ll_D_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_D_B(Test_aBFu9ll_D_B, "aBFu9ll_D_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_F_B()
{
  {
    init_simple_test("aBFu9ll_F_B");
    static aBFu9ll_F_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9ll_F_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_F_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_F_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_F_B");
    check_field_offset(lv, v2, 2, "aBFu9ll_F_B.v2");
    check_field_offset(lv, v3, 6, "aBFu9ll_F_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_F_B(Test_aBFu9ll_F_B, "aBFu9ll_F_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_I_B()
{
  {
    init_simple_test("aBFu9ll_I_B");
    static aBFu9ll_I_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9ll_I_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_I_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_I_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_I_B");
    check_field_offset(lv, v2, 2, "aBFu9ll_I_B.v2");
    check_field_offset(lv, v3, 6, "aBFu9ll_I_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_I_B(Test_aBFu9ll_I_B, "aBFu9ll_I_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_Ip_B()
{
  {
    init_simple_test("aBFu9ll_Ip_B");
    static aBFu9ll_Ip_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aBFu9ll_Ip_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_Ip_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_Ip_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_Ip_B");
    check_field_offset(lv, v2, 2, "aBFu9ll_Ip_B.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aBFu9ll_Ip_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_Ip_B(Test_aBFu9ll_Ip_B, "aBFu9ll_Ip_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_L_B()
{
  {
    init_simple_test("aBFu9ll_L_B");
    static aBFu9ll_L_B lv;
    check2(sizeof(lv), 11, "sizeof(aBFu9ll_L_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_L_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_L_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_L_B");
    check_field_offset(lv, v2, 2, "aBFu9ll_L_B.v2");
    check_field_offset(lv, v3, 10, "aBFu9ll_L_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_L_B(Test_aBFu9ll_L_B, "aBFu9ll_L_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_S_B()
{
  {
    init_simple_test("aBFu9ll_S_B");
    static aBFu9ll_S_B lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9ll_S_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_S_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_S_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_S_B");
    check_field_offset(lv, v2, 2, "aBFu9ll_S_B.v2");
    check_field_offset(lv, v3, 4, "aBFu9ll_S_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_S_B(Test_aBFu9ll_S_B, "aBFu9ll_S_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_Uc_B()
{
  {
    init_simple_test("aBFu9ll_Uc_B");
    static aBFu9ll_Uc_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9ll_Uc_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_Uc_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_Uc_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_Uc_B");
    check_field_offset(lv, v2, 2, "aBFu9ll_Uc_B.v2");
    check_field_offset(lv, v3, 3, "aBFu9ll_Uc_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_Uc_B(Test_aBFu9ll_Uc_B, "aBFu9ll_Uc_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_Ui_B()
{
  {
    init_simple_test("aBFu9ll_Ui_B");
    static aBFu9ll_Ui_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9ll_Ui_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_Ui_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_Ui_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_Ui_B");
    check_field_offset(lv, v2, 2, "aBFu9ll_Ui_B.v2");
    check_field_offset(lv, v3, 6, "aBFu9ll_Ui_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_Ui_B(Test_aBFu9ll_Ui_B, "aBFu9ll_Ui_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_Ul_B()
{
  {
    init_simple_test("aBFu9ll_Ul_B");
    static aBFu9ll_Ul_B lv;
    check2(sizeof(lv), 11, "sizeof(aBFu9ll_Ul_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_Ul_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_Ul_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_Ul_B");
    check_field_offset(lv, v2, 2, "aBFu9ll_Ul_B.v2");
    check_field_offset(lv, v3, 10, "aBFu9ll_Ul_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_Ul_B(Test_aBFu9ll_Ul_B, "aBFu9ll_Ul_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_Us_B()
{
  {
    init_simple_test("aBFu9ll_Us_B");
    static aBFu9ll_Us_B lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9ll_Us_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_Us_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_Us_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_Us_B");
    check_field_offset(lv, v2, 2, "aBFu9ll_Us_B.v2");
    check_field_offset(lv, v3, 4, "aBFu9ll_Us_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_Us_B(Test_aBFu9ll_Us_B, "aBFu9ll_Us_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9ll_Vp_B()
{
  {
    init_simple_test("aBFu9ll_Vp_B");
    static aBFu9ll_Vp_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aBFu9ll_Vp_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9ll_Vp_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9ll_Vp_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9ll_Vp_B");
    check_field_offset(lv, v2, 2, "aBFu9ll_Vp_B.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aBFu9ll_Vp_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9ll_Vp_B(Test_aBFu9ll_Vp_B, "aBFu9ll_Vp_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B()
{
  {
    init_simple_test("aBFu9s_B");
    static aBFu9s_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu9s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B");
    check_field_offset(lv, v2, 2, "aBFu9s_B.v2");
  }
}
static Arrange_To_Call_Me vaBFu9s_B(Test_aBFu9s_B, "aBFu9s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_B()
{
  {
    init_simple_test("aBFu9s_B_B");
    static aBFu9s_B_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9s_B_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_B");
    check_field_offset(lv, v2, 2, "aBFu9s_B_B.v2");
    check_field_offset(lv, v3, 3, "aBFu9s_B_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_B(Test_aBFu9s_B_B, "aBFu9s_B_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_BFu15i()
{
  {
    init_simple_test("aBFu9s_B_BFu15i");
    static aBFu9s_B_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9s_B_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_BFu15i");
    check_field_offset(lv, v2, 2, "aBFu9s_B_BFu15i.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aBFu9s_B_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aBFu9s_B_BFu15i");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_BFu15i(Test_aBFu9s_B_BFu15i, "aBFu9s_B_BFu15i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_BFu15ll()
{
  {
    init_simple_test("aBFu9s_B_BFu15ll");
    static aBFu9s_B_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9s_B_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_BFu15ll");
    check_field_offset(lv, v2, 2, "aBFu9s_B_BFu15ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aBFu9s_B_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aBFu9s_B_BFu15ll");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_BFu15ll(Test_aBFu9s_B_BFu15ll, "aBFu9s_B_BFu15ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_BFu15s()
{
  {
    init_simple_test("aBFu9s_B_BFu15s");
    static aBFu9s_B_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9s_B_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_BFu15s");
    check_field_offset(lv, v2, 2, "aBFu9s_B_BFu15s.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aBFu9s_B_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aBFu9s_B_BFu15s");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_BFu15s(Test_aBFu9s_B_BFu15s, "aBFu9s_B_BFu15s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_BFu16i()
{
  {
    init_simple_test("aBFu9s_B_BFu16i");
    static aBFu9s_B_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9s_B_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_BFu16i");
    check_field_offset(lv, v2, 2, "aBFu9s_B_BFu16i.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aBFu9s_B_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aBFu9s_B_BFu16i");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_BFu16i(Test_aBFu9s_B_BFu16i, "aBFu9s_B_BFu16i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_BFu16ll()
{
  {
    init_simple_test("aBFu9s_B_BFu16ll");
    static aBFu9s_B_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9s_B_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_BFu16ll");
    check_field_offset(lv, v2, 2, "aBFu9s_B_BFu16ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aBFu9s_B_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aBFu9s_B_BFu16ll");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_BFu16ll(Test_aBFu9s_B_BFu16ll, "aBFu9s_B_BFu16ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_BFu16s()
{
  {
    init_simple_test("aBFu9s_B_BFu16s");
    static aBFu9s_B_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9s_B_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_BFu16s");
    check_field_offset(lv, v2, 2, "aBFu9s_B_BFu16s.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aBFu9s_B_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aBFu9s_B_BFu16s");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_BFu16s(Test_aBFu9s_B_BFu16s, "aBFu9s_B_BFu16s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_BFu17i()
{
  {
    init_simple_test("aBFu9s_B_BFu17i");
    static aBFu9s_B_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(aBFu9s_B_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_BFu17i");
    check_field_offset(lv, v2, 2, "aBFu9s_B_BFu17i.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aBFu9s_B_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aBFu9s_B_BFu17i");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_BFu17i(Test_aBFu9s_B_BFu17i, "aBFu9s_B_BFu17i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_BFu17ll()
{
  {
    init_simple_test("aBFu9s_B_BFu17ll");
    static aBFu9s_B_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(aBFu9s_B_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_BFu17ll");
    check_field_offset(lv, v2, 2, "aBFu9s_B_BFu17ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aBFu9s_B_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aBFu9s_B_BFu17ll");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_BFu17ll(Test_aBFu9s_B_BFu17ll, "aBFu9s_B_BFu17ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_BFu1c()
{
  {
    init_simple_test("aBFu9s_B_BFu1c");
    static aBFu9s_B_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9s_B_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_BFu1c");
    check_field_offset(lv, v2, 2, "aBFu9s_B_BFu1c.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aBFu9s_B_BFu1c");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_BFu1c(Test_aBFu9s_B_BFu1c, "aBFu9s_B_BFu1c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_BFu1i()
{
  {
    init_simple_test("aBFu9s_B_BFu1i");
    static aBFu9s_B_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9s_B_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_BFu1i");
    check_field_offset(lv, v2, 2, "aBFu9s_B_BFu1i.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aBFu9s_B_BFu1i");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_BFu1i(Test_aBFu9s_B_BFu1i, "aBFu9s_B_BFu1i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_BFu1ll()
{
  {
    init_simple_test("aBFu9s_B_BFu1ll");
    static aBFu9s_B_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9s_B_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_BFu1ll");
    check_field_offset(lv, v2, 2, "aBFu9s_B_BFu1ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aBFu9s_B_BFu1ll");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_BFu1ll(Test_aBFu9s_B_BFu1ll, "aBFu9s_B_BFu1ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_BFu1s()
{
  {
    init_simple_test("aBFu9s_B_BFu1s");
    static aBFu9s_B_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9s_B_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_BFu1s");
    check_field_offset(lv, v2, 2, "aBFu9s_B_BFu1s.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aBFu9s_B_BFu1s");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_BFu1s(Test_aBFu9s_B_BFu1s, "aBFu9s_B_BFu1s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_BFu31i()
{
  {
    init_simple_test("aBFu9s_B_BFu31i");
    static aBFu9s_B_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9s_B_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_BFu31i");
    check_field_offset(lv, v2, 2, "aBFu9s_B_BFu31i.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aBFu9s_B_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aBFu9s_B_BFu31i");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_BFu31i(Test_aBFu9s_B_BFu31i, "aBFu9s_B_BFu31i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_BFu31ll()
{
  {
    init_simple_test("aBFu9s_B_BFu31ll");
    static aBFu9s_B_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9s_B_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_BFu31ll");
    check_field_offset(lv, v2, 2, "aBFu9s_B_BFu31ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aBFu9s_B_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aBFu9s_B_BFu31ll");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_BFu31ll(Test_aBFu9s_B_BFu31ll, "aBFu9s_B_BFu31ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_BFu32i()
{
  {
    init_simple_test("aBFu9s_B_BFu32i");
    static aBFu9s_B_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9s_B_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_BFu32i");
    check_field_offset(lv, v2, 2, "aBFu9s_B_BFu32i.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aBFu9s_B_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aBFu9s_B_BFu32i");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_BFu32i(Test_aBFu9s_B_BFu32i, "aBFu9s_B_BFu32i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_BFu32ll()
{
  {
    init_simple_test("aBFu9s_B_BFu32ll");
    static aBFu9s_B_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9s_B_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_BFu32ll");
    check_field_offset(lv, v2, 2, "aBFu9s_B_BFu32ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aBFu9s_B_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aBFu9s_B_BFu32ll");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_BFu32ll(Test_aBFu9s_B_BFu32ll, "aBFu9s_B_BFu32ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_BFu33()
{
  {
    init_simple_test("aBFu9s_B_BFu33");
    static aBFu9s_B_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(aBFu9s_B_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_BFu33");
    check_field_offset(lv, v2, 2, "aBFu9s_B_BFu33.v2");
    set_bf_and_test(lv, v3, 3, 0, 33, 1, "aBFu9s_B_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, hide_ull(1LL<<32), "aBFu9s_B_BFu33");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_BFu33(Test_aBFu9s_B_BFu33, "aBFu9s_B_BFu33", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_BFu7c()
{
  {
    init_simple_test("aBFu9s_B_BFu7c");
    static aBFu9s_B_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9s_B_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_BFu7c");
    check_field_offset(lv, v2, 2, "aBFu9s_B_BFu7c.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aBFu9s_B_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aBFu9s_B_BFu7c");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_BFu7c(Test_aBFu9s_B_BFu7c, "aBFu9s_B_BFu7c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_BFu7i()
{
  {
    init_simple_test("aBFu9s_B_BFu7i");
    static aBFu9s_B_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9s_B_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_BFu7i");
    check_field_offset(lv, v2, 2, "aBFu9s_B_BFu7i.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aBFu9s_B_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aBFu9s_B_BFu7i");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_BFu7i(Test_aBFu9s_B_BFu7i, "aBFu9s_B_BFu7i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_BFu7ll()
{
  {
    init_simple_test("aBFu9s_B_BFu7ll");
    static aBFu9s_B_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9s_B_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_BFu7ll");
    check_field_offset(lv, v2, 2, "aBFu9s_B_BFu7ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aBFu9s_B_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aBFu9s_B_BFu7ll");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_BFu7ll(Test_aBFu9s_B_BFu7ll, "aBFu9s_B_BFu7ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_BFu7s()
{
  {
    init_simple_test("aBFu9s_B_BFu7s");
    static aBFu9s_B_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9s_B_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_BFu7s");
    check_field_offset(lv, v2, 2, "aBFu9s_B_BFu7s.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aBFu9s_B_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aBFu9s_B_BFu7s");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_BFu7s(Test_aBFu9s_B_BFu7s, "aBFu9s_B_BFu7s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_BFu8c()
{
  {
    init_simple_test("aBFu9s_B_BFu8c");
    static aBFu9s_B_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9s_B_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_BFu8c");
    check_field_offset(lv, v2, 2, "aBFu9s_B_BFu8c.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aBFu9s_B_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aBFu9s_B_BFu8c");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_BFu8c(Test_aBFu9s_B_BFu8c, "aBFu9s_B_BFu8c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_BFu8i()
{
  {
    init_simple_test("aBFu9s_B_BFu8i");
    static aBFu9s_B_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9s_B_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_BFu8i");
    check_field_offset(lv, v2, 2, "aBFu9s_B_BFu8i.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aBFu9s_B_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aBFu9s_B_BFu8i");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_BFu8i(Test_aBFu9s_B_BFu8i, "aBFu9s_B_BFu8i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_BFu8ll()
{
  {
    init_simple_test("aBFu9s_B_BFu8ll");
    static aBFu9s_B_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9s_B_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_BFu8ll");
    check_field_offset(lv, v2, 2, "aBFu9s_B_BFu8ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aBFu9s_B_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aBFu9s_B_BFu8ll");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_BFu8ll(Test_aBFu9s_B_BFu8ll, "aBFu9s_B_BFu8ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_BFu8s()
{
  {
    init_simple_test("aBFu9s_B_BFu8s");
    static aBFu9s_B_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9s_B_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_BFu8s");
    check_field_offset(lv, v2, 2, "aBFu9s_B_BFu8s.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aBFu9s_B_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aBFu9s_B_BFu8s");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_BFu8s(Test_aBFu9s_B_BFu8s, "aBFu9s_B_BFu8s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_BFu9i()
{
  {
    init_simple_test("aBFu9s_B_BFu9i");
    static aBFu9s_B_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9s_B_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_BFu9i");
    check_field_offset(lv, v2, 2, "aBFu9s_B_BFu9i.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aBFu9s_B_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_BFu9i");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_BFu9i(Test_aBFu9s_B_BFu9i, "aBFu9s_B_BFu9i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_BFu9ll()
{
  {
    init_simple_test("aBFu9s_B_BFu9ll");
    static aBFu9s_B_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9s_B_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_BFu9ll");
    check_field_offset(lv, v2, 2, "aBFu9s_B_BFu9ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aBFu9s_B_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_BFu9ll");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_BFu9ll(Test_aBFu9s_B_BFu9ll, "aBFu9s_B_BFu9ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_BFu9s()
{
  {
    init_simple_test("aBFu9s_B_BFu9s");
    static aBFu9s_B_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9s_B_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_BFu9s");
    check_field_offset(lv, v2, 2, "aBFu9s_B_BFu9s.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aBFu9s_B_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_BFu9s");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_BFu9s(Test_aBFu9s_B_BFu9s, "aBFu9s_B_BFu9s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_C()
{
  {
    init_simple_test("aBFu9s_B_C");
    static aBFu9s_B_C lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9s_B_C)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_C)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_C");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_C");
    check_field_offset(lv, v2, 2, "aBFu9s_B_C.v2");
    check_field_offset(lv, v3, 3, "aBFu9s_B_C.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_C(Test_aBFu9s_B_C, "aBFu9s_B_C", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_D()
{
  {
    init_simple_test("aBFu9s_B_D");
    static aBFu9s_B_D lv;
    check2(sizeof(lv), 11, "sizeof(aBFu9s_B_D)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_D)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_D");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_D");
    check_field_offset(lv, v2, 2, "aBFu9s_B_D.v2");
    check_field_offset(lv, v3, 3, "aBFu9s_B_D.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_D(Test_aBFu9s_B_D, "aBFu9s_B_D", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_F()
{
  {
    init_simple_test("aBFu9s_B_F");
    static aBFu9s_B_F lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9s_B_F)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_F)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_F");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_F");
    check_field_offset(lv, v2, 2, "aBFu9s_B_F.v2");
    check_field_offset(lv, v3, 3, "aBFu9s_B_F.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_F(Test_aBFu9s_B_F, "aBFu9s_B_F", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_I()
{
  {
    init_simple_test("aBFu9s_B_I");
    static aBFu9s_B_I lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9s_B_I)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_I)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_I");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_I");
    check_field_offset(lv, v2, 2, "aBFu9s_B_I.v2");
    check_field_offset(lv, v3, 3, "aBFu9s_B_I.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_I(Test_aBFu9s_B_I, "aBFu9s_B_I", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_Ip()
{
  {
    init_simple_test("aBFu9s_B_Ip");
    static aBFu9s_B_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aBFu9s_B_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_Ip");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_Ip");
    check_field_offset(lv, v2, 2, "aBFu9s_B_Ip.v2");
    check_field_offset(lv, v3, 3, "aBFu9s_B_Ip.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_Ip(Test_aBFu9s_B_Ip, "aBFu9s_B_Ip", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_L()
{
  {
    init_simple_test("aBFu9s_B_L");
    static aBFu9s_B_L lv;
    check2(sizeof(lv), 11, "sizeof(aBFu9s_B_L)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_L)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_L");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_L");
    check_field_offset(lv, v2, 2, "aBFu9s_B_L.v2");
    check_field_offset(lv, v3, 3, "aBFu9s_B_L.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_L(Test_aBFu9s_B_L, "aBFu9s_B_L", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_S()
{
  {
    init_simple_test("aBFu9s_B_S");
    static aBFu9s_B_S lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9s_B_S)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_S)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_S");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_S");
    check_field_offset(lv, v2, 2, "aBFu9s_B_S.v2");
    check_field_offset(lv, v3, 3, "aBFu9s_B_S.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_S(Test_aBFu9s_B_S, "aBFu9s_B_S", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_Uc()
{
  {
    init_simple_test("aBFu9s_B_Uc");
    static aBFu9s_B_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9s_B_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_Uc");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_Uc");
    check_field_offset(lv, v2, 2, "aBFu9s_B_Uc.v2");
    check_field_offset(lv, v3, 3, "aBFu9s_B_Uc.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_Uc(Test_aBFu9s_B_Uc, "aBFu9s_B_Uc", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_Ui()
{
  {
    init_simple_test("aBFu9s_B_Ui");
    static aBFu9s_B_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9s_B_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_Ui");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_Ui");
    check_field_offset(lv, v2, 2, "aBFu9s_B_Ui.v2");
    check_field_offset(lv, v3, 3, "aBFu9s_B_Ui.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_Ui(Test_aBFu9s_B_Ui, "aBFu9s_B_Ui", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_Ul()
{
  {
    init_simple_test("aBFu9s_B_Ul");
    static aBFu9s_B_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aBFu9s_B_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_Ul");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_Ul");
    check_field_offset(lv, v2, 2, "aBFu9s_B_Ul.v2");
    check_field_offset(lv, v3, 3, "aBFu9s_B_Ul.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_Ul(Test_aBFu9s_B_Ul, "aBFu9s_B_Ul", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_Us()
{
  {
    init_simple_test("aBFu9s_B_Us");
    static aBFu9s_B_Us lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9s_B_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_Us)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_Us");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_Us");
    check_field_offset(lv, v2, 2, "aBFu9s_B_Us.v2");
    check_field_offset(lv, v3, 3, "aBFu9s_B_Us.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_Us(Test_aBFu9s_B_Us, "aBFu9s_B_Us", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_B_Vp()
{
  {
    init_simple_test("aBFu9s_B_Vp");
    static aBFu9s_B_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aBFu9s_B_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_B_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_B_Vp");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_B_Vp");
    check_field_offset(lv, v2, 2, "aBFu9s_B_Vp.v2");
    check_field_offset(lv, v3, 3, "aBFu9s_B_Vp.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_B_Vp(Test_aBFu9s_B_Vp, "aBFu9s_B_Vp", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_BFu15i_B()
{
  {
    init_simple_test("aBFu9s_BFu15i_B");
    static aBFu9s_BFu15i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9s_BFu15i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_BFu15i_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_BFu15i_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_BFu15i_B");
    set_bf_and_test(lv, v2, 1, 1, 15, 1, "aBFu9s_BFu15i_B");
    set_bf_and_test(lv, v2, 1, 1, 15, hide_ull(1LL<<14), "aBFu9s_BFu15i_B");
    check_field_offset(lv, v3, 3, "aBFu9s_BFu15i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_BFu15i_B(Test_aBFu9s_BFu15i_B, "aBFu9s_BFu15i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_BFu15ll_B()
{
  {
    init_simple_test("aBFu9s_BFu15ll_B");
    static aBFu9s_BFu15ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9s_BFu15ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_BFu15ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_BFu15ll_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_BFu15ll_B");
    set_bf_and_test(lv, v2, 1, 1, 15, 1, "aBFu9s_BFu15ll_B");
    set_bf_and_test(lv, v2, 1, 1, 15, hide_ull(1LL<<14), "aBFu9s_BFu15ll_B");
    check_field_offset(lv, v3, 3, "aBFu9s_BFu15ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_BFu15ll_B(Test_aBFu9s_BFu15ll_B, "aBFu9s_BFu15ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_BFu15s_B()
{
  {
    init_simple_test("aBFu9s_BFu15s_B");
    static aBFu9s_BFu15s_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9s_BFu15s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_BFu15s_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_BFu15s_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_BFu15s_B");
    set_bf_and_test(lv, v2, 1, 1, 15, 1, "aBFu9s_BFu15s_B");
    set_bf_and_test(lv, v2, 1, 1, 15, hide_ull(1LL<<14), "aBFu9s_BFu15s_B");
    check_field_offset(lv, v3, 3, "aBFu9s_BFu15s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_BFu15s_B(Test_aBFu9s_BFu15s_B, "aBFu9s_BFu15s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_BFu16i_B()
{
  {
    init_simple_test("aBFu9s_BFu16i_B");
    static aBFu9s_BFu16i_B lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9s_BFu16i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_BFu16i_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_BFu16i_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_BFu16i_B");
    set_bf_and_test(lv, v2, 1, 1, 16, 1, "aBFu9s_BFu16i_B");
    set_bf_and_test(lv, v2, 1, 1, 16, hide_ull(1LL<<15), "aBFu9s_BFu16i_B");
    check_field_offset(lv, v3, 4, "aBFu9s_BFu16i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_BFu16i_B(Test_aBFu9s_BFu16i_B, "aBFu9s_BFu16i_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_BFu16ll_B()
{
  {
    init_simple_test("aBFu9s_BFu16ll_B");
    static aBFu9s_BFu16ll_B lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9s_BFu16ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_BFu16ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_BFu16ll_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_BFu16ll_B");
    set_bf_and_test(lv, v2, 1, 1, 16, 1, "aBFu9s_BFu16ll_B");
    set_bf_and_test(lv, v2, 1, 1, 16, hide_ull(1LL<<15), "aBFu9s_BFu16ll_B");
    check_field_offset(lv, v3, 4, "aBFu9s_BFu16ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_BFu16ll_B(Test_aBFu9s_BFu16ll_B, "aBFu9s_BFu16ll_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_BFu16s_B()
{
  {
    init_simple_test("aBFu9s_BFu16s_B");
    static aBFu9s_BFu16s_B lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9s_BFu16s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_BFu16s_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_BFu16s_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_BFu16s_B");
    set_bf_and_test(lv, v2, 1, 1, 16, 1, "aBFu9s_BFu16s_B");
    set_bf_and_test(lv, v2, 1, 1, 16, hide_ull(1LL<<15), "aBFu9s_BFu16s_B");
    check_field_offset(lv, v3, 4, "aBFu9s_BFu16s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_BFu16s_B(Test_aBFu9s_BFu16s_B, "aBFu9s_BFu16s_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_BFu17i_B()
{
  {
    init_simple_test("aBFu9s_BFu17i_B");
    static aBFu9s_BFu17i_B lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9s_BFu17i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_BFu17i_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_BFu17i_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_BFu17i_B");
    set_bf_and_test(lv, v2, 1, 1, 17, 1, "aBFu9s_BFu17i_B");
    set_bf_and_test(lv, v2, 1, 1, 17, hide_ull(1LL<<16), "aBFu9s_BFu17i_B");
    check_field_offset(lv, v3, 4, "aBFu9s_BFu17i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_BFu17i_B(Test_aBFu9s_BFu17i_B, "aBFu9s_BFu17i_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_BFu17ll_B()
{
  {
    init_simple_test("aBFu9s_BFu17ll_B");
    static aBFu9s_BFu17ll_B lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9s_BFu17ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_BFu17ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_BFu17ll_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_BFu17ll_B");
    set_bf_and_test(lv, v2, 1, 1, 17, 1, "aBFu9s_BFu17ll_B");
    set_bf_and_test(lv, v2, 1, 1, 17, hide_ull(1LL<<16), "aBFu9s_BFu17ll_B");
    check_field_offset(lv, v3, 4, "aBFu9s_BFu17ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_BFu17ll_B(Test_aBFu9s_BFu17ll_B, "aBFu9s_BFu17ll_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_BFu1c_B()
{
  {
    init_simple_test("aBFu9s_BFu1c_B");
    static aBFu9s_BFu1c_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu9s_BFu1c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_BFu1c_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_BFu1c_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_BFu1c_B");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "aBFu9s_BFu1c_B");
    check_field_offset(lv, v3, 2, "aBFu9s_BFu1c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_BFu1c_B(Test_aBFu9s_BFu1c_B, "aBFu9s_BFu1c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_BFu1i_B()
{
  {
    init_simple_test("aBFu9s_BFu1i_B");
    static aBFu9s_BFu1i_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu9s_BFu1i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_BFu1i_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_BFu1i_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_BFu1i_B");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "aBFu9s_BFu1i_B");
    check_field_offset(lv, v3, 2, "aBFu9s_BFu1i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_BFu1i_B(Test_aBFu9s_BFu1i_B, "aBFu9s_BFu1i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_BFu1ll_B()
{
  {
    init_simple_test("aBFu9s_BFu1ll_B");
    static aBFu9s_BFu1ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu9s_BFu1ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_BFu1ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_BFu1ll_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_BFu1ll_B");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "aBFu9s_BFu1ll_B");
    check_field_offset(lv, v3, 2, "aBFu9s_BFu1ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_BFu1ll_B(Test_aBFu9s_BFu1ll_B, "aBFu9s_BFu1ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_BFu1s_B()
{
  {
    init_simple_test("aBFu9s_BFu1s_B");
    static aBFu9s_BFu1s_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu9s_BFu1s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_BFu1s_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_BFu1s_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_BFu1s_B");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "aBFu9s_BFu1s_B");
    check_field_offset(lv, v3, 2, "aBFu9s_BFu1s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_BFu1s_B(Test_aBFu9s_BFu1s_B, "aBFu9s_BFu1s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_BFu31i_B()
{
  {
    init_simple_test("aBFu9s_BFu31i_B");
    static aBFu9s_BFu31i_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu9s_BFu31i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_BFu31i_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_BFu31i_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_BFu31i_B");
    set_bf_and_test(lv, v2, 1, 1, 31, 1, "aBFu9s_BFu31i_B");
    set_bf_and_test(lv, v2, 1, 1, 31, hide_ull(1LL<<30), "aBFu9s_BFu31i_B");
    check_field_offset(lv, v3, 5, "aBFu9s_BFu31i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_BFu31i_B(Test_aBFu9s_BFu31i_B, "aBFu9s_BFu31i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_BFu31ll_B()
{
  {
    init_simple_test("aBFu9s_BFu31ll_B");
    static aBFu9s_BFu31ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aBFu9s_BFu31ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_BFu31ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_BFu31ll_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_BFu31ll_B");
    set_bf_and_test(lv, v2, 1, 1, 31, 1, "aBFu9s_BFu31ll_B");
    set_bf_and_test(lv, v2, 1, 1, 31, hide_ull(1LL<<30), "aBFu9s_BFu31ll_B");
    check_field_offset(lv, v3, 5, "aBFu9s_BFu31ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_BFu31ll_B(Test_aBFu9s_BFu31ll_B, "aBFu9s_BFu31ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_BFu32i_B()
{
  {
    init_simple_test("aBFu9s_BFu32i_B");
    static aBFu9s_BFu32i_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9s_BFu32i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_BFu32i_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_BFu32i_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_BFu32i_B");
    set_bf_and_test(lv, v2, 1, 1, 32, 1, "aBFu9s_BFu32i_B");
    set_bf_and_test(lv, v2, 1, 1, 32, hide_ull(1LL<<31), "aBFu9s_BFu32i_B");
    check_field_offset(lv, v3, 6, "aBFu9s_BFu32i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_BFu32i_B(Test_aBFu9s_BFu32i_B, "aBFu9s_BFu32i_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_BFu32ll_B()
{
  {
    init_simple_test("aBFu9s_BFu32ll_B");
    static aBFu9s_BFu32ll_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9s_BFu32ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_BFu32ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_BFu32ll_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_BFu32ll_B");
    set_bf_and_test(lv, v2, 1, 1, 32, 1, "aBFu9s_BFu32ll_B");
    set_bf_and_test(lv, v2, 1, 1, 32, hide_ull(1LL<<31), "aBFu9s_BFu32ll_B");
    check_field_offset(lv, v3, 6, "aBFu9s_BFu32ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_BFu32ll_B(Test_aBFu9s_BFu32ll_B, "aBFu9s_BFu32ll_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_BFu33_B()
{
  {
    init_simple_test("aBFu9s_BFu33_B");
    static aBFu9s_BFu33_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9s_BFu33_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_BFu33_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_BFu33_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_BFu33_B");
    set_bf_and_test(lv, v2, 1, 1, 33, 1, "aBFu9s_BFu33_B");
    set_bf_and_test(lv, v2, 1, 1, 33, hide_ull(1LL<<32), "aBFu9s_BFu33_B");
    check_field_offset(lv, v3, 6, "aBFu9s_BFu33_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_BFu33_B(Test_aBFu9s_BFu33_B, "aBFu9s_BFu33_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_BFu7c_B()
{
  {
    init_simple_test("aBFu9s_BFu7c_B");
    static aBFu9s_BFu7c_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu9s_BFu7c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_BFu7c_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_BFu7c_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_BFu7c_B");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "aBFu9s_BFu7c_B");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "aBFu9s_BFu7c_B");
    check_field_offset(lv, v3, 2, "aBFu9s_BFu7c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_BFu7c_B(Test_aBFu9s_BFu7c_B, "aBFu9s_BFu7c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_BFu7i_B()
{
  {
    init_simple_test("aBFu9s_BFu7i_B");
    static aBFu9s_BFu7i_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu9s_BFu7i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_BFu7i_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_BFu7i_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_BFu7i_B");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "aBFu9s_BFu7i_B");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "aBFu9s_BFu7i_B");
    check_field_offset(lv, v3, 2, "aBFu9s_BFu7i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_BFu7i_B(Test_aBFu9s_BFu7i_B, "aBFu9s_BFu7i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_BFu7ll_B()
{
  {
    init_simple_test("aBFu9s_BFu7ll_B");
    static aBFu9s_BFu7ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu9s_BFu7ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_BFu7ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_BFu7ll_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_BFu7ll_B");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "aBFu9s_BFu7ll_B");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "aBFu9s_BFu7ll_B");
    check_field_offset(lv, v3, 2, "aBFu9s_BFu7ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_BFu7ll_B(Test_aBFu9s_BFu7ll_B, "aBFu9s_BFu7ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_BFu7s_B()
{
  {
    init_simple_test("aBFu9s_BFu7s_B");
    static aBFu9s_BFu7s_B lv;
    check2(sizeof(lv), 3, "sizeof(aBFu9s_BFu7s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_BFu7s_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_BFu7s_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_BFu7s_B");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "aBFu9s_BFu7s_B");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "aBFu9s_BFu7s_B");
    check_field_offset(lv, v3, 2, "aBFu9s_BFu7s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_BFu7s_B(Test_aBFu9s_BFu7s_B, "aBFu9s_BFu7s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_BFu8c_B()
{
  {
    init_simple_test("aBFu9s_BFu8c_B");
    static aBFu9s_BFu8c_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9s_BFu8c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_BFu8c_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_BFu8c_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_BFu8c_B");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "aBFu9s_BFu8c_B");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "aBFu9s_BFu8c_B");
    check_field_offset(lv, v3, 3, "aBFu9s_BFu8c_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_BFu8c_B(Test_aBFu9s_BFu8c_B, "aBFu9s_BFu8c_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_BFu8i_B()
{
  {
    init_simple_test("aBFu9s_BFu8i_B");
    static aBFu9s_BFu8i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9s_BFu8i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_BFu8i_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_BFu8i_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_BFu8i_B");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "aBFu9s_BFu8i_B");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "aBFu9s_BFu8i_B");
    check_field_offset(lv, v3, 3, "aBFu9s_BFu8i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_BFu8i_B(Test_aBFu9s_BFu8i_B, "aBFu9s_BFu8i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_BFu8ll_B()
{
  {
    init_simple_test("aBFu9s_BFu8ll_B");
    static aBFu9s_BFu8ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9s_BFu8ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_BFu8ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_BFu8ll_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_BFu8ll_B");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "aBFu9s_BFu8ll_B");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "aBFu9s_BFu8ll_B");
    check_field_offset(lv, v3, 3, "aBFu9s_BFu8ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_BFu8ll_B(Test_aBFu9s_BFu8ll_B, "aBFu9s_BFu8ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_BFu8s_B()
{
  {
    init_simple_test("aBFu9s_BFu8s_B");
    static aBFu9s_BFu8s_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9s_BFu8s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_BFu8s_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_BFu8s_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_BFu8s_B");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "aBFu9s_BFu8s_B");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "aBFu9s_BFu8s_B");
    check_field_offset(lv, v3, 3, "aBFu9s_BFu8s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_BFu8s_B(Test_aBFu9s_BFu8s_B, "aBFu9s_BFu8s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_BFu9i_B()
{
  {
    init_simple_test("aBFu9s_BFu9i_B");
    static aBFu9s_BFu9i_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9s_BFu9i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_BFu9i_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_BFu9i_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_BFu9i_B");
    set_bf_and_test(lv, v2, 1, 1, 9, 1, "aBFu9s_BFu9i_B");
    set_bf_and_test(lv, v2, 1, 1, 9, hide_ull(1LL<<8), "aBFu9s_BFu9i_B");
    check_field_offset(lv, v3, 3, "aBFu9s_BFu9i_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_BFu9i_B(Test_aBFu9s_BFu9i_B, "aBFu9s_BFu9i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_BFu9ll_B()
{
  {
    init_simple_test("aBFu9s_BFu9ll_B");
    static aBFu9s_BFu9ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9s_BFu9ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_BFu9ll_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_BFu9ll_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_BFu9ll_B");
    set_bf_and_test(lv, v2, 1, 1, 9, 1, "aBFu9s_BFu9ll_B");
    set_bf_and_test(lv, v2, 1, 1, 9, hide_ull(1LL<<8), "aBFu9s_BFu9ll_B");
    check_field_offset(lv, v3, 3, "aBFu9s_BFu9ll_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_BFu9ll_B(Test_aBFu9s_BFu9ll_B, "aBFu9s_BFu9ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_BFu9s_B()
{
  {
    init_simple_test("aBFu9s_BFu9s_B");
    static aBFu9s_BFu9s_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9s_BFu9s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_BFu9s_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_BFu9s_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_BFu9s_B");
    set_bf_and_test(lv, v2, 1, 1, 9, 1, "aBFu9s_BFu9s_B");
    set_bf_and_test(lv, v2, 1, 1, 9, hide_ull(1LL<<8), "aBFu9s_BFu9s_B");
    check_field_offset(lv, v3, 3, "aBFu9s_BFu9s_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_BFu9s_B(Test_aBFu9s_BFu9s_B, "aBFu9s_BFu9s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_C_B()
{
  {
    init_simple_test("aBFu9s_C_B");
    static aBFu9s_C_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9s_C_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_C_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_C_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_C_B");
    check_field_offset(lv, v2, 2, "aBFu9s_C_B.v2");
    check_field_offset(lv, v3, 3, "aBFu9s_C_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_C_B(Test_aBFu9s_C_B, "aBFu9s_C_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_D_B()
{
  {
    init_simple_test("aBFu9s_D_B");
    static aBFu9s_D_B lv;
    check2(sizeof(lv), 11, "sizeof(aBFu9s_D_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_D_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_D_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_D_B");
    check_field_offset(lv, v2, 2, "aBFu9s_D_B.v2");
    check_field_offset(lv, v3, 10, "aBFu9s_D_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_D_B(Test_aBFu9s_D_B, "aBFu9s_D_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_F_B()
{
  {
    init_simple_test("aBFu9s_F_B");
    static aBFu9s_F_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9s_F_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_F_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_F_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_F_B");
    check_field_offset(lv, v2, 2, "aBFu9s_F_B.v2");
    check_field_offset(lv, v3, 6, "aBFu9s_F_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_F_B(Test_aBFu9s_F_B, "aBFu9s_F_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_I_B()
{
  {
    init_simple_test("aBFu9s_I_B");
    static aBFu9s_I_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9s_I_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_I_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_I_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_I_B");
    check_field_offset(lv, v2, 2, "aBFu9s_I_B.v2");
    check_field_offset(lv, v3, 6, "aBFu9s_I_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_I_B(Test_aBFu9s_I_B, "aBFu9s_I_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_Ip_B()
{
  {
    init_simple_test("aBFu9s_Ip_B");
    static aBFu9s_Ip_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aBFu9s_Ip_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_Ip_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_Ip_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_Ip_B");
    check_field_offset(lv, v2, 2, "aBFu9s_Ip_B.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aBFu9s_Ip_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_Ip_B(Test_aBFu9s_Ip_B, "aBFu9s_Ip_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_L_B()
{
  {
    init_simple_test("aBFu9s_L_B");
    static aBFu9s_L_B lv;
    check2(sizeof(lv), 11, "sizeof(aBFu9s_L_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_L_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_L_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_L_B");
    check_field_offset(lv, v2, 2, "aBFu9s_L_B.v2");
    check_field_offset(lv, v3, 10, "aBFu9s_L_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_L_B(Test_aBFu9s_L_B, "aBFu9s_L_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_S_B()
{
  {
    init_simple_test("aBFu9s_S_B");
    static aBFu9s_S_B lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9s_S_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_S_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_S_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_S_B");
    check_field_offset(lv, v2, 2, "aBFu9s_S_B.v2");
    check_field_offset(lv, v3, 4, "aBFu9s_S_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_S_B(Test_aBFu9s_S_B, "aBFu9s_S_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_Uc_B()
{
  {
    init_simple_test("aBFu9s_Uc_B");
    static aBFu9s_Uc_B lv;
    check2(sizeof(lv), 4, "sizeof(aBFu9s_Uc_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_Uc_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_Uc_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_Uc_B");
    check_field_offset(lv, v2, 2, "aBFu9s_Uc_B.v2");
    check_field_offset(lv, v3, 3, "aBFu9s_Uc_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_Uc_B(Test_aBFu9s_Uc_B, "aBFu9s_Uc_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_Ui_B()
{
  {
    init_simple_test("aBFu9s_Ui_B");
    static aBFu9s_Ui_B lv;
    check2(sizeof(lv), 7, "sizeof(aBFu9s_Ui_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_Ui_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_Ui_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_Ui_B");
    check_field_offset(lv, v2, 2, "aBFu9s_Ui_B.v2");
    check_field_offset(lv, v3, 6, "aBFu9s_Ui_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_Ui_B(Test_aBFu9s_Ui_B, "aBFu9s_Ui_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_Ul_B()
{
  {
    init_simple_test("aBFu9s_Ul_B");
    static aBFu9s_Ul_B lv;
    check2(sizeof(lv), 11, "sizeof(aBFu9s_Ul_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_Ul_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_Ul_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_Ul_B");
    check_field_offset(lv, v2, 2, "aBFu9s_Ul_B.v2");
    check_field_offset(lv, v3, 10, "aBFu9s_Ul_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_Ul_B(Test_aBFu9s_Ul_B, "aBFu9s_Ul_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_Us_B()
{
  {
    init_simple_test("aBFu9s_Us_B");
    static aBFu9s_Us_B lv;
    check2(sizeof(lv), 5, "sizeof(aBFu9s_Us_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_Us_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_Us_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_Us_B");
    check_field_offset(lv, v2, 2, "aBFu9s_Us_B.v2");
    check_field_offset(lv, v3, 4, "aBFu9s_Us_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_Us_B(Test_aBFu9s_Us_B, "aBFu9s_Us_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aBFu9s_Vp_B()
{
  {
    init_simple_test("aBFu9s_Vp_B");
    static aBFu9s_Vp_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aBFu9s_Vp_B)");
    check2(__alignof__(lv), 1, "__alignof__(aBFu9s_Vp_B)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "aBFu9s_Vp_B");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "aBFu9s_Vp_B");
    check_field_offset(lv, v2, 2, "aBFu9s_Vp_B.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aBFu9s_Vp_B.v3");
  }
}
static Arrange_To_Call_Me vaBFu9s_Vp_B(Test_aBFu9s_Vp_B, "aBFu9s_Vp_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B()
{
  {
    init_simple_test("aC_B");
    aC_B lv;
    check2(sizeof(lv), 2, "sizeof(aC_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B)");
    check_field_offset(lv, v1, 0, "aC_B.v1");
    check_field_offset(lv, v2, 1, "aC_B.v2");
  }
}
static Arrange_To_Call_Me vaC_B(Test_aC_B, "aC_B", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_B()
{
  {
    init_simple_test("aC_B_B");
    aC_B_B lv;
    check2(sizeof(lv), 3, "sizeof(aC_B_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_B)");
    check_field_offset(lv, v1, 0, "aC_B_B.v1");
    check_field_offset(lv, v2, 1, "aC_B_B.v2");
    check_field_offset(lv, v3, 2, "aC_B_B.v3");
  }
}
static Arrange_To_Call_Me vaC_B_B(Test_aC_B_B, "aC_B_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_BFu15i()
{
  {
    init_simple_test("aC_B_BFu15i");
    static aC_B_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aC_B_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_BFu15i)");
    check_field_offset(lv, v1, 0, "aC_B_BFu15i.v1");
    check_field_offset(lv, v2, 1, "aC_B_BFu15i.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aC_B_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aC_B_BFu15i");
  }
}
static Arrange_To_Call_Me vaC_B_BFu15i(Test_aC_B_BFu15i, "aC_B_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_BFu15ll()
{
  {
    init_simple_test("aC_B_BFu15ll");
    static aC_B_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aC_B_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_BFu15ll)");
    check_field_offset(lv, v1, 0, "aC_B_BFu15ll.v1");
    check_field_offset(lv, v2, 1, "aC_B_BFu15ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aC_B_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aC_B_BFu15ll");
  }
}
static Arrange_To_Call_Me vaC_B_BFu15ll(Test_aC_B_BFu15ll, "aC_B_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_BFu15s()
{
  {
    init_simple_test("aC_B_BFu15s");
    static aC_B_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aC_B_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_BFu15s)");
    check_field_offset(lv, v1, 0, "aC_B_BFu15s.v1");
    check_field_offset(lv, v2, 1, "aC_B_BFu15s.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aC_B_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aC_B_BFu15s");
  }
}
static Arrange_To_Call_Me vaC_B_BFu15s(Test_aC_B_BFu15s, "aC_B_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_BFu16i()
{
  {
    init_simple_test("aC_B_BFu16i");
    static aC_B_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aC_B_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_BFu16i)");
    check_field_offset(lv, v1, 0, "aC_B_BFu16i.v1");
    check_field_offset(lv, v2, 1, "aC_B_BFu16i.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aC_B_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aC_B_BFu16i");
  }
}
static Arrange_To_Call_Me vaC_B_BFu16i(Test_aC_B_BFu16i, "aC_B_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_BFu16ll()
{
  {
    init_simple_test("aC_B_BFu16ll");
    static aC_B_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aC_B_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_BFu16ll)");
    check_field_offset(lv, v1, 0, "aC_B_BFu16ll.v1");
    check_field_offset(lv, v2, 1, "aC_B_BFu16ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aC_B_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aC_B_BFu16ll");
  }
}
static Arrange_To_Call_Me vaC_B_BFu16ll(Test_aC_B_BFu16ll, "aC_B_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_BFu16s()
{
  {
    init_simple_test("aC_B_BFu16s");
    static aC_B_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aC_B_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_BFu16s)");
    check_field_offset(lv, v1, 0, "aC_B_BFu16s.v1");
    check_field_offset(lv, v2, 1, "aC_B_BFu16s.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aC_B_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aC_B_BFu16s");
  }
}
static Arrange_To_Call_Me vaC_B_BFu16s(Test_aC_B_BFu16s, "aC_B_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_BFu17i()
{
  {
    init_simple_test("aC_B_BFu17i");
    static aC_B_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aC_B_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_BFu17i)");
    check_field_offset(lv, v1, 0, "aC_B_BFu17i.v1");
    check_field_offset(lv, v2, 1, "aC_B_BFu17i.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aC_B_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aC_B_BFu17i");
  }
}
static Arrange_To_Call_Me vaC_B_BFu17i(Test_aC_B_BFu17i, "aC_B_BFu17i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_BFu17ll()
{
  {
    init_simple_test("aC_B_BFu17ll");
    static aC_B_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aC_B_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_BFu17ll)");
    check_field_offset(lv, v1, 0, "aC_B_BFu17ll.v1");
    check_field_offset(lv, v2, 1, "aC_B_BFu17ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aC_B_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aC_B_BFu17ll");
  }
}
static Arrange_To_Call_Me vaC_B_BFu17ll(Test_aC_B_BFu17ll, "aC_B_BFu17ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_BFu1c()
{
  {
    init_simple_test("aC_B_BFu1c");
    static aC_B_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aC_B_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_BFu1c)");
    check_field_offset(lv, v1, 0, "aC_B_BFu1c.v1");
    check_field_offset(lv, v2, 1, "aC_B_BFu1c.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aC_B_BFu1c");
  }
}
static Arrange_To_Call_Me vaC_B_BFu1c(Test_aC_B_BFu1c, "aC_B_BFu1c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_BFu1i()
{
  {
    init_simple_test("aC_B_BFu1i");
    static aC_B_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aC_B_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_BFu1i)");
    check_field_offset(lv, v1, 0, "aC_B_BFu1i.v1");
    check_field_offset(lv, v2, 1, "aC_B_BFu1i.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aC_B_BFu1i");
  }
}
static Arrange_To_Call_Me vaC_B_BFu1i(Test_aC_B_BFu1i, "aC_B_BFu1i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_BFu1ll()
{
  {
    init_simple_test("aC_B_BFu1ll");
    static aC_B_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aC_B_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_BFu1ll)");
    check_field_offset(lv, v1, 0, "aC_B_BFu1ll.v1");
    check_field_offset(lv, v2, 1, "aC_B_BFu1ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aC_B_BFu1ll");
  }
}
static Arrange_To_Call_Me vaC_B_BFu1ll(Test_aC_B_BFu1ll, "aC_B_BFu1ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_BFu1s()
{
  {
    init_simple_test("aC_B_BFu1s");
    static aC_B_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aC_B_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_BFu1s)");
    check_field_offset(lv, v1, 0, "aC_B_BFu1s.v1");
    check_field_offset(lv, v2, 1, "aC_B_BFu1s.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aC_B_BFu1s");
  }
}
static Arrange_To_Call_Me vaC_B_BFu1s(Test_aC_B_BFu1s, "aC_B_BFu1s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_BFu31i()
{
  {
    init_simple_test("aC_B_BFu31i");
    static aC_B_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aC_B_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_BFu31i)");
    check_field_offset(lv, v1, 0, "aC_B_BFu31i.v1");
    check_field_offset(lv, v2, 1, "aC_B_BFu31i.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aC_B_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aC_B_BFu31i");
  }
}
static Arrange_To_Call_Me vaC_B_BFu31i(Test_aC_B_BFu31i, "aC_B_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_BFu31ll()
{
  {
    init_simple_test("aC_B_BFu31ll");
    static aC_B_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aC_B_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_BFu31ll)");
    check_field_offset(lv, v1, 0, "aC_B_BFu31ll.v1");
    check_field_offset(lv, v2, 1, "aC_B_BFu31ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aC_B_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aC_B_BFu31ll");
  }
}
static Arrange_To_Call_Me vaC_B_BFu31ll(Test_aC_B_BFu31ll, "aC_B_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_BFu32i()
{
  {
    init_simple_test("aC_B_BFu32i");
    static aC_B_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aC_B_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_BFu32i)");
    check_field_offset(lv, v1, 0, "aC_B_BFu32i.v1");
    check_field_offset(lv, v2, 1, "aC_B_BFu32i.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aC_B_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aC_B_BFu32i");
  }
}
static Arrange_To_Call_Me vaC_B_BFu32i(Test_aC_B_BFu32i, "aC_B_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_BFu32ll()
{
  {
    init_simple_test("aC_B_BFu32ll");
    static aC_B_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aC_B_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_BFu32ll)");
    check_field_offset(lv, v1, 0, "aC_B_BFu32ll.v1");
    check_field_offset(lv, v2, 1, "aC_B_BFu32ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aC_B_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aC_B_BFu32ll");
  }
}
static Arrange_To_Call_Me vaC_B_BFu32ll(Test_aC_B_BFu32ll, "aC_B_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_BFu33()
{
  {
    init_simple_test("aC_B_BFu33");
    static aC_B_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aC_B_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_BFu33)");
    check_field_offset(lv, v1, 0, "aC_B_BFu33.v1");
    check_field_offset(lv, v2, 1, "aC_B_BFu33.v2");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "aC_B_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "aC_B_BFu33");
  }
}
static Arrange_To_Call_Me vaC_B_BFu33(Test_aC_B_BFu33, "aC_B_BFu33", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_BFu7c()
{
  {
    init_simple_test("aC_B_BFu7c");
    static aC_B_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aC_B_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_BFu7c)");
    check_field_offset(lv, v1, 0, "aC_B_BFu7c.v1");
    check_field_offset(lv, v2, 1, "aC_B_BFu7c.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aC_B_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aC_B_BFu7c");
  }
}
static Arrange_To_Call_Me vaC_B_BFu7c(Test_aC_B_BFu7c, "aC_B_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_BFu7i()
{
  {
    init_simple_test("aC_B_BFu7i");
    static aC_B_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aC_B_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_BFu7i)");
    check_field_offset(lv, v1, 0, "aC_B_BFu7i.v1");
    check_field_offset(lv, v2, 1, "aC_B_BFu7i.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aC_B_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aC_B_BFu7i");
  }
}
static Arrange_To_Call_Me vaC_B_BFu7i(Test_aC_B_BFu7i, "aC_B_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_BFu7ll()
{
  {
    init_simple_test("aC_B_BFu7ll");
    static aC_B_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aC_B_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_BFu7ll)");
    check_field_offset(lv, v1, 0, "aC_B_BFu7ll.v1");
    check_field_offset(lv, v2, 1, "aC_B_BFu7ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aC_B_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aC_B_BFu7ll");
  }
}
static Arrange_To_Call_Me vaC_B_BFu7ll(Test_aC_B_BFu7ll, "aC_B_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_BFu7s()
{
  {
    init_simple_test("aC_B_BFu7s");
    static aC_B_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aC_B_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_BFu7s)");
    check_field_offset(lv, v1, 0, "aC_B_BFu7s.v1");
    check_field_offset(lv, v2, 1, "aC_B_BFu7s.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aC_B_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aC_B_BFu7s");
  }
}
static Arrange_To_Call_Me vaC_B_BFu7s(Test_aC_B_BFu7s, "aC_B_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_BFu8c()
{
  {
    init_simple_test("aC_B_BFu8c");
    static aC_B_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aC_B_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_BFu8c)");
    check_field_offset(lv, v1, 0, "aC_B_BFu8c.v1");
    check_field_offset(lv, v2, 1, "aC_B_BFu8c.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aC_B_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aC_B_BFu8c");
  }
}
static Arrange_To_Call_Me vaC_B_BFu8c(Test_aC_B_BFu8c, "aC_B_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_BFu8i()
{
  {
    init_simple_test("aC_B_BFu8i");
    static aC_B_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aC_B_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_BFu8i)");
    check_field_offset(lv, v1, 0, "aC_B_BFu8i.v1");
    check_field_offset(lv, v2, 1, "aC_B_BFu8i.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aC_B_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aC_B_BFu8i");
  }
}
static Arrange_To_Call_Me vaC_B_BFu8i(Test_aC_B_BFu8i, "aC_B_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_BFu8ll()
{
  {
    init_simple_test("aC_B_BFu8ll");
    static aC_B_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aC_B_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_BFu8ll)");
    check_field_offset(lv, v1, 0, "aC_B_BFu8ll.v1");
    check_field_offset(lv, v2, 1, "aC_B_BFu8ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aC_B_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aC_B_BFu8ll");
  }
}
static Arrange_To_Call_Me vaC_B_BFu8ll(Test_aC_B_BFu8ll, "aC_B_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_BFu8s()
{
  {
    init_simple_test("aC_B_BFu8s");
    static aC_B_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aC_B_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_BFu8s)");
    check_field_offset(lv, v1, 0, "aC_B_BFu8s.v1");
    check_field_offset(lv, v2, 1, "aC_B_BFu8s.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aC_B_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aC_B_BFu8s");
  }
}
static Arrange_To_Call_Me vaC_B_BFu8s(Test_aC_B_BFu8s, "aC_B_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_BFu9i()
{
  {
    init_simple_test("aC_B_BFu9i");
    static aC_B_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aC_B_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_BFu9i)");
    check_field_offset(lv, v1, 0, "aC_B_BFu9i.v1");
    check_field_offset(lv, v2, 1, "aC_B_BFu9i.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aC_B_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aC_B_BFu9i");
  }
}
static Arrange_To_Call_Me vaC_B_BFu9i(Test_aC_B_BFu9i, "aC_B_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_BFu9ll()
{
  {
    init_simple_test("aC_B_BFu9ll");
    static aC_B_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aC_B_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_BFu9ll)");
    check_field_offset(lv, v1, 0, "aC_B_BFu9ll.v1");
    check_field_offset(lv, v2, 1, "aC_B_BFu9ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aC_B_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aC_B_BFu9ll");
  }
}
static Arrange_To_Call_Me vaC_B_BFu9ll(Test_aC_B_BFu9ll, "aC_B_BFu9ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_BFu9s()
{
  {
    init_simple_test("aC_B_BFu9s");
    static aC_B_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aC_B_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_BFu9s)");
    check_field_offset(lv, v1, 0, "aC_B_BFu9s.v1");
    check_field_offset(lv, v2, 1, "aC_B_BFu9s.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aC_B_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aC_B_BFu9s");
  }
}
static Arrange_To_Call_Me vaC_B_BFu9s(Test_aC_B_BFu9s, "aC_B_BFu9s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_C()
{
  {
    init_simple_test("aC_B_C");
    aC_B_C lv;
    check2(sizeof(lv), 3, "sizeof(aC_B_C)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_C)");
    check_field_offset(lv, v1, 0, "aC_B_C.v1");
    check_field_offset(lv, v2, 1, "aC_B_C.v2");
    check_field_offset(lv, v3, 2, "aC_B_C.v3");
  }
}
static Arrange_To_Call_Me vaC_B_C(Test_aC_B_C, "aC_B_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_D()
{
  {
    init_simple_test("aC_B_D");
    aC_B_D lv;
    check2(sizeof(lv), 10, "sizeof(aC_B_D)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_D)");
    check_field_offset(lv, v1, 0, "aC_B_D.v1");
    check_field_offset(lv, v2, 1, "aC_B_D.v2");
    check_field_offset(lv, v3, 2, "aC_B_D.v3");
  }
}
static Arrange_To_Call_Me vaC_B_D(Test_aC_B_D, "aC_B_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_F()
{
  {
    init_simple_test("aC_B_F");
    aC_B_F lv;
    check2(sizeof(lv), 6, "sizeof(aC_B_F)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_F)");
    check_field_offset(lv, v1, 0, "aC_B_F.v1");
    check_field_offset(lv, v2, 1, "aC_B_F.v2");
    check_field_offset(lv, v3, 2, "aC_B_F.v3");
  }
}
static Arrange_To_Call_Me vaC_B_F(Test_aC_B_F, "aC_B_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_I()
{
  {
    init_simple_test("aC_B_I");
    aC_B_I lv;
    check2(sizeof(lv), 6, "sizeof(aC_B_I)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_I)");
    check_field_offset(lv, v1, 0, "aC_B_I.v1");
    check_field_offset(lv, v2, 1, "aC_B_I.v2");
    check_field_offset(lv, v3, 2, "aC_B_I.v3");
  }
}
static Arrange_To_Call_Me vaC_B_I(Test_aC_B_I, "aC_B_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_Ip()
{
  {
    init_simple_test("aC_B_Ip");
    aC_B_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aC_B_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_Ip)");
    check_field_offset(lv, v1, 0, "aC_B_Ip.v1");
    check_field_offset(lv, v2, 1, "aC_B_Ip.v2");
    check_field_offset(lv, v3, 2, "aC_B_Ip.v3");
  }
}
static Arrange_To_Call_Me vaC_B_Ip(Test_aC_B_Ip, "aC_B_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_L()
{
  {
    init_simple_test("aC_B_L");
    aC_B_L lv;
    check2(sizeof(lv), 10, "sizeof(aC_B_L)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_L)");
    check_field_offset(lv, v1, 0, "aC_B_L.v1");
    check_field_offset(lv, v2, 1, "aC_B_L.v2");
    check_field_offset(lv, v3, 2, "aC_B_L.v3");
  }
}
static Arrange_To_Call_Me vaC_B_L(Test_aC_B_L, "aC_B_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_S()
{
  {
    init_simple_test("aC_B_S");
    aC_B_S lv;
    check2(sizeof(lv), 4, "sizeof(aC_B_S)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_S)");
    check_field_offset(lv, v1, 0, "aC_B_S.v1");
    check_field_offset(lv, v2, 1, "aC_B_S.v2");
    check_field_offset(lv, v3, 2, "aC_B_S.v3");
  }
}
static Arrange_To_Call_Me vaC_B_S(Test_aC_B_S, "aC_B_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_Uc()
{
  {
    init_simple_test("aC_B_Uc");
    aC_B_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aC_B_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_Uc)");
    check_field_offset(lv, v1, 0, "aC_B_Uc.v1");
    check_field_offset(lv, v2, 1, "aC_B_Uc.v2");
    check_field_offset(lv, v3, 2, "aC_B_Uc.v3");
  }
}
static Arrange_To_Call_Me vaC_B_Uc(Test_aC_B_Uc, "aC_B_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_Ui()
{
  {
    init_simple_test("aC_B_Ui");
    aC_B_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aC_B_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_Ui)");
    check_field_offset(lv, v1, 0, "aC_B_Ui.v1");
    check_field_offset(lv, v2, 1, "aC_B_Ui.v2");
    check_field_offset(lv, v3, 2, "aC_B_Ui.v3");
  }
}
static Arrange_To_Call_Me vaC_B_Ui(Test_aC_B_Ui, "aC_B_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_Ul()
{
  {
    init_simple_test("aC_B_Ul");
    aC_B_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aC_B_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_Ul)");
    check_field_offset(lv, v1, 0, "aC_B_Ul.v1");
    check_field_offset(lv, v2, 1, "aC_B_Ul.v2");
    check_field_offset(lv, v3, 2, "aC_B_Ul.v3");
  }
}
static Arrange_To_Call_Me vaC_B_Ul(Test_aC_B_Ul, "aC_B_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_Us()
{
  {
    init_simple_test("aC_B_Us");
    aC_B_Us lv;
    check2(sizeof(lv), 4, "sizeof(aC_B_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_Us)");
    check_field_offset(lv, v1, 0, "aC_B_Us.v1");
    check_field_offset(lv, v2, 1, "aC_B_Us.v2");
    check_field_offset(lv, v3, 2, "aC_B_Us.v3");
  }
}
static Arrange_To_Call_Me vaC_B_Us(Test_aC_B_Us, "aC_B_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_B_Vp()
{
  {
    init_simple_test("aC_B_Vp");
    aC_B_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aC_B_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aC_B_Vp)");
    check_field_offset(lv, v1, 0, "aC_B_Vp.v1");
    check_field_offset(lv, v2, 1, "aC_B_Vp.v2");
    check_field_offset(lv, v3, 2, "aC_B_Vp.v3");
  }
}
static Arrange_To_Call_Me vaC_B_Vp(Test_aC_B_Vp, "aC_B_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_BFu15i_B()
{
  {
    init_simple_test("aC_BFu15i_B");
    static aC_BFu15i_B lv;
    check2(sizeof(lv), 4, "sizeof(aC_BFu15i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_BFu15i_B)");
    check_field_offset(lv, v1, 0, "aC_BFu15i_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aC_BFu15i_B");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aC_BFu15i_B");
    check_field_offset(lv, v3, 3, "aC_BFu15i_B.v3");
  }
}
static Arrange_To_Call_Me vaC_BFu15i_B(Test_aC_BFu15i_B, "aC_BFu15i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_BFu15ll_B()
{
  {
    init_simple_test("aC_BFu15ll_B");
    static aC_BFu15ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aC_BFu15ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_BFu15ll_B)");
    check_field_offset(lv, v1, 0, "aC_BFu15ll_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aC_BFu15ll_B");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aC_BFu15ll_B");
    check_field_offset(lv, v3, 3, "aC_BFu15ll_B.v3");
  }
}
static Arrange_To_Call_Me vaC_BFu15ll_B(Test_aC_BFu15ll_B, "aC_BFu15ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_BFu15s_B()
{
  {
    init_simple_test("aC_BFu15s_B");
    static aC_BFu15s_B lv;
    check2(sizeof(lv), 4, "sizeof(aC_BFu15s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_BFu15s_B)");
    check_field_offset(lv, v1, 0, "aC_BFu15s_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aC_BFu15s_B");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aC_BFu15s_B");
    check_field_offset(lv, v3, 3, "aC_BFu15s_B.v3");
  }
}
static Arrange_To_Call_Me vaC_BFu15s_B(Test_aC_BFu15s_B, "aC_BFu15s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_BFu16i_B()
{
  {
    init_simple_test("aC_BFu16i_B");
    static aC_BFu16i_B lv;
    check2(sizeof(lv), 4, "sizeof(aC_BFu16i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_BFu16i_B)");
    check_field_offset(lv, v1, 0, "aC_BFu16i_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aC_BFu16i_B");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aC_BFu16i_B");
    check_field_offset(lv, v3, 3, "aC_BFu16i_B.v3");
  }
}
static Arrange_To_Call_Me vaC_BFu16i_B(Test_aC_BFu16i_B, "aC_BFu16i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_BFu16ll_B()
{
  {
    init_simple_test("aC_BFu16ll_B");
    static aC_BFu16ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aC_BFu16ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_BFu16ll_B)");
    check_field_offset(lv, v1, 0, "aC_BFu16ll_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aC_BFu16ll_B");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aC_BFu16ll_B");
    check_field_offset(lv, v3, 3, "aC_BFu16ll_B.v3");
  }
}
static Arrange_To_Call_Me vaC_BFu16ll_B(Test_aC_BFu16ll_B, "aC_BFu16ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_BFu16s_B()
{
  {
    init_simple_test("aC_BFu16s_B");
    static aC_BFu16s_B lv;
    check2(sizeof(lv), 4, "sizeof(aC_BFu16s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_BFu16s_B)");
    check_field_offset(lv, v1, 0, "aC_BFu16s_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aC_BFu16s_B");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aC_BFu16s_B");
    check_field_offset(lv, v3, 3, "aC_BFu16s_B.v3");
  }
}
static Arrange_To_Call_Me vaC_BFu16s_B(Test_aC_BFu16s_B, "aC_BFu16s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_BFu17i_B()
{
  {
    init_simple_test("aC_BFu17i_B");
    static aC_BFu17i_B lv;
    check2(sizeof(lv), 5, "sizeof(aC_BFu17i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_BFu17i_B)");
    check_field_offset(lv, v1, 0, "aC_BFu17i_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aC_BFu17i_B");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aC_BFu17i_B");
    check_field_offset(lv, v3, 4, "aC_BFu17i_B.v3");
  }
}
static Arrange_To_Call_Me vaC_BFu17i_B(Test_aC_BFu17i_B, "aC_BFu17i_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_BFu17ll_B()
{
  {
    init_simple_test("aC_BFu17ll_B");
    static aC_BFu17ll_B lv;
    check2(sizeof(lv), 5, "sizeof(aC_BFu17ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_BFu17ll_B)");
    check_field_offset(lv, v1, 0, "aC_BFu17ll_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aC_BFu17ll_B");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aC_BFu17ll_B");
    check_field_offset(lv, v3, 4, "aC_BFu17ll_B.v3");
  }
}
static Arrange_To_Call_Me vaC_BFu17ll_B(Test_aC_BFu17ll_B, "aC_BFu17ll_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_BFu1c_B()
{
  {
    init_simple_test("aC_BFu1c_B");
    static aC_BFu1c_B lv;
    check2(sizeof(lv), 3, "sizeof(aC_BFu1c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_BFu1c_B)");
    check_field_offset(lv, v1, 0, "aC_BFu1c_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aC_BFu1c_B");
    check_field_offset(lv, v3, 2, "aC_BFu1c_B.v3");
  }
}
static Arrange_To_Call_Me vaC_BFu1c_B(Test_aC_BFu1c_B, "aC_BFu1c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_BFu1i_B()
{
  {
    init_simple_test("aC_BFu1i_B");
    static aC_BFu1i_B lv;
    check2(sizeof(lv), 3, "sizeof(aC_BFu1i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_BFu1i_B)");
    check_field_offset(lv, v1, 0, "aC_BFu1i_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aC_BFu1i_B");
    check_field_offset(lv, v3, 2, "aC_BFu1i_B.v3");
  }
}
static Arrange_To_Call_Me vaC_BFu1i_B(Test_aC_BFu1i_B, "aC_BFu1i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_BFu1ll_B()
{
  {
    init_simple_test("aC_BFu1ll_B");
    static aC_BFu1ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aC_BFu1ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_BFu1ll_B)");
    check_field_offset(lv, v1, 0, "aC_BFu1ll_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aC_BFu1ll_B");
    check_field_offset(lv, v3, 2, "aC_BFu1ll_B.v3");
  }
}
static Arrange_To_Call_Me vaC_BFu1ll_B(Test_aC_BFu1ll_B, "aC_BFu1ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_BFu1s_B()
{
  {
    init_simple_test("aC_BFu1s_B");
    static aC_BFu1s_B lv;
    check2(sizeof(lv), 3, "sizeof(aC_BFu1s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_BFu1s_B)");
    check_field_offset(lv, v1, 0, "aC_BFu1s_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aC_BFu1s_B");
    check_field_offset(lv, v3, 2, "aC_BFu1s_B.v3");
  }
}
static Arrange_To_Call_Me vaC_BFu1s_B(Test_aC_BFu1s_B, "aC_BFu1s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_BFu31i_B()
{
  {
    init_simple_test("aC_BFu31i_B");
    static aC_BFu31i_B lv;
    check2(sizeof(lv), 6, "sizeof(aC_BFu31i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_BFu31i_B)");
    check_field_offset(lv, v1, 0, "aC_BFu31i_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aC_BFu31i_B");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aC_BFu31i_B");
    check_field_offset(lv, v3, 5, "aC_BFu31i_B.v3");
  }
}
static Arrange_To_Call_Me vaC_BFu31i_B(Test_aC_BFu31i_B, "aC_BFu31i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_BFu31ll_B()
{
  {
    init_simple_test("aC_BFu31ll_B");
    static aC_BFu31ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aC_BFu31ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_BFu31ll_B)");
    check_field_offset(lv, v1, 0, "aC_BFu31ll_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aC_BFu31ll_B");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aC_BFu31ll_B");
    check_field_offset(lv, v3, 5, "aC_BFu31ll_B.v3");
  }
}
static Arrange_To_Call_Me vaC_BFu31ll_B(Test_aC_BFu31ll_B, "aC_BFu31ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_BFu32i_B()
{
  {
    init_simple_test("aC_BFu32i_B");
    static aC_BFu32i_B lv;
    check2(sizeof(lv), 6, "sizeof(aC_BFu32i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_BFu32i_B)");
    check_field_offset(lv, v1, 0, "aC_BFu32i_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aC_BFu32i_B");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aC_BFu32i_B");
    check_field_offset(lv, v3, 5, "aC_BFu32i_B.v3");
  }
}
static Arrange_To_Call_Me vaC_BFu32i_B(Test_aC_BFu32i_B, "aC_BFu32i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_BFu32ll_B()
{
  {
    init_simple_test("aC_BFu32ll_B");
    static aC_BFu32ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aC_BFu32ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_BFu32ll_B)");
    check_field_offset(lv, v1, 0, "aC_BFu32ll_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aC_BFu32ll_B");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aC_BFu32ll_B");
    check_field_offset(lv, v3, 5, "aC_BFu32ll_B.v3");
  }
}
static Arrange_To_Call_Me vaC_BFu32ll_B(Test_aC_BFu32ll_B, "aC_BFu32ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_BFu33_B()
{
  {
    init_simple_test("aC_BFu33_B");
    static aC_BFu33_B lv;
    check2(sizeof(lv), 7, "sizeof(aC_BFu33_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_BFu33_B)");
    check_field_offset(lv, v1, 0, "aC_BFu33_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aC_BFu33_B");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aC_BFu33_B");
    check_field_offset(lv, v3, 6, "aC_BFu33_B.v3");
  }
}
static Arrange_To_Call_Me vaC_BFu33_B(Test_aC_BFu33_B, "aC_BFu33_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_BFu7c_B()
{
  {
    init_simple_test("aC_BFu7c_B");
    static aC_BFu7c_B lv;
    check2(sizeof(lv), 3, "sizeof(aC_BFu7c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_BFu7c_B)");
    check_field_offset(lv, v1, 0, "aC_BFu7c_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aC_BFu7c_B");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aC_BFu7c_B");
    check_field_offset(lv, v3, 2, "aC_BFu7c_B.v3");
  }
}
static Arrange_To_Call_Me vaC_BFu7c_B(Test_aC_BFu7c_B, "aC_BFu7c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_BFu7i_B()
{
  {
    init_simple_test("aC_BFu7i_B");
    static aC_BFu7i_B lv;
    check2(sizeof(lv), 3, "sizeof(aC_BFu7i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_BFu7i_B)");
    check_field_offset(lv, v1, 0, "aC_BFu7i_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aC_BFu7i_B");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aC_BFu7i_B");
    check_field_offset(lv, v3, 2, "aC_BFu7i_B.v3");
  }
}
static Arrange_To_Call_Me vaC_BFu7i_B(Test_aC_BFu7i_B, "aC_BFu7i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_BFu7ll_B()
{
  {
    init_simple_test("aC_BFu7ll_B");
    static aC_BFu7ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aC_BFu7ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_BFu7ll_B)");
    check_field_offset(lv, v1, 0, "aC_BFu7ll_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aC_BFu7ll_B");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aC_BFu7ll_B");
    check_field_offset(lv, v3, 2, "aC_BFu7ll_B.v3");
  }
}
static Arrange_To_Call_Me vaC_BFu7ll_B(Test_aC_BFu7ll_B, "aC_BFu7ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_BFu7s_B()
{
  {
    init_simple_test("aC_BFu7s_B");
    static aC_BFu7s_B lv;
    check2(sizeof(lv), 3, "sizeof(aC_BFu7s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_BFu7s_B)");
    check_field_offset(lv, v1, 0, "aC_BFu7s_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aC_BFu7s_B");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aC_BFu7s_B");
    check_field_offset(lv, v3, 2, "aC_BFu7s_B.v3");
  }
}
static Arrange_To_Call_Me vaC_BFu7s_B(Test_aC_BFu7s_B, "aC_BFu7s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_BFu8c_B()
{
  {
    init_simple_test("aC_BFu8c_B");
    static aC_BFu8c_B lv;
    check2(sizeof(lv), 3, "sizeof(aC_BFu8c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_BFu8c_B)");
    check_field_offset(lv, v1, 0, "aC_BFu8c_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aC_BFu8c_B");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aC_BFu8c_B");
    check_field_offset(lv, v3, 2, "aC_BFu8c_B.v3");
  }
}
static Arrange_To_Call_Me vaC_BFu8c_B(Test_aC_BFu8c_B, "aC_BFu8c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_BFu8i_B()
{
  {
    init_simple_test("aC_BFu8i_B");
    static aC_BFu8i_B lv;
    check2(sizeof(lv), 3, "sizeof(aC_BFu8i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_BFu8i_B)");
    check_field_offset(lv, v1, 0, "aC_BFu8i_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aC_BFu8i_B");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aC_BFu8i_B");
    check_field_offset(lv, v3, 2, "aC_BFu8i_B.v3");
  }
}
static Arrange_To_Call_Me vaC_BFu8i_B(Test_aC_BFu8i_B, "aC_BFu8i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_BFu8ll_B()
{
  {
    init_simple_test("aC_BFu8ll_B");
    static aC_BFu8ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aC_BFu8ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_BFu8ll_B)");
    check_field_offset(lv, v1, 0, "aC_BFu8ll_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aC_BFu8ll_B");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aC_BFu8ll_B");
    check_field_offset(lv, v3, 2, "aC_BFu8ll_B.v3");
  }
}
static Arrange_To_Call_Me vaC_BFu8ll_B(Test_aC_BFu8ll_B, "aC_BFu8ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_BFu8s_B()
{
  {
    init_simple_test("aC_BFu8s_B");
    static aC_BFu8s_B lv;
    check2(sizeof(lv), 3, "sizeof(aC_BFu8s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_BFu8s_B)");
    check_field_offset(lv, v1, 0, "aC_BFu8s_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aC_BFu8s_B");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aC_BFu8s_B");
    check_field_offset(lv, v3, 2, "aC_BFu8s_B.v3");
  }
}
static Arrange_To_Call_Me vaC_BFu8s_B(Test_aC_BFu8s_B, "aC_BFu8s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_BFu9i_B()
{
  {
    init_simple_test("aC_BFu9i_B");
    static aC_BFu9i_B lv;
    check2(sizeof(lv), 4, "sizeof(aC_BFu9i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_BFu9i_B)");
    check_field_offset(lv, v1, 0, "aC_BFu9i_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aC_BFu9i_B");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aC_BFu9i_B");
    check_field_offset(lv, v3, 3, "aC_BFu9i_B.v3");
  }
}
static Arrange_To_Call_Me vaC_BFu9i_B(Test_aC_BFu9i_B, "aC_BFu9i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_BFu9ll_B()
{
  {
    init_simple_test("aC_BFu9ll_B");
    static aC_BFu9ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aC_BFu9ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_BFu9ll_B)");
    check_field_offset(lv, v1, 0, "aC_BFu9ll_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aC_BFu9ll_B");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aC_BFu9ll_B");
    check_field_offset(lv, v3, 3, "aC_BFu9ll_B.v3");
  }
}
static Arrange_To_Call_Me vaC_BFu9ll_B(Test_aC_BFu9ll_B, "aC_BFu9ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_BFu9s_B()
{
  {
    init_simple_test("aC_BFu9s_B");
    static aC_BFu9s_B lv;
    check2(sizeof(lv), 4, "sizeof(aC_BFu9s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_BFu9s_B)");
    check_field_offset(lv, v1, 0, "aC_BFu9s_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aC_BFu9s_B");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aC_BFu9s_B");
    check_field_offset(lv, v3, 3, "aC_BFu9s_B.v3");
  }
}
static Arrange_To_Call_Me vaC_BFu9s_B(Test_aC_BFu9s_B, "aC_BFu9s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_C_B()
{
  {
    init_simple_test("aC_C_B");
    aC_C_B lv;
    check2(sizeof(lv), 3, "sizeof(aC_C_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_C_B)");
    check_field_offset(lv, v1, 0, "aC_C_B.v1");
    check_field_offset(lv, v2, 1, "aC_C_B.v2");
    check_field_offset(lv, v3, 2, "aC_C_B.v3");
  }
}
static Arrange_To_Call_Me vaC_C_B(Test_aC_C_B, "aC_C_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_D_B()
{
  {
    init_simple_test("aC_D_B");
    aC_D_B lv;
    check2(sizeof(lv), 10, "sizeof(aC_D_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_D_B)");
    check_field_offset(lv, v1, 0, "aC_D_B.v1");
    check_field_offset(lv, v2, 1, "aC_D_B.v2");
    check_field_offset(lv, v3, 9, "aC_D_B.v3");
  }
}
static Arrange_To_Call_Me vaC_D_B(Test_aC_D_B, "aC_D_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_F_B()
{
  {
    init_simple_test("aC_F_B");
    aC_F_B lv;
    check2(sizeof(lv), 6, "sizeof(aC_F_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_F_B)");
    check_field_offset(lv, v1, 0, "aC_F_B.v1");
    check_field_offset(lv, v2, 1, "aC_F_B.v2");
    check_field_offset(lv, v3, 5, "aC_F_B.v3");
  }
}
static Arrange_To_Call_Me vaC_F_B(Test_aC_F_B, "aC_F_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_I_B()
{
  {
    init_simple_test("aC_I_B");
    aC_I_B lv;
    check2(sizeof(lv), 6, "sizeof(aC_I_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_I_B)");
    check_field_offset(lv, v1, 0, "aC_I_B.v1");
    check_field_offset(lv, v2, 1, "aC_I_B.v2");
    check_field_offset(lv, v3, 5, "aC_I_B.v3");
  }
}
static Arrange_To_Call_Me vaC_I_B(Test_aC_I_B, "aC_I_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_Ip_B()
{
  {
    init_simple_test("aC_Ip_B");
    aC_Ip_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aC_Ip_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_Ip_B)");
    check_field_offset(lv, v1, 0, "aC_Ip_B.v1");
    check_field_offset(lv, v2, 1, "aC_Ip_B.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aC_Ip_B.v3");
  }
}
static Arrange_To_Call_Me vaC_Ip_B(Test_aC_Ip_B, "aC_Ip_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_L_B()
{
  {
    init_simple_test("aC_L_B");
    aC_L_B lv;
    check2(sizeof(lv), 10, "sizeof(aC_L_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_L_B)");
    check_field_offset(lv, v1, 0, "aC_L_B.v1");
    check_field_offset(lv, v2, 1, "aC_L_B.v2");
    check_field_offset(lv, v3, 9, "aC_L_B.v3");
  }
}
static Arrange_To_Call_Me vaC_L_B(Test_aC_L_B, "aC_L_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_S_B()
{
  {
    init_simple_test("aC_S_B");
    aC_S_B lv;
    check2(sizeof(lv), 4, "sizeof(aC_S_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_S_B)");
    check_field_offset(lv, v1, 0, "aC_S_B.v1");
    check_field_offset(lv, v2, 1, "aC_S_B.v2");
    check_field_offset(lv, v3, 3, "aC_S_B.v3");
  }
}
static Arrange_To_Call_Me vaC_S_B(Test_aC_S_B, "aC_S_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_Uc_B()
{
  {
    init_simple_test("aC_Uc_B");
    aC_Uc_B lv;
    check2(sizeof(lv), 3, "sizeof(aC_Uc_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_Uc_B)");
    check_field_offset(lv, v1, 0, "aC_Uc_B.v1");
    check_field_offset(lv, v2, 1, "aC_Uc_B.v2");
    check_field_offset(lv, v3, 2, "aC_Uc_B.v3");
  }
}
static Arrange_To_Call_Me vaC_Uc_B(Test_aC_Uc_B, "aC_Uc_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_Ui_B()
{
  {
    init_simple_test("aC_Ui_B");
    aC_Ui_B lv;
    check2(sizeof(lv), 6, "sizeof(aC_Ui_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_Ui_B)");
    check_field_offset(lv, v1, 0, "aC_Ui_B.v1");
    check_field_offset(lv, v2, 1, "aC_Ui_B.v2");
    check_field_offset(lv, v3, 5, "aC_Ui_B.v3");
  }
}
static Arrange_To_Call_Me vaC_Ui_B(Test_aC_Ui_B, "aC_Ui_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_Ul_B()
{
  {
    init_simple_test("aC_Ul_B");
    aC_Ul_B lv;
    check2(sizeof(lv), 10, "sizeof(aC_Ul_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_Ul_B)");
    check_field_offset(lv, v1, 0, "aC_Ul_B.v1");
    check_field_offset(lv, v2, 1, "aC_Ul_B.v2");
    check_field_offset(lv, v3, 9, "aC_Ul_B.v3");
  }
}
static Arrange_To_Call_Me vaC_Ul_B(Test_aC_Ul_B, "aC_Ul_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_Us_B()
{
  {
    init_simple_test("aC_Us_B");
    aC_Us_B lv;
    check2(sizeof(lv), 4, "sizeof(aC_Us_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_Us_B)");
    check_field_offset(lv, v1, 0, "aC_Us_B.v1");
    check_field_offset(lv, v2, 1, "aC_Us_B.v2");
    check_field_offset(lv, v3, 3, "aC_Us_B.v3");
  }
}
static Arrange_To_Call_Me vaC_Us_B(Test_aC_Us_B, "aC_Us_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aC_Vp_B()
{
  {
    init_simple_test("aC_Vp_B");
    aC_Vp_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aC_Vp_B)");
    check2(__alignof__(lv), 1, "__alignof__(aC_Vp_B)");
    check_field_offset(lv, v1, 0, "aC_Vp_B.v1");
    check_field_offset(lv, v2, 1, "aC_Vp_B.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aC_Vp_B.v3");
  }
}
static Arrange_To_Call_Me vaC_Vp_B(Test_aC_Vp_B, "aC_Vp_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B()
{
  {
    init_simple_test("aD_B");
    aD_B lv;
    check2(sizeof(lv), 9, "sizeof(aD_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B)");
    check_field_offset(lv, v1, 0, "aD_B.v1");
    check_field_offset(lv, v2, 8, "aD_B.v2");
  }
}
static Arrange_To_Call_Me vaD_B(Test_aD_B, "aD_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_B()
{
  {
    init_simple_test("aD_B_B");
    aD_B_B lv;
    check2(sizeof(lv), 10, "sizeof(aD_B_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_B)");
    check_field_offset(lv, v1, 0, "aD_B_B.v1");
    check_field_offset(lv, v2, 8, "aD_B_B.v2");
    check_field_offset(lv, v3, 9, "aD_B_B.v3");
  }
}
static Arrange_To_Call_Me vaD_B_B(Test_aD_B_B, "aD_B_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_BFu15i()
{
  {
    init_simple_test("aD_B_BFu15i");
    static aD_B_BFu15i lv;
    check2(sizeof(lv), 11, "sizeof(aD_B_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_BFu15i)");
    check_field_offset(lv, v1, 0, "aD_B_BFu15i.v1");
    check_field_offset(lv, v2, 8, "aD_B_BFu15i.v2");
    set_bf_and_test(lv, v3, 9, 0, 15, 1, "aD_B_BFu15i");
    set_bf_and_test(lv, v3, 9, 0, 15, hide_ull(1LL<<14), "aD_B_BFu15i");
  }
}
static Arrange_To_Call_Me vaD_B_BFu15i(Test_aD_B_BFu15i, "aD_B_BFu15i", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_BFu15ll()
{
  {
    init_simple_test("aD_B_BFu15ll");
    static aD_B_BFu15ll lv;
    check2(sizeof(lv), 11, "sizeof(aD_B_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_BFu15ll)");
    check_field_offset(lv, v1, 0, "aD_B_BFu15ll.v1");
    check_field_offset(lv, v2, 8, "aD_B_BFu15ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 15, 1, "aD_B_BFu15ll");
    set_bf_and_test(lv, v3, 9, 0, 15, hide_ull(1LL<<14), "aD_B_BFu15ll");
  }
}
static Arrange_To_Call_Me vaD_B_BFu15ll(Test_aD_B_BFu15ll, "aD_B_BFu15ll", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_BFu15s()
{
  {
    init_simple_test("aD_B_BFu15s");
    static aD_B_BFu15s lv;
    check2(sizeof(lv), 11, "sizeof(aD_B_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_BFu15s)");
    check_field_offset(lv, v1, 0, "aD_B_BFu15s.v1");
    check_field_offset(lv, v2, 8, "aD_B_BFu15s.v2");
    set_bf_and_test(lv, v3, 9, 0, 15, 1, "aD_B_BFu15s");
    set_bf_and_test(lv, v3, 9, 0, 15, hide_ull(1LL<<14), "aD_B_BFu15s");
  }
}
static Arrange_To_Call_Me vaD_B_BFu15s(Test_aD_B_BFu15s, "aD_B_BFu15s", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_BFu16i()
{
  {
    init_simple_test("aD_B_BFu16i");
    static aD_B_BFu16i lv;
    check2(sizeof(lv), 11, "sizeof(aD_B_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_BFu16i)");
    check_field_offset(lv, v1, 0, "aD_B_BFu16i.v1");
    check_field_offset(lv, v2, 8, "aD_B_BFu16i.v2");
    set_bf_and_test(lv, v3, 9, 0, 16, 1, "aD_B_BFu16i");
    set_bf_and_test(lv, v3, 9, 0, 16, hide_ull(1LL<<15), "aD_B_BFu16i");
  }
}
static Arrange_To_Call_Me vaD_B_BFu16i(Test_aD_B_BFu16i, "aD_B_BFu16i", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_BFu16ll()
{
  {
    init_simple_test("aD_B_BFu16ll");
    static aD_B_BFu16ll lv;
    check2(sizeof(lv), 11, "sizeof(aD_B_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_BFu16ll)");
    check_field_offset(lv, v1, 0, "aD_B_BFu16ll.v1");
    check_field_offset(lv, v2, 8, "aD_B_BFu16ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 16, 1, "aD_B_BFu16ll");
    set_bf_and_test(lv, v3, 9, 0, 16, hide_ull(1LL<<15), "aD_B_BFu16ll");
  }
}
static Arrange_To_Call_Me vaD_B_BFu16ll(Test_aD_B_BFu16ll, "aD_B_BFu16ll", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_BFu16s()
{
  {
    init_simple_test("aD_B_BFu16s");
    static aD_B_BFu16s lv;
    check2(sizeof(lv), 11, "sizeof(aD_B_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_BFu16s)");
    check_field_offset(lv, v1, 0, "aD_B_BFu16s.v1");
    check_field_offset(lv, v2, 8, "aD_B_BFu16s.v2");
    set_bf_and_test(lv, v3, 9, 0, 16, 1, "aD_B_BFu16s");
    set_bf_and_test(lv, v3, 9, 0, 16, hide_ull(1LL<<15), "aD_B_BFu16s");
  }
}
static Arrange_To_Call_Me vaD_B_BFu16s(Test_aD_B_BFu16s, "aD_B_BFu16s", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_BFu17i()
{
  {
    init_simple_test("aD_B_BFu17i");
    static aD_B_BFu17i lv;
    check2(sizeof(lv), 12, "sizeof(aD_B_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_BFu17i)");
    check_field_offset(lv, v1, 0, "aD_B_BFu17i.v1");
    check_field_offset(lv, v2, 8, "aD_B_BFu17i.v2");
    set_bf_and_test(lv, v3, 9, 0, 17, 1, "aD_B_BFu17i");
    set_bf_and_test(lv, v3, 9, 0, 17, hide_ull(1LL<<16), "aD_B_BFu17i");
  }
}
static Arrange_To_Call_Me vaD_B_BFu17i(Test_aD_B_BFu17i, "aD_B_BFu17i", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_BFu17ll()
{
  {
    init_simple_test("aD_B_BFu17ll");
    static aD_B_BFu17ll lv;
    check2(sizeof(lv), 12, "sizeof(aD_B_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_BFu17ll)");
    check_field_offset(lv, v1, 0, "aD_B_BFu17ll.v1");
    check_field_offset(lv, v2, 8, "aD_B_BFu17ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 17, 1, "aD_B_BFu17ll");
    set_bf_and_test(lv, v3, 9, 0, 17, hide_ull(1LL<<16), "aD_B_BFu17ll");
  }
}
static Arrange_To_Call_Me vaD_B_BFu17ll(Test_aD_B_BFu17ll, "aD_B_BFu17ll", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_BFu1c()
{
  {
    init_simple_test("aD_B_BFu1c");
    static aD_B_BFu1c lv;
    check2(sizeof(lv), 10, "sizeof(aD_B_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_BFu1c)");
    check_field_offset(lv, v1, 0, "aD_B_BFu1c.v1");
    check_field_offset(lv, v2, 8, "aD_B_BFu1c.v2");
    set_bf_and_test(lv, v3, 9, 0, 1, 1, "aD_B_BFu1c");
  }
}
static Arrange_To_Call_Me vaD_B_BFu1c(Test_aD_B_BFu1c, "aD_B_BFu1c", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_BFu1i()
{
  {
    init_simple_test("aD_B_BFu1i");
    static aD_B_BFu1i lv;
    check2(sizeof(lv), 10, "sizeof(aD_B_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_BFu1i)");
    check_field_offset(lv, v1, 0, "aD_B_BFu1i.v1");
    check_field_offset(lv, v2, 8, "aD_B_BFu1i.v2");
    set_bf_and_test(lv, v3, 9, 0, 1, 1, "aD_B_BFu1i");
  }
}
static Arrange_To_Call_Me vaD_B_BFu1i(Test_aD_B_BFu1i, "aD_B_BFu1i", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_BFu1ll()
{
  {
    init_simple_test("aD_B_BFu1ll");
    static aD_B_BFu1ll lv;
    check2(sizeof(lv), 10, "sizeof(aD_B_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_BFu1ll)");
    check_field_offset(lv, v1, 0, "aD_B_BFu1ll.v1");
    check_field_offset(lv, v2, 8, "aD_B_BFu1ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 1, 1, "aD_B_BFu1ll");
  }
}
static Arrange_To_Call_Me vaD_B_BFu1ll(Test_aD_B_BFu1ll, "aD_B_BFu1ll", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_BFu1s()
{
  {
    init_simple_test("aD_B_BFu1s");
    static aD_B_BFu1s lv;
    check2(sizeof(lv), 10, "sizeof(aD_B_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_BFu1s)");
    check_field_offset(lv, v1, 0, "aD_B_BFu1s.v1");
    check_field_offset(lv, v2, 8, "aD_B_BFu1s.v2");
    set_bf_and_test(lv, v3, 9, 0, 1, 1, "aD_B_BFu1s");
  }
}
static Arrange_To_Call_Me vaD_B_BFu1s(Test_aD_B_BFu1s, "aD_B_BFu1s", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_BFu31i()
{
  {
    init_simple_test("aD_B_BFu31i");
    static aD_B_BFu31i lv;
    check2(sizeof(lv), 13, "sizeof(aD_B_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_BFu31i)");
    check_field_offset(lv, v1, 0, "aD_B_BFu31i.v1");
    check_field_offset(lv, v2, 8, "aD_B_BFu31i.v2");
    set_bf_and_test(lv, v3, 9, 0, 31, 1, "aD_B_BFu31i");
    set_bf_and_test(lv, v3, 9, 0, 31, hide_ull(1LL<<30), "aD_B_BFu31i");
  }
}
static Arrange_To_Call_Me vaD_B_BFu31i(Test_aD_B_BFu31i, "aD_B_BFu31i", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_BFu31ll()
{
  {
    init_simple_test("aD_B_BFu31ll");
    static aD_B_BFu31ll lv;
    check2(sizeof(lv), 13, "sizeof(aD_B_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_BFu31ll)");
    check_field_offset(lv, v1, 0, "aD_B_BFu31ll.v1");
    check_field_offset(lv, v2, 8, "aD_B_BFu31ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 31, 1, "aD_B_BFu31ll");
    set_bf_and_test(lv, v3, 9, 0, 31, hide_ull(1LL<<30), "aD_B_BFu31ll");
  }
}
static Arrange_To_Call_Me vaD_B_BFu31ll(Test_aD_B_BFu31ll, "aD_B_BFu31ll", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_BFu32i()
{
  {
    init_simple_test("aD_B_BFu32i");
    static aD_B_BFu32i lv;
    check2(sizeof(lv), 13, "sizeof(aD_B_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_BFu32i)");
    check_field_offset(lv, v1, 0, "aD_B_BFu32i.v1");
    check_field_offset(lv, v2, 8, "aD_B_BFu32i.v2");
    set_bf_and_test(lv, v3, 9, 0, 32, 1, "aD_B_BFu32i");
    set_bf_and_test(lv, v3, 9, 0, 32, hide_ull(1LL<<31), "aD_B_BFu32i");
  }
}
static Arrange_To_Call_Me vaD_B_BFu32i(Test_aD_B_BFu32i, "aD_B_BFu32i", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_BFu32ll()
{
  {
    init_simple_test("aD_B_BFu32ll");
    static aD_B_BFu32ll lv;
    check2(sizeof(lv), 13, "sizeof(aD_B_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_BFu32ll)");
    check_field_offset(lv, v1, 0, "aD_B_BFu32ll.v1");
    check_field_offset(lv, v2, 8, "aD_B_BFu32ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 32, 1, "aD_B_BFu32ll");
    set_bf_and_test(lv, v3, 9, 0, 32, hide_ull(1LL<<31), "aD_B_BFu32ll");
  }
}
static Arrange_To_Call_Me vaD_B_BFu32ll(Test_aD_B_BFu32ll, "aD_B_BFu32ll", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_BFu33()
{
  {
    init_simple_test("aD_B_BFu33");
    static aD_B_BFu33 lv;
    check2(sizeof(lv), 14, "sizeof(aD_B_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_BFu33)");
    check_field_offset(lv, v1, 0, "aD_B_BFu33.v1");
    check_field_offset(lv, v2, 8, "aD_B_BFu33.v2");
    set_bf_and_test(lv, v3, 9, 0, 33, 1, "aD_B_BFu33");
    set_bf_and_test(lv, v3, 9, 0, 33, hide_ull(1LL<<32), "aD_B_BFu33");
  }
}
static Arrange_To_Call_Me vaD_B_BFu33(Test_aD_B_BFu33, "aD_B_BFu33", 14);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_BFu7c()
{
  {
    init_simple_test("aD_B_BFu7c");
    static aD_B_BFu7c lv;
    check2(sizeof(lv), 10, "sizeof(aD_B_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_BFu7c)");
    check_field_offset(lv, v1, 0, "aD_B_BFu7c.v1");
    check_field_offset(lv, v2, 8, "aD_B_BFu7c.v2");
    set_bf_and_test(lv, v3, 9, 0, 7, 1, "aD_B_BFu7c");
    set_bf_and_test(lv, v3, 9, 0, 7, hide_ull(1LL<<6), "aD_B_BFu7c");
  }
}
static Arrange_To_Call_Me vaD_B_BFu7c(Test_aD_B_BFu7c, "aD_B_BFu7c", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_BFu7i()
{
  {
    init_simple_test("aD_B_BFu7i");
    static aD_B_BFu7i lv;
    check2(sizeof(lv), 10, "sizeof(aD_B_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_BFu7i)");
    check_field_offset(lv, v1, 0, "aD_B_BFu7i.v1");
    check_field_offset(lv, v2, 8, "aD_B_BFu7i.v2");
    set_bf_and_test(lv, v3, 9, 0, 7, 1, "aD_B_BFu7i");
    set_bf_and_test(lv, v3, 9, 0, 7, hide_ull(1LL<<6), "aD_B_BFu7i");
  }
}
static Arrange_To_Call_Me vaD_B_BFu7i(Test_aD_B_BFu7i, "aD_B_BFu7i", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_BFu7ll()
{
  {
    init_simple_test("aD_B_BFu7ll");
    static aD_B_BFu7ll lv;
    check2(sizeof(lv), 10, "sizeof(aD_B_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_BFu7ll)");
    check_field_offset(lv, v1, 0, "aD_B_BFu7ll.v1");
    check_field_offset(lv, v2, 8, "aD_B_BFu7ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 7, 1, "aD_B_BFu7ll");
    set_bf_and_test(lv, v3, 9, 0, 7, hide_ull(1LL<<6), "aD_B_BFu7ll");
  }
}
static Arrange_To_Call_Me vaD_B_BFu7ll(Test_aD_B_BFu7ll, "aD_B_BFu7ll", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_BFu7s()
{
  {
    init_simple_test("aD_B_BFu7s");
    static aD_B_BFu7s lv;
    check2(sizeof(lv), 10, "sizeof(aD_B_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_BFu7s)");
    check_field_offset(lv, v1, 0, "aD_B_BFu7s.v1");
    check_field_offset(lv, v2, 8, "aD_B_BFu7s.v2");
    set_bf_and_test(lv, v3, 9, 0, 7, 1, "aD_B_BFu7s");
    set_bf_and_test(lv, v3, 9, 0, 7, hide_ull(1LL<<6), "aD_B_BFu7s");
  }
}
static Arrange_To_Call_Me vaD_B_BFu7s(Test_aD_B_BFu7s, "aD_B_BFu7s", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_BFu8c()
{
  {
    init_simple_test("aD_B_BFu8c");
    static aD_B_BFu8c lv;
    check2(sizeof(lv), 10, "sizeof(aD_B_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_BFu8c)");
    check_field_offset(lv, v1, 0, "aD_B_BFu8c.v1");
    check_field_offset(lv, v2, 8, "aD_B_BFu8c.v2");
    set_bf_and_test(lv, v3, 9, 0, 8, 1, "aD_B_BFu8c");
    set_bf_and_test(lv, v3, 9, 0, 8, hide_ull(1LL<<7), "aD_B_BFu8c");
  }
}
static Arrange_To_Call_Me vaD_B_BFu8c(Test_aD_B_BFu8c, "aD_B_BFu8c", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_BFu8i()
{
  {
    init_simple_test("aD_B_BFu8i");
    static aD_B_BFu8i lv;
    check2(sizeof(lv), 10, "sizeof(aD_B_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_BFu8i)");
    check_field_offset(lv, v1, 0, "aD_B_BFu8i.v1");
    check_field_offset(lv, v2, 8, "aD_B_BFu8i.v2");
    set_bf_and_test(lv, v3, 9, 0, 8, 1, "aD_B_BFu8i");
    set_bf_and_test(lv, v3, 9, 0, 8, hide_ull(1LL<<7), "aD_B_BFu8i");
  }
}
static Arrange_To_Call_Me vaD_B_BFu8i(Test_aD_B_BFu8i, "aD_B_BFu8i", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_BFu8ll()
{
  {
    init_simple_test("aD_B_BFu8ll");
    static aD_B_BFu8ll lv;
    check2(sizeof(lv), 10, "sizeof(aD_B_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_BFu8ll)");
    check_field_offset(lv, v1, 0, "aD_B_BFu8ll.v1");
    check_field_offset(lv, v2, 8, "aD_B_BFu8ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 8, 1, "aD_B_BFu8ll");
    set_bf_and_test(lv, v3, 9, 0, 8, hide_ull(1LL<<7), "aD_B_BFu8ll");
  }
}
static Arrange_To_Call_Me vaD_B_BFu8ll(Test_aD_B_BFu8ll, "aD_B_BFu8ll", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_BFu8s()
{
  {
    init_simple_test("aD_B_BFu8s");
    static aD_B_BFu8s lv;
    check2(sizeof(lv), 10, "sizeof(aD_B_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_BFu8s)");
    check_field_offset(lv, v1, 0, "aD_B_BFu8s.v1");
    check_field_offset(lv, v2, 8, "aD_B_BFu8s.v2");
    set_bf_and_test(lv, v3, 9, 0, 8, 1, "aD_B_BFu8s");
    set_bf_and_test(lv, v3, 9, 0, 8, hide_ull(1LL<<7), "aD_B_BFu8s");
  }
}
static Arrange_To_Call_Me vaD_B_BFu8s(Test_aD_B_BFu8s, "aD_B_BFu8s", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_BFu9i()
{
  {
    init_simple_test("aD_B_BFu9i");
    static aD_B_BFu9i lv;
    check2(sizeof(lv), 11, "sizeof(aD_B_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_BFu9i)");
    check_field_offset(lv, v1, 0, "aD_B_BFu9i.v1");
    check_field_offset(lv, v2, 8, "aD_B_BFu9i.v2");
    set_bf_and_test(lv, v3, 9, 0, 9, 1, "aD_B_BFu9i");
    set_bf_and_test(lv, v3, 9, 0, 9, hide_ull(1LL<<8), "aD_B_BFu9i");
  }
}
static Arrange_To_Call_Me vaD_B_BFu9i(Test_aD_B_BFu9i, "aD_B_BFu9i", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_BFu9ll()
{
  {
    init_simple_test("aD_B_BFu9ll");
    static aD_B_BFu9ll lv;
    check2(sizeof(lv), 11, "sizeof(aD_B_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_BFu9ll)");
    check_field_offset(lv, v1, 0, "aD_B_BFu9ll.v1");
    check_field_offset(lv, v2, 8, "aD_B_BFu9ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 9, 1, "aD_B_BFu9ll");
    set_bf_and_test(lv, v3, 9, 0, 9, hide_ull(1LL<<8), "aD_B_BFu9ll");
  }
}
static Arrange_To_Call_Me vaD_B_BFu9ll(Test_aD_B_BFu9ll, "aD_B_BFu9ll", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_BFu9s()
{
  {
    init_simple_test("aD_B_BFu9s");
    static aD_B_BFu9s lv;
    check2(sizeof(lv), 11, "sizeof(aD_B_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_BFu9s)");
    check_field_offset(lv, v1, 0, "aD_B_BFu9s.v1");
    check_field_offset(lv, v2, 8, "aD_B_BFu9s.v2");
    set_bf_and_test(lv, v3, 9, 0, 9, 1, "aD_B_BFu9s");
    set_bf_and_test(lv, v3, 9, 0, 9, hide_ull(1LL<<8), "aD_B_BFu9s");
  }
}
static Arrange_To_Call_Me vaD_B_BFu9s(Test_aD_B_BFu9s, "aD_B_BFu9s", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_C()
{
  {
    init_simple_test("aD_B_C");
    aD_B_C lv;
    check2(sizeof(lv), 10, "sizeof(aD_B_C)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_C)");
    check_field_offset(lv, v1, 0, "aD_B_C.v1");
    check_field_offset(lv, v2, 8, "aD_B_C.v2");
    check_field_offset(lv, v3, 9, "aD_B_C.v3");
  }
}
static Arrange_To_Call_Me vaD_B_C(Test_aD_B_C, "aD_B_C", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_D()
{
  {
    init_simple_test("aD_B_D");
    aD_B_D lv;
    check2(sizeof(lv), 17, "sizeof(aD_B_D)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_D)");
    check_field_offset(lv, v1, 0, "aD_B_D.v1");
    check_field_offset(lv, v2, 8, "aD_B_D.v2");
    check_field_offset(lv, v3, 9, "aD_B_D.v3");
  }
}
static Arrange_To_Call_Me vaD_B_D(Test_aD_B_D, "aD_B_D", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_F()
{
  {
    init_simple_test("aD_B_F");
    aD_B_F lv;
    check2(sizeof(lv), 13, "sizeof(aD_B_F)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_F)");
    check_field_offset(lv, v1, 0, "aD_B_F.v1");
    check_field_offset(lv, v2, 8, "aD_B_F.v2");
    check_field_offset(lv, v3, 9, "aD_B_F.v3");
  }
}
static Arrange_To_Call_Me vaD_B_F(Test_aD_B_F, "aD_B_F", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_I()
{
  {
    init_simple_test("aD_B_I");
    aD_B_I lv;
    check2(sizeof(lv), 13, "sizeof(aD_B_I)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_I)");
    check_field_offset(lv, v1, 0, "aD_B_I.v1");
    check_field_offset(lv, v2, 8, "aD_B_I.v2");
    check_field_offset(lv, v3, 9, "aD_B_I.v3");
  }
}
static Arrange_To_Call_Me vaD_B_I(Test_aD_B_I, "aD_B_I", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_Ip()
{
  {
    init_simple_test("aD_B_Ip");
    aD_B_Ip lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aD_B_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_Ip)");
    check_field_offset(lv, v1, 0, "aD_B_Ip.v1");
    check_field_offset(lv, v2, 8, "aD_B_Ip.v2");
    check_field_offset(lv, v3, 9, "aD_B_Ip.v3");
  }
}
static Arrange_To_Call_Me vaD_B_Ip(Test_aD_B_Ip, "aD_B_Ip", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_L()
{
  {
    init_simple_test("aD_B_L");
    aD_B_L lv;
    check2(sizeof(lv), 17, "sizeof(aD_B_L)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_L)");
    check_field_offset(lv, v1, 0, "aD_B_L.v1");
    check_field_offset(lv, v2, 8, "aD_B_L.v2");
    check_field_offset(lv, v3, 9, "aD_B_L.v3");
  }
}
static Arrange_To_Call_Me vaD_B_L(Test_aD_B_L, "aD_B_L", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_S()
{
  {
    init_simple_test("aD_B_S");
    aD_B_S lv;
    check2(sizeof(lv), 11, "sizeof(aD_B_S)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_S)");
    check_field_offset(lv, v1, 0, "aD_B_S.v1");
    check_field_offset(lv, v2, 8, "aD_B_S.v2");
    check_field_offset(lv, v3, 9, "aD_B_S.v3");
  }
}
static Arrange_To_Call_Me vaD_B_S(Test_aD_B_S, "aD_B_S", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_Uc()
{
  {
    init_simple_test("aD_B_Uc");
    aD_B_Uc lv;
    check2(sizeof(lv), 10, "sizeof(aD_B_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_Uc)");
    check_field_offset(lv, v1, 0, "aD_B_Uc.v1");
    check_field_offset(lv, v2, 8, "aD_B_Uc.v2");
    check_field_offset(lv, v3, 9, "aD_B_Uc.v3");
  }
}
static Arrange_To_Call_Me vaD_B_Uc(Test_aD_B_Uc, "aD_B_Uc", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_Ui()
{
  {
    init_simple_test("aD_B_Ui");
    aD_B_Ui lv;
    check2(sizeof(lv), 13, "sizeof(aD_B_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_Ui)");
    check_field_offset(lv, v1, 0, "aD_B_Ui.v1");
    check_field_offset(lv, v2, 8, "aD_B_Ui.v2");
    check_field_offset(lv, v3, 9, "aD_B_Ui.v3");
  }
}
static Arrange_To_Call_Me vaD_B_Ui(Test_aD_B_Ui, "aD_B_Ui", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_Ul()
{
  {
    init_simple_test("aD_B_Ul");
    aD_B_Ul lv;
    check2(sizeof(lv), 17, "sizeof(aD_B_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_Ul)");
    check_field_offset(lv, v1, 0, "aD_B_Ul.v1");
    check_field_offset(lv, v2, 8, "aD_B_Ul.v2");
    check_field_offset(lv, v3, 9, "aD_B_Ul.v3");
  }
}
static Arrange_To_Call_Me vaD_B_Ul(Test_aD_B_Ul, "aD_B_Ul", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_Us()
{
  {
    init_simple_test("aD_B_Us");
    aD_B_Us lv;
    check2(sizeof(lv), 11, "sizeof(aD_B_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_Us)");
    check_field_offset(lv, v1, 0, "aD_B_Us.v1");
    check_field_offset(lv, v2, 8, "aD_B_Us.v2");
    check_field_offset(lv, v3, 9, "aD_B_Us.v3");
  }
}
static Arrange_To_Call_Me vaD_B_Us(Test_aD_B_Us, "aD_B_Us", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_B_Vp()
{
  {
    init_simple_test("aD_B_Vp");
    aD_B_Vp lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aD_B_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aD_B_Vp)");
    check_field_offset(lv, v1, 0, "aD_B_Vp.v1");
    check_field_offset(lv, v2, 8, "aD_B_Vp.v2");
    check_field_offset(lv, v3, 9, "aD_B_Vp.v3");
  }
}
static Arrange_To_Call_Me vaD_B_Vp(Test_aD_B_Vp, "aD_B_Vp", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_BFu15i_B()
{
  {
    init_simple_test("aD_BFu15i_B");
    static aD_BFu15i_B lv;
    check2(sizeof(lv), 11, "sizeof(aD_BFu15i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_BFu15i_B)");
    check_field_offset(lv, v1, 0, "aD_BFu15i_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "aD_BFu15i_B");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "aD_BFu15i_B");
    check_field_offset(lv, v3, 10, "aD_BFu15i_B.v3");
  }
}
static Arrange_To_Call_Me vaD_BFu15i_B(Test_aD_BFu15i_B, "aD_BFu15i_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_BFu15ll_B()
{
  {
    init_simple_test("aD_BFu15ll_B");
    static aD_BFu15ll_B lv;
    check2(sizeof(lv), 11, "sizeof(aD_BFu15ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_BFu15ll_B)");
    check_field_offset(lv, v1, 0, "aD_BFu15ll_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "aD_BFu15ll_B");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "aD_BFu15ll_B");
    check_field_offset(lv, v3, 10, "aD_BFu15ll_B.v3");
  }
}
static Arrange_To_Call_Me vaD_BFu15ll_B(Test_aD_BFu15ll_B, "aD_BFu15ll_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_BFu15s_B()
{
  {
    init_simple_test("aD_BFu15s_B");
    static aD_BFu15s_B lv;
    check2(sizeof(lv), 11, "sizeof(aD_BFu15s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_BFu15s_B)");
    check_field_offset(lv, v1, 0, "aD_BFu15s_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "aD_BFu15s_B");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "aD_BFu15s_B");
    check_field_offset(lv, v3, 10, "aD_BFu15s_B.v3");
  }
}
static Arrange_To_Call_Me vaD_BFu15s_B(Test_aD_BFu15s_B, "aD_BFu15s_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_BFu16i_B()
{
  {
    init_simple_test("aD_BFu16i_B");
    static aD_BFu16i_B lv;
    check2(sizeof(lv), 11, "sizeof(aD_BFu16i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_BFu16i_B)");
    check_field_offset(lv, v1, 0, "aD_BFu16i_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "aD_BFu16i_B");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "aD_BFu16i_B");
    check_field_offset(lv, v3, 10, "aD_BFu16i_B.v3");
  }
}
static Arrange_To_Call_Me vaD_BFu16i_B(Test_aD_BFu16i_B, "aD_BFu16i_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_BFu16ll_B()
{
  {
    init_simple_test("aD_BFu16ll_B");
    static aD_BFu16ll_B lv;
    check2(sizeof(lv), 11, "sizeof(aD_BFu16ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_BFu16ll_B)");
    check_field_offset(lv, v1, 0, "aD_BFu16ll_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "aD_BFu16ll_B");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "aD_BFu16ll_B");
    check_field_offset(lv, v3, 10, "aD_BFu16ll_B.v3");
  }
}
static Arrange_To_Call_Me vaD_BFu16ll_B(Test_aD_BFu16ll_B, "aD_BFu16ll_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_BFu16s_B()
{
  {
    init_simple_test("aD_BFu16s_B");
    static aD_BFu16s_B lv;
    check2(sizeof(lv), 11, "sizeof(aD_BFu16s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_BFu16s_B)");
    check_field_offset(lv, v1, 0, "aD_BFu16s_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "aD_BFu16s_B");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "aD_BFu16s_B");
    check_field_offset(lv, v3, 10, "aD_BFu16s_B.v3");
  }
}
static Arrange_To_Call_Me vaD_BFu16s_B(Test_aD_BFu16s_B, "aD_BFu16s_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_BFu17i_B()
{
  {
    init_simple_test("aD_BFu17i_B");
    static aD_BFu17i_B lv;
    check2(sizeof(lv), 12, "sizeof(aD_BFu17i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_BFu17i_B)");
    check_field_offset(lv, v1, 0, "aD_BFu17i_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "aD_BFu17i_B");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "aD_BFu17i_B");
    check_field_offset(lv, v3, 11, "aD_BFu17i_B.v3");
  }
}
static Arrange_To_Call_Me vaD_BFu17i_B(Test_aD_BFu17i_B, "aD_BFu17i_B", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_BFu17ll_B()
{
  {
    init_simple_test("aD_BFu17ll_B");
    static aD_BFu17ll_B lv;
    check2(sizeof(lv), 12, "sizeof(aD_BFu17ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_BFu17ll_B)");
    check_field_offset(lv, v1, 0, "aD_BFu17ll_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "aD_BFu17ll_B");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "aD_BFu17ll_B");
    check_field_offset(lv, v3, 11, "aD_BFu17ll_B.v3");
  }
}
static Arrange_To_Call_Me vaD_BFu17ll_B(Test_aD_BFu17ll_B, "aD_BFu17ll_B", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_BFu1c_B()
{
  {
    init_simple_test("aD_BFu1c_B");
    static aD_BFu1c_B lv;
    check2(sizeof(lv), 10, "sizeof(aD_BFu1c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_BFu1c_B)");
    check_field_offset(lv, v1, 0, "aD_BFu1c_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "aD_BFu1c_B");
    check_field_offset(lv, v3, 9, "aD_BFu1c_B.v3");
  }
}
static Arrange_To_Call_Me vaD_BFu1c_B(Test_aD_BFu1c_B, "aD_BFu1c_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_BFu1i_B()
{
  {
    init_simple_test("aD_BFu1i_B");
    static aD_BFu1i_B lv;
    check2(sizeof(lv), 10, "sizeof(aD_BFu1i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_BFu1i_B)");
    check_field_offset(lv, v1, 0, "aD_BFu1i_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "aD_BFu1i_B");
    check_field_offset(lv, v3, 9, "aD_BFu1i_B.v3");
  }
}
static Arrange_To_Call_Me vaD_BFu1i_B(Test_aD_BFu1i_B, "aD_BFu1i_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_BFu1ll_B()
{
  {
    init_simple_test("aD_BFu1ll_B");
    static aD_BFu1ll_B lv;
    check2(sizeof(lv), 10, "sizeof(aD_BFu1ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_BFu1ll_B)");
    check_field_offset(lv, v1, 0, "aD_BFu1ll_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "aD_BFu1ll_B");
    check_field_offset(lv, v3, 9, "aD_BFu1ll_B.v3");
  }
}
static Arrange_To_Call_Me vaD_BFu1ll_B(Test_aD_BFu1ll_B, "aD_BFu1ll_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_BFu1s_B()
{
  {
    init_simple_test("aD_BFu1s_B");
    static aD_BFu1s_B lv;
    check2(sizeof(lv), 10, "sizeof(aD_BFu1s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_BFu1s_B)");
    check_field_offset(lv, v1, 0, "aD_BFu1s_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "aD_BFu1s_B");
    check_field_offset(lv, v3, 9, "aD_BFu1s_B.v3");
  }
}
static Arrange_To_Call_Me vaD_BFu1s_B(Test_aD_BFu1s_B, "aD_BFu1s_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_BFu31i_B()
{
  {
    init_simple_test("aD_BFu31i_B");
    static aD_BFu31i_B lv;
    check2(sizeof(lv), 13, "sizeof(aD_BFu31i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_BFu31i_B)");
    check_field_offset(lv, v1, 0, "aD_BFu31i_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "aD_BFu31i_B");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "aD_BFu31i_B");
    check_field_offset(lv, v3, 12, "aD_BFu31i_B.v3");
  }
}
static Arrange_To_Call_Me vaD_BFu31i_B(Test_aD_BFu31i_B, "aD_BFu31i_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_BFu31ll_B()
{
  {
    init_simple_test("aD_BFu31ll_B");
    static aD_BFu31ll_B lv;
    check2(sizeof(lv), 13, "sizeof(aD_BFu31ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_BFu31ll_B)");
    check_field_offset(lv, v1, 0, "aD_BFu31ll_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "aD_BFu31ll_B");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "aD_BFu31ll_B");
    check_field_offset(lv, v3, 12, "aD_BFu31ll_B.v3");
  }
}
static Arrange_To_Call_Me vaD_BFu31ll_B(Test_aD_BFu31ll_B, "aD_BFu31ll_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_BFu32i_B()
{
  {
    init_simple_test("aD_BFu32i_B");
    static aD_BFu32i_B lv;
    check2(sizeof(lv), 13, "sizeof(aD_BFu32i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_BFu32i_B)");
    check_field_offset(lv, v1, 0, "aD_BFu32i_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "aD_BFu32i_B");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "aD_BFu32i_B");
    check_field_offset(lv, v3, 12, "aD_BFu32i_B.v3");
  }
}
static Arrange_To_Call_Me vaD_BFu32i_B(Test_aD_BFu32i_B, "aD_BFu32i_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_BFu32ll_B()
{
  {
    init_simple_test("aD_BFu32ll_B");
    static aD_BFu32ll_B lv;
    check2(sizeof(lv), 13, "sizeof(aD_BFu32ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_BFu32ll_B)");
    check_field_offset(lv, v1, 0, "aD_BFu32ll_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "aD_BFu32ll_B");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "aD_BFu32ll_B");
    check_field_offset(lv, v3, 12, "aD_BFu32ll_B.v3");
  }
}
static Arrange_To_Call_Me vaD_BFu32ll_B(Test_aD_BFu32ll_B, "aD_BFu32ll_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_BFu33_B()
{
  {
    init_simple_test("aD_BFu33_B");
    static aD_BFu33_B lv;
    check2(sizeof(lv), 14, "sizeof(aD_BFu33_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_BFu33_B)");
    check_field_offset(lv, v1, 0, "aD_BFu33_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 33, 1, "aD_BFu33_B");
    set_bf_and_test(lv, v2, 8, 0, 33, hide_ull(1LL<<32), "aD_BFu33_B");
    check_field_offset(lv, v3, 13, "aD_BFu33_B.v3");
  }
}
static Arrange_To_Call_Me vaD_BFu33_B(Test_aD_BFu33_B, "aD_BFu33_B", 14);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_BFu7c_B()
{
  {
    init_simple_test("aD_BFu7c_B");
    static aD_BFu7c_B lv;
    check2(sizeof(lv), 10, "sizeof(aD_BFu7c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_BFu7c_B)");
    check_field_offset(lv, v1, 0, "aD_BFu7c_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "aD_BFu7c_B");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "aD_BFu7c_B");
    check_field_offset(lv, v3, 9, "aD_BFu7c_B.v3");
  }
}
static Arrange_To_Call_Me vaD_BFu7c_B(Test_aD_BFu7c_B, "aD_BFu7c_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_BFu7i_B()
{
  {
    init_simple_test("aD_BFu7i_B");
    static aD_BFu7i_B lv;
    check2(sizeof(lv), 10, "sizeof(aD_BFu7i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_BFu7i_B)");
    check_field_offset(lv, v1, 0, "aD_BFu7i_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "aD_BFu7i_B");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "aD_BFu7i_B");
    check_field_offset(lv, v3, 9, "aD_BFu7i_B.v3");
  }
}
static Arrange_To_Call_Me vaD_BFu7i_B(Test_aD_BFu7i_B, "aD_BFu7i_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_BFu7ll_B()
{
  {
    init_simple_test("aD_BFu7ll_B");
    static aD_BFu7ll_B lv;
    check2(sizeof(lv), 10, "sizeof(aD_BFu7ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_BFu7ll_B)");
    check_field_offset(lv, v1, 0, "aD_BFu7ll_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "aD_BFu7ll_B");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "aD_BFu7ll_B");
    check_field_offset(lv, v3, 9, "aD_BFu7ll_B.v3");
  }
}
static Arrange_To_Call_Me vaD_BFu7ll_B(Test_aD_BFu7ll_B, "aD_BFu7ll_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_BFu7s_B()
{
  {
    init_simple_test("aD_BFu7s_B");
    static aD_BFu7s_B lv;
    check2(sizeof(lv), 10, "sizeof(aD_BFu7s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_BFu7s_B)");
    check_field_offset(lv, v1, 0, "aD_BFu7s_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "aD_BFu7s_B");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "aD_BFu7s_B");
    check_field_offset(lv, v3, 9, "aD_BFu7s_B.v3");
  }
}
static Arrange_To_Call_Me vaD_BFu7s_B(Test_aD_BFu7s_B, "aD_BFu7s_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_BFu8c_B()
{
  {
    init_simple_test("aD_BFu8c_B");
    static aD_BFu8c_B lv;
    check2(sizeof(lv), 10, "sizeof(aD_BFu8c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_BFu8c_B)");
    check_field_offset(lv, v1, 0, "aD_BFu8c_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "aD_BFu8c_B");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "aD_BFu8c_B");
    check_field_offset(lv, v3, 9, "aD_BFu8c_B.v3");
  }
}
static Arrange_To_Call_Me vaD_BFu8c_B(Test_aD_BFu8c_B, "aD_BFu8c_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_BFu8i_B()
{
  {
    init_simple_test("aD_BFu8i_B");
    static aD_BFu8i_B lv;
    check2(sizeof(lv), 10, "sizeof(aD_BFu8i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_BFu8i_B)");
    check_field_offset(lv, v1, 0, "aD_BFu8i_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "aD_BFu8i_B");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "aD_BFu8i_B");
    check_field_offset(lv, v3, 9, "aD_BFu8i_B.v3");
  }
}
static Arrange_To_Call_Me vaD_BFu8i_B(Test_aD_BFu8i_B, "aD_BFu8i_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_BFu8ll_B()
{
  {
    init_simple_test("aD_BFu8ll_B");
    static aD_BFu8ll_B lv;
    check2(sizeof(lv), 10, "sizeof(aD_BFu8ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_BFu8ll_B)");
    check_field_offset(lv, v1, 0, "aD_BFu8ll_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "aD_BFu8ll_B");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "aD_BFu8ll_B");
    check_field_offset(lv, v3, 9, "aD_BFu8ll_B.v3");
  }
}
static Arrange_To_Call_Me vaD_BFu8ll_B(Test_aD_BFu8ll_B, "aD_BFu8ll_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_BFu8s_B()
{
  {
    init_simple_test("aD_BFu8s_B");
    static aD_BFu8s_B lv;
    check2(sizeof(lv), 10, "sizeof(aD_BFu8s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_BFu8s_B)");
    check_field_offset(lv, v1, 0, "aD_BFu8s_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "aD_BFu8s_B");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "aD_BFu8s_B");
    check_field_offset(lv, v3, 9, "aD_BFu8s_B.v3");
  }
}
static Arrange_To_Call_Me vaD_BFu8s_B(Test_aD_BFu8s_B, "aD_BFu8s_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_BFu9i_B()
{
  {
    init_simple_test("aD_BFu9i_B");
    static aD_BFu9i_B lv;
    check2(sizeof(lv), 11, "sizeof(aD_BFu9i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_BFu9i_B)");
    check_field_offset(lv, v1, 0, "aD_BFu9i_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "aD_BFu9i_B");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "aD_BFu9i_B");
    check_field_offset(lv, v3, 10, "aD_BFu9i_B.v3");
  }
}
static Arrange_To_Call_Me vaD_BFu9i_B(Test_aD_BFu9i_B, "aD_BFu9i_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_BFu9ll_B()
{
  {
    init_simple_test("aD_BFu9ll_B");
    static aD_BFu9ll_B lv;
    check2(sizeof(lv), 11, "sizeof(aD_BFu9ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_BFu9ll_B)");
    check_field_offset(lv, v1, 0, "aD_BFu9ll_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "aD_BFu9ll_B");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "aD_BFu9ll_B");
    check_field_offset(lv, v3, 10, "aD_BFu9ll_B.v3");
  }
}
static Arrange_To_Call_Me vaD_BFu9ll_B(Test_aD_BFu9ll_B, "aD_BFu9ll_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_BFu9s_B()
{
  {
    init_simple_test("aD_BFu9s_B");
    static aD_BFu9s_B lv;
    check2(sizeof(lv), 11, "sizeof(aD_BFu9s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_BFu9s_B)");
    check_field_offset(lv, v1, 0, "aD_BFu9s_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "aD_BFu9s_B");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "aD_BFu9s_B");
    check_field_offset(lv, v3, 10, "aD_BFu9s_B.v3");
  }
}
static Arrange_To_Call_Me vaD_BFu9s_B(Test_aD_BFu9s_B, "aD_BFu9s_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_C_B()
{
  {
    init_simple_test("aD_C_B");
    aD_C_B lv;
    check2(sizeof(lv), 10, "sizeof(aD_C_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_C_B)");
    check_field_offset(lv, v1, 0, "aD_C_B.v1");
    check_field_offset(lv, v2, 8, "aD_C_B.v2");
    check_field_offset(lv, v3, 9, "aD_C_B.v3");
  }
}
static Arrange_To_Call_Me vaD_C_B(Test_aD_C_B, "aD_C_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_D_B()
{
  {
    init_simple_test("aD_D_B");
    aD_D_B lv;
    check2(sizeof(lv), 17, "sizeof(aD_D_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_D_B)");
    check_field_offset(lv, v1, 0, "aD_D_B.v1");
    check_field_offset(lv, v2, 8, "aD_D_B.v2");
    check_field_offset(lv, v3, 16, "aD_D_B.v3");
  }
}
static Arrange_To_Call_Me vaD_D_B(Test_aD_D_B, "aD_D_B", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_F_B()
{
  {
    init_simple_test("aD_F_B");
    aD_F_B lv;
    check2(sizeof(lv), 13, "sizeof(aD_F_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_F_B)");
    check_field_offset(lv, v1, 0, "aD_F_B.v1");
    check_field_offset(lv, v2, 8, "aD_F_B.v2");
    check_field_offset(lv, v3, 12, "aD_F_B.v3");
  }
}
static Arrange_To_Call_Me vaD_F_B(Test_aD_F_B, "aD_F_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_I_B()
{
  {
    init_simple_test("aD_I_B");
    aD_I_B lv;
    check2(sizeof(lv), 13, "sizeof(aD_I_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_I_B)");
    check_field_offset(lv, v1, 0, "aD_I_B.v1");
    check_field_offset(lv, v2, 8, "aD_I_B.v2");
    check_field_offset(lv, v3, 12, "aD_I_B.v3");
  }
}
static Arrange_To_Call_Me vaD_I_B(Test_aD_I_B, "aD_I_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_Ip_B()
{
  {
    init_simple_test("aD_Ip_B");
    aD_Ip_B lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aD_Ip_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_Ip_B)");
    check_field_offset(lv, v1, 0, "aD_Ip_B.v1");
    check_field_offset(lv, v2, 8, "aD_Ip_B.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "aD_Ip_B.v3");
  }
}
static Arrange_To_Call_Me vaD_Ip_B(Test_aD_Ip_B, "aD_Ip_B", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_L_B()
{
  {
    init_simple_test("aD_L_B");
    aD_L_B lv;
    check2(sizeof(lv), 17, "sizeof(aD_L_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_L_B)");
    check_field_offset(lv, v1, 0, "aD_L_B.v1");
    check_field_offset(lv, v2, 8, "aD_L_B.v2");
    check_field_offset(lv, v3, 16, "aD_L_B.v3");
  }
}
static Arrange_To_Call_Me vaD_L_B(Test_aD_L_B, "aD_L_B", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_S_B()
{
  {
    init_simple_test("aD_S_B");
    aD_S_B lv;
    check2(sizeof(lv), 11, "sizeof(aD_S_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_S_B)");
    check_field_offset(lv, v1, 0, "aD_S_B.v1");
    check_field_offset(lv, v2, 8, "aD_S_B.v2");
    check_field_offset(lv, v3, 10, "aD_S_B.v3");
  }
}
static Arrange_To_Call_Me vaD_S_B(Test_aD_S_B, "aD_S_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_Uc_B()
{
  {
    init_simple_test("aD_Uc_B");
    aD_Uc_B lv;
    check2(sizeof(lv), 10, "sizeof(aD_Uc_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_Uc_B)");
    check_field_offset(lv, v1, 0, "aD_Uc_B.v1");
    check_field_offset(lv, v2, 8, "aD_Uc_B.v2");
    check_field_offset(lv, v3, 9, "aD_Uc_B.v3");
  }
}
static Arrange_To_Call_Me vaD_Uc_B(Test_aD_Uc_B, "aD_Uc_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_Ui_B()
{
  {
    init_simple_test("aD_Ui_B");
    aD_Ui_B lv;
    check2(sizeof(lv), 13, "sizeof(aD_Ui_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_Ui_B)");
    check_field_offset(lv, v1, 0, "aD_Ui_B.v1");
    check_field_offset(lv, v2, 8, "aD_Ui_B.v2");
    check_field_offset(lv, v3, 12, "aD_Ui_B.v3");
  }
}
static Arrange_To_Call_Me vaD_Ui_B(Test_aD_Ui_B, "aD_Ui_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_Ul_B()
{
  {
    init_simple_test("aD_Ul_B");
    aD_Ul_B lv;
    check2(sizeof(lv), 17, "sizeof(aD_Ul_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_Ul_B)");
    check_field_offset(lv, v1, 0, "aD_Ul_B.v1");
    check_field_offset(lv, v2, 8, "aD_Ul_B.v2");
    check_field_offset(lv, v3, 16, "aD_Ul_B.v3");
  }
}
static Arrange_To_Call_Me vaD_Ul_B(Test_aD_Ul_B, "aD_Ul_B", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_Us_B()
{
  {
    init_simple_test("aD_Us_B");
    aD_Us_B lv;
    check2(sizeof(lv), 11, "sizeof(aD_Us_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_Us_B)");
    check_field_offset(lv, v1, 0, "aD_Us_B.v1");
    check_field_offset(lv, v2, 8, "aD_Us_B.v2");
    check_field_offset(lv, v3, 10, "aD_Us_B.v3");
  }
}
static Arrange_To_Call_Me vaD_Us_B(Test_aD_Us_B, "aD_Us_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aD_Vp_B()
{
  {
    init_simple_test("aD_Vp_B");
    aD_Vp_B lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aD_Vp_B)");
    check2(__alignof__(lv), 1, "__alignof__(aD_Vp_B)");
    check_field_offset(lv, v1, 0, "aD_Vp_B.v1");
    check_field_offset(lv, v2, 8, "aD_Vp_B.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "aD_Vp_B.v3");
  }
}
static Arrange_To_Call_Me vaD_Vp_B(Test_aD_Vp_B, "aD_Vp_B", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B()
{
  {
    init_simple_test("aF_B");
    aF_B lv;
    check2(sizeof(lv), 5, "sizeof(aF_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B)");
    check_field_offset(lv, v1, 0, "aF_B.v1");
    check_field_offset(lv, v2, 4, "aF_B.v2");
  }
}
static Arrange_To_Call_Me vaF_B(Test_aF_B, "aF_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_B()
{
  {
    init_simple_test("aF_B_B");
    aF_B_B lv;
    check2(sizeof(lv), 6, "sizeof(aF_B_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_B)");
    check_field_offset(lv, v1, 0, "aF_B_B.v1");
    check_field_offset(lv, v2, 4, "aF_B_B.v2");
    check_field_offset(lv, v3, 5, "aF_B_B.v3");
  }
}
static Arrange_To_Call_Me vaF_B_B(Test_aF_B_B, "aF_B_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_BFu15i()
{
  {
    init_simple_test("aF_B_BFu15i");
    static aF_B_BFu15i lv;
    check2(sizeof(lv), 7, "sizeof(aF_B_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_BFu15i)");
    check_field_offset(lv, v1, 0, "aF_B_BFu15i.v1");
    check_field_offset(lv, v2, 4, "aF_B_BFu15i.v2");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aF_B_BFu15i");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aF_B_BFu15i");
  }
}
static Arrange_To_Call_Me vaF_B_BFu15i(Test_aF_B_BFu15i, "aF_B_BFu15i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_BFu15ll()
{
  {
    init_simple_test("aF_B_BFu15ll");
    static aF_B_BFu15ll lv;
    check2(sizeof(lv), 7, "sizeof(aF_B_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_BFu15ll)");
    check_field_offset(lv, v1, 0, "aF_B_BFu15ll.v1");
    check_field_offset(lv, v2, 4, "aF_B_BFu15ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aF_B_BFu15ll");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aF_B_BFu15ll");
  }
}
static Arrange_To_Call_Me vaF_B_BFu15ll(Test_aF_B_BFu15ll, "aF_B_BFu15ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_BFu15s()
{
  {
    init_simple_test("aF_B_BFu15s");
    static aF_B_BFu15s lv;
    check2(sizeof(lv), 7, "sizeof(aF_B_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_BFu15s)");
    check_field_offset(lv, v1, 0, "aF_B_BFu15s.v1");
    check_field_offset(lv, v2, 4, "aF_B_BFu15s.v2");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aF_B_BFu15s");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aF_B_BFu15s");
  }
}
static Arrange_To_Call_Me vaF_B_BFu15s(Test_aF_B_BFu15s, "aF_B_BFu15s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_BFu16i()
{
  {
    init_simple_test("aF_B_BFu16i");
    static aF_B_BFu16i lv;
    check2(sizeof(lv), 7, "sizeof(aF_B_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_BFu16i)");
    check_field_offset(lv, v1, 0, "aF_B_BFu16i.v1");
    check_field_offset(lv, v2, 4, "aF_B_BFu16i.v2");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aF_B_BFu16i");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aF_B_BFu16i");
  }
}
static Arrange_To_Call_Me vaF_B_BFu16i(Test_aF_B_BFu16i, "aF_B_BFu16i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_BFu16ll()
{
  {
    init_simple_test("aF_B_BFu16ll");
    static aF_B_BFu16ll lv;
    check2(sizeof(lv), 7, "sizeof(aF_B_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_BFu16ll)");
    check_field_offset(lv, v1, 0, "aF_B_BFu16ll.v1");
    check_field_offset(lv, v2, 4, "aF_B_BFu16ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aF_B_BFu16ll");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aF_B_BFu16ll");
  }
}
static Arrange_To_Call_Me vaF_B_BFu16ll(Test_aF_B_BFu16ll, "aF_B_BFu16ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_BFu16s()
{
  {
    init_simple_test("aF_B_BFu16s");
    static aF_B_BFu16s lv;
    check2(sizeof(lv), 7, "sizeof(aF_B_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_BFu16s)");
    check_field_offset(lv, v1, 0, "aF_B_BFu16s.v1");
    check_field_offset(lv, v2, 4, "aF_B_BFu16s.v2");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aF_B_BFu16s");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aF_B_BFu16s");
  }
}
static Arrange_To_Call_Me vaF_B_BFu16s(Test_aF_B_BFu16s, "aF_B_BFu16s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_BFu17i()
{
  {
    init_simple_test("aF_B_BFu17i");
    static aF_B_BFu17i lv;
    check2(sizeof(lv), 8, "sizeof(aF_B_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_BFu17i)");
    check_field_offset(lv, v1, 0, "aF_B_BFu17i.v1");
    check_field_offset(lv, v2, 4, "aF_B_BFu17i.v2");
    set_bf_and_test(lv, v3, 5, 0, 17, 1, "aF_B_BFu17i");
    set_bf_and_test(lv, v3, 5, 0, 17, hide_ull(1LL<<16), "aF_B_BFu17i");
  }
}
static Arrange_To_Call_Me vaF_B_BFu17i(Test_aF_B_BFu17i, "aF_B_BFu17i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_BFu17ll()
{
  {
    init_simple_test("aF_B_BFu17ll");
    static aF_B_BFu17ll lv;
    check2(sizeof(lv), 8, "sizeof(aF_B_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_BFu17ll)");
    check_field_offset(lv, v1, 0, "aF_B_BFu17ll.v1");
    check_field_offset(lv, v2, 4, "aF_B_BFu17ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 17, 1, "aF_B_BFu17ll");
    set_bf_and_test(lv, v3, 5, 0, 17, hide_ull(1LL<<16), "aF_B_BFu17ll");
  }
}
static Arrange_To_Call_Me vaF_B_BFu17ll(Test_aF_B_BFu17ll, "aF_B_BFu17ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_BFu1c()
{
  {
    init_simple_test("aF_B_BFu1c");
    static aF_B_BFu1c lv;
    check2(sizeof(lv), 6, "sizeof(aF_B_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_BFu1c)");
    check_field_offset(lv, v1, 0, "aF_B_BFu1c.v1");
    check_field_offset(lv, v2, 4, "aF_B_BFu1c.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aF_B_BFu1c");
  }
}
static Arrange_To_Call_Me vaF_B_BFu1c(Test_aF_B_BFu1c, "aF_B_BFu1c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_BFu1i()
{
  {
    init_simple_test("aF_B_BFu1i");
    static aF_B_BFu1i lv;
    check2(sizeof(lv), 6, "sizeof(aF_B_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_BFu1i)");
    check_field_offset(lv, v1, 0, "aF_B_BFu1i.v1");
    check_field_offset(lv, v2, 4, "aF_B_BFu1i.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aF_B_BFu1i");
  }
}
static Arrange_To_Call_Me vaF_B_BFu1i(Test_aF_B_BFu1i, "aF_B_BFu1i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_BFu1ll()
{
  {
    init_simple_test("aF_B_BFu1ll");
    static aF_B_BFu1ll lv;
    check2(sizeof(lv), 6, "sizeof(aF_B_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_BFu1ll)");
    check_field_offset(lv, v1, 0, "aF_B_BFu1ll.v1");
    check_field_offset(lv, v2, 4, "aF_B_BFu1ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aF_B_BFu1ll");
  }
}
static Arrange_To_Call_Me vaF_B_BFu1ll(Test_aF_B_BFu1ll, "aF_B_BFu1ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_BFu1s()
{
  {
    init_simple_test("aF_B_BFu1s");
    static aF_B_BFu1s lv;
    check2(sizeof(lv), 6, "sizeof(aF_B_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_BFu1s)");
    check_field_offset(lv, v1, 0, "aF_B_BFu1s.v1");
    check_field_offset(lv, v2, 4, "aF_B_BFu1s.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aF_B_BFu1s");
  }
}
static Arrange_To_Call_Me vaF_B_BFu1s(Test_aF_B_BFu1s, "aF_B_BFu1s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_BFu31i()
{
  {
    init_simple_test("aF_B_BFu31i");
    static aF_B_BFu31i lv;
    check2(sizeof(lv), 9, "sizeof(aF_B_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_BFu31i)");
    check_field_offset(lv, v1, 0, "aF_B_BFu31i.v1");
    check_field_offset(lv, v2, 4, "aF_B_BFu31i.v2");
    set_bf_and_test(lv, v3, 5, 0, 31, 1, "aF_B_BFu31i");
    set_bf_and_test(lv, v3, 5, 0, 31, hide_ull(1LL<<30), "aF_B_BFu31i");
  }
}
static Arrange_To_Call_Me vaF_B_BFu31i(Test_aF_B_BFu31i, "aF_B_BFu31i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_BFu31ll()
{
  {
    init_simple_test("aF_B_BFu31ll");
    static aF_B_BFu31ll lv;
    check2(sizeof(lv), 9, "sizeof(aF_B_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_BFu31ll)");
    check_field_offset(lv, v1, 0, "aF_B_BFu31ll.v1");
    check_field_offset(lv, v2, 4, "aF_B_BFu31ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 31, 1, "aF_B_BFu31ll");
    set_bf_and_test(lv, v3, 5, 0, 31, hide_ull(1LL<<30), "aF_B_BFu31ll");
  }
}
static Arrange_To_Call_Me vaF_B_BFu31ll(Test_aF_B_BFu31ll, "aF_B_BFu31ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_BFu32i()
{
  {
    init_simple_test("aF_B_BFu32i");
    static aF_B_BFu32i lv;
    check2(sizeof(lv), 9, "sizeof(aF_B_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_BFu32i)");
    check_field_offset(lv, v1, 0, "aF_B_BFu32i.v1");
    check_field_offset(lv, v2, 4, "aF_B_BFu32i.v2");
    set_bf_and_test(lv, v3, 5, 0, 32, 1, "aF_B_BFu32i");
    set_bf_and_test(lv, v3, 5, 0, 32, hide_ull(1LL<<31), "aF_B_BFu32i");
  }
}
static Arrange_To_Call_Me vaF_B_BFu32i(Test_aF_B_BFu32i, "aF_B_BFu32i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_BFu32ll()
{
  {
    init_simple_test("aF_B_BFu32ll");
    static aF_B_BFu32ll lv;
    check2(sizeof(lv), 9, "sizeof(aF_B_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_BFu32ll)");
    check_field_offset(lv, v1, 0, "aF_B_BFu32ll.v1");
    check_field_offset(lv, v2, 4, "aF_B_BFu32ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 32, 1, "aF_B_BFu32ll");
    set_bf_and_test(lv, v3, 5, 0, 32, hide_ull(1LL<<31), "aF_B_BFu32ll");
  }
}
static Arrange_To_Call_Me vaF_B_BFu32ll(Test_aF_B_BFu32ll, "aF_B_BFu32ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_BFu33()
{
  {
    init_simple_test("aF_B_BFu33");
    static aF_B_BFu33 lv;
    check2(sizeof(lv), 10, "sizeof(aF_B_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_BFu33)");
    check_field_offset(lv, v1, 0, "aF_B_BFu33.v1");
    check_field_offset(lv, v2, 4, "aF_B_BFu33.v2");
    set_bf_and_test(lv, v3, 5, 0, 33, 1, "aF_B_BFu33");
    set_bf_and_test(lv, v3, 5, 0, 33, hide_ull(1LL<<32), "aF_B_BFu33");
  }
}
static Arrange_To_Call_Me vaF_B_BFu33(Test_aF_B_BFu33, "aF_B_BFu33", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_BFu7c()
{
  {
    init_simple_test("aF_B_BFu7c");
    static aF_B_BFu7c lv;
    check2(sizeof(lv), 6, "sizeof(aF_B_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_BFu7c)");
    check_field_offset(lv, v1, 0, "aF_B_BFu7c.v1");
    check_field_offset(lv, v2, 4, "aF_B_BFu7c.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aF_B_BFu7c");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aF_B_BFu7c");
  }
}
static Arrange_To_Call_Me vaF_B_BFu7c(Test_aF_B_BFu7c, "aF_B_BFu7c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_BFu7i()
{
  {
    init_simple_test("aF_B_BFu7i");
    static aF_B_BFu7i lv;
    check2(sizeof(lv), 6, "sizeof(aF_B_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_BFu7i)");
    check_field_offset(lv, v1, 0, "aF_B_BFu7i.v1");
    check_field_offset(lv, v2, 4, "aF_B_BFu7i.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aF_B_BFu7i");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aF_B_BFu7i");
  }
}
static Arrange_To_Call_Me vaF_B_BFu7i(Test_aF_B_BFu7i, "aF_B_BFu7i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_BFu7ll()
{
  {
    init_simple_test("aF_B_BFu7ll");
    static aF_B_BFu7ll lv;
    check2(sizeof(lv), 6, "sizeof(aF_B_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_BFu7ll)");
    check_field_offset(lv, v1, 0, "aF_B_BFu7ll.v1");
    check_field_offset(lv, v2, 4, "aF_B_BFu7ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aF_B_BFu7ll");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aF_B_BFu7ll");
  }
}
static Arrange_To_Call_Me vaF_B_BFu7ll(Test_aF_B_BFu7ll, "aF_B_BFu7ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_BFu7s()
{
  {
    init_simple_test("aF_B_BFu7s");
    static aF_B_BFu7s lv;
    check2(sizeof(lv), 6, "sizeof(aF_B_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_BFu7s)");
    check_field_offset(lv, v1, 0, "aF_B_BFu7s.v1");
    check_field_offset(lv, v2, 4, "aF_B_BFu7s.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aF_B_BFu7s");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aF_B_BFu7s");
  }
}
static Arrange_To_Call_Me vaF_B_BFu7s(Test_aF_B_BFu7s, "aF_B_BFu7s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_BFu8c()
{
  {
    init_simple_test("aF_B_BFu8c");
    static aF_B_BFu8c lv;
    check2(sizeof(lv), 6, "sizeof(aF_B_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_BFu8c)");
    check_field_offset(lv, v1, 0, "aF_B_BFu8c.v1");
    check_field_offset(lv, v2, 4, "aF_B_BFu8c.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aF_B_BFu8c");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aF_B_BFu8c");
  }
}
static Arrange_To_Call_Me vaF_B_BFu8c(Test_aF_B_BFu8c, "aF_B_BFu8c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_BFu8i()
{
  {
    init_simple_test("aF_B_BFu8i");
    static aF_B_BFu8i lv;
    check2(sizeof(lv), 6, "sizeof(aF_B_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_BFu8i)");
    check_field_offset(lv, v1, 0, "aF_B_BFu8i.v1");
    check_field_offset(lv, v2, 4, "aF_B_BFu8i.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aF_B_BFu8i");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aF_B_BFu8i");
  }
}
static Arrange_To_Call_Me vaF_B_BFu8i(Test_aF_B_BFu8i, "aF_B_BFu8i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_BFu8ll()
{
  {
    init_simple_test("aF_B_BFu8ll");
    static aF_B_BFu8ll lv;
    check2(sizeof(lv), 6, "sizeof(aF_B_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_BFu8ll)");
    check_field_offset(lv, v1, 0, "aF_B_BFu8ll.v1");
    check_field_offset(lv, v2, 4, "aF_B_BFu8ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aF_B_BFu8ll");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aF_B_BFu8ll");
  }
}
static Arrange_To_Call_Me vaF_B_BFu8ll(Test_aF_B_BFu8ll, "aF_B_BFu8ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_BFu8s()
{
  {
    init_simple_test("aF_B_BFu8s");
    static aF_B_BFu8s lv;
    check2(sizeof(lv), 6, "sizeof(aF_B_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_BFu8s)");
    check_field_offset(lv, v1, 0, "aF_B_BFu8s.v1");
    check_field_offset(lv, v2, 4, "aF_B_BFu8s.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aF_B_BFu8s");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aF_B_BFu8s");
  }
}
static Arrange_To_Call_Me vaF_B_BFu8s(Test_aF_B_BFu8s, "aF_B_BFu8s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_BFu9i()
{
  {
    init_simple_test("aF_B_BFu9i");
    static aF_B_BFu9i lv;
    check2(sizeof(lv), 7, "sizeof(aF_B_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_BFu9i)");
    check_field_offset(lv, v1, 0, "aF_B_BFu9i.v1");
    check_field_offset(lv, v2, 4, "aF_B_BFu9i.v2");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aF_B_BFu9i");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aF_B_BFu9i");
  }
}
static Arrange_To_Call_Me vaF_B_BFu9i(Test_aF_B_BFu9i, "aF_B_BFu9i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_BFu9ll()
{
  {
    init_simple_test("aF_B_BFu9ll");
    static aF_B_BFu9ll lv;
    check2(sizeof(lv), 7, "sizeof(aF_B_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_BFu9ll)");
    check_field_offset(lv, v1, 0, "aF_B_BFu9ll.v1");
    check_field_offset(lv, v2, 4, "aF_B_BFu9ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aF_B_BFu9ll");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aF_B_BFu9ll");
  }
}
static Arrange_To_Call_Me vaF_B_BFu9ll(Test_aF_B_BFu9ll, "aF_B_BFu9ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_BFu9s()
{
  {
    init_simple_test("aF_B_BFu9s");
    static aF_B_BFu9s lv;
    check2(sizeof(lv), 7, "sizeof(aF_B_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_BFu9s)");
    check_field_offset(lv, v1, 0, "aF_B_BFu9s.v1");
    check_field_offset(lv, v2, 4, "aF_B_BFu9s.v2");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aF_B_BFu9s");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aF_B_BFu9s");
  }
}
static Arrange_To_Call_Me vaF_B_BFu9s(Test_aF_B_BFu9s, "aF_B_BFu9s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_C()
{
  {
    init_simple_test("aF_B_C");
    aF_B_C lv;
    check2(sizeof(lv), 6, "sizeof(aF_B_C)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_C)");
    check_field_offset(lv, v1, 0, "aF_B_C.v1");
    check_field_offset(lv, v2, 4, "aF_B_C.v2");
    check_field_offset(lv, v3, 5, "aF_B_C.v3");
  }
}
static Arrange_To_Call_Me vaF_B_C(Test_aF_B_C, "aF_B_C", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_D()
{
  {
    init_simple_test("aF_B_D");
    aF_B_D lv;
    check2(sizeof(lv), 13, "sizeof(aF_B_D)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_D)");
    check_field_offset(lv, v1, 0, "aF_B_D.v1");
    check_field_offset(lv, v2, 4, "aF_B_D.v2");
    check_field_offset(lv, v3, 5, "aF_B_D.v3");
  }
}
static Arrange_To_Call_Me vaF_B_D(Test_aF_B_D, "aF_B_D", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_F()
{
  {
    init_simple_test("aF_B_F");
    aF_B_F lv;
    check2(sizeof(lv), 9, "sizeof(aF_B_F)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_F)");
    check_field_offset(lv, v1, 0, "aF_B_F.v1");
    check_field_offset(lv, v2, 4, "aF_B_F.v2");
    check_field_offset(lv, v3, 5, "aF_B_F.v3");
  }
}
static Arrange_To_Call_Me vaF_B_F(Test_aF_B_F, "aF_B_F", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_I()
{
  {
    init_simple_test("aF_B_I");
    aF_B_I lv;
    check2(sizeof(lv), 9, "sizeof(aF_B_I)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_I)");
    check_field_offset(lv, v1, 0, "aF_B_I.v1");
    check_field_offset(lv, v2, 4, "aF_B_I.v2");
    check_field_offset(lv, v3, 5, "aF_B_I.v3");
  }
}
static Arrange_To_Call_Me vaF_B_I(Test_aF_B_I, "aF_B_I", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_Ip()
{
  {
    init_simple_test("aF_B_Ip");
    aF_B_Ip lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aF_B_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_Ip)");
    check_field_offset(lv, v1, 0, "aF_B_Ip.v1");
    check_field_offset(lv, v2, 4, "aF_B_Ip.v2");
    check_field_offset(lv, v3, 5, "aF_B_Ip.v3");
  }
}
static Arrange_To_Call_Me vaF_B_Ip(Test_aF_B_Ip, "aF_B_Ip", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_L()
{
  {
    init_simple_test("aF_B_L");
    aF_B_L lv;
    check2(sizeof(lv), 13, "sizeof(aF_B_L)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_L)");
    check_field_offset(lv, v1, 0, "aF_B_L.v1");
    check_field_offset(lv, v2, 4, "aF_B_L.v2");
    check_field_offset(lv, v3, 5, "aF_B_L.v3");
  }
}
static Arrange_To_Call_Me vaF_B_L(Test_aF_B_L, "aF_B_L", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_S()
{
  {
    init_simple_test("aF_B_S");
    aF_B_S lv;
    check2(sizeof(lv), 7, "sizeof(aF_B_S)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_S)");
    check_field_offset(lv, v1, 0, "aF_B_S.v1");
    check_field_offset(lv, v2, 4, "aF_B_S.v2");
    check_field_offset(lv, v3, 5, "aF_B_S.v3");
  }
}
static Arrange_To_Call_Me vaF_B_S(Test_aF_B_S, "aF_B_S", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_Uc()
{
  {
    init_simple_test("aF_B_Uc");
    aF_B_Uc lv;
    check2(sizeof(lv), 6, "sizeof(aF_B_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_Uc)");
    check_field_offset(lv, v1, 0, "aF_B_Uc.v1");
    check_field_offset(lv, v2, 4, "aF_B_Uc.v2");
    check_field_offset(lv, v3, 5, "aF_B_Uc.v3");
  }
}
static Arrange_To_Call_Me vaF_B_Uc(Test_aF_B_Uc, "aF_B_Uc", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_Ui()
{
  {
    init_simple_test("aF_B_Ui");
    aF_B_Ui lv;
    check2(sizeof(lv), 9, "sizeof(aF_B_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_Ui)");
    check_field_offset(lv, v1, 0, "aF_B_Ui.v1");
    check_field_offset(lv, v2, 4, "aF_B_Ui.v2");
    check_field_offset(lv, v3, 5, "aF_B_Ui.v3");
  }
}
static Arrange_To_Call_Me vaF_B_Ui(Test_aF_B_Ui, "aF_B_Ui", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_Ul()
{
  {
    init_simple_test("aF_B_Ul");
    aF_B_Ul lv;
    check2(sizeof(lv), 13, "sizeof(aF_B_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_Ul)");
    check_field_offset(lv, v1, 0, "aF_B_Ul.v1");
    check_field_offset(lv, v2, 4, "aF_B_Ul.v2");
    check_field_offset(lv, v3, 5, "aF_B_Ul.v3");
  }
}
static Arrange_To_Call_Me vaF_B_Ul(Test_aF_B_Ul, "aF_B_Ul", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_Us()
{
  {
    init_simple_test("aF_B_Us");
    aF_B_Us lv;
    check2(sizeof(lv), 7, "sizeof(aF_B_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_Us)");
    check_field_offset(lv, v1, 0, "aF_B_Us.v1");
    check_field_offset(lv, v2, 4, "aF_B_Us.v2");
    check_field_offset(lv, v3, 5, "aF_B_Us.v3");
  }
}
static Arrange_To_Call_Me vaF_B_Us(Test_aF_B_Us, "aF_B_Us", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_B_Vp()
{
  {
    init_simple_test("aF_B_Vp");
    aF_B_Vp lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aF_B_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aF_B_Vp)");
    check_field_offset(lv, v1, 0, "aF_B_Vp.v1");
    check_field_offset(lv, v2, 4, "aF_B_Vp.v2");
    check_field_offset(lv, v3, 5, "aF_B_Vp.v3");
  }
}
static Arrange_To_Call_Me vaF_B_Vp(Test_aF_B_Vp, "aF_B_Vp", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_BFu15i_B()
{
  {
    init_simple_test("aF_BFu15i_B");
    static aF_BFu15i_B lv;
    check2(sizeof(lv), 7, "sizeof(aF_BFu15i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_BFu15i_B)");
    check_field_offset(lv, v1, 0, "aF_BFu15i_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aF_BFu15i_B");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aF_BFu15i_B");
    check_field_offset(lv, v3, 6, "aF_BFu15i_B.v3");
  }
}
static Arrange_To_Call_Me vaF_BFu15i_B(Test_aF_BFu15i_B, "aF_BFu15i_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_BFu15ll_B()
{
  {
    init_simple_test("aF_BFu15ll_B");
    static aF_BFu15ll_B lv;
    check2(sizeof(lv), 7, "sizeof(aF_BFu15ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_BFu15ll_B)");
    check_field_offset(lv, v1, 0, "aF_BFu15ll_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aF_BFu15ll_B");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aF_BFu15ll_B");
    check_field_offset(lv, v3, 6, "aF_BFu15ll_B.v3");
  }
}
static Arrange_To_Call_Me vaF_BFu15ll_B(Test_aF_BFu15ll_B, "aF_BFu15ll_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_BFu15s_B()
{
  {
    init_simple_test("aF_BFu15s_B");
    static aF_BFu15s_B lv;
    check2(sizeof(lv), 7, "sizeof(aF_BFu15s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_BFu15s_B)");
    check_field_offset(lv, v1, 0, "aF_BFu15s_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aF_BFu15s_B");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aF_BFu15s_B");
    check_field_offset(lv, v3, 6, "aF_BFu15s_B.v3");
  }
}
static Arrange_To_Call_Me vaF_BFu15s_B(Test_aF_BFu15s_B, "aF_BFu15s_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_BFu16i_B()
{
  {
    init_simple_test("aF_BFu16i_B");
    static aF_BFu16i_B lv;
    check2(sizeof(lv), 7, "sizeof(aF_BFu16i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_BFu16i_B)");
    check_field_offset(lv, v1, 0, "aF_BFu16i_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aF_BFu16i_B");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aF_BFu16i_B");
    check_field_offset(lv, v3, 6, "aF_BFu16i_B.v3");
  }
}
static Arrange_To_Call_Me vaF_BFu16i_B(Test_aF_BFu16i_B, "aF_BFu16i_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_BFu16ll_B()
{
  {
    init_simple_test("aF_BFu16ll_B");
    static aF_BFu16ll_B lv;
    check2(sizeof(lv), 7, "sizeof(aF_BFu16ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_BFu16ll_B)");
    check_field_offset(lv, v1, 0, "aF_BFu16ll_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aF_BFu16ll_B");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aF_BFu16ll_B");
    check_field_offset(lv, v3, 6, "aF_BFu16ll_B.v3");
  }
}
static Arrange_To_Call_Me vaF_BFu16ll_B(Test_aF_BFu16ll_B, "aF_BFu16ll_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_BFu16s_B()
{
  {
    init_simple_test("aF_BFu16s_B");
    static aF_BFu16s_B lv;
    check2(sizeof(lv), 7, "sizeof(aF_BFu16s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_BFu16s_B)");
    check_field_offset(lv, v1, 0, "aF_BFu16s_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aF_BFu16s_B");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aF_BFu16s_B");
    check_field_offset(lv, v3, 6, "aF_BFu16s_B.v3");
  }
}
static Arrange_To_Call_Me vaF_BFu16s_B(Test_aF_BFu16s_B, "aF_BFu16s_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_BFu17i_B()
{
  {
    init_simple_test("aF_BFu17i_B");
    static aF_BFu17i_B lv;
    check2(sizeof(lv), 8, "sizeof(aF_BFu17i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_BFu17i_B)");
    check_field_offset(lv, v1, 0, "aF_BFu17i_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aF_BFu17i_B");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aF_BFu17i_B");
    check_field_offset(lv, v3, 7, "aF_BFu17i_B.v3");
  }
}
static Arrange_To_Call_Me vaF_BFu17i_B(Test_aF_BFu17i_B, "aF_BFu17i_B", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_BFu17ll_B()
{
  {
    init_simple_test("aF_BFu17ll_B");
    static aF_BFu17ll_B lv;
    check2(sizeof(lv), 8, "sizeof(aF_BFu17ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_BFu17ll_B)");
    check_field_offset(lv, v1, 0, "aF_BFu17ll_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aF_BFu17ll_B");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aF_BFu17ll_B");
    check_field_offset(lv, v3, 7, "aF_BFu17ll_B.v3");
  }
}
static Arrange_To_Call_Me vaF_BFu17ll_B(Test_aF_BFu17ll_B, "aF_BFu17ll_B", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_BFu1c_B()
{
  {
    init_simple_test("aF_BFu1c_B");
    static aF_BFu1c_B lv;
    check2(sizeof(lv), 6, "sizeof(aF_BFu1c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_BFu1c_B)");
    check_field_offset(lv, v1, 0, "aF_BFu1c_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aF_BFu1c_B");
    check_field_offset(lv, v3, 5, "aF_BFu1c_B.v3");
  }
}
static Arrange_To_Call_Me vaF_BFu1c_B(Test_aF_BFu1c_B, "aF_BFu1c_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_BFu1i_B()
{
  {
    init_simple_test("aF_BFu1i_B");
    static aF_BFu1i_B lv;
    check2(sizeof(lv), 6, "sizeof(aF_BFu1i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_BFu1i_B)");
    check_field_offset(lv, v1, 0, "aF_BFu1i_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aF_BFu1i_B");
    check_field_offset(lv, v3, 5, "aF_BFu1i_B.v3");
  }
}
static Arrange_To_Call_Me vaF_BFu1i_B(Test_aF_BFu1i_B, "aF_BFu1i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_BFu1ll_B()
{
  {
    init_simple_test("aF_BFu1ll_B");
    static aF_BFu1ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aF_BFu1ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_BFu1ll_B)");
    check_field_offset(lv, v1, 0, "aF_BFu1ll_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aF_BFu1ll_B");
    check_field_offset(lv, v3, 5, "aF_BFu1ll_B.v3");
  }
}
static Arrange_To_Call_Me vaF_BFu1ll_B(Test_aF_BFu1ll_B, "aF_BFu1ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_BFu1s_B()
{
  {
    init_simple_test("aF_BFu1s_B");
    static aF_BFu1s_B lv;
    check2(sizeof(lv), 6, "sizeof(aF_BFu1s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_BFu1s_B)");
    check_field_offset(lv, v1, 0, "aF_BFu1s_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aF_BFu1s_B");
    check_field_offset(lv, v3, 5, "aF_BFu1s_B.v3");
  }
}
static Arrange_To_Call_Me vaF_BFu1s_B(Test_aF_BFu1s_B, "aF_BFu1s_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_BFu31i_B()
{
  {
    init_simple_test("aF_BFu31i_B");
    static aF_BFu31i_B lv;
    check2(sizeof(lv), 9, "sizeof(aF_BFu31i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_BFu31i_B)");
    check_field_offset(lv, v1, 0, "aF_BFu31i_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aF_BFu31i_B");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aF_BFu31i_B");
    check_field_offset(lv, v3, 8, "aF_BFu31i_B.v3");
  }
}
static Arrange_To_Call_Me vaF_BFu31i_B(Test_aF_BFu31i_B, "aF_BFu31i_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_BFu31ll_B()
{
  {
    init_simple_test("aF_BFu31ll_B");
    static aF_BFu31ll_B lv;
    check2(sizeof(lv), 9, "sizeof(aF_BFu31ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_BFu31ll_B)");
    check_field_offset(lv, v1, 0, "aF_BFu31ll_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aF_BFu31ll_B");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aF_BFu31ll_B");
    check_field_offset(lv, v3, 8, "aF_BFu31ll_B.v3");
  }
}
static Arrange_To_Call_Me vaF_BFu31ll_B(Test_aF_BFu31ll_B, "aF_BFu31ll_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_BFu32i_B()
{
  {
    init_simple_test("aF_BFu32i_B");
    static aF_BFu32i_B lv;
    check2(sizeof(lv), 9, "sizeof(aF_BFu32i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_BFu32i_B)");
    check_field_offset(lv, v1, 0, "aF_BFu32i_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aF_BFu32i_B");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aF_BFu32i_B");
    check_field_offset(lv, v3, 8, "aF_BFu32i_B.v3");
  }
}
static Arrange_To_Call_Me vaF_BFu32i_B(Test_aF_BFu32i_B, "aF_BFu32i_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_BFu32ll_B()
{
  {
    init_simple_test("aF_BFu32ll_B");
    static aF_BFu32ll_B lv;
    check2(sizeof(lv), 9, "sizeof(aF_BFu32ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_BFu32ll_B)");
    check_field_offset(lv, v1, 0, "aF_BFu32ll_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aF_BFu32ll_B");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aF_BFu32ll_B");
    check_field_offset(lv, v3, 8, "aF_BFu32ll_B.v3");
  }
}
static Arrange_To_Call_Me vaF_BFu32ll_B(Test_aF_BFu32ll_B, "aF_BFu32ll_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_BFu33_B()
{
  {
    init_simple_test("aF_BFu33_B");
    static aF_BFu33_B lv;
    check2(sizeof(lv), 10, "sizeof(aF_BFu33_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_BFu33_B)");
    check_field_offset(lv, v1, 0, "aF_BFu33_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "aF_BFu33_B");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "aF_BFu33_B");
    check_field_offset(lv, v3, 9, "aF_BFu33_B.v3");
  }
}
static Arrange_To_Call_Me vaF_BFu33_B(Test_aF_BFu33_B, "aF_BFu33_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_BFu7c_B()
{
  {
    init_simple_test("aF_BFu7c_B");
    static aF_BFu7c_B lv;
    check2(sizeof(lv), 6, "sizeof(aF_BFu7c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_BFu7c_B)");
    check_field_offset(lv, v1, 0, "aF_BFu7c_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aF_BFu7c_B");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aF_BFu7c_B");
    check_field_offset(lv, v3, 5, "aF_BFu7c_B.v3");
  }
}
static Arrange_To_Call_Me vaF_BFu7c_B(Test_aF_BFu7c_B, "aF_BFu7c_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_BFu7i_B()
{
  {
    init_simple_test("aF_BFu7i_B");
    static aF_BFu7i_B lv;
    check2(sizeof(lv), 6, "sizeof(aF_BFu7i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_BFu7i_B)");
    check_field_offset(lv, v1, 0, "aF_BFu7i_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aF_BFu7i_B");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aF_BFu7i_B");
    check_field_offset(lv, v3, 5, "aF_BFu7i_B.v3");
  }
}
static Arrange_To_Call_Me vaF_BFu7i_B(Test_aF_BFu7i_B, "aF_BFu7i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_BFu7ll_B()
{
  {
    init_simple_test("aF_BFu7ll_B");
    static aF_BFu7ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aF_BFu7ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_BFu7ll_B)");
    check_field_offset(lv, v1, 0, "aF_BFu7ll_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aF_BFu7ll_B");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aF_BFu7ll_B");
    check_field_offset(lv, v3, 5, "aF_BFu7ll_B.v3");
  }
}
static Arrange_To_Call_Me vaF_BFu7ll_B(Test_aF_BFu7ll_B, "aF_BFu7ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_BFu7s_B()
{
  {
    init_simple_test("aF_BFu7s_B");
    static aF_BFu7s_B lv;
    check2(sizeof(lv), 6, "sizeof(aF_BFu7s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_BFu7s_B)");
    check_field_offset(lv, v1, 0, "aF_BFu7s_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aF_BFu7s_B");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aF_BFu7s_B");
    check_field_offset(lv, v3, 5, "aF_BFu7s_B.v3");
  }
}
static Arrange_To_Call_Me vaF_BFu7s_B(Test_aF_BFu7s_B, "aF_BFu7s_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_BFu8c_B()
{
  {
    init_simple_test("aF_BFu8c_B");
    static aF_BFu8c_B lv;
    check2(sizeof(lv), 6, "sizeof(aF_BFu8c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_BFu8c_B)");
    check_field_offset(lv, v1, 0, "aF_BFu8c_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aF_BFu8c_B");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aF_BFu8c_B");
    check_field_offset(lv, v3, 5, "aF_BFu8c_B.v3");
  }
}
static Arrange_To_Call_Me vaF_BFu8c_B(Test_aF_BFu8c_B, "aF_BFu8c_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_BFu8i_B()
{
  {
    init_simple_test("aF_BFu8i_B");
    static aF_BFu8i_B lv;
    check2(sizeof(lv), 6, "sizeof(aF_BFu8i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_BFu8i_B)");
    check_field_offset(lv, v1, 0, "aF_BFu8i_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aF_BFu8i_B");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aF_BFu8i_B");
    check_field_offset(lv, v3, 5, "aF_BFu8i_B.v3");
  }
}
static Arrange_To_Call_Me vaF_BFu8i_B(Test_aF_BFu8i_B, "aF_BFu8i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_BFu8ll_B()
{
  {
    init_simple_test("aF_BFu8ll_B");
    static aF_BFu8ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aF_BFu8ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_BFu8ll_B)");
    check_field_offset(lv, v1, 0, "aF_BFu8ll_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aF_BFu8ll_B");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aF_BFu8ll_B");
    check_field_offset(lv, v3, 5, "aF_BFu8ll_B.v3");
  }
}
static Arrange_To_Call_Me vaF_BFu8ll_B(Test_aF_BFu8ll_B, "aF_BFu8ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_BFu8s_B()
{
  {
    init_simple_test("aF_BFu8s_B");
    static aF_BFu8s_B lv;
    check2(sizeof(lv), 6, "sizeof(aF_BFu8s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_BFu8s_B)");
    check_field_offset(lv, v1, 0, "aF_BFu8s_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aF_BFu8s_B");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aF_BFu8s_B");
    check_field_offset(lv, v3, 5, "aF_BFu8s_B.v3");
  }
}
static Arrange_To_Call_Me vaF_BFu8s_B(Test_aF_BFu8s_B, "aF_BFu8s_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_BFu9i_B()
{
  {
    init_simple_test("aF_BFu9i_B");
    static aF_BFu9i_B lv;
    check2(sizeof(lv), 7, "sizeof(aF_BFu9i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_BFu9i_B)");
    check_field_offset(lv, v1, 0, "aF_BFu9i_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aF_BFu9i_B");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aF_BFu9i_B");
    check_field_offset(lv, v3, 6, "aF_BFu9i_B.v3");
  }
}
static Arrange_To_Call_Me vaF_BFu9i_B(Test_aF_BFu9i_B, "aF_BFu9i_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_BFu9ll_B()
{
  {
    init_simple_test("aF_BFu9ll_B");
    static aF_BFu9ll_B lv;
    check2(sizeof(lv), 7, "sizeof(aF_BFu9ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_BFu9ll_B)");
    check_field_offset(lv, v1, 0, "aF_BFu9ll_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aF_BFu9ll_B");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aF_BFu9ll_B");
    check_field_offset(lv, v3, 6, "aF_BFu9ll_B.v3");
  }
}
static Arrange_To_Call_Me vaF_BFu9ll_B(Test_aF_BFu9ll_B, "aF_BFu9ll_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_BFu9s_B()
{
  {
    init_simple_test("aF_BFu9s_B");
    static aF_BFu9s_B lv;
    check2(sizeof(lv), 7, "sizeof(aF_BFu9s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_BFu9s_B)");
    check_field_offset(lv, v1, 0, "aF_BFu9s_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aF_BFu9s_B");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aF_BFu9s_B");
    check_field_offset(lv, v3, 6, "aF_BFu9s_B.v3");
  }
}
static Arrange_To_Call_Me vaF_BFu9s_B(Test_aF_BFu9s_B, "aF_BFu9s_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_C_B()
{
  {
    init_simple_test("aF_C_B");
    aF_C_B lv;
    check2(sizeof(lv), 6, "sizeof(aF_C_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_C_B)");
    check_field_offset(lv, v1, 0, "aF_C_B.v1");
    check_field_offset(lv, v2, 4, "aF_C_B.v2");
    check_field_offset(lv, v3, 5, "aF_C_B.v3");
  }
}
static Arrange_To_Call_Me vaF_C_B(Test_aF_C_B, "aF_C_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_D_B()
{
  {
    init_simple_test("aF_D_B");
    aF_D_B lv;
    check2(sizeof(lv), 13, "sizeof(aF_D_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_D_B)");
    check_field_offset(lv, v1, 0, "aF_D_B.v1");
    check_field_offset(lv, v2, 4, "aF_D_B.v2");
    check_field_offset(lv, v3, 12, "aF_D_B.v3");
  }
}
static Arrange_To_Call_Me vaF_D_B(Test_aF_D_B, "aF_D_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_F_B()
{
  {
    init_simple_test("aF_F_B");
    aF_F_B lv;
    check2(sizeof(lv), 9, "sizeof(aF_F_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_F_B)");
    check_field_offset(lv, v1, 0, "aF_F_B.v1");
    check_field_offset(lv, v2, 4, "aF_F_B.v2");
    check_field_offset(lv, v3, 8, "aF_F_B.v3");
  }
}
static Arrange_To_Call_Me vaF_F_B(Test_aF_F_B, "aF_F_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_I_B()
{
  {
    init_simple_test("aF_I_B");
    aF_I_B lv;
    check2(sizeof(lv), 9, "sizeof(aF_I_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_I_B)");
    check_field_offset(lv, v1, 0, "aF_I_B.v1");
    check_field_offset(lv, v2, 4, "aF_I_B.v2");
    check_field_offset(lv, v3, 8, "aF_I_B.v3");
  }
}
static Arrange_To_Call_Me vaF_I_B(Test_aF_I_B, "aF_I_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_Ip_B()
{
  {
    init_simple_test("aF_Ip_B");
    aF_Ip_B lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aF_Ip_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_Ip_B)");
    check_field_offset(lv, v1, 0, "aF_Ip_B.v1");
    check_field_offset(lv, v2, 4, "aF_Ip_B.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "aF_Ip_B.v3");
  }
}
static Arrange_To_Call_Me vaF_Ip_B(Test_aF_Ip_B, "aF_Ip_B", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_L_B()
{
  {
    init_simple_test("aF_L_B");
    aF_L_B lv;
    check2(sizeof(lv), 13, "sizeof(aF_L_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_L_B)");
    check_field_offset(lv, v1, 0, "aF_L_B.v1");
    check_field_offset(lv, v2, 4, "aF_L_B.v2");
    check_field_offset(lv, v3, 12, "aF_L_B.v3");
  }
}
static Arrange_To_Call_Me vaF_L_B(Test_aF_L_B, "aF_L_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_S_B()
{
  {
    init_simple_test("aF_S_B");
    aF_S_B lv;
    check2(sizeof(lv), 7, "sizeof(aF_S_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_S_B)");
    check_field_offset(lv, v1, 0, "aF_S_B.v1");
    check_field_offset(lv, v2, 4, "aF_S_B.v2");
    check_field_offset(lv, v3, 6, "aF_S_B.v3");
  }
}
static Arrange_To_Call_Me vaF_S_B(Test_aF_S_B, "aF_S_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_Uc_B()
{
  {
    init_simple_test("aF_Uc_B");
    aF_Uc_B lv;
    check2(sizeof(lv), 6, "sizeof(aF_Uc_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_Uc_B)");
    check_field_offset(lv, v1, 0, "aF_Uc_B.v1");
    check_field_offset(lv, v2, 4, "aF_Uc_B.v2");
    check_field_offset(lv, v3, 5, "aF_Uc_B.v3");
  }
}
static Arrange_To_Call_Me vaF_Uc_B(Test_aF_Uc_B, "aF_Uc_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_Ui_B()
{
  {
    init_simple_test("aF_Ui_B");
    aF_Ui_B lv;
    check2(sizeof(lv), 9, "sizeof(aF_Ui_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_Ui_B)");
    check_field_offset(lv, v1, 0, "aF_Ui_B.v1");
    check_field_offset(lv, v2, 4, "aF_Ui_B.v2");
    check_field_offset(lv, v3, 8, "aF_Ui_B.v3");
  }
}
static Arrange_To_Call_Me vaF_Ui_B(Test_aF_Ui_B, "aF_Ui_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_Ul_B()
{
  {
    init_simple_test("aF_Ul_B");
    aF_Ul_B lv;
    check2(sizeof(lv), 13, "sizeof(aF_Ul_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_Ul_B)");
    check_field_offset(lv, v1, 0, "aF_Ul_B.v1");
    check_field_offset(lv, v2, 4, "aF_Ul_B.v2");
    check_field_offset(lv, v3, 12, "aF_Ul_B.v3");
  }
}
static Arrange_To_Call_Me vaF_Ul_B(Test_aF_Ul_B, "aF_Ul_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_Us_B()
{
  {
    init_simple_test("aF_Us_B");
    aF_Us_B lv;
    check2(sizeof(lv), 7, "sizeof(aF_Us_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_Us_B)");
    check_field_offset(lv, v1, 0, "aF_Us_B.v1");
    check_field_offset(lv, v2, 4, "aF_Us_B.v2");
    check_field_offset(lv, v3, 6, "aF_Us_B.v3");
  }
}
static Arrange_To_Call_Me vaF_Us_B(Test_aF_Us_B, "aF_Us_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aF_Vp_B()
{
  {
    init_simple_test("aF_Vp_B");
    aF_Vp_B lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aF_Vp_B)");
    check2(__alignof__(lv), 1, "__alignof__(aF_Vp_B)");
    check_field_offset(lv, v1, 0, "aF_Vp_B.v1");
    check_field_offset(lv, v2, 4, "aF_Vp_B.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "aF_Vp_B.v3");
  }
}
static Arrange_To_Call_Me vaF_Vp_B(Test_aF_Vp_B, "aF_Vp_B", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B()
{
  {
    init_simple_test("aI_B");
    aI_B lv;
    check2(sizeof(lv), 5, "sizeof(aI_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B)");
    check_field_offset(lv, v1, 0, "aI_B.v1");
    check_field_offset(lv, v2, 4, "aI_B.v2");
  }
}
static Arrange_To_Call_Me vaI_B(Test_aI_B, "aI_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_B()
{
  {
    init_simple_test("aI_B_B");
    aI_B_B lv;
    check2(sizeof(lv), 6, "sizeof(aI_B_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_B)");
    check_field_offset(lv, v1, 0, "aI_B_B.v1");
    check_field_offset(lv, v2, 4, "aI_B_B.v2");
    check_field_offset(lv, v3, 5, "aI_B_B.v3");
  }
}
static Arrange_To_Call_Me vaI_B_B(Test_aI_B_B, "aI_B_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_BFu15i()
{
  {
    init_simple_test("aI_B_BFu15i");
    static aI_B_BFu15i lv;
    check2(sizeof(lv), 7, "sizeof(aI_B_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_BFu15i)");
    check_field_offset(lv, v1, 0, "aI_B_BFu15i.v1");
    check_field_offset(lv, v2, 4, "aI_B_BFu15i.v2");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aI_B_BFu15i");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aI_B_BFu15i");
  }
}
static Arrange_To_Call_Me vaI_B_BFu15i(Test_aI_B_BFu15i, "aI_B_BFu15i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_BFu15ll()
{
  {
    init_simple_test("aI_B_BFu15ll");
    static aI_B_BFu15ll lv;
    check2(sizeof(lv), 7, "sizeof(aI_B_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_BFu15ll)");
    check_field_offset(lv, v1, 0, "aI_B_BFu15ll.v1");
    check_field_offset(lv, v2, 4, "aI_B_BFu15ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aI_B_BFu15ll");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aI_B_BFu15ll");
  }
}
static Arrange_To_Call_Me vaI_B_BFu15ll(Test_aI_B_BFu15ll, "aI_B_BFu15ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_BFu15s()
{
  {
    init_simple_test("aI_B_BFu15s");
    static aI_B_BFu15s lv;
    check2(sizeof(lv), 7, "sizeof(aI_B_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_BFu15s)");
    check_field_offset(lv, v1, 0, "aI_B_BFu15s.v1");
    check_field_offset(lv, v2, 4, "aI_B_BFu15s.v2");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aI_B_BFu15s");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aI_B_BFu15s");
  }
}
static Arrange_To_Call_Me vaI_B_BFu15s(Test_aI_B_BFu15s, "aI_B_BFu15s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_BFu16i()
{
  {
    init_simple_test("aI_B_BFu16i");
    static aI_B_BFu16i lv;
    check2(sizeof(lv), 7, "sizeof(aI_B_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_BFu16i)");
    check_field_offset(lv, v1, 0, "aI_B_BFu16i.v1");
    check_field_offset(lv, v2, 4, "aI_B_BFu16i.v2");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aI_B_BFu16i");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aI_B_BFu16i");
  }
}
static Arrange_To_Call_Me vaI_B_BFu16i(Test_aI_B_BFu16i, "aI_B_BFu16i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_BFu16ll()
{
  {
    init_simple_test("aI_B_BFu16ll");
    static aI_B_BFu16ll lv;
    check2(sizeof(lv), 7, "sizeof(aI_B_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_BFu16ll)");
    check_field_offset(lv, v1, 0, "aI_B_BFu16ll.v1");
    check_field_offset(lv, v2, 4, "aI_B_BFu16ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aI_B_BFu16ll");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aI_B_BFu16ll");
  }
}
static Arrange_To_Call_Me vaI_B_BFu16ll(Test_aI_B_BFu16ll, "aI_B_BFu16ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_BFu16s()
{
  {
    init_simple_test("aI_B_BFu16s");
    static aI_B_BFu16s lv;
    check2(sizeof(lv), 7, "sizeof(aI_B_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_BFu16s)");
    check_field_offset(lv, v1, 0, "aI_B_BFu16s.v1");
    check_field_offset(lv, v2, 4, "aI_B_BFu16s.v2");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aI_B_BFu16s");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aI_B_BFu16s");
  }
}
static Arrange_To_Call_Me vaI_B_BFu16s(Test_aI_B_BFu16s, "aI_B_BFu16s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_BFu17i()
{
  {
    init_simple_test("aI_B_BFu17i");
    static aI_B_BFu17i lv;
    check2(sizeof(lv), 8, "sizeof(aI_B_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_BFu17i)");
    check_field_offset(lv, v1, 0, "aI_B_BFu17i.v1");
    check_field_offset(lv, v2, 4, "aI_B_BFu17i.v2");
    set_bf_and_test(lv, v3, 5, 0, 17, 1, "aI_B_BFu17i");
    set_bf_and_test(lv, v3, 5, 0, 17, hide_ull(1LL<<16), "aI_B_BFu17i");
  }
}
static Arrange_To_Call_Me vaI_B_BFu17i(Test_aI_B_BFu17i, "aI_B_BFu17i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_BFu17ll()
{
  {
    init_simple_test("aI_B_BFu17ll");
    static aI_B_BFu17ll lv;
    check2(sizeof(lv), 8, "sizeof(aI_B_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_BFu17ll)");
    check_field_offset(lv, v1, 0, "aI_B_BFu17ll.v1");
    check_field_offset(lv, v2, 4, "aI_B_BFu17ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 17, 1, "aI_B_BFu17ll");
    set_bf_and_test(lv, v3, 5, 0, 17, hide_ull(1LL<<16), "aI_B_BFu17ll");
  }
}
static Arrange_To_Call_Me vaI_B_BFu17ll(Test_aI_B_BFu17ll, "aI_B_BFu17ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_BFu1c()
{
  {
    init_simple_test("aI_B_BFu1c");
    static aI_B_BFu1c lv;
    check2(sizeof(lv), 6, "sizeof(aI_B_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_BFu1c)");
    check_field_offset(lv, v1, 0, "aI_B_BFu1c.v1");
    check_field_offset(lv, v2, 4, "aI_B_BFu1c.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aI_B_BFu1c");
  }
}
static Arrange_To_Call_Me vaI_B_BFu1c(Test_aI_B_BFu1c, "aI_B_BFu1c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_BFu1i()
{
  {
    init_simple_test("aI_B_BFu1i");
    static aI_B_BFu1i lv;
    check2(sizeof(lv), 6, "sizeof(aI_B_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_BFu1i)");
    check_field_offset(lv, v1, 0, "aI_B_BFu1i.v1");
    check_field_offset(lv, v2, 4, "aI_B_BFu1i.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aI_B_BFu1i");
  }
}
static Arrange_To_Call_Me vaI_B_BFu1i(Test_aI_B_BFu1i, "aI_B_BFu1i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_BFu1ll()
{
  {
    init_simple_test("aI_B_BFu1ll");
    static aI_B_BFu1ll lv;
    check2(sizeof(lv), 6, "sizeof(aI_B_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_BFu1ll)");
    check_field_offset(lv, v1, 0, "aI_B_BFu1ll.v1");
    check_field_offset(lv, v2, 4, "aI_B_BFu1ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aI_B_BFu1ll");
  }
}
static Arrange_To_Call_Me vaI_B_BFu1ll(Test_aI_B_BFu1ll, "aI_B_BFu1ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_BFu1s()
{
  {
    init_simple_test("aI_B_BFu1s");
    static aI_B_BFu1s lv;
    check2(sizeof(lv), 6, "sizeof(aI_B_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_BFu1s)");
    check_field_offset(lv, v1, 0, "aI_B_BFu1s.v1");
    check_field_offset(lv, v2, 4, "aI_B_BFu1s.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aI_B_BFu1s");
  }
}
static Arrange_To_Call_Me vaI_B_BFu1s(Test_aI_B_BFu1s, "aI_B_BFu1s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_BFu31i()
{
  {
    init_simple_test("aI_B_BFu31i");
    static aI_B_BFu31i lv;
    check2(sizeof(lv), 9, "sizeof(aI_B_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_BFu31i)");
    check_field_offset(lv, v1, 0, "aI_B_BFu31i.v1");
    check_field_offset(lv, v2, 4, "aI_B_BFu31i.v2");
    set_bf_and_test(lv, v3, 5, 0, 31, 1, "aI_B_BFu31i");
    set_bf_and_test(lv, v3, 5, 0, 31, hide_ull(1LL<<30), "aI_B_BFu31i");
  }
}
static Arrange_To_Call_Me vaI_B_BFu31i(Test_aI_B_BFu31i, "aI_B_BFu31i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_BFu31ll()
{
  {
    init_simple_test("aI_B_BFu31ll");
    static aI_B_BFu31ll lv;
    check2(sizeof(lv), 9, "sizeof(aI_B_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_BFu31ll)");
    check_field_offset(lv, v1, 0, "aI_B_BFu31ll.v1");
    check_field_offset(lv, v2, 4, "aI_B_BFu31ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 31, 1, "aI_B_BFu31ll");
    set_bf_and_test(lv, v3, 5, 0, 31, hide_ull(1LL<<30), "aI_B_BFu31ll");
  }
}
static Arrange_To_Call_Me vaI_B_BFu31ll(Test_aI_B_BFu31ll, "aI_B_BFu31ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_BFu32i()
{
  {
    init_simple_test("aI_B_BFu32i");
    static aI_B_BFu32i lv;
    check2(sizeof(lv), 9, "sizeof(aI_B_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_BFu32i)");
    check_field_offset(lv, v1, 0, "aI_B_BFu32i.v1");
    check_field_offset(lv, v2, 4, "aI_B_BFu32i.v2");
    set_bf_and_test(lv, v3, 5, 0, 32, 1, "aI_B_BFu32i");
    set_bf_and_test(lv, v3, 5, 0, 32, hide_ull(1LL<<31), "aI_B_BFu32i");
  }
}
static Arrange_To_Call_Me vaI_B_BFu32i(Test_aI_B_BFu32i, "aI_B_BFu32i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_BFu32ll()
{
  {
    init_simple_test("aI_B_BFu32ll");
    static aI_B_BFu32ll lv;
    check2(sizeof(lv), 9, "sizeof(aI_B_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_BFu32ll)");
    check_field_offset(lv, v1, 0, "aI_B_BFu32ll.v1");
    check_field_offset(lv, v2, 4, "aI_B_BFu32ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 32, 1, "aI_B_BFu32ll");
    set_bf_and_test(lv, v3, 5, 0, 32, hide_ull(1LL<<31), "aI_B_BFu32ll");
  }
}
static Arrange_To_Call_Me vaI_B_BFu32ll(Test_aI_B_BFu32ll, "aI_B_BFu32ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_BFu33()
{
  {
    init_simple_test("aI_B_BFu33");
    static aI_B_BFu33 lv;
    check2(sizeof(lv), 10, "sizeof(aI_B_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_BFu33)");
    check_field_offset(lv, v1, 0, "aI_B_BFu33.v1");
    check_field_offset(lv, v2, 4, "aI_B_BFu33.v2");
    set_bf_and_test(lv, v3, 5, 0, 33, 1, "aI_B_BFu33");
    set_bf_and_test(lv, v3, 5, 0, 33, hide_ull(1LL<<32), "aI_B_BFu33");
  }
}
static Arrange_To_Call_Me vaI_B_BFu33(Test_aI_B_BFu33, "aI_B_BFu33", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_BFu7c()
{
  {
    init_simple_test("aI_B_BFu7c");
    static aI_B_BFu7c lv;
    check2(sizeof(lv), 6, "sizeof(aI_B_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_BFu7c)");
    check_field_offset(lv, v1, 0, "aI_B_BFu7c.v1");
    check_field_offset(lv, v2, 4, "aI_B_BFu7c.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aI_B_BFu7c");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aI_B_BFu7c");
  }
}
static Arrange_To_Call_Me vaI_B_BFu7c(Test_aI_B_BFu7c, "aI_B_BFu7c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_BFu7i()
{
  {
    init_simple_test("aI_B_BFu7i");
    static aI_B_BFu7i lv;
    check2(sizeof(lv), 6, "sizeof(aI_B_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_BFu7i)");
    check_field_offset(lv, v1, 0, "aI_B_BFu7i.v1");
    check_field_offset(lv, v2, 4, "aI_B_BFu7i.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aI_B_BFu7i");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aI_B_BFu7i");
  }
}
static Arrange_To_Call_Me vaI_B_BFu7i(Test_aI_B_BFu7i, "aI_B_BFu7i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_BFu7ll()
{
  {
    init_simple_test("aI_B_BFu7ll");
    static aI_B_BFu7ll lv;
    check2(sizeof(lv), 6, "sizeof(aI_B_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_BFu7ll)");
    check_field_offset(lv, v1, 0, "aI_B_BFu7ll.v1");
    check_field_offset(lv, v2, 4, "aI_B_BFu7ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aI_B_BFu7ll");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aI_B_BFu7ll");
  }
}
static Arrange_To_Call_Me vaI_B_BFu7ll(Test_aI_B_BFu7ll, "aI_B_BFu7ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_BFu7s()
{
  {
    init_simple_test("aI_B_BFu7s");
    static aI_B_BFu7s lv;
    check2(sizeof(lv), 6, "sizeof(aI_B_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_BFu7s)");
    check_field_offset(lv, v1, 0, "aI_B_BFu7s.v1");
    check_field_offset(lv, v2, 4, "aI_B_BFu7s.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aI_B_BFu7s");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aI_B_BFu7s");
  }
}
static Arrange_To_Call_Me vaI_B_BFu7s(Test_aI_B_BFu7s, "aI_B_BFu7s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_BFu8c()
{
  {
    init_simple_test("aI_B_BFu8c");
    static aI_B_BFu8c lv;
    check2(sizeof(lv), 6, "sizeof(aI_B_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_BFu8c)");
    check_field_offset(lv, v1, 0, "aI_B_BFu8c.v1");
    check_field_offset(lv, v2, 4, "aI_B_BFu8c.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aI_B_BFu8c");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aI_B_BFu8c");
  }
}
static Arrange_To_Call_Me vaI_B_BFu8c(Test_aI_B_BFu8c, "aI_B_BFu8c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_BFu8i()
{
  {
    init_simple_test("aI_B_BFu8i");
    static aI_B_BFu8i lv;
    check2(sizeof(lv), 6, "sizeof(aI_B_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_BFu8i)");
    check_field_offset(lv, v1, 0, "aI_B_BFu8i.v1");
    check_field_offset(lv, v2, 4, "aI_B_BFu8i.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aI_B_BFu8i");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aI_B_BFu8i");
  }
}
static Arrange_To_Call_Me vaI_B_BFu8i(Test_aI_B_BFu8i, "aI_B_BFu8i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_BFu8ll()
{
  {
    init_simple_test("aI_B_BFu8ll");
    static aI_B_BFu8ll lv;
    check2(sizeof(lv), 6, "sizeof(aI_B_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_BFu8ll)");
    check_field_offset(lv, v1, 0, "aI_B_BFu8ll.v1");
    check_field_offset(lv, v2, 4, "aI_B_BFu8ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aI_B_BFu8ll");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aI_B_BFu8ll");
  }
}
static Arrange_To_Call_Me vaI_B_BFu8ll(Test_aI_B_BFu8ll, "aI_B_BFu8ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_BFu8s()
{
  {
    init_simple_test("aI_B_BFu8s");
    static aI_B_BFu8s lv;
    check2(sizeof(lv), 6, "sizeof(aI_B_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_BFu8s)");
    check_field_offset(lv, v1, 0, "aI_B_BFu8s.v1");
    check_field_offset(lv, v2, 4, "aI_B_BFu8s.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aI_B_BFu8s");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aI_B_BFu8s");
  }
}
static Arrange_To_Call_Me vaI_B_BFu8s(Test_aI_B_BFu8s, "aI_B_BFu8s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_BFu9i()
{
  {
    init_simple_test("aI_B_BFu9i");
    static aI_B_BFu9i lv;
    check2(sizeof(lv), 7, "sizeof(aI_B_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_BFu9i)");
    check_field_offset(lv, v1, 0, "aI_B_BFu9i.v1");
    check_field_offset(lv, v2, 4, "aI_B_BFu9i.v2");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aI_B_BFu9i");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aI_B_BFu9i");
  }
}
static Arrange_To_Call_Me vaI_B_BFu9i(Test_aI_B_BFu9i, "aI_B_BFu9i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_BFu9ll()
{
  {
    init_simple_test("aI_B_BFu9ll");
    static aI_B_BFu9ll lv;
    check2(sizeof(lv), 7, "sizeof(aI_B_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_BFu9ll)");
    check_field_offset(lv, v1, 0, "aI_B_BFu9ll.v1");
    check_field_offset(lv, v2, 4, "aI_B_BFu9ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aI_B_BFu9ll");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aI_B_BFu9ll");
  }
}
static Arrange_To_Call_Me vaI_B_BFu9ll(Test_aI_B_BFu9ll, "aI_B_BFu9ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_BFu9s()
{
  {
    init_simple_test("aI_B_BFu9s");
    static aI_B_BFu9s lv;
    check2(sizeof(lv), 7, "sizeof(aI_B_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_BFu9s)");
    check_field_offset(lv, v1, 0, "aI_B_BFu9s.v1");
    check_field_offset(lv, v2, 4, "aI_B_BFu9s.v2");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aI_B_BFu9s");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aI_B_BFu9s");
  }
}
static Arrange_To_Call_Me vaI_B_BFu9s(Test_aI_B_BFu9s, "aI_B_BFu9s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_C()
{
  {
    init_simple_test("aI_B_C");
    aI_B_C lv;
    check2(sizeof(lv), 6, "sizeof(aI_B_C)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_C)");
    check_field_offset(lv, v1, 0, "aI_B_C.v1");
    check_field_offset(lv, v2, 4, "aI_B_C.v2");
    check_field_offset(lv, v3, 5, "aI_B_C.v3");
  }
}
static Arrange_To_Call_Me vaI_B_C(Test_aI_B_C, "aI_B_C", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_D()
{
  {
    init_simple_test("aI_B_D");
    aI_B_D lv;
    check2(sizeof(lv), 13, "sizeof(aI_B_D)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_D)");
    check_field_offset(lv, v1, 0, "aI_B_D.v1");
    check_field_offset(lv, v2, 4, "aI_B_D.v2");
    check_field_offset(lv, v3, 5, "aI_B_D.v3");
  }
}
static Arrange_To_Call_Me vaI_B_D(Test_aI_B_D, "aI_B_D", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_F()
{
  {
    init_simple_test("aI_B_F");
    aI_B_F lv;
    check2(sizeof(lv), 9, "sizeof(aI_B_F)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_F)");
    check_field_offset(lv, v1, 0, "aI_B_F.v1");
    check_field_offset(lv, v2, 4, "aI_B_F.v2");
    check_field_offset(lv, v3, 5, "aI_B_F.v3");
  }
}
static Arrange_To_Call_Me vaI_B_F(Test_aI_B_F, "aI_B_F", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_I()
{
  {
    init_simple_test("aI_B_I");
    aI_B_I lv;
    check2(sizeof(lv), 9, "sizeof(aI_B_I)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_I)");
    check_field_offset(lv, v1, 0, "aI_B_I.v1");
    check_field_offset(lv, v2, 4, "aI_B_I.v2");
    check_field_offset(lv, v3, 5, "aI_B_I.v3");
  }
}
static Arrange_To_Call_Me vaI_B_I(Test_aI_B_I, "aI_B_I", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_Ip()
{
  {
    init_simple_test("aI_B_Ip");
    aI_B_Ip lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aI_B_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_Ip)");
    check_field_offset(lv, v1, 0, "aI_B_Ip.v1");
    check_field_offset(lv, v2, 4, "aI_B_Ip.v2");
    check_field_offset(lv, v3, 5, "aI_B_Ip.v3");
  }
}
static Arrange_To_Call_Me vaI_B_Ip(Test_aI_B_Ip, "aI_B_Ip", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_L()
{
  {
    init_simple_test("aI_B_L");
    aI_B_L lv;
    check2(sizeof(lv), 13, "sizeof(aI_B_L)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_L)");
    check_field_offset(lv, v1, 0, "aI_B_L.v1");
    check_field_offset(lv, v2, 4, "aI_B_L.v2");
    check_field_offset(lv, v3, 5, "aI_B_L.v3");
  }
}
static Arrange_To_Call_Me vaI_B_L(Test_aI_B_L, "aI_B_L", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_S()
{
  {
    init_simple_test("aI_B_S");
    aI_B_S lv;
    check2(sizeof(lv), 7, "sizeof(aI_B_S)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_S)");
    check_field_offset(lv, v1, 0, "aI_B_S.v1");
    check_field_offset(lv, v2, 4, "aI_B_S.v2");
    check_field_offset(lv, v3, 5, "aI_B_S.v3");
  }
}
static Arrange_To_Call_Me vaI_B_S(Test_aI_B_S, "aI_B_S", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_Uc()
{
  {
    init_simple_test("aI_B_Uc");
    aI_B_Uc lv;
    check2(sizeof(lv), 6, "sizeof(aI_B_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_Uc)");
    check_field_offset(lv, v1, 0, "aI_B_Uc.v1");
    check_field_offset(lv, v2, 4, "aI_B_Uc.v2");
    check_field_offset(lv, v3, 5, "aI_B_Uc.v3");
  }
}
static Arrange_To_Call_Me vaI_B_Uc(Test_aI_B_Uc, "aI_B_Uc", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_Ui()
{
  {
    init_simple_test("aI_B_Ui");
    aI_B_Ui lv;
    check2(sizeof(lv), 9, "sizeof(aI_B_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_Ui)");
    check_field_offset(lv, v1, 0, "aI_B_Ui.v1");
    check_field_offset(lv, v2, 4, "aI_B_Ui.v2");
    check_field_offset(lv, v3, 5, "aI_B_Ui.v3");
  }
}
static Arrange_To_Call_Me vaI_B_Ui(Test_aI_B_Ui, "aI_B_Ui", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_Ul()
{
  {
    init_simple_test("aI_B_Ul");
    aI_B_Ul lv;
    check2(sizeof(lv), 13, "sizeof(aI_B_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_Ul)");
    check_field_offset(lv, v1, 0, "aI_B_Ul.v1");
    check_field_offset(lv, v2, 4, "aI_B_Ul.v2");
    check_field_offset(lv, v3, 5, "aI_B_Ul.v3");
  }
}
static Arrange_To_Call_Me vaI_B_Ul(Test_aI_B_Ul, "aI_B_Ul", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_Us()
{
  {
    init_simple_test("aI_B_Us");
    aI_B_Us lv;
    check2(sizeof(lv), 7, "sizeof(aI_B_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_Us)");
    check_field_offset(lv, v1, 0, "aI_B_Us.v1");
    check_field_offset(lv, v2, 4, "aI_B_Us.v2");
    check_field_offset(lv, v3, 5, "aI_B_Us.v3");
  }
}
static Arrange_To_Call_Me vaI_B_Us(Test_aI_B_Us, "aI_B_Us", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_B_Vp()
{
  {
    init_simple_test("aI_B_Vp");
    aI_B_Vp lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aI_B_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aI_B_Vp)");
    check_field_offset(lv, v1, 0, "aI_B_Vp.v1");
    check_field_offset(lv, v2, 4, "aI_B_Vp.v2");
    check_field_offset(lv, v3, 5, "aI_B_Vp.v3");
  }
}
static Arrange_To_Call_Me vaI_B_Vp(Test_aI_B_Vp, "aI_B_Vp", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_BFu15i_B()
{
  {
    init_simple_test("aI_BFu15i_B");
    static aI_BFu15i_B lv;
    check2(sizeof(lv), 7, "sizeof(aI_BFu15i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_BFu15i_B)");
    check_field_offset(lv, v1, 0, "aI_BFu15i_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aI_BFu15i_B");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aI_BFu15i_B");
    check_field_offset(lv, v3, 6, "aI_BFu15i_B.v3");
  }
}
static Arrange_To_Call_Me vaI_BFu15i_B(Test_aI_BFu15i_B, "aI_BFu15i_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_BFu15ll_B()
{
  {
    init_simple_test("aI_BFu15ll_B");
    static aI_BFu15ll_B lv;
    check2(sizeof(lv), 7, "sizeof(aI_BFu15ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_BFu15ll_B)");
    check_field_offset(lv, v1, 0, "aI_BFu15ll_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aI_BFu15ll_B");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aI_BFu15ll_B");
    check_field_offset(lv, v3, 6, "aI_BFu15ll_B.v3");
  }
}
static Arrange_To_Call_Me vaI_BFu15ll_B(Test_aI_BFu15ll_B, "aI_BFu15ll_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_BFu15s_B()
{
  {
    init_simple_test("aI_BFu15s_B");
    static aI_BFu15s_B lv;
    check2(sizeof(lv), 7, "sizeof(aI_BFu15s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_BFu15s_B)");
    check_field_offset(lv, v1, 0, "aI_BFu15s_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aI_BFu15s_B");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aI_BFu15s_B");
    check_field_offset(lv, v3, 6, "aI_BFu15s_B.v3");
  }
}
static Arrange_To_Call_Me vaI_BFu15s_B(Test_aI_BFu15s_B, "aI_BFu15s_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_BFu16i_B()
{
  {
    init_simple_test("aI_BFu16i_B");
    static aI_BFu16i_B lv;
    check2(sizeof(lv), 7, "sizeof(aI_BFu16i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_BFu16i_B)");
    check_field_offset(lv, v1, 0, "aI_BFu16i_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aI_BFu16i_B");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aI_BFu16i_B");
    check_field_offset(lv, v3, 6, "aI_BFu16i_B.v3");
  }
}
static Arrange_To_Call_Me vaI_BFu16i_B(Test_aI_BFu16i_B, "aI_BFu16i_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_BFu16ll_B()
{
  {
    init_simple_test("aI_BFu16ll_B");
    static aI_BFu16ll_B lv;
    check2(sizeof(lv), 7, "sizeof(aI_BFu16ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_BFu16ll_B)");
    check_field_offset(lv, v1, 0, "aI_BFu16ll_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aI_BFu16ll_B");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aI_BFu16ll_B");
    check_field_offset(lv, v3, 6, "aI_BFu16ll_B.v3");
  }
}
static Arrange_To_Call_Me vaI_BFu16ll_B(Test_aI_BFu16ll_B, "aI_BFu16ll_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_BFu16s_B()
{
  {
    init_simple_test("aI_BFu16s_B");
    static aI_BFu16s_B lv;
    check2(sizeof(lv), 7, "sizeof(aI_BFu16s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_BFu16s_B)");
    check_field_offset(lv, v1, 0, "aI_BFu16s_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aI_BFu16s_B");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aI_BFu16s_B");
    check_field_offset(lv, v3, 6, "aI_BFu16s_B.v3");
  }
}
static Arrange_To_Call_Me vaI_BFu16s_B(Test_aI_BFu16s_B, "aI_BFu16s_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_BFu17i_B()
{
  {
    init_simple_test("aI_BFu17i_B");
    static aI_BFu17i_B lv;
    check2(sizeof(lv), 8, "sizeof(aI_BFu17i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_BFu17i_B)");
    check_field_offset(lv, v1, 0, "aI_BFu17i_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aI_BFu17i_B");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aI_BFu17i_B");
    check_field_offset(lv, v3, 7, "aI_BFu17i_B.v3");
  }
}
static Arrange_To_Call_Me vaI_BFu17i_B(Test_aI_BFu17i_B, "aI_BFu17i_B", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_BFu17ll_B()
{
  {
    init_simple_test("aI_BFu17ll_B");
    static aI_BFu17ll_B lv;
    check2(sizeof(lv), 8, "sizeof(aI_BFu17ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_BFu17ll_B)");
    check_field_offset(lv, v1, 0, "aI_BFu17ll_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aI_BFu17ll_B");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aI_BFu17ll_B");
    check_field_offset(lv, v3, 7, "aI_BFu17ll_B.v3");
  }
}
static Arrange_To_Call_Me vaI_BFu17ll_B(Test_aI_BFu17ll_B, "aI_BFu17ll_B", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_BFu1c_B()
{
  {
    init_simple_test("aI_BFu1c_B");
    static aI_BFu1c_B lv;
    check2(sizeof(lv), 6, "sizeof(aI_BFu1c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_BFu1c_B)");
    check_field_offset(lv, v1, 0, "aI_BFu1c_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aI_BFu1c_B");
    check_field_offset(lv, v3, 5, "aI_BFu1c_B.v3");
  }
}
static Arrange_To_Call_Me vaI_BFu1c_B(Test_aI_BFu1c_B, "aI_BFu1c_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_BFu1i_B()
{
  {
    init_simple_test("aI_BFu1i_B");
    static aI_BFu1i_B lv;
    check2(sizeof(lv), 6, "sizeof(aI_BFu1i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_BFu1i_B)");
    check_field_offset(lv, v1, 0, "aI_BFu1i_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aI_BFu1i_B");
    check_field_offset(lv, v3, 5, "aI_BFu1i_B.v3");
  }
}
static Arrange_To_Call_Me vaI_BFu1i_B(Test_aI_BFu1i_B, "aI_BFu1i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_BFu1ll_B()
{
  {
    init_simple_test("aI_BFu1ll_B");
    static aI_BFu1ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aI_BFu1ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_BFu1ll_B)");
    check_field_offset(lv, v1, 0, "aI_BFu1ll_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aI_BFu1ll_B");
    check_field_offset(lv, v3, 5, "aI_BFu1ll_B.v3");
  }
}
static Arrange_To_Call_Me vaI_BFu1ll_B(Test_aI_BFu1ll_B, "aI_BFu1ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_BFu1s_B()
{
  {
    init_simple_test("aI_BFu1s_B");
    static aI_BFu1s_B lv;
    check2(sizeof(lv), 6, "sizeof(aI_BFu1s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_BFu1s_B)");
    check_field_offset(lv, v1, 0, "aI_BFu1s_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aI_BFu1s_B");
    check_field_offset(lv, v3, 5, "aI_BFu1s_B.v3");
  }
}
static Arrange_To_Call_Me vaI_BFu1s_B(Test_aI_BFu1s_B, "aI_BFu1s_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_BFu31i_B()
{
  {
    init_simple_test("aI_BFu31i_B");
    static aI_BFu31i_B lv;
    check2(sizeof(lv), 9, "sizeof(aI_BFu31i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_BFu31i_B)");
    check_field_offset(lv, v1, 0, "aI_BFu31i_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aI_BFu31i_B");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aI_BFu31i_B");
    check_field_offset(lv, v3, 8, "aI_BFu31i_B.v3");
  }
}
static Arrange_To_Call_Me vaI_BFu31i_B(Test_aI_BFu31i_B, "aI_BFu31i_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_BFu31ll_B()
{
  {
    init_simple_test("aI_BFu31ll_B");
    static aI_BFu31ll_B lv;
    check2(sizeof(lv), 9, "sizeof(aI_BFu31ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_BFu31ll_B)");
    check_field_offset(lv, v1, 0, "aI_BFu31ll_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aI_BFu31ll_B");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aI_BFu31ll_B");
    check_field_offset(lv, v3, 8, "aI_BFu31ll_B.v3");
  }
}
static Arrange_To_Call_Me vaI_BFu31ll_B(Test_aI_BFu31ll_B, "aI_BFu31ll_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_BFu32i_B()
{
  {
    init_simple_test("aI_BFu32i_B");
    static aI_BFu32i_B lv;
    check2(sizeof(lv), 9, "sizeof(aI_BFu32i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_BFu32i_B)");
    check_field_offset(lv, v1, 0, "aI_BFu32i_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aI_BFu32i_B");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aI_BFu32i_B");
    check_field_offset(lv, v3, 8, "aI_BFu32i_B.v3");
  }
}
static Arrange_To_Call_Me vaI_BFu32i_B(Test_aI_BFu32i_B, "aI_BFu32i_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_BFu32ll_B()
{
  {
    init_simple_test("aI_BFu32ll_B");
    static aI_BFu32ll_B lv;
    check2(sizeof(lv), 9, "sizeof(aI_BFu32ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_BFu32ll_B)");
    check_field_offset(lv, v1, 0, "aI_BFu32ll_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aI_BFu32ll_B");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aI_BFu32ll_B");
    check_field_offset(lv, v3, 8, "aI_BFu32ll_B.v3");
  }
}
static Arrange_To_Call_Me vaI_BFu32ll_B(Test_aI_BFu32ll_B, "aI_BFu32ll_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_BFu33_B()
{
  {
    init_simple_test("aI_BFu33_B");
    static aI_BFu33_B lv;
    check2(sizeof(lv), 10, "sizeof(aI_BFu33_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_BFu33_B)");
    check_field_offset(lv, v1, 0, "aI_BFu33_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "aI_BFu33_B");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "aI_BFu33_B");
    check_field_offset(lv, v3, 9, "aI_BFu33_B.v3");
  }
}
static Arrange_To_Call_Me vaI_BFu33_B(Test_aI_BFu33_B, "aI_BFu33_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_BFu7c_B()
{
  {
    init_simple_test("aI_BFu7c_B");
    static aI_BFu7c_B lv;
    check2(sizeof(lv), 6, "sizeof(aI_BFu7c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_BFu7c_B)");
    check_field_offset(lv, v1, 0, "aI_BFu7c_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aI_BFu7c_B");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aI_BFu7c_B");
    check_field_offset(lv, v3, 5, "aI_BFu7c_B.v3");
  }
}
static Arrange_To_Call_Me vaI_BFu7c_B(Test_aI_BFu7c_B, "aI_BFu7c_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_BFu7i_B()
{
  {
    init_simple_test("aI_BFu7i_B");
    static aI_BFu7i_B lv;
    check2(sizeof(lv), 6, "sizeof(aI_BFu7i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_BFu7i_B)");
    check_field_offset(lv, v1, 0, "aI_BFu7i_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aI_BFu7i_B");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aI_BFu7i_B");
    check_field_offset(lv, v3, 5, "aI_BFu7i_B.v3");
  }
}
static Arrange_To_Call_Me vaI_BFu7i_B(Test_aI_BFu7i_B, "aI_BFu7i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_BFu7ll_B()
{
  {
    init_simple_test("aI_BFu7ll_B");
    static aI_BFu7ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aI_BFu7ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_BFu7ll_B)");
    check_field_offset(lv, v1, 0, "aI_BFu7ll_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aI_BFu7ll_B");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aI_BFu7ll_B");
    check_field_offset(lv, v3, 5, "aI_BFu7ll_B.v3");
  }
}
static Arrange_To_Call_Me vaI_BFu7ll_B(Test_aI_BFu7ll_B, "aI_BFu7ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_BFu7s_B()
{
  {
    init_simple_test("aI_BFu7s_B");
    static aI_BFu7s_B lv;
    check2(sizeof(lv), 6, "sizeof(aI_BFu7s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_BFu7s_B)");
    check_field_offset(lv, v1, 0, "aI_BFu7s_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aI_BFu7s_B");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aI_BFu7s_B");
    check_field_offset(lv, v3, 5, "aI_BFu7s_B.v3");
  }
}
static Arrange_To_Call_Me vaI_BFu7s_B(Test_aI_BFu7s_B, "aI_BFu7s_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_BFu8c_B()
{
  {
    init_simple_test("aI_BFu8c_B");
    static aI_BFu8c_B lv;
    check2(sizeof(lv), 6, "sizeof(aI_BFu8c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_BFu8c_B)");
    check_field_offset(lv, v1, 0, "aI_BFu8c_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aI_BFu8c_B");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aI_BFu8c_B");
    check_field_offset(lv, v3, 5, "aI_BFu8c_B.v3");
  }
}
static Arrange_To_Call_Me vaI_BFu8c_B(Test_aI_BFu8c_B, "aI_BFu8c_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_BFu8i_B()
{
  {
    init_simple_test("aI_BFu8i_B");
    static aI_BFu8i_B lv;
    check2(sizeof(lv), 6, "sizeof(aI_BFu8i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_BFu8i_B)");
    check_field_offset(lv, v1, 0, "aI_BFu8i_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aI_BFu8i_B");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aI_BFu8i_B");
    check_field_offset(lv, v3, 5, "aI_BFu8i_B.v3");
  }
}
static Arrange_To_Call_Me vaI_BFu8i_B(Test_aI_BFu8i_B, "aI_BFu8i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_BFu8ll_B()
{
  {
    init_simple_test("aI_BFu8ll_B");
    static aI_BFu8ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aI_BFu8ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_BFu8ll_B)");
    check_field_offset(lv, v1, 0, "aI_BFu8ll_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aI_BFu8ll_B");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aI_BFu8ll_B");
    check_field_offset(lv, v3, 5, "aI_BFu8ll_B.v3");
  }
}
static Arrange_To_Call_Me vaI_BFu8ll_B(Test_aI_BFu8ll_B, "aI_BFu8ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_BFu8s_B()
{
  {
    init_simple_test("aI_BFu8s_B");
    static aI_BFu8s_B lv;
    check2(sizeof(lv), 6, "sizeof(aI_BFu8s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_BFu8s_B)");
    check_field_offset(lv, v1, 0, "aI_BFu8s_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aI_BFu8s_B");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aI_BFu8s_B");
    check_field_offset(lv, v3, 5, "aI_BFu8s_B.v3");
  }
}
static Arrange_To_Call_Me vaI_BFu8s_B(Test_aI_BFu8s_B, "aI_BFu8s_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_BFu9i_B()
{
  {
    init_simple_test("aI_BFu9i_B");
    static aI_BFu9i_B lv;
    check2(sizeof(lv), 7, "sizeof(aI_BFu9i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_BFu9i_B)");
    check_field_offset(lv, v1, 0, "aI_BFu9i_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aI_BFu9i_B");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aI_BFu9i_B");
    check_field_offset(lv, v3, 6, "aI_BFu9i_B.v3");
  }
}
static Arrange_To_Call_Me vaI_BFu9i_B(Test_aI_BFu9i_B, "aI_BFu9i_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_BFu9ll_B()
{
  {
    init_simple_test("aI_BFu9ll_B");
    static aI_BFu9ll_B lv;
    check2(sizeof(lv), 7, "sizeof(aI_BFu9ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_BFu9ll_B)");
    check_field_offset(lv, v1, 0, "aI_BFu9ll_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aI_BFu9ll_B");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aI_BFu9ll_B");
    check_field_offset(lv, v3, 6, "aI_BFu9ll_B.v3");
  }
}
static Arrange_To_Call_Me vaI_BFu9ll_B(Test_aI_BFu9ll_B, "aI_BFu9ll_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_BFu9s_B()
{
  {
    init_simple_test("aI_BFu9s_B");
    static aI_BFu9s_B lv;
    check2(sizeof(lv), 7, "sizeof(aI_BFu9s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_BFu9s_B)");
    check_field_offset(lv, v1, 0, "aI_BFu9s_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aI_BFu9s_B");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aI_BFu9s_B");
    check_field_offset(lv, v3, 6, "aI_BFu9s_B.v3");
  }
}
static Arrange_To_Call_Me vaI_BFu9s_B(Test_aI_BFu9s_B, "aI_BFu9s_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_C_B()
{
  {
    init_simple_test("aI_C_B");
    aI_C_B lv;
    check2(sizeof(lv), 6, "sizeof(aI_C_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_C_B)");
    check_field_offset(lv, v1, 0, "aI_C_B.v1");
    check_field_offset(lv, v2, 4, "aI_C_B.v2");
    check_field_offset(lv, v3, 5, "aI_C_B.v3");
  }
}
static Arrange_To_Call_Me vaI_C_B(Test_aI_C_B, "aI_C_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_D_B()
{
  {
    init_simple_test("aI_D_B");
    aI_D_B lv;
    check2(sizeof(lv), 13, "sizeof(aI_D_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_D_B)");
    check_field_offset(lv, v1, 0, "aI_D_B.v1");
    check_field_offset(lv, v2, 4, "aI_D_B.v2");
    check_field_offset(lv, v3, 12, "aI_D_B.v3");
  }
}
static Arrange_To_Call_Me vaI_D_B(Test_aI_D_B, "aI_D_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_F_B()
{
  {
    init_simple_test("aI_F_B");
    aI_F_B lv;
    check2(sizeof(lv), 9, "sizeof(aI_F_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_F_B)");
    check_field_offset(lv, v1, 0, "aI_F_B.v1");
    check_field_offset(lv, v2, 4, "aI_F_B.v2");
    check_field_offset(lv, v3, 8, "aI_F_B.v3");
  }
}
static Arrange_To_Call_Me vaI_F_B(Test_aI_F_B, "aI_F_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_I_B()
{
  {
    init_simple_test("aI_I_B");
    aI_I_B lv;
    check2(sizeof(lv), 9, "sizeof(aI_I_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_I_B)");
    check_field_offset(lv, v1, 0, "aI_I_B.v1");
    check_field_offset(lv, v2, 4, "aI_I_B.v2");
    check_field_offset(lv, v3, 8, "aI_I_B.v3");
  }
}
static Arrange_To_Call_Me vaI_I_B(Test_aI_I_B, "aI_I_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_Ip_B()
{
  {
    init_simple_test("aI_Ip_B");
    aI_Ip_B lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aI_Ip_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_Ip_B)");
    check_field_offset(lv, v1, 0, "aI_Ip_B.v1");
    check_field_offset(lv, v2, 4, "aI_Ip_B.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "aI_Ip_B.v3");
  }
}
static Arrange_To_Call_Me vaI_Ip_B(Test_aI_Ip_B, "aI_Ip_B", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_L_B()
{
  {
    init_simple_test("aI_L_B");
    aI_L_B lv;
    check2(sizeof(lv), 13, "sizeof(aI_L_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_L_B)");
    check_field_offset(lv, v1, 0, "aI_L_B.v1");
    check_field_offset(lv, v2, 4, "aI_L_B.v2");
    check_field_offset(lv, v3, 12, "aI_L_B.v3");
  }
}
static Arrange_To_Call_Me vaI_L_B(Test_aI_L_B, "aI_L_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_S_B()
{
  {
    init_simple_test("aI_S_B");
    aI_S_B lv;
    check2(sizeof(lv), 7, "sizeof(aI_S_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_S_B)");
    check_field_offset(lv, v1, 0, "aI_S_B.v1");
    check_field_offset(lv, v2, 4, "aI_S_B.v2");
    check_field_offset(lv, v3, 6, "aI_S_B.v3");
  }
}
static Arrange_To_Call_Me vaI_S_B(Test_aI_S_B, "aI_S_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_Uc_B()
{
  {
    init_simple_test("aI_Uc_B");
    aI_Uc_B lv;
    check2(sizeof(lv), 6, "sizeof(aI_Uc_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_Uc_B)");
    check_field_offset(lv, v1, 0, "aI_Uc_B.v1");
    check_field_offset(lv, v2, 4, "aI_Uc_B.v2");
    check_field_offset(lv, v3, 5, "aI_Uc_B.v3");
  }
}
static Arrange_To_Call_Me vaI_Uc_B(Test_aI_Uc_B, "aI_Uc_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_Ui_B()
{
  {
    init_simple_test("aI_Ui_B");
    aI_Ui_B lv;
    check2(sizeof(lv), 9, "sizeof(aI_Ui_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_Ui_B)");
    check_field_offset(lv, v1, 0, "aI_Ui_B.v1");
    check_field_offset(lv, v2, 4, "aI_Ui_B.v2");
    check_field_offset(lv, v3, 8, "aI_Ui_B.v3");
  }
}
static Arrange_To_Call_Me vaI_Ui_B(Test_aI_Ui_B, "aI_Ui_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_Ul_B()
{
  {
    init_simple_test("aI_Ul_B");
    aI_Ul_B lv;
    check2(sizeof(lv), 13, "sizeof(aI_Ul_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_Ul_B)");
    check_field_offset(lv, v1, 0, "aI_Ul_B.v1");
    check_field_offset(lv, v2, 4, "aI_Ul_B.v2");
    check_field_offset(lv, v3, 12, "aI_Ul_B.v3");
  }
}
static Arrange_To_Call_Me vaI_Ul_B(Test_aI_Ul_B, "aI_Ul_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_Us_B()
{
  {
    init_simple_test("aI_Us_B");
    aI_Us_B lv;
    check2(sizeof(lv), 7, "sizeof(aI_Us_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_Us_B)");
    check_field_offset(lv, v1, 0, "aI_Us_B.v1");
    check_field_offset(lv, v2, 4, "aI_Us_B.v2");
    check_field_offset(lv, v3, 6, "aI_Us_B.v3");
  }
}
static Arrange_To_Call_Me vaI_Us_B(Test_aI_Us_B, "aI_Us_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aI_Vp_B()
{
  {
    init_simple_test("aI_Vp_B");
    aI_Vp_B lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aI_Vp_B)");
    check2(__alignof__(lv), 1, "__alignof__(aI_Vp_B)");
    check_field_offset(lv, v1, 0, "aI_Vp_B.v1");
    check_field_offset(lv, v2, 4, "aI_Vp_B.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "aI_Vp_B.v3");
  }
}
static Arrange_To_Call_Me vaI_Vp_B(Test_aI_Vp_B, "aI_Vp_B", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B()
{
  {
    init_simple_test("aIp_B");
    aIp_B lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aIp_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B)");
    check_field_offset(lv, v1, 0, "aIp_B.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B.v2");
  }
}
static Arrange_To_Call_Me vaIp_B(Test_aIp_B, "aIp_B", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_B()
{
  {
    init_simple_test("aIp_B_B");
    aIp_B_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aIp_B_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_B)");
    check_field_offset(lv, v1, 0, "aIp_B_B.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_B.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aIp_B_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_B_B(Test_aIp_B_B, "aIp_B_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_BFu15i()
{
  {
    init_simple_test("aIp_B_BFu15i");
    static aIp_B_BFu15i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aIp_B_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_BFu15i)");
    check_field_offset(lv, v1, 0, "aIp_B_BFu15i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_BFu15i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 15, 1, "aIp_B_BFu15i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 15, hide_ull(1LL<<14), "aIp_B_BFu15i");
  }
}
static Arrange_To_Call_Me vaIp_B_BFu15i(Test_aIp_B_BFu15i, "aIp_B_BFu15i", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_BFu15ll()
{
  {
    init_simple_test("aIp_B_BFu15ll");
    static aIp_B_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aIp_B_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_BFu15ll)");
    check_field_offset(lv, v1, 0, "aIp_B_BFu15ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_BFu15ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 15, 1, "aIp_B_BFu15ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 15, hide_ull(1LL<<14), "aIp_B_BFu15ll");
  }
}
static Arrange_To_Call_Me vaIp_B_BFu15ll(Test_aIp_B_BFu15ll, "aIp_B_BFu15ll", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_BFu15s()
{
  {
    init_simple_test("aIp_B_BFu15s");
    static aIp_B_BFu15s lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aIp_B_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_BFu15s)");
    check_field_offset(lv, v1, 0, "aIp_B_BFu15s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_BFu15s.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 15, 1, "aIp_B_BFu15s");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 15, hide_ull(1LL<<14), "aIp_B_BFu15s");
  }
}
static Arrange_To_Call_Me vaIp_B_BFu15s(Test_aIp_B_BFu15s, "aIp_B_BFu15s", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_BFu16i()
{
  {
    init_simple_test("aIp_B_BFu16i");
    static aIp_B_BFu16i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aIp_B_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_BFu16i)");
    check_field_offset(lv, v1, 0, "aIp_B_BFu16i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_BFu16i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 16, 1, "aIp_B_BFu16i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 16, hide_ull(1LL<<15), "aIp_B_BFu16i");
  }
}
static Arrange_To_Call_Me vaIp_B_BFu16i(Test_aIp_B_BFu16i, "aIp_B_BFu16i", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_BFu16ll()
{
  {
    init_simple_test("aIp_B_BFu16ll");
    static aIp_B_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aIp_B_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_BFu16ll)");
    check_field_offset(lv, v1, 0, "aIp_B_BFu16ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_BFu16ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 16, 1, "aIp_B_BFu16ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 16, hide_ull(1LL<<15), "aIp_B_BFu16ll");
  }
}
static Arrange_To_Call_Me vaIp_B_BFu16ll(Test_aIp_B_BFu16ll, "aIp_B_BFu16ll", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_BFu16s()
{
  {
    init_simple_test("aIp_B_BFu16s");
    static aIp_B_BFu16s lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aIp_B_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_BFu16s)");
    check_field_offset(lv, v1, 0, "aIp_B_BFu16s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_BFu16s.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 16, 1, "aIp_B_BFu16s");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 16, hide_ull(1LL<<15), "aIp_B_BFu16s");
  }
}
static Arrange_To_Call_Me vaIp_B_BFu16s(Test_aIp_B_BFu16s, "aIp_B_BFu16s", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_BFu17i()
{
  {
    init_simple_test("aIp_B_BFu17i");
    static aIp_B_BFu17i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aIp_B_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_BFu17i)");
    check_field_offset(lv, v1, 0, "aIp_B_BFu17i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_BFu17i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 17, 1, "aIp_B_BFu17i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 17, hide_ull(1LL<<16), "aIp_B_BFu17i");
  }
}
static Arrange_To_Call_Me vaIp_B_BFu17i(Test_aIp_B_BFu17i, "aIp_B_BFu17i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_BFu17ll()
{
  {
    init_simple_test("aIp_B_BFu17ll");
    static aIp_B_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aIp_B_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_BFu17ll)");
    check_field_offset(lv, v1, 0, "aIp_B_BFu17ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_BFu17ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 17, 1, "aIp_B_BFu17ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 17, hide_ull(1LL<<16), "aIp_B_BFu17ll");
  }
}
static Arrange_To_Call_Me vaIp_B_BFu17ll(Test_aIp_B_BFu17ll, "aIp_B_BFu17ll", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_BFu1c()
{
  {
    init_simple_test("aIp_B_BFu1c");
    static aIp_B_BFu1c lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aIp_B_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_BFu1c)");
    check_field_offset(lv, v1, 0, "aIp_B_BFu1c.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_BFu1c.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 1, 1, "aIp_B_BFu1c");
  }
}
static Arrange_To_Call_Me vaIp_B_BFu1c(Test_aIp_B_BFu1c, "aIp_B_BFu1c", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_BFu1i()
{
  {
    init_simple_test("aIp_B_BFu1i");
    static aIp_B_BFu1i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aIp_B_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_BFu1i)");
    check_field_offset(lv, v1, 0, "aIp_B_BFu1i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_BFu1i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 1, 1, "aIp_B_BFu1i");
  }
}
static Arrange_To_Call_Me vaIp_B_BFu1i(Test_aIp_B_BFu1i, "aIp_B_BFu1i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_BFu1ll()
{
  {
    init_simple_test("aIp_B_BFu1ll");
    static aIp_B_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aIp_B_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_BFu1ll)");
    check_field_offset(lv, v1, 0, "aIp_B_BFu1ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_BFu1ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 1, 1, "aIp_B_BFu1ll");
  }
}
static Arrange_To_Call_Me vaIp_B_BFu1ll(Test_aIp_B_BFu1ll, "aIp_B_BFu1ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_BFu1s()
{
  {
    init_simple_test("aIp_B_BFu1s");
    static aIp_B_BFu1s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aIp_B_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_BFu1s)");
    check_field_offset(lv, v1, 0, "aIp_B_BFu1s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_BFu1s.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 1, 1, "aIp_B_BFu1s");
  }
}
static Arrange_To_Call_Me vaIp_B_BFu1s(Test_aIp_B_BFu1s, "aIp_B_BFu1s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_BFu31i()
{
  {
    init_simple_test("aIp_B_BFu31i");
    static aIp_B_BFu31i lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aIp_B_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_BFu31i)");
    check_field_offset(lv, v1, 0, "aIp_B_BFu31i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_BFu31i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 31, 1, "aIp_B_BFu31i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 31, hide_ull(1LL<<30), "aIp_B_BFu31i");
  }
}
static Arrange_To_Call_Me vaIp_B_BFu31i(Test_aIp_B_BFu31i, "aIp_B_BFu31i", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_BFu31ll()
{
  {
    init_simple_test("aIp_B_BFu31ll");
    static aIp_B_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aIp_B_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_BFu31ll)");
    check_field_offset(lv, v1, 0, "aIp_B_BFu31ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_BFu31ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 31, 1, "aIp_B_BFu31ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 31, hide_ull(1LL<<30), "aIp_B_BFu31ll");
  }
}
static Arrange_To_Call_Me vaIp_B_BFu31ll(Test_aIp_B_BFu31ll, "aIp_B_BFu31ll", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_BFu32i()
{
  {
    init_simple_test("aIp_B_BFu32i");
    static aIp_B_BFu32i lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aIp_B_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_BFu32i)");
    check_field_offset(lv, v1, 0, "aIp_B_BFu32i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_BFu32i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 32, 1, "aIp_B_BFu32i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 32, hide_ull(1LL<<31), "aIp_B_BFu32i");
  }
}
static Arrange_To_Call_Me vaIp_B_BFu32i(Test_aIp_B_BFu32i, "aIp_B_BFu32i", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_BFu32ll()
{
  {
    init_simple_test("aIp_B_BFu32ll");
    static aIp_B_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aIp_B_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_BFu32ll)");
    check_field_offset(lv, v1, 0, "aIp_B_BFu32ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_BFu32ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 32, 1, "aIp_B_BFu32ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 32, hide_ull(1LL<<31), "aIp_B_BFu32ll");
  }
}
static Arrange_To_Call_Me vaIp_B_BFu32ll(Test_aIp_B_BFu32ll, "aIp_B_BFu32ll", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_BFu33()
{
  {
    init_simple_test("aIp_B_BFu33");
    static aIp_B_BFu33 lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aIp_B_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_BFu33)");
    check_field_offset(lv, v1, 0, "aIp_B_BFu33.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_BFu33.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 33, 1, "aIp_B_BFu33");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 33, hide_ull(1LL<<32), "aIp_B_BFu33");
  }
}
static Arrange_To_Call_Me vaIp_B_BFu33(Test_aIp_B_BFu33, "aIp_B_BFu33", ABISELECT(14,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_BFu7c()
{
  {
    init_simple_test("aIp_B_BFu7c");
    static aIp_B_BFu7c lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aIp_B_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_BFu7c)");
    check_field_offset(lv, v1, 0, "aIp_B_BFu7c.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_BFu7c.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, 1, "aIp_B_BFu7c");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, hide_ull(1LL<<6), "aIp_B_BFu7c");
  }
}
static Arrange_To_Call_Me vaIp_B_BFu7c(Test_aIp_B_BFu7c, "aIp_B_BFu7c", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_BFu7i()
{
  {
    init_simple_test("aIp_B_BFu7i");
    static aIp_B_BFu7i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aIp_B_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_BFu7i)");
    check_field_offset(lv, v1, 0, "aIp_B_BFu7i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_BFu7i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, 1, "aIp_B_BFu7i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, hide_ull(1LL<<6), "aIp_B_BFu7i");
  }
}
static Arrange_To_Call_Me vaIp_B_BFu7i(Test_aIp_B_BFu7i, "aIp_B_BFu7i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_BFu7ll()
{
  {
    init_simple_test("aIp_B_BFu7ll");
    static aIp_B_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aIp_B_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_BFu7ll)");
    check_field_offset(lv, v1, 0, "aIp_B_BFu7ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_BFu7ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, 1, "aIp_B_BFu7ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, hide_ull(1LL<<6), "aIp_B_BFu7ll");
  }
}
static Arrange_To_Call_Me vaIp_B_BFu7ll(Test_aIp_B_BFu7ll, "aIp_B_BFu7ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_BFu7s()
{
  {
    init_simple_test("aIp_B_BFu7s");
    static aIp_B_BFu7s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aIp_B_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_BFu7s)");
    check_field_offset(lv, v1, 0, "aIp_B_BFu7s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_BFu7s.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, 1, "aIp_B_BFu7s");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, hide_ull(1LL<<6), "aIp_B_BFu7s");
  }
}
static Arrange_To_Call_Me vaIp_B_BFu7s(Test_aIp_B_BFu7s, "aIp_B_BFu7s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_BFu8c()
{
  {
    init_simple_test("aIp_B_BFu8c");
    static aIp_B_BFu8c lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aIp_B_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_BFu8c)");
    check_field_offset(lv, v1, 0, "aIp_B_BFu8c.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_BFu8c.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, 1, "aIp_B_BFu8c");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, hide_ull(1LL<<7), "aIp_B_BFu8c");
  }
}
static Arrange_To_Call_Me vaIp_B_BFu8c(Test_aIp_B_BFu8c, "aIp_B_BFu8c", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_BFu8i()
{
  {
    init_simple_test("aIp_B_BFu8i");
    static aIp_B_BFu8i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aIp_B_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_BFu8i)");
    check_field_offset(lv, v1, 0, "aIp_B_BFu8i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_BFu8i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, 1, "aIp_B_BFu8i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, hide_ull(1LL<<7), "aIp_B_BFu8i");
  }
}
static Arrange_To_Call_Me vaIp_B_BFu8i(Test_aIp_B_BFu8i, "aIp_B_BFu8i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_BFu8ll()
{
  {
    init_simple_test("aIp_B_BFu8ll");
    static aIp_B_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aIp_B_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_BFu8ll)");
    check_field_offset(lv, v1, 0, "aIp_B_BFu8ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_BFu8ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, 1, "aIp_B_BFu8ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, hide_ull(1LL<<7), "aIp_B_BFu8ll");
  }
}
static Arrange_To_Call_Me vaIp_B_BFu8ll(Test_aIp_B_BFu8ll, "aIp_B_BFu8ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_BFu8s()
{
  {
    init_simple_test("aIp_B_BFu8s");
    static aIp_B_BFu8s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aIp_B_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_BFu8s)");
    check_field_offset(lv, v1, 0, "aIp_B_BFu8s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_BFu8s.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, 1, "aIp_B_BFu8s");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, hide_ull(1LL<<7), "aIp_B_BFu8s");
  }
}
static Arrange_To_Call_Me vaIp_B_BFu8s(Test_aIp_B_BFu8s, "aIp_B_BFu8s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_BFu9i()
{
  {
    init_simple_test("aIp_B_BFu9i");
    static aIp_B_BFu9i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aIp_B_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_BFu9i)");
    check_field_offset(lv, v1, 0, "aIp_B_BFu9i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_BFu9i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 9, 1, "aIp_B_BFu9i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 9, hide_ull(1LL<<8), "aIp_B_BFu9i");
  }
}
static Arrange_To_Call_Me vaIp_B_BFu9i(Test_aIp_B_BFu9i, "aIp_B_BFu9i", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_BFu9ll()
{
  {
    init_simple_test("aIp_B_BFu9ll");
    static aIp_B_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aIp_B_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_BFu9ll)");
    check_field_offset(lv, v1, 0, "aIp_B_BFu9ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_BFu9ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 9, 1, "aIp_B_BFu9ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 9, hide_ull(1LL<<8), "aIp_B_BFu9ll");
  }
}
static Arrange_To_Call_Me vaIp_B_BFu9ll(Test_aIp_B_BFu9ll, "aIp_B_BFu9ll", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_BFu9s()
{
  {
    init_simple_test("aIp_B_BFu9s");
    static aIp_B_BFu9s lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aIp_B_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_BFu9s)");
    check_field_offset(lv, v1, 0, "aIp_B_BFu9s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_BFu9s.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 9, 1, "aIp_B_BFu9s");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 9, hide_ull(1LL<<8), "aIp_B_BFu9s");
  }
}
static Arrange_To_Call_Me vaIp_B_BFu9s(Test_aIp_B_BFu9s, "aIp_B_BFu9s", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_C()
{
  {
    init_simple_test("aIp_B_C");
    aIp_B_C lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aIp_B_C)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_C)");
    check_field_offset(lv, v1, 0, "aIp_B_C.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_C.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aIp_B_C.v3");
  }
}
static Arrange_To_Call_Me vaIp_B_C(Test_aIp_B_C, "aIp_B_C", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_D()
{
  {
    init_simple_test("aIp_B_D");
    aIp_B_D lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aIp_B_D)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_D)");
    check_field_offset(lv, v1, 0, "aIp_B_D.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_D.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aIp_B_D.v3");
  }
}
static Arrange_To_Call_Me vaIp_B_D(Test_aIp_B_D, "aIp_B_D", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_F()
{
  {
    init_simple_test("aIp_B_F");
    aIp_B_F lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aIp_B_F)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_F)");
    check_field_offset(lv, v1, 0, "aIp_B_F.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_F.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aIp_B_F.v3");
  }
}
static Arrange_To_Call_Me vaIp_B_F(Test_aIp_B_F, "aIp_B_F", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_I()
{
  {
    init_simple_test("aIp_B_I");
    aIp_B_I lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aIp_B_I)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_I)");
    check_field_offset(lv, v1, 0, "aIp_B_I.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_I.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aIp_B_I.v3");
  }
}
static Arrange_To_Call_Me vaIp_B_I(Test_aIp_B_I, "aIp_B_I", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_Ip()
{
  {
    init_simple_test("aIp_B_Ip");
    aIp_B_Ip lv;
    check2(sizeof(lv), ABISELECT(17,9), "sizeof(aIp_B_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_Ip)");
    check_field_offset(lv, v1, 0, "aIp_B_Ip.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_Ip.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aIp_B_Ip.v3");
  }
}
static Arrange_To_Call_Me vaIp_B_Ip(Test_aIp_B_Ip, "aIp_B_Ip", ABISELECT(17,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_L()
{
  {
    init_simple_test("aIp_B_L");
    aIp_B_L lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aIp_B_L)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_L)");
    check_field_offset(lv, v1, 0, "aIp_B_L.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_L.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aIp_B_L.v3");
  }
}
static Arrange_To_Call_Me vaIp_B_L(Test_aIp_B_L, "aIp_B_L", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_S()
{
  {
    init_simple_test("aIp_B_S");
    aIp_B_S lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aIp_B_S)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_S)");
    check_field_offset(lv, v1, 0, "aIp_B_S.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_S.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aIp_B_S.v3");
  }
}
static Arrange_To_Call_Me vaIp_B_S(Test_aIp_B_S, "aIp_B_S", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_Uc()
{
  {
    init_simple_test("aIp_B_Uc");
    aIp_B_Uc lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aIp_B_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_Uc)");
    check_field_offset(lv, v1, 0, "aIp_B_Uc.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_Uc.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aIp_B_Uc.v3");
  }
}
static Arrange_To_Call_Me vaIp_B_Uc(Test_aIp_B_Uc, "aIp_B_Uc", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_Ui()
{
  {
    init_simple_test("aIp_B_Ui");
    aIp_B_Ui lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aIp_B_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_Ui)");
    check_field_offset(lv, v1, 0, "aIp_B_Ui.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_Ui.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aIp_B_Ui.v3");
  }
}
static Arrange_To_Call_Me vaIp_B_Ui(Test_aIp_B_Ui, "aIp_B_Ui", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_Ul()
{
  {
    init_simple_test("aIp_B_Ul");
    aIp_B_Ul lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aIp_B_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_Ul)");
    check_field_offset(lv, v1, 0, "aIp_B_Ul.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_Ul.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aIp_B_Ul.v3");
  }
}
static Arrange_To_Call_Me vaIp_B_Ul(Test_aIp_B_Ul, "aIp_B_Ul", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_Us()
{
  {
    init_simple_test("aIp_B_Us");
    aIp_B_Us lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aIp_B_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_Us)");
    check_field_offset(lv, v1, 0, "aIp_B_Us.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_Us.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aIp_B_Us.v3");
  }
}
static Arrange_To_Call_Me vaIp_B_Us(Test_aIp_B_Us, "aIp_B_Us", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_B_Vp()
{
  {
    init_simple_test("aIp_B_Vp");
    aIp_B_Vp lv;
    check2(sizeof(lv), ABISELECT(17,9), "sizeof(aIp_B_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_B_Vp)");
    check_field_offset(lv, v1, 0, "aIp_B_Vp.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_B_Vp.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aIp_B_Vp.v3");
  }
}
static Arrange_To_Call_Me vaIp_B_Vp(Test_aIp_B_Vp, "aIp_B_Vp", ABISELECT(17,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_BFu15i_B()
{
  {
    init_simple_test("aIp_BFu15i_B");
    static aIp_BFu15i_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aIp_BFu15i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_BFu15i_B)");
    check_field_offset(lv, v1, 0, "aIp_BFu15i_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "aIp_BFu15i_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "aIp_BFu15i_B");
    check_field_offset(lv, v3, ABISELECT(10,6), "aIp_BFu15i_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_BFu15i_B(Test_aIp_BFu15i_B, "aIp_BFu15i_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_BFu15ll_B()
{
  {
    init_simple_test("aIp_BFu15ll_B");
    static aIp_BFu15ll_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aIp_BFu15ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_BFu15ll_B)");
    check_field_offset(lv, v1, 0, "aIp_BFu15ll_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "aIp_BFu15ll_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "aIp_BFu15ll_B");
    check_field_offset(lv, v3, ABISELECT(10,6), "aIp_BFu15ll_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_BFu15ll_B(Test_aIp_BFu15ll_B, "aIp_BFu15ll_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_BFu15s_B()
{
  {
    init_simple_test("aIp_BFu15s_B");
    static aIp_BFu15s_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aIp_BFu15s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_BFu15s_B)");
    check_field_offset(lv, v1, 0, "aIp_BFu15s_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "aIp_BFu15s_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "aIp_BFu15s_B");
    check_field_offset(lv, v3, ABISELECT(10,6), "aIp_BFu15s_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_BFu15s_B(Test_aIp_BFu15s_B, "aIp_BFu15s_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_BFu16i_B()
{
  {
    init_simple_test("aIp_BFu16i_B");
    static aIp_BFu16i_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aIp_BFu16i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_BFu16i_B)");
    check_field_offset(lv, v1, 0, "aIp_BFu16i_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "aIp_BFu16i_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "aIp_BFu16i_B");
    check_field_offset(lv, v3, ABISELECT(10,6), "aIp_BFu16i_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_BFu16i_B(Test_aIp_BFu16i_B, "aIp_BFu16i_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_BFu16ll_B()
{
  {
    init_simple_test("aIp_BFu16ll_B");
    static aIp_BFu16ll_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aIp_BFu16ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_BFu16ll_B)");
    check_field_offset(lv, v1, 0, "aIp_BFu16ll_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "aIp_BFu16ll_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "aIp_BFu16ll_B");
    check_field_offset(lv, v3, ABISELECT(10,6), "aIp_BFu16ll_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_BFu16ll_B(Test_aIp_BFu16ll_B, "aIp_BFu16ll_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_BFu16s_B()
{
  {
    init_simple_test("aIp_BFu16s_B");
    static aIp_BFu16s_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aIp_BFu16s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_BFu16s_B)");
    check_field_offset(lv, v1, 0, "aIp_BFu16s_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "aIp_BFu16s_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "aIp_BFu16s_B");
    check_field_offset(lv, v3, ABISELECT(10,6), "aIp_BFu16s_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_BFu16s_B(Test_aIp_BFu16s_B, "aIp_BFu16s_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_BFu17i_B()
{
  {
    init_simple_test("aIp_BFu17i_B");
    static aIp_BFu17i_B lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aIp_BFu17i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_BFu17i_B)");
    check_field_offset(lv, v1, 0, "aIp_BFu17i_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "aIp_BFu17i_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "aIp_BFu17i_B");
    check_field_offset(lv, v3, ABISELECT(11,7), "aIp_BFu17i_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_BFu17i_B(Test_aIp_BFu17i_B, "aIp_BFu17i_B", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_BFu17ll_B()
{
  {
    init_simple_test("aIp_BFu17ll_B");
    static aIp_BFu17ll_B lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aIp_BFu17ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_BFu17ll_B)");
    check_field_offset(lv, v1, 0, "aIp_BFu17ll_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "aIp_BFu17ll_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "aIp_BFu17ll_B");
    check_field_offset(lv, v3, ABISELECT(11,7), "aIp_BFu17ll_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_BFu17ll_B(Test_aIp_BFu17ll_B, "aIp_BFu17ll_B", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_BFu1c_B()
{
  {
    init_simple_test("aIp_BFu1c_B");
    static aIp_BFu1c_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aIp_BFu1c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_BFu1c_B)");
    check_field_offset(lv, v1, 0, "aIp_BFu1c_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "aIp_BFu1c_B");
    check_field_offset(lv, v3, ABISELECT(9,5), "aIp_BFu1c_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_BFu1c_B(Test_aIp_BFu1c_B, "aIp_BFu1c_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_BFu1i_B()
{
  {
    init_simple_test("aIp_BFu1i_B");
    static aIp_BFu1i_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aIp_BFu1i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_BFu1i_B)");
    check_field_offset(lv, v1, 0, "aIp_BFu1i_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "aIp_BFu1i_B");
    check_field_offset(lv, v3, ABISELECT(9,5), "aIp_BFu1i_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_BFu1i_B(Test_aIp_BFu1i_B, "aIp_BFu1i_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_BFu1ll_B()
{
  {
    init_simple_test("aIp_BFu1ll_B");
    static aIp_BFu1ll_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aIp_BFu1ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_BFu1ll_B)");
    check_field_offset(lv, v1, 0, "aIp_BFu1ll_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "aIp_BFu1ll_B");
    check_field_offset(lv, v3, ABISELECT(9,5), "aIp_BFu1ll_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_BFu1ll_B(Test_aIp_BFu1ll_B, "aIp_BFu1ll_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_BFu1s_B()
{
  {
    init_simple_test("aIp_BFu1s_B");
    static aIp_BFu1s_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aIp_BFu1s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_BFu1s_B)");
    check_field_offset(lv, v1, 0, "aIp_BFu1s_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "aIp_BFu1s_B");
    check_field_offset(lv, v3, ABISELECT(9,5), "aIp_BFu1s_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_BFu1s_B(Test_aIp_BFu1s_B, "aIp_BFu1s_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_BFu31i_B()
{
  {
    init_simple_test("aIp_BFu31i_B");
    static aIp_BFu31i_B lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aIp_BFu31i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_BFu31i_B)");
    check_field_offset(lv, v1, 0, "aIp_BFu31i_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "aIp_BFu31i_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "aIp_BFu31i_B");
    check_field_offset(lv, v3, ABISELECT(12,8), "aIp_BFu31i_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_BFu31i_B(Test_aIp_BFu31i_B, "aIp_BFu31i_B", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_BFu31ll_B()
{
  {
    init_simple_test("aIp_BFu31ll_B");
    static aIp_BFu31ll_B lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aIp_BFu31ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_BFu31ll_B)");
    check_field_offset(lv, v1, 0, "aIp_BFu31ll_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "aIp_BFu31ll_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "aIp_BFu31ll_B");
    check_field_offset(lv, v3, ABISELECT(12,8), "aIp_BFu31ll_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_BFu31ll_B(Test_aIp_BFu31ll_B, "aIp_BFu31ll_B", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_BFu32i_B()
{
  {
    init_simple_test("aIp_BFu32i_B");
    static aIp_BFu32i_B lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aIp_BFu32i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_BFu32i_B)");
    check_field_offset(lv, v1, 0, "aIp_BFu32i_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "aIp_BFu32i_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "aIp_BFu32i_B");
    check_field_offset(lv, v3, ABISELECT(12,8), "aIp_BFu32i_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_BFu32i_B(Test_aIp_BFu32i_B, "aIp_BFu32i_B", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_BFu32ll_B()
{
  {
    init_simple_test("aIp_BFu32ll_B");
    static aIp_BFu32ll_B lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aIp_BFu32ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_BFu32ll_B)");
    check_field_offset(lv, v1, 0, "aIp_BFu32ll_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "aIp_BFu32ll_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "aIp_BFu32ll_B");
    check_field_offset(lv, v3, ABISELECT(12,8), "aIp_BFu32ll_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_BFu32ll_B(Test_aIp_BFu32ll_B, "aIp_BFu32ll_B", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_BFu33_B()
{
  {
    init_simple_test("aIp_BFu33_B");
    static aIp_BFu33_B lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aIp_BFu33_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_BFu33_B)");
    check_field_offset(lv, v1, 0, "aIp_BFu33_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, 1, "aIp_BFu33_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, hide_ull(1LL<<32), "aIp_BFu33_B");
    check_field_offset(lv, v3, ABISELECT(13,9), "aIp_BFu33_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_BFu33_B(Test_aIp_BFu33_B, "aIp_BFu33_B", ABISELECT(14,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_BFu7c_B()
{
  {
    init_simple_test("aIp_BFu7c_B");
    static aIp_BFu7c_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aIp_BFu7c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_BFu7c_B)");
    check_field_offset(lv, v1, 0, "aIp_BFu7c_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "aIp_BFu7c_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "aIp_BFu7c_B");
    check_field_offset(lv, v3, ABISELECT(9,5), "aIp_BFu7c_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_BFu7c_B(Test_aIp_BFu7c_B, "aIp_BFu7c_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_BFu7i_B()
{
  {
    init_simple_test("aIp_BFu7i_B");
    static aIp_BFu7i_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aIp_BFu7i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_BFu7i_B)");
    check_field_offset(lv, v1, 0, "aIp_BFu7i_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "aIp_BFu7i_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "aIp_BFu7i_B");
    check_field_offset(lv, v3, ABISELECT(9,5), "aIp_BFu7i_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_BFu7i_B(Test_aIp_BFu7i_B, "aIp_BFu7i_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_BFu7ll_B()
{
  {
    init_simple_test("aIp_BFu7ll_B");
    static aIp_BFu7ll_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aIp_BFu7ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_BFu7ll_B)");
    check_field_offset(lv, v1, 0, "aIp_BFu7ll_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "aIp_BFu7ll_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "aIp_BFu7ll_B");
    check_field_offset(lv, v3, ABISELECT(9,5), "aIp_BFu7ll_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_BFu7ll_B(Test_aIp_BFu7ll_B, "aIp_BFu7ll_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_BFu7s_B()
{
  {
    init_simple_test("aIp_BFu7s_B");
    static aIp_BFu7s_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aIp_BFu7s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_BFu7s_B)");
    check_field_offset(lv, v1, 0, "aIp_BFu7s_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "aIp_BFu7s_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "aIp_BFu7s_B");
    check_field_offset(lv, v3, ABISELECT(9,5), "aIp_BFu7s_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_BFu7s_B(Test_aIp_BFu7s_B, "aIp_BFu7s_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_BFu8c_B()
{
  {
    init_simple_test("aIp_BFu8c_B");
    static aIp_BFu8c_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aIp_BFu8c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_BFu8c_B)");
    check_field_offset(lv, v1, 0, "aIp_BFu8c_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "aIp_BFu8c_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "aIp_BFu8c_B");
    check_field_offset(lv, v3, ABISELECT(9,5), "aIp_BFu8c_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_BFu8c_B(Test_aIp_BFu8c_B, "aIp_BFu8c_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_BFu8i_B()
{
  {
    init_simple_test("aIp_BFu8i_B");
    static aIp_BFu8i_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aIp_BFu8i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_BFu8i_B)");
    check_field_offset(lv, v1, 0, "aIp_BFu8i_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "aIp_BFu8i_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "aIp_BFu8i_B");
    check_field_offset(lv, v3, ABISELECT(9,5), "aIp_BFu8i_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_BFu8i_B(Test_aIp_BFu8i_B, "aIp_BFu8i_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_BFu8ll_B()
{
  {
    init_simple_test("aIp_BFu8ll_B");
    static aIp_BFu8ll_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aIp_BFu8ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_BFu8ll_B)");
    check_field_offset(lv, v1, 0, "aIp_BFu8ll_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "aIp_BFu8ll_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "aIp_BFu8ll_B");
    check_field_offset(lv, v3, ABISELECT(9,5), "aIp_BFu8ll_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_BFu8ll_B(Test_aIp_BFu8ll_B, "aIp_BFu8ll_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_BFu8s_B()
{
  {
    init_simple_test("aIp_BFu8s_B");
    static aIp_BFu8s_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aIp_BFu8s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_BFu8s_B)");
    check_field_offset(lv, v1, 0, "aIp_BFu8s_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "aIp_BFu8s_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "aIp_BFu8s_B");
    check_field_offset(lv, v3, ABISELECT(9,5), "aIp_BFu8s_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_BFu8s_B(Test_aIp_BFu8s_B, "aIp_BFu8s_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_BFu9i_B()
{
  {
    init_simple_test("aIp_BFu9i_B");
    static aIp_BFu9i_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aIp_BFu9i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_BFu9i_B)");
    check_field_offset(lv, v1, 0, "aIp_BFu9i_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "aIp_BFu9i_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "aIp_BFu9i_B");
    check_field_offset(lv, v3, ABISELECT(10,6), "aIp_BFu9i_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_BFu9i_B(Test_aIp_BFu9i_B, "aIp_BFu9i_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_BFu9ll_B()
{
  {
    init_simple_test("aIp_BFu9ll_B");
    static aIp_BFu9ll_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aIp_BFu9ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_BFu9ll_B)");
    check_field_offset(lv, v1, 0, "aIp_BFu9ll_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "aIp_BFu9ll_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "aIp_BFu9ll_B");
    check_field_offset(lv, v3, ABISELECT(10,6), "aIp_BFu9ll_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_BFu9ll_B(Test_aIp_BFu9ll_B, "aIp_BFu9ll_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_BFu9s_B()
{
  {
    init_simple_test("aIp_BFu9s_B");
    static aIp_BFu9s_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aIp_BFu9s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_BFu9s_B)");
    check_field_offset(lv, v1, 0, "aIp_BFu9s_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "aIp_BFu9s_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "aIp_BFu9s_B");
    check_field_offset(lv, v3, ABISELECT(10,6), "aIp_BFu9s_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_BFu9s_B(Test_aIp_BFu9s_B, "aIp_BFu9s_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_C_B()
{
  {
    init_simple_test("aIp_C_B");
    aIp_C_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aIp_C_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_C_B)");
    check_field_offset(lv, v1, 0, "aIp_C_B.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_C_B.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aIp_C_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_C_B(Test_aIp_C_B, "aIp_C_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_D_B()
{
  {
    init_simple_test("aIp_D_B");
    aIp_D_B lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aIp_D_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_D_B)");
    check_field_offset(lv, v1, 0, "aIp_D_B.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_D_B.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "aIp_D_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_D_B(Test_aIp_D_B, "aIp_D_B", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_F_B()
{
  {
    init_simple_test("aIp_F_B");
    aIp_F_B lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aIp_F_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_F_B)");
    check_field_offset(lv, v1, 0, "aIp_F_B.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_F_B.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "aIp_F_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_F_B(Test_aIp_F_B, "aIp_F_B", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_I_B()
{
  {
    init_simple_test("aIp_I_B");
    aIp_I_B lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aIp_I_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_I_B)");
    check_field_offset(lv, v1, 0, "aIp_I_B.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_I_B.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "aIp_I_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_I_B(Test_aIp_I_B, "aIp_I_B", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_Ip_B()
{
  {
    init_simple_test("aIp_Ip_B");
    aIp_Ip_B lv;
    check2(sizeof(lv), ABISELECT(17,9), "sizeof(aIp_Ip_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_Ip_B)");
    check_field_offset(lv, v1, 0, "aIp_Ip_B.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_Ip_B.v2");
    check_field_offset(lv, v3, ABISELECT(16,8), "aIp_Ip_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_Ip_B(Test_aIp_Ip_B, "aIp_Ip_B", ABISELECT(17,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_L_B()
{
  {
    init_simple_test("aIp_L_B");
    aIp_L_B lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aIp_L_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_L_B)");
    check_field_offset(lv, v1, 0, "aIp_L_B.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_L_B.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "aIp_L_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_L_B(Test_aIp_L_B, "aIp_L_B", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_S_B()
{
  {
    init_simple_test("aIp_S_B");
    aIp_S_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aIp_S_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_S_B)");
    check_field_offset(lv, v1, 0, "aIp_S_B.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_S_B.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aIp_S_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_S_B(Test_aIp_S_B, "aIp_S_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_Uc_B()
{
  {
    init_simple_test("aIp_Uc_B");
    aIp_Uc_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aIp_Uc_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_Uc_B)");
    check_field_offset(lv, v1, 0, "aIp_Uc_B.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_Uc_B.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aIp_Uc_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_Uc_B(Test_aIp_Uc_B, "aIp_Uc_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_Ui_B()
{
  {
    init_simple_test("aIp_Ui_B");
    aIp_Ui_B lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aIp_Ui_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_Ui_B)");
    check_field_offset(lv, v1, 0, "aIp_Ui_B.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_Ui_B.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "aIp_Ui_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_Ui_B(Test_aIp_Ui_B, "aIp_Ui_B", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_Ul_B()
{
  {
    init_simple_test("aIp_Ul_B");
    aIp_Ul_B lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aIp_Ul_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_Ul_B)");
    check_field_offset(lv, v1, 0, "aIp_Ul_B.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_Ul_B.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "aIp_Ul_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_Ul_B(Test_aIp_Ul_B, "aIp_Ul_B", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_Us_B()
{
  {
    init_simple_test("aIp_Us_B");
    aIp_Us_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aIp_Us_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_Us_B)");
    check_field_offset(lv, v1, 0, "aIp_Us_B.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_Us_B.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aIp_Us_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_Us_B(Test_aIp_Us_B, "aIp_Us_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aIp_Vp_B()
{
  {
    init_simple_test("aIp_Vp_B");
    aIp_Vp_B lv;
    check2(sizeof(lv), ABISELECT(17,9), "sizeof(aIp_Vp_B)");
    check2(__alignof__(lv), 1, "__alignof__(aIp_Vp_B)");
    check_field_offset(lv, v1, 0, "aIp_Vp_B.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aIp_Vp_B.v2");
    check_field_offset(lv, v3, ABISELECT(16,8), "aIp_Vp_B.v3");
  }
}
static Arrange_To_Call_Me vaIp_Vp_B(Test_aIp_Vp_B, "aIp_Vp_B", ABISELECT(17,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B()
{
  {
    init_simple_test("aL_B");
    aL_B lv;
    check2(sizeof(lv), 9, "sizeof(aL_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B)");
    check_field_offset(lv, v1, 0, "aL_B.v1");
    check_field_offset(lv, v2, 8, "aL_B.v2");
  }
}
static Arrange_To_Call_Me vaL_B(Test_aL_B, "aL_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_B()
{
  {
    init_simple_test("aL_B_B");
    aL_B_B lv;
    check2(sizeof(lv), 10, "sizeof(aL_B_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_B)");
    check_field_offset(lv, v1, 0, "aL_B_B.v1");
    check_field_offset(lv, v2, 8, "aL_B_B.v2");
    check_field_offset(lv, v3, 9, "aL_B_B.v3");
  }
}
static Arrange_To_Call_Me vaL_B_B(Test_aL_B_B, "aL_B_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_BFu15i()
{
  {
    init_simple_test("aL_B_BFu15i");
    static aL_B_BFu15i lv;
    check2(sizeof(lv), 11, "sizeof(aL_B_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_BFu15i)");
    check_field_offset(lv, v1, 0, "aL_B_BFu15i.v1");
    check_field_offset(lv, v2, 8, "aL_B_BFu15i.v2");
    set_bf_and_test(lv, v3, 9, 0, 15, 1, "aL_B_BFu15i");
    set_bf_and_test(lv, v3, 9, 0, 15, hide_ull(1LL<<14), "aL_B_BFu15i");
  }
}
static Arrange_To_Call_Me vaL_B_BFu15i(Test_aL_B_BFu15i, "aL_B_BFu15i", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_BFu15ll()
{
  {
    init_simple_test("aL_B_BFu15ll");
    static aL_B_BFu15ll lv;
    check2(sizeof(lv), 11, "sizeof(aL_B_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_BFu15ll)");
    check_field_offset(lv, v1, 0, "aL_B_BFu15ll.v1");
    check_field_offset(lv, v2, 8, "aL_B_BFu15ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 15, 1, "aL_B_BFu15ll");
    set_bf_and_test(lv, v3, 9, 0, 15, hide_ull(1LL<<14), "aL_B_BFu15ll");
  }
}
static Arrange_To_Call_Me vaL_B_BFu15ll(Test_aL_B_BFu15ll, "aL_B_BFu15ll", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_BFu15s()
{
  {
    init_simple_test("aL_B_BFu15s");
    static aL_B_BFu15s lv;
    check2(sizeof(lv), 11, "sizeof(aL_B_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_BFu15s)");
    check_field_offset(lv, v1, 0, "aL_B_BFu15s.v1");
    check_field_offset(lv, v2, 8, "aL_B_BFu15s.v2");
    set_bf_and_test(lv, v3, 9, 0, 15, 1, "aL_B_BFu15s");
    set_bf_and_test(lv, v3, 9, 0, 15, hide_ull(1LL<<14), "aL_B_BFu15s");
  }
}
static Arrange_To_Call_Me vaL_B_BFu15s(Test_aL_B_BFu15s, "aL_B_BFu15s", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_BFu16i()
{
  {
    init_simple_test("aL_B_BFu16i");
    static aL_B_BFu16i lv;
    check2(sizeof(lv), 11, "sizeof(aL_B_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_BFu16i)");
    check_field_offset(lv, v1, 0, "aL_B_BFu16i.v1");
    check_field_offset(lv, v2, 8, "aL_B_BFu16i.v2");
    set_bf_and_test(lv, v3, 9, 0, 16, 1, "aL_B_BFu16i");
    set_bf_and_test(lv, v3, 9, 0, 16, hide_ull(1LL<<15), "aL_B_BFu16i");
  }
}
static Arrange_To_Call_Me vaL_B_BFu16i(Test_aL_B_BFu16i, "aL_B_BFu16i", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_BFu16ll()
{
  {
    init_simple_test("aL_B_BFu16ll");
    static aL_B_BFu16ll lv;
    check2(sizeof(lv), 11, "sizeof(aL_B_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_BFu16ll)");
    check_field_offset(lv, v1, 0, "aL_B_BFu16ll.v1");
    check_field_offset(lv, v2, 8, "aL_B_BFu16ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 16, 1, "aL_B_BFu16ll");
    set_bf_and_test(lv, v3, 9, 0, 16, hide_ull(1LL<<15), "aL_B_BFu16ll");
  }
}
static Arrange_To_Call_Me vaL_B_BFu16ll(Test_aL_B_BFu16ll, "aL_B_BFu16ll", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_BFu16s()
{
  {
    init_simple_test("aL_B_BFu16s");
    static aL_B_BFu16s lv;
    check2(sizeof(lv), 11, "sizeof(aL_B_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_BFu16s)");
    check_field_offset(lv, v1, 0, "aL_B_BFu16s.v1");
    check_field_offset(lv, v2, 8, "aL_B_BFu16s.v2");
    set_bf_and_test(lv, v3, 9, 0, 16, 1, "aL_B_BFu16s");
    set_bf_and_test(lv, v3, 9, 0, 16, hide_ull(1LL<<15), "aL_B_BFu16s");
  }
}
static Arrange_To_Call_Me vaL_B_BFu16s(Test_aL_B_BFu16s, "aL_B_BFu16s", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_BFu17i()
{
  {
    init_simple_test("aL_B_BFu17i");
    static aL_B_BFu17i lv;
    check2(sizeof(lv), 12, "sizeof(aL_B_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_BFu17i)");
    check_field_offset(lv, v1, 0, "aL_B_BFu17i.v1");
    check_field_offset(lv, v2, 8, "aL_B_BFu17i.v2");
    set_bf_and_test(lv, v3, 9, 0, 17, 1, "aL_B_BFu17i");
    set_bf_and_test(lv, v3, 9, 0, 17, hide_ull(1LL<<16), "aL_B_BFu17i");
  }
}
static Arrange_To_Call_Me vaL_B_BFu17i(Test_aL_B_BFu17i, "aL_B_BFu17i", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_BFu17ll()
{
  {
    init_simple_test("aL_B_BFu17ll");
    static aL_B_BFu17ll lv;
    check2(sizeof(lv), 12, "sizeof(aL_B_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_BFu17ll)");
    check_field_offset(lv, v1, 0, "aL_B_BFu17ll.v1");
    check_field_offset(lv, v2, 8, "aL_B_BFu17ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 17, 1, "aL_B_BFu17ll");
    set_bf_and_test(lv, v3, 9, 0, 17, hide_ull(1LL<<16), "aL_B_BFu17ll");
  }
}
static Arrange_To_Call_Me vaL_B_BFu17ll(Test_aL_B_BFu17ll, "aL_B_BFu17ll", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_BFu1c()
{
  {
    init_simple_test("aL_B_BFu1c");
    static aL_B_BFu1c lv;
    check2(sizeof(lv), 10, "sizeof(aL_B_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_BFu1c)");
    check_field_offset(lv, v1, 0, "aL_B_BFu1c.v1");
    check_field_offset(lv, v2, 8, "aL_B_BFu1c.v2");
    set_bf_and_test(lv, v3, 9, 0, 1, 1, "aL_B_BFu1c");
  }
}
static Arrange_To_Call_Me vaL_B_BFu1c(Test_aL_B_BFu1c, "aL_B_BFu1c", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_BFu1i()
{
  {
    init_simple_test("aL_B_BFu1i");
    static aL_B_BFu1i lv;
    check2(sizeof(lv), 10, "sizeof(aL_B_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_BFu1i)");
    check_field_offset(lv, v1, 0, "aL_B_BFu1i.v1");
    check_field_offset(lv, v2, 8, "aL_B_BFu1i.v2");
    set_bf_and_test(lv, v3, 9, 0, 1, 1, "aL_B_BFu1i");
  }
}
static Arrange_To_Call_Me vaL_B_BFu1i(Test_aL_B_BFu1i, "aL_B_BFu1i", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_BFu1ll()
{
  {
    init_simple_test("aL_B_BFu1ll");
    static aL_B_BFu1ll lv;
    check2(sizeof(lv), 10, "sizeof(aL_B_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_BFu1ll)");
    check_field_offset(lv, v1, 0, "aL_B_BFu1ll.v1");
    check_field_offset(lv, v2, 8, "aL_B_BFu1ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 1, 1, "aL_B_BFu1ll");
  }
}
static Arrange_To_Call_Me vaL_B_BFu1ll(Test_aL_B_BFu1ll, "aL_B_BFu1ll", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_BFu1s()
{
  {
    init_simple_test("aL_B_BFu1s");
    static aL_B_BFu1s lv;
    check2(sizeof(lv), 10, "sizeof(aL_B_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_BFu1s)");
    check_field_offset(lv, v1, 0, "aL_B_BFu1s.v1");
    check_field_offset(lv, v2, 8, "aL_B_BFu1s.v2");
    set_bf_and_test(lv, v3, 9, 0, 1, 1, "aL_B_BFu1s");
  }
}
static Arrange_To_Call_Me vaL_B_BFu1s(Test_aL_B_BFu1s, "aL_B_BFu1s", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_BFu31i()
{
  {
    init_simple_test("aL_B_BFu31i");
    static aL_B_BFu31i lv;
    check2(sizeof(lv), 13, "sizeof(aL_B_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_BFu31i)");
    check_field_offset(lv, v1, 0, "aL_B_BFu31i.v1");
    check_field_offset(lv, v2, 8, "aL_B_BFu31i.v2");
    set_bf_and_test(lv, v3, 9, 0, 31, 1, "aL_B_BFu31i");
    set_bf_and_test(lv, v3, 9, 0, 31, hide_ull(1LL<<30), "aL_B_BFu31i");
  }
}
static Arrange_To_Call_Me vaL_B_BFu31i(Test_aL_B_BFu31i, "aL_B_BFu31i", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_BFu31ll()
{
  {
    init_simple_test("aL_B_BFu31ll");
    static aL_B_BFu31ll lv;
    check2(sizeof(lv), 13, "sizeof(aL_B_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_BFu31ll)");
    check_field_offset(lv, v1, 0, "aL_B_BFu31ll.v1");
    check_field_offset(lv, v2, 8, "aL_B_BFu31ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 31, 1, "aL_B_BFu31ll");
    set_bf_and_test(lv, v3, 9, 0, 31, hide_ull(1LL<<30), "aL_B_BFu31ll");
  }
}
static Arrange_To_Call_Me vaL_B_BFu31ll(Test_aL_B_BFu31ll, "aL_B_BFu31ll", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_BFu32i()
{
  {
    init_simple_test("aL_B_BFu32i");
    static aL_B_BFu32i lv;
    check2(sizeof(lv), 13, "sizeof(aL_B_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_BFu32i)");
    check_field_offset(lv, v1, 0, "aL_B_BFu32i.v1");
    check_field_offset(lv, v2, 8, "aL_B_BFu32i.v2");
    set_bf_and_test(lv, v3, 9, 0, 32, 1, "aL_B_BFu32i");
    set_bf_and_test(lv, v3, 9, 0, 32, hide_ull(1LL<<31), "aL_B_BFu32i");
  }
}
static Arrange_To_Call_Me vaL_B_BFu32i(Test_aL_B_BFu32i, "aL_B_BFu32i", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_BFu32ll()
{
  {
    init_simple_test("aL_B_BFu32ll");
    static aL_B_BFu32ll lv;
    check2(sizeof(lv), 13, "sizeof(aL_B_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_BFu32ll)");
    check_field_offset(lv, v1, 0, "aL_B_BFu32ll.v1");
    check_field_offset(lv, v2, 8, "aL_B_BFu32ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 32, 1, "aL_B_BFu32ll");
    set_bf_and_test(lv, v3, 9, 0, 32, hide_ull(1LL<<31), "aL_B_BFu32ll");
  }
}
static Arrange_To_Call_Me vaL_B_BFu32ll(Test_aL_B_BFu32ll, "aL_B_BFu32ll", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_BFu33()
{
  {
    init_simple_test("aL_B_BFu33");
    static aL_B_BFu33 lv;
    check2(sizeof(lv), 14, "sizeof(aL_B_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_BFu33)");
    check_field_offset(lv, v1, 0, "aL_B_BFu33.v1");
    check_field_offset(lv, v2, 8, "aL_B_BFu33.v2");
    set_bf_and_test(lv, v3, 9, 0, 33, 1, "aL_B_BFu33");
    set_bf_and_test(lv, v3, 9, 0, 33, hide_ull(1LL<<32), "aL_B_BFu33");
  }
}
static Arrange_To_Call_Me vaL_B_BFu33(Test_aL_B_BFu33, "aL_B_BFu33", 14);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_BFu7c()
{
  {
    init_simple_test("aL_B_BFu7c");
    static aL_B_BFu7c lv;
    check2(sizeof(lv), 10, "sizeof(aL_B_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_BFu7c)");
    check_field_offset(lv, v1, 0, "aL_B_BFu7c.v1");
    check_field_offset(lv, v2, 8, "aL_B_BFu7c.v2");
    set_bf_and_test(lv, v3, 9, 0, 7, 1, "aL_B_BFu7c");
    set_bf_and_test(lv, v3, 9, 0, 7, hide_ull(1LL<<6), "aL_B_BFu7c");
  }
}
static Arrange_To_Call_Me vaL_B_BFu7c(Test_aL_B_BFu7c, "aL_B_BFu7c", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_BFu7i()
{
  {
    init_simple_test("aL_B_BFu7i");
    static aL_B_BFu7i lv;
    check2(sizeof(lv), 10, "sizeof(aL_B_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_BFu7i)");
    check_field_offset(lv, v1, 0, "aL_B_BFu7i.v1");
    check_field_offset(lv, v2, 8, "aL_B_BFu7i.v2");
    set_bf_and_test(lv, v3, 9, 0, 7, 1, "aL_B_BFu7i");
    set_bf_and_test(lv, v3, 9, 0, 7, hide_ull(1LL<<6), "aL_B_BFu7i");
  }
}
static Arrange_To_Call_Me vaL_B_BFu7i(Test_aL_B_BFu7i, "aL_B_BFu7i", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_BFu7ll()
{
  {
    init_simple_test("aL_B_BFu7ll");
    static aL_B_BFu7ll lv;
    check2(sizeof(lv), 10, "sizeof(aL_B_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_BFu7ll)");
    check_field_offset(lv, v1, 0, "aL_B_BFu7ll.v1");
    check_field_offset(lv, v2, 8, "aL_B_BFu7ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 7, 1, "aL_B_BFu7ll");
    set_bf_and_test(lv, v3, 9, 0, 7, hide_ull(1LL<<6), "aL_B_BFu7ll");
  }
}
static Arrange_To_Call_Me vaL_B_BFu7ll(Test_aL_B_BFu7ll, "aL_B_BFu7ll", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_BFu7s()
{
  {
    init_simple_test("aL_B_BFu7s");
    static aL_B_BFu7s lv;
    check2(sizeof(lv), 10, "sizeof(aL_B_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_BFu7s)");
    check_field_offset(lv, v1, 0, "aL_B_BFu7s.v1");
    check_field_offset(lv, v2, 8, "aL_B_BFu7s.v2");
    set_bf_and_test(lv, v3, 9, 0, 7, 1, "aL_B_BFu7s");
    set_bf_and_test(lv, v3, 9, 0, 7, hide_ull(1LL<<6), "aL_B_BFu7s");
  }
}
static Arrange_To_Call_Me vaL_B_BFu7s(Test_aL_B_BFu7s, "aL_B_BFu7s", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_BFu8c()
{
  {
    init_simple_test("aL_B_BFu8c");
    static aL_B_BFu8c lv;
    check2(sizeof(lv), 10, "sizeof(aL_B_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_BFu8c)");
    check_field_offset(lv, v1, 0, "aL_B_BFu8c.v1");
    check_field_offset(lv, v2, 8, "aL_B_BFu8c.v2");
    set_bf_and_test(lv, v3, 9, 0, 8, 1, "aL_B_BFu8c");
    set_bf_and_test(lv, v3, 9, 0, 8, hide_ull(1LL<<7), "aL_B_BFu8c");
  }
}
static Arrange_To_Call_Me vaL_B_BFu8c(Test_aL_B_BFu8c, "aL_B_BFu8c", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_BFu8i()
{
  {
    init_simple_test("aL_B_BFu8i");
    static aL_B_BFu8i lv;
    check2(sizeof(lv), 10, "sizeof(aL_B_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_BFu8i)");
    check_field_offset(lv, v1, 0, "aL_B_BFu8i.v1");
    check_field_offset(lv, v2, 8, "aL_B_BFu8i.v2");
    set_bf_and_test(lv, v3, 9, 0, 8, 1, "aL_B_BFu8i");
    set_bf_and_test(lv, v3, 9, 0, 8, hide_ull(1LL<<7), "aL_B_BFu8i");
  }
}
static Arrange_To_Call_Me vaL_B_BFu8i(Test_aL_B_BFu8i, "aL_B_BFu8i", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_BFu8ll()
{
  {
    init_simple_test("aL_B_BFu8ll");
    static aL_B_BFu8ll lv;
    check2(sizeof(lv), 10, "sizeof(aL_B_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_BFu8ll)");
    check_field_offset(lv, v1, 0, "aL_B_BFu8ll.v1");
    check_field_offset(lv, v2, 8, "aL_B_BFu8ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 8, 1, "aL_B_BFu8ll");
    set_bf_and_test(lv, v3, 9, 0, 8, hide_ull(1LL<<7), "aL_B_BFu8ll");
  }
}
static Arrange_To_Call_Me vaL_B_BFu8ll(Test_aL_B_BFu8ll, "aL_B_BFu8ll", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_BFu8s()
{
  {
    init_simple_test("aL_B_BFu8s");
    static aL_B_BFu8s lv;
    check2(sizeof(lv), 10, "sizeof(aL_B_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_BFu8s)");
    check_field_offset(lv, v1, 0, "aL_B_BFu8s.v1");
    check_field_offset(lv, v2, 8, "aL_B_BFu8s.v2");
    set_bf_and_test(lv, v3, 9, 0, 8, 1, "aL_B_BFu8s");
    set_bf_and_test(lv, v3, 9, 0, 8, hide_ull(1LL<<7), "aL_B_BFu8s");
  }
}
static Arrange_To_Call_Me vaL_B_BFu8s(Test_aL_B_BFu8s, "aL_B_BFu8s", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_BFu9i()
{
  {
    init_simple_test("aL_B_BFu9i");
    static aL_B_BFu9i lv;
    check2(sizeof(lv), 11, "sizeof(aL_B_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_BFu9i)");
    check_field_offset(lv, v1, 0, "aL_B_BFu9i.v1");
    check_field_offset(lv, v2, 8, "aL_B_BFu9i.v2");
    set_bf_and_test(lv, v3, 9, 0, 9, 1, "aL_B_BFu9i");
    set_bf_and_test(lv, v3, 9, 0, 9, hide_ull(1LL<<8), "aL_B_BFu9i");
  }
}
static Arrange_To_Call_Me vaL_B_BFu9i(Test_aL_B_BFu9i, "aL_B_BFu9i", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_BFu9ll()
{
  {
    init_simple_test("aL_B_BFu9ll");
    static aL_B_BFu9ll lv;
    check2(sizeof(lv), 11, "sizeof(aL_B_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_BFu9ll)");
    check_field_offset(lv, v1, 0, "aL_B_BFu9ll.v1");
    check_field_offset(lv, v2, 8, "aL_B_BFu9ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 9, 1, "aL_B_BFu9ll");
    set_bf_and_test(lv, v3, 9, 0, 9, hide_ull(1LL<<8), "aL_B_BFu9ll");
  }
}
static Arrange_To_Call_Me vaL_B_BFu9ll(Test_aL_B_BFu9ll, "aL_B_BFu9ll", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_BFu9s()
{
  {
    init_simple_test("aL_B_BFu9s");
    static aL_B_BFu9s lv;
    check2(sizeof(lv), 11, "sizeof(aL_B_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_BFu9s)");
    check_field_offset(lv, v1, 0, "aL_B_BFu9s.v1");
    check_field_offset(lv, v2, 8, "aL_B_BFu9s.v2");
    set_bf_and_test(lv, v3, 9, 0, 9, 1, "aL_B_BFu9s");
    set_bf_and_test(lv, v3, 9, 0, 9, hide_ull(1LL<<8), "aL_B_BFu9s");
  }
}
static Arrange_To_Call_Me vaL_B_BFu9s(Test_aL_B_BFu9s, "aL_B_BFu9s", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_C()
{
  {
    init_simple_test("aL_B_C");
    aL_B_C lv;
    check2(sizeof(lv), 10, "sizeof(aL_B_C)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_C)");
    check_field_offset(lv, v1, 0, "aL_B_C.v1");
    check_field_offset(lv, v2, 8, "aL_B_C.v2");
    check_field_offset(lv, v3, 9, "aL_B_C.v3");
  }
}
static Arrange_To_Call_Me vaL_B_C(Test_aL_B_C, "aL_B_C", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_D()
{
  {
    init_simple_test("aL_B_D");
    aL_B_D lv;
    check2(sizeof(lv), 17, "sizeof(aL_B_D)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_D)");
    check_field_offset(lv, v1, 0, "aL_B_D.v1");
    check_field_offset(lv, v2, 8, "aL_B_D.v2");
    check_field_offset(lv, v3, 9, "aL_B_D.v3");
  }
}
static Arrange_To_Call_Me vaL_B_D(Test_aL_B_D, "aL_B_D", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_F()
{
  {
    init_simple_test("aL_B_F");
    aL_B_F lv;
    check2(sizeof(lv), 13, "sizeof(aL_B_F)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_F)");
    check_field_offset(lv, v1, 0, "aL_B_F.v1");
    check_field_offset(lv, v2, 8, "aL_B_F.v2");
    check_field_offset(lv, v3, 9, "aL_B_F.v3");
  }
}
static Arrange_To_Call_Me vaL_B_F(Test_aL_B_F, "aL_B_F", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_I()
{
  {
    init_simple_test("aL_B_I");
    aL_B_I lv;
    check2(sizeof(lv), 13, "sizeof(aL_B_I)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_I)");
    check_field_offset(lv, v1, 0, "aL_B_I.v1");
    check_field_offset(lv, v2, 8, "aL_B_I.v2");
    check_field_offset(lv, v3, 9, "aL_B_I.v3");
  }
}
static Arrange_To_Call_Me vaL_B_I(Test_aL_B_I, "aL_B_I", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_Ip()
{
  {
    init_simple_test("aL_B_Ip");
    aL_B_Ip lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aL_B_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_Ip)");
    check_field_offset(lv, v1, 0, "aL_B_Ip.v1");
    check_field_offset(lv, v2, 8, "aL_B_Ip.v2");
    check_field_offset(lv, v3, 9, "aL_B_Ip.v3");
  }
}
static Arrange_To_Call_Me vaL_B_Ip(Test_aL_B_Ip, "aL_B_Ip", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_L()
{
  {
    init_simple_test("aL_B_L");
    aL_B_L lv;
    check2(sizeof(lv), 17, "sizeof(aL_B_L)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_L)");
    check_field_offset(lv, v1, 0, "aL_B_L.v1");
    check_field_offset(lv, v2, 8, "aL_B_L.v2");
    check_field_offset(lv, v3, 9, "aL_B_L.v3");
  }
}
static Arrange_To_Call_Me vaL_B_L(Test_aL_B_L, "aL_B_L", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_S()
{
  {
    init_simple_test("aL_B_S");
    aL_B_S lv;
    check2(sizeof(lv), 11, "sizeof(aL_B_S)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_S)");
    check_field_offset(lv, v1, 0, "aL_B_S.v1");
    check_field_offset(lv, v2, 8, "aL_B_S.v2");
    check_field_offset(lv, v3, 9, "aL_B_S.v3");
  }
}
static Arrange_To_Call_Me vaL_B_S(Test_aL_B_S, "aL_B_S", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_Uc()
{
  {
    init_simple_test("aL_B_Uc");
    aL_B_Uc lv;
    check2(sizeof(lv), 10, "sizeof(aL_B_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_Uc)");
    check_field_offset(lv, v1, 0, "aL_B_Uc.v1");
    check_field_offset(lv, v2, 8, "aL_B_Uc.v2");
    check_field_offset(lv, v3, 9, "aL_B_Uc.v3");
  }
}
static Arrange_To_Call_Me vaL_B_Uc(Test_aL_B_Uc, "aL_B_Uc", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_Ui()
{
  {
    init_simple_test("aL_B_Ui");
    aL_B_Ui lv;
    check2(sizeof(lv), 13, "sizeof(aL_B_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_Ui)");
    check_field_offset(lv, v1, 0, "aL_B_Ui.v1");
    check_field_offset(lv, v2, 8, "aL_B_Ui.v2");
    check_field_offset(lv, v3, 9, "aL_B_Ui.v3");
  }
}
static Arrange_To_Call_Me vaL_B_Ui(Test_aL_B_Ui, "aL_B_Ui", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_Ul()
{
  {
    init_simple_test("aL_B_Ul");
    aL_B_Ul lv;
    check2(sizeof(lv), 17, "sizeof(aL_B_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_Ul)");
    check_field_offset(lv, v1, 0, "aL_B_Ul.v1");
    check_field_offset(lv, v2, 8, "aL_B_Ul.v2");
    check_field_offset(lv, v3, 9, "aL_B_Ul.v3");
  }
}
static Arrange_To_Call_Me vaL_B_Ul(Test_aL_B_Ul, "aL_B_Ul", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_Us()
{
  {
    init_simple_test("aL_B_Us");
    aL_B_Us lv;
    check2(sizeof(lv), 11, "sizeof(aL_B_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_Us)");
    check_field_offset(lv, v1, 0, "aL_B_Us.v1");
    check_field_offset(lv, v2, 8, "aL_B_Us.v2");
    check_field_offset(lv, v3, 9, "aL_B_Us.v3");
  }
}
static Arrange_To_Call_Me vaL_B_Us(Test_aL_B_Us, "aL_B_Us", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_B_Vp()
{
  {
    init_simple_test("aL_B_Vp");
    aL_B_Vp lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aL_B_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aL_B_Vp)");
    check_field_offset(lv, v1, 0, "aL_B_Vp.v1");
    check_field_offset(lv, v2, 8, "aL_B_Vp.v2");
    check_field_offset(lv, v3, 9, "aL_B_Vp.v3");
  }
}
static Arrange_To_Call_Me vaL_B_Vp(Test_aL_B_Vp, "aL_B_Vp", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_BFu15i_B()
{
  {
    init_simple_test("aL_BFu15i_B");
    static aL_BFu15i_B lv;
    check2(sizeof(lv), 11, "sizeof(aL_BFu15i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_BFu15i_B)");
    check_field_offset(lv, v1, 0, "aL_BFu15i_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "aL_BFu15i_B");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "aL_BFu15i_B");
    check_field_offset(lv, v3, 10, "aL_BFu15i_B.v3");
  }
}
static Arrange_To_Call_Me vaL_BFu15i_B(Test_aL_BFu15i_B, "aL_BFu15i_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_BFu15ll_B()
{
  {
    init_simple_test("aL_BFu15ll_B");
    static aL_BFu15ll_B lv;
    check2(sizeof(lv), 11, "sizeof(aL_BFu15ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_BFu15ll_B)");
    check_field_offset(lv, v1, 0, "aL_BFu15ll_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "aL_BFu15ll_B");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "aL_BFu15ll_B");
    check_field_offset(lv, v3, 10, "aL_BFu15ll_B.v3");
  }
}
static Arrange_To_Call_Me vaL_BFu15ll_B(Test_aL_BFu15ll_B, "aL_BFu15ll_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_BFu15s_B()
{
  {
    init_simple_test("aL_BFu15s_B");
    static aL_BFu15s_B lv;
    check2(sizeof(lv), 11, "sizeof(aL_BFu15s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_BFu15s_B)");
    check_field_offset(lv, v1, 0, "aL_BFu15s_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "aL_BFu15s_B");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "aL_BFu15s_B");
    check_field_offset(lv, v3, 10, "aL_BFu15s_B.v3");
  }
}
static Arrange_To_Call_Me vaL_BFu15s_B(Test_aL_BFu15s_B, "aL_BFu15s_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_BFu16i_B()
{
  {
    init_simple_test("aL_BFu16i_B");
    static aL_BFu16i_B lv;
    check2(sizeof(lv), 11, "sizeof(aL_BFu16i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_BFu16i_B)");
    check_field_offset(lv, v1, 0, "aL_BFu16i_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "aL_BFu16i_B");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "aL_BFu16i_B");
    check_field_offset(lv, v3, 10, "aL_BFu16i_B.v3");
  }
}
static Arrange_To_Call_Me vaL_BFu16i_B(Test_aL_BFu16i_B, "aL_BFu16i_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_BFu16ll_B()
{
  {
    init_simple_test("aL_BFu16ll_B");
    static aL_BFu16ll_B lv;
    check2(sizeof(lv), 11, "sizeof(aL_BFu16ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_BFu16ll_B)");
    check_field_offset(lv, v1, 0, "aL_BFu16ll_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "aL_BFu16ll_B");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "aL_BFu16ll_B");
    check_field_offset(lv, v3, 10, "aL_BFu16ll_B.v3");
  }
}
static Arrange_To_Call_Me vaL_BFu16ll_B(Test_aL_BFu16ll_B, "aL_BFu16ll_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_BFu16s_B()
{
  {
    init_simple_test("aL_BFu16s_B");
    static aL_BFu16s_B lv;
    check2(sizeof(lv), 11, "sizeof(aL_BFu16s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_BFu16s_B)");
    check_field_offset(lv, v1, 0, "aL_BFu16s_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "aL_BFu16s_B");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "aL_BFu16s_B");
    check_field_offset(lv, v3, 10, "aL_BFu16s_B.v3");
  }
}
static Arrange_To_Call_Me vaL_BFu16s_B(Test_aL_BFu16s_B, "aL_BFu16s_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_BFu17i_B()
{
  {
    init_simple_test("aL_BFu17i_B");
    static aL_BFu17i_B lv;
    check2(sizeof(lv), 12, "sizeof(aL_BFu17i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_BFu17i_B)");
    check_field_offset(lv, v1, 0, "aL_BFu17i_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "aL_BFu17i_B");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "aL_BFu17i_B");
    check_field_offset(lv, v3, 11, "aL_BFu17i_B.v3");
  }
}
static Arrange_To_Call_Me vaL_BFu17i_B(Test_aL_BFu17i_B, "aL_BFu17i_B", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_BFu17ll_B()
{
  {
    init_simple_test("aL_BFu17ll_B");
    static aL_BFu17ll_B lv;
    check2(sizeof(lv), 12, "sizeof(aL_BFu17ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_BFu17ll_B)");
    check_field_offset(lv, v1, 0, "aL_BFu17ll_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "aL_BFu17ll_B");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "aL_BFu17ll_B");
    check_field_offset(lv, v3, 11, "aL_BFu17ll_B.v3");
  }
}
static Arrange_To_Call_Me vaL_BFu17ll_B(Test_aL_BFu17ll_B, "aL_BFu17ll_B", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_BFu1c_B()
{
  {
    init_simple_test("aL_BFu1c_B");
    static aL_BFu1c_B lv;
    check2(sizeof(lv), 10, "sizeof(aL_BFu1c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_BFu1c_B)");
    check_field_offset(lv, v1, 0, "aL_BFu1c_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "aL_BFu1c_B");
    check_field_offset(lv, v3, 9, "aL_BFu1c_B.v3");
  }
}
static Arrange_To_Call_Me vaL_BFu1c_B(Test_aL_BFu1c_B, "aL_BFu1c_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_BFu1i_B()
{
  {
    init_simple_test("aL_BFu1i_B");
    static aL_BFu1i_B lv;
    check2(sizeof(lv), 10, "sizeof(aL_BFu1i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_BFu1i_B)");
    check_field_offset(lv, v1, 0, "aL_BFu1i_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "aL_BFu1i_B");
    check_field_offset(lv, v3, 9, "aL_BFu1i_B.v3");
  }
}
static Arrange_To_Call_Me vaL_BFu1i_B(Test_aL_BFu1i_B, "aL_BFu1i_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_BFu1ll_B()
{
  {
    init_simple_test("aL_BFu1ll_B");
    static aL_BFu1ll_B lv;
    check2(sizeof(lv), 10, "sizeof(aL_BFu1ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_BFu1ll_B)");
    check_field_offset(lv, v1, 0, "aL_BFu1ll_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "aL_BFu1ll_B");
    check_field_offset(lv, v3, 9, "aL_BFu1ll_B.v3");
  }
}
static Arrange_To_Call_Me vaL_BFu1ll_B(Test_aL_BFu1ll_B, "aL_BFu1ll_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_BFu1s_B()
{
  {
    init_simple_test("aL_BFu1s_B");
    static aL_BFu1s_B lv;
    check2(sizeof(lv), 10, "sizeof(aL_BFu1s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_BFu1s_B)");
    check_field_offset(lv, v1, 0, "aL_BFu1s_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "aL_BFu1s_B");
    check_field_offset(lv, v3, 9, "aL_BFu1s_B.v3");
  }
}
static Arrange_To_Call_Me vaL_BFu1s_B(Test_aL_BFu1s_B, "aL_BFu1s_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_BFu31i_B()
{
  {
    init_simple_test("aL_BFu31i_B");
    static aL_BFu31i_B lv;
    check2(sizeof(lv), 13, "sizeof(aL_BFu31i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_BFu31i_B)");
    check_field_offset(lv, v1, 0, "aL_BFu31i_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "aL_BFu31i_B");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "aL_BFu31i_B");
    check_field_offset(lv, v3, 12, "aL_BFu31i_B.v3");
  }
}
static Arrange_To_Call_Me vaL_BFu31i_B(Test_aL_BFu31i_B, "aL_BFu31i_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_BFu31ll_B()
{
  {
    init_simple_test("aL_BFu31ll_B");
    static aL_BFu31ll_B lv;
    check2(sizeof(lv), 13, "sizeof(aL_BFu31ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_BFu31ll_B)");
    check_field_offset(lv, v1, 0, "aL_BFu31ll_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "aL_BFu31ll_B");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "aL_BFu31ll_B");
    check_field_offset(lv, v3, 12, "aL_BFu31ll_B.v3");
  }
}
static Arrange_To_Call_Me vaL_BFu31ll_B(Test_aL_BFu31ll_B, "aL_BFu31ll_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_BFu32i_B()
{
  {
    init_simple_test("aL_BFu32i_B");
    static aL_BFu32i_B lv;
    check2(sizeof(lv), 13, "sizeof(aL_BFu32i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_BFu32i_B)");
    check_field_offset(lv, v1, 0, "aL_BFu32i_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "aL_BFu32i_B");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "aL_BFu32i_B");
    check_field_offset(lv, v3, 12, "aL_BFu32i_B.v3");
  }
}
static Arrange_To_Call_Me vaL_BFu32i_B(Test_aL_BFu32i_B, "aL_BFu32i_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_BFu32ll_B()
{
  {
    init_simple_test("aL_BFu32ll_B");
    static aL_BFu32ll_B lv;
    check2(sizeof(lv), 13, "sizeof(aL_BFu32ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_BFu32ll_B)");
    check_field_offset(lv, v1, 0, "aL_BFu32ll_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "aL_BFu32ll_B");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "aL_BFu32ll_B");
    check_field_offset(lv, v3, 12, "aL_BFu32ll_B.v3");
  }
}
static Arrange_To_Call_Me vaL_BFu32ll_B(Test_aL_BFu32ll_B, "aL_BFu32ll_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_BFu33_B()
{
  {
    init_simple_test("aL_BFu33_B");
    static aL_BFu33_B lv;
    check2(sizeof(lv), 14, "sizeof(aL_BFu33_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_BFu33_B)");
    check_field_offset(lv, v1, 0, "aL_BFu33_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 33, 1, "aL_BFu33_B");
    set_bf_and_test(lv, v2, 8, 0, 33, hide_ull(1LL<<32), "aL_BFu33_B");
    check_field_offset(lv, v3, 13, "aL_BFu33_B.v3");
  }
}
static Arrange_To_Call_Me vaL_BFu33_B(Test_aL_BFu33_B, "aL_BFu33_B", 14);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_BFu7c_B()
{
  {
    init_simple_test("aL_BFu7c_B");
    static aL_BFu7c_B lv;
    check2(sizeof(lv), 10, "sizeof(aL_BFu7c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_BFu7c_B)");
    check_field_offset(lv, v1, 0, "aL_BFu7c_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "aL_BFu7c_B");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "aL_BFu7c_B");
    check_field_offset(lv, v3, 9, "aL_BFu7c_B.v3");
  }
}
static Arrange_To_Call_Me vaL_BFu7c_B(Test_aL_BFu7c_B, "aL_BFu7c_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_BFu7i_B()
{
  {
    init_simple_test("aL_BFu7i_B");
    static aL_BFu7i_B lv;
    check2(sizeof(lv), 10, "sizeof(aL_BFu7i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_BFu7i_B)");
    check_field_offset(lv, v1, 0, "aL_BFu7i_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "aL_BFu7i_B");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "aL_BFu7i_B");
    check_field_offset(lv, v3, 9, "aL_BFu7i_B.v3");
  }
}
static Arrange_To_Call_Me vaL_BFu7i_B(Test_aL_BFu7i_B, "aL_BFu7i_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_BFu7ll_B()
{
  {
    init_simple_test("aL_BFu7ll_B");
    static aL_BFu7ll_B lv;
    check2(sizeof(lv), 10, "sizeof(aL_BFu7ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_BFu7ll_B)");
    check_field_offset(lv, v1, 0, "aL_BFu7ll_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "aL_BFu7ll_B");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "aL_BFu7ll_B");
    check_field_offset(lv, v3, 9, "aL_BFu7ll_B.v3");
  }
}
static Arrange_To_Call_Me vaL_BFu7ll_B(Test_aL_BFu7ll_B, "aL_BFu7ll_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_BFu7s_B()
{
  {
    init_simple_test("aL_BFu7s_B");
    static aL_BFu7s_B lv;
    check2(sizeof(lv), 10, "sizeof(aL_BFu7s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_BFu7s_B)");
    check_field_offset(lv, v1, 0, "aL_BFu7s_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "aL_BFu7s_B");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "aL_BFu7s_B");
    check_field_offset(lv, v3, 9, "aL_BFu7s_B.v3");
  }
}
static Arrange_To_Call_Me vaL_BFu7s_B(Test_aL_BFu7s_B, "aL_BFu7s_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_BFu8c_B()
{
  {
    init_simple_test("aL_BFu8c_B");
    static aL_BFu8c_B lv;
    check2(sizeof(lv), 10, "sizeof(aL_BFu8c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_BFu8c_B)");
    check_field_offset(lv, v1, 0, "aL_BFu8c_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "aL_BFu8c_B");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "aL_BFu8c_B");
    check_field_offset(lv, v3, 9, "aL_BFu8c_B.v3");
  }
}
static Arrange_To_Call_Me vaL_BFu8c_B(Test_aL_BFu8c_B, "aL_BFu8c_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_BFu8i_B()
{
  {
    init_simple_test("aL_BFu8i_B");
    static aL_BFu8i_B lv;
    check2(sizeof(lv), 10, "sizeof(aL_BFu8i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_BFu8i_B)");
    check_field_offset(lv, v1, 0, "aL_BFu8i_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "aL_BFu8i_B");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "aL_BFu8i_B");
    check_field_offset(lv, v3, 9, "aL_BFu8i_B.v3");
  }
}
static Arrange_To_Call_Me vaL_BFu8i_B(Test_aL_BFu8i_B, "aL_BFu8i_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_BFu8ll_B()
{
  {
    init_simple_test("aL_BFu8ll_B");
    static aL_BFu8ll_B lv;
    check2(sizeof(lv), 10, "sizeof(aL_BFu8ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_BFu8ll_B)");
    check_field_offset(lv, v1, 0, "aL_BFu8ll_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "aL_BFu8ll_B");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "aL_BFu8ll_B");
    check_field_offset(lv, v3, 9, "aL_BFu8ll_B.v3");
  }
}
static Arrange_To_Call_Me vaL_BFu8ll_B(Test_aL_BFu8ll_B, "aL_BFu8ll_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_BFu8s_B()
{
  {
    init_simple_test("aL_BFu8s_B");
    static aL_BFu8s_B lv;
    check2(sizeof(lv), 10, "sizeof(aL_BFu8s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_BFu8s_B)");
    check_field_offset(lv, v1, 0, "aL_BFu8s_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "aL_BFu8s_B");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "aL_BFu8s_B");
    check_field_offset(lv, v3, 9, "aL_BFu8s_B.v3");
  }
}
static Arrange_To_Call_Me vaL_BFu8s_B(Test_aL_BFu8s_B, "aL_BFu8s_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_BFu9i_B()
{
  {
    init_simple_test("aL_BFu9i_B");
    static aL_BFu9i_B lv;
    check2(sizeof(lv), 11, "sizeof(aL_BFu9i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_BFu9i_B)");
    check_field_offset(lv, v1, 0, "aL_BFu9i_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "aL_BFu9i_B");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "aL_BFu9i_B");
    check_field_offset(lv, v3, 10, "aL_BFu9i_B.v3");
  }
}
static Arrange_To_Call_Me vaL_BFu9i_B(Test_aL_BFu9i_B, "aL_BFu9i_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_BFu9ll_B()
{
  {
    init_simple_test("aL_BFu9ll_B");
    static aL_BFu9ll_B lv;
    check2(sizeof(lv), 11, "sizeof(aL_BFu9ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_BFu9ll_B)");
    check_field_offset(lv, v1, 0, "aL_BFu9ll_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "aL_BFu9ll_B");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "aL_BFu9ll_B");
    check_field_offset(lv, v3, 10, "aL_BFu9ll_B.v3");
  }
}
static Arrange_To_Call_Me vaL_BFu9ll_B(Test_aL_BFu9ll_B, "aL_BFu9ll_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_BFu9s_B()
{
  {
    init_simple_test("aL_BFu9s_B");
    static aL_BFu9s_B lv;
    check2(sizeof(lv), 11, "sizeof(aL_BFu9s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_BFu9s_B)");
    check_field_offset(lv, v1, 0, "aL_BFu9s_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "aL_BFu9s_B");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "aL_BFu9s_B");
    check_field_offset(lv, v3, 10, "aL_BFu9s_B.v3");
  }
}
static Arrange_To_Call_Me vaL_BFu9s_B(Test_aL_BFu9s_B, "aL_BFu9s_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_C_B()
{
  {
    init_simple_test("aL_C_B");
    aL_C_B lv;
    check2(sizeof(lv), 10, "sizeof(aL_C_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_C_B)");
    check_field_offset(lv, v1, 0, "aL_C_B.v1");
    check_field_offset(lv, v2, 8, "aL_C_B.v2");
    check_field_offset(lv, v3, 9, "aL_C_B.v3");
  }
}
static Arrange_To_Call_Me vaL_C_B(Test_aL_C_B, "aL_C_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_D_B()
{
  {
    init_simple_test("aL_D_B");
    aL_D_B lv;
    check2(sizeof(lv), 17, "sizeof(aL_D_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_D_B)");
    check_field_offset(lv, v1, 0, "aL_D_B.v1");
    check_field_offset(lv, v2, 8, "aL_D_B.v2");
    check_field_offset(lv, v3, 16, "aL_D_B.v3");
  }
}
static Arrange_To_Call_Me vaL_D_B(Test_aL_D_B, "aL_D_B", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_F_B()
{
  {
    init_simple_test("aL_F_B");
    aL_F_B lv;
    check2(sizeof(lv), 13, "sizeof(aL_F_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_F_B)");
    check_field_offset(lv, v1, 0, "aL_F_B.v1");
    check_field_offset(lv, v2, 8, "aL_F_B.v2");
    check_field_offset(lv, v3, 12, "aL_F_B.v3");
  }
}
static Arrange_To_Call_Me vaL_F_B(Test_aL_F_B, "aL_F_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_I_B()
{
  {
    init_simple_test("aL_I_B");
    aL_I_B lv;
    check2(sizeof(lv), 13, "sizeof(aL_I_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_I_B)");
    check_field_offset(lv, v1, 0, "aL_I_B.v1");
    check_field_offset(lv, v2, 8, "aL_I_B.v2");
    check_field_offset(lv, v3, 12, "aL_I_B.v3");
  }
}
static Arrange_To_Call_Me vaL_I_B(Test_aL_I_B, "aL_I_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_Ip_B()
{
  {
    init_simple_test("aL_Ip_B");
    aL_Ip_B lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aL_Ip_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ip_B)");
    check_field_offset(lv, v1, 0, "aL_Ip_B.v1");
    check_field_offset(lv, v2, 8, "aL_Ip_B.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "aL_Ip_B.v3");
  }
}
static Arrange_To_Call_Me vaL_Ip_B(Test_aL_Ip_B, "aL_Ip_B", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_L_B()
{
  {
    init_simple_test("aL_L_B");
    aL_L_B lv;
    check2(sizeof(lv), 17, "sizeof(aL_L_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_L_B)");
    check_field_offset(lv, v1, 0, "aL_L_B.v1");
    check_field_offset(lv, v2, 8, "aL_L_B.v2");
    check_field_offset(lv, v3, 16, "aL_L_B.v3");
  }
}
static Arrange_To_Call_Me vaL_L_B(Test_aL_L_B, "aL_L_B", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_S_B()
{
  {
    init_simple_test("aL_S_B");
    aL_S_B lv;
    check2(sizeof(lv), 11, "sizeof(aL_S_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_S_B)");
    check_field_offset(lv, v1, 0, "aL_S_B.v1");
    check_field_offset(lv, v2, 8, "aL_S_B.v2");
    check_field_offset(lv, v3, 10, "aL_S_B.v3");
  }
}
static Arrange_To_Call_Me vaL_S_B(Test_aL_S_B, "aL_S_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_Uc_B()
{
  {
    init_simple_test("aL_Uc_B");
    aL_Uc_B lv;
    check2(sizeof(lv), 10, "sizeof(aL_Uc_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Uc_B)");
    check_field_offset(lv, v1, 0, "aL_Uc_B.v1");
    check_field_offset(lv, v2, 8, "aL_Uc_B.v2");
    check_field_offset(lv, v3, 9, "aL_Uc_B.v3");
  }
}
static Arrange_To_Call_Me vaL_Uc_B(Test_aL_Uc_B, "aL_Uc_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_Ui_B()
{
  {
    init_simple_test("aL_Ui_B");
    aL_Ui_B lv;
    check2(sizeof(lv), 13, "sizeof(aL_Ui_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_B)");
    check_field_offset(lv, v1, 0, "aL_Ui_B.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_B.v2");
    check_field_offset(lv, v3, 12, "aL_Ui_B.v3");
  }
}
static Arrange_To_Call_Me vaL_Ui_B(Test_aL_Ui_B, "aL_Ui_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_Ul_B()
{
  {
    init_simple_test("aL_Ul_B");
    aL_Ul_B lv;
    check2(sizeof(lv), 17, "sizeof(aL_Ul_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_B)");
    check_field_offset(lv, v1, 0, "aL_Ul_B.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_B.v2");
    check_field_offset(lv, v3, 16, "aL_Ul_B.v3");
  }
}
static Arrange_To_Call_Me vaL_Ul_B(Test_aL_Ul_B, "aL_Ul_B", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_Us_B()
{
  {
    init_simple_test("aL_Us_B");
    aL_Us_B lv;
    check2(sizeof(lv), 11, "sizeof(aL_Us_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_B)");
    check_field_offset(lv, v1, 0, "aL_Us_B.v1");
    check_field_offset(lv, v2, 8, "aL_Us_B.v2");
    check_field_offset(lv, v3, 10, "aL_Us_B.v3");
  }
}
static Arrange_To_Call_Me vaL_Us_B(Test_aL_Us_B, "aL_Us_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aL_Vp_B()
{
  {
    init_simple_test("aL_Vp_B");
    aL_Vp_B lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aL_Vp_B)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_B)");
    check_field_offset(lv, v1, 0, "aL_Vp_B.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_B.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "aL_Vp_B.v3");
  }
}
static Arrange_To_Call_Me vaL_Vp_B(Test_aL_Vp_B, "aL_Vp_B", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B()
{
  {
    init_simple_test("aS_B");
    aS_B lv;
    check2(sizeof(lv), 3, "sizeof(aS_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B)");
    check_field_offset(lv, v1, 0, "aS_B.v1");
    check_field_offset(lv, v2, 2, "aS_B.v2");
  }
}
static Arrange_To_Call_Me vaS_B(Test_aS_B, "aS_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_B()
{
  {
    init_simple_test("aS_B_B");
    aS_B_B lv;
    check2(sizeof(lv), 4, "sizeof(aS_B_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_B)");
    check_field_offset(lv, v1, 0, "aS_B_B.v1");
    check_field_offset(lv, v2, 2, "aS_B_B.v2");
    check_field_offset(lv, v3, 3, "aS_B_B.v3");
  }
}
static Arrange_To_Call_Me vaS_B_B(Test_aS_B_B, "aS_B_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_BFu15i()
{
  {
    init_simple_test("aS_B_BFu15i");
    static aS_B_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aS_B_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_B_BFu15i.v1");
    check_field_offset(lv, v2, 2, "aS_B_BFu15i.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aS_B_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aS_B_BFu15i");
  }
}
static Arrange_To_Call_Me vaS_B_BFu15i(Test_aS_B_BFu15i, "aS_B_BFu15i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_BFu15ll()
{
  {
    init_simple_test("aS_B_BFu15ll");
    static aS_B_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_B_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_B_BFu15ll.v1");
    check_field_offset(lv, v2, 2, "aS_B_BFu15ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aS_B_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aS_B_BFu15ll");
  }
}
static Arrange_To_Call_Me vaS_B_BFu15ll(Test_aS_B_BFu15ll, "aS_B_BFu15ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_BFu15s()
{
  {
    init_simple_test("aS_B_BFu15s");
    static aS_B_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aS_B_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_B_BFu15s.v1");
    check_field_offset(lv, v2, 2, "aS_B_BFu15s.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aS_B_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aS_B_BFu15s");
  }
}
static Arrange_To_Call_Me vaS_B_BFu15s(Test_aS_B_BFu15s, "aS_B_BFu15s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_BFu16i()
{
  {
    init_simple_test("aS_B_BFu16i");
    static aS_B_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aS_B_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_B_BFu16i.v1");
    check_field_offset(lv, v2, 2, "aS_B_BFu16i.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aS_B_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aS_B_BFu16i");
  }
}
static Arrange_To_Call_Me vaS_B_BFu16i(Test_aS_B_BFu16i, "aS_B_BFu16i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_BFu16ll()
{
  {
    init_simple_test("aS_B_BFu16ll");
    static aS_B_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_B_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_B_BFu16ll.v1");
    check_field_offset(lv, v2, 2, "aS_B_BFu16ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aS_B_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aS_B_BFu16ll");
  }
}
static Arrange_To_Call_Me vaS_B_BFu16ll(Test_aS_B_BFu16ll, "aS_B_BFu16ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_BFu16s()
{
  {
    init_simple_test("aS_B_BFu16s");
    static aS_B_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aS_B_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_B_BFu16s.v1");
    check_field_offset(lv, v2, 2, "aS_B_BFu16s.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aS_B_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aS_B_BFu16s");
  }
}
static Arrange_To_Call_Me vaS_B_BFu16s(Test_aS_B_BFu16s, "aS_B_BFu16s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_BFu17i()
{
  {
    init_simple_test("aS_B_BFu17i");
    static aS_B_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(aS_B_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_B_BFu17i.v1");
    check_field_offset(lv, v2, 2, "aS_B_BFu17i.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aS_B_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aS_B_BFu17i");
  }
}
static Arrange_To_Call_Me vaS_B_BFu17i(Test_aS_B_BFu17i, "aS_B_BFu17i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_BFu17ll()
{
  {
    init_simple_test("aS_B_BFu17ll");
    static aS_B_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_B_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_B_BFu17ll.v1");
    check_field_offset(lv, v2, 2, "aS_B_BFu17ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aS_B_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aS_B_BFu17ll");
  }
}
static Arrange_To_Call_Me vaS_B_BFu17ll(Test_aS_B_BFu17ll, "aS_B_BFu17ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_BFu1c()
{
  {
    init_simple_test("aS_B_BFu1c");
    static aS_B_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(aS_B_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_B_BFu1c.v1");
    check_field_offset(lv, v2, 2, "aS_B_BFu1c.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aS_B_BFu1c");
  }
}
static Arrange_To_Call_Me vaS_B_BFu1c(Test_aS_B_BFu1c, "aS_B_BFu1c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_BFu1i()
{
  {
    init_simple_test("aS_B_BFu1i");
    static aS_B_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(aS_B_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_B_BFu1i.v1");
    check_field_offset(lv, v2, 2, "aS_B_BFu1i.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aS_B_BFu1i");
  }
}
static Arrange_To_Call_Me vaS_B_BFu1i(Test_aS_B_BFu1i, "aS_B_BFu1i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_BFu1ll()
{
  {
    init_simple_test("aS_B_BFu1ll");
    static aS_B_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_B_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_B_BFu1ll.v1");
    check_field_offset(lv, v2, 2, "aS_B_BFu1ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aS_B_BFu1ll");
  }
}
static Arrange_To_Call_Me vaS_B_BFu1ll(Test_aS_B_BFu1ll, "aS_B_BFu1ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_BFu1s()
{
  {
    init_simple_test("aS_B_BFu1s");
    static aS_B_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(aS_B_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_B_BFu1s.v1");
    check_field_offset(lv, v2, 2, "aS_B_BFu1s.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aS_B_BFu1s");
  }
}
static Arrange_To_Call_Me vaS_B_BFu1s(Test_aS_B_BFu1s, "aS_B_BFu1s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_BFu31i()
{
  {
    init_simple_test("aS_B_BFu31i");
    static aS_B_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aS_B_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_B_BFu31i.v1");
    check_field_offset(lv, v2, 2, "aS_B_BFu31i.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aS_B_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aS_B_BFu31i");
  }
}
static Arrange_To_Call_Me vaS_B_BFu31i(Test_aS_B_BFu31i, "aS_B_BFu31i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_BFu31ll()
{
  {
    init_simple_test("aS_B_BFu31ll");
    static aS_B_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_B_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_B_BFu31ll.v1");
    check_field_offset(lv, v2, 2, "aS_B_BFu31ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aS_B_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aS_B_BFu31ll");
  }
}
static Arrange_To_Call_Me vaS_B_BFu31ll(Test_aS_B_BFu31ll, "aS_B_BFu31ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_BFu32i()
{
  {
    init_simple_test("aS_B_BFu32i");
    static aS_B_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aS_B_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_B_BFu32i.v1");
    check_field_offset(lv, v2, 2, "aS_B_BFu32i.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aS_B_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aS_B_BFu32i");
  }
}
static Arrange_To_Call_Me vaS_B_BFu32i(Test_aS_B_BFu32i, "aS_B_BFu32i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_BFu32ll()
{
  {
    init_simple_test("aS_B_BFu32ll");
    static aS_B_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_B_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_B_BFu32ll.v1");
    check_field_offset(lv, v2, 2, "aS_B_BFu32ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aS_B_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aS_B_BFu32ll");
  }
}
static Arrange_To_Call_Me vaS_B_BFu32ll(Test_aS_B_BFu32ll, "aS_B_BFu32ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_BFu33()
{
  {
    init_simple_test("aS_B_BFu33");
    static aS_B_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(aS_B_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_BFu33)");
    check_field_offset(lv, v1, 0, "aS_B_BFu33.v1");
    check_field_offset(lv, v2, 2, "aS_B_BFu33.v2");
    set_bf_and_test(lv, v3, 3, 0, 33, 1, "aS_B_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, hide_ull(1LL<<32), "aS_B_BFu33");
  }
}
static Arrange_To_Call_Me vaS_B_BFu33(Test_aS_B_BFu33, "aS_B_BFu33", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_BFu7c()
{
  {
    init_simple_test("aS_B_BFu7c");
    static aS_B_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aS_B_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_B_BFu7c.v1");
    check_field_offset(lv, v2, 2, "aS_B_BFu7c.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aS_B_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aS_B_BFu7c");
  }
}
static Arrange_To_Call_Me vaS_B_BFu7c(Test_aS_B_BFu7c, "aS_B_BFu7c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_BFu7i()
{
  {
    init_simple_test("aS_B_BFu7i");
    static aS_B_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aS_B_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_B_BFu7i.v1");
    check_field_offset(lv, v2, 2, "aS_B_BFu7i.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aS_B_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aS_B_BFu7i");
  }
}
static Arrange_To_Call_Me vaS_B_BFu7i(Test_aS_B_BFu7i, "aS_B_BFu7i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_BFu7ll()
{
  {
    init_simple_test("aS_B_BFu7ll");
    static aS_B_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_B_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_B_BFu7ll.v1");
    check_field_offset(lv, v2, 2, "aS_B_BFu7ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aS_B_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aS_B_BFu7ll");
  }
}
static Arrange_To_Call_Me vaS_B_BFu7ll(Test_aS_B_BFu7ll, "aS_B_BFu7ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_BFu7s()
{
  {
    init_simple_test("aS_B_BFu7s");
    static aS_B_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aS_B_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_B_BFu7s.v1");
    check_field_offset(lv, v2, 2, "aS_B_BFu7s.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aS_B_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aS_B_BFu7s");
  }
}
static Arrange_To_Call_Me vaS_B_BFu7s(Test_aS_B_BFu7s, "aS_B_BFu7s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_BFu8c()
{
  {
    init_simple_test("aS_B_BFu8c");
    static aS_B_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aS_B_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_B_BFu8c.v1");
    check_field_offset(lv, v2, 2, "aS_B_BFu8c.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aS_B_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aS_B_BFu8c");
  }
}
static Arrange_To_Call_Me vaS_B_BFu8c(Test_aS_B_BFu8c, "aS_B_BFu8c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_BFu8i()
{
  {
    init_simple_test("aS_B_BFu8i");
    static aS_B_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aS_B_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_B_BFu8i.v1");
    check_field_offset(lv, v2, 2, "aS_B_BFu8i.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aS_B_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aS_B_BFu8i");
  }
}
static Arrange_To_Call_Me vaS_B_BFu8i(Test_aS_B_BFu8i, "aS_B_BFu8i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_BFu8ll()
{
  {
    init_simple_test("aS_B_BFu8ll");
    static aS_B_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_B_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_B_BFu8ll.v1");
    check_field_offset(lv, v2, 2, "aS_B_BFu8ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aS_B_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aS_B_BFu8ll");
  }
}
static Arrange_To_Call_Me vaS_B_BFu8ll(Test_aS_B_BFu8ll, "aS_B_BFu8ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_BFu8s()
{
  {
    init_simple_test("aS_B_BFu8s");
    static aS_B_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aS_B_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_B_BFu8s.v1");
    check_field_offset(lv, v2, 2, "aS_B_BFu8s.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aS_B_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aS_B_BFu8s");
  }
}
static Arrange_To_Call_Me vaS_B_BFu8s(Test_aS_B_BFu8s, "aS_B_BFu8s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_BFu9i()
{
  {
    init_simple_test("aS_B_BFu9i");
    static aS_B_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(aS_B_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_B_BFu9i.v1");
    check_field_offset(lv, v2, 2, "aS_B_BFu9i.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aS_B_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aS_B_BFu9i");
  }
}
static Arrange_To_Call_Me vaS_B_BFu9i(Test_aS_B_BFu9i, "aS_B_BFu9i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_BFu9ll()
{
  {
    init_simple_test("aS_B_BFu9ll");
    static aS_B_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_B_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_B_BFu9ll.v1");
    check_field_offset(lv, v2, 2, "aS_B_BFu9ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aS_B_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aS_B_BFu9ll");
  }
}
static Arrange_To_Call_Me vaS_B_BFu9ll(Test_aS_B_BFu9ll, "aS_B_BFu9ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_BFu9s()
{
  {
    init_simple_test("aS_B_BFu9s");
    static aS_B_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(aS_B_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_B_BFu9s.v1");
    check_field_offset(lv, v2, 2, "aS_B_BFu9s.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aS_B_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aS_B_BFu9s");
  }
}
static Arrange_To_Call_Me vaS_B_BFu9s(Test_aS_B_BFu9s, "aS_B_BFu9s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_C()
{
  {
    init_simple_test("aS_B_C");
    aS_B_C lv;
    check2(sizeof(lv), 4, "sizeof(aS_B_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_C)");
    check_field_offset(lv, v1, 0, "aS_B_C.v1");
    check_field_offset(lv, v2, 2, "aS_B_C.v2");
    check_field_offset(lv, v3, 3, "aS_B_C.v3");
  }
}
static Arrange_To_Call_Me vaS_B_C(Test_aS_B_C, "aS_B_C", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_D()
{
  {
    init_simple_test("aS_B_D");
    aS_B_D lv;
    check2(sizeof(lv), 11, "sizeof(aS_B_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_D)");
    check_field_offset(lv, v1, 0, "aS_B_D.v1");
    check_field_offset(lv, v2, 2, "aS_B_D.v2");
    check_field_offset(lv, v3, 3, "aS_B_D.v3");
  }
}
static Arrange_To_Call_Me vaS_B_D(Test_aS_B_D, "aS_B_D", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_F()
{
  {
    init_simple_test("aS_B_F");
    aS_B_F lv;
    check2(sizeof(lv), 7, "sizeof(aS_B_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_F)");
    check_field_offset(lv, v1, 0, "aS_B_F.v1");
    check_field_offset(lv, v2, 2, "aS_B_F.v2");
    check_field_offset(lv, v3, 3, "aS_B_F.v3");
  }
}
static Arrange_To_Call_Me vaS_B_F(Test_aS_B_F, "aS_B_F", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_I()
{
  {
    init_simple_test("aS_B_I");
    aS_B_I lv;
    check2(sizeof(lv), 7, "sizeof(aS_B_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_I)");
    check_field_offset(lv, v1, 0, "aS_B_I.v1");
    check_field_offset(lv, v2, 2, "aS_B_I.v2");
    check_field_offset(lv, v3, 3, "aS_B_I.v3");
  }
}
static Arrange_To_Call_Me vaS_B_I(Test_aS_B_I, "aS_B_I", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_Ip()
{
  {
    init_simple_test("aS_B_Ip");
    aS_B_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_B_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_Ip)");
    check_field_offset(lv, v1, 0, "aS_B_Ip.v1");
    check_field_offset(lv, v2, 2, "aS_B_Ip.v2");
    check_field_offset(lv, v3, 3, "aS_B_Ip.v3");
  }
}
static Arrange_To_Call_Me vaS_B_Ip(Test_aS_B_Ip, "aS_B_Ip", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_L()
{
  {
    init_simple_test("aS_B_L");
    aS_B_L lv;
    check2(sizeof(lv), 11, "sizeof(aS_B_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_L)");
    check_field_offset(lv, v1, 0, "aS_B_L.v1");
    check_field_offset(lv, v2, 2, "aS_B_L.v2");
    check_field_offset(lv, v3, 3, "aS_B_L.v3");
  }
}
static Arrange_To_Call_Me vaS_B_L(Test_aS_B_L, "aS_B_L", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_S()
{
  {
    init_simple_test("aS_B_S");
    aS_B_S lv;
    check2(sizeof(lv), 5, "sizeof(aS_B_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_S)");
    check_field_offset(lv, v1, 0, "aS_B_S.v1");
    check_field_offset(lv, v2, 2, "aS_B_S.v2");
    check_field_offset(lv, v3, 3, "aS_B_S.v3");
  }
}
static Arrange_To_Call_Me vaS_B_S(Test_aS_B_S, "aS_B_S", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_Uc()
{
  {
    init_simple_test("aS_B_Uc");
    aS_B_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aS_B_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_Uc)");
    check_field_offset(lv, v1, 0, "aS_B_Uc.v1");
    check_field_offset(lv, v2, 2, "aS_B_Uc.v2");
    check_field_offset(lv, v3, 3, "aS_B_Uc.v3");
  }
}
static Arrange_To_Call_Me vaS_B_Uc(Test_aS_B_Uc, "aS_B_Uc", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_Ui()
{
  {
    init_simple_test("aS_B_Ui");
    aS_B_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aS_B_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_Ui)");
    check_field_offset(lv, v1, 0, "aS_B_Ui.v1");
    check_field_offset(lv, v2, 2, "aS_B_Ui.v2");
    check_field_offset(lv, v3, 3, "aS_B_Ui.v3");
  }
}
static Arrange_To_Call_Me vaS_B_Ui(Test_aS_B_Ui, "aS_B_Ui", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_Ul()
{
  {
    init_simple_test("aS_B_Ul");
    aS_B_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aS_B_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_Ul)");
    check_field_offset(lv, v1, 0, "aS_B_Ul.v1");
    check_field_offset(lv, v2, 2, "aS_B_Ul.v2");
    check_field_offset(lv, v3, 3, "aS_B_Ul.v3");
  }
}
static Arrange_To_Call_Me vaS_B_Ul(Test_aS_B_Ul, "aS_B_Ul", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_Us()
{
  {
    init_simple_test("aS_B_Us");
    aS_B_Us lv;
    check2(sizeof(lv), 5, "sizeof(aS_B_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_Us)");
    check_field_offset(lv, v1, 0, "aS_B_Us.v1");
    check_field_offset(lv, v2, 2, "aS_B_Us.v2");
    check_field_offset(lv, v3, 3, "aS_B_Us.v3");
  }
}
static Arrange_To_Call_Me vaS_B_Us(Test_aS_B_Us, "aS_B_Us", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_B_Vp()
{
  {
    init_simple_test("aS_B_Vp");
    aS_B_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_B_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_B_Vp)");
    check_field_offset(lv, v1, 0, "aS_B_Vp.v1");
    check_field_offset(lv, v2, 2, "aS_B_Vp.v2");
    check_field_offset(lv, v3, 3, "aS_B_Vp.v3");
  }
}
static Arrange_To_Call_Me vaS_B_Vp(Test_aS_B_Vp, "aS_B_Vp", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_BFu15i_B()
{
  {
    init_simple_test("aS_BFu15i_B");
    static aS_BFu15i_B lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_B)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_B");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_B");
    check_field_offset(lv, v3, 4, "aS_BFu15i_B.v3");
  }
}
static Arrange_To_Call_Me vaS_BFu15i_B(Test_aS_BFu15i_B, "aS_BFu15i_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_BFu15ll_B()
{
  {
    init_simple_test("aS_BFu15ll_B");
    static aS_BFu15ll_B lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_B)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_B");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_B");
    check_field_offset(lv, v3, 4, "aS_BFu15ll_B.v3");
  }
}
static Arrange_To_Call_Me vaS_BFu15ll_B(Test_aS_BFu15ll_B, "aS_BFu15ll_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_BFu15s_B()
{
  {
    init_simple_test("aS_BFu15s_B");
    static aS_BFu15s_B lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_B)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_B");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_B");
    check_field_offset(lv, v3, 4, "aS_BFu15s_B.v3");
  }
}
static Arrange_To_Call_Me vaS_BFu15s_B(Test_aS_BFu15s_B, "aS_BFu15s_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_BFu16i_B()
{
  {
    init_simple_test("aS_BFu16i_B");
    static aS_BFu16i_B lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_B)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_B");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_B");
    check_field_offset(lv, v3, 4, "aS_BFu16i_B.v3");
  }
}
static Arrange_To_Call_Me vaS_BFu16i_B(Test_aS_BFu16i_B, "aS_BFu16i_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_BFu16ll_B()
{
  {
    init_simple_test("aS_BFu16ll_B");
    static aS_BFu16ll_B lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_B)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_B");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_B");
    check_field_offset(lv, v3, 4, "aS_BFu16ll_B.v3");
  }
}
static Arrange_To_Call_Me vaS_BFu16ll_B(Test_aS_BFu16ll_B, "aS_BFu16ll_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_BFu16s_B()
{
  {
    init_simple_test("aS_BFu16s_B");
    static aS_BFu16s_B lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_B)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_B");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_B");
    check_field_offset(lv, v3, 4, "aS_BFu16s_B.v3");
  }
}
static Arrange_To_Call_Me vaS_BFu16s_B(Test_aS_BFu16s_B, "aS_BFu16s_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_BFu17i_B()
{
  {
    init_simple_test("aS_BFu17i_B");
    static aS_BFu17i_B lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu17i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_B)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_B");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_B");
    check_field_offset(lv, v3, 5, "aS_BFu17i_B.v3");
  }
}
static Arrange_To_Call_Me vaS_BFu17i_B(Test_aS_BFu17i_B, "aS_BFu17i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_BFu17ll_B()
{
  {
    init_simple_test("aS_BFu17ll_B");
    static aS_BFu17ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu17ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_B)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_B");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_B");
    check_field_offset(lv, v3, 5, "aS_BFu17ll_B.v3");
  }
}
static Arrange_To_Call_Me vaS_BFu17ll_B(Test_aS_BFu17ll_B, "aS_BFu17ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_BFu1c_B()
{
  {
    init_simple_test("aS_BFu1c_B");
    static aS_BFu1c_B lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_B)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_B");
    check_field_offset(lv, v3, 3, "aS_BFu1c_B.v3");
  }
}
static Arrange_To_Call_Me vaS_BFu1c_B(Test_aS_BFu1c_B, "aS_BFu1c_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_BFu1i_B()
{
  {
    init_simple_test("aS_BFu1i_B");
    static aS_BFu1i_B lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_B)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_B");
    check_field_offset(lv, v3, 3, "aS_BFu1i_B.v3");
  }
}
static Arrange_To_Call_Me vaS_BFu1i_B(Test_aS_BFu1i_B, "aS_BFu1i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_BFu1ll_B()
{
  {
    init_simple_test("aS_BFu1ll_B");
    static aS_BFu1ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_B)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_B");
    check_field_offset(lv, v3, 3, "aS_BFu1ll_B.v3");
  }
}
static Arrange_To_Call_Me vaS_BFu1ll_B(Test_aS_BFu1ll_B, "aS_BFu1ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_BFu1s_B()
{
  {
    init_simple_test("aS_BFu1s_B");
    static aS_BFu1s_B lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_B)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_B");
    check_field_offset(lv, v3, 3, "aS_BFu1s_B.v3");
  }
}
static Arrange_To_Call_Me vaS_BFu1s_B(Test_aS_BFu1s_B, "aS_BFu1s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_BFu31i_B()
{
  {
    init_simple_test("aS_BFu31i_B");
    static aS_BFu31i_B lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu31i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_B)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_B");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_B");
    check_field_offset(lv, v3, 6, "aS_BFu31i_B.v3");
  }
}
static Arrange_To_Call_Me vaS_BFu31i_B(Test_aS_BFu31i_B, "aS_BFu31i_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_BFu31ll_B()
{
  {
    init_simple_test("aS_BFu31ll_B");
    static aS_BFu31ll_B lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu31ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_B)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_B");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_B");
    check_field_offset(lv, v3, 6, "aS_BFu31ll_B.v3");
  }
}
static Arrange_To_Call_Me vaS_BFu31ll_B(Test_aS_BFu31ll_B, "aS_BFu31ll_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_BFu32i_B()
{
  {
    init_simple_test("aS_BFu32i_B");
    static aS_BFu32i_B lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu32i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_B)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_B");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_B");
    check_field_offset(lv, v3, 6, "aS_BFu32i_B.v3");
  }
}
static Arrange_To_Call_Me vaS_BFu32i_B(Test_aS_BFu32i_B, "aS_BFu32i_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_BFu32ll_B()
{
  {
    init_simple_test("aS_BFu32ll_B");
    static aS_BFu32ll_B lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu32ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_B)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_B");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_B");
    check_field_offset(lv, v3, 6, "aS_BFu32ll_B.v3");
  }
}
static Arrange_To_Call_Me vaS_BFu32ll_B(Test_aS_BFu32ll_B, "aS_BFu32ll_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_BFu33_B()
{
  {
    init_simple_test("aS_BFu33_B");
    static aS_BFu33_B lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu33_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_B)");
    check_field_offset(lv, v1, 0, "aS_BFu33_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_B");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_B");
    check_field_offset(lv, v3, 7, "aS_BFu33_B.v3");
  }
}
static Arrange_To_Call_Me vaS_BFu33_B(Test_aS_BFu33_B, "aS_BFu33_B", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_BFu7c_B()
{
  {
    init_simple_test("aS_BFu7c_B");
    static aS_BFu7c_B lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_B)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_B");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_B");
    check_field_offset(lv, v3, 3, "aS_BFu7c_B.v3");
  }
}
static Arrange_To_Call_Me vaS_BFu7c_B(Test_aS_BFu7c_B, "aS_BFu7c_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_BFu7i_B()
{
  {
    init_simple_test("aS_BFu7i_B");
    static aS_BFu7i_B lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_B)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_B");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_B");
    check_field_offset(lv, v3, 3, "aS_BFu7i_B.v3");
  }
}
static Arrange_To_Call_Me vaS_BFu7i_B(Test_aS_BFu7i_B, "aS_BFu7i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_BFu7ll_B()
{
  {
    init_simple_test("aS_BFu7ll_B");
    static aS_BFu7ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_B)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_B");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_B");
    check_field_offset(lv, v3, 3, "aS_BFu7ll_B.v3");
  }
}
static Arrange_To_Call_Me vaS_BFu7ll_B(Test_aS_BFu7ll_B, "aS_BFu7ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_BFu7s_B()
{
  {
    init_simple_test("aS_BFu7s_B");
    static aS_BFu7s_B lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_B)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_B");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_B");
    check_field_offset(lv, v3, 3, "aS_BFu7s_B.v3");
  }
}
static Arrange_To_Call_Me vaS_BFu7s_B(Test_aS_BFu7s_B, "aS_BFu7s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_BFu8c_B()
{
  {
    init_simple_test("aS_BFu8c_B");
    static aS_BFu8c_B lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_B)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_B");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_B");
    check_field_offset(lv, v3, 3, "aS_BFu8c_B.v3");
  }
}
static Arrange_To_Call_Me vaS_BFu8c_B(Test_aS_BFu8c_B, "aS_BFu8c_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_BFu8i_B()
{
  {
    init_simple_test("aS_BFu8i_B");
    static aS_BFu8i_B lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_B)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_B");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_B");
    check_field_offset(lv, v3, 3, "aS_BFu8i_B.v3");
  }
}
static Arrange_To_Call_Me vaS_BFu8i_B(Test_aS_BFu8i_B, "aS_BFu8i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_BFu8ll_B()
{
  {
    init_simple_test("aS_BFu8ll_B");
    static aS_BFu8ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_B)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_B");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_B");
    check_field_offset(lv, v3, 3, "aS_BFu8ll_B.v3");
  }
}
static Arrange_To_Call_Me vaS_BFu8ll_B(Test_aS_BFu8ll_B, "aS_BFu8ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_BFu8s_B()
{
  {
    init_simple_test("aS_BFu8s_B");
    static aS_BFu8s_B lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_B)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_B");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_B");
    check_field_offset(lv, v3, 3, "aS_BFu8s_B.v3");
  }
}
static Arrange_To_Call_Me vaS_BFu8s_B(Test_aS_BFu8s_B, "aS_BFu8s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_BFu9i_B()
{
  {
    init_simple_test("aS_BFu9i_B");
    static aS_BFu9i_B lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_B)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_B");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_B");
    check_field_offset(lv, v3, 4, "aS_BFu9i_B.v3");
  }
}
static Arrange_To_Call_Me vaS_BFu9i_B(Test_aS_BFu9i_B, "aS_BFu9i_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_BFu9ll_B()
{
  {
    init_simple_test("aS_BFu9ll_B");
    static aS_BFu9ll_B lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_B)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_B");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_B");
    check_field_offset(lv, v3, 4, "aS_BFu9ll_B.v3");
  }
}
static Arrange_To_Call_Me vaS_BFu9ll_B(Test_aS_BFu9ll_B, "aS_BFu9ll_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_BFu9s_B()
{
  {
    init_simple_test("aS_BFu9s_B");
    static aS_BFu9s_B lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_B)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_B");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_B");
    check_field_offset(lv, v3, 4, "aS_BFu9s_B.v3");
  }
}
static Arrange_To_Call_Me vaS_BFu9s_B(Test_aS_BFu9s_B, "aS_BFu9s_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_C_B()
{
  {
    init_simple_test("aS_C_B");
    aS_C_B lv;
    check2(sizeof(lv), 4, "sizeof(aS_C_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_B)");
    check_field_offset(lv, v1, 0, "aS_C_B.v1");
    check_field_offset(lv, v2, 2, "aS_C_B.v2");
    check_field_offset(lv, v3, 3, "aS_C_B.v3");
  }
}
static Arrange_To_Call_Me vaS_C_B(Test_aS_C_B, "aS_C_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_D_B()
{
  {
    init_simple_test("aS_D_B");
    aS_D_B lv;
    check2(sizeof(lv), 11, "sizeof(aS_D_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_B)");
    check_field_offset(lv, v1, 0, "aS_D_B.v1");
    check_field_offset(lv, v2, 2, "aS_D_B.v2");
    check_field_offset(lv, v3, 10, "aS_D_B.v3");
  }
}
static Arrange_To_Call_Me vaS_D_B(Test_aS_D_B, "aS_D_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_F_B()
{
  {
    init_simple_test("aS_F_B");
    aS_F_B lv;
    check2(sizeof(lv), 7, "sizeof(aS_F_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_B)");
    check_field_offset(lv, v1, 0, "aS_F_B.v1");
    check_field_offset(lv, v2, 2, "aS_F_B.v2");
    check_field_offset(lv, v3, 6, "aS_F_B.v3");
  }
}
static Arrange_To_Call_Me vaS_F_B(Test_aS_F_B, "aS_F_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_I_B()
{
  {
    init_simple_test("aS_I_B");
    aS_I_B lv;
    check2(sizeof(lv), 7, "sizeof(aS_I_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_B)");
    check_field_offset(lv, v1, 0, "aS_I_B.v1");
    check_field_offset(lv, v2, 2, "aS_I_B.v2");
    check_field_offset(lv, v3, 6, "aS_I_B.v3");
  }
}
static Arrange_To_Call_Me vaS_I_B(Test_aS_I_B, "aS_I_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_Ip_B()
{
  {
    init_simple_test("aS_Ip_B");
    aS_Ip_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Ip_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_B)");
    check_field_offset(lv, v1, 0, "aS_Ip_B.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_B.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aS_Ip_B.v3");
  }
}
static Arrange_To_Call_Me vaS_Ip_B(Test_aS_Ip_B, "aS_Ip_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_L_B()
{
  {
    init_simple_test("aS_L_B");
    aS_L_B lv;
    check2(sizeof(lv), 11, "sizeof(aS_L_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_B)");
    check_field_offset(lv, v1, 0, "aS_L_B.v1");
    check_field_offset(lv, v2, 2, "aS_L_B.v2");
    check_field_offset(lv, v3, 10, "aS_L_B.v3");
  }
}
static Arrange_To_Call_Me vaS_L_B(Test_aS_L_B, "aS_L_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_S_B()
{
  {
    init_simple_test("aS_S_B");
    aS_S_B lv;
    check2(sizeof(lv), 5, "sizeof(aS_S_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_B)");
    check_field_offset(lv, v1, 0, "aS_S_B.v1");
    check_field_offset(lv, v2, 2, "aS_S_B.v2");
    check_field_offset(lv, v3, 4, "aS_S_B.v3");
  }
}
static Arrange_To_Call_Me vaS_S_B(Test_aS_S_B, "aS_S_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_Uc_B()
{
  {
    init_simple_test("aS_Uc_B");
    aS_Uc_B lv;
    check2(sizeof(lv), 4, "sizeof(aS_Uc_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_B)");
    check_field_offset(lv, v1, 0, "aS_Uc_B.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_B.v2");
    check_field_offset(lv, v3, 3, "aS_Uc_B.v3");
  }
}
static Arrange_To_Call_Me vaS_Uc_B(Test_aS_Uc_B, "aS_Uc_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_Ui_B()
{
  {
    init_simple_test("aS_Ui_B");
    aS_Ui_B lv;
    check2(sizeof(lv), 7, "sizeof(aS_Ui_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_B)");
    check_field_offset(lv, v1, 0, "aS_Ui_B.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_B.v2");
    check_field_offset(lv, v3, 6, "aS_Ui_B.v3");
  }
}
static Arrange_To_Call_Me vaS_Ui_B(Test_aS_Ui_B, "aS_Ui_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_Ul_B()
{
  {
    init_simple_test("aS_Ul_B");
    aS_Ul_B lv;
    check2(sizeof(lv), 11, "sizeof(aS_Ul_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_B)");
    check_field_offset(lv, v1, 0, "aS_Ul_B.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_B.v2");
    check_field_offset(lv, v3, 10, "aS_Ul_B.v3");
  }
}
static Arrange_To_Call_Me vaS_Ul_B(Test_aS_Ul_B, "aS_Ul_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_Us_B()
{
  {
    init_simple_test("aS_Us_B");
    aS_Us_B lv;
    check2(sizeof(lv), 5, "sizeof(aS_Us_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_B)");
    check_field_offset(lv, v1, 0, "aS_Us_B.v1");
    check_field_offset(lv, v2, 2, "aS_Us_B.v2");
    check_field_offset(lv, v3, 4, "aS_Us_B.v3");
  }
}
static Arrange_To_Call_Me vaS_Us_B(Test_aS_Us_B, "aS_Us_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aS_Vp_B()
{
  {
    init_simple_test("aS_Vp_B");
    aS_Vp_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Vp_B)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_B)");
    check_field_offset(lv, v1, 0, "aS_Vp_B.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_B.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aS_Vp_B.v3");
  }
}
static Arrange_To_Call_Me vaS_Vp_B(Test_aS_Vp_B, "aS_Vp_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B()
{
  {
    init_simple_test("aUc_B");
    aUc_B lv;
    check2(sizeof(lv), 2, "sizeof(aUc_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B)");
    check_field_offset(lv, v1, 0, "aUc_B.v1");
    check_field_offset(lv, v2, 1, "aUc_B.v2");
  }
}
static Arrange_To_Call_Me vaUc_B(Test_aUc_B, "aUc_B", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_B()
{
  {
    init_simple_test("aUc_B_B");
    aUc_B_B lv;
    check2(sizeof(lv), 3, "sizeof(aUc_B_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_B)");
    check_field_offset(lv, v1, 0, "aUc_B_B.v1");
    check_field_offset(lv, v2, 1, "aUc_B_B.v2");
    check_field_offset(lv, v3, 2, "aUc_B_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_B_B(Test_aUc_B_B, "aUc_B_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_BFu15i()
{
  {
    init_simple_test("aUc_B_BFu15i");
    static aUc_B_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_B_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_B_BFu15i.v1");
    check_field_offset(lv, v2, 1, "aUc_B_BFu15i.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aUc_B_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aUc_B_BFu15i");
  }
}
static Arrange_To_Call_Me vaUc_B_BFu15i(Test_aUc_B_BFu15i, "aUc_B_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_BFu15ll()
{
  {
    init_simple_test("aUc_B_BFu15ll");
    static aUc_B_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_B_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_B_BFu15ll.v1");
    check_field_offset(lv, v2, 1, "aUc_B_BFu15ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aUc_B_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aUc_B_BFu15ll");
  }
}
static Arrange_To_Call_Me vaUc_B_BFu15ll(Test_aUc_B_BFu15ll, "aUc_B_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_BFu15s()
{
  {
    init_simple_test("aUc_B_BFu15s");
    static aUc_B_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_B_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_B_BFu15s.v1");
    check_field_offset(lv, v2, 1, "aUc_B_BFu15s.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aUc_B_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aUc_B_BFu15s");
  }
}
static Arrange_To_Call_Me vaUc_B_BFu15s(Test_aUc_B_BFu15s, "aUc_B_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_BFu16i()
{
  {
    init_simple_test("aUc_B_BFu16i");
    static aUc_B_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_B_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_B_BFu16i.v1");
    check_field_offset(lv, v2, 1, "aUc_B_BFu16i.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aUc_B_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aUc_B_BFu16i");
  }
}
static Arrange_To_Call_Me vaUc_B_BFu16i(Test_aUc_B_BFu16i, "aUc_B_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_BFu16ll()
{
  {
    init_simple_test("aUc_B_BFu16ll");
    static aUc_B_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_B_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_B_BFu16ll.v1");
    check_field_offset(lv, v2, 1, "aUc_B_BFu16ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aUc_B_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aUc_B_BFu16ll");
  }
}
static Arrange_To_Call_Me vaUc_B_BFu16ll(Test_aUc_B_BFu16ll, "aUc_B_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_BFu16s()
{
  {
    init_simple_test("aUc_B_BFu16s");
    static aUc_B_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_B_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_B_BFu16s.v1");
    check_field_offset(lv, v2, 1, "aUc_B_BFu16s.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aUc_B_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aUc_B_BFu16s");
  }
}
static Arrange_To_Call_Me vaUc_B_BFu16s(Test_aUc_B_BFu16s, "aUc_B_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_BFu17i()
{
  {
    init_simple_test("aUc_B_BFu17i");
    static aUc_B_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_B_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_B_BFu17i.v1");
    check_field_offset(lv, v2, 1, "aUc_B_BFu17i.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aUc_B_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aUc_B_BFu17i");
  }
}
static Arrange_To_Call_Me vaUc_B_BFu17i(Test_aUc_B_BFu17i, "aUc_B_BFu17i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_BFu17ll()
{
  {
    init_simple_test("aUc_B_BFu17ll");
    static aUc_B_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_B_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_B_BFu17ll.v1");
    check_field_offset(lv, v2, 1, "aUc_B_BFu17ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aUc_B_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aUc_B_BFu17ll");
  }
}
static Arrange_To_Call_Me vaUc_B_BFu17ll(Test_aUc_B_BFu17ll, "aUc_B_BFu17ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_BFu1c()
{
  {
    init_simple_test("aUc_B_BFu1c");
    static aUc_B_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_B_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_B_BFu1c.v1");
    check_field_offset(lv, v2, 1, "aUc_B_BFu1c.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aUc_B_BFu1c");
  }
}
static Arrange_To_Call_Me vaUc_B_BFu1c(Test_aUc_B_BFu1c, "aUc_B_BFu1c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_BFu1i()
{
  {
    init_simple_test("aUc_B_BFu1i");
    static aUc_B_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_B_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_B_BFu1i.v1");
    check_field_offset(lv, v2, 1, "aUc_B_BFu1i.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aUc_B_BFu1i");
  }
}
static Arrange_To_Call_Me vaUc_B_BFu1i(Test_aUc_B_BFu1i, "aUc_B_BFu1i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_BFu1ll()
{
  {
    init_simple_test("aUc_B_BFu1ll");
    static aUc_B_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_B_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_B_BFu1ll.v1");
    check_field_offset(lv, v2, 1, "aUc_B_BFu1ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aUc_B_BFu1ll");
  }
}
static Arrange_To_Call_Me vaUc_B_BFu1ll(Test_aUc_B_BFu1ll, "aUc_B_BFu1ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_BFu1s()
{
  {
    init_simple_test("aUc_B_BFu1s");
    static aUc_B_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_B_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_B_BFu1s.v1");
    check_field_offset(lv, v2, 1, "aUc_B_BFu1s.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aUc_B_BFu1s");
  }
}
static Arrange_To_Call_Me vaUc_B_BFu1s(Test_aUc_B_BFu1s, "aUc_B_BFu1s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_BFu31i()
{
  {
    init_simple_test("aUc_B_BFu31i");
    static aUc_B_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_B_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_B_BFu31i.v1");
    check_field_offset(lv, v2, 1, "aUc_B_BFu31i.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aUc_B_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aUc_B_BFu31i");
  }
}
static Arrange_To_Call_Me vaUc_B_BFu31i(Test_aUc_B_BFu31i, "aUc_B_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_BFu31ll()
{
  {
    init_simple_test("aUc_B_BFu31ll");
    static aUc_B_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_B_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_B_BFu31ll.v1");
    check_field_offset(lv, v2, 1, "aUc_B_BFu31ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aUc_B_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aUc_B_BFu31ll");
  }
}
static Arrange_To_Call_Me vaUc_B_BFu31ll(Test_aUc_B_BFu31ll, "aUc_B_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_BFu32i()
{
  {
    init_simple_test("aUc_B_BFu32i");
    static aUc_B_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_B_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_B_BFu32i.v1");
    check_field_offset(lv, v2, 1, "aUc_B_BFu32i.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aUc_B_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aUc_B_BFu32i");
  }
}
static Arrange_To_Call_Me vaUc_B_BFu32i(Test_aUc_B_BFu32i, "aUc_B_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_BFu32ll()
{
  {
    init_simple_test("aUc_B_BFu32ll");
    static aUc_B_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_B_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_B_BFu32ll.v1");
    check_field_offset(lv, v2, 1, "aUc_B_BFu32ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aUc_B_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aUc_B_BFu32ll");
  }
}
static Arrange_To_Call_Me vaUc_B_BFu32ll(Test_aUc_B_BFu32ll, "aUc_B_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_BFu33()
{
  {
    init_simple_test("aUc_B_BFu33");
    static aUc_B_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aUc_B_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_B_BFu33.v1");
    check_field_offset(lv, v2, 1, "aUc_B_BFu33.v2");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "aUc_B_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "aUc_B_BFu33");
  }
}
static Arrange_To_Call_Me vaUc_B_BFu33(Test_aUc_B_BFu33, "aUc_B_BFu33", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_BFu7c()
{
  {
    init_simple_test("aUc_B_BFu7c");
    static aUc_B_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_B_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_B_BFu7c.v1");
    check_field_offset(lv, v2, 1, "aUc_B_BFu7c.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aUc_B_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aUc_B_BFu7c");
  }
}
static Arrange_To_Call_Me vaUc_B_BFu7c(Test_aUc_B_BFu7c, "aUc_B_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_BFu7i()
{
  {
    init_simple_test("aUc_B_BFu7i");
    static aUc_B_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_B_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_B_BFu7i.v1");
    check_field_offset(lv, v2, 1, "aUc_B_BFu7i.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aUc_B_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aUc_B_BFu7i");
  }
}
static Arrange_To_Call_Me vaUc_B_BFu7i(Test_aUc_B_BFu7i, "aUc_B_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_BFu7ll()
{
  {
    init_simple_test("aUc_B_BFu7ll");
    static aUc_B_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_B_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_B_BFu7ll.v1");
    check_field_offset(lv, v2, 1, "aUc_B_BFu7ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aUc_B_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aUc_B_BFu7ll");
  }
}
static Arrange_To_Call_Me vaUc_B_BFu7ll(Test_aUc_B_BFu7ll, "aUc_B_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_BFu7s()
{
  {
    init_simple_test("aUc_B_BFu7s");
    static aUc_B_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_B_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_B_BFu7s.v1");
    check_field_offset(lv, v2, 1, "aUc_B_BFu7s.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aUc_B_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aUc_B_BFu7s");
  }
}
static Arrange_To_Call_Me vaUc_B_BFu7s(Test_aUc_B_BFu7s, "aUc_B_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_BFu8c()
{
  {
    init_simple_test("aUc_B_BFu8c");
    static aUc_B_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_B_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_B_BFu8c.v1");
    check_field_offset(lv, v2, 1, "aUc_B_BFu8c.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aUc_B_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aUc_B_BFu8c");
  }
}
static Arrange_To_Call_Me vaUc_B_BFu8c(Test_aUc_B_BFu8c, "aUc_B_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_BFu8i()
{
  {
    init_simple_test("aUc_B_BFu8i");
    static aUc_B_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_B_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_B_BFu8i.v1");
    check_field_offset(lv, v2, 1, "aUc_B_BFu8i.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aUc_B_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aUc_B_BFu8i");
  }
}
static Arrange_To_Call_Me vaUc_B_BFu8i(Test_aUc_B_BFu8i, "aUc_B_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_BFu8ll()
{
  {
    init_simple_test("aUc_B_BFu8ll");
    static aUc_B_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_B_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_B_BFu8ll.v1");
    check_field_offset(lv, v2, 1, "aUc_B_BFu8ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aUc_B_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aUc_B_BFu8ll");
  }
}
static Arrange_To_Call_Me vaUc_B_BFu8ll(Test_aUc_B_BFu8ll, "aUc_B_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_BFu8s()
{
  {
    init_simple_test("aUc_B_BFu8s");
    static aUc_B_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_B_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_B_BFu8s.v1");
    check_field_offset(lv, v2, 1, "aUc_B_BFu8s.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aUc_B_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aUc_B_BFu8s");
  }
}
static Arrange_To_Call_Me vaUc_B_BFu8s(Test_aUc_B_BFu8s, "aUc_B_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_BFu9i()
{
  {
    init_simple_test("aUc_B_BFu9i");
    static aUc_B_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_B_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_B_BFu9i.v1");
    check_field_offset(lv, v2, 1, "aUc_B_BFu9i.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aUc_B_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aUc_B_BFu9i");
  }
}
static Arrange_To_Call_Me vaUc_B_BFu9i(Test_aUc_B_BFu9i, "aUc_B_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_BFu9ll()
{
  {
    init_simple_test("aUc_B_BFu9ll");
    static aUc_B_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_B_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_B_BFu9ll.v1");
    check_field_offset(lv, v2, 1, "aUc_B_BFu9ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aUc_B_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aUc_B_BFu9ll");
  }
}
static Arrange_To_Call_Me vaUc_B_BFu9ll(Test_aUc_B_BFu9ll, "aUc_B_BFu9ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_BFu9s()
{
  {
    init_simple_test("aUc_B_BFu9s");
    static aUc_B_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_B_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_B_BFu9s.v1");
    check_field_offset(lv, v2, 1, "aUc_B_BFu9s.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aUc_B_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aUc_B_BFu9s");
  }
}
static Arrange_To_Call_Me vaUc_B_BFu9s(Test_aUc_B_BFu9s, "aUc_B_BFu9s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_C()
{
  {
    init_simple_test("aUc_B_C");
    aUc_B_C lv;
    check2(sizeof(lv), 3, "sizeof(aUc_B_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_C)");
    check_field_offset(lv, v1, 0, "aUc_B_C.v1");
    check_field_offset(lv, v2, 1, "aUc_B_C.v2");
    check_field_offset(lv, v3, 2, "aUc_B_C.v3");
  }
}
static Arrange_To_Call_Me vaUc_B_C(Test_aUc_B_C, "aUc_B_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_D()
{
  {
    init_simple_test("aUc_B_D");
    aUc_B_D lv;
    check2(sizeof(lv), 10, "sizeof(aUc_B_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_D)");
    check_field_offset(lv, v1, 0, "aUc_B_D.v1");
    check_field_offset(lv, v2, 1, "aUc_B_D.v2");
    check_field_offset(lv, v3, 2, "aUc_B_D.v3");
  }
}
static Arrange_To_Call_Me vaUc_B_D(Test_aUc_B_D, "aUc_B_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_F()
{
  {
    init_simple_test("aUc_B_F");
    aUc_B_F lv;
    check2(sizeof(lv), 6, "sizeof(aUc_B_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_F)");
    check_field_offset(lv, v1, 0, "aUc_B_F.v1");
    check_field_offset(lv, v2, 1, "aUc_B_F.v2");
    check_field_offset(lv, v3, 2, "aUc_B_F.v3");
  }
}
static Arrange_To_Call_Me vaUc_B_F(Test_aUc_B_F, "aUc_B_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_I()
{
  {
    init_simple_test("aUc_B_I");
    aUc_B_I lv;
    check2(sizeof(lv), 6, "sizeof(aUc_B_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_I)");
    check_field_offset(lv, v1, 0, "aUc_B_I.v1");
    check_field_offset(lv, v2, 1, "aUc_B_I.v2");
    check_field_offset(lv, v3, 2, "aUc_B_I.v3");
  }
}
static Arrange_To_Call_Me vaUc_B_I(Test_aUc_B_I, "aUc_B_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_Ip()
{
  {
    init_simple_test("aUc_B_Ip");
    aUc_B_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_B_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_Ip)");
    check_field_offset(lv, v1, 0, "aUc_B_Ip.v1");
    check_field_offset(lv, v2, 1, "aUc_B_Ip.v2");
    check_field_offset(lv, v3, 2, "aUc_B_Ip.v3");
  }
}
static Arrange_To_Call_Me vaUc_B_Ip(Test_aUc_B_Ip, "aUc_B_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_L()
{
  {
    init_simple_test("aUc_B_L");
    aUc_B_L lv;
    check2(sizeof(lv), 10, "sizeof(aUc_B_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_L)");
    check_field_offset(lv, v1, 0, "aUc_B_L.v1");
    check_field_offset(lv, v2, 1, "aUc_B_L.v2");
    check_field_offset(lv, v3, 2, "aUc_B_L.v3");
  }
}
static Arrange_To_Call_Me vaUc_B_L(Test_aUc_B_L, "aUc_B_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_S()
{
  {
    init_simple_test("aUc_B_S");
    aUc_B_S lv;
    check2(sizeof(lv), 4, "sizeof(aUc_B_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_S)");
    check_field_offset(lv, v1, 0, "aUc_B_S.v1");
    check_field_offset(lv, v2, 1, "aUc_B_S.v2");
    check_field_offset(lv, v3, 2, "aUc_B_S.v3");
  }
}
static Arrange_To_Call_Me vaUc_B_S(Test_aUc_B_S, "aUc_B_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_Uc()
{
  {
    init_simple_test("aUc_B_Uc");
    aUc_B_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aUc_B_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_Uc)");
    check_field_offset(lv, v1, 0, "aUc_B_Uc.v1");
    check_field_offset(lv, v2, 1, "aUc_B_Uc.v2");
    check_field_offset(lv, v3, 2, "aUc_B_Uc.v3");
  }
}
static Arrange_To_Call_Me vaUc_B_Uc(Test_aUc_B_Uc, "aUc_B_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_Ui()
{
  {
    init_simple_test("aUc_B_Ui");
    aUc_B_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aUc_B_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_Ui)");
    check_field_offset(lv, v1, 0, "aUc_B_Ui.v1");
    check_field_offset(lv, v2, 1, "aUc_B_Ui.v2");
    check_field_offset(lv, v3, 2, "aUc_B_Ui.v3");
  }
}
static Arrange_To_Call_Me vaUc_B_Ui(Test_aUc_B_Ui, "aUc_B_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_Ul()
{
  {
    init_simple_test("aUc_B_Ul");
    aUc_B_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aUc_B_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_Ul)");
    check_field_offset(lv, v1, 0, "aUc_B_Ul.v1");
    check_field_offset(lv, v2, 1, "aUc_B_Ul.v2");
    check_field_offset(lv, v3, 2, "aUc_B_Ul.v3");
  }
}
static Arrange_To_Call_Me vaUc_B_Ul(Test_aUc_B_Ul, "aUc_B_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_Us()
{
  {
    init_simple_test("aUc_B_Us");
    aUc_B_Us lv;
    check2(sizeof(lv), 4, "sizeof(aUc_B_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_Us)");
    check_field_offset(lv, v1, 0, "aUc_B_Us.v1");
    check_field_offset(lv, v2, 1, "aUc_B_Us.v2");
    check_field_offset(lv, v3, 2, "aUc_B_Us.v3");
  }
}
static Arrange_To_Call_Me vaUc_B_Us(Test_aUc_B_Us, "aUc_B_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_B_Vp()
{
  {
    init_simple_test("aUc_B_Vp");
    aUc_B_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_B_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_B_Vp)");
    check_field_offset(lv, v1, 0, "aUc_B_Vp.v1");
    check_field_offset(lv, v2, 1, "aUc_B_Vp.v2");
    check_field_offset(lv, v3, 2, "aUc_B_Vp.v3");
  }
}
static Arrange_To_Call_Me vaUc_B_Vp(Test_aUc_B_Vp, "aUc_B_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu15i_B()
{
  {
    init_simple_test("aUc_BFu15i_B");
    static aUc_BFu15i_B lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_B)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_B");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_B");
    check_field_offset(lv, v3, 3, "aUc_BFu15i_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu15i_B(Test_aUc_BFu15i_B, "aUc_BFu15i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu15ll_B()
{
  {
    init_simple_test("aUc_BFu15ll_B");
    static aUc_BFu15ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_B)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_B");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_B");
    check_field_offset(lv, v3, 3, "aUc_BFu15ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu15ll_B(Test_aUc_BFu15ll_B, "aUc_BFu15ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu15s_B()
{
  {
    init_simple_test("aUc_BFu15s_B");
    static aUc_BFu15s_B lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_B)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_B");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_B");
    check_field_offset(lv, v3, 3, "aUc_BFu15s_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu15s_B(Test_aUc_BFu15s_B, "aUc_BFu15s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu16i_B()
{
  {
    init_simple_test("aUc_BFu16i_B");
    static aUc_BFu16i_B lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_B)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_B");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_B");
    check_field_offset(lv, v3, 3, "aUc_BFu16i_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu16i_B(Test_aUc_BFu16i_B, "aUc_BFu16i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu16ll_B()
{
  {
    init_simple_test("aUc_BFu16ll_B");
    static aUc_BFu16ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_B)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_B");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_B");
    check_field_offset(lv, v3, 3, "aUc_BFu16ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu16ll_B(Test_aUc_BFu16ll_B, "aUc_BFu16ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu16s_B()
{
  {
    init_simple_test("aUc_BFu16s_B");
    static aUc_BFu16s_B lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_B)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_B");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_B");
    check_field_offset(lv, v3, 3, "aUc_BFu16s_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu16s_B(Test_aUc_BFu16s_B, "aUc_BFu16s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu17i_B()
{
  {
    init_simple_test("aUc_BFu17i_B");
    static aUc_BFu17i_B lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu17i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_B)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_B");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_B");
    check_field_offset(lv, v3, 4, "aUc_BFu17i_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu17i_B(Test_aUc_BFu17i_B, "aUc_BFu17i_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu17ll_B()
{
  {
    init_simple_test("aUc_BFu17ll_B");
    static aUc_BFu17ll_B lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu17ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_B)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_B");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_B");
    check_field_offset(lv, v3, 4, "aUc_BFu17ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu17ll_B(Test_aUc_BFu17ll_B, "aUc_BFu17ll_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu1c_B()
{
  {
    init_simple_test("aUc_BFu1c_B");
    static aUc_BFu1c_B lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_B)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_B");
    check_field_offset(lv, v3, 2, "aUc_BFu1c_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu1c_B(Test_aUc_BFu1c_B, "aUc_BFu1c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu1i_B()
{
  {
    init_simple_test("aUc_BFu1i_B");
    static aUc_BFu1i_B lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_B)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_B");
    check_field_offset(lv, v3, 2, "aUc_BFu1i_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu1i_B(Test_aUc_BFu1i_B, "aUc_BFu1i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu1ll_B()
{
  {
    init_simple_test("aUc_BFu1ll_B");
    static aUc_BFu1ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_B)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_B");
    check_field_offset(lv, v3, 2, "aUc_BFu1ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu1ll_B(Test_aUc_BFu1ll_B, "aUc_BFu1ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu1s_B()
{
  {
    init_simple_test("aUc_BFu1s_B");
    static aUc_BFu1s_B lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_B)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_B");
    check_field_offset(lv, v3, 2, "aUc_BFu1s_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu1s_B(Test_aUc_BFu1s_B, "aUc_BFu1s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu31i_B()
{
  {
    init_simple_test("aUc_BFu31i_B");
    static aUc_BFu31i_B lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu31i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_B)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_B");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_B");
    check_field_offset(lv, v3, 5, "aUc_BFu31i_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu31i_B(Test_aUc_BFu31i_B, "aUc_BFu31i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu31ll_B()
{
  {
    init_simple_test("aUc_BFu31ll_B");
    static aUc_BFu31ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu31ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_B)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_B");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_B");
    check_field_offset(lv, v3, 5, "aUc_BFu31ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu31ll_B(Test_aUc_BFu31ll_B, "aUc_BFu31ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu32i_B()
{
  {
    init_simple_test("aUc_BFu32i_B");
    static aUc_BFu32i_B lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_B)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_B");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_B");
    check_field_offset(lv, v3, 5, "aUc_BFu32i_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu32i_B(Test_aUc_BFu32i_B, "aUc_BFu32i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu32ll_B()
{
  {
    init_simple_test("aUc_BFu32ll_B");
    static aUc_BFu32ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_B)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_B");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_B");
    check_field_offset(lv, v3, 5, "aUc_BFu32ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu32ll_B(Test_aUc_BFu32ll_B, "aUc_BFu32ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu33_B()
{
  {
    init_simple_test("aUc_BFu33_B");
    static aUc_BFu33_B lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu33_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_B)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_B");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_B");
    check_field_offset(lv, v3, 6, "aUc_BFu33_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu33_B(Test_aUc_BFu33_B, "aUc_BFu33_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu7c_B()
{
  {
    init_simple_test("aUc_BFu7c_B");
    static aUc_BFu7c_B lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_B)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_B");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_B");
    check_field_offset(lv, v3, 2, "aUc_BFu7c_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu7c_B(Test_aUc_BFu7c_B, "aUc_BFu7c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu7i_B()
{
  {
    init_simple_test("aUc_BFu7i_B");
    static aUc_BFu7i_B lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_B)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_B");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_B");
    check_field_offset(lv, v3, 2, "aUc_BFu7i_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu7i_B(Test_aUc_BFu7i_B, "aUc_BFu7i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu7ll_B()
{
  {
    init_simple_test("aUc_BFu7ll_B");
    static aUc_BFu7ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_B)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_B");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_B");
    check_field_offset(lv, v3, 2, "aUc_BFu7ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu7ll_B(Test_aUc_BFu7ll_B, "aUc_BFu7ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu7s_B()
{
  {
    init_simple_test("aUc_BFu7s_B");
    static aUc_BFu7s_B lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_B)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_B");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_B");
    check_field_offset(lv, v3, 2, "aUc_BFu7s_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu7s_B(Test_aUc_BFu7s_B, "aUc_BFu7s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu8c_B()
{
  {
    init_simple_test("aUc_BFu8c_B");
    static aUc_BFu8c_B lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_B)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_B");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_B");
    check_field_offset(lv, v3, 2, "aUc_BFu8c_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu8c_B(Test_aUc_BFu8c_B, "aUc_BFu8c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu8i_B()
{
  {
    init_simple_test("aUc_BFu8i_B");
    static aUc_BFu8i_B lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_B)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_B");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_B");
    check_field_offset(lv, v3, 2, "aUc_BFu8i_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu8i_B(Test_aUc_BFu8i_B, "aUc_BFu8i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu8ll_B()
{
  {
    init_simple_test("aUc_BFu8ll_B");
    static aUc_BFu8ll_B lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_B)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_B");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_B");
    check_field_offset(lv, v3, 2, "aUc_BFu8ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu8ll_B(Test_aUc_BFu8ll_B, "aUc_BFu8ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu8s_B()
{
  {
    init_simple_test("aUc_BFu8s_B");
    static aUc_BFu8s_B lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_B)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_B");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_B");
    check_field_offset(lv, v3, 2, "aUc_BFu8s_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu8s_B(Test_aUc_BFu8s_B, "aUc_BFu8s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu9i_B()
{
  {
    init_simple_test("aUc_BFu9i_B");
    static aUc_BFu9i_B lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_B)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_B");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_B");
    check_field_offset(lv, v3, 3, "aUc_BFu9i_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu9i_B(Test_aUc_BFu9i_B, "aUc_BFu9i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu9ll_B()
{
  {
    init_simple_test("aUc_BFu9ll_B");
    static aUc_BFu9ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_B)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_B");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_B");
    check_field_offset(lv, v3, 3, "aUc_BFu9ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu9ll_B(Test_aUc_BFu9ll_B, "aUc_BFu9ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_BFu9s_B()
{
  {
    init_simple_test("aUc_BFu9s_B");
    static aUc_BFu9s_B lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_B)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_B");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_B");
    check_field_offset(lv, v3, 3, "aUc_BFu9s_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_BFu9s_B(Test_aUc_BFu9s_B, "aUc_BFu9s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_C_B()
{
  {
    init_simple_test("aUc_C_B");
    aUc_C_B lv;
    check2(sizeof(lv), 3, "sizeof(aUc_C_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_B)");
    check_field_offset(lv, v1, 0, "aUc_C_B.v1");
    check_field_offset(lv, v2, 1, "aUc_C_B.v2");
    check_field_offset(lv, v3, 2, "aUc_C_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_C_B(Test_aUc_C_B, "aUc_C_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_D_B()
{
  {
    init_simple_test("aUc_D_B");
    aUc_D_B lv;
    check2(sizeof(lv), 10, "sizeof(aUc_D_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_D_B)");
    check_field_offset(lv, v1, 0, "aUc_D_B.v1");
    check_field_offset(lv, v2, 1, "aUc_D_B.v2");
    check_field_offset(lv, v3, 9, "aUc_D_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_D_B(Test_aUc_D_B, "aUc_D_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_F_B()
{
  {
    init_simple_test("aUc_F_B");
    aUc_F_B lv;
    check2(sizeof(lv), 6, "sizeof(aUc_F_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_F_B)");
    check_field_offset(lv, v1, 0, "aUc_F_B.v1");
    check_field_offset(lv, v2, 1, "aUc_F_B.v2");
    check_field_offset(lv, v3, 5, "aUc_F_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_F_B(Test_aUc_F_B, "aUc_F_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_I_B()
{
  {
    init_simple_test("aUc_I_B");
    aUc_I_B lv;
    check2(sizeof(lv), 6, "sizeof(aUc_I_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_I_B)");
    check_field_offset(lv, v1, 0, "aUc_I_B.v1");
    check_field_offset(lv, v2, 1, "aUc_I_B.v2");
    check_field_offset(lv, v3, 5, "aUc_I_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_I_B(Test_aUc_I_B, "aUc_I_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Ip_B()
{
  {
    init_simple_test("aUc_Ip_B");
    aUc_Ip_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_Ip_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Ip_B)");
    check_field_offset(lv, v1, 0, "aUc_Ip_B.v1");
    check_field_offset(lv, v2, 1, "aUc_Ip_B.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aUc_Ip_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_Ip_B(Test_aUc_Ip_B, "aUc_Ip_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_L_B()
{
  {
    init_simple_test("aUc_L_B");
    aUc_L_B lv;
    check2(sizeof(lv), 10, "sizeof(aUc_L_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_L_B)");
    check_field_offset(lv, v1, 0, "aUc_L_B.v1");
    check_field_offset(lv, v2, 1, "aUc_L_B.v2");
    check_field_offset(lv, v3, 9, "aUc_L_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_L_B(Test_aUc_L_B, "aUc_L_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_S_B()
{
  {
    init_simple_test("aUc_S_B");
    aUc_S_B lv;
    check2(sizeof(lv), 4, "sizeof(aUc_S_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_S_B)");
    check_field_offset(lv, v1, 0, "aUc_S_B.v1");
    check_field_offset(lv, v2, 1, "aUc_S_B.v2");
    check_field_offset(lv, v3, 3, "aUc_S_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_S_B(Test_aUc_S_B, "aUc_S_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Uc_B()
{
  {
    init_simple_test("aUc_Uc_B");
    aUc_Uc_B lv;
    check2(sizeof(lv), 3, "sizeof(aUc_Uc_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Uc_B)");
    check_field_offset(lv, v1, 0, "aUc_Uc_B.v1");
    check_field_offset(lv, v2, 1, "aUc_Uc_B.v2");
    check_field_offset(lv, v3, 2, "aUc_Uc_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_Uc_B(Test_aUc_Uc_B, "aUc_Uc_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Ui_B()
{
  {
    init_simple_test("aUc_Ui_B");
    aUc_Ui_B lv;
    check2(sizeof(lv), 6, "sizeof(aUc_Ui_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Ui_B)");
    check_field_offset(lv, v1, 0, "aUc_Ui_B.v1");
    check_field_offset(lv, v2, 1, "aUc_Ui_B.v2");
    check_field_offset(lv, v3, 5, "aUc_Ui_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_Ui_B(Test_aUc_Ui_B, "aUc_Ui_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Ul_B()
{
  {
    init_simple_test("aUc_Ul_B");
    aUc_Ul_B lv;
    check2(sizeof(lv), 10, "sizeof(aUc_Ul_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Ul_B)");
    check_field_offset(lv, v1, 0, "aUc_Ul_B.v1");
    check_field_offset(lv, v2, 1, "aUc_Ul_B.v2");
    check_field_offset(lv, v3, 9, "aUc_Ul_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_Ul_B(Test_aUc_Ul_B, "aUc_Ul_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Us_B()
{
  {
    init_simple_test("aUc_Us_B");
    aUc_Us_B lv;
    check2(sizeof(lv), 4, "sizeof(aUc_Us_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Us_B)");
    check_field_offset(lv, v1, 0, "aUc_Us_B.v1");
    check_field_offset(lv, v2, 1, "aUc_Us_B.v2");
    check_field_offset(lv, v3, 3, "aUc_Us_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_Us_B(Test_aUc_Us_B, "aUc_Us_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUc_Vp_B()
{
  {
    init_simple_test("aUc_Vp_B");
    aUc_Vp_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_Vp_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_Vp_B)");
    check_field_offset(lv, v1, 0, "aUc_Vp_B.v1");
    check_field_offset(lv, v2, 1, "aUc_Vp_B.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aUc_Vp_B.v3");
  }
}
static Arrange_To_Call_Me vaUc_Vp_B(Test_aUc_Vp_B, "aUc_Vp_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B()
{
  {
    init_simple_test("aUi_B");
    aUi_B lv;
    check2(sizeof(lv), 5, "sizeof(aUi_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B)");
    check_field_offset(lv, v1, 0, "aUi_B.v1");
    check_field_offset(lv, v2, 4, "aUi_B.v2");
  }
}
static Arrange_To_Call_Me vaUi_B(Test_aUi_B, "aUi_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_B()
{
  {
    init_simple_test("aUi_B_B");
    aUi_B_B lv;
    check2(sizeof(lv), 6, "sizeof(aUi_B_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_B)");
    check_field_offset(lv, v1, 0, "aUi_B_B.v1");
    check_field_offset(lv, v2, 4, "aUi_B_B.v2");
    check_field_offset(lv, v3, 5, "aUi_B_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_B_B(Test_aUi_B_B, "aUi_B_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_BFu15i()
{
  {
    init_simple_test("aUi_B_BFu15i");
    static aUi_B_BFu15i lv;
    check2(sizeof(lv), 7, "sizeof(aUi_B_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_BFu15i)");
    check_field_offset(lv, v1, 0, "aUi_B_BFu15i.v1");
    check_field_offset(lv, v2, 4, "aUi_B_BFu15i.v2");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aUi_B_BFu15i");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aUi_B_BFu15i");
  }
}
static Arrange_To_Call_Me vaUi_B_BFu15i(Test_aUi_B_BFu15i, "aUi_B_BFu15i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_BFu15ll()
{
  {
    init_simple_test("aUi_B_BFu15ll");
    static aUi_B_BFu15ll lv;
    check2(sizeof(lv), 7, "sizeof(aUi_B_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUi_B_BFu15ll.v1");
    check_field_offset(lv, v2, 4, "aUi_B_BFu15ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aUi_B_BFu15ll");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aUi_B_BFu15ll");
  }
}
static Arrange_To_Call_Me vaUi_B_BFu15ll(Test_aUi_B_BFu15ll, "aUi_B_BFu15ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_BFu15s()
{
  {
    init_simple_test("aUi_B_BFu15s");
    static aUi_B_BFu15s lv;
    check2(sizeof(lv), 7, "sizeof(aUi_B_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_BFu15s)");
    check_field_offset(lv, v1, 0, "aUi_B_BFu15s.v1");
    check_field_offset(lv, v2, 4, "aUi_B_BFu15s.v2");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aUi_B_BFu15s");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aUi_B_BFu15s");
  }
}
static Arrange_To_Call_Me vaUi_B_BFu15s(Test_aUi_B_BFu15s, "aUi_B_BFu15s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_BFu16i()
{
  {
    init_simple_test("aUi_B_BFu16i");
    static aUi_B_BFu16i lv;
    check2(sizeof(lv), 7, "sizeof(aUi_B_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_BFu16i)");
    check_field_offset(lv, v1, 0, "aUi_B_BFu16i.v1");
    check_field_offset(lv, v2, 4, "aUi_B_BFu16i.v2");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aUi_B_BFu16i");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aUi_B_BFu16i");
  }
}
static Arrange_To_Call_Me vaUi_B_BFu16i(Test_aUi_B_BFu16i, "aUi_B_BFu16i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_BFu16ll()
{
  {
    init_simple_test("aUi_B_BFu16ll");
    static aUi_B_BFu16ll lv;
    check2(sizeof(lv), 7, "sizeof(aUi_B_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUi_B_BFu16ll.v1");
    check_field_offset(lv, v2, 4, "aUi_B_BFu16ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aUi_B_BFu16ll");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aUi_B_BFu16ll");
  }
}
static Arrange_To_Call_Me vaUi_B_BFu16ll(Test_aUi_B_BFu16ll, "aUi_B_BFu16ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_BFu16s()
{
  {
    init_simple_test("aUi_B_BFu16s");
    static aUi_B_BFu16s lv;
    check2(sizeof(lv), 7, "sizeof(aUi_B_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_BFu16s)");
    check_field_offset(lv, v1, 0, "aUi_B_BFu16s.v1");
    check_field_offset(lv, v2, 4, "aUi_B_BFu16s.v2");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aUi_B_BFu16s");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aUi_B_BFu16s");
  }
}
static Arrange_To_Call_Me vaUi_B_BFu16s(Test_aUi_B_BFu16s, "aUi_B_BFu16s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_BFu17i()
{
  {
    init_simple_test("aUi_B_BFu17i");
    static aUi_B_BFu17i lv;
    check2(sizeof(lv), 8, "sizeof(aUi_B_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_BFu17i)");
    check_field_offset(lv, v1, 0, "aUi_B_BFu17i.v1");
    check_field_offset(lv, v2, 4, "aUi_B_BFu17i.v2");
    set_bf_and_test(lv, v3, 5, 0, 17, 1, "aUi_B_BFu17i");
    set_bf_and_test(lv, v3, 5, 0, 17, hide_ull(1LL<<16), "aUi_B_BFu17i");
  }
}
static Arrange_To_Call_Me vaUi_B_BFu17i(Test_aUi_B_BFu17i, "aUi_B_BFu17i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_BFu17ll()
{
  {
    init_simple_test("aUi_B_BFu17ll");
    static aUi_B_BFu17ll lv;
    check2(sizeof(lv), 8, "sizeof(aUi_B_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUi_B_BFu17ll.v1");
    check_field_offset(lv, v2, 4, "aUi_B_BFu17ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 17, 1, "aUi_B_BFu17ll");
    set_bf_and_test(lv, v3, 5, 0, 17, hide_ull(1LL<<16), "aUi_B_BFu17ll");
  }
}
static Arrange_To_Call_Me vaUi_B_BFu17ll(Test_aUi_B_BFu17ll, "aUi_B_BFu17ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_BFu1c()
{
  {
    init_simple_test("aUi_B_BFu1c");
    static aUi_B_BFu1c lv;
    check2(sizeof(lv), 6, "sizeof(aUi_B_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_BFu1c)");
    check_field_offset(lv, v1, 0, "aUi_B_BFu1c.v1");
    check_field_offset(lv, v2, 4, "aUi_B_BFu1c.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aUi_B_BFu1c");
  }
}
static Arrange_To_Call_Me vaUi_B_BFu1c(Test_aUi_B_BFu1c, "aUi_B_BFu1c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_BFu1i()
{
  {
    init_simple_test("aUi_B_BFu1i");
    static aUi_B_BFu1i lv;
    check2(sizeof(lv), 6, "sizeof(aUi_B_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_BFu1i)");
    check_field_offset(lv, v1, 0, "aUi_B_BFu1i.v1");
    check_field_offset(lv, v2, 4, "aUi_B_BFu1i.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aUi_B_BFu1i");
  }
}
static Arrange_To_Call_Me vaUi_B_BFu1i(Test_aUi_B_BFu1i, "aUi_B_BFu1i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_BFu1ll()
{
  {
    init_simple_test("aUi_B_BFu1ll");
    static aUi_B_BFu1ll lv;
    check2(sizeof(lv), 6, "sizeof(aUi_B_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUi_B_BFu1ll.v1");
    check_field_offset(lv, v2, 4, "aUi_B_BFu1ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aUi_B_BFu1ll");
  }
}
static Arrange_To_Call_Me vaUi_B_BFu1ll(Test_aUi_B_BFu1ll, "aUi_B_BFu1ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_BFu1s()
{
  {
    init_simple_test("aUi_B_BFu1s");
    static aUi_B_BFu1s lv;
    check2(sizeof(lv), 6, "sizeof(aUi_B_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_BFu1s)");
    check_field_offset(lv, v1, 0, "aUi_B_BFu1s.v1");
    check_field_offset(lv, v2, 4, "aUi_B_BFu1s.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aUi_B_BFu1s");
  }
}
static Arrange_To_Call_Me vaUi_B_BFu1s(Test_aUi_B_BFu1s, "aUi_B_BFu1s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_BFu31i()
{
  {
    init_simple_test("aUi_B_BFu31i");
    static aUi_B_BFu31i lv;
    check2(sizeof(lv), 9, "sizeof(aUi_B_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_BFu31i)");
    check_field_offset(lv, v1, 0, "aUi_B_BFu31i.v1");
    check_field_offset(lv, v2, 4, "aUi_B_BFu31i.v2");
    set_bf_and_test(lv, v3, 5, 0, 31, 1, "aUi_B_BFu31i");
    set_bf_and_test(lv, v3, 5, 0, 31, hide_ull(1LL<<30), "aUi_B_BFu31i");
  }
}
static Arrange_To_Call_Me vaUi_B_BFu31i(Test_aUi_B_BFu31i, "aUi_B_BFu31i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_BFu31ll()
{
  {
    init_simple_test("aUi_B_BFu31ll");
    static aUi_B_BFu31ll lv;
    check2(sizeof(lv), 9, "sizeof(aUi_B_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUi_B_BFu31ll.v1");
    check_field_offset(lv, v2, 4, "aUi_B_BFu31ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 31, 1, "aUi_B_BFu31ll");
    set_bf_and_test(lv, v3, 5, 0, 31, hide_ull(1LL<<30), "aUi_B_BFu31ll");
  }
}
static Arrange_To_Call_Me vaUi_B_BFu31ll(Test_aUi_B_BFu31ll, "aUi_B_BFu31ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_BFu32i()
{
  {
    init_simple_test("aUi_B_BFu32i");
    static aUi_B_BFu32i lv;
    check2(sizeof(lv), 9, "sizeof(aUi_B_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_BFu32i)");
    check_field_offset(lv, v1, 0, "aUi_B_BFu32i.v1");
    check_field_offset(lv, v2, 4, "aUi_B_BFu32i.v2");
    set_bf_and_test(lv, v3, 5, 0, 32, 1, "aUi_B_BFu32i");
    set_bf_and_test(lv, v3, 5, 0, 32, hide_ull(1LL<<31), "aUi_B_BFu32i");
  }
}
static Arrange_To_Call_Me vaUi_B_BFu32i(Test_aUi_B_BFu32i, "aUi_B_BFu32i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_BFu32ll()
{
  {
    init_simple_test("aUi_B_BFu32ll");
    static aUi_B_BFu32ll lv;
    check2(sizeof(lv), 9, "sizeof(aUi_B_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUi_B_BFu32ll.v1");
    check_field_offset(lv, v2, 4, "aUi_B_BFu32ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 32, 1, "aUi_B_BFu32ll");
    set_bf_and_test(lv, v3, 5, 0, 32, hide_ull(1LL<<31), "aUi_B_BFu32ll");
  }
}
static Arrange_To_Call_Me vaUi_B_BFu32ll(Test_aUi_B_BFu32ll, "aUi_B_BFu32ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_BFu33()
{
  {
    init_simple_test("aUi_B_BFu33");
    static aUi_B_BFu33 lv;
    check2(sizeof(lv), 10, "sizeof(aUi_B_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_BFu33)");
    check_field_offset(lv, v1, 0, "aUi_B_BFu33.v1");
    check_field_offset(lv, v2, 4, "aUi_B_BFu33.v2");
    set_bf_and_test(lv, v3, 5, 0, 33, 1, "aUi_B_BFu33");
    set_bf_and_test(lv, v3, 5, 0, 33, hide_ull(1LL<<32), "aUi_B_BFu33");
  }
}
static Arrange_To_Call_Me vaUi_B_BFu33(Test_aUi_B_BFu33, "aUi_B_BFu33", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_BFu7c()
{
  {
    init_simple_test("aUi_B_BFu7c");
    static aUi_B_BFu7c lv;
    check2(sizeof(lv), 6, "sizeof(aUi_B_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_BFu7c)");
    check_field_offset(lv, v1, 0, "aUi_B_BFu7c.v1");
    check_field_offset(lv, v2, 4, "aUi_B_BFu7c.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aUi_B_BFu7c");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aUi_B_BFu7c");
  }
}
static Arrange_To_Call_Me vaUi_B_BFu7c(Test_aUi_B_BFu7c, "aUi_B_BFu7c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_BFu7i()
{
  {
    init_simple_test("aUi_B_BFu7i");
    static aUi_B_BFu7i lv;
    check2(sizeof(lv), 6, "sizeof(aUi_B_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_BFu7i)");
    check_field_offset(lv, v1, 0, "aUi_B_BFu7i.v1");
    check_field_offset(lv, v2, 4, "aUi_B_BFu7i.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aUi_B_BFu7i");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aUi_B_BFu7i");
  }
}
static Arrange_To_Call_Me vaUi_B_BFu7i(Test_aUi_B_BFu7i, "aUi_B_BFu7i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_BFu7ll()
{
  {
    init_simple_test("aUi_B_BFu7ll");
    static aUi_B_BFu7ll lv;
    check2(sizeof(lv), 6, "sizeof(aUi_B_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUi_B_BFu7ll.v1");
    check_field_offset(lv, v2, 4, "aUi_B_BFu7ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aUi_B_BFu7ll");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aUi_B_BFu7ll");
  }
}
static Arrange_To_Call_Me vaUi_B_BFu7ll(Test_aUi_B_BFu7ll, "aUi_B_BFu7ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_BFu7s()
{
  {
    init_simple_test("aUi_B_BFu7s");
    static aUi_B_BFu7s lv;
    check2(sizeof(lv), 6, "sizeof(aUi_B_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_BFu7s)");
    check_field_offset(lv, v1, 0, "aUi_B_BFu7s.v1");
    check_field_offset(lv, v2, 4, "aUi_B_BFu7s.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aUi_B_BFu7s");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aUi_B_BFu7s");
  }
}
static Arrange_To_Call_Me vaUi_B_BFu7s(Test_aUi_B_BFu7s, "aUi_B_BFu7s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_BFu8c()
{
  {
    init_simple_test("aUi_B_BFu8c");
    static aUi_B_BFu8c lv;
    check2(sizeof(lv), 6, "sizeof(aUi_B_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_BFu8c)");
    check_field_offset(lv, v1, 0, "aUi_B_BFu8c.v1");
    check_field_offset(lv, v2, 4, "aUi_B_BFu8c.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aUi_B_BFu8c");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aUi_B_BFu8c");
  }
}
static Arrange_To_Call_Me vaUi_B_BFu8c(Test_aUi_B_BFu8c, "aUi_B_BFu8c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_BFu8i()
{
  {
    init_simple_test("aUi_B_BFu8i");
    static aUi_B_BFu8i lv;
    check2(sizeof(lv), 6, "sizeof(aUi_B_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_BFu8i)");
    check_field_offset(lv, v1, 0, "aUi_B_BFu8i.v1");
    check_field_offset(lv, v2, 4, "aUi_B_BFu8i.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aUi_B_BFu8i");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aUi_B_BFu8i");
  }
}
static Arrange_To_Call_Me vaUi_B_BFu8i(Test_aUi_B_BFu8i, "aUi_B_BFu8i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_BFu8ll()
{
  {
    init_simple_test("aUi_B_BFu8ll");
    static aUi_B_BFu8ll lv;
    check2(sizeof(lv), 6, "sizeof(aUi_B_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUi_B_BFu8ll.v1");
    check_field_offset(lv, v2, 4, "aUi_B_BFu8ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aUi_B_BFu8ll");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aUi_B_BFu8ll");
  }
}
static Arrange_To_Call_Me vaUi_B_BFu8ll(Test_aUi_B_BFu8ll, "aUi_B_BFu8ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_BFu8s()
{
  {
    init_simple_test("aUi_B_BFu8s");
    static aUi_B_BFu8s lv;
    check2(sizeof(lv), 6, "sizeof(aUi_B_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_BFu8s)");
    check_field_offset(lv, v1, 0, "aUi_B_BFu8s.v1");
    check_field_offset(lv, v2, 4, "aUi_B_BFu8s.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aUi_B_BFu8s");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aUi_B_BFu8s");
  }
}
static Arrange_To_Call_Me vaUi_B_BFu8s(Test_aUi_B_BFu8s, "aUi_B_BFu8s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_BFu9i()
{
  {
    init_simple_test("aUi_B_BFu9i");
    static aUi_B_BFu9i lv;
    check2(sizeof(lv), 7, "sizeof(aUi_B_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_BFu9i)");
    check_field_offset(lv, v1, 0, "aUi_B_BFu9i.v1");
    check_field_offset(lv, v2, 4, "aUi_B_BFu9i.v2");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aUi_B_BFu9i");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aUi_B_BFu9i");
  }
}
static Arrange_To_Call_Me vaUi_B_BFu9i(Test_aUi_B_BFu9i, "aUi_B_BFu9i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_BFu9ll()
{
  {
    init_simple_test("aUi_B_BFu9ll");
    static aUi_B_BFu9ll lv;
    check2(sizeof(lv), 7, "sizeof(aUi_B_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUi_B_BFu9ll.v1");
    check_field_offset(lv, v2, 4, "aUi_B_BFu9ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aUi_B_BFu9ll");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aUi_B_BFu9ll");
  }
}
static Arrange_To_Call_Me vaUi_B_BFu9ll(Test_aUi_B_BFu9ll, "aUi_B_BFu9ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_BFu9s()
{
  {
    init_simple_test("aUi_B_BFu9s");
    static aUi_B_BFu9s lv;
    check2(sizeof(lv), 7, "sizeof(aUi_B_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_BFu9s)");
    check_field_offset(lv, v1, 0, "aUi_B_BFu9s.v1");
    check_field_offset(lv, v2, 4, "aUi_B_BFu9s.v2");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aUi_B_BFu9s");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aUi_B_BFu9s");
  }
}
static Arrange_To_Call_Me vaUi_B_BFu9s(Test_aUi_B_BFu9s, "aUi_B_BFu9s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_C()
{
  {
    init_simple_test("aUi_B_C");
    aUi_B_C lv;
    check2(sizeof(lv), 6, "sizeof(aUi_B_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_C)");
    check_field_offset(lv, v1, 0, "aUi_B_C.v1");
    check_field_offset(lv, v2, 4, "aUi_B_C.v2");
    check_field_offset(lv, v3, 5, "aUi_B_C.v3");
  }
}
static Arrange_To_Call_Me vaUi_B_C(Test_aUi_B_C, "aUi_B_C", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_D()
{
  {
    init_simple_test("aUi_B_D");
    aUi_B_D lv;
    check2(sizeof(lv), 13, "sizeof(aUi_B_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_D)");
    check_field_offset(lv, v1, 0, "aUi_B_D.v1");
    check_field_offset(lv, v2, 4, "aUi_B_D.v2");
    check_field_offset(lv, v3, 5, "aUi_B_D.v3");
  }
}
static Arrange_To_Call_Me vaUi_B_D(Test_aUi_B_D, "aUi_B_D", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_F()
{
  {
    init_simple_test("aUi_B_F");
    aUi_B_F lv;
    check2(sizeof(lv), 9, "sizeof(aUi_B_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_F)");
    check_field_offset(lv, v1, 0, "aUi_B_F.v1");
    check_field_offset(lv, v2, 4, "aUi_B_F.v2");
    check_field_offset(lv, v3, 5, "aUi_B_F.v3");
  }
}
static Arrange_To_Call_Me vaUi_B_F(Test_aUi_B_F, "aUi_B_F", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_I()
{
  {
    init_simple_test("aUi_B_I");
    aUi_B_I lv;
    check2(sizeof(lv), 9, "sizeof(aUi_B_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_I)");
    check_field_offset(lv, v1, 0, "aUi_B_I.v1");
    check_field_offset(lv, v2, 4, "aUi_B_I.v2");
    check_field_offset(lv, v3, 5, "aUi_B_I.v3");
  }
}
static Arrange_To_Call_Me vaUi_B_I(Test_aUi_B_I, "aUi_B_I", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_Ip()
{
  {
    init_simple_test("aUi_B_Ip");
    aUi_B_Ip lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aUi_B_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_Ip)");
    check_field_offset(lv, v1, 0, "aUi_B_Ip.v1");
    check_field_offset(lv, v2, 4, "aUi_B_Ip.v2");
    check_field_offset(lv, v3, 5, "aUi_B_Ip.v3");
  }
}
static Arrange_To_Call_Me vaUi_B_Ip(Test_aUi_B_Ip, "aUi_B_Ip", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_L()
{
  {
    init_simple_test("aUi_B_L");
    aUi_B_L lv;
    check2(sizeof(lv), 13, "sizeof(aUi_B_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_L)");
    check_field_offset(lv, v1, 0, "aUi_B_L.v1");
    check_field_offset(lv, v2, 4, "aUi_B_L.v2");
    check_field_offset(lv, v3, 5, "aUi_B_L.v3");
  }
}
static Arrange_To_Call_Me vaUi_B_L(Test_aUi_B_L, "aUi_B_L", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_S()
{
  {
    init_simple_test("aUi_B_S");
    aUi_B_S lv;
    check2(sizeof(lv), 7, "sizeof(aUi_B_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_S)");
    check_field_offset(lv, v1, 0, "aUi_B_S.v1");
    check_field_offset(lv, v2, 4, "aUi_B_S.v2");
    check_field_offset(lv, v3, 5, "aUi_B_S.v3");
  }
}
static Arrange_To_Call_Me vaUi_B_S(Test_aUi_B_S, "aUi_B_S", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_Uc()
{
  {
    init_simple_test("aUi_B_Uc");
    aUi_B_Uc lv;
    check2(sizeof(lv), 6, "sizeof(aUi_B_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_Uc)");
    check_field_offset(lv, v1, 0, "aUi_B_Uc.v1");
    check_field_offset(lv, v2, 4, "aUi_B_Uc.v2");
    check_field_offset(lv, v3, 5, "aUi_B_Uc.v3");
  }
}
static Arrange_To_Call_Me vaUi_B_Uc(Test_aUi_B_Uc, "aUi_B_Uc", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_Ui()
{
  {
    init_simple_test("aUi_B_Ui");
    aUi_B_Ui lv;
    check2(sizeof(lv), 9, "sizeof(aUi_B_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_Ui)");
    check_field_offset(lv, v1, 0, "aUi_B_Ui.v1");
    check_field_offset(lv, v2, 4, "aUi_B_Ui.v2");
    check_field_offset(lv, v3, 5, "aUi_B_Ui.v3");
  }
}
static Arrange_To_Call_Me vaUi_B_Ui(Test_aUi_B_Ui, "aUi_B_Ui", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_Ul()
{
  {
    init_simple_test("aUi_B_Ul");
    aUi_B_Ul lv;
    check2(sizeof(lv), 13, "sizeof(aUi_B_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_Ul)");
    check_field_offset(lv, v1, 0, "aUi_B_Ul.v1");
    check_field_offset(lv, v2, 4, "aUi_B_Ul.v2");
    check_field_offset(lv, v3, 5, "aUi_B_Ul.v3");
  }
}
static Arrange_To_Call_Me vaUi_B_Ul(Test_aUi_B_Ul, "aUi_B_Ul", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_Us()
{
  {
    init_simple_test("aUi_B_Us");
    aUi_B_Us lv;
    check2(sizeof(lv), 7, "sizeof(aUi_B_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_Us)");
    check_field_offset(lv, v1, 0, "aUi_B_Us.v1");
    check_field_offset(lv, v2, 4, "aUi_B_Us.v2");
    check_field_offset(lv, v3, 5, "aUi_B_Us.v3");
  }
}
static Arrange_To_Call_Me vaUi_B_Us(Test_aUi_B_Us, "aUi_B_Us", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_B_Vp()
{
  {
    init_simple_test("aUi_B_Vp");
    aUi_B_Vp lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aUi_B_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_B_Vp)");
    check_field_offset(lv, v1, 0, "aUi_B_Vp.v1");
    check_field_offset(lv, v2, 4, "aUi_B_Vp.v2");
    check_field_offset(lv, v3, 5, "aUi_B_Vp.v3");
  }
}
static Arrange_To_Call_Me vaUi_B_Vp(Test_aUi_B_Vp, "aUi_B_Vp", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu15i_B()
{
  {
    init_simple_test("aUi_BFu15i_B");
    static aUi_BFu15i_B lv;
    check2(sizeof(lv), 7, "sizeof(aUi_BFu15i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu15i_B)");
    check_field_offset(lv, v1, 0, "aUi_BFu15i_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aUi_BFu15i_B");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aUi_BFu15i_B");
    check_field_offset(lv, v3, 6, "aUi_BFu15i_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu15i_B(Test_aUi_BFu15i_B, "aUi_BFu15i_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu15ll_B()
{
  {
    init_simple_test("aUi_BFu15ll_B");
    static aUi_BFu15ll_B lv;
    check2(sizeof(lv), 7, "sizeof(aUi_BFu15ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu15ll_B)");
    check_field_offset(lv, v1, 0, "aUi_BFu15ll_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aUi_BFu15ll_B");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aUi_BFu15ll_B");
    check_field_offset(lv, v3, 6, "aUi_BFu15ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu15ll_B(Test_aUi_BFu15ll_B, "aUi_BFu15ll_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu15s_B()
{
  {
    init_simple_test("aUi_BFu15s_B");
    static aUi_BFu15s_B lv;
    check2(sizeof(lv), 7, "sizeof(aUi_BFu15s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu15s_B)");
    check_field_offset(lv, v1, 0, "aUi_BFu15s_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "aUi_BFu15s_B");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "aUi_BFu15s_B");
    check_field_offset(lv, v3, 6, "aUi_BFu15s_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu15s_B(Test_aUi_BFu15s_B, "aUi_BFu15s_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu16i_B()
{
  {
    init_simple_test("aUi_BFu16i_B");
    static aUi_BFu16i_B lv;
    check2(sizeof(lv), 7, "sizeof(aUi_BFu16i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu16i_B)");
    check_field_offset(lv, v1, 0, "aUi_BFu16i_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aUi_BFu16i_B");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aUi_BFu16i_B");
    check_field_offset(lv, v3, 6, "aUi_BFu16i_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu16i_B(Test_aUi_BFu16i_B, "aUi_BFu16i_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu16ll_B()
{
  {
    init_simple_test("aUi_BFu16ll_B");
    static aUi_BFu16ll_B lv;
    check2(sizeof(lv), 7, "sizeof(aUi_BFu16ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu16ll_B)");
    check_field_offset(lv, v1, 0, "aUi_BFu16ll_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aUi_BFu16ll_B");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aUi_BFu16ll_B");
    check_field_offset(lv, v3, 6, "aUi_BFu16ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu16ll_B(Test_aUi_BFu16ll_B, "aUi_BFu16ll_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu16s_B()
{
  {
    init_simple_test("aUi_BFu16s_B");
    static aUi_BFu16s_B lv;
    check2(sizeof(lv), 7, "sizeof(aUi_BFu16s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu16s_B)");
    check_field_offset(lv, v1, 0, "aUi_BFu16s_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "aUi_BFu16s_B");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "aUi_BFu16s_B");
    check_field_offset(lv, v3, 6, "aUi_BFu16s_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu16s_B(Test_aUi_BFu16s_B, "aUi_BFu16s_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu17i_B()
{
  {
    init_simple_test("aUi_BFu17i_B");
    static aUi_BFu17i_B lv;
    check2(sizeof(lv), 8, "sizeof(aUi_BFu17i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu17i_B)");
    check_field_offset(lv, v1, 0, "aUi_BFu17i_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aUi_BFu17i_B");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aUi_BFu17i_B");
    check_field_offset(lv, v3, 7, "aUi_BFu17i_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu17i_B(Test_aUi_BFu17i_B, "aUi_BFu17i_B", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu17ll_B()
{
  {
    init_simple_test("aUi_BFu17ll_B");
    static aUi_BFu17ll_B lv;
    check2(sizeof(lv), 8, "sizeof(aUi_BFu17ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu17ll_B)");
    check_field_offset(lv, v1, 0, "aUi_BFu17ll_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "aUi_BFu17ll_B");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "aUi_BFu17ll_B");
    check_field_offset(lv, v3, 7, "aUi_BFu17ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu17ll_B(Test_aUi_BFu17ll_B, "aUi_BFu17ll_B", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu1c_B()
{
  {
    init_simple_test("aUi_BFu1c_B");
    static aUi_BFu1c_B lv;
    check2(sizeof(lv), 6, "sizeof(aUi_BFu1c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu1c_B)");
    check_field_offset(lv, v1, 0, "aUi_BFu1c_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aUi_BFu1c_B");
    check_field_offset(lv, v3, 5, "aUi_BFu1c_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu1c_B(Test_aUi_BFu1c_B, "aUi_BFu1c_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu1i_B()
{
  {
    init_simple_test("aUi_BFu1i_B");
    static aUi_BFu1i_B lv;
    check2(sizeof(lv), 6, "sizeof(aUi_BFu1i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu1i_B)");
    check_field_offset(lv, v1, 0, "aUi_BFu1i_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aUi_BFu1i_B");
    check_field_offset(lv, v3, 5, "aUi_BFu1i_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu1i_B(Test_aUi_BFu1i_B, "aUi_BFu1i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu1ll_B()
{
  {
    init_simple_test("aUi_BFu1ll_B");
    static aUi_BFu1ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aUi_BFu1ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu1ll_B)");
    check_field_offset(lv, v1, 0, "aUi_BFu1ll_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aUi_BFu1ll_B");
    check_field_offset(lv, v3, 5, "aUi_BFu1ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu1ll_B(Test_aUi_BFu1ll_B, "aUi_BFu1ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu1s_B()
{
  {
    init_simple_test("aUi_BFu1s_B");
    static aUi_BFu1s_B lv;
    check2(sizeof(lv), 6, "sizeof(aUi_BFu1s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu1s_B)");
    check_field_offset(lv, v1, 0, "aUi_BFu1s_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "aUi_BFu1s_B");
    check_field_offset(lv, v3, 5, "aUi_BFu1s_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu1s_B(Test_aUi_BFu1s_B, "aUi_BFu1s_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu31i_B()
{
  {
    init_simple_test("aUi_BFu31i_B");
    static aUi_BFu31i_B lv;
    check2(sizeof(lv), 9, "sizeof(aUi_BFu31i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu31i_B)");
    check_field_offset(lv, v1, 0, "aUi_BFu31i_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aUi_BFu31i_B");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aUi_BFu31i_B");
    check_field_offset(lv, v3, 8, "aUi_BFu31i_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu31i_B(Test_aUi_BFu31i_B, "aUi_BFu31i_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu31ll_B()
{
  {
    init_simple_test("aUi_BFu31ll_B");
    static aUi_BFu31ll_B lv;
    check2(sizeof(lv), 9, "sizeof(aUi_BFu31ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu31ll_B)");
    check_field_offset(lv, v1, 0, "aUi_BFu31ll_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "aUi_BFu31ll_B");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "aUi_BFu31ll_B");
    check_field_offset(lv, v3, 8, "aUi_BFu31ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu31ll_B(Test_aUi_BFu31ll_B, "aUi_BFu31ll_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu32i_B()
{
  {
    init_simple_test("aUi_BFu32i_B");
    static aUi_BFu32i_B lv;
    check2(sizeof(lv), 9, "sizeof(aUi_BFu32i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu32i_B)");
    check_field_offset(lv, v1, 0, "aUi_BFu32i_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aUi_BFu32i_B");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aUi_BFu32i_B");
    check_field_offset(lv, v3, 8, "aUi_BFu32i_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu32i_B(Test_aUi_BFu32i_B, "aUi_BFu32i_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu32ll_B()
{
  {
    init_simple_test("aUi_BFu32ll_B");
    static aUi_BFu32ll_B lv;
    check2(sizeof(lv), 9, "sizeof(aUi_BFu32ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu32ll_B)");
    check_field_offset(lv, v1, 0, "aUi_BFu32ll_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "aUi_BFu32ll_B");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "aUi_BFu32ll_B");
    check_field_offset(lv, v3, 8, "aUi_BFu32ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu32ll_B(Test_aUi_BFu32ll_B, "aUi_BFu32ll_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu33_B()
{
  {
    init_simple_test("aUi_BFu33_B");
    static aUi_BFu33_B lv;
    check2(sizeof(lv), 10, "sizeof(aUi_BFu33_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu33_B)");
    check_field_offset(lv, v1, 0, "aUi_BFu33_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "aUi_BFu33_B");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "aUi_BFu33_B");
    check_field_offset(lv, v3, 9, "aUi_BFu33_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu33_B(Test_aUi_BFu33_B, "aUi_BFu33_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu7c_B()
{
  {
    init_simple_test("aUi_BFu7c_B");
    static aUi_BFu7c_B lv;
    check2(sizeof(lv), 6, "sizeof(aUi_BFu7c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu7c_B)");
    check_field_offset(lv, v1, 0, "aUi_BFu7c_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aUi_BFu7c_B");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aUi_BFu7c_B");
    check_field_offset(lv, v3, 5, "aUi_BFu7c_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu7c_B(Test_aUi_BFu7c_B, "aUi_BFu7c_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu7i_B()
{
  {
    init_simple_test("aUi_BFu7i_B");
    static aUi_BFu7i_B lv;
    check2(sizeof(lv), 6, "sizeof(aUi_BFu7i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu7i_B)");
    check_field_offset(lv, v1, 0, "aUi_BFu7i_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aUi_BFu7i_B");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aUi_BFu7i_B");
    check_field_offset(lv, v3, 5, "aUi_BFu7i_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu7i_B(Test_aUi_BFu7i_B, "aUi_BFu7i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu7ll_B()
{
  {
    init_simple_test("aUi_BFu7ll_B");
    static aUi_BFu7ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aUi_BFu7ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu7ll_B)");
    check_field_offset(lv, v1, 0, "aUi_BFu7ll_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aUi_BFu7ll_B");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aUi_BFu7ll_B");
    check_field_offset(lv, v3, 5, "aUi_BFu7ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu7ll_B(Test_aUi_BFu7ll_B, "aUi_BFu7ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu7s_B()
{
  {
    init_simple_test("aUi_BFu7s_B");
    static aUi_BFu7s_B lv;
    check2(sizeof(lv), 6, "sizeof(aUi_BFu7s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu7s_B)");
    check_field_offset(lv, v1, 0, "aUi_BFu7s_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "aUi_BFu7s_B");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "aUi_BFu7s_B");
    check_field_offset(lv, v3, 5, "aUi_BFu7s_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu7s_B(Test_aUi_BFu7s_B, "aUi_BFu7s_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu8c_B()
{
  {
    init_simple_test("aUi_BFu8c_B");
    static aUi_BFu8c_B lv;
    check2(sizeof(lv), 6, "sizeof(aUi_BFu8c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu8c_B)");
    check_field_offset(lv, v1, 0, "aUi_BFu8c_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aUi_BFu8c_B");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aUi_BFu8c_B");
    check_field_offset(lv, v3, 5, "aUi_BFu8c_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu8c_B(Test_aUi_BFu8c_B, "aUi_BFu8c_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu8i_B()
{
  {
    init_simple_test("aUi_BFu8i_B");
    static aUi_BFu8i_B lv;
    check2(sizeof(lv), 6, "sizeof(aUi_BFu8i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu8i_B)");
    check_field_offset(lv, v1, 0, "aUi_BFu8i_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aUi_BFu8i_B");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aUi_BFu8i_B");
    check_field_offset(lv, v3, 5, "aUi_BFu8i_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu8i_B(Test_aUi_BFu8i_B, "aUi_BFu8i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu8ll_B()
{
  {
    init_simple_test("aUi_BFu8ll_B");
    static aUi_BFu8ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aUi_BFu8ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu8ll_B)");
    check_field_offset(lv, v1, 0, "aUi_BFu8ll_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aUi_BFu8ll_B");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aUi_BFu8ll_B");
    check_field_offset(lv, v3, 5, "aUi_BFu8ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu8ll_B(Test_aUi_BFu8ll_B, "aUi_BFu8ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu8s_B()
{
  {
    init_simple_test("aUi_BFu8s_B");
    static aUi_BFu8s_B lv;
    check2(sizeof(lv), 6, "sizeof(aUi_BFu8s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu8s_B)");
    check_field_offset(lv, v1, 0, "aUi_BFu8s_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "aUi_BFu8s_B");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "aUi_BFu8s_B");
    check_field_offset(lv, v3, 5, "aUi_BFu8s_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu8s_B(Test_aUi_BFu8s_B, "aUi_BFu8s_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu9i_B()
{
  {
    init_simple_test("aUi_BFu9i_B");
    static aUi_BFu9i_B lv;
    check2(sizeof(lv), 7, "sizeof(aUi_BFu9i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu9i_B)");
    check_field_offset(lv, v1, 0, "aUi_BFu9i_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aUi_BFu9i_B");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aUi_BFu9i_B");
    check_field_offset(lv, v3, 6, "aUi_BFu9i_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu9i_B(Test_aUi_BFu9i_B, "aUi_BFu9i_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu9ll_B()
{
  {
    init_simple_test("aUi_BFu9ll_B");
    static aUi_BFu9ll_B lv;
    check2(sizeof(lv), 7, "sizeof(aUi_BFu9ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu9ll_B)");
    check_field_offset(lv, v1, 0, "aUi_BFu9ll_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aUi_BFu9ll_B");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aUi_BFu9ll_B");
    check_field_offset(lv, v3, 6, "aUi_BFu9ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu9ll_B(Test_aUi_BFu9ll_B, "aUi_BFu9ll_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_BFu9s_B()
{
  {
    init_simple_test("aUi_BFu9s_B");
    static aUi_BFu9s_B lv;
    check2(sizeof(lv), 7, "sizeof(aUi_BFu9s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_BFu9s_B)");
    check_field_offset(lv, v1, 0, "aUi_BFu9s_B.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "aUi_BFu9s_B");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "aUi_BFu9s_B");
    check_field_offset(lv, v3, 6, "aUi_BFu9s_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_BFu9s_B(Test_aUi_BFu9s_B, "aUi_BFu9s_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_C_B()
{
  {
    init_simple_test("aUi_C_B");
    aUi_C_B lv;
    check2(sizeof(lv), 6, "sizeof(aUi_C_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_C_B)");
    check_field_offset(lv, v1, 0, "aUi_C_B.v1");
    check_field_offset(lv, v2, 4, "aUi_C_B.v2");
    check_field_offset(lv, v3, 5, "aUi_C_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_C_B(Test_aUi_C_B, "aUi_C_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_D_B()
{
  {
    init_simple_test("aUi_D_B");
    aUi_D_B lv;
    check2(sizeof(lv), 13, "sizeof(aUi_D_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_D_B)");
    check_field_offset(lv, v1, 0, "aUi_D_B.v1");
    check_field_offset(lv, v2, 4, "aUi_D_B.v2");
    check_field_offset(lv, v3, 12, "aUi_D_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_D_B(Test_aUi_D_B, "aUi_D_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_F_B()
{
  {
    init_simple_test("aUi_F_B");
    aUi_F_B lv;
    check2(sizeof(lv), 9, "sizeof(aUi_F_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_F_B)");
    check_field_offset(lv, v1, 0, "aUi_F_B.v1");
    check_field_offset(lv, v2, 4, "aUi_F_B.v2");
    check_field_offset(lv, v3, 8, "aUi_F_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_F_B(Test_aUi_F_B, "aUi_F_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_I_B()
{
  {
    init_simple_test("aUi_I_B");
    aUi_I_B lv;
    check2(sizeof(lv), 9, "sizeof(aUi_I_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_I_B)");
    check_field_offset(lv, v1, 0, "aUi_I_B.v1");
    check_field_offset(lv, v2, 4, "aUi_I_B.v2");
    check_field_offset(lv, v3, 8, "aUi_I_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_I_B(Test_aUi_I_B, "aUi_I_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Ip_B()
{
  {
    init_simple_test("aUi_Ip_B");
    aUi_Ip_B lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aUi_Ip_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Ip_B)");
    check_field_offset(lv, v1, 0, "aUi_Ip_B.v1");
    check_field_offset(lv, v2, 4, "aUi_Ip_B.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "aUi_Ip_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_Ip_B(Test_aUi_Ip_B, "aUi_Ip_B", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_L_B()
{
  {
    init_simple_test("aUi_L_B");
    aUi_L_B lv;
    check2(sizeof(lv), 13, "sizeof(aUi_L_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_L_B)");
    check_field_offset(lv, v1, 0, "aUi_L_B.v1");
    check_field_offset(lv, v2, 4, "aUi_L_B.v2");
    check_field_offset(lv, v3, 12, "aUi_L_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_L_B(Test_aUi_L_B, "aUi_L_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_S_B()
{
  {
    init_simple_test("aUi_S_B");
    aUi_S_B lv;
    check2(sizeof(lv), 7, "sizeof(aUi_S_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_S_B)");
    check_field_offset(lv, v1, 0, "aUi_S_B.v1");
    check_field_offset(lv, v2, 4, "aUi_S_B.v2");
    check_field_offset(lv, v3, 6, "aUi_S_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_S_B(Test_aUi_S_B, "aUi_S_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Uc_B()
{
  {
    init_simple_test("aUi_Uc_B");
    aUi_Uc_B lv;
    check2(sizeof(lv), 6, "sizeof(aUi_Uc_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Uc_B)");
    check_field_offset(lv, v1, 0, "aUi_Uc_B.v1");
    check_field_offset(lv, v2, 4, "aUi_Uc_B.v2");
    check_field_offset(lv, v3, 5, "aUi_Uc_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_Uc_B(Test_aUi_Uc_B, "aUi_Uc_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Ui_B()
{
  {
    init_simple_test("aUi_Ui_B");
    aUi_Ui_B lv;
    check2(sizeof(lv), 9, "sizeof(aUi_Ui_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Ui_B)");
    check_field_offset(lv, v1, 0, "aUi_Ui_B.v1");
    check_field_offset(lv, v2, 4, "aUi_Ui_B.v2");
    check_field_offset(lv, v3, 8, "aUi_Ui_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_Ui_B(Test_aUi_Ui_B, "aUi_Ui_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Ul_B()
{
  {
    init_simple_test("aUi_Ul_B");
    aUi_Ul_B lv;
    check2(sizeof(lv), 13, "sizeof(aUi_Ul_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Ul_B)");
    check_field_offset(lv, v1, 0, "aUi_Ul_B.v1");
    check_field_offset(lv, v2, 4, "aUi_Ul_B.v2");
    check_field_offset(lv, v3, 12, "aUi_Ul_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_Ul_B(Test_aUi_Ul_B, "aUi_Ul_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Us_B()
{
  {
    init_simple_test("aUi_Us_B");
    aUi_Us_B lv;
    check2(sizeof(lv), 7, "sizeof(aUi_Us_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Us_B)");
    check_field_offset(lv, v1, 0, "aUi_Us_B.v1");
    check_field_offset(lv, v2, 4, "aUi_Us_B.v2");
    check_field_offset(lv, v3, 6, "aUi_Us_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_Us_B(Test_aUi_Us_B, "aUi_Us_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUi_Vp_B()
{
  {
    init_simple_test("aUi_Vp_B");
    aUi_Vp_B lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aUi_Vp_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUi_Vp_B)");
    check_field_offset(lv, v1, 0, "aUi_Vp_B.v1");
    check_field_offset(lv, v2, 4, "aUi_Vp_B.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "aUi_Vp_B.v3");
  }
}
static Arrange_To_Call_Me vaUi_Vp_B(Test_aUi_Vp_B, "aUi_Vp_B", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B()
{
  {
    init_simple_test("aUl_B");
    aUl_B lv;
    check2(sizeof(lv), 9, "sizeof(aUl_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B)");
    check_field_offset(lv, v1, 0, "aUl_B.v1");
    check_field_offset(lv, v2, 8, "aUl_B.v2");
  }
}
static Arrange_To_Call_Me vaUl_B(Test_aUl_B, "aUl_B", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_B()
{
  {
    init_simple_test("aUl_B_B");
    aUl_B_B lv;
    check2(sizeof(lv), 10, "sizeof(aUl_B_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_B)");
    check_field_offset(lv, v1, 0, "aUl_B_B.v1");
    check_field_offset(lv, v2, 8, "aUl_B_B.v2");
    check_field_offset(lv, v3, 9, "aUl_B_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_B_B(Test_aUl_B_B, "aUl_B_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_BFu15i()
{
  {
    init_simple_test("aUl_B_BFu15i");
    static aUl_B_BFu15i lv;
    check2(sizeof(lv), 11, "sizeof(aUl_B_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_BFu15i)");
    check_field_offset(lv, v1, 0, "aUl_B_BFu15i.v1");
    check_field_offset(lv, v2, 8, "aUl_B_BFu15i.v2");
    set_bf_and_test(lv, v3, 9, 0, 15, 1, "aUl_B_BFu15i");
    set_bf_and_test(lv, v3, 9, 0, 15, hide_ull(1LL<<14), "aUl_B_BFu15i");
  }
}
static Arrange_To_Call_Me vaUl_B_BFu15i(Test_aUl_B_BFu15i, "aUl_B_BFu15i", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_BFu15ll()
{
  {
    init_simple_test("aUl_B_BFu15ll");
    static aUl_B_BFu15ll lv;
    check2(sizeof(lv), 11, "sizeof(aUl_B_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUl_B_BFu15ll.v1");
    check_field_offset(lv, v2, 8, "aUl_B_BFu15ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 15, 1, "aUl_B_BFu15ll");
    set_bf_and_test(lv, v3, 9, 0, 15, hide_ull(1LL<<14), "aUl_B_BFu15ll");
  }
}
static Arrange_To_Call_Me vaUl_B_BFu15ll(Test_aUl_B_BFu15ll, "aUl_B_BFu15ll", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_BFu15s()
{
  {
    init_simple_test("aUl_B_BFu15s");
    static aUl_B_BFu15s lv;
    check2(sizeof(lv), 11, "sizeof(aUl_B_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_BFu15s)");
    check_field_offset(lv, v1, 0, "aUl_B_BFu15s.v1");
    check_field_offset(lv, v2, 8, "aUl_B_BFu15s.v2");
    set_bf_and_test(lv, v3, 9, 0, 15, 1, "aUl_B_BFu15s");
    set_bf_and_test(lv, v3, 9, 0, 15, hide_ull(1LL<<14), "aUl_B_BFu15s");
  }
}
static Arrange_To_Call_Me vaUl_B_BFu15s(Test_aUl_B_BFu15s, "aUl_B_BFu15s", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_BFu16i()
{
  {
    init_simple_test("aUl_B_BFu16i");
    static aUl_B_BFu16i lv;
    check2(sizeof(lv), 11, "sizeof(aUl_B_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_BFu16i)");
    check_field_offset(lv, v1, 0, "aUl_B_BFu16i.v1");
    check_field_offset(lv, v2, 8, "aUl_B_BFu16i.v2");
    set_bf_and_test(lv, v3, 9, 0, 16, 1, "aUl_B_BFu16i");
    set_bf_and_test(lv, v3, 9, 0, 16, hide_ull(1LL<<15), "aUl_B_BFu16i");
  }
}
static Arrange_To_Call_Me vaUl_B_BFu16i(Test_aUl_B_BFu16i, "aUl_B_BFu16i", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_BFu16ll()
{
  {
    init_simple_test("aUl_B_BFu16ll");
    static aUl_B_BFu16ll lv;
    check2(sizeof(lv), 11, "sizeof(aUl_B_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUl_B_BFu16ll.v1");
    check_field_offset(lv, v2, 8, "aUl_B_BFu16ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 16, 1, "aUl_B_BFu16ll");
    set_bf_and_test(lv, v3, 9, 0, 16, hide_ull(1LL<<15), "aUl_B_BFu16ll");
  }
}
static Arrange_To_Call_Me vaUl_B_BFu16ll(Test_aUl_B_BFu16ll, "aUl_B_BFu16ll", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_BFu16s()
{
  {
    init_simple_test("aUl_B_BFu16s");
    static aUl_B_BFu16s lv;
    check2(sizeof(lv), 11, "sizeof(aUl_B_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_BFu16s)");
    check_field_offset(lv, v1, 0, "aUl_B_BFu16s.v1");
    check_field_offset(lv, v2, 8, "aUl_B_BFu16s.v2");
    set_bf_and_test(lv, v3, 9, 0, 16, 1, "aUl_B_BFu16s");
    set_bf_and_test(lv, v3, 9, 0, 16, hide_ull(1LL<<15), "aUl_B_BFu16s");
  }
}
static Arrange_To_Call_Me vaUl_B_BFu16s(Test_aUl_B_BFu16s, "aUl_B_BFu16s", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_BFu17i()
{
  {
    init_simple_test("aUl_B_BFu17i");
    static aUl_B_BFu17i lv;
    check2(sizeof(lv), 12, "sizeof(aUl_B_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_BFu17i)");
    check_field_offset(lv, v1, 0, "aUl_B_BFu17i.v1");
    check_field_offset(lv, v2, 8, "aUl_B_BFu17i.v2");
    set_bf_and_test(lv, v3, 9, 0, 17, 1, "aUl_B_BFu17i");
    set_bf_and_test(lv, v3, 9, 0, 17, hide_ull(1LL<<16), "aUl_B_BFu17i");
  }
}
static Arrange_To_Call_Me vaUl_B_BFu17i(Test_aUl_B_BFu17i, "aUl_B_BFu17i", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_BFu17ll()
{
  {
    init_simple_test("aUl_B_BFu17ll");
    static aUl_B_BFu17ll lv;
    check2(sizeof(lv), 12, "sizeof(aUl_B_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUl_B_BFu17ll.v1");
    check_field_offset(lv, v2, 8, "aUl_B_BFu17ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 17, 1, "aUl_B_BFu17ll");
    set_bf_and_test(lv, v3, 9, 0, 17, hide_ull(1LL<<16), "aUl_B_BFu17ll");
  }
}
static Arrange_To_Call_Me vaUl_B_BFu17ll(Test_aUl_B_BFu17ll, "aUl_B_BFu17ll", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_BFu1c()
{
  {
    init_simple_test("aUl_B_BFu1c");
    static aUl_B_BFu1c lv;
    check2(sizeof(lv), 10, "sizeof(aUl_B_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_BFu1c)");
    check_field_offset(lv, v1, 0, "aUl_B_BFu1c.v1");
    check_field_offset(lv, v2, 8, "aUl_B_BFu1c.v2");
    set_bf_and_test(lv, v3, 9, 0, 1, 1, "aUl_B_BFu1c");
  }
}
static Arrange_To_Call_Me vaUl_B_BFu1c(Test_aUl_B_BFu1c, "aUl_B_BFu1c", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_BFu1i()
{
  {
    init_simple_test("aUl_B_BFu1i");
    static aUl_B_BFu1i lv;
    check2(sizeof(lv), 10, "sizeof(aUl_B_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_BFu1i)");
    check_field_offset(lv, v1, 0, "aUl_B_BFu1i.v1");
    check_field_offset(lv, v2, 8, "aUl_B_BFu1i.v2");
    set_bf_and_test(lv, v3, 9, 0, 1, 1, "aUl_B_BFu1i");
  }
}
static Arrange_To_Call_Me vaUl_B_BFu1i(Test_aUl_B_BFu1i, "aUl_B_BFu1i", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_BFu1ll()
{
  {
    init_simple_test("aUl_B_BFu1ll");
    static aUl_B_BFu1ll lv;
    check2(sizeof(lv), 10, "sizeof(aUl_B_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUl_B_BFu1ll.v1");
    check_field_offset(lv, v2, 8, "aUl_B_BFu1ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 1, 1, "aUl_B_BFu1ll");
  }
}
static Arrange_To_Call_Me vaUl_B_BFu1ll(Test_aUl_B_BFu1ll, "aUl_B_BFu1ll", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_BFu1s()
{
  {
    init_simple_test("aUl_B_BFu1s");
    static aUl_B_BFu1s lv;
    check2(sizeof(lv), 10, "sizeof(aUl_B_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_BFu1s)");
    check_field_offset(lv, v1, 0, "aUl_B_BFu1s.v1");
    check_field_offset(lv, v2, 8, "aUl_B_BFu1s.v2");
    set_bf_and_test(lv, v3, 9, 0, 1, 1, "aUl_B_BFu1s");
  }
}
static Arrange_To_Call_Me vaUl_B_BFu1s(Test_aUl_B_BFu1s, "aUl_B_BFu1s", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_BFu31i()
{
  {
    init_simple_test("aUl_B_BFu31i");
    static aUl_B_BFu31i lv;
    check2(sizeof(lv), 13, "sizeof(aUl_B_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_BFu31i)");
    check_field_offset(lv, v1, 0, "aUl_B_BFu31i.v1");
    check_field_offset(lv, v2, 8, "aUl_B_BFu31i.v2");
    set_bf_and_test(lv, v3, 9, 0, 31, 1, "aUl_B_BFu31i");
    set_bf_and_test(lv, v3, 9, 0, 31, hide_ull(1LL<<30), "aUl_B_BFu31i");
  }
}
static Arrange_To_Call_Me vaUl_B_BFu31i(Test_aUl_B_BFu31i, "aUl_B_BFu31i", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_BFu31ll()
{
  {
    init_simple_test("aUl_B_BFu31ll");
    static aUl_B_BFu31ll lv;
    check2(sizeof(lv), 13, "sizeof(aUl_B_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUl_B_BFu31ll.v1");
    check_field_offset(lv, v2, 8, "aUl_B_BFu31ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 31, 1, "aUl_B_BFu31ll");
    set_bf_and_test(lv, v3, 9, 0, 31, hide_ull(1LL<<30), "aUl_B_BFu31ll");
  }
}
static Arrange_To_Call_Me vaUl_B_BFu31ll(Test_aUl_B_BFu31ll, "aUl_B_BFu31ll", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_BFu32i()
{
  {
    init_simple_test("aUl_B_BFu32i");
    static aUl_B_BFu32i lv;
    check2(sizeof(lv), 13, "sizeof(aUl_B_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_BFu32i)");
    check_field_offset(lv, v1, 0, "aUl_B_BFu32i.v1");
    check_field_offset(lv, v2, 8, "aUl_B_BFu32i.v2");
    set_bf_and_test(lv, v3, 9, 0, 32, 1, "aUl_B_BFu32i");
    set_bf_and_test(lv, v3, 9, 0, 32, hide_ull(1LL<<31), "aUl_B_BFu32i");
  }
}
static Arrange_To_Call_Me vaUl_B_BFu32i(Test_aUl_B_BFu32i, "aUl_B_BFu32i", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_BFu32ll()
{
  {
    init_simple_test("aUl_B_BFu32ll");
    static aUl_B_BFu32ll lv;
    check2(sizeof(lv), 13, "sizeof(aUl_B_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUl_B_BFu32ll.v1");
    check_field_offset(lv, v2, 8, "aUl_B_BFu32ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 32, 1, "aUl_B_BFu32ll");
    set_bf_and_test(lv, v3, 9, 0, 32, hide_ull(1LL<<31), "aUl_B_BFu32ll");
  }
}
static Arrange_To_Call_Me vaUl_B_BFu32ll(Test_aUl_B_BFu32ll, "aUl_B_BFu32ll", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_BFu33()
{
  {
    init_simple_test("aUl_B_BFu33");
    static aUl_B_BFu33 lv;
    check2(sizeof(lv), 14, "sizeof(aUl_B_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_BFu33)");
    check_field_offset(lv, v1, 0, "aUl_B_BFu33.v1");
    check_field_offset(lv, v2, 8, "aUl_B_BFu33.v2");
    set_bf_and_test(lv, v3, 9, 0, 33, 1, "aUl_B_BFu33");
    set_bf_and_test(lv, v3, 9, 0, 33, hide_ull(1LL<<32), "aUl_B_BFu33");
  }
}
static Arrange_To_Call_Me vaUl_B_BFu33(Test_aUl_B_BFu33, "aUl_B_BFu33", 14);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_BFu7c()
{
  {
    init_simple_test("aUl_B_BFu7c");
    static aUl_B_BFu7c lv;
    check2(sizeof(lv), 10, "sizeof(aUl_B_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_BFu7c)");
    check_field_offset(lv, v1, 0, "aUl_B_BFu7c.v1");
    check_field_offset(lv, v2, 8, "aUl_B_BFu7c.v2");
    set_bf_and_test(lv, v3, 9, 0, 7, 1, "aUl_B_BFu7c");
    set_bf_and_test(lv, v3, 9, 0, 7, hide_ull(1LL<<6), "aUl_B_BFu7c");
  }
}
static Arrange_To_Call_Me vaUl_B_BFu7c(Test_aUl_B_BFu7c, "aUl_B_BFu7c", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_BFu7i()
{
  {
    init_simple_test("aUl_B_BFu7i");
    static aUl_B_BFu7i lv;
    check2(sizeof(lv), 10, "sizeof(aUl_B_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_BFu7i)");
    check_field_offset(lv, v1, 0, "aUl_B_BFu7i.v1");
    check_field_offset(lv, v2, 8, "aUl_B_BFu7i.v2");
    set_bf_and_test(lv, v3, 9, 0, 7, 1, "aUl_B_BFu7i");
    set_bf_and_test(lv, v3, 9, 0, 7, hide_ull(1LL<<6), "aUl_B_BFu7i");
  }
}
static Arrange_To_Call_Me vaUl_B_BFu7i(Test_aUl_B_BFu7i, "aUl_B_BFu7i", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_BFu7ll()
{
  {
    init_simple_test("aUl_B_BFu7ll");
    static aUl_B_BFu7ll lv;
    check2(sizeof(lv), 10, "sizeof(aUl_B_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUl_B_BFu7ll.v1");
    check_field_offset(lv, v2, 8, "aUl_B_BFu7ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 7, 1, "aUl_B_BFu7ll");
    set_bf_and_test(lv, v3, 9, 0, 7, hide_ull(1LL<<6), "aUl_B_BFu7ll");
  }
}
static Arrange_To_Call_Me vaUl_B_BFu7ll(Test_aUl_B_BFu7ll, "aUl_B_BFu7ll", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_BFu7s()
{
  {
    init_simple_test("aUl_B_BFu7s");
    static aUl_B_BFu7s lv;
    check2(sizeof(lv), 10, "sizeof(aUl_B_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_BFu7s)");
    check_field_offset(lv, v1, 0, "aUl_B_BFu7s.v1");
    check_field_offset(lv, v2, 8, "aUl_B_BFu7s.v2");
    set_bf_and_test(lv, v3, 9, 0, 7, 1, "aUl_B_BFu7s");
    set_bf_and_test(lv, v3, 9, 0, 7, hide_ull(1LL<<6), "aUl_B_BFu7s");
  }
}
static Arrange_To_Call_Me vaUl_B_BFu7s(Test_aUl_B_BFu7s, "aUl_B_BFu7s", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_BFu8c()
{
  {
    init_simple_test("aUl_B_BFu8c");
    static aUl_B_BFu8c lv;
    check2(sizeof(lv), 10, "sizeof(aUl_B_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_BFu8c)");
    check_field_offset(lv, v1, 0, "aUl_B_BFu8c.v1");
    check_field_offset(lv, v2, 8, "aUl_B_BFu8c.v2");
    set_bf_and_test(lv, v3, 9, 0, 8, 1, "aUl_B_BFu8c");
    set_bf_and_test(lv, v3, 9, 0, 8, hide_ull(1LL<<7), "aUl_B_BFu8c");
  }
}
static Arrange_To_Call_Me vaUl_B_BFu8c(Test_aUl_B_BFu8c, "aUl_B_BFu8c", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_BFu8i()
{
  {
    init_simple_test("aUl_B_BFu8i");
    static aUl_B_BFu8i lv;
    check2(sizeof(lv), 10, "sizeof(aUl_B_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_BFu8i)");
    check_field_offset(lv, v1, 0, "aUl_B_BFu8i.v1");
    check_field_offset(lv, v2, 8, "aUl_B_BFu8i.v2");
    set_bf_and_test(lv, v3, 9, 0, 8, 1, "aUl_B_BFu8i");
    set_bf_and_test(lv, v3, 9, 0, 8, hide_ull(1LL<<7), "aUl_B_BFu8i");
  }
}
static Arrange_To_Call_Me vaUl_B_BFu8i(Test_aUl_B_BFu8i, "aUl_B_BFu8i", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_BFu8ll()
{
  {
    init_simple_test("aUl_B_BFu8ll");
    static aUl_B_BFu8ll lv;
    check2(sizeof(lv), 10, "sizeof(aUl_B_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUl_B_BFu8ll.v1");
    check_field_offset(lv, v2, 8, "aUl_B_BFu8ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 8, 1, "aUl_B_BFu8ll");
    set_bf_and_test(lv, v3, 9, 0, 8, hide_ull(1LL<<7), "aUl_B_BFu8ll");
  }
}
static Arrange_To_Call_Me vaUl_B_BFu8ll(Test_aUl_B_BFu8ll, "aUl_B_BFu8ll", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_BFu8s()
{
  {
    init_simple_test("aUl_B_BFu8s");
    static aUl_B_BFu8s lv;
    check2(sizeof(lv), 10, "sizeof(aUl_B_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_BFu8s)");
    check_field_offset(lv, v1, 0, "aUl_B_BFu8s.v1");
    check_field_offset(lv, v2, 8, "aUl_B_BFu8s.v2");
    set_bf_and_test(lv, v3, 9, 0, 8, 1, "aUl_B_BFu8s");
    set_bf_and_test(lv, v3, 9, 0, 8, hide_ull(1LL<<7), "aUl_B_BFu8s");
  }
}
static Arrange_To_Call_Me vaUl_B_BFu8s(Test_aUl_B_BFu8s, "aUl_B_BFu8s", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_BFu9i()
{
  {
    init_simple_test("aUl_B_BFu9i");
    static aUl_B_BFu9i lv;
    check2(sizeof(lv), 11, "sizeof(aUl_B_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_BFu9i)");
    check_field_offset(lv, v1, 0, "aUl_B_BFu9i.v1");
    check_field_offset(lv, v2, 8, "aUl_B_BFu9i.v2");
    set_bf_and_test(lv, v3, 9, 0, 9, 1, "aUl_B_BFu9i");
    set_bf_and_test(lv, v3, 9, 0, 9, hide_ull(1LL<<8), "aUl_B_BFu9i");
  }
}
static Arrange_To_Call_Me vaUl_B_BFu9i(Test_aUl_B_BFu9i, "aUl_B_BFu9i", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_BFu9ll()
{
  {
    init_simple_test("aUl_B_BFu9ll");
    static aUl_B_BFu9ll lv;
    check2(sizeof(lv), 11, "sizeof(aUl_B_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUl_B_BFu9ll.v1");
    check_field_offset(lv, v2, 8, "aUl_B_BFu9ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 9, 1, "aUl_B_BFu9ll");
    set_bf_and_test(lv, v3, 9, 0, 9, hide_ull(1LL<<8), "aUl_B_BFu9ll");
  }
}
static Arrange_To_Call_Me vaUl_B_BFu9ll(Test_aUl_B_BFu9ll, "aUl_B_BFu9ll", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_BFu9s()
{
  {
    init_simple_test("aUl_B_BFu9s");
    static aUl_B_BFu9s lv;
    check2(sizeof(lv), 11, "sizeof(aUl_B_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_BFu9s)");
    check_field_offset(lv, v1, 0, "aUl_B_BFu9s.v1");
    check_field_offset(lv, v2, 8, "aUl_B_BFu9s.v2");
    set_bf_and_test(lv, v3, 9, 0, 9, 1, "aUl_B_BFu9s");
    set_bf_and_test(lv, v3, 9, 0, 9, hide_ull(1LL<<8), "aUl_B_BFu9s");
  }
}
static Arrange_To_Call_Me vaUl_B_BFu9s(Test_aUl_B_BFu9s, "aUl_B_BFu9s", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_C()
{
  {
    init_simple_test("aUl_B_C");
    aUl_B_C lv;
    check2(sizeof(lv), 10, "sizeof(aUl_B_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_C)");
    check_field_offset(lv, v1, 0, "aUl_B_C.v1");
    check_field_offset(lv, v2, 8, "aUl_B_C.v2");
    check_field_offset(lv, v3, 9, "aUl_B_C.v3");
  }
}
static Arrange_To_Call_Me vaUl_B_C(Test_aUl_B_C, "aUl_B_C", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_D()
{
  {
    init_simple_test("aUl_B_D");
    aUl_B_D lv;
    check2(sizeof(lv), 17, "sizeof(aUl_B_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_D)");
    check_field_offset(lv, v1, 0, "aUl_B_D.v1");
    check_field_offset(lv, v2, 8, "aUl_B_D.v2");
    check_field_offset(lv, v3, 9, "aUl_B_D.v3");
  }
}
static Arrange_To_Call_Me vaUl_B_D(Test_aUl_B_D, "aUl_B_D", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_F()
{
  {
    init_simple_test("aUl_B_F");
    aUl_B_F lv;
    check2(sizeof(lv), 13, "sizeof(aUl_B_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_F)");
    check_field_offset(lv, v1, 0, "aUl_B_F.v1");
    check_field_offset(lv, v2, 8, "aUl_B_F.v2");
    check_field_offset(lv, v3, 9, "aUl_B_F.v3");
  }
}
static Arrange_To_Call_Me vaUl_B_F(Test_aUl_B_F, "aUl_B_F", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_I()
{
  {
    init_simple_test("aUl_B_I");
    aUl_B_I lv;
    check2(sizeof(lv), 13, "sizeof(aUl_B_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_I)");
    check_field_offset(lv, v1, 0, "aUl_B_I.v1");
    check_field_offset(lv, v2, 8, "aUl_B_I.v2");
    check_field_offset(lv, v3, 9, "aUl_B_I.v3");
  }
}
static Arrange_To_Call_Me vaUl_B_I(Test_aUl_B_I, "aUl_B_I", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_Ip()
{
  {
    init_simple_test("aUl_B_Ip");
    aUl_B_Ip lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aUl_B_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_Ip)");
    check_field_offset(lv, v1, 0, "aUl_B_Ip.v1");
    check_field_offset(lv, v2, 8, "aUl_B_Ip.v2");
    check_field_offset(lv, v3, 9, "aUl_B_Ip.v3");
  }
}
static Arrange_To_Call_Me vaUl_B_Ip(Test_aUl_B_Ip, "aUl_B_Ip", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_L()
{
  {
    init_simple_test("aUl_B_L");
    aUl_B_L lv;
    check2(sizeof(lv), 17, "sizeof(aUl_B_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_L)");
    check_field_offset(lv, v1, 0, "aUl_B_L.v1");
    check_field_offset(lv, v2, 8, "aUl_B_L.v2");
    check_field_offset(lv, v3, 9, "aUl_B_L.v3");
  }
}
static Arrange_To_Call_Me vaUl_B_L(Test_aUl_B_L, "aUl_B_L", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_S()
{
  {
    init_simple_test("aUl_B_S");
    aUl_B_S lv;
    check2(sizeof(lv), 11, "sizeof(aUl_B_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_S)");
    check_field_offset(lv, v1, 0, "aUl_B_S.v1");
    check_field_offset(lv, v2, 8, "aUl_B_S.v2");
    check_field_offset(lv, v3, 9, "aUl_B_S.v3");
  }
}
static Arrange_To_Call_Me vaUl_B_S(Test_aUl_B_S, "aUl_B_S", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_Uc()
{
  {
    init_simple_test("aUl_B_Uc");
    aUl_B_Uc lv;
    check2(sizeof(lv), 10, "sizeof(aUl_B_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_Uc)");
    check_field_offset(lv, v1, 0, "aUl_B_Uc.v1");
    check_field_offset(lv, v2, 8, "aUl_B_Uc.v2");
    check_field_offset(lv, v3, 9, "aUl_B_Uc.v3");
  }
}
static Arrange_To_Call_Me vaUl_B_Uc(Test_aUl_B_Uc, "aUl_B_Uc", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_Ui()
{
  {
    init_simple_test("aUl_B_Ui");
    aUl_B_Ui lv;
    check2(sizeof(lv), 13, "sizeof(aUl_B_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_Ui)");
    check_field_offset(lv, v1, 0, "aUl_B_Ui.v1");
    check_field_offset(lv, v2, 8, "aUl_B_Ui.v2");
    check_field_offset(lv, v3, 9, "aUl_B_Ui.v3");
  }
}
static Arrange_To_Call_Me vaUl_B_Ui(Test_aUl_B_Ui, "aUl_B_Ui", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_Ul()
{
  {
    init_simple_test("aUl_B_Ul");
    aUl_B_Ul lv;
    check2(sizeof(lv), 17, "sizeof(aUl_B_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_Ul)");
    check_field_offset(lv, v1, 0, "aUl_B_Ul.v1");
    check_field_offset(lv, v2, 8, "aUl_B_Ul.v2");
    check_field_offset(lv, v3, 9, "aUl_B_Ul.v3");
  }
}
static Arrange_To_Call_Me vaUl_B_Ul(Test_aUl_B_Ul, "aUl_B_Ul", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_Us()
{
  {
    init_simple_test("aUl_B_Us");
    aUl_B_Us lv;
    check2(sizeof(lv), 11, "sizeof(aUl_B_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_Us)");
    check_field_offset(lv, v1, 0, "aUl_B_Us.v1");
    check_field_offset(lv, v2, 8, "aUl_B_Us.v2");
    check_field_offset(lv, v3, 9, "aUl_B_Us.v3");
  }
}
static Arrange_To_Call_Me vaUl_B_Us(Test_aUl_B_Us, "aUl_B_Us", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_B_Vp()
{
  {
    init_simple_test("aUl_B_Vp");
    aUl_B_Vp lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aUl_B_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_B_Vp)");
    check_field_offset(lv, v1, 0, "aUl_B_Vp.v1");
    check_field_offset(lv, v2, 8, "aUl_B_Vp.v2");
    check_field_offset(lv, v3, 9, "aUl_B_Vp.v3");
  }
}
static Arrange_To_Call_Me vaUl_B_Vp(Test_aUl_B_Vp, "aUl_B_Vp", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu15i_B()
{
  {
    init_simple_test("aUl_BFu15i_B");
    static aUl_BFu15i_B lv;
    check2(sizeof(lv), 11, "sizeof(aUl_BFu15i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu15i_B)");
    check_field_offset(lv, v1, 0, "aUl_BFu15i_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "aUl_BFu15i_B");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "aUl_BFu15i_B");
    check_field_offset(lv, v3, 10, "aUl_BFu15i_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu15i_B(Test_aUl_BFu15i_B, "aUl_BFu15i_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu15ll_B()
{
  {
    init_simple_test("aUl_BFu15ll_B");
    static aUl_BFu15ll_B lv;
    check2(sizeof(lv), 11, "sizeof(aUl_BFu15ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu15ll_B)");
    check_field_offset(lv, v1, 0, "aUl_BFu15ll_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "aUl_BFu15ll_B");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "aUl_BFu15ll_B");
    check_field_offset(lv, v3, 10, "aUl_BFu15ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu15ll_B(Test_aUl_BFu15ll_B, "aUl_BFu15ll_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu15s_B()
{
  {
    init_simple_test("aUl_BFu15s_B");
    static aUl_BFu15s_B lv;
    check2(sizeof(lv), 11, "sizeof(aUl_BFu15s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu15s_B)");
    check_field_offset(lv, v1, 0, "aUl_BFu15s_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "aUl_BFu15s_B");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "aUl_BFu15s_B");
    check_field_offset(lv, v3, 10, "aUl_BFu15s_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu15s_B(Test_aUl_BFu15s_B, "aUl_BFu15s_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu16i_B()
{
  {
    init_simple_test("aUl_BFu16i_B");
    static aUl_BFu16i_B lv;
    check2(sizeof(lv), 11, "sizeof(aUl_BFu16i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu16i_B)");
    check_field_offset(lv, v1, 0, "aUl_BFu16i_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "aUl_BFu16i_B");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "aUl_BFu16i_B");
    check_field_offset(lv, v3, 10, "aUl_BFu16i_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu16i_B(Test_aUl_BFu16i_B, "aUl_BFu16i_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu16ll_B()
{
  {
    init_simple_test("aUl_BFu16ll_B");
    static aUl_BFu16ll_B lv;
    check2(sizeof(lv), 11, "sizeof(aUl_BFu16ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu16ll_B)");
    check_field_offset(lv, v1, 0, "aUl_BFu16ll_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "aUl_BFu16ll_B");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "aUl_BFu16ll_B");
    check_field_offset(lv, v3, 10, "aUl_BFu16ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu16ll_B(Test_aUl_BFu16ll_B, "aUl_BFu16ll_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu16s_B()
{
  {
    init_simple_test("aUl_BFu16s_B");
    static aUl_BFu16s_B lv;
    check2(sizeof(lv), 11, "sizeof(aUl_BFu16s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu16s_B)");
    check_field_offset(lv, v1, 0, "aUl_BFu16s_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "aUl_BFu16s_B");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "aUl_BFu16s_B");
    check_field_offset(lv, v3, 10, "aUl_BFu16s_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu16s_B(Test_aUl_BFu16s_B, "aUl_BFu16s_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu17i_B()
{
  {
    init_simple_test("aUl_BFu17i_B");
    static aUl_BFu17i_B lv;
    check2(sizeof(lv), 12, "sizeof(aUl_BFu17i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu17i_B)");
    check_field_offset(lv, v1, 0, "aUl_BFu17i_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "aUl_BFu17i_B");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "aUl_BFu17i_B");
    check_field_offset(lv, v3, 11, "aUl_BFu17i_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu17i_B(Test_aUl_BFu17i_B, "aUl_BFu17i_B", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu17ll_B()
{
  {
    init_simple_test("aUl_BFu17ll_B");
    static aUl_BFu17ll_B lv;
    check2(sizeof(lv), 12, "sizeof(aUl_BFu17ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu17ll_B)");
    check_field_offset(lv, v1, 0, "aUl_BFu17ll_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "aUl_BFu17ll_B");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "aUl_BFu17ll_B");
    check_field_offset(lv, v3, 11, "aUl_BFu17ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu17ll_B(Test_aUl_BFu17ll_B, "aUl_BFu17ll_B", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu1c_B()
{
  {
    init_simple_test("aUl_BFu1c_B");
    static aUl_BFu1c_B lv;
    check2(sizeof(lv), 10, "sizeof(aUl_BFu1c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu1c_B)");
    check_field_offset(lv, v1, 0, "aUl_BFu1c_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "aUl_BFu1c_B");
    check_field_offset(lv, v3, 9, "aUl_BFu1c_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu1c_B(Test_aUl_BFu1c_B, "aUl_BFu1c_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu1i_B()
{
  {
    init_simple_test("aUl_BFu1i_B");
    static aUl_BFu1i_B lv;
    check2(sizeof(lv), 10, "sizeof(aUl_BFu1i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu1i_B)");
    check_field_offset(lv, v1, 0, "aUl_BFu1i_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "aUl_BFu1i_B");
    check_field_offset(lv, v3, 9, "aUl_BFu1i_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu1i_B(Test_aUl_BFu1i_B, "aUl_BFu1i_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu1ll_B()
{
  {
    init_simple_test("aUl_BFu1ll_B");
    static aUl_BFu1ll_B lv;
    check2(sizeof(lv), 10, "sizeof(aUl_BFu1ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu1ll_B)");
    check_field_offset(lv, v1, 0, "aUl_BFu1ll_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "aUl_BFu1ll_B");
    check_field_offset(lv, v3, 9, "aUl_BFu1ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu1ll_B(Test_aUl_BFu1ll_B, "aUl_BFu1ll_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu1s_B()
{
  {
    init_simple_test("aUl_BFu1s_B");
    static aUl_BFu1s_B lv;
    check2(sizeof(lv), 10, "sizeof(aUl_BFu1s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu1s_B)");
    check_field_offset(lv, v1, 0, "aUl_BFu1s_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "aUl_BFu1s_B");
    check_field_offset(lv, v3, 9, "aUl_BFu1s_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu1s_B(Test_aUl_BFu1s_B, "aUl_BFu1s_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu31i_B()
{
  {
    init_simple_test("aUl_BFu31i_B");
    static aUl_BFu31i_B lv;
    check2(sizeof(lv), 13, "sizeof(aUl_BFu31i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu31i_B)");
    check_field_offset(lv, v1, 0, "aUl_BFu31i_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "aUl_BFu31i_B");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "aUl_BFu31i_B");
    check_field_offset(lv, v3, 12, "aUl_BFu31i_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu31i_B(Test_aUl_BFu31i_B, "aUl_BFu31i_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu31ll_B()
{
  {
    init_simple_test("aUl_BFu31ll_B");
    static aUl_BFu31ll_B lv;
    check2(sizeof(lv), 13, "sizeof(aUl_BFu31ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu31ll_B)");
    check_field_offset(lv, v1, 0, "aUl_BFu31ll_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "aUl_BFu31ll_B");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "aUl_BFu31ll_B");
    check_field_offset(lv, v3, 12, "aUl_BFu31ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu31ll_B(Test_aUl_BFu31ll_B, "aUl_BFu31ll_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu32i_B()
{
  {
    init_simple_test("aUl_BFu32i_B");
    static aUl_BFu32i_B lv;
    check2(sizeof(lv), 13, "sizeof(aUl_BFu32i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu32i_B)");
    check_field_offset(lv, v1, 0, "aUl_BFu32i_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "aUl_BFu32i_B");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "aUl_BFu32i_B");
    check_field_offset(lv, v3, 12, "aUl_BFu32i_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu32i_B(Test_aUl_BFu32i_B, "aUl_BFu32i_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu32ll_B()
{
  {
    init_simple_test("aUl_BFu32ll_B");
    static aUl_BFu32ll_B lv;
    check2(sizeof(lv), 13, "sizeof(aUl_BFu32ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu32ll_B)");
    check_field_offset(lv, v1, 0, "aUl_BFu32ll_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "aUl_BFu32ll_B");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "aUl_BFu32ll_B");
    check_field_offset(lv, v3, 12, "aUl_BFu32ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu32ll_B(Test_aUl_BFu32ll_B, "aUl_BFu32ll_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu33_B()
{
  {
    init_simple_test("aUl_BFu33_B");
    static aUl_BFu33_B lv;
    check2(sizeof(lv), 14, "sizeof(aUl_BFu33_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu33_B)");
    check_field_offset(lv, v1, 0, "aUl_BFu33_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 33, 1, "aUl_BFu33_B");
    set_bf_and_test(lv, v2, 8, 0, 33, hide_ull(1LL<<32), "aUl_BFu33_B");
    check_field_offset(lv, v3, 13, "aUl_BFu33_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu33_B(Test_aUl_BFu33_B, "aUl_BFu33_B", 14);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu7c_B()
{
  {
    init_simple_test("aUl_BFu7c_B");
    static aUl_BFu7c_B lv;
    check2(sizeof(lv), 10, "sizeof(aUl_BFu7c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu7c_B)");
    check_field_offset(lv, v1, 0, "aUl_BFu7c_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "aUl_BFu7c_B");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "aUl_BFu7c_B");
    check_field_offset(lv, v3, 9, "aUl_BFu7c_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu7c_B(Test_aUl_BFu7c_B, "aUl_BFu7c_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu7i_B()
{
  {
    init_simple_test("aUl_BFu7i_B");
    static aUl_BFu7i_B lv;
    check2(sizeof(lv), 10, "sizeof(aUl_BFu7i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu7i_B)");
    check_field_offset(lv, v1, 0, "aUl_BFu7i_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "aUl_BFu7i_B");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "aUl_BFu7i_B");
    check_field_offset(lv, v3, 9, "aUl_BFu7i_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu7i_B(Test_aUl_BFu7i_B, "aUl_BFu7i_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu7ll_B()
{
  {
    init_simple_test("aUl_BFu7ll_B");
    static aUl_BFu7ll_B lv;
    check2(sizeof(lv), 10, "sizeof(aUl_BFu7ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu7ll_B)");
    check_field_offset(lv, v1, 0, "aUl_BFu7ll_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "aUl_BFu7ll_B");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "aUl_BFu7ll_B");
    check_field_offset(lv, v3, 9, "aUl_BFu7ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu7ll_B(Test_aUl_BFu7ll_B, "aUl_BFu7ll_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu7s_B()
{
  {
    init_simple_test("aUl_BFu7s_B");
    static aUl_BFu7s_B lv;
    check2(sizeof(lv), 10, "sizeof(aUl_BFu7s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu7s_B)");
    check_field_offset(lv, v1, 0, "aUl_BFu7s_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "aUl_BFu7s_B");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "aUl_BFu7s_B");
    check_field_offset(lv, v3, 9, "aUl_BFu7s_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu7s_B(Test_aUl_BFu7s_B, "aUl_BFu7s_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu8c_B()
{
  {
    init_simple_test("aUl_BFu8c_B");
    static aUl_BFu8c_B lv;
    check2(sizeof(lv), 10, "sizeof(aUl_BFu8c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu8c_B)");
    check_field_offset(lv, v1, 0, "aUl_BFu8c_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "aUl_BFu8c_B");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "aUl_BFu8c_B");
    check_field_offset(lv, v3, 9, "aUl_BFu8c_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu8c_B(Test_aUl_BFu8c_B, "aUl_BFu8c_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu8i_B()
{
  {
    init_simple_test("aUl_BFu8i_B");
    static aUl_BFu8i_B lv;
    check2(sizeof(lv), 10, "sizeof(aUl_BFu8i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu8i_B)");
    check_field_offset(lv, v1, 0, "aUl_BFu8i_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "aUl_BFu8i_B");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "aUl_BFu8i_B");
    check_field_offset(lv, v3, 9, "aUl_BFu8i_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu8i_B(Test_aUl_BFu8i_B, "aUl_BFu8i_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu8ll_B()
{
  {
    init_simple_test("aUl_BFu8ll_B");
    static aUl_BFu8ll_B lv;
    check2(sizeof(lv), 10, "sizeof(aUl_BFu8ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu8ll_B)");
    check_field_offset(lv, v1, 0, "aUl_BFu8ll_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "aUl_BFu8ll_B");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "aUl_BFu8ll_B");
    check_field_offset(lv, v3, 9, "aUl_BFu8ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu8ll_B(Test_aUl_BFu8ll_B, "aUl_BFu8ll_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu8s_B()
{
  {
    init_simple_test("aUl_BFu8s_B");
    static aUl_BFu8s_B lv;
    check2(sizeof(lv), 10, "sizeof(aUl_BFu8s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu8s_B)");
    check_field_offset(lv, v1, 0, "aUl_BFu8s_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "aUl_BFu8s_B");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "aUl_BFu8s_B");
    check_field_offset(lv, v3, 9, "aUl_BFu8s_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu8s_B(Test_aUl_BFu8s_B, "aUl_BFu8s_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu9i_B()
{
  {
    init_simple_test("aUl_BFu9i_B");
    static aUl_BFu9i_B lv;
    check2(sizeof(lv), 11, "sizeof(aUl_BFu9i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu9i_B)");
    check_field_offset(lv, v1, 0, "aUl_BFu9i_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "aUl_BFu9i_B");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "aUl_BFu9i_B");
    check_field_offset(lv, v3, 10, "aUl_BFu9i_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu9i_B(Test_aUl_BFu9i_B, "aUl_BFu9i_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu9ll_B()
{
  {
    init_simple_test("aUl_BFu9ll_B");
    static aUl_BFu9ll_B lv;
    check2(sizeof(lv), 11, "sizeof(aUl_BFu9ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu9ll_B)");
    check_field_offset(lv, v1, 0, "aUl_BFu9ll_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "aUl_BFu9ll_B");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "aUl_BFu9ll_B");
    check_field_offset(lv, v3, 10, "aUl_BFu9ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu9ll_B(Test_aUl_BFu9ll_B, "aUl_BFu9ll_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_BFu9s_B()
{
  {
    init_simple_test("aUl_BFu9s_B");
    static aUl_BFu9s_B lv;
    check2(sizeof(lv), 11, "sizeof(aUl_BFu9s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_BFu9s_B)");
    check_field_offset(lv, v1, 0, "aUl_BFu9s_B.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "aUl_BFu9s_B");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "aUl_BFu9s_B");
    check_field_offset(lv, v3, 10, "aUl_BFu9s_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_BFu9s_B(Test_aUl_BFu9s_B, "aUl_BFu9s_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_C_B()
{
  {
    init_simple_test("aUl_C_B");
    aUl_C_B lv;
    check2(sizeof(lv), 10, "sizeof(aUl_C_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_C_B)");
    check_field_offset(lv, v1, 0, "aUl_C_B.v1");
    check_field_offset(lv, v2, 8, "aUl_C_B.v2");
    check_field_offset(lv, v3, 9, "aUl_C_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_C_B(Test_aUl_C_B, "aUl_C_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_D_B()
{
  {
    init_simple_test("aUl_D_B");
    aUl_D_B lv;
    check2(sizeof(lv), 17, "sizeof(aUl_D_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_D_B)");
    check_field_offset(lv, v1, 0, "aUl_D_B.v1");
    check_field_offset(lv, v2, 8, "aUl_D_B.v2");
    check_field_offset(lv, v3, 16, "aUl_D_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_D_B(Test_aUl_D_B, "aUl_D_B", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_F_B()
{
  {
    init_simple_test("aUl_F_B");
    aUl_F_B lv;
    check2(sizeof(lv), 13, "sizeof(aUl_F_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_F_B)");
    check_field_offset(lv, v1, 0, "aUl_F_B.v1");
    check_field_offset(lv, v2, 8, "aUl_F_B.v2");
    check_field_offset(lv, v3, 12, "aUl_F_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_F_B(Test_aUl_F_B, "aUl_F_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_I_B()
{
  {
    init_simple_test("aUl_I_B");
    aUl_I_B lv;
    check2(sizeof(lv), 13, "sizeof(aUl_I_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_I_B)");
    check_field_offset(lv, v1, 0, "aUl_I_B.v1");
    check_field_offset(lv, v2, 8, "aUl_I_B.v2");
    check_field_offset(lv, v3, 12, "aUl_I_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_I_B(Test_aUl_I_B, "aUl_I_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Ip_B()
{
  {
    init_simple_test("aUl_Ip_B");
    aUl_Ip_B lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aUl_Ip_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Ip_B)");
    check_field_offset(lv, v1, 0, "aUl_Ip_B.v1");
    check_field_offset(lv, v2, 8, "aUl_Ip_B.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "aUl_Ip_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_Ip_B(Test_aUl_Ip_B, "aUl_Ip_B", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_L_B()
{
  {
    init_simple_test("aUl_L_B");
    aUl_L_B lv;
    check2(sizeof(lv), 17, "sizeof(aUl_L_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_L_B)");
    check_field_offset(lv, v1, 0, "aUl_L_B.v1");
    check_field_offset(lv, v2, 8, "aUl_L_B.v2");
    check_field_offset(lv, v3, 16, "aUl_L_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_L_B(Test_aUl_L_B, "aUl_L_B", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_S_B()
{
  {
    init_simple_test("aUl_S_B");
    aUl_S_B lv;
    check2(sizeof(lv), 11, "sizeof(aUl_S_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_S_B)");
    check_field_offset(lv, v1, 0, "aUl_S_B.v1");
    check_field_offset(lv, v2, 8, "aUl_S_B.v2");
    check_field_offset(lv, v3, 10, "aUl_S_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_S_B(Test_aUl_S_B, "aUl_S_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Uc_B()
{
  {
    init_simple_test("aUl_Uc_B");
    aUl_Uc_B lv;
    check2(sizeof(lv), 10, "sizeof(aUl_Uc_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Uc_B)");
    check_field_offset(lv, v1, 0, "aUl_Uc_B.v1");
    check_field_offset(lv, v2, 8, "aUl_Uc_B.v2");
    check_field_offset(lv, v3, 9, "aUl_Uc_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_Uc_B(Test_aUl_Uc_B, "aUl_Uc_B", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Ui_B()
{
  {
    init_simple_test("aUl_Ui_B");
    aUl_Ui_B lv;
    check2(sizeof(lv), 13, "sizeof(aUl_Ui_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Ui_B)");
    check_field_offset(lv, v1, 0, "aUl_Ui_B.v1");
    check_field_offset(lv, v2, 8, "aUl_Ui_B.v2");
    check_field_offset(lv, v3, 12, "aUl_Ui_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_Ui_B(Test_aUl_Ui_B, "aUl_Ui_B", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Ul_B()
{
  {
    init_simple_test("aUl_Ul_B");
    aUl_Ul_B lv;
    check2(sizeof(lv), 17, "sizeof(aUl_Ul_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Ul_B)");
    check_field_offset(lv, v1, 0, "aUl_Ul_B.v1");
    check_field_offset(lv, v2, 8, "aUl_Ul_B.v2");
    check_field_offset(lv, v3, 16, "aUl_Ul_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_Ul_B(Test_aUl_Ul_B, "aUl_Ul_B", 17);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Us_B()
{
  {
    init_simple_test("aUl_Us_B");
    aUl_Us_B lv;
    check2(sizeof(lv), 11, "sizeof(aUl_Us_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Us_B)");
    check_field_offset(lv, v1, 0, "aUl_Us_B.v1");
    check_field_offset(lv, v2, 8, "aUl_Us_B.v2");
    check_field_offset(lv, v3, 10, "aUl_Us_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_Us_B(Test_aUl_Us_B, "aUl_Us_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUl_Vp_B()
{
  {
    init_simple_test("aUl_Vp_B");
    aUl_Vp_B lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aUl_Vp_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUl_Vp_B)");
    check_field_offset(lv, v1, 0, "aUl_Vp_B.v1");
    check_field_offset(lv, v2, 8, "aUl_Vp_B.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "aUl_Vp_B.v3");
  }
}
static Arrange_To_Call_Me vaUl_Vp_B(Test_aUl_Vp_B, "aUl_Vp_B", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B()
{
  {
    init_simple_test("aUs_B");
    aUs_B lv;
    check2(sizeof(lv), 3, "sizeof(aUs_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B)");
    check_field_offset(lv, v1, 0, "aUs_B.v1");
    check_field_offset(lv, v2, 2, "aUs_B.v2");
  }
}
static Arrange_To_Call_Me vaUs_B(Test_aUs_B, "aUs_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_B()
{
  {
    init_simple_test("aUs_B_B");
    aUs_B_B lv;
    check2(sizeof(lv), 4, "sizeof(aUs_B_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_B)");
    check_field_offset(lv, v1, 0, "aUs_B_B.v1");
    check_field_offset(lv, v2, 2, "aUs_B_B.v2");
    check_field_offset(lv, v3, 3, "aUs_B_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_B_B(Test_aUs_B_B, "aUs_B_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_BFu15i()
{
  {
    init_simple_test("aUs_B_BFu15i");
    static aUs_B_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aUs_B_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_BFu15i)");
    check_field_offset(lv, v1, 0, "aUs_B_BFu15i.v1");
    check_field_offset(lv, v2, 2, "aUs_B_BFu15i.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aUs_B_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aUs_B_BFu15i");
  }
}
static Arrange_To_Call_Me vaUs_B_BFu15i(Test_aUs_B_BFu15i, "aUs_B_BFu15i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_BFu15ll()
{
  {
    init_simple_test("aUs_B_BFu15ll");
    static aUs_B_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aUs_B_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUs_B_BFu15ll.v1");
    check_field_offset(lv, v2, 2, "aUs_B_BFu15ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aUs_B_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aUs_B_BFu15ll");
  }
}
static Arrange_To_Call_Me vaUs_B_BFu15ll(Test_aUs_B_BFu15ll, "aUs_B_BFu15ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_BFu15s()
{
  {
    init_simple_test("aUs_B_BFu15s");
    static aUs_B_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aUs_B_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_BFu15s)");
    check_field_offset(lv, v1, 0, "aUs_B_BFu15s.v1");
    check_field_offset(lv, v2, 2, "aUs_B_BFu15s.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aUs_B_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aUs_B_BFu15s");
  }
}
static Arrange_To_Call_Me vaUs_B_BFu15s(Test_aUs_B_BFu15s, "aUs_B_BFu15s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_BFu16i()
{
  {
    init_simple_test("aUs_B_BFu16i");
    static aUs_B_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aUs_B_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_BFu16i)");
    check_field_offset(lv, v1, 0, "aUs_B_BFu16i.v1");
    check_field_offset(lv, v2, 2, "aUs_B_BFu16i.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aUs_B_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aUs_B_BFu16i");
  }
}
static Arrange_To_Call_Me vaUs_B_BFu16i(Test_aUs_B_BFu16i, "aUs_B_BFu16i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_BFu16ll()
{
  {
    init_simple_test("aUs_B_BFu16ll");
    static aUs_B_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aUs_B_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUs_B_BFu16ll.v1");
    check_field_offset(lv, v2, 2, "aUs_B_BFu16ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aUs_B_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aUs_B_BFu16ll");
  }
}
static Arrange_To_Call_Me vaUs_B_BFu16ll(Test_aUs_B_BFu16ll, "aUs_B_BFu16ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_BFu16s()
{
  {
    init_simple_test("aUs_B_BFu16s");
    static aUs_B_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aUs_B_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_BFu16s)");
    check_field_offset(lv, v1, 0, "aUs_B_BFu16s.v1");
    check_field_offset(lv, v2, 2, "aUs_B_BFu16s.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aUs_B_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aUs_B_BFu16s");
  }
}
static Arrange_To_Call_Me vaUs_B_BFu16s(Test_aUs_B_BFu16s, "aUs_B_BFu16s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_BFu17i()
{
  {
    init_simple_test("aUs_B_BFu17i");
    static aUs_B_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(aUs_B_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_BFu17i)");
    check_field_offset(lv, v1, 0, "aUs_B_BFu17i.v1");
    check_field_offset(lv, v2, 2, "aUs_B_BFu17i.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aUs_B_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aUs_B_BFu17i");
  }
}
static Arrange_To_Call_Me vaUs_B_BFu17i(Test_aUs_B_BFu17i, "aUs_B_BFu17i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_BFu17ll()
{
  {
    init_simple_test("aUs_B_BFu17ll");
    static aUs_B_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(aUs_B_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUs_B_BFu17ll.v1");
    check_field_offset(lv, v2, 2, "aUs_B_BFu17ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aUs_B_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aUs_B_BFu17ll");
  }
}
static Arrange_To_Call_Me vaUs_B_BFu17ll(Test_aUs_B_BFu17ll, "aUs_B_BFu17ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_BFu1c()
{
  {
    init_simple_test("aUs_B_BFu1c");
    static aUs_B_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(aUs_B_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_BFu1c)");
    check_field_offset(lv, v1, 0, "aUs_B_BFu1c.v1");
    check_field_offset(lv, v2, 2, "aUs_B_BFu1c.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aUs_B_BFu1c");
  }
}
static Arrange_To_Call_Me vaUs_B_BFu1c(Test_aUs_B_BFu1c, "aUs_B_BFu1c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_BFu1i()
{
  {
    init_simple_test("aUs_B_BFu1i");
    static aUs_B_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(aUs_B_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_BFu1i)");
    check_field_offset(lv, v1, 0, "aUs_B_BFu1i.v1");
    check_field_offset(lv, v2, 2, "aUs_B_BFu1i.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aUs_B_BFu1i");
  }
}
static Arrange_To_Call_Me vaUs_B_BFu1i(Test_aUs_B_BFu1i, "aUs_B_BFu1i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_BFu1ll()
{
  {
    init_simple_test("aUs_B_BFu1ll");
    static aUs_B_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(aUs_B_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUs_B_BFu1ll.v1");
    check_field_offset(lv, v2, 2, "aUs_B_BFu1ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aUs_B_BFu1ll");
  }
}
static Arrange_To_Call_Me vaUs_B_BFu1ll(Test_aUs_B_BFu1ll, "aUs_B_BFu1ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_BFu1s()
{
  {
    init_simple_test("aUs_B_BFu1s");
    static aUs_B_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(aUs_B_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_BFu1s)");
    check_field_offset(lv, v1, 0, "aUs_B_BFu1s.v1");
    check_field_offset(lv, v2, 2, "aUs_B_BFu1s.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aUs_B_BFu1s");
  }
}
static Arrange_To_Call_Me vaUs_B_BFu1s(Test_aUs_B_BFu1s, "aUs_B_BFu1s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_BFu31i()
{
  {
    init_simple_test("aUs_B_BFu31i");
    static aUs_B_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aUs_B_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_BFu31i)");
    check_field_offset(lv, v1, 0, "aUs_B_BFu31i.v1");
    check_field_offset(lv, v2, 2, "aUs_B_BFu31i.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aUs_B_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aUs_B_BFu31i");
  }
}
static Arrange_To_Call_Me vaUs_B_BFu31i(Test_aUs_B_BFu31i, "aUs_B_BFu31i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_BFu31ll()
{
  {
    init_simple_test("aUs_B_BFu31ll");
    static aUs_B_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aUs_B_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUs_B_BFu31ll.v1");
    check_field_offset(lv, v2, 2, "aUs_B_BFu31ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aUs_B_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aUs_B_BFu31ll");
  }
}
static Arrange_To_Call_Me vaUs_B_BFu31ll(Test_aUs_B_BFu31ll, "aUs_B_BFu31ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_BFu32i()
{
  {
    init_simple_test("aUs_B_BFu32i");
    static aUs_B_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aUs_B_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_BFu32i)");
    check_field_offset(lv, v1, 0, "aUs_B_BFu32i.v1");
    check_field_offset(lv, v2, 2, "aUs_B_BFu32i.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aUs_B_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aUs_B_BFu32i");
  }
}
static Arrange_To_Call_Me vaUs_B_BFu32i(Test_aUs_B_BFu32i, "aUs_B_BFu32i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_BFu32ll()
{
  {
    init_simple_test("aUs_B_BFu32ll");
    static aUs_B_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aUs_B_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUs_B_BFu32ll.v1");
    check_field_offset(lv, v2, 2, "aUs_B_BFu32ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aUs_B_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aUs_B_BFu32ll");
  }
}
static Arrange_To_Call_Me vaUs_B_BFu32ll(Test_aUs_B_BFu32ll, "aUs_B_BFu32ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_BFu33()
{
  {
    init_simple_test("aUs_B_BFu33");
    static aUs_B_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(aUs_B_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_BFu33)");
    check_field_offset(lv, v1, 0, "aUs_B_BFu33.v1");
    check_field_offset(lv, v2, 2, "aUs_B_BFu33.v2");
    set_bf_and_test(lv, v3, 3, 0, 33, 1, "aUs_B_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, hide_ull(1LL<<32), "aUs_B_BFu33");
  }
}
static Arrange_To_Call_Me vaUs_B_BFu33(Test_aUs_B_BFu33, "aUs_B_BFu33", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_BFu7c()
{
  {
    init_simple_test("aUs_B_BFu7c");
    static aUs_B_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aUs_B_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_BFu7c)");
    check_field_offset(lv, v1, 0, "aUs_B_BFu7c.v1");
    check_field_offset(lv, v2, 2, "aUs_B_BFu7c.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aUs_B_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aUs_B_BFu7c");
  }
}
static Arrange_To_Call_Me vaUs_B_BFu7c(Test_aUs_B_BFu7c, "aUs_B_BFu7c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_BFu7i()
{
  {
    init_simple_test("aUs_B_BFu7i");
    static aUs_B_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aUs_B_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_BFu7i)");
    check_field_offset(lv, v1, 0, "aUs_B_BFu7i.v1");
    check_field_offset(lv, v2, 2, "aUs_B_BFu7i.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aUs_B_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aUs_B_BFu7i");
  }
}
static Arrange_To_Call_Me vaUs_B_BFu7i(Test_aUs_B_BFu7i, "aUs_B_BFu7i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_BFu7ll()
{
  {
    init_simple_test("aUs_B_BFu7ll");
    static aUs_B_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aUs_B_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUs_B_BFu7ll.v1");
    check_field_offset(lv, v2, 2, "aUs_B_BFu7ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aUs_B_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aUs_B_BFu7ll");
  }
}
static Arrange_To_Call_Me vaUs_B_BFu7ll(Test_aUs_B_BFu7ll, "aUs_B_BFu7ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_BFu7s()
{
  {
    init_simple_test("aUs_B_BFu7s");
    static aUs_B_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aUs_B_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_BFu7s)");
    check_field_offset(lv, v1, 0, "aUs_B_BFu7s.v1");
    check_field_offset(lv, v2, 2, "aUs_B_BFu7s.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aUs_B_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aUs_B_BFu7s");
  }
}
static Arrange_To_Call_Me vaUs_B_BFu7s(Test_aUs_B_BFu7s, "aUs_B_BFu7s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_BFu8c()
{
  {
    init_simple_test("aUs_B_BFu8c");
    static aUs_B_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aUs_B_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_BFu8c)");
    check_field_offset(lv, v1, 0, "aUs_B_BFu8c.v1");
    check_field_offset(lv, v2, 2, "aUs_B_BFu8c.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aUs_B_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aUs_B_BFu8c");
  }
}
static Arrange_To_Call_Me vaUs_B_BFu8c(Test_aUs_B_BFu8c, "aUs_B_BFu8c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_BFu8i()
{
  {
    init_simple_test("aUs_B_BFu8i");
    static aUs_B_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aUs_B_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_BFu8i)");
    check_field_offset(lv, v1, 0, "aUs_B_BFu8i.v1");
    check_field_offset(lv, v2, 2, "aUs_B_BFu8i.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aUs_B_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aUs_B_BFu8i");
  }
}
static Arrange_To_Call_Me vaUs_B_BFu8i(Test_aUs_B_BFu8i, "aUs_B_BFu8i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_BFu8ll()
{
  {
    init_simple_test("aUs_B_BFu8ll");
    static aUs_B_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aUs_B_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUs_B_BFu8ll.v1");
    check_field_offset(lv, v2, 2, "aUs_B_BFu8ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aUs_B_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aUs_B_BFu8ll");
  }
}
static Arrange_To_Call_Me vaUs_B_BFu8ll(Test_aUs_B_BFu8ll, "aUs_B_BFu8ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_BFu8s()
{
  {
    init_simple_test("aUs_B_BFu8s");
    static aUs_B_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aUs_B_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_BFu8s)");
    check_field_offset(lv, v1, 0, "aUs_B_BFu8s.v1");
    check_field_offset(lv, v2, 2, "aUs_B_BFu8s.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aUs_B_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aUs_B_BFu8s");
  }
}
static Arrange_To_Call_Me vaUs_B_BFu8s(Test_aUs_B_BFu8s, "aUs_B_BFu8s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_BFu9i()
{
  {
    init_simple_test("aUs_B_BFu9i");
    static aUs_B_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(aUs_B_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_BFu9i)");
    check_field_offset(lv, v1, 0, "aUs_B_BFu9i.v1");
    check_field_offset(lv, v2, 2, "aUs_B_BFu9i.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aUs_B_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aUs_B_BFu9i");
  }
}
static Arrange_To_Call_Me vaUs_B_BFu9i(Test_aUs_B_BFu9i, "aUs_B_BFu9i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_BFu9ll()
{
  {
    init_simple_test("aUs_B_BFu9ll");
    static aUs_B_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(aUs_B_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUs_B_BFu9ll.v1");
    check_field_offset(lv, v2, 2, "aUs_B_BFu9ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aUs_B_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aUs_B_BFu9ll");
  }
}
static Arrange_To_Call_Me vaUs_B_BFu9ll(Test_aUs_B_BFu9ll, "aUs_B_BFu9ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_BFu9s()
{
  {
    init_simple_test("aUs_B_BFu9s");
    static aUs_B_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(aUs_B_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_BFu9s)");
    check_field_offset(lv, v1, 0, "aUs_B_BFu9s.v1");
    check_field_offset(lv, v2, 2, "aUs_B_BFu9s.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aUs_B_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aUs_B_BFu9s");
  }
}
static Arrange_To_Call_Me vaUs_B_BFu9s(Test_aUs_B_BFu9s, "aUs_B_BFu9s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_C()
{
  {
    init_simple_test("aUs_B_C");
    aUs_B_C lv;
    check2(sizeof(lv), 4, "sizeof(aUs_B_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_C)");
    check_field_offset(lv, v1, 0, "aUs_B_C.v1");
    check_field_offset(lv, v2, 2, "aUs_B_C.v2");
    check_field_offset(lv, v3, 3, "aUs_B_C.v3");
  }
}
static Arrange_To_Call_Me vaUs_B_C(Test_aUs_B_C, "aUs_B_C", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_D()
{
  {
    init_simple_test("aUs_B_D");
    aUs_B_D lv;
    check2(sizeof(lv), 11, "sizeof(aUs_B_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_D)");
    check_field_offset(lv, v1, 0, "aUs_B_D.v1");
    check_field_offset(lv, v2, 2, "aUs_B_D.v2");
    check_field_offset(lv, v3, 3, "aUs_B_D.v3");
  }
}
static Arrange_To_Call_Me vaUs_B_D(Test_aUs_B_D, "aUs_B_D", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_F()
{
  {
    init_simple_test("aUs_B_F");
    aUs_B_F lv;
    check2(sizeof(lv), 7, "sizeof(aUs_B_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_F)");
    check_field_offset(lv, v1, 0, "aUs_B_F.v1");
    check_field_offset(lv, v2, 2, "aUs_B_F.v2");
    check_field_offset(lv, v3, 3, "aUs_B_F.v3");
  }
}
static Arrange_To_Call_Me vaUs_B_F(Test_aUs_B_F, "aUs_B_F", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_I()
{
  {
    init_simple_test("aUs_B_I");
    aUs_B_I lv;
    check2(sizeof(lv), 7, "sizeof(aUs_B_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_I)");
    check_field_offset(lv, v1, 0, "aUs_B_I.v1");
    check_field_offset(lv, v2, 2, "aUs_B_I.v2");
    check_field_offset(lv, v3, 3, "aUs_B_I.v3");
  }
}
static Arrange_To_Call_Me vaUs_B_I(Test_aUs_B_I, "aUs_B_I", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_Ip()
{
  {
    init_simple_test("aUs_B_Ip");
    aUs_B_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aUs_B_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_Ip)");
    check_field_offset(lv, v1, 0, "aUs_B_Ip.v1");
    check_field_offset(lv, v2, 2, "aUs_B_Ip.v2");
    check_field_offset(lv, v3, 3, "aUs_B_Ip.v3");
  }
}
static Arrange_To_Call_Me vaUs_B_Ip(Test_aUs_B_Ip, "aUs_B_Ip", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_L()
{
  {
    init_simple_test("aUs_B_L");
    aUs_B_L lv;
    check2(sizeof(lv), 11, "sizeof(aUs_B_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_L)");
    check_field_offset(lv, v1, 0, "aUs_B_L.v1");
    check_field_offset(lv, v2, 2, "aUs_B_L.v2");
    check_field_offset(lv, v3, 3, "aUs_B_L.v3");
  }
}
static Arrange_To_Call_Me vaUs_B_L(Test_aUs_B_L, "aUs_B_L", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_S()
{
  {
    init_simple_test("aUs_B_S");
    aUs_B_S lv;
    check2(sizeof(lv), 5, "sizeof(aUs_B_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_S)");
    check_field_offset(lv, v1, 0, "aUs_B_S.v1");
    check_field_offset(lv, v2, 2, "aUs_B_S.v2");
    check_field_offset(lv, v3, 3, "aUs_B_S.v3");
  }
}
static Arrange_To_Call_Me vaUs_B_S(Test_aUs_B_S, "aUs_B_S", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_Uc()
{
  {
    init_simple_test("aUs_B_Uc");
    aUs_B_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aUs_B_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_Uc)");
    check_field_offset(lv, v1, 0, "aUs_B_Uc.v1");
    check_field_offset(lv, v2, 2, "aUs_B_Uc.v2");
    check_field_offset(lv, v3, 3, "aUs_B_Uc.v3");
  }
}
static Arrange_To_Call_Me vaUs_B_Uc(Test_aUs_B_Uc, "aUs_B_Uc", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_Ui()
{
  {
    init_simple_test("aUs_B_Ui");
    aUs_B_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aUs_B_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_Ui)");
    check_field_offset(lv, v1, 0, "aUs_B_Ui.v1");
    check_field_offset(lv, v2, 2, "aUs_B_Ui.v2");
    check_field_offset(lv, v3, 3, "aUs_B_Ui.v3");
  }
}
static Arrange_To_Call_Me vaUs_B_Ui(Test_aUs_B_Ui, "aUs_B_Ui", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_Ul()
{
  {
    init_simple_test("aUs_B_Ul");
    aUs_B_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aUs_B_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_Ul)");
    check_field_offset(lv, v1, 0, "aUs_B_Ul.v1");
    check_field_offset(lv, v2, 2, "aUs_B_Ul.v2");
    check_field_offset(lv, v3, 3, "aUs_B_Ul.v3");
  }
}
static Arrange_To_Call_Me vaUs_B_Ul(Test_aUs_B_Ul, "aUs_B_Ul", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_Us()
{
  {
    init_simple_test("aUs_B_Us");
    aUs_B_Us lv;
    check2(sizeof(lv), 5, "sizeof(aUs_B_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_Us)");
    check_field_offset(lv, v1, 0, "aUs_B_Us.v1");
    check_field_offset(lv, v2, 2, "aUs_B_Us.v2");
    check_field_offset(lv, v3, 3, "aUs_B_Us.v3");
  }
}
static Arrange_To_Call_Me vaUs_B_Us(Test_aUs_B_Us, "aUs_B_Us", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_B_Vp()
{
  {
    init_simple_test("aUs_B_Vp");
    aUs_B_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aUs_B_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_B_Vp)");
    check_field_offset(lv, v1, 0, "aUs_B_Vp.v1");
    check_field_offset(lv, v2, 2, "aUs_B_Vp.v2");
    check_field_offset(lv, v3, 3, "aUs_B_Vp.v3");
  }
}
static Arrange_To_Call_Me vaUs_B_Vp(Test_aUs_B_Vp, "aUs_B_Vp", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu15i_B()
{
  {
    init_simple_test("aUs_BFu15i_B");
    static aUs_BFu15i_B lv;
    check2(sizeof(lv), 5, "sizeof(aUs_BFu15i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu15i_B)");
    check_field_offset(lv, v1, 0, "aUs_BFu15i_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aUs_BFu15i_B");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aUs_BFu15i_B");
    check_field_offset(lv, v3, 4, "aUs_BFu15i_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu15i_B(Test_aUs_BFu15i_B, "aUs_BFu15i_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu15ll_B()
{
  {
    init_simple_test("aUs_BFu15ll_B");
    static aUs_BFu15ll_B lv;
    check2(sizeof(lv), 5, "sizeof(aUs_BFu15ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu15ll_B)");
    check_field_offset(lv, v1, 0, "aUs_BFu15ll_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aUs_BFu15ll_B");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aUs_BFu15ll_B");
    check_field_offset(lv, v3, 4, "aUs_BFu15ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu15ll_B(Test_aUs_BFu15ll_B, "aUs_BFu15ll_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu15s_B()
{
  {
    init_simple_test("aUs_BFu15s_B");
    static aUs_BFu15s_B lv;
    check2(sizeof(lv), 5, "sizeof(aUs_BFu15s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu15s_B)");
    check_field_offset(lv, v1, 0, "aUs_BFu15s_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aUs_BFu15s_B");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aUs_BFu15s_B");
    check_field_offset(lv, v3, 4, "aUs_BFu15s_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu15s_B(Test_aUs_BFu15s_B, "aUs_BFu15s_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu16i_B()
{
  {
    init_simple_test("aUs_BFu16i_B");
    static aUs_BFu16i_B lv;
    check2(sizeof(lv), 5, "sizeof(aUs_BFu16i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu16i_B)");
    check_field_offset(lv, v1, 0, "aUs_BFu16i_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aUs_BFu16i_B");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aUs_BFu16i_B");
    check_field_offset(lv, v3, 4, "aUs_BFu16i_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu16i_B(Test_aUs_BFu16i_B, "aUs_BFu16i_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu16ll_B()
{
  {
    init_simple_test("aUs_BFu16ll_B");
    static aUs_BFu16ll_B lv;
    check2(sizeof(lv), 5, "sizeof(aUs_BFu16ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu16ll_B)");
    check_field_offset(lv, v1, 0, "aUs_BFu16ll_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aUs_BFu16ll_B");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aUs_BFu16ll_B");
    check_field_offset(lv, v3, 4, "aUs_BFu16ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu16ll_B(Test_aUs_BFu16ll_B, "aUs_BFu16ll_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu16s_B()
{
  {
    init_simple_test("aUs_BFu16s_B");
    static aUs_BFu16s_B lv;
    check2(sizeof(lv), 5, "sizeof(aUs_BFu16s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu16s_B)");
    check_field_offset(lv, v1, 0, "aUs_BFu16s_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aUs_BFu16s_B");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aUs_BFu16s_B");
    check_field_offset(lv, v3, 4, "aUs_BFu16s_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu16s_B(Test_aUs_BFu16s_B, "aUs_BFu16s_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu17i_B()
{
  {
    init_simple_test("aUs_BFu17i_B");
    static aUs_BFu17i_B lv;
    check2(sizeof(lv), 6, "sizeof(aUs_BFu17i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu17i_B)");
    check_field_offset(lv, v1, 0, "aUs_BFu17i_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aUs_BFu17i_B");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aUs_BFu17i_B");
    check_field_offset(lv, v3, 5, "aUs_BFu17i_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu17i_B(Test_aUs_BFu17i_B, "aUs_BFu17i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu17ll_B()
{
  {
    init_simple_test("aUs_BFu17ll_B");
    static aUs_BFu17ll_B lv;
    check2(sizeof(lv), 6, "sizeof(aUs_BFu17ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu17ll_B)");
    check_field_offset(lv, v1, 0, "aUs_BFu17ll_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aUs_BFu17ll_B");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aUs_BFu17ll_B");
    check_field_offset(lv, v3, 5, "aUs_BFu17ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu17ll_B(Test_aUs_BFu17ll_B, "aUs_BFu17ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu1c_B()
{
  {
    init_simple_test("aUs_BFu1c_B");
    static aUs_BFu1c_B lv;
    check2(sizeof(lv), 4, "sizeof(aUs_BFu1c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu1c_B)");
    check_field_offset(lv, v1, 0, "aUs_BFu1c_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aUs_BFu1c_B");
    check_field_offset(lv, v3, 3, "aUs_BFu1c_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu1c_B(Test_aUs_BFu1c_B, "aUs_BFu1c_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu1i_B()
{
  {
    init_simple_test("aUs_BFu1i_B");
    static aUs_BFu1i_B lv;
    check2(sizeof(lv), 4, "sizeof(aUs_BFu1i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu1i_B)");
    check_field_offset(lv, v1, 0, "aUs_BFu1i_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aUs_BFu1i_B");
    check_field_offset(lv, v3, 3, "aUs_BFu1i_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu1i_B(Test_aUs_BFu1i_B, "aUs_BFu1i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu1ll_B()
{
  {
    init_simple_test("aUs_BFu1ll_B");
    static aUs_BFu1ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aUs_BFu1ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu1ll_B)");
    check_field_offset(lv, v1, 0, "aUs_BFu1ll_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aUs_BFu1ll_B");
    check_field_offset(lv, v3, 3, "aUs_BFu1ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu1ll_B(Test_aUs_BFu1ll_B, "aUs_BFu1ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu1s_B()
{
  {
    init_simple_test("aUs_BFu1s_B");
    static aUs_BFu1s_B lv;
    check2(sizeof(lv), 4, "sizeof(aUs_BFu1s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu1s_B)");
    check_field_offset(lv, v1, 0, "aUs_BFu1s_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aUs_BFu1s_B");
    check_field_offset(lv, v3, 3, "aUs_BFu1s_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu1s_B(Test_aUs_BFu1s_B, "aUs_BFu1s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu31i_B()
{
  {
    init_simple_test("aUs_BFu31i_B");
    static aUs_BFu31i_B lv;
    check2(sizeof(lv), 7, "sizeof(aUs_BFu31i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu31i_B)");
    check_field_offset(lv, v1, 0, "aUs_BFu31i_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aUs_BFu31i_B");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aUs_BFu31i_B");
    check_field_offset(lv, v3, 6, "aUs_BFu31i_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu31i_B(Test_aUs_BFu31i_B, "aUs_BFu31i_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu31ll_B()
{
  {
    init_simple_test("aUs_BFu31ll_B");
    static aUs_BFu31ll_B lv;
    check2(sizeof(lv), 7, "sizeof(aUs_BFu31ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu31ll_B)");
    check_field_offset(lv, v1, 0, "aUs_BFu31ll_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aUs_BFu31ll_B");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aUs_BFu31ll_B");
    check_field_offset(lv, v3, 6, "aUs_BFu31ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu31ll_B(Test_aUs_BFu31ll_B, "aUs_BFu31ll_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu32i_B()
{
  {
    init_simple_test("aUs_BFu32i_B");
    static aUs_BFu32i_B lv;
    check2(sizeof(lv), 7, "sizeof(aUs_BFu32i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu32i_B)");
    check_field_offset(lv, v1, 0, "aUs_BFu32i_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aUs_BFu32i_B");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aUs_BFu32i_B");
    check_field_offset(lv, v3, 6, "aUs_BFu32i_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu32i_B(Test_aUs_BFu32i_B, "aUs_BFu32i_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu32ll_B()
{
  {
    init_simple_test("aUs_BFu32ll_B");
    static aUs_BFu32ll_B lv;
    check2(sizeof(lv), 7, "sizeof(aUs_BFu32ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu32ll_B)");
    check_field_offset(lv, v1, 0, "aUs_BFu32ll_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aUs_BFu32ll_B");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aUs_BFu32ll_B");
    check_field_offset(lv, v3, 6, "aUs_BFu32ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu32ll_B(Test_aUs_BFu32ll_B, "aUs_BFu32ll_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu33_B()
{
  {
    init_simple_test("aUs_BFu33_B");
    static aUs_BFu33_B lv;
    check2(sizeof(lv), 8, "sizeof(aUs_BFu33_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu33_B)");
    check_field_offset(lv, v1, 0, "aUs_BFu33_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aUs_BFu33_B");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aUs_BFu33_B");
    check_field_offset(lv, v3, 7, "aUs_BFu33_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu33_B(Test_aUs_BFu33_B, "aUs_BFu33_B", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu7c_B()
{
  {
    init_simple_test("aUs_BFu7c_B");
    static aUs_BFu7c_B lv;
    check2(sizeof(lv), 4, "sizeof(aUs_BFu7c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu7c_B)");
    check_field_offset(lv, v1, 0, "aUs_BFu7c_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aUs_BFu7c_B");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aUs_BFu7c_B");
    check_field_offset(lv, v3, 3, "aUs_BFu7c_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu7c_B(Test_aUs_BFu7c_B, "aUs_BFu7c_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu7i_B()
{
  {
    init_simple_test("aUs_BFu7i_B");
    static aUs_BFu7i_B lv;
    check2(sizeof(lv), 4, "sizeof(aUs_BFu7i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu7i_B)");
    check_field_offset(lv, v1, 0, "aUs_BFu7i_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aUs_BFu7i_B");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aUs_BFu7i_B");
    check_field_offset(lv, v3, 3, "aUs_BFu7i_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu7i_B(Test_aUs_BFu7i_B, "aUs_BFu7i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu7ll_B()
{
  {
    init_simple_test("aUs_BFu7ll_B");
    static aUs_BFu7ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aUs_BFu7ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu7ll_B)");
    check_field_offset(lv, v1, 0, "aUs_BFu7ll_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aUs_BFu7ll_B");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aUs_BFu7ll_B");
    check_field_offset(lv, v3, 3, "aUs_BFu7ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu7ll_B(Test_aUs_BFu7ll_B, "aUs_BFu7ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu7s_B()
{
  {
    init_simple_test("aUs_BFu7s_B");
    static aUs_BFu7s_B lv;
    check2(sizeof(lv), 4, "sizeof(aUs_BFu7s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu7s_B)");
    check_field_offset(lv, v1, 0, "aUs_BFu7s_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aUs_BFu7s_B");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aUs_BFu7s_B");
    check_field_offset(lv, v3, 3, "aUs_BFu7s_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu7s_B(Test_aUs_BFu7s_B, "aUs_BFu7s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu8c_B()
{
  {
    init_simple_test("aUs_BFu8c_B");
    static aUs_BFu8c_B lv;
    check2(sizeof(lv), 4, "sizeof(aUs_BFu8c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu8c_B)");
    check_field_offset(lv, v1, 0, "aUs_BFu8c_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aUs_BFu8c_B");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aUs_BFu8c_B");
    check_field_offset(lv, v3, 3, "aUs_BFu8c_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu8c_B(Test_aUs_BFu8c_B, "aUs_BFu8c_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu8i_B()
{
  {
    init_simple_test("aUs_BFu8i_B");
    static aUs_BFu8i_B lv;
    check2(sizeof(lv), 4, "sizeof(aUs_BFu8i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu8i_B)");
    check_field_offset(lv, v1, 0, "aUs_BFu8i_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aUs_BFu8i_B");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aUs_BFu8i_B");
    check_field_offset(lv, v3, 3, "aUs_BFu8i_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu8i_B(Test_aUs_BFu8i_B, "aUs_BFu8i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu8ll_B()
{
  {
    init_simple_test("aUs_BFu8ll_B");
    static aUs_BFu8ll_B lv;
    check2(sizeof(lv), 4, "sizeof(aUs_BFu8ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu8ll_B)");
    check_field_offset(lv, v1, 0, "aUs_BFu8ll_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aUs_BFu8ll_B");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aUs_BFu8ll_B");
    check_field_offset(lv, v3, 3, "aUs_BFu8ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu8ll_B(Test_aUs_BFu8ll_B, "aUs_BFu8ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu8s_B()
{
  {
    init_simple_test("aUs_BFu8s_B");
    static aUs_BFu8s_B lv;
    check2(sizeof(lv), 4, "sizeof(aUs_BFu8s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu8s_B)");
    check_field_offset(lv, v1, 0, "aUs_BFu8s_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aUs_BFu8s_B");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aUs_BFu8s_B");
    check_field_offset(lv, v3, 3, "aUs_BFu8s_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu8s_B(Test_aUs_BFu8s_B, "aUs_BFu8s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu9i_B()
{
  {
    init_simple_test("aUs_BFu9i_B");
    static aUs_BFu9i_B lv;
    check2(sizeof(lv), 5, "sizeof(aUs_BFu9i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu9i_B)");
    check_field_offset(lv, v1, 0, "aUs_BFu9i_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aUs_BFu9i_B");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aUs_BFu9i_B");
    check_field_offset(lv, v3, 4, "aUs_BFu9i_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu9i_B(Test_aUs_BFu9i_B, "aUs_BFu9i_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu9ll_B()
{
  {
    init_simple_test("aUs_BFu9ll_B");
    static aUs_BFu9ll_B lv;
    check2(sizeof(lv), 5, "sizeof(aUs_BFu9ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu9ll_B)");
    check_field_offset(lv, v1, 0, "aUs_BFu9ll_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aUs_BFu9ll_B");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aUs_BFu9ll_B");
    check_field_offset(lv, v3, 4, "aUs_BFu9ll_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu9ll_B(Test_aUs_BFu9ll_B, "aUs_BFu9ll_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_BFu9s_B()
{
  {
    init_simple_test("aUs_BFu9s_B");
    static aUs_BFu9s_B lv;
    check2(sizeof(lv), 5, "sizeof(aUs_BFu9s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_BFu9s_B)");
    check_field_offset(lv, v1, 0, "aUs_BFu9s_B.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aUs_BFu9s_B");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aUs_BFu9s_B");
    check_field_offset(lv, v3, 4, "aUs_BFu9s_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_BFu9s_B(Test_aUs_BFu9s_B, "aUs_BFu9s_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_C_B()
{
  {
    init_simple_test("aUs_C_B");
    aUs_C_B lv;
    check2(sizeof(lv), 4, "sizeof(aUs_C_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_C_B)");
    check_field_offset(lv, v1, 0, "aUs_C_B.v1");
    check_field_offset(lv, v2, 2, "aUs_C_B.v2");
    check_field_offset(lv, v3, 3, "aUs_C_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_C_B(Test_aUs_C_B, "aUs_C_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_D_B()
{
  {
    init_simple_test("aUs_D_B");
    aUs_D_B lv;
    check2(sizeof(lv), 11, "sizeof(aUs_D_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_D_B)");
    check_field_offset(lv, v1, 0, "aUs_D_B.v1");
    check_field_offset(lv, v2, 2, "aUs_D_B.v2");
    check_field_offset(lv, v3, 10, "aUs_D_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_D_B(Test_aUs_D_B, "aUs_D_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_F_B()
{
  {
    init_simple_test("aUs_F_B");
    aUs_F_B lv;
    check2(sizeof(lv), 7, "sizeof(aUs_F_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_F_B)");
    check_field_offset(lv, v1, 0, "aUs_F_B.v1");
    check_field_offset(lv, v2, 2, "aUs_F_B.v2");
    check_field_offset(lv, v3, 6, "aUs_F_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_F_B(Test_aUs_F_B, "aUs_F_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_I_B()
{
  {
    init_simple_test("aUs_I_B");
    aUs_I_B lv;
    check2(sizeof(lv), 7, "sizeof(aUs_I_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_I_B)");
    check_field_offset(lv, v1, 0, "aUs_I_B.v1");
    check_field_offset(lv, v2, 2, "aUs_I_B.v2");
    check_field_offset(lv, v3, 6, "aUs_I_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_I_B(Test_aUs_I_B, "aUs_I_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Ip_B()
{
  {
    init_simple_test("aUs_Ip_B");
    aUs_Ip_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aUs_Ip_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Ip_B)");
    check_field_offset(lv, v1, 0, "aUs_Ip_B.v1");
    check_field_offset(lv, v2, 2, "aUs_Ip_B.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aUs_Ip_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_Ip_B(Test_aUs_Ip_B, "aUs_Ip_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_L_B()
{
  {
    init_simple_test("aUs_L_B");
    aUs_L_B lv;
    check2(sizeof(lv), 11, "sizeof(aUs_L_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_L_B)");
    check_field_offset(lv, v1, 0, "aUs_L_B.v1");
    check_field_offset(lv, v2, 2, "aUs_L_B.v2");
    check_field_offset(lv, v3, 10, "aUs_L_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_L_B(Test_aUs_L_B, "aUs_L_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_S_B()
{
  {
    init_simple_test("aUs_S_B");
    aUs_S_B lv;
    check2(sizeof(lv), 5, "sizeof(aUs_S_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_S_B)");
    check_field_offset(lv, v1, 0, "aUs_S_B.v1");
    check_field_offset(lv, v2, 2, "aUs_S_B.v2");
    check_field_offset(lv, v3, 4, "aUs_S_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_S_B(Test_aUs_S_B, "aUs_S_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Uc_B()
{
  {
    init_simple_test("aUs_Uc_B");
    aUs_Uc_B lv;
    check2(sizeof(lv), 4, "sizeof(aUs_Uc_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Uc_B)");
    check_field_offset(lv, v1, 0, "aUs_Uc_B.v1");
    check_field_offset(lv, v2, 2, "aUs_Uc_B.v2");
    check_field_offset(lv, v3, 3, "aUs_Uc_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_Uc_B(Test_aUs_Uc_B, "aUs_Uc_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Ui_B()
{
  {
    init_simple_test("aUs_Ui_B");
    aUs_Ui_B lv;
    check2(sizeof(lv), 7, "sizeof(aUs_Ui_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Ui_B)");
    check_field_offset(lv, v1, 0, "aUs_Ui_B.v1");
    check_field_offset(lv, v2, 2, "aUs_Ui_B.v2");
    check_field_offset(lv, v3, 6, "aUs_Ui_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_Ui_B(Test_aUs_Ui_B, "aUs_Ui_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Ul_B()
{
  {
    init_simple_test("aUs_Ul_B");
    aUs_Ul_B lv;
    check2(sizeof(lv), 11, "sizeof(aUs_Ul_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Ul_B)");
    check_field_offset(lv, v1, 0, "aUs_Ul_B.v1");
    check_field_offset(lv, v2, 2, "aUs_Ul_B.v2");
    check_field_offset(lv, v3, 10, "aUs_Ul_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_Ul_B(Test_aUs_Ul_B, "aUs_Ul_B", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Us_B()
{
  {
    init_simple_test("aUs_Us_B");
    aUs_Us_B lv;
    check2(sizeof(lv), 5, "sizeof(aUs_Us_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Us_B)");
    check_field_offset(lv, v1, 0, "aUs_Us_B.v1");
    check_field_offset(lv, v2, 2, "aUs_Us_B.v2");
    check_field_offset(lv, v3, 4, "aUs_Us_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_Us_B(Test_aUs_Us_B, "aUs_Us_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aUs_Vp_B()
{
  {
    init_simple_test("aUs_Vp_B");
    aUs_Vp_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aUs_Vp_B)");
    check2(__alignof__(lv), 1, "__alignof__(aUs_Vp_B)");
    check_field_offset(lv, v1, 0, "aUs_Vp_B.v1");
    check_field_offset(lv, v2, 2, "aUs_Vp_B.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aUs_Vp_B.v3");
  }
}
static Arrange_To_Call_Me vaUs_Vp_B(Test_aUs_Vp_B, "aUs_Vp_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B()
{
  {
    init_simple_test("aVp_B");
    aVp_B lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(aVp_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B)");
    check_field_offset(lv, v1, 0, "aVp_B.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B.v2");
  }
}
static Arrange_To_Call_Me vaVp_B(Test_aVp_B, "aVp_B", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_B()
{
  {
    init_simple_test("aVp_B_B");
    aVp_B_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_B_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_B)");
    check_field_offset(lv, v1, 0, "aVp_B_B.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_B.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_B_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_B_B(Test_aVp_B_B, "aVp_B_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_BFu15i()
{
  {
    init_simple_test("aVp_B_BFu15i");
    static aVp_B_BFu15i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_B_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_BFu15i)");
    check_field_offset(lv, v1, 0, "aVp_B_BFu15i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_BFu15i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 15, 1, "aVp_B_BFu15i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 15, hide_ull(1LL<<14), "aVp_B_BFu15i");
  }
}
static Arrange_To_Call_Me vaVp_B_BFu15i(Test_aVp_B_BFu15i, "aVp_B_BFu15i", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_BFu15ll()
{
  {
    init_simple_test("aVp_B_BFu15ll");
    static aVp_B_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_B_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_BFu15ll)");
    check_field_offset(lv, v1, 0, "aVp_B_BFu15ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_BFu15ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 15, 1, "aVp_B_BFu15ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 15, hide_ull(1LL<<14), "aVp_B_BFu15ll");
  }
}
static Arrange_To_Call_Me vaVp_B_BFu15ll(Test_aVp_B_BFu15ll, "aVp_B_BFu15ll", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_BFu15s()
{
  {
    init_simple_test("aVp_B_BFu15s");
    static aVp_B_BFu15s lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_B_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_BFu15s)");
    check_field_offset(lv, v1, 0, "aVp_B_BFu15s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_BFu15s.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 15, 1, "aVp_B_BFu15s");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 15, hide_ull(1LL<<14), "aVp_B_BFu15s");
  }
}
static Arrange_To_Call_Me vaVp_B_BFu15s(Test_aVp_B_BFu15s, "aVp_B_BFu15s", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_BFu16i()
{
  {
    init_simple_test("aVp_B_BFu16i");
    static aVp_B_BFu16i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_B_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_BFu16i)");
    check_field_offset(lv, v1, 0, "aVp_B_BFu16i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_BFu16i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 16, 1, "aVp_B_BFu16i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 16, hide_ull(1LL<<15), "aVp_B_BFu16i");
  }
}
static Arrange_To_Call_Me vaVp_B_BFu16i(Test_aVp_B_BFu16i, "aVp_B_BFu16i", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_BFu16ll()
{
  {
    init_simple_test("aVp_B_BFu16ll");
    static aVp_B_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_B_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_BFu16ll)");
    check_field_offset(lv, v1, 0, "aVp_B_BFu16ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_BFu16ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 16, 1, "aVp_B_BFu16ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 16, hide_ull(1LL<<15), "aVp_B_BFu16ll");
  }
}
static Arrange_To_Call_Me vaVp_B_BFu16ll(Test_aVp_B_BFu16ll, "aVp_B_BFu16ll", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_BFu16s()
{
  {
    init_simple_test("aVp_B_BFu16s");
    static aVp_B_BFu16s lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_B_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_BFu16s)");
    check_field_offset(lv, v1, 0, "aVp_B_BFu16s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_BFu16s.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 16, 1, "aVp_B_BFu16s");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 16, hide_ull(1LL<<15), "aVp_B_BFu16s");
  }
}
static Arrange_To_Call_Me vaVp_B_BFu16s(Test_aVp_B_BFu16s, "aVp_B_BFu16s", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_BFu17i()
{
  {
    init_simple_test("aVp_B_BFu17i");
    static aVp_B_BFu17i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aVp_B_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_BFu17i)");
    check_field_offset(lv, v1, 0, "aVp_B_BFu17i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_BFu17i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 17, 1, "aVp_B_BFu17i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 17, hide_ull(1LL<<16), "aVp_B_BFu17i");
  }
}
static Arrange_To_Call_Me vaVp_B_BFu17i(Test_aVp_B_BFu17i, "aVp_B_BFu17i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_BFu17ll()
{
  {
    init_simple_test("aVp_B_BFu17ll");
    static aVp_B_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aVp_B_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_BFu17ll)");
    check_field_offset(lv, v1, 0, "aVp_B_BFu17ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_BFu17ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 17, 1, "aVp_B_BFu17ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 17, hide_ull(1LL<<16), "aVp_B_BFu17ll");
  }
}
static Arrange_To_Call_Me vaVp_B_BFu17ll(Test_aVp_B_BFu17ll, "aVp_B_BFu17ll", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_BFu1c()
{
  {
    init_simple_test("aVp_B_BFu1c");
    static aVp_B_BFu1c lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_B_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_BFu1c)");
    check_field_offset(lv, v1, 0, "aVp_B_BFu1c.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_BFu1c.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 1, 1, "aVp_B_BFu1c");
  }
}
static Arrange_To_Call_Me vaVp_B_BFu1c(Test_aVp_B_BFu1c, "aVp_B_BFu1c", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_BFu1i()
{
  {
    init_simple_test("aVp_B_BFu1i");
    static aVp_B_BFu1i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_B_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_BFu1i)");
    check_field_offset(lv, v1, 0, "aVp_B_BFu1i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_BFu1i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 1, 1, "aVp_B_BFu1i");
  }
}
static Arrange_To_Call_Me vaVp_B_BFu1i(Test_aVp_B_BFu1i, "aVp_B_BFu1i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_BFu1ll()
{
  {
    init_simple_test("aVp_B_BFu1ll");
    static aVp_B_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_B_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_BFu1ll)");
    check_field_offset(lv, v1, 0, "aVp_B_BFu1ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_BFu1ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 1, 1, "aVp_B_BFu1ll");
  }
}
static Arrange_To_Call_Me vaVp_B_BFu1ll(Test_aVp_B_BFu1ll, "aVp_B_BFu1ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_BFu1s()
{
  {
    init_simple_test("aVp_B_BFu1s");
    static aVp_B_BFu1s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_B_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_BFu1s)");
    check_field_offset(lv, v1, 0, "aVp_B_BFu1s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_BFu1s.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 1, 1, "aVp_B_BFu1s");
  }
}
static Arrange_To_Call_Me vaVp_B_BFu1s(Test_aVp_B_BFu1s, "aVp_B_BFu1s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_BFu31i()
{
  {
    init_simple_test("aVp_B_BFu31i");
    static aVp_B_BFu31i lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aVp_B_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_BFu31i)");
    check_field_offset(lv, v1, 0, "aVp_B_BFu31i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_BFu31i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 31, 1, "aVp_B_BFu31i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 31, hide_ull(1LL<<30), "aVp_B_BFu31i");
  }
}
static Arrange_To_Call_Me vaVp_B_BFu31i(Test_aVp_B_BFu31i, "aVp_B_BFu31i", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_BFu31ll()
{
  {
    init_simple_test("aVp_B_BFu31ll");
    static aVp_B_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aVp_B_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_BFu31ll)");
    check_field_offset(lv, v1, 0, "aVp_B_BFu31ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_BFu31ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 31, 1, "aVp_B_BFu31ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 31, hide_ull(1LL<<30), "aVp_B_BFu31ll");
  }
}
static Arrange_To_Call_Me vaVp_B_BFu31ll(Test_aVp_B_BFu31ll, "aVp_B_BFu31ll", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_BFu32i()
{
  {
    init_simple_test("aVp_B_BFu32i");
    static aVp_B_BFu32i lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aVp_B_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_BFu32i)");
    check_field_offset(lv, v1, 0, "aVp_B_BFu32i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_BFu32i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 32, 1, "aVp_B_BFu32i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 32, hide_ull(1LL<<31), "aVp_B_BFu32i");
  }
}
static Arrange_To_Call_Me vaVp_B_BFu32i(Test_aVp_B_BFu32i, "aVp_B_BFu32i", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_BFu32ll()
{
  {
    init_simple_test("aVp_B_BFu32ll");
    static aVp_B_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aVp_B_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_BFu32ll)");
    check_field_offset(lv, v1, 0, "aVp_B_BFu32ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_BFu32ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 32, 1, "aVp_B_BFu32ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 32, hide_ull(1LL<<31), "aVp_B_BFu32ll");
  }
}
static Arrange_To_Call_Me vaVp_B_BFu32ll(Test_aVp_B_BFu32ll, "aVp_B_BFu32ll", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_BFu33()
{
  {
    init_simple_test("aVp_B_BFu33");
    static aVp_B_BFu33 lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aVp_B_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_BFu33)");
    check_field_offset(lv, v1, 0, "aVp_B_BFu33.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_BFu33.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 33, 1, "aVp_B_BFu33");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 33, hide_ull(1LL<<32), "aVp_B_BFu33");
  }
}
static Arrange_To_Call_Me vaVp_B_BFu33(Test_aVp_B_BFu33, "aVp_B_BFu33", ABISELECT(14,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_BFu7c()
{
  {
    init_simple_test("aVp_B_BFu7c");
    static aVp_B_BFu7c lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_B_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_BFu7c)");
    check_field_offset(lv, v1, 0, "aVp_B_BFu7c.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_BFu7c.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, 1, "aVp_B_BFu7c");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, hide_ull(1LL<<6), "aVp_B_BFu7c");
  }
}
static Arrange_To_Call_Me vaVp_B_BFu7c(Test_aVp_B_BFu7c, "aVp_B_BFu7c", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_BFu7i()
{
  {
    init_simple_test("aVp_B_BFu7i");
    static aVp_B_BFu7i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_B_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_BFu7i)");
    check_field_offset(lv, v1, 0, "aVp_B_BFu7i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_BFu7i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, 1, "aVp_B_BFu7i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, hide_ull(1LL<<6), "aVp_B_BFu7i");
  }
}
static Arrange_To_Call_Me vaVp_B_BFu7i(Test_aVp_B_BFu7i, "aVp_B_BFu7i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_BFu7ll()
{
  {
    init_simple_test("aVp_B_BFu7ll");
    static aVp_B_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_B_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_BFu7ll)");
    check_field_offset(lv, v1, 0, "aVp_B_BFu7ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_BFu7ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, 1, "aVp_B_BFu7ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, hide_ull(1LL<<6), "aVp_B_BFu7ll");
  }
}
static Arrange_To_Call_Me vaVp_B_BFu7ll(Test_aVp_B_BFu7ll, "aVp_B_BFu7ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_BFu7s()
{
  {
    init_simple_test("aVp_B_BFu7s");
    static aVp_B_BFu7s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_B_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_BFu7s)");
    check_field_offset(lv, v1, 0, "aVp_B_BFu7s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_BFu7s.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, 1, "aVp_B_BFu7s");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 7, hide_ull(1LL<<6), "aVp_B_BFu7s");
  }
}
static Arrange_To_Call_Me vaVp_B_BFu7s(Test_aVp_B_BFu7s, "aVp_B_BFu7s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_BFu8c()
{
  {
    init_simple_test("aVp_B_BFu8c");
    static aVp_B_BFu8c lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_B_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_BFu8c)");
    check_field_offset(lv, v1, 0, "aVp_B_BFu8c.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_BFu8c.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, 1, "aVp_B_BFu8c");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, hide_ull(1LL<<7), "aVp_B_BFu8c");
  }
}
static Arrange_To_Call_Me vaVp_B_BFu8c(Test_aVp_B_BFu8c, "aVp_B_BFu8c", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_BFu8i()
{
  {
    init_simple_test("aVp_B_BFu8i");
    static aVp_B_BFu8i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_B_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_BFu8i)");
    check_field_offset(lv, v1, 0, "aVp_B_BFu8i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_BFu8i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, 1, "aVp_B_BFu8i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, hide_ull(1LL<<7), "aVp_B_BFu8i");
  }
}
static Arrange_To_Call_Me vaVp_B_BFu8i(Test_aVp_B_BFu8i, "aVp_B_BFu8i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_BFu8ll()
{
  {
    init_simple_test("aVp_B_BFu8ll");
    static aVp_B_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_B_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_BFu8ll)");
    check_field_offset(lv, v1, 0, "aVp_B_BFu8ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_BFu8ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, 1, "aVp_B_BFu8ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, hide_ull(1LL<<7), "aVp_B_BFu8ll");
  }
}
static Arrange_To_Call_Me vaVp_B_BFu8ll(Test_aVp_B_BFu8ll, "aVp_B_BFu8ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_BFu8s()
{
  {
    init_simple_test("aVp_B_BFu8s");
    static aVp_B_BFu8s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_B_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_BFu8s)");
    check_field_offset(lv, v1, 0, "aVp_B_BFu8s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_BFu8s.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, 1, "aVp_B_BFu8s");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 8, hide_ull(1LL<<7), "aVp_B_BFu8s");
  }
}
static Arrange_To_Call_Me vaVp_B_BFu8s(Test_aVp_B_BFu8s, "aVp_B_BFu8s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_BFu9i()
{
  {
    init_simple_test("aVp_B_BFu9i");
    static aVp_B_BFu9i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_B_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_BFu9i)");
    check_field_offset(lv, v1, 0, "aVp_B_BFu9i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_BFu9i.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 9, 1, "aVp_B_BFu9i");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 9, hide_ull(1LL<<8), "aVp_B_BFu9i");
  }
}
static Arrange_To_Call_Me vaVp_B_BFu9i(Test_aVp_B_BFu9i, "aVp_B_BFu9i", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_BFu9ll()
{
  {
    init_simple_test("aVp_B_BFu9ll");
    static aVp_B_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_B_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_BFu9ll)");
    check_field_offset(lv, v1, 0, "aVp_B_BFu9ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_BFu9ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 9, 1, "aVp_B_BFu9ll");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 9, hide_ull(1LL<<8), "aVp_B_BFu9ll");
  }
}
static Arrange_To_Call_Me vaVp_B_BFu9ll(Test_aVp_B_BFu9ll, "aVp_B_BFu9ll", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_BFu9s()
{
  {
    init_simple_test("aVp_B_BFu9s");
    static aVp_B_BFu9s lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_B_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_BFu9s)");
    check_field_offset(lv, v1, 0, "aVp_B_BFu9s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_BFu9s.v2");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 9, 1, "aVp_B_BFu9s");
    set_bf_and_test(lv, v3, ABISELECT(9,5), 0, 9, hide_ull(1LL<<8), "aVp_B_BFu9s");
  }
}
static Arrange_To_Call_Me vaVp_B_BFu9s(Test_aVp_B_BFu9s, "aVp_B_BFu9s", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_C()
{
  {
    init_simple_test("aVp_B_C");
    aVp_B_C lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_B_C)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_C)");
    check_field_offset(lv, v1, 0, "aVp_B_C.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_C.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_B_C.v3");
  }
}
static Arrange_To_Call_Me vaVp_B_C(Test_aVp_B_C, "aVp_B_C", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_D()
{
  {
    init_simple_test("aVp_B_D");
    aVp_B_D lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aVp_B_D)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_D)");
    check_field_offset(lv, v1, 0, "aVp_B_D.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_D.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_B_D.v3");
  }
}
static Arrange_To_Call_Me vaVp_B_D(Test_aVp_B_D, "aVp_B_D", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_F()
{
  {
    init_simple_test("aVp_B_F");
    aVp_B_F lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aVp_B_F)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_F)");
    check_field_offset(lv, v1, 0, "aVp_B_F.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_F.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_B_F.v3");
  }
}
static Arrange_To_Call_Me vaVp_B_F(Test_aVp_B_F, "aVp_B_F", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_I()
{
  {
    init_simple_test("aVp_B_I");
    aVp_B_I lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aVp_B_I)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_I)");
    check_field_offset(lv, v1, 0, "aVp_B_I.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_I.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_B_I.v3");
  }
}
static Arrange_To_Call_Me vaVp_B_I(Test_aVp_B_I, "aVp_B_I", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_Ip()
{
  {
    init_simple_test("aVp_B_Ip");
    aVp_B_Ip lv;
    check2(sizeof(lv), ABISELECT(17,9), "sizeof(aVp_B_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_Ip)");
    check_field_offset(lv, v1, 0, "aVp_B_Ip.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_Ip.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_B_Ip.v3");
  }
}
static Arrange_To_Call_Me vaVp_B_Ip(Test_aVp_B_Ip, "aVp_B_Ip", ABISELECT(17,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_L()
{
  {
    init_simple_test("aVp_B_L");
    aVp_B_L lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aVp_B_L)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_L)");
    check_field_offset(lv, v1, 0, "aVp_B_L.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_L.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_B_L.v3");
  }
}
static Arrange_To_Call_Me vaVp_B_L(Test_aVp_B_L, "aVp_B_L", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_S()
{
  {
    init_simple_test("aVp_B_S");
    aVp_B_S lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_B_S)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_S)");
    check_field_offset(lv, v1, 0, "aVp_B_S.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_S.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_B_S.v3");
  }
}
static Arrange_To_Call_Me vaVp_B_S(Test_aVp_B_S, "aVp_B_S", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_Uc()
{
  {
    init_simple_test("aVp_B_Uc");
    aVp_B_Uc lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_B_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_Uc)");
    check_field_offset(lv, v1, 0, "aVp_B_Uc.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_Uc.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_B_Uc.v3");
  }
}
static Arrange_To_Call_Me vaVp_B_Uc(Test_aVp_B_Uc, "aVp_B_Uc", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_Ui()
{
  {
    init_simple_test("aVp_B_Ui");
    aVp_B_Ui lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aVp_B_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_Ui)");
    check_field_offset(lv, v1, 0, "aVp_B_Ui.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_Ui.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_B_Ui.v3");
  }
}
static Arrange_To_Call_Me vaVp_B_Ui(Test_aVp_B_Ui, "aVp_B_Ui", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_Ul()
{
  {
    init_simple_test("aVp_B_Ul");
    aVp_B_Ul lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aVp_B_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_Ul)");
    check_field_offset(lv, v1, 0, "aVp_B_Ul.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_Ul.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_B_Ul.v3");
  }
}
static Arrange_To_Call_Me vaVp_B_Ul(Test_aVp_B_Ul, "aVp_B_Ul", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_Us()
{
  {
    init_simple_test("aVp_B_Us");
    aVp_B_Us lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_B_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_Us)");
    check_field_offset(lv, v1, 0, "aVp_B_Us.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_Us.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_B_Us.v3");
  }
}
static Arrange_To_Call_Me vaVp_B_Us(Test_aVp_B_Us, "aVp_B_Us", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_B_Vp()
{
  {
    init_simple_test("aVp_B_Vp");
    aVp_B_Vp lv;
    check2(sizeof(lv), ABISELECT(17,9), "sizeof(aVp_B_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_B_Vp)");
    check_field_offset(lv, v1, 0, "aVp_B_Vp.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_B_Vp.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_B_Vp.v3");
  }
}
static Arrange_To_Call_Me vaVp_B_Vp(Test_aVp_B_Vp, "aVp_B_Vp", ABISELECT(17,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu15i_B()
{
  {
    init_simple_test("aVp_BFu15i_B");
    static aVp_BFu15i_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_BFu15i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu15i_B)");
    check_field_offset(lv, v1, 0, "aVp_BFu15i_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "aVp_BFu15i_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "aVp_BFu15i_B");
    check_field_offset(lv, v3, ABISELECT(10,6), "aVp_BFu15i_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu15i_B(Test_aVp_BFu15i_B, "aVp_BFu15i_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu15ll_B()
{
  {
    init_simple_test("aVp_BFu15ll_B");
    static aVp_BFu15ll_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_BFu15ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu15ll_B)");
    check_field_offset(lv, v1, 0, "aVp_BFu15ll_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "aVp_BFu15ll_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "aVp_BFu15ll_B");
    check_field_offset(lv, v3, ABISELECT(10,6), "aVp_BFu15ll_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu15ll_B(Test_aVp_BFu15ll_B, "aVp_BFu15ll_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu15s_B()
{
  {
    init_simple_test("aVp_BFu15s_B");
    static aVp_BFu15s_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_BFu15s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu15s_B)");
    check_field_offset(lv, v1, 0, "aVp_BFu15s_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "aVp_BFu15s_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "aVp_BFu15s_B");
    check_field_offset(lv, v3, ABISELECT(10,6), "aVp_BFu15s_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu15s_B(Test_aVp_BFu15s_B, "aVp_BFu15s_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu16i_B()
{
  {
    init_simple_test("aVp_BFu16i_B");
    static aVp_BFu16i_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_BFu16i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu16i_B)");
    check_field_offset(lv, v1, 0, "aVp_BFu16i_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "aVp_BFu16i_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "aVp_BFu16i_B");
    check_field_offset(lv, v3, ABISELECT(10,6), "aVp_BFu16i_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu16i_B(Test_aVp_BFu16i_B, "aVp_BFu16i_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu16ll_B()
{
  {
    init_simple_test("aVp_BFu16ll_B");
    static aVp_BFu16ll_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_BFu16ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu16ll_B)");
    check_field_offset(lv, v1, 0, "aVp_BFu16ll_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "aVp_BFu16ll_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "aVp_BFu16ll_B");
    check_field_offset(lv, v3, ABISELECT(10,6), "aVp_BFu16ll_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu16ll_B(Test_aVp_BFu16ll_B, "aVp_BFu16ll_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu16s_B()
{
  {
    init_simple_test("aVp_BFu16s_B");
    static aVp_BFu16s_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_BFu16s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu16s_B)");
    check_field_offset(lv, v1, 0, "aVp_BFu16s_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "aVp_BFu16s_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "aVp_BFu16s_B");
    check_field_offset(lv, v3, ABISELECT(10,6), "aVp_BFu16s_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu16s_B(Test_aVp_BFu16s_B, "aVp_BFu16s_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu17i_B()
{
  {
    init_simple_test("aVp_BFu17i_B");
    static aVp_BFu17i_B lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aVp_BFu17i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu17i_B)");
    check_field_offset(lv, v1, 0, "aVp_BFu17i_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "aVp_BFu17i_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "aVp_BFu17i_B");
    check_field_offset(lv, v3, ABISELECT(11,7), "aVp_BFu17i_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu17i_B(Test_aVp_BFu17i_B, "aVp_BFu17i_B", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu17ll_B()
{
  {
    init_simple_test("aVp_BFu17ll_B");
    static aVp_BFu17ll_B lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aVp_BFu17ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu17ll_B)");
    check_field_offset(lv, v1, 0, "aVp_BFu17ll_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "aVp_BFu17ll_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "aVp_BFu17ll_B");
    check_field_offset(lv, v3, ABISELECT(11,7), "aVp_BFu17ll_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu17ll_B(Test_aVp_BFu17ll_B, "aVp_BFu17ll_B", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu1c_B()
{
  {
    init_simple_test("aVp_BFu1c_B");
    static aVp_BFu1c_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_BFu1c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu1c_B)");
    check_field_offset(lv, v1, 0, "aVp_BFu1c_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "aVp_BFu1c_B");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_BFu1c_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu1c_B(Test_aVp_BFu1c_B, "aVp_BFu1c_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu1i_B()
{
  {
    init_simple_test("aVp_BFu1i_B");
    static aVp_BFu1i_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_BFu1i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu1i_B)");
    check_field_offset(lv, v1, 0, "aVp_BFu1i_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "aVp_BFu1i_B");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_BFu1i_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu1i_B(Test_aVp_BFu1i_B, "aVp_BFu1i_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu1ll_B()
{
  {
    init_simple_test("aVp_BFu1ll_B");
    static aVp_BFu1ll_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_BFu1ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu1ll_B)");
    check_field_offset(lv, v1, 0, "aVp_BFu1ll_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "aVp_BFu1ll_B");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_BFu1ll_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu1ll_B(Test_aVp_BFu1ll_B, "aVp_BFu1ll_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu1s_B()
{
  {
    init_simple_test("aVp_BFu1s_B");
    static aVp_BFu1s_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_BFu1s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu1s_B)");
    check_field_offset(lv, v1, 0, "aVp_BFu1s_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "aVp_BFu1s_B");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_BFu1s_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu1s_B(Test_aVp_BFu1s_B, "aVp_BFu1s_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu31i_B()
{
  {
    init_simple_test("aVp_BFu31i_B");
    static aVp_BFu31i_B lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aVp_BFu31i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu31i_B)");
    check_field_offset(lv, v1, 0, "aVp_BFu31i_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "aVp_BFu31i_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "aVp_BFu31i_B");
    check_field_offset(lv, v3, ABISELECT(12,8), "aVp_BFu31i_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu31i_B(Test_aVp_BFu31i_B, "aVp_BFu31i_B", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu31ll_B()
{
  {
    init_simple_test("aVp_BFu31ll_B");
    static aVp_BFu31ll_B lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aVp_BFu31ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu31ll_B)");
    check_field_offset(lv, v1, 0, "aVp_BFu31ll_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "aVp_BFu31ll_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "aVp_BFu31ll_B");
    check_field_offset(lv, v3, ABISELECT(12,8), "aVp_BFu31ll_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu31ll_B(Test_aVp_BFu31ll_B, "aVp_BFu31ll_B", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu32i_B()
{
  {
    init_simple_test("aVp_BFu32i_B");
    static aVp_BFu32i_B lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aVp_BFu32i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu32i_B)");
    check_field_offset(lv, v1, 0, "aVp_BFu32i_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "aVp_BFu32i_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "aVp_BFu32i_B");
    check_field_offset(lv, v3, ABISELECT(12,8), "aVp_BFu32i_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu32i_B(Test_aVp_BFu32i_B, "aVp_BFu32i_B", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu32ll_B()
{
  {
    init_simple_test("aVp_BFu32ll_B");
    static aVp_BFu32ll_B lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aVp_BFu32ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu32ll_B)");
    check_field_offset(lv, v1, 0, "aVp_BFu32ll_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "aVp_BFu32ll_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "aVp_BFu32ll_B");
    check_field_offset(lv, v3, ABISELECT(12,8), "aVp_BFu32ll_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu32ll_B(Test_aVp_BFu32ll_B, "aVp_BFu32ll_B", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu33_B()
{
  {
    init_simple_test("aVp_BFu33_B");
    static aVp_BFu33_B lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aVp_BFu33_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu33_B)");
    check_field_offset(lv, v1, 0, "aVp_BFu33_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, 1, "aVp_BFu33_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, hide_ull(1LL<<32), "aVp_BFu33_B");
    check_field_offset(lv, v3, ABISELECT(13,9), "aVp_BFu33_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu33_B(Test_aVp_BFu33_B, "aVp_BFu33_B", ABISELECT(14,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu7c_B()
{
  {
    init_simple_test("aVp_BFu7c_B");
    static aVp_BFu7c_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_BFu7c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu7c_B)");
    check_field_offset(lv, v1, 0, "aVp_BFu7c_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "aVp_BFu7c_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "aVp_BFu7c_B");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_BFu7c_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu7c_B(Test_aVp_BFu7c_B, "aVp_BFu7c_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu7i_B()
{
  {
    init_simple_test("aVp_BFu7i_B");
    static aVp_BFu7i_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_BFu7i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu7i_B)");
    check_field_offset(lv, v1, 0, "aVp_BFu7i_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "aVp_BFu7i_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "aVp_BFu7i_B");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_BFu7i_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu7i_B(Test_aVp_BFu7i_B, "aVp_BFu7i_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu7ll_B()
{
  {
    init_simple_test("aVp_BFu7ll_B");
    static aVp_BFu7ll_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_BFu7ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu7ll_B)");
    check_field_offset(lv, v1, 0, "aVp_BFu7ll_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "aVp_BFu7ll_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "aVp_BFu7ll_B");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_BFu7ll_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu7ll_B(Test_aVp_BFu7ll_B, "aVp_BFu7ll_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu7s_B()
{
  {
    init_simple_test("aVp_BFu7s_B");
    static aVp_BFu7s_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_BFu7s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu7s_B)");
    check_field_offset(lv, v1, 0, "aVp_BFu7s_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "aVp_BFu7s_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "aVp_BFu7s_B");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_BFu7s_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu7s_B(Test_aVp_BFu7s_B, "aVp_BFu7s_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu8c_B()
{
  {
    init_simple_test("aVp_BFu8c_B");
    static aVp_BFu8c_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_BFu8c_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu8c_B)");
    check_field_offset(lv, v1, 0, "aVp_BFu8c_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "aVp_BFu8c_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "aVp_BFu8c_B");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_BFu8c_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu8c_B(Test_aVp_BFu8c_B, "aVp_BFu8c_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu8i_B()
{
  {
    init_simple_test("aVp_BFu8i_B");
    static aVp_BFu8i_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_BFu8i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu8i_B)");
    check_field_offset(lv, v1, 0, "aVp_BFu8i_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "aVp_BFu8i_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "aVp_BFu8i_B");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_BFu8i_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu8i_B(Test_aVp_BFu8i_B, "aVp_BFu8i_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu8ll_B()
{
  {
    init_simple_test("aVp_BFu8ll_B");
    static aVp_BFu8ll_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_BFu8ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu8ll_B)");
    check_field_offset(lv, v1, 0, "aVp_BFu8ll_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "aVp_BFu8ll_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "aVp_BFu8ll_B");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_BFu8ll_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu8ll_B(Test_aVp_BFu8ll_B, "aVp_BFu8ll_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu8s_B()
{
  {
    init_simple_test("aVp_BFu8s_B");
    static aVp_BFu8s_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_BFu8s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu8s_B)");
    check_field_offset(lv, v1, 0, "aVp_BFu8s_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "aVp_BFu8s_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "aVp_BFu8s_B");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_BFu8s_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu8s_B(Test_aVp_BFu8s_B, "aVp_BFu8s_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu9i_B()
{
  {
    init_simple_test("aVp_BFu9i_B");
    static aVp_BFu9i_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_BFu9i_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu9i_B)");
    check_field_offset(lv, v1, 0, "aVp_BFu9i_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "aVp_BFu9i_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "aVp_BFu9i_B");
    check_field_offset(lv, v3, ABISELECT(10,6), "aVp_BFu9i_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu9i_B(Test_aVp_BFu9i_B, "aVp_BFu9i_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu9ll_B()
{
  {
    init_simple_test("aVp_BFu9ll_B");
    static aVp_BFu9ll_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_BFu9ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu9ll_B)");
    check_field_offset(lv, v1, 0, "aVp_BFu9ll_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "aVp_BFu9ll_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "aVp_BFu9ll_B");
    check_field_offset(lv, v3, ABISELECT(10,6), "aVp_BFu9ll_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu9ll_B(Test_aVp_BFu9ll_B, "aVp_BFu9ll_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_BFu9s_B()
{
  {
    init_simple_test("aVp_BFu9s_B");
    static aVp_BFu9s_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_BFu9s_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_BFu9s_B)");
    check_field_offset(lv, v1, 0, "aVp_BFu9s_B.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "aVp_BFu9s_B");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "aVp_BFu9s_B");
    check_field_offset(lv, v3, ABISELECT(10,6), "aVp_BFu9s_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_BFu9s_B(Test_aVp_BFu9s_B, "aVp_BFu9s_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_C_B()
{
  {
    init_simple_test("aVp_C_B");
    aVp_C_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_C_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_C_B)");
    check_field_offset(lv, v1, 0, "aVp_C_B.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_C_B.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_C_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_C_B(Test_aVp_C_B, "aVp_C_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_D_B()
{
  {
    init_simple_test("aVp_D_B");
    aVp_D_B lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aVp_D_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_D_B)");
    check_field_offset(lv, v1, 0, "aVp_D_B.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_D_B.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "aVp_D_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_D_B(Test_aVp_D_B, "aVp_D_B", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_F_B()
{
  {
    init_simple_test("aVp_F_B");
    aVp_F_B lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aVp_F_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_F_B)");
    check_field_offset(lv, v1, 0, "aVp_F_B.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_F_B.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "aVp_F_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_F_B(Test_aVp_F_B, "aVp_F_B", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_I_B()
{
  {
    init_simple_test("aVp_I_B");
    aVp_I_B lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aVp_I_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_I_B)");
    check_field_offset(lv, v1, 0, "aVp_I_B.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_I_B.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "aVp_I_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_I_B(Test_aVp_I_B, "aVp_I_B", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Ip_B()
{
  {
    init_simple_test("aVp_Ip_B");
    aVp_Ip_B lv;
    check2(sizeof(lv), ABISELECT(17,9), "sizeof(aVp_Ip_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Ip_B)");
    check_field_offset(lv, v1, 0, "aVp_Ip_B.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Ip_B.v2");
    check_field_offset(lv, v3, ABISELECT(16,8), "aVp_Ip_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_Ip_B(Test_aVp_Ip_B, "aVp_Ip_B", ABISELECT(17,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_L_B()
{
  {
    init_simple_test("aVp_L_B");
    aVp_L_B lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aVp_L_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_L_B)");
    check_field_offset(lv, v1, 0, "aVp_L_B.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_L_B.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "aVp_L_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_L_B(Test_aVp_L_B, "aVp_L_B", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_S_B()
{
  {
    init_simple_test("aVp_S_B");
    aVp_S_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_S_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_S_B)");
    check_field_offset(lv, v1, 0, "aVp_S_B.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_S_B.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aVp_S_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_S_B(Test_aVp_S_B, "aVp_S_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Uc_B()
{
  {
    init_simple_test("aVp_Uc_B");
    aVp_Uc_B lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aVp_Uc_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Uc_B)");
    check_field_offset(lv, v1, 0, "aVp_Uc_B.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Uc_B.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "aVp_Uc_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_Uc_B(Test_aVp_Uc_B, "aVp_Uc_B", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Ui_B()
{
  {
    init_simple_test("aVp_Ui_B");
    aVp_Ui_B lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aVp_Ui_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Ui_B)");
    check_field_offset(lv, v1, 0, "aVp_Ui_B.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Ui_B.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "aVp_Ui_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_Ui_B(Test_aVp_Ui_B, "aVp_Ui_B", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Ul_B()
{
  {
    init_simple_test("aVp_Ul_B");
    aVp_Ul_B lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aVp_Ul_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Ul_B)");
    check_field_offset(lv, v1, 0, "aVp_Ul_B.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Ul_B.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "aVp_Ul_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_Ul_B(Test_aVp_Ul_B, "aVp_Ul_B", ABISELECT(17,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Us_B()
{
  {
    init_simple_test("aVp_Us_B");
    aVp_Us_B lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aVp_Us_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Us_B)");
    check_field_offset(lv, v1, 0, "aVp_Us_B.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Us_B.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aVp_Us_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_Us_B(Test_aVp_Us_B, "aVp_Us_B", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_aVp_Vp_B()
{
  {
    init_simple_test("aVp_Vp_B");
    aVp_Vp_B lv;
    check2(sizeof(lv), ABISELECT(17,9), "sizeof(aVp_Vp_B)");
    check2(__alignof__(lv), 1, "__alignof__(aVp_Vp_B)");
    check_field_offset(lv, v1, 0, "aVp_Vp_B.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "aVp_Vp_B.v2");
    check_field_offset(lv, v3, ABISELECT(16,8), "aVp_Vp_B.v3");
  }
}
static Arrange_To_Call_Me vaVp_Vp_B(Test_aVp_Vp_B, "aVp_Vp_B", ABISELECT(17,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B()
{
  {
    init_simple_test("B");
    B lv;
    check2(sizeof(lv), 1, "sizeof(B)");
    check2(__alignof__(lv), 1, "__alignof__(B)");
    check_field_offset(lv, v1, 0, "B.v1");
  }
}
static Arrange_To_Call_Me vB(Test_B, "B", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B()
{
  {
    init_simple_test("B_B");
    B_B lv;
    check2(sizeof(lv), 2, "sizeof(B_B)");
    check2(__alignof__(lv), 1, "__alignof__(B_B)");
    check_field_offset(lv, v1, 0, "B_B.v1");
    check_field_offset(lv, v2, 1, "B_B.v2");
  }
}
static Arrange_To_Call_Me vB_B(Test_B_B, "B_B", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_B()
{
  {
    init_simple_test("B_B_B");
    B_B_B lv;
    check2(sizeof(lv), 3, "sizeof(B_B_B)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_B)");
    check_field_offset(lv, v1, 0, "B_B_B.v1");
    check_field_offset(lv, v2, 1, "B_B_B.v2");
    check_field_offset(lv, v3, 2, "B_B_B.v3");
  }
}
static Arrange_To_Call_Me vB_B_B(Test_B_B_B, "B_B_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_BFu15i()
{
  {
    init_simple_test("B_B_BFu15i");
    static B_B_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(B_B_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_BFu15i)");
    check_field_offset(lv, v1, 0, "B_B_BFu15i.v1");
    check_field_offset(lv, v2, 1, "B_B_BFu15i.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "B_B_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "B_B_BFu15i");
  }
}
static Arrange_To_Call_Me vB_B_BFu15i(Test_B_B_BFu15i, "B_B_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_BFu15ll()
{
  {
    init_simple_test("B_B_BFu15ll");
    static B_B_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(B_B_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_BFu15ll)");
    check_field_offset(lv, v1, 0, "B_B_BFu15ll.v1");
    check_field_offset(lv, v2, 1, "B_B_BFu15ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "B_B_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "B_B_BFu15ll");
  }
}
static Arrange_To_Call_Me vB_B_BFu15ll(Test_B_B_BFu15ll, "B_B_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_BFu15s()
{
  {
    init_simple_test("B_B_BFu15s");
    static B_B_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(B_B_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_BFu15s)");
    check_field_offset(lv, v1, 0, "B_B_BFu15s.v1");
    check_field_offset(lv, v2, 1, "B_B_BFu15s.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "B_B_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "B_B_BFu15s");
  }
}
static Arrange_To_Call_Me vB_B_BFu15s(Test_B_B_BFu15s, "B_B_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_BFu16i()
{
  {
    init_simple_test("B_B_BFu16i");
    static B_B_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(B_B_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_BFu16i)");
    check_field_offset(lv, v1, 0, "B_B_BFu16i.v1");
    check_field_offset(lv, v2, 1, "B_B_BFu16i.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "B_B_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "B_B_BFu16i");
  }
}
static Arrange_To_Call_Me vB_B_BFu16i(Test_B_B_BFu16i, "B_B_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_BFu16ll()
{
  {
    init_simple_test("B_B_BFu16ll");
    static B_B_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(B_B_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_BFu16ll)");
    check_field_offset(lv, v1, 0, "B_B_BFu16ll.v1");
    check_field_offset(lv, v2, 1, "B_B_BFu16ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "B_B_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "B_B_BFu16ll");
  }
}
static Arrange_To_Call_Me vB_B_BFu16ll(Test_B_B_BFu16ll, "B_B_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_BFu16s()
{
  {
    init_simple_test("B_B_BFu16s");
    static B_B_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(B_B_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_BFu16s)");
    check_field_offset(lv, v1, 0, "B_B_BFu16s.v1");
    check_field_offset(lv, v2, 1, "B_B_BFu16s.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "B_B_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "B_B_BFu16s");
  }
}
static Arrange_To_Call_Me vB_B_BFu16s(Test_B_B_BFu16s, "B_B_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_BFu17i()
{
  {
    init_simple_test("B_B_BFu17i");
    static B_B_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(B_B_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_BFu17i)");
    check_field_offset(lv, v1, 0, "B_B_BFu17i.v1");
    check_field_offset(lv, v2, 1, "B_B_BFu17i.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "B_B_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "B_B_BFu17i");
  }
}
static Arrange_To_Call_Me vB_B_BFu17i(Test_B_B_BFu17i, "B_B_BFu17i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_BFu17ll()
{
  {
    init_simple_test("B_B_BFu17ll");
    static B_B_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(B_B_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_BFu17ll)");
    check_field_offset(lv, v1, 0, "B_B_BFu17ll.v1");
    check_field_offset(lv, v2, 1, "B_B_BFu17ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "B_B_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "B_B_BFu17ll");
  }
}
static Arrange_To_Call_Me vB_B_BFu17ll(Test_B_B_BFu17ll, "B_B_BFu17ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_BFu1c()
{
  {
    init_simple_test("B_B_BFu1c");
    static B_B_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(B_B_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_BFu1c)");
    check_field_offset(lv, v1, 0, "B_B_BFu1c.v1");
    check_field_offset(lv, v2, 1, "B_B_BFu1c.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "B_B_BFu1c");
  }
}
static Arrange_To_Call_Me vB_B_BFu1c(Test_B_B_BFu1c, "B_B_BFu1c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_BFu1i()
{
  {
    init_simple_test("B_B_BFu1i");
    static B_B_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(B_B_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_BFu1i)");
    check_field_offset(lv, v1, 0, "B_B_BFu1i.v1");
    check_field_offset(lv, v2, 1, "B_B_BFu1i.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "B_B_BFu1i");
  }
}
static Arrange_To_Call_Me vB_B_BFu1i(Test_B_B_BFu1i, "B_B_BFu1i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_BFu1ll()
{
  {
    init_simple_test("B_B_BFu1ll");
    static B_B_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(B_B_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_BFu1ll)");
    check_field_offset(lv, v1, 0, "B_B_BFu1ll.v1");
    check_field_offset(lv, v2, 1, "B_B_BFu1ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "B_B_BFu1ll");
  }
}
static Arrange_To_Call_Me vB_B_BFu1ll(Test_B_B_BFu1ll, "B_B_BFu1ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_BFu1s()
{
  {
    init_simple_test("B_B_BFu1s");
    static B_B_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(B_B_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_BFu1s)");
    check_field_offset(lv, v1, 0, "B_B_BFu1s.v1");
    check_field_offset(lv, v2, 1, "B_B_BFu1s.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "B_B_BFu1s");
  }
}
static Arrange_To_Call_Me vB_B_BFu1s(Test_B_B_BFu1s, "B_B_BFu1s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_BFu31i()
{
  {
    init_simple_test("B_B_BFu31i");
    static B_B_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(B_B_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_BFu31i)");
    check_field_offset(lv, v1, 0, "B_B_BFu31i.v1");
    check_field_offset(lv, v2, 1, "B_B_BFu31i.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "B_B_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "B_B_BFu31i");
  }
}
static Arrange_To_Call_Me vB_B_BFu31i(Test_B_B_BFu31i, "B_B_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_BFu31ll()
{
  {
    init_simple_test("B_B_BFu31ll");
    static B_B_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(B_B_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_BFu31ll)");
    check_field_offset(lv, v1, 0, "B_B_BFu31ll.v1");
    check_field_offset(lv, v2, 1, "B_B_BFu31ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "B_B_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "B_B_BFu31ll");
  }
}
static Arrange_To_Call_Me vB_B_BFu31ll(Test_B_B_BFu31ll, "B_B_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_BFu32i()
{
  {
    init_simple_test("B_B_BFu32i");
    static B_B_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(B_B_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_BFu32i)");
    check_field_offset(lv, v1, 0, "B_B_BFu32i.v1");
    check_field_offset(lv, v2, 1, "B_B_BFu32i.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "B_B_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "B_B_BFu32i");
  }
}
static Arrange_To_Call_Me vB_B_BFu32i(Test_B_B_BFu32i, "B_B_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_BFu32ll()
{
  {
    init_simple_test("B_B_BFu32ll");
    static B_B_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(B_B_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_BFu32ll)");
    check_field_offset(lv, v1, 0, "B_B_BFu32ll.v1");
    check_field_offset(lv, v2, 1, "B_B_BFu32ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "B_B_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "B_B_BFu32ll");
  }
}
static Arrange_To_Call_Me vB_B_BFu32ll(Test_B_B_BFu32ll, "B_B_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_BFu33()
{
  {
    init_simple_test("B_B_BFu33");
    static B_B_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(B_B_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_BFu33)");
    check_field_offset(lv, v1, 0, "B_B_BFu33.v1");
    check_field_offset(lv, v2, 1, "B_B_BFu33.v2");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "B_B_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "B_B_BFu33");
  }
}
static Arrange_To_Call_Me vB_B_BFu33(Test_B_B_BFu33, "B_B_BFu33", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_BFu7c()
{
  {
    init_simple_test("B_B_BFu7c");
    static B_B_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(B_B_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_BFu7c)");
    check_field_offset(lv, v1, 0, "B_B_BFu7c.v1");
    check_field_offset(lv, v2, 1, "B_B_BFu7c.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "B_B_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "B_B_BFu7c");
  }
}
static Arrange_To_Call_Me vB_B_BFu7c(Test_B_B_BFu7c, "B_B_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_BFu7i()
{
  {
    init_simple_test("B_B_BFu7i");
    static B_B_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(B_B_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_BFu7i)");
    check_field_offset(lv, v1, 0, "B_B_BFu7i.v1");
    check_field_offset(lv, v2, 1, "B_B_BFu7i.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "B_B_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "B_B_BFu7i");
  }
}
static Arrange_To_Call_Me vB_B_BFu7i(Test_B_B_BFu7i, "B_B_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_BFu7ll()
{
  {
    init_simple_test("B_B_BFu7ll");
    static B_B_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(B_B_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_BFu7ll)");
    check_field_offset(lv, v1, 0, "B_B_BFu7ll.v1");
    check_field_offset(lv, v2, 1, "B_B_BFu7ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "B_B_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "B_B_BFu7ll");
  }
}
static Arrange_To_Call_Me vB_B_BFu7ll(Test_B_B_BFu7ll, "B_B_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_BFu7s()
{
  {
    init_simple_test("B_B_BFu7s");
    static B_B_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(B_B_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_BFu7s)");
    check_field_offset(lv, v1, 0, "B_B_BFu7s.v1");
    check_field_offset(lv, v2, 1, "B_B_BFu7s.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "B_B_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "B_B_BFu7s");
  }
}
static Arrange_To_Call_Me vB_B_BFu7s(Test_B_B_BFu7s, "B_B_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_BFu8c()
{
  {
    init_simple_test("B_B_BFu8c");
    static B_B_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(B_B_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_BFu8c)");
    check_field_offset(lv, v1, 0, "B_B_BFu8c.v1");
    check_field_offset(lv, v2, 1, "B_B_BFu8c.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "B_B_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "B_B_BFu8c");
  }
}
static Arrange_To_Call_Me vB_B_BFu8c(Test_B_B_BFu8c, "B_B_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_BFu8i()
{
  {
    init_simple_test("B_B_BFu8i");
    static B_B_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(B_B_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_BFu8i)");
    check_field_offset(lv, v1, 0, "B_B_BFu8i.v1");
    check_field_offset(lv, v2, 1, "B_B_BFu8i.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "B_B_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "B_B_BFu8i");
  }
}
static Arrange_To_Call_Me vB_B_BFu8i(Test_B_B_BFu8i, "B_B_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_BFu8ll()
{
  {
    init_simple_test("B_B_BFu8ll");
    static B_B_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(B_B_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_BFu8ll)");
    check_field_offset(lv, v1, 0, "B_B_BFu8ll.v1");
    check_field_offset(lv, v2, 1, "B_B_BFu8ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "B_B_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "B_B_BFu8ll");
  }
}
static Arrange_To_Call_Me vB_B_BFu8ll(Test_B_B_BFu8ll, "B_B_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_BFu8s()
{
  {
    init_simple_test("B_B_BFu8s");
    static B_B_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(B_B_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_BFu8s)");
    check_field_offset(lv, v1, 0, "B_B_BFu8s.v1");
    check_field_offset(lv, v2, 1, "B_B_BFu8s.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "B_B_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "B_B_BFu8s");
  }
}
static Arrange_To_Call_Me vB_B_BFu8s(Test_B_B_BFu8s, "B_B_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_BFu9i()
{
  {
    init_simple_test("B_B_BFu9i");
    static B_B_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(B_B_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_BFu9i)");
    check_field_offset(lv, v1, 0, "B_B_BFu9i.v1");
    check_field_offset(lv, v2, 1, "B_B_BFu9i.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "B_B_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "B_B_BFu9i");
  }
}
static Arrange_To_Call_Me vB_B_BFu9i(Test_B_B_BFu9i, "B_B_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_BFu9ll()
{
  {
    init_simple_test("B_B_BFu9ll");
    static B_B_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(B_B_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_BFu9ll)");
    check_field_offset(lv, v1, 0, "B_B_BFu9ll.v1");
    check_field_offset(lv, v2, 1, "B_B_BFu9ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "B_B_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "B_B_BFu9ll");
  }
}
static Arrange_To_Call_Me vB_B_BFu9ll(Test_B_B_BFu9ll, "B_B_BFu9ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_BFu9s()
{
  {
    init_simple_test("B_B_BFu9s");
    static B_B_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(B_B_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_BFu9s)");
    check_field_offset(lv, v1, 0, "B_B_BFu9s.v1");
    check_field_offset(lv, v2, 1, "B_B_BFu9s.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "B_B_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "B_B_BFu9s");
  }
}
static Arrange_To_Call_Me vB_B_BFu9s(Test_B_B_BFu9s, "B_B_BFu9s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_C()
{
  {
    init_simple_test("B_B_C");
    B_B_C lv;
    check2(sizeof(lv), 3, "sizeof(B_B_C)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_C)");
    check_field_offset(lv, v1, 0, "B_B_C.v1");
    check_field_offset(lv, v2, 1, "B_B_C.v2");
    check_field_offset(lv, v3, 2, "B_B_C.v3");
  }
}
static Arrange_To_Call_Me vB_B_C(Test_B_B_C, "B_B_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_D()
{
  {
    init_simple_test("B_B_D");
    B_B_D lv;
    check2(sizeof(lv), 10, "sizeof(B_B_D)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_D)");
    check_field_offset(lv, v1, 0, "B_B_D.v1");
    check_field_offset(lv, v2, 1, "B_B_D.v2");
    check_field_offset(lv, v3, 2, "B_B_D.v3");
  }
}
static Arrange_To_Call_Me vB_B_D(Test_B_B_D, "B_B_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_F()
{
  {
    init_simple_test("B_B_F");
    B_B_F lv;
    check2(sizeof(lv), 6, "sizeof(B_B_F)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_F)");
    check_field_offset(lv, v1, 0, "B_B_F.v1");
    check_field_offset(lv, v2, 1, "B_B_F.v2");
    check_field_offset(lv, v3, 2, "B_B_F.v3");
  }
}
static Arrange_To_Call_Me vB_B_F(Test_B_B_F, "B_B_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_I()
{
  {
    init_simple_test("B_B_I");
    B_B_I lv;
    check2(sizeof(lv), 6, "sizeof(B_B_I)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_I)");
    check_field_offset(lv, v1, 0, "B_B_I.v1");
    check_field_offset(lv, v2, 1, "B_B_I.v2");
    check_field_offset(lv, v3, 2, "B_B_I.v3");
  }
}
static Arrange_To_Call_Me vB_B_I(Test_B_B_I, "B_B_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_Ip()
{
  {
    init_simple_test("B_B_Ip");
    B_B_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(B_B_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_Ip)");
    check_field_offset(lv, v1, 0, "B_B_Ip.v1");
    check_field_offset(lv, v2, 1, "B_B_Ip.v2");
    check_field_offset(lv, v3, 2, "B_B_Ip.v3");
  }
}
static Arrange_To_Call_Me vB_B_Ip(Test_B_B_Ip, "B_B_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_L()
{
  {
    init_simple_test("B_B_L");
    B_B_L lv;
    check2(sizeof(lv), 10, "sizeof(B_B_L)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_L)");
    check_field_offset(lv, v1, 0, "B_B_L.v1");
    check_field_offset(lv, v2, 1, "B_B_L.v2");
    check_field_offset(lv, v3, 2, "B_B_L.v3");
  }
}
static Arrange_To_Call_Me vB_B_L(Test_B_B_L, "B_B_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_S()
{
  {
    init_simple_test("B_B_S");
    B_B_S lv;
    check2(sizeof(lv), 4, "sizeof(B_B_S)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_S)");
    check_field_offset(lv, v1, 0, "B_B_S.v1");
    check_field_offset(lv, v2, 1, "B_B_S.v2");
    check_field_offset(lv, v3, 2, "B_B_S.v3");
  }
}
static Arrange_To_Call_Me vB_B_S(Test_B_B_S, "B_B_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_Uc()
{
  {
    init_simple_test("B_B_Uc");
    B_B_Uc lv;
    check2(sizeof(lv), 3, "sizeof(B_B_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_Uc)");
    check_field_offset(lv, v1, 0, "B_B_Uc.v1");
    check_field_offset(lv, v2, 1, "B_B_Uc.v2");
    check_field_offset(lv, v3, 2, "B_B_Uc.v3");
  }
}
static Arrange_To_Call_Me vB_B_Uc(Test_B_B_Uc, "B_B_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_Ui()
{
  {
    init_simple_test("B_B_Ui");
    B_B_Ui lv;
    check2(sizeof(lv), 6, "sizeof(B_B_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_Ui)");
    check_field_offset(lv, v1, 0, "B_B_Ui.v1");
    check_field_offset(lv, v2, 1, "B_B_Ui.v2");
    check_field_offset(lv, v3, 2, "B_B_Ui.v3");
  }
}
static Arrange_To_Call_Me vB_B_Ui(Test_B_B_Ui, "B_B_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_Ul()
{
  {
    init_simple_test("B_B_Ul");
    B_B_Ul lv;
    check2(sizeof(lv), 10, "sizeof(B_B_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_Ul)");
    check_field_offset(lv, v1, 0, "B_B_Ul.v1");
    check_field_offset(lv, v2, 1, "B_B_Ul.v2");
    check_field_offset(lv, v3, 2, "B_B_Ul.v3");
  }
}
static Arrange_To_Call_Me vB_B_Ul(Test_B_B_Ul, "B_B_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_Us()
{
  {
    init_simple_test("B_B_Us");
    B_B_Us lv;
    check2(sizeof(lv), 4, "sizeof(B_B_Us)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_Us)");
    check_field_offset(lv, v1, 0, "B_B_Us.v1");
    check_field_offset(lv, v2, 1, "B_B_Us.v2");
    check_field_offset(lv, v3, 2, "B_B_Us.v3");
  }
}
static Arrange_To_Call_Me vB_B_Us(Test_B_B_Us, "B_B_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_B_Vp()
{
  {
    init_simple_test("B_B_Vp");
    B_B_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(B_B_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(B_B_Vp)");
    check_field_offset(lv, v1, 0, "B_B_Vp.v1");
    check_field_offset(lv, v2, 1, "B_B_Vp.v2");
    check_field_offset(lv, v3, 2, "B_B_Vp.v3");
  }
}
static Arrange_To_Call_Me vB_B_Vp(Test_B_B_Vp, "B_B_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i()
{
  {
    init_simple_test("B_BFu15i");
    static B_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i)");
    check_field_offset(lv, v1, 0, "B_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i");
  }
}
static Arrange_To_Call_Me vB_BFu15i(Test_B_BFu15i, "B_BFu15i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_B()
{
  {
    init_simple_test("B_BFu15i_B");
    static B_BFu15i_B lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15i_B)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_B)");
    check_field_offset(lv, v1, 0, "B_BFu15i_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_B");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_B");
    check_field_offset(lv, v3, 3, "B_BFu15i_B.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15i_B(Test_B_BFu15i_B, "B_BFu15i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_BFu15i()
{
  {
    init_simple_test("B_BFu15i_BFu15i");
    static B_BFu15i_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_BFu15i)");
    check_field_offset(lv, v1, 0, "B_BFu15i_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 2, 7, 15, 1, "B_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 2, 7, 15, hide_ull(1LL<<14), "B_BFu15i_BFu15i");
  }
}
static Arrange_To_Call_Me vB_BFu15i_BFu15i(Test_B_BFu15i_BFu15i, "B_BFu15i_BFu15i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_BFu15ll()
{
  {
    init_simple_test("B_BFu15i_BFu15ll");
    static B_BFu15i_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_BFu15ll)");
    check_field_offset(lv, v1, 0, "B_BFu15i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 2, 7, 15, 1, "B_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 2, 7, 15, hide_ull(1LL<<14), "B_BFu15i_BFu15ll");
  }
}
static Arrange_To_Call_Me vB_BFu15i_BFu15ll(Test_B_BFu15i_BFu15ll, "B_BFu15i_BFu15ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_BFu15s()
{
  {
    init_simple_test("B_BFu15i_BFu15s");
    static B_BFu15i_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_BFu15s)");
    check_field_offset(lv, v1, 0, "B_BFu15i_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 2, 7, 15, 1, "B_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 2, 7, 15, hide_ull(1LL<<14), "B_BFu15i_BFu15s");
  }
}
static Arrange_To_Call_Me vB_BFu15i_BFu15s(Test_B_BFu15i_BFu15s, "B_BFu15i_BFu15s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_BFu16i()
{
  {
    init_simple_test("B_BFu15i_BFu16i");
    static B_BFu15i_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu15i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_BFu16i)");
    check_field_offset(lv, v1, 0, "B_BFu15i_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_BFu16i");
    set_bf_and_test(lv, v3, 2, 7, 16, 1, "B_BFu15i_BFu16i");
    set_bf_and_test(lv, v3, 2, 7, 16, hide_ull(1LL<<15), "B_BFu15i_BFu16i");
  }
}
static Arrange_To_Call_Me vB_BFu15i_BFu16i(Test_B_BFu15i_BFu16i, "B_BFu15i_BFu16i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_BFu16ll()
{
  {
    init_simple_test("B_BFu15i_BFu16ll");
    static B_BFu15i_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu15i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_BFu16ll)");
    check_field_offset(lv, v1, 0, "B_BFu15i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_BFu16ll");
    set_bf_and_test(lv, v3, 2, 7, 16, 1, "B_BFu15i_BFu16ll");
    set_bf_and_test(lv, v3, 2, 7, 16, hide_ull(1LL<<15), "B_BFu15i_BFu16ll");
  }
}
static Arrange_To_Call_Me vB_BFu15i_BFu16ll(Test_B_BFu15i_BFu16ll, "B_BFu15i_BFu16ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_BFu16s()
{
  {
    init_simple_test("B_BFu15i_BFu16s");
    static B_BFu15i_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu15i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_BFu16s)");
    check_field_offset(lv, v1, 0, "B_BFu15i_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_BFu16s");
    set_bf_and_test(lv, v3, 2, 7, 16, 1, "B_BFu15i_BFu16s");
    set_bf_and_test(lv, v3, 2, 7, 16, hide_ull(1LL<<15), "B_BFu15i_BFu16s");
  }
}
static Arrange_To_Call_Me vB_BFu15i_BFu16s(Test_B_BFu15i_BFu16s, "B_BFu15i_BFu16s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_BFu17i()
{
  {
    init_simple_test("B_BFu15i_BFu17i");
    static B_BFu15i_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu15i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_BFu17i)");
    check_field_offset(lv, v1, 0, "B_BFu15i_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_BFu17i");
    set_bf_and_test(lv, v3, 2, 7, 17, 1, "B_BFu15i_BFu17i");
    set_bf_and_test(lv, v3, 2, 7, 17, hide_ull(1LL<<16), "B_BFu15i_BFu17i");
  }
}
static Arrange_To_Call_Me vB_BFu15i_BFu17i(Test_B_BFu15i_BFu17i, "B_BFu15i_BFu17i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_BFu17ll()
{
  {
    init_simple_test("B_BFu15i_BFu17ll");
    static B_BFu15i_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu15i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_BFu17ll)");
    check_field_offset(lv, v1, 0, "B_BFu15i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_BFu17ll");
    set_bf_and_test(lv, v3, 2, 7, 17, 1, "B_BFu15i_BFu17ll");
    set_bf_and_test(lv, v3, 2, 7, 17, hide_ull(1LL<<16), "B_BFu15i_BFu17ll");
  }
}
static Arrange_To_Call_Me vB_BFu15i_BFu17ll(Test_B_BFu15i_BFu17ll, "B_BFu15i_BFu17ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_BFu1c()
{
  {
    init_simple_test("B_BFu15i_BFu1c");
    static B_BFu15i_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu15i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_BFu1c)");
    check_field_offset(lv, v1, 0, "B_BFu15i_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_BFu1c");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "B_BFu15i_BFu1c");
  }
}
static Arrange_To_Call_Me vB_BFu15i_BFu1c(Test_B_BFu15i_BFu1c, "B_BFu15i_BFu1c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_BFu1i()
{
  {
    init_simple_test("B_BFu15i_BFu1i");
    static B_BFu15i_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu15i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_BFu1i)");
    check_field_offset(lv, v1, 0, "B_BFu15i_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_BFu1i");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "B_BFu15i_BFu1i");
  }
}
static Arrange_To_Call_Me vB_BFu15i_BFu1i(Test_B_BFu15i_BFu1i, "B_BFu15i_BFu1i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_BFu1ll()
{
  {
    init_simple_test("B_BFu15i_BFu1ll");
    static B_BFu15i_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu15i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_BFu1ll)");
    check_field_offset(lv, v1, 0, "B_BFu15i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_BFu1ll");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "B_BFu15i_BFu1ll");
  }
}
static Arrange_To_Call_Me vB_BFu15i_BFu1ll(Test_B_BFu15i_BFu1ll, "B_BFu15i_BFu1ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_BFu1s()
{
  {
    init_simple_test("B_BFu15i_BFu1s");
    static B_BFu15i_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu15i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_BFu1s)");
    check_field_offset(lv, v1, 0, "B_BFu15i_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_BFu1s");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "B_BFu15i_BFu1s");
  }
}
static Arrange_To_Call_Me vB_BFu15i_BFu1s(Test_B_BFu15i_BFu1s, "B_BFu15i_BFu1s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_BFu31i()
{
  {
    init_simple_test("B_BFu15i_BFu31i");
    static B_BFu15i_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu15i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_BFu31i)");
    check_field_offset(lv, v1, 0, "B_BFu15i_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_BFu31i");
    set_bf_and_test(lv, v3, 2, 7, 31, 1, "B_BFu15i_BFu31i");
    set_bf_and_test(lv, v3, 2, 7, 31, hide_ull(1LL<<30), "B_BFu15i_BFu31i");
  }
}
static Arrange_To_Call_Me vB_BFu15i_BFu31i(Test_B_BFu15i_BFu31i, "B_BFu15i_BFu31i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_BFu31ll()
{
  {
    init_simple_test("B_BFu15i_BFu31ll");
    static B_BFu15i_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu15i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_BFu31ll)");
    check_field_offset(lv, v1, 0, "B_BFu15i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_BFu31ll");
    set_bf_and_test(lv, v3, 2, 7, 31, 1, "B_BFu15i_BFu31ll");
    set_bf_and_test(lv, v3, 2, 7, 31, hide_ull(1LL<<30), "B_BFu15i_BFu31ll");
  }
}
static Arrange_To_Call_Me vB_BFu15i_BFu31ll(Test_B_BFu15i_BFu31ll, "B_BFu15i_BFu31ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_BFu32i()
{
  {
    init_simple_test("B_BFu15i_BFu32i");
    static B_BFu15i_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu15i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_BFu32i)");
    check_field_offset(lv, v1, 0, "B_BFu15i_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_BFu32i");
    set_bf_and_test(lv, v3, 2, 7, 32, 1, "B_BFu15i_BFu32i");
    set_bf_and_test(lv, v3, 2, 7, 32, hide_ull(1LL<<31), "B_BFu15i_BFu32i");
  }
}
static Arrange_To_Call_Me vB_BFu15i_BFu32i(Test_B_BFu15i_BFu32i, "B_BFu15i_BFu32i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_BFu32ll()
{
  {
    init_simple_test("B_BFu15i_BFu32ll");
    static B_BFu15i_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu15i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_BFu32ll)");
    check_field_offset(lv, v1, 0, "B_BFu15i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_BFu32ll");
    set_bf_and_test(lv, v3, 2, 7, 32, 1, "B_BFu15i_BFu32ll");
    set_bf_and_test(lv, v3, 2, 7, 32, hide_ull(1LL<<31), "B_BFu15i_BFu32ll");
  }
}
static Arrange_To_Call_Me vB_BFu15i_BFu32ll(Test_B_BFu15i_BFu32ll, "B_BFu15i_BFu32ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_BFu33()
{
  {
    init_simple_test("B_BFu15i_BFu33");
    static B_BFu15i_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu15i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_BFu33)");
    check_field_offset(lv, v1, 0, "B_BFu15i_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_BFu33");
    set_bf_and_test(lv, v3, 2, 7, 33, 1, "B_BFu15i_BFu33");
    set_bf_and_test(lv, v3, 2, 7, 33, hide_ull(1LL<<32), "B_BFu15i_BFu33");
  }
}
static Arrange_To_Call_Me vB_BFu15i_BFu33(Test_B_BFu15i_BFu33, "B_BFu15i_BFu33", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_BFu7c()
{
  {
    init_simple_test("B_BFu15i_BFu7c");
    static B_BFu15i_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_BFu7c)");
    check_field_offset(lv, v1, 0, "B_BFu15i_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_BFu7c");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "B_BFu15i_BFu7c");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "B_BFu15i_BFu7c");
  }
}
static Arrange_To_Call_Me vB_BFu15i_BFu7c(Test_B_BFu15i_BFu7c, "B_BFu15i_BFu7c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_BFu7i()
{
  {
    init_simple_test("B_BFu15i_BFu7i");
    static B_BFu15i_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_BFu7i)");
    check_field_offset(lv, v1, 0, "B_BFu15i_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_BFu7i");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "B_BFu15i_BFu7i");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "B_BFu15i_BFu7i");
  }
}
static Arrange_To_Call_Me vB_BFu15i_BFu7i(Test_B_BFu15i_BFu7i, "B_BFu15i_BFu7i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_BFu7ll()
{
  {
    init_simple_test("B_BFu15i_BFu7ll");
    static B_BFu15i_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_BFu7ll)");
    check_field_offset(lv, v1, 0, "B_BFu15i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_BFu7ll");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "B_BFu15i_BFu7ll");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "B_BFu15i_BFu7ll");
  }
}
static Arrange_To_Call_Me vB_BFu15i_BFu7ll(Test_B_BFu15i_BFu7ll, "B_BFu15i_BFu7ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_BFu7s()
{
  {
    init_simple_test("B_BFu15i_BFu7s");
    static B_BFu15i_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_BFu7s)");
    check_field_offset(lv, v1, 0, "B_BFu15i_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_BFu7s");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "B_BFu15i_BFu7s");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "B_BFu15i_BFu7s");
  }
}
static Arrange_To_Call_Me vB_BFu15i_BFu7s(Test_B_BFu15i_BFu7s, "B_BFu15i_BFu7s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_BFu8c()
{
  {
    init_simple_test("B_BFu15i_BFu8c");
    static B_BFu15i_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_BFu8c)");
    check_field_offset(lv, v1, 0, "B_BFu15i_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_BFu8c");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "B_BFu15i_BFu8c");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "B_BFu15i_BFu8c");
  }
}
static Arrange_To_Call_Me vB_BFu15i_BFu8c(Test_B_BFu15i_BFu8c, "B_BFu15i_BFu8c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_BFu8i()
{
  {
    init_simple_test("B_BFu15i_BFu8i");
    static B_BFu15i_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_BFu8i)");
    check_field_offset(lv, v1, 0, "B_BFu15i_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_BFu8i");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "B_BFu15i_BFu8i");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "B_BFu15i_BFu8i");
  }
}
static Arrange_To_Call_Me vB_BFu15i_BFu8i(Test_B_BFu15i_BFu8i, "B_BFu15i_BFu8i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_BFu8ll()
{
  {
    init_simple_test("B_BFu15i_BFu8ll");
    static B_BFu15i_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_BFu8ll)");
    check_field_offset(lv, v1, 0, "B_BFu15i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_BFu8ll");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "B_BFu15i_BFu8ll");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "B_BFu15i_BFu8ll");
  }
}
static Arrange_To_Call_Me vB_BFu15i_BFu8ll(Test_B_BFu15i_BFu8ll, "B_BFu15i_BFu8ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_BFu8s()
{
  {
    init_simple_test("B_BFu15i_BFu8s");
    static B_BFu15i_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_BFu8s)");
    check_field_offset(lv, v1, 0, "B_BFu15i_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_BFu8s");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "B_BFu15i_BFu8s");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "B_BFu15i_BFu8s");
  }
}
static Arrange_To_Call_Me vB_BFu15i_BFu8s(Test_B_BFu15i_BFu8s, "B_BFu15i_BFu8s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_BFu9i()
{
  {
    init_simple_test("B_BFu15i_BFu9i");
    static B_BFu15i_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_BFu9i)");
    check_field_offset(lv, v1, 0, "B_BFu15i_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_BFu9i");
    set_bf_and_test(lv, v3, 2, 7, 9, 1, "B_BFu15i_BFu9i");
    set_bf_and_test(lv, v3, 2, 7, 9, hide_ull(1LL<<8), "B_BFu15i_BFu9i");
  }
}
static Arrange_To_Call_Me vB_BFu15i_BFu9i(Test_B_BFu15i_BFu9i, "B_BFu15i_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_BFu9ll()
{
  {
    init_simple_test("B_BFu15i_BFu9ll");
    static B_BFu15i_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_BFu9ll)");
    check_field_offset(lv, v1, 0, "B_BFu15i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_BFu9ll");
    set_bf_and_test(lv, v3, 2, 7, 9, 1, "B_BFu15i_BFu9ll");
    set_bf_and_test(lv, v3, 2, 7, 9, hide_ull(1LL<<8), "B_BFu15i_BFu9ll");
  }
}
static Arrange_To_Call_Me vB_BFu15i_BFu9ll(Test_B_BFu15i_BFu9ll, "B_BFu15i_BFu9ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_BFu9s()
{
  {
    init_simple_test("B_BFu15i_BFu9s");
    static B_BFu15i_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_BFu9s)");
    check_field_offset(lv, v1, 0, "B_BFu15i_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_BFu9s");
    set_bf_and_test(lv, v3, 2, 7, 9, 1, "B_BFu15i_BFu9s");
    set_bf_and_test(lv, v3, 2, 7, 9, hide_ull(1LL<<8), "B_BFu15i_BFu9s");
  }
}
static Arrange_To_Call_Me vB_BFu15i_BFu9s(Test_B_BFu15i_BFu9s, "B_BFu15i_BFu9s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_C()
{
  {
    init_simple_test("B_BFu15i_C");
    static B_BFu15i_C lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15i_C)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_C)");
    check_field_offset(lv, v1, 0, "B_BFu15i_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_C");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_C");
    check_field_offset(lv, v3, 3, "B_BFu15i_C.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15i_C(Test_B_BFu15i_C, "B_BFu15i_C", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_D()
{
  {
    init_simple_test("B_BFu15i_D");
    static B_BFu15i_D lv;
    check2(sizeof(lv), 11, "sizeof(B_BFu15i_D)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_D)");
    check_field_offset(lv, v1, 0, "B_BFu15i_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_D");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_D");
    check_field_offset(lv, v3, 3, "B_BFu15i_D.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15i_D(Test_B_BFu15i_D, "B_BFu15i_D", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_F()
{
  {
    init_simple_test("B_BFu15i_F");
    static B_BFu15i_F lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu15i_F)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_F)");
    check_field_offset(lv, v1, 0, "B_BFu15i_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_F");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_F");
    check_field_offset(lv, v3, 3, "B_BFu15i_F.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15i_F(Test_B_BFu15i_F, "B_BFu15i_F", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_I()
{
  {
    init_simple_test("B_BFu15i_I");
    static B_BFu15i_I lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu15i_I)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_I)");
    check_field_offset(lv, v1, 0, "B_BFu15i_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_I");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_I");
    check_field_offset(lv, v3, 3, "B_BFu15i_I.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15i_I(Test_B_BFu15i_I, "B_BFu15i_I", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_Ip()
{
  {
    init_simple_test("B_BFu15i_Ip");
    static B_BFu15i_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(B_BFu15i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_Ip)");
    check_field_offset(lv, v1, 0, "B_BFu15i_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_Ip");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_Ip");
    check_field_offset(lv, v3, 3, "B_BFu15i_Ip.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15i_Ip(Test_B_BFu15i_Ip, "B_BFu15i_Ip", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_L()
{
  {
    init_simple_test("B_BFu15i_L");
    static B_BFu15i_L lv;
    check2(sizeof(lv), 11, "sizeof(B_BFu15i_L)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_L)");
    check_field_offset(lv, v1, 0, "B_BFu15i_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_L");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_L");
    check_field_offset(lv, v3, 3, "B_BFu15i_L.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15i_L(Test_B_BFu15i_L, "B_BFu15i_L", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_S()
{
  {
    init_simple_test("B_BFu15i_S");
    static B_BFu15i_S lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu15i_S)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_S)");
    check_field_offset(lv, v1, 0, "B_BFu15i_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_S");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_S");
    check_field_offset(lv, v3, 3, "B_BFu15i_S.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15i_S(Test_B_BFu15i_S, "B_BFu15i_S", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_Uc()
{
  {
    init_simple_test("B_BFu15i_Uc");
    static B_BFu15i_Uc lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_Uc)");
    check_field_offset(lv, v1, 0, "B_BFu15i_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_Uc");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_Uc");
    check_field_offset(lv, v3, 3, "B_BFu15i_Uc.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15i_Uc(Test_B_BFu15i_Uc, "B_BFu15i_Uc", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_Ui()
{
  {
    init_simple_test("B_BFu15i_Ui");
    static B_BFu15i_Ui lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu15i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_Ui)");
    check_field_offset(lv, v1, 0, "B_BFu15i_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_Ui");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_Ui");
    check_field_offset(lv, v3, 3, "B_BFu15i_Ui.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15i_Ui(Test_B_BFu15i_Ui, "B_BFu15i_Ui", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_Ul()
{
  {
    init_simple_test("B_BFu15i_Ul");
    static B_BFu15i_Ul lv;
    check2(sizeof(lv), 11, "sizeof(B_BFu15i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_Ul)");
    check_field_offset(lv, v1, 0, "B_BFu15i_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_Ul");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_Ul");
    check_field_offset(lv, v3, 3, "B_BFu15i_Ul.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15i_Ul(Test_B_BFu15i_Ul, "B_BFu15i_Ul", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_Us()
{
  {
    init_simple_test("B_BFu15i_Us");
    static B_BFu15i_Us lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu15i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_Us)");
    check_field_offset(lv, v1, 0, "B_BFu15i_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_Us");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_Us");
    check_field_offset(lv, v3, 3, "B_BFu15i_Us.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15i_Us(Test_B_BFu15i_Us, "B_BFu15i_Us", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15i_Vp()
{
  {
    init_simple_test("B_BFu15i_Vp");
    static B_BFu15i_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(B_BFu15i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15i_Vp)");
    check_field_offset(lv, v1, 0, "B_BFu15i_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15i_Vp");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15i_Vp");
    check_field_offset(lv, v3, 3, "B_BFu15i_Vp.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15i_Vp(Test_B_BFu15i_Vp, "B_BFu15i_Vp", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll()
{
  {
    init_simple_test("B_BFu15ll");
    static B_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll)");
    check_field_offset(lv, v1, 0, "B_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll");
  }
}
static Arrange_To_Call_Me vB_BFu15ll(Test_B_BFu15ll, "B_BFu15ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_B()
{
  {
    init_simple_test("B_BFu15ll_B");
    static B_BFu15ll_B lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_B)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_B");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_B");
    check_field_offset(lv, v3, 3, "B_BFu15ll_B.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_B(Test_B_BFu15ll_B, "B_BFu15ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_BFu15i()
{
  {
    init_simple_test("B_BFu15ll_BFu15i");
    static B_BFu15ll_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_BFu15i)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 2, 7, 15, 1, "B_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 2, 7, 15, hide_ull(1LL<<14), "B_BFu15ll_BFu15i");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_BFu15i(Test_B_BFu15ll_BFu15i, "B_BFu15ll_BFu15i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_BFu15ll()
{
  {
    init_simple_test("B_BFu15ll_BFu15ll");
    static B_BFu15ll_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 2, 7, 15, 1, "B_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 2, 7, 15, hide_ull(1LL<<14), "B_BFu15ll_BFu15ll");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_BFu15ll(Test_B_BFu15ll_BFu15ll, "B_BFu15ll_BFu15ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_BFu15s()
{
  {
    init_simple_test("B_BFu15ll_BFu15s");
    static B_BFu15ll_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_BFu15s)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 2, 7, 15, 1, "B_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 2, 7, 15, hide_ull(1LL<<14), "B_BFu15ll_BFu15s");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_BFu15s(Test_B_BFu15ll_BFu15s, "B_BFu15ll_BFu15s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_BFu16i()
{
  {
    init_simple_test("B_BFu15ll_BFu16i");
    static B_BFu15ll_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu15ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_BFu16i)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_BFu16i");
    set_bf_and_test(lv, v3, 2, 7, 16, 1, "B_BFu15ll_BFu16i");
    set_bf_and_test(lv, v3, 2, 7, 16, hide_ull(1LL<<15), "B_BFu15ll_BFu16i");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_BFu16i(Test_B_BFu15ll_BFu16i, "B_BFu15ll_BFu16i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_BFu16ll()
{
  {
    init_simple_test("B_BFu15ll_BFu16ll");
    static B_BFu15ll_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu15ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_BFu16ll");
    set_bf_and_test(lv, v3, 2, 7, 16, 1, "B_BFu15ll_BFu16ll");
    set_bf_and_test(lv, v3, 2, 7, 16, hide_ull(1LL<<15), "B_BFu15ll_BFu16ll");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_BFu16ll(Test_B_BFu15ll_BFu16ll, "B_BFu15ll_BFu16ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_BFu16s()
{
  {
    init_simple_test("B_BFu15ll_BFu16s");
    static B_BFu15ll_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu15ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_BFu16s)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_BFu16s");
    set_bf_and_test(lv, v3, 2, 7, 16, 1, "B_BFu15ll_BFu16s");
    set_bf_and_test(lv, v3, 2, 7, 16, hide_ull(1LL<<15), "B_BFu15ll_BFu16s");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_BFu16s(Test_B_BFu15ll_BFu16s, "B_BFu15ll_BFu16s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_BFu17i()
{
  {
    init_simple_test("B_BFu15ll_BFu17i");
    static B_BFu15ll_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu15ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_BFu17i)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_BFu17i");
    set_bf_and_test(lv, v3, 2, 7, 17, 1, "B_BFu15ll_BFu17i");
    set_bf_and_test(lv, v3, 2, 7, 17, hide_ull(1LL<<16), "B_BFu15ll_BFu17i");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_BFu17i(Test_B_BFu15ll_BFu17i, "B_BFu15ll_BFu17i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_BFu17ll()
{
  {
    init_simple_test("B_BFu15ll_BFu17ll");
    static B_BFu15ll_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu15ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_BFu17ll");
    set_bf_and_test(lv, v3, 2, 7, 17, 1, "B_BFu15ll_BFu17ll");
    set_bf_and_test(lv, v3, 2, 7, 17, hide_ull(1LL<<16), "B_BFu15ll_BFu17ll");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_BFu17ll(Test_B_BFu15ll_BFu17ll, "B_BFu15ll_BFu17ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_BFu1c()
{
  {
    init_simple_test("B_BFu15ll_BFu1c");
    static B_BFu15ll_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu15ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_BFu1c)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_BFu1c");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "B_BFu15ll_BFu1c");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_BFu1c(Test_B_BFu15ll_BFu1c, "B_BFu15ll_BFu1c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_BFu1i()
{
  {
    init_simple_test("B_BFu15ll_BFu1i");
    static B_BFu15ll_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu15ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_BFu1i)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_BFu1i");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "B_BFu15ll_BFu1i");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_BFu1i(Test_B_BFu15ll_BFu1i, "B_BFu15ll_BFu1i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_BFu1ll()
{
  {
    init_simple_test("B_BFu15ll_BFu1ll");
    static B_BFu15ll_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu15ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_BFu1ll");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "B_BFu15ll_BFu1ll");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_BFu1ll(Test_B_BFu15ll_BFu1ll, "B_BFu15ll_BFu1ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_BFu1s()
{
  {
    init_simple_test("B_BFu15ll_BFu1s");
    static B_BFu15ll_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu15ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_BFu1s)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_BFu1s");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "B_BFu15ll_BFu1s");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_BFu1s(Test_B_BFu15ll_BFu1s, "B_BFu15ll_BFu1s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_BFu31i()
{
  {
    init_simple_test("B_BFu15ll_BFu31i");
    static B_BFu15ll_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu15ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_BFu31i)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_BFu31i");
    set_bf_and_test(lv, v3, 2, 7, 31, 1, "B_BFu15ll_BFu31i");
    set_bf_and_test(lv, v3, 2, 7, 31, hide_ull(1LL<<30), "B_BFu15ll_BFu31i");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_BFu31i(Test_B_BFu15ll_BFu31i, "B_BFu15ll_BFu31i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_BFu31ll()
{
  {
    init_simple_test("B_BFu15ll_BFu31ll");
    static B_BFu15ll_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu15ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_BFu31ll");
    set_bf_and_test(lv, v3, 2, 7, 31, 1, "B_BFu15ll_BFu31ll");
    set_bf_and_test(lv, v3, 2, 7, 31, hide_ull(1LL<<30), "B_BFu15ll_BFu31ll");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_BFu31ll(Test_B_BFu15ll_BFu31ll, "B_BFu15ll_BFu31ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_BFu32i()
{
  {
    init_simple_test("B_BFu15ll_BFu32i");
    static B_BFu15ll_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu15ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_BFu32i)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_BFu32i");
    set_bf_and_test(lv, v3, 2, 7, 32, 1, "B_BFu15ll_BFu32i");
    set_bf_and_test(lv, v3, 2, 7, 32, hide_ull(1LL<<31), "B_BFu15ll_BFu32i");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_BFu32i(Test_B_BFu15ll_BFu32i, "B_BFu15ll_BFu32i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_BFu32ll()
{
  {
    init_simple_test("B_BFu15ll_BFu32ll");
    static B_BFu15ll_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu15ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_BFu32ll");
    set_bf_and_test(lv, v3, 2, 7, 32, 1, "B_BFu15ll_BFu32ll");
    set_bf_and_test(lv, v3, 2, 7, 32, hide_ull(1LL<<31), "B_BFu15ll_BFu32ll");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_BFu32ll(Test_B_BFu15ll_BFu32ll, "B_BFu15ll_BFu32ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_BFu33()
{
  {
    init_simple_test("B_BFu15ll_BFu33");
    static B_BFu15ll_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu15ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_BFu33)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_BFu33");
    set_bf_and_test(lv, v3, 2, 7, 33, 1, "B_BFu15ll_BFu33");
    set_bf_and_test(lv, v3, 2, 7, 33, hide_ull(1LL<<32), "B_BFu15ll_BFu33");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_BFu33(Test_B_BFu15ll_BFu33, "B_BFu15ll_BFu33", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_BFu7c()
{
  {
    init_simple_test("B_BFu15ll_BFu7c");
    static B_BFu15ll_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_BFu7c)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_BFu7c");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "B_BFu15ll_BFu7c");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "B_BFu15ll_BFu7c");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_BFu7c(Test_B_BFu15ll_BFu7c, "B_BFu15ll_BFu7c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_BFu7i()
{
  {
    init_simple_test("B_BFu15ll_BFu7i");
    static B_BFu15ll_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_BFu7i)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_BFu7i");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "B_BFu15ll_BFu7i");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "B_BFu15ll_BFu7i");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_BFu7i(Test_B_BFu15ll_BFu7i, "B_BFu15ll_BFu7i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_BFu7ll()
{
  {
    init_simple_test("B_BFu15ll_BFu7ll");
    static B_BFu15ll_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_BFu7ll");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "B_BFu15ll_BFu7ll");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "B_BFu15ll_BFu7ll");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_BFu7ll(Test_B_BFu15ll_BFu7ll, "B_BFu15ll_BFu7ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_BFu7s()
{
  {
    init_simple_test("B_BFu15ll_BFu7s");
    static B_BFu15ll_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_BFu7s)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_BFu7s");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "B_BFu15ll_BFu7s");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "B_BFu15ll_BFu7s");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_BFu7s(Test_B_BFu15ll_BFu7s, "B_BFu15ll_BFu7s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_BFu8c()
{
  {
    init_simple_test("B_BFu15ll_BFu8c");
    static B_BFu15ll_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_BFu8c)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_BFu8c");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "B_BFu15ll_BFu8c");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "B_BFu15ll_BFu8c");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_BFu8c(Test_B_BFu15ll_BFu8c, "B_BFu15ll_BFu8c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_BFu8i()
{
  {
    init_simple_test("B_BFu15ll_BFu8i");
    static B_BFu15ll_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_BFu8i)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_BFu8i");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "B_BFu15ll_BFu8i");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "B_BFu15ll_BFu8i");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_BFu8i(Test_B_BFu15ll_BFu8i, "B_BFu15ll_BFu8i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_BFu8ll()
{
  {
    init_simple_test("B_BFu15ll_BFu8ll");
    static B_BFu15ll_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_BFu8ll");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "B_BFu15ll_BFu8ll");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "B_BFu15ll_BFu8ll");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_BFu8ll(Test_B_BFu15ll_BFu8ll, "B_BFu15ll_BFu8ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_BFu8s()
{
  {
    init_simple_test("B_BFu15ll_BFu8s");
    static B_BFu15ll_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_BFu8s)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_BFu8s");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "B_BFu15ll_BFu8s");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "B_BFu15ll_BFu8s");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_BFu8s(Test_B_BFu15ll_BFu8s, "B_BFu15ll_BFu8s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_BFu9i()
{
  {
    init_simple_test("B_BFu15ll_BFu9i");
    static B_BFu15ll_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_BFu9i)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_BFu9i");
    set_bf_and_test(lv, v3, 2, 7, 9, 1, "B_BFu15ll_BFu9i");
    set_bf_and_test(lv, v3, 2, 7, 9, hide_ull(1LL<<8), "B_BFu15ll_BFu9i");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_BFu9i(Test_B_BFu15ll_BFu9i, "B_BFu15ll_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_BFu9ll()
{
  {
    init_simple_test("B_BFu15ll_BFu9ll");
    static B_BFu15ll_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_BFu9ll");
    set_bf_and_test(lv, v3, 2, 7, 9, 1, "B_BFu15ll_BFu9ll");
    set_bf_and_test(lv, v3, 2, 7, 9, hide_ull(1LL<<8), "B_BFu15ll_BFu9ll");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_BFu9ll(Test_B_BFu15ll_BFu9ll, "B_BFu15ll_BFu9ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_BFu9s()
{
  {
    init_simple_test("B_BFu15ll_BFu9s");
    static B_BFu15ll_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_BFu9s)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_BFu9s");
    set_bf_and_test(lv, v3, 2, 7, 9, 1, "B_BFu15ll_BFu9s");
    set_bf_and_test(lv, v3, 2, 7, 9, hide_ull(1LL<<8), "B_BFu15ll_BFu9s");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_BFu9s(Test_B_BFu15ll_BFu9s, "B_BFu15ll_BFu9s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_C()
{
  {
    init_simple_test("B_BFu15ll_C");
    static B_BFu15ll_C lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_C)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_C");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_C");
    check_field_offset(lv, v3, 3, "B_BFu15ll_C.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_C(Test_B_BFu15ll_C, "B_BFu15ll_C", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_D()
{
  {
    init_simple_test("B_BFu15ll_D");
    static B_BFu15ll_D lv;
    check2(sizeof(lv), 11, "sizeof(B_BFu15ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_D)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_D");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_D");
    check_field_offset(lv, v3, 3, "B_BFu15ll_D.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_D(Test_B_BFu15ll_D, "B_BFu15ll_D", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_F()
{
  {
    init_simple_test("B_BFu15ll_F");
    static B_BFu15ll_F lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu15ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_F)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_F");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_F");
    check_field_offset(lv, v3, 3, "B_BFu15ll_F.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_F(Test_B_BFu15ll_F, "B_BFu15ll_F", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_I()
{
  {
    init_simple_test("B_BFu15ll_I");
    static B_BFu15ll_I lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu15ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_I)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_I");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_I");
    check_field_offset(lv, v3, 3, "B_BFu15ll_I.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_I(Test_B_BFu15ll_I, "B_BFu15ll_I", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_Ip()
{
  {
    init_simple_test("B_BFu15ll_Ip");
    static B_BFu15ll_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(B_BFu15ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_Ip)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_Ip");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_Ip");
    check_field_offset(lv, v3, 3, "B_BFu15ll_Ip.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_Ip(Test_B_BFu15ll_Ip, "B_BFu15ll_Ip", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_L()
{
  {
    init_simple_test("B_BFu15ll_L");
    static B_BFu15ll_L lv;
    check2(sizeof(lv), 11, "sizeof(B_BFu15ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_L)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_L");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_L");
    check_field_offset(lv, v3, 3, "B_BFu15ll_L.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_L(Test_B_BFu15ll_L, "B_BFu15ll_L", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_S()
{
  {
    init_simple_test("B_BFu15ll_S");
    static B_BFu15ll_S lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu15ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_S)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_S");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_S");
    check_field_offset(lv, v3, 3, "B_BFu15ll_S.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_S(Test_B_BFu15ll_S, "B_BFu15ll_S", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_Uc()
{
  {
    init_simple_test("B_BFu15ll_Uc");
    static B_BFu15ll_Uc lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_Uc)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_Uc");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_Uc");
    check_field_offset(lv, v3, 3, "B_BFu15ll_Uc.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_Uc(Test_B_BFu15ll_Uc, "B_BFu15ll_Uc", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_Ui()
{
  {
    init_simple_test("B_BFu15ll_Ui");
    static B_BFu15ll_Ui lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu15ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_Ui)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_Ui");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_Ui");
    check_field_offset(lv, v3, 3, "B_BFu15ll_Ui.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_Ui(Test_B_BFu15ll_Ui, "B_BFu15ll_Ui", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_Ul()
{
  {
    init_simple_test("B_BFu15ll_Ul");
    static B_BFu15ll_Ul lv;
    check2(sizeof(lv), 11, "sizeof(B_BFu15ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_Ul)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_Ul");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_Ul");
    check_field_offset(lv, v3, 3, "B_BFu15ll_Ul.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_Ul(Test_B_BFu15ll_Ul, "B_BFu15ll_Ul", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_Us()
{
  {
    init_simple_test("B_BFu15ll_Us");
    static B_BFu15ll_Us lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu15ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_Us)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_Us");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_Us");
    check_field_offset(lv, v3, 3, "B_BFu15ll_Us.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_Us(Test_B_BFu15ll_Us, "B_BFu15ll_Us", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15ll_Vp()
{
  {
    init_simple_test("B_BFu15ll_Vp");
    static B_BFu15ll_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(B_BFu15ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15ll_Vp)");
    check_field_offset(lv, v1, 0, "B_BFu15ll_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15ll_Vp");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15ll_Vp");
    check_field_offset(lv, v3, 3, "B_BFu15ll_Vp.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15ll_Vp(Test_B_BFu15ll_Vp, "B_BFu15ll_Vp", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s()
{
  {
    init_simple_test("B_BFu15s");
    static B_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s)");
    check_field_offset(lv, v1, 0, "B_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s");
  }
}
static Arrange_To_Call_Me vB_BFu15s(Test_B_BFu15s, "B_BFu15s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_B()
{
  {
    init_simple_test("B_BFu15s_B");
    static B_BFu15s_B lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15s_B)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_B)");
    check_field_offset(lv, v1, 0, "B_BFu15s_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_B");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_B");
    check_field_offset(lv, v3, 3, "B_BFu15s_B.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15s_B(Test_B_BFu15s_B, "B_BFu15s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_BFu15i()
{
  {
    init_simple_test("B_BFu15s_BFu15i");
    static B_BFu15s_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_BFu15i)");
    check_field_offset(lv, v1, 0, "B_BFu15s_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 2, 7, 15, 1, "B_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 2, 7, 15, hide_ull(1LL<<14), "B_BFu15s_BFu15i");
  }
}
static Arrange_To_Call_Me vB_BFu15s_BFu15i(Test_B_BFu15s_BFu15i, "B_BFu15s_BFu15i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_BFu15ll()
{
  {
    init_simple_test("B_BFu15s_BFu15ll");
    static B_BFu15s_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_BFu15ll)");
    check_field_offset(lv, v1, 0, "B_BFu15s_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 2, 7, 15, 1, "B_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 2, 7, 15, hide_ull(1LL<<14), "B_BFu15s_BFu15ll");
  }
}
static Arrange_To_Call_Me vB_BFu15s_BFu15ll(Test_B_BFu15s_BFu15ll, "B_BFu15s_BFu15ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_BFu15s()
{
  {
    init_simple_test("B_BFu15s_BFu15s");
    static B_BFu15s_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_BFu15s)");
    check_field_offset(lv, v1, 0, "B_BFu15s_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 2, 7, 15, 1, "B_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 2, 7, 15, hide_ull(1LL<<14), "B_BFu15s_BFu15s");
  }
}
static Arrange_To_Call_Me vB_BFu15s_BFu15s(Test_B_BFu15s_BFu15s, "B_BFu15s_BFu15s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_BFu16i()
{
  {
    init_simple_test("B_BFu15s_BFu16i");
    static B_BFu15s_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu15s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_BFu16i)");
    check_field_offset(lv, v1, 0, "B_BFu15s_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_BFu16i");
    set_bf_and_test(lv, v3, 2, 7, 16, 1, "B_BFu15s_BFu16i");
    set_bf_and_test(lv, v3, 2, 7, 16, hide_ull(1LL<<15), "B_BFu15s_BFu16i");
  }
}
static Arrange_To_Call_Me vB_BFu15s_BFu16i(Test_B_BFu15s_BFu16i, "B_BFu15s_BFu16i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_BFu16ll()
{
  {
    init_simple_test("B_BFu15s_BFu16ll");
    static B_BFu15s_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu15s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_BFu16ll)");
    check_field_offset(lv, v1, 0, "B_BFu15s_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_BFu16ll");
    set_bf_and_test(lv, v3, 2, 7, 16, 1, "B_BFu15s_BFu16ll");
    set_bf_and_test(lv, v3, 2, 7, 16, hide_ull(1LL<<15), "B_BFu15s_BFu16ll");
  }
}
static Arrange_To_Call_Me vB_BFu15s_BFu16ll(Test_B_BFu15s_BFu16ll, "B_BFu15s_BFu16ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_BFu16s()
{
  {
    init_simple_test("B_BFu15s_BFu16s");
    static B_BFu15s_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu15s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_BFu16s)");
    check_field_offset(lv, v1, 0, "B_BFu15s_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_BFu16s");
    set_bf_and_test(lv, v3, 2, 7, 16, 1, "B_BFu15s_BFu16s");
    set_bf_and_test(lv, v3, 2, 7, 16, hide_ull(1LL<<15), "B_BFu15s_BFu16s");
  }
}
static Arrange_To_Call_Me vB_BFu15s_BFu16s(Test_B_BFu15s_BFu16s, "B_BFu15s_BFu16s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_BFu17i()
{
  {
    init_simple_test("B_BFu15s_BFu17i");
    static B_BFu15s_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu15s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_BFu17i)");
    check_field_offset(lv, v1, 0, "B_BFu15s_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_BFu17i");
    set_bf_and_test(lv, v3, 2, 7, 17, 1, "B_BFu15s_BFu17i");
    set_bf_and_test(lv, v3, 2, 7, 17, hide_ull(1LL<<16), "B_BFu15s_BFu17i");
  }
}
static Arrange_To_Call_Me vB_BFu15s_BFu17i(Test_B_BFu15s_BFu17i, "B_BFu15s_BFu17i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_BFu17ll()
{
  {
    init_simple_test("B_BFu15s_BFu17ll");
    static B_BFu15s_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu15s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_BFu17ll)");
    check_field_offset(lv, v1, 0, "B_BFu15s_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_BFu17ll");
    set_bf_and_test(lv, v3, 2, 7, 17, 1, "B_BFu15s_BFu17ll");
    set_bf_and_test(lv, v3, 2, 7, 17, hide_ull(1LL<<16), "B_BFu15s_BFu17ll");
  }
}
static Arrange_To_Call_Me vB_BFu15s_BFu17ll(Test_B_BFu15s_BFu17ll, "B_BFu15s_BFu17ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_BFu1c()
{
  {
    init_simple_test("B_BFu15s_BFu1c");
    static B_BFu15s_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu15s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_BFu1c)");
    check_field_offset(lv, v1, 0, "B_BFu15s_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_BFu1c");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "B_BFu15s_BFu1c");
  }
}
static Arrange_To_Call_Me vB_BFu15s_BFu1c(Test_B_BFu15s_BFu1c, "B_BFu15s_BFu1c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_BFu1i()
{
  {
    init_simple_test("B_BFu15s_BFu1i");
    static B_BFu15s_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu15s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_BFu1i)");
    check_field_offset(lv, v1, 0, "B_BFu15s_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_BFu1i");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "B_BFu15s_BFu1i");
  }
}
static Arrange_To_Call_Me vB_BFu15s_BFu1i(Test_B_BFu15s_BFu1i, "B_BFu15s_BFu1i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_BFu1ll()
{
  {
    init_simple_test("B_BFu15s_BFu1ll");
    static B_BFu15s_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu15s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_BFu1ll)");
    check_field_offset(lv, v1, 0, "B_BFu15s_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_BFu1ll");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "B_BFu15s_BFu1ll");
  }
}
static Arrange_To_Call_Me vB_BFu15s_BFu1ll(Test_B_BFu15s_BFu1ll, "B_BFu15s_BFu1ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_BFu1s()
{
  {
    init_simple_test("B_BFu15s_BFu1s");
    static B_BFu15s_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu15s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_BFu1s)");
    check_field_offset(lv, v1, 0, "B_BFu15s_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_BFu1s");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "B_BFu15s_BFu1s");
  }
}
static Arrange_To_Call_Me vB_BFu15s_BFu1s(Test_B_BFu15s_BFu1s, "B_BFu15s_BFu1s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_BFu31i()
{
  {
    init_simple_test("B_BFu15s_BFu31i");
    static B_BFu15s_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu15s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_BFu31i)");
    check_field_offset(lv, v1, 0, "B_BFu15s_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_BFu31i");
    set_bf_and_test(lv, v3, 2, 7, 31, 1, "B_BFu15s_BFu31i");
    set_bf_and_test(lv, v3, 2, 7, 31, hide_ull(1LL<<30), "B_BFu15s_BFu31i");
  }
}
static Arrange_To_Call_Me vB_BFu15s_BFu31i(Test_B_BFu15s_BFu31i, "B_BFu15s_BFu31i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_BFu31ll()
{
  {
    init_simple_test("B_BFu15s_BFu31ll");
    static B_BFu15s_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu15s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_BFu31ll)");
    check_field_offset(lv, v1, 0, "B_BFu15s_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_BFu31ll");
    set_bf_and_test(lv, v3, 2, 7, 31, 1, "B_BFu15s_BFu31ll");
    set_bf_and_test(lv, v3, 2, 7, 31, hide_ull(1LL<<30), "B_BFu15s_BFu31ll");
  }
}
static Arrange_To_Call_Me vB_BFu15s_BFu31ll(Test_B_BFu15s_BFu31ll, "B_BFu15s_BFu31ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_BFu32i()
{
  {
    init_simple_test("B_BFu15s_BFu32i");
    static B_BFu15s_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu15s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_BFu32i)");
    check_field_offset(lv, v1, 0, "B_BFu15s_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_BFu32i");
    set_bf_and_test(lv, v3, 2, 7, 32, 1, "B_BFu15s_BFu32i");
    set_bf_and_test(lv, v3, 2, 7, 32, hide_ull(1LL<<31), "B_BFu15s_BFu32i");
  }
}
static Arrange_To_Call_Me vB_BFu15s_BFu32i(Test_B_BFu15s_BFu32i, "B_BFu15s_BFu32i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_BFu32ll()
{
  {
    init_simple_test("B_BFu15s_BFu32ll");
    static B_BFu15s_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu15s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_BFu32ll)");
    check_field_offset(lv, v1, 0, "B_BFu15s_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_BFu32ll");
    set_bf_and_test(lv, v3, 2, 7, 32, 1, "B_BFu15s_BFu32ll");
    set_bf_and_test(lv, v3, 2, 7, 32, hide_ull(1LL<<31), "B_BFu15s_BFu32ll");
  }
}
static Arrange_To_Call_Me vB_BFu15s_BFu32ll(Test_B_BFu15s_BFu32ll, "B_BFu15s_BFu32ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_BFu33()
{
  {
    init_simple_test("B_BFu15s_BFu33");
    static B_BFu15s_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu15s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_BFu33)");
    check_field_offset(lv, v1, 0, "B_BFu15s_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_BFu33");
    set_bf_and_test(lv, v3, 2, 7, 33, 1, "B_BFu15s_BFu33");
    set_bf_and_test(lv, v3, 2, 7, 33, hide_ull(1LL<<32), "B_BFu15s_BFu33");
  }
}
static Arrange_To_Call_Me vB_BFu15s_BFu33(Test_B_BFu15s_BFu33, "B_BFu15s_BFu33", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_BFu7c()
{
  {
    init_simple_test("B_BFu15s_BFu7c");
    static B_BFu15s_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_BFu7c)");
    check_field_offset(lv, v1, 0, "B_BFu15s_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_BFu7c");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "B_BFu15s_BFu7c");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "B_BFu15s_BFu7c");
  }
}
static Arrange_To_Call_Me vB_BFu15s_BFu7c(Test_B_BFu15s_BFu7c, "B_BFu15s_BFu7c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_BFu7i()
{
  {
    init_simple_test("B_BFu15s_BFu7i");
    static B_BFu15s_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_BFu7i)");
    check_field_offset(lv, v1, 0, "B_BFu15s_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_BFu7i");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "B_BFu15s_BFu7i");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "B_BFu15s_BFu7i");
  }
}
static Arrange_To_Call_Me vB_BFu15s_BFu7i(Test_B_BFu15s_BFu7i, "B_BFu15s_BFu7i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_BFu7ll()
{
  {
    init_simple_test("B_BFu15s_BFu7ll");
    static B_BFu15s_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_BFu7ll)");
    check_field_offset(lv, v1, 0, "B_BFu15s_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_BFu7ll");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "B_BFu15s_BFu7ll");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "B_BFu15s_BFu7ll");
  }
}
static Arrange_To_Call_Me vB_BFu15s_BFu7ll(Test_B_BFu15s_BFu7ll, "B_BFu15s_BFu7ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_BFu7s()
{
  {
    init_simple_test("B_BFu15s_BFu7s");
    static B_BFu15s_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_BFu7s)");
    check_field_offset(lv, v1, 0, "B_BFu15s_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_BFu7s");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "B_BFu15s_BFu7s");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "B_BFu15s_BFu7s");
  }
}
static Arrange_To_Call_Me vB_BFu15s_BFu7s(Test_B_BFu15s_BFu7s, "B_BFu15s_BFu7s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_BFu8c()
{
  {
    init_simple_test("B_BFu15s_BFu8c");
    static B_BFu15s_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_BFu8c)");
    check_field_offset(lv, v1, 0, "B_BFu15s_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_BFu8c");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "B_BFu15s_BFu8c");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "B_BFu15s_BFu8c");
  }
}
static Arrange_To_Call_Me vB_BFu15s_BFu8c(Test_B_BFu15s_BFu8c, "B_BFu15s_BFu8c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_BFu8i()
{
  {
    init_simple_test("B_BFu15s_BFu8i");
    static B_BFu15s_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_BFu8i)");
    check_field_offset(lv, v1, 0, "B_BFu15s_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_BFu8i");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "B_BFu15s_BFu8i");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "B_BFu15s_BFu8i");
  }
}
static Arrange_To_Call_Me vB_BFu15s_BFu8i(Test_B_BFu15s_BFu8i, "B_BFu15s_BFu8i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_BFu8ll()
{
  {
    init_simple_test("B_BFu15s_BFu8ll");
    static B_BFu15s_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_BFu8ll)");
    check_field_offset(lv, v1, 0, "B_BFu15s_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_BFu8ll");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "B_BFu15s_BFu8ll");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "B_BFu15s_BFu8ll");
  }
}
static Arrange_To_Call_Me vB_BFu15s_BFu8ll(Test_B_BFu15s_BFu8ll, "B_BFu15s_BFu8ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_BFu8s()
{
  {
    init_simple_test("B_BFu15s_BFu8s");
    static B_BFu15s_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_BFu8s)");
    check_field_offset(lv, v1, 0, "B_BFu15s_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_BFu8s");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "B_BFu15s_BFu8s");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "B_BFu15s_BFu8s");
  }
}
static Arrange_To_Call_Me vB_BFu15s_BFu8s(Test_B_BFu15s_BFu8s, "B_BFu15s_BFu8s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_BFu9i()
{
  {
    init_simple_test("B_BFu15s_BFu9i");
    static B_BFu15s_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_BFu9i)");
    check_field_offset(lv, v1, 0, "B_BFu15s_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_BFu9i");
    set_bf_and_test(lv, v3, 2, 7, 9, 1, "B_BFu15s_BFu9i");
    set_bf_and_test(lv, v3, 2, 7, 9, hide_ull(1LL<<8), "B_BFu15s_BFu9i");
  }
}
static Arrange_To_Call_Me vB_BFu15s_BFu9i(Test_B_BFu15s_BFu9i, "B_BFu15s_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_BFu9ll()
{
  {
    init_simple_test("B_BFu15s_BFu9ll");
    static B_BFu15s_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_BFu9ll)");
    check_field_offset(lv, v1, 0, "B_BFu15s_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_BFu9ll");
    set_bf_and_test(lv, v3, 2, 7, 9, 1, "B_BFu15s_BFu9ll");
    set_bf_and_test(lv, v3, 2, 7, 9, hide_ull(1LL<<8), "B_BFu15s_BFu9ll");
  }
}
static Arrange_To_Call_Me vB_BFu15s_BFu9ll(Test_B_BFu15s_BFu9ll, "B_BFu15s_BFu9ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_BFu9s()
{
  {
    init_simple_test("B_BFu15s_BFu9s");
    static B_BFu15s_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_BFu9s)");
    check_field_offset(lv, v1, 0, "B_BFu15s_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_BFu9s");
    set_bf_and_test(lv, v3, 2, 7, 9, 1, "B_BFu15s_BFu9s");
    set_bf_and_test(lv, v3, 2, 7, 9, hide_ull(1LL<<8), "B_BFu15s_BFu9s");
  }
}
static Arrange_To_Call_Me vB_BFu15s_BFu9s(Test_B_BFu15s_BFu9s, "B_BFu15s_BFu9s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_C()
{
  {
    init_simple_test("B_BFu15s_C");
    static B_BFu15s_C lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15s_C)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_C)");
    check_field_offset(lv, v1, 0, "B_BFu15s_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_C");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_C");
    check_field_offset(lv, v3, 3, "B_BFu15s_C.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15s_C(Test_B_BFu15s_C, "B_BFu15s_C", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_D()
{
  {
    init_simple_test("B_BFu15s_D");
    static B_BFu15s_D lv;
    check2(sizeof(lv), 11, "sizeof(B_BFu15s_D)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_D)");
    check_field_offset(lv, v1, 0, "B_BFu15s_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_D");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_D");
    check_field_offset(lv, v3, 3, "B_BFu15s_D.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15s_D(Test_B_BFu15s_D, "B_BFu15s_D", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_F()
{
  {
    init_simple_test("B_BFu15s_F");
    static B_BFu15s_F lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu15s_F)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_F)");
    check_field_offset(lv, v1, 0, "B_BFu15s_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_F");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_F");
    check_field_offset(lv, v3, 3, "B_BFu15s_F.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15s_F(Test_B_BFu15s_F, "B_BFu15s_F", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_I()
{
  {
    init_simple_test("B_BFu15s_I");
    static B_BFu15s_I lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu15s_I)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_I)");
    check_field_offset(lv, v1, 0, "B_BFu15s_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_I");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_I");
    check_field_offset(lv, v3, 3, "B_BFu15s_I.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15s_I(Test_B_BFu15s_I, "B_BFu15s_I", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_Ip()
{
  {
    init_simple_test("B_BFu15s_Ip");
    static B_BFu15s_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(B_BFu15s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_Ip)");
    check_field_offset(lv, v1, 0, "B_BFu15s_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_Ip");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_Ip");
    check_field_offset(lv, v3, 3, "B_BFu15s_Ip.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15s_Ip(Test_B_BFu15s_Ip, "B_BFu15s_Ip", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_L()
{
  {
    init_simple_test("B_BFu15s_L");
    static B_BFu15s_L lv;
    check2(sizeof(lv), 11, "sizeof(B_BFu15s_L)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_L)");
    check_field_offset(lv, v1, 0, "B_BFu15s_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_L");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_L");
    check_field_offset(lv, v3, 3, "B_BFu15s_L.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15s_L(Test_B_BFu15s_L, "B_BFu15s_L", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_S()
{
  {
    init_simple_test("B_BFu15s_S");
    static B_BFu15s_S lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu15s_S)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_S)");
    check_field_offset(lv, v1, 0, "B_BFu15s_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_S");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_S");
    check_field_offset(lv, v3, 3, "B_BFu15s_S.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15s_S(Test_B_BFu15s_S, "B_BFu15s_S", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_Uc()
{
  {
    init_simple_test("B_BFu15s_Uc");
    static B_BFu15s_Uc lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu15s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_Uc)");
    check_field_offset(lv, v1, 0, "B_BFu15s_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_Uc");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_Uc");
    check_field_offset(lv, v3, 3, "B_BFu15s_Uc.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15s_Uc(Test_B_BFu15s_Uc, "B_BFu15s_Uc", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_Ui()
{
  {
    init_simple_test("B_BFu15s_Ui");
    static B_BFu15s_Ui lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu15s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_Ui)");
    check_field_offset(lv, v1, 0, "B_BFu15s_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_Ui");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_Ui");
    check_field_offset(lv, v3, 3, "B_BFu15s_Ui.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15s_Ui(Test_B_BFu15s_Ui, "B_BFu15s_Ui", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_Ul()
{
  {
    init_simple_test("B_BFu15s_Ul");
    static B_BFu15s_Ul lv;
    check2(sizeof(lv), 11, "sizeof(B_BFu15s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_Ul)");
    check_field_offset(lv, v1, 0, "B_BFu15s_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_Ul");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_Ul");
    check_field_offset(lv, v3, 3, "B_BFu15s_Ul.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15s_Ul(Test_B_BFu15s_Ul, "B_BFu15s_Ul", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_Us()
{
  {
    init_simple_test("B_BFu15s_Us");
    static B_BFu15s_Us lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu15s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_Us)");
    check_field_offset(lv, v1, 0, "B_BFu15s_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_Us");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_Us");
    check_field_offset(lv, v3, 3, "B_BFu15s_Us.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15s_Us(Test_B_BFu15s_Us, "B_BFu15s_Us", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu15s_Vp()
{
  {
    init_simple_test("B_BFu15s_Vp");
    static B_BFu15s_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(B_BFu15s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu15s_Vp)");
    check_field_offset(lv, v1, 0, "B_BFu15s_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "B_BFu15s_Vp");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "B_BFu15s_Vp");
    check_field_offset(lv, v3, 3, "B_BFu15s_Vp.v3");
  }
}
static Arrange_To_Call_Me vB_BFu15s_Vp(Test_B_BFu15s_Vp, "B_BFu15s_Vp", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i()
{
  {
    init_simple_test("B_BFu16i");
    static B_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i)");
    check_field_offset(lv, v1, 0, "B_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i");
  }
}
static Arrange_To_Call_Me vB_BFu16i(Test_B_BFu16i, "B_BFu16i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_B()
{
  {
    init_simple_test("B_BFu16i_B");
    static B_BFu16i_B lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16i_B)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_B)");
    check_field_offset(lv, v1, 0, "B_BFu16i_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_B");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_B");
    check_field_offset(lv, v3, 3, "B_BFu16i_B.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16i_B(Test_B_BFu16i_B, "B_BFu16i_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_BFu15i()
{
  {
    init_simple_test("B_BFu16i_BFu15i");
    static B_BFu16i_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_BFu15i)");
    check_field_offset(lv, v1, 0, "B_BFu16i_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "B_BFu16i_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "B_BFu16i_BFu15i");
  }
}
static Arrange_To_Call_Me vB_BFu16i_BFu15i(Test_B_BFu16i_BFu15i, "B_BFu16i_BFu15i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_BFu15ll()
{
  {
    init_simple_test("B_BFu16i_BFu15ll");
    static B_BFu16i_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_BFu15ll)");
    check_field_offset(lv, v1, 0, "B_BFu16i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "B_BFu16i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "B_BFu16i_BFu15ll");
  }
}
static Arrange_To_Call_Me vB_BFu16i_BFu15ll(Test_B_BFu16i_BFu15ll, "B_BFu16i_BFu15ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_BFu15s()
{
  {
    init_simple_test("B_BFu16i_BFu15s");
    static B_BFu16i_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_BFu15s)");
    check_field_offset(lv, v1, 0, "B_BFu16i_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "B_BFu16i_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "B_BFu16i_BFu15s");
  }
}
static Arrange_To_Call_Me vB_BFu16i_BFu15s(Test_B_BFu16i_BFu15s, "B_BFu16i_BFu15s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_BFu16i()
{
  {
    init_simple_test("B_BFu16i_BFu16i");
    static B_BFu16i_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_BFu16i)");
    check_field_offset(lv, v1, 0, "B_BFu16i_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "B_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "B_BFu16i_BFu16i");
  }
}
static Arrange_To_Call_Me vB_BFu16i_BFu16i(Test_B_BFu16i_BFu16i, "B_BFu16i_BFu16i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_BFu16ll()
{
  {
    init_simple_test("B_BFu16i_BFu16ll");
    static B_BFu16i_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_BFu16ll)");
    check_field_offset(lv, v1, 0, "B_BFu16i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "B_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "B_BFu16i_BFu16ll");
  }
}
static Arrange_To_Call_Me vB_BFu16i_BFu16ll(Test_B_BFu16i_BFu16ll, "B_BFu16i_BFu16ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_BFu16s()
{
  {
    init_simple_test("B_BFu16i_BFu16s");
    static B_BFu16i_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_BFu16s)");
    check_field_offset(lv, v1, 0, "B_BFu16i_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "B_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "B_BFu16i_BFu16s");
  }
}
static Arrange_To_Call_Me vB_BFu16i_BFu16s(Test_B_BFu16i_BFu16s, "B_BFu16i_BFu16s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_BFu17i()
{
  {
    init_simple_test("B_BFu16i_BFu17i");
    static B_BFu16i_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu16i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_BFu17i)");
    check_field_offset(lv, v1, 0, "B_BFu16i_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "B_BFu16i_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "B_BFu16i_BFu17i");
  }
}
static Arrange_To_Call_Me vB_BFu16i_BFu17i(Test_B_BFu16i_BFu17i, "B_BFu16i_BFu17i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_BFu17ll()
{
  {
    init_simple_test("B_BFu16i_BFu17ll");
    static B_BFu16i_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu16i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_BFu17ll)");
    check_field_offset(lv, v1, 0, "B_BFu16i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "B_BFu16i_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "B_BFu16i_BFu17ll");
  }
}
static Arrange_To_Call_Me vB_BFu16i_BFu17ll(Test_B_BFu16i_BFu17ll, "B_BFu16i_BFu17ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_BFu1c()
{
  {
    init_simple_test("B_BFu16i_BFu1c");
    static B_BFu16i_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_BFu1c)");
    check_field_offset(lv, v1, 0, "B_BFu16i_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_BFu1c");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "B_BFu16i_BFu1c");
  }
}
static Arrange_To_Call_Me vB_BFu16i_BFu1c(Test_B_BFu16i_BFu1c, "B_BFu16i_BFu1c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_BFu1i()
{
  {
    init_simple_test("B_BFu16i_BFu1i");
    static B_BFu16i_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_BFu1i)");
    check_field_offset(lv, v1, 0, "B_BFu16i_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_BFu1i");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "B_BFu16i_BFu1i");
  }
}
static Arrange_To_Call_Me vB_BFu16i_BFu1i(Test_B_BFu16i_BFu1i, "B_BFu16i_BFu1i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_BFu1ll()
{
  {
    init_simple_test("B_BFu16i_BFu1ll");
    static B_BFu16i_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_BFu1ll)");
    check_field_offset(lv, v1, 0, "B_BFu16i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_BFu1ll");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "B_BFu16i_BFu1ll");
  }
}
static Arrange_To_Call_Me vB_BFu16i_BFu1ll(Test_B_BFu16i_BFu1ll, "B_BFu16i_BFu1ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_BFu1s()
{
  {
    init_simple_test("B_BFu16i_BFu1s");
    static B_BFu16i_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_BFu1s)");
    check_field_offset(lv, v1, 0, "B_BFu16i_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_BFu1s");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "B_BFu16i_BFu1s");
  }
}
static Arrange_To_Call_Me vB_BFu16i_BFu1s(Test_B_BFu16i_BFu1s, "B_BFu16i_BFu1s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_BFu31i()
{
  {
    init_simple_test("B_BFu16i_BFu31i");
    static B_BFu16i_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu16i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_BFu31i)");
    check_field_offset(lv, v1, 0, "B_BFu16i_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "B_BFu16i_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "B_BFu16i_BFu31i");
  }
}
static Arrange_To_Call_Me vB_BFu16i_BFu31i(Test_B_BFu16i_BFu31i, "B_BFu16i_BFu31i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_BFu31ll()
{
  {
    init_simple_test("B_BFu16i_BFu31ll");
    static B_BFu16i_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu16i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_BFu31ll)");
    check_field_offset(lv, v1, 0, "B_BFu16i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "B_BFu16i_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "B_BFu16i_BFu31ll");
  }
}
static Arrange_To_Call_Me vB_BFu16i_BFu31ll(Test_B_BFu16i_BFu31ll, "B_BFu16i_BFu31ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_BFu32i()
{
  {
    init_simple_test("B_BFu16i_BFu32i");
    static B_BFu16i_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu16i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_BFu32i)");
    check_field_offset(lv, v1, 0, "B_BFu16i_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "B_BFu16i_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "B_BFu16i_BFu32i");
  }
}
static Arrange_To_Call_Me vB_BFu16i_BFu32i(Test_B_BFu16i_BFu32i, "B_BFu16i_BFu32i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_BFu32ll()
{
  {
    init_simple_test("B_BFu16i_BFu32ll");
    static B_BFu16i_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu16i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_BFu32ll)");
    check_field_offset(lv, v1, 0, "B_BFu16i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "B_BFu16i_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "B_BFu16i_BFu32ll");
  }
}
static Arrange_To_Call_Me vB_BFu16i_BFu32ll(Test_B_BFu16i_BFu32ll, "B_BFu16i_BFu32ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_BFu33()
{
  {
    init_simple_test("B_BFu16i_BFu33");
    static B_BFu16i_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(B_BFu16i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_BFu33)");
    check_field_offset(lv, v1, 0, "B_BFu16i_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, 1, "B_BFu16i_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, hide_ull(1LL<<32), "B_BFu16i_BFu33");
  }
}
static Arrange_To_Call_Me vB_BFu16i_BFu33(Test_B_BFu16i_BFu33, "B_BFu16i_BFu33", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_BFu7c()
{
  {
    init_simple_test("B_BFu16i_BFu7c");
    static B_BFu16i_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_BFu7c)");
    check_field_offset(lv, v1, 0, "B_BFu16i_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "B_BFu16i_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "B_BFu16i_BFu7c");
  }
}
static Arrange_To_Call_Me vB_BFu16i_BFu7c(Test_B_BFu16i_BFu7c, "B_BFu16i_BFu7c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_BFu7i()
{
  {
    init_simple_test("B_BFu16i_BFu7i");
    static B_BFu16i_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_BFu7i)");
    check_field_offset(lv, v1, 0, "B_BFu16i_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "B_BFu16i_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "B_BFu16i_BFu7i");
  }
}
static Arrange_To_Call_Me vB_BFu16i_BFu7i(Test_B_BFu16i_BFu7i, "B_BFu16i_BFu7i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_BFu7ll()
{
  {
    init_simple_test("B_BFu16i_BFu7ll");
    static B_BFu16i_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_BFu7ll)");
    check_field_offset(lv, v1, 0, "B_BFu16i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "B_BFu16i_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "B_BFu16i_BFu7ll");
  }
}
static Arrange_To_Call_Me vB_BFu16i_BFu7ll(Test_B_BFu16i_BFu7ll, "B_BFu16i_BFu7ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_BFu7s()
{
  {
    init_simple_test("B_BFu16i_BFu7s");
    static B_BFu16i_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_BFu7s)");
    check_field_offset(lv, v1, 0, "B_BFu16i_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "B_BFu16i_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "B_BFu16i_BFu7s");
  }
}
static Arrange_To_Call_Me vB_BFu16i_BFu7s(Test_B_BFu16i_BFu7s, "B_BFu16i_BFu7s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_BFu8c()
{
  {
    init_simple_test("B_BFu16i_BFu8c");
    static B_BFu16i_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_BFu8c)");
    check_field_offset(lv, v1, 0, "B_BFu16i_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "B_BFu16i_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "B_BFu16i_BFu8c");
  }
}
static Arrange_To_Call_Me vB_BFu16i_BFu8c(Test_B_BFu16i_BFu8c, "B_BFu16i_BFu8c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_BFu8i()
{
  {
    init_simple_test("B_BFu16i_BFu8i");
    static B_BFu16i_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_BFu8i)");
    check_field_offset(lv, v1, 0, "B_BFu16i_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "B_BFu16i_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "B_BFu16i_BFu8i");
  }
}
static Arrange_To_Call_Me vB_BFu16i_BFu8i(Test_B_BFu16i_BFu8i, "B_BFu16i_BFu8i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_BFu8ll()
{
  {
    init_simple_test("B_BFu16i_BFu8ll");
    static B_BFu16i_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_BFu8ll)");
    check_field_offset(lv, v1, 0, "B_BFu16i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "B_BFu16i_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "B_BFu16i_BFu8ll");
  }
}
static Arrange_To_Call_Me vB_BFu16i_BFu8ll(Test_B_BFu16i_BFu8ll, "B_BFu16i_BFu8ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_BFu8s()
{
  {
    init_simple_test("B_BFu16i_BFu8s");
    static B_BFu16i_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_BFu8s)");
    check_field_offset(lv, v1, 0, "B_BFu16i_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "B_BFu16i_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "B_BFu16i_BFu8s");
  }
}
static Arrange_To_Call_Me vB_BFu16i_BFu8s(Test_B_BFu16i_BFu8s, "B_BFu16i_BFu8s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_BFu9i()
{
  {
    init_simple_test("B_BFu16i_BFu9i");
    static B_BFu16i_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_BFu9i)");
    check_field_offset(lv, v1, 0, "B_BFu16i_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "B_BFu16i_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "B_BFu16i_BFu9i");
  }
}
static Arrange_To_Call_Me vB_BFu16i_BFu9i(Test_B_BFu16i_BFu9i, "B_BFu16i_BFu9i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_BFu9ll()
{
  {
    init_simple_test("B_BFu16i_BFu9ll");
    static B_BFu16i_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_BFu9ll)");
    check_field_offset(lv, v1, 0, "B_BFu16i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "B_BFu16i_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "B_BFu16i_BFu9ll");
  }
}
static Arrange_To_Call_Me vB_BFu16i_BFu9ll(Test_B_BFu16i_BFu9ll, "B_BFu16i_BFu9ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_BFu9s()
{
  {
    init_simple_test("B_BFu16i_BFu9s");
    static B_BFu16i_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_BFu9s)");
    check_field_offset(lv, v1, 0, "B_BFu16i_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "B_BFu16i_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "B_BFu16i_BFu9s");
  }
}
static Arrange_To_Call_Me vB_BFu16i_BFu9s(Test_B_BFu16i_BFu9s, "B_BFu16i_BFu9s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_C()
{
  {
    init_simple_test("B_BFu16i_C");
    static B_BFu16i_C lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16i_C)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_C)");
    check_field_offset(lv, v1, 0, "B_BFu16i_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_C");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_C");
    check_field_offset(lv, v3, 3, "B_BFu16i_C.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16i_C(Test_B_BFu16i_C, "B_BFu16i_C", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_D()
{
  {
    init_simple_test("B_BFu16i_D");
    static B_BFu16i_D lv;
    check2(sizeof(lv), 11, "sizeof(B_BFu16i_D)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_D)");
    check_field_offset(lv, v1, 0, "B_BFu16i_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_D");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_D");
    check_field_offset(lv, v3, 3, "B_BFu16i_D.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16i_D(Test_B_BFu16i_D, "B_BFu16i_D", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_F()
{
  {
    init_simple_test("B_BFu16i_F");
    static B_BFu16i_F lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu16i_F)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_F)");
    check_field_offset(lv, v1, 0, "B_BFu16i_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_F");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_F");
    check_field_offset(lv, v3, 3, "B_BFu16i_F.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16i_F(Test_B_BFu16i_F, "B_BFu16i_F", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_I()
{
  {
    init_simple_test("B_BFu16i_I");
    static B_BFu16i_I lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu16i_I)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_I)");
    check_field_offset(lv, v1, 0, "B_BFu16i_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_I");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_I");
    check_field_offset(lv, v3, 3, "B_BFu16i_I.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16i_I(Test_B_BFu16i_I, "B_BFu16i_I", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_Ip()
{
  {
    init_simple_test("B_BFu16i_Ip");
    static B_BFu16i_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(B_BFu16i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_Ip)");
    check_field_offset(lv, v1, 0, "B_BFu16i_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_Ip");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_Ip");
    check_field_offset(lv, v3, 3, "B_BFu16i_Ip.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16i_Ip(Test_B_BFu16i_Ip, "B_BFu16i_Ip", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_L()
{
  {
    init_simple_test("B_BFu16i_L");
    static B_BFu16i_L lv;
    check2(sizeof(lv), 11, "sizeof(B_BFu16i_L)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_L)");
    check_field_offset(lv, v1, 0, "B_BFu16i_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_L");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_L");
    check_field_offset(lv, v3, 3, "B_BFu16i_L.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16i_L(Test_B_BFu16i_L, "B_BFu16i_L", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_S()
{
  {
    init_simple_test("B_BFu16i_S");
    static B_BFu16i_S lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16i_S)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_S)");
    check_field_offset(lv, v1, 0, "B_BFu16i_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_S");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_S");
    check_field_offset(lv, v3, 3, "B_BFu16i_S.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16i_S(Test_B_BFu16i_S, "B_BFu16i_S", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_Uc()
{
  {
    init_simple_test("B_BFu16i_Uc");
    static B_BFu16i_Uc lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_Uc)");
    check_field_offset(lv, v1, 0, "B_BFu16i_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_Uc");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_Uc");
    check_field_offset(lv, v3, 3, "B_BFu16i_Uc.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16i_Uc(Test_B_BFu16i_Uc, "B_BFu16i_Uc", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_Ui()
{
  {
    init_simple_test("B_BFu16i_Ui");
    static B_BFu16i_Ui lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu16i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_Ui)");
    check_field_offset(lv, v1, 0, "B_BFu16i_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_Ui");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_Ui");
    check_field_offset(lv, v3, 3, "B_BFu16i_Ui.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16i_Ui(Test_B_BFu16i_Ui, "B_BFu16i_Ui", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_Ul()
{
  {
    init_simple_test("B_BFu16i_Ul");
    static B_BFu16i_Ul lv;
    check2(sizeof(lv), 11, "sizeof(B_BFu16i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_Ul)");
    check_field_offset(lv, v1, 0, "B_BFu16i_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_Ul");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_Ul");
    check_field_offset(lv, v3, 3, "B_BFu16i_Ul.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16i_Ul(Test_B_BFu16i_Ul, "B_BFu16i_Ul", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_Us()
{
  {
    init_simple_test("B_BFu16i_Us");
    static B_BFu16i_Us lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_Us)");
    check_field_offset(lv, v1, 0, "B_BFu16i_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_Us");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_Us");
    check_field_offset(lv, v3, 3, "B_BFu16i_Us.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16i_Us(Test_B_BFu16i_Us, "B_BFu16i_Us", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16i_Vp()
{
  {
    init_simple_test("B_BFu16i_Vp");
    static B_BFu16i_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(B_BFu16i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16i_Vp)");
    check_field_offset(lv, v1, 0, "B_BFu16i_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16i_Vp");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16i_Vp");
    check_field_offset(lv, v3, 3, "B_BFu16i_Vp.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16i_Vp(Test_B_BFu16i_Vp, "B_BFu16i_Vp", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll()
{
  {
    init_simple_test("B_BFu16ll");
    static B_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll)");
    check_field_offset(lv, v1, 0, "B_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll");
  }
}
static Arrange_To_Call_Me vB_BFu16ll(Test_B_BFu16ll, "B_BFu16ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_B()
{
  {
    init_simple_test("B_BFu16ll_B");
    static B_BFu16ll_B lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_B)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_B");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_B");
    check_field_offset(lv, v3, 3, "B_BFu16ll_B.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_B(Test_B_BFu16ll_B, "B_BFu16ll_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_BFu15i()
{
  {
    init_simple_test("B_BFu16ll_BFu15i");
    static B_BFu16ll_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_BFu15i)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "B_BFu16ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "B_BFu16ll_BFu15i");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_BFu15i(Test_B_BFu16ll_BFu15i, "B_BFu16ll_BFu15i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_BFu15ll()
{
  {
    init_simple_test("B_BFu16ll_BFu15ll");
    static B_BFu16ll_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "B_BFu16ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "B_BFu16ll_BFu15ll");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_BFu15ll(Test_B_BFu16ll_BFu15ll, "B_BFu16ll_BFu15ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_BFu15s()
{
  {
    init_simple_test("B_BFu16ll_BFu15s");
    static B_BFu16ll_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_BFu15s)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "B_BFu16ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "B_BFu16ll_BFu15s");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_BFu15s(Test_B_BFu16ll_BFu15s, "B_BFu16ll_BFu15s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_BFu16i()
{
  {
    init_simple_test("B_BFu16ll_BFu16i");
    static B_BFu16ll_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_BFu16i)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "B_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_BFu16i");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_BFu16i(Test_B_BFu16ll_BFu16i, "B_BFu16ll_BFu16i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_BFu16ll()
{
  {
    init_simple_test("B_BFu16ll_BFu16ll");
    static B_BFu16ll_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "B_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_BFu16ll");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_BFu16ll(Test_B_BFu16ll_BFu16ll, "B_BFu16ll_BFu16ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_BFu16s()
{
  {
    init_simple_test("B_BFu16ll_BFu16s");
    static B_BFu16ll_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_BFu16s)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "B_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_BFu16s");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_BFu16s(Test_B_BFu16ll_BFu16s, "B_BFu16ll_BFu16s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_BFu17i()
{
  {
    init_simple_test("B_BFu16ll_BFu17i");
    static B_BFu16ll_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu16ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_BFu17i)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "B_BFu16ll_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "B_BFu16ll_BFu17i");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_BFu17i(Test_B_BFu16ll_BFu17i, "B_BFu16ll_BFu17i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_BFu17ll()
{
  {
    init_simple_test("B_BFu16ll_BFu17ll");
    static B_BFu16ll_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu16ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "B_BFu16ll_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "B_BFu16ll_BFu17ll");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_BFu17ll(Test_B_BFu16ll_BFu17ll, "B_BFu16ll_BFu17ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_BFu1c()
{
  {
    init_simple_test("B_BFu16ll_BFu1c");
    static B_BFu16ll_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_BFu1c)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_BFu1c");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "B_BFu16ll_BFu1c");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_BFu1c(Test_B_BFu16ll_BFu1c, "B_BFu16ll_BFu1c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_BFu1i()
{
  {
    init_simple_test("B_BFu16ll_BFu1i");
    static B_BFu16ll_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_BFu1i)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_BFu1i");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "B_BFu16ll_BFu1i");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_BFu1i(Test_B_BFu16ll_BFu1i, "B_BFu16ll_BFu1i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_BFu1ll()
{
  {
    init_simple_test("B_BFu16ll_BFu1ll");
    static B_BFu16ll_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_BFu1ll");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "B_BFu16ll_BFu1ll");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_BFu1ll(Test_B_BFu16ll_BFu1ll, "B_BFu16ll_BFu1ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_BFu1s()
{
  {
    init_simple_test("B_BFu16ll_BFu1s");
    static B_BFu16ll_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_BFu1s)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_BFu1s");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "B_BFu16ll_BFu1s");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_BFu1s(Test_B_BFu16ll_BFu1s, "B_BFu16ll_BFu1s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_BFu31i()
{
  {
    init_simple_test("B_BFu16ll_BFu31i");
    static B_BFu16ll_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu16ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_BFu31i)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "B_BFu16ll_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "B_BFu16ll_BFu31i");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_BFu31i(Test_B_BFu16ll_BFu31i, "B_BFu16ll_BFu31i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_BFu31ll()
{
  {
    init_simple_test("B_BFu16ll_BFu31ll");
    static B_BFu16ll_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu16ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "B_BFu16ll_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "B_BFu16ll_BFu31ll");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_BFu31ll(Test_B_BFu16ll_BFu31ll, "B_BFu16ll_BFu31ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_BFu32i()
{
  {
    init_simple_test("B_BFu16ll_BFu32i");
    static B_BFu16ll_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu16ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_BFu32i)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "B_BFu16ll_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "B_BFu16ll_BFu32i");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_BFu32i(Test_B_BFu16ll_BFu32i, "B_BFu16ll_BFu32i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_BFu32ll()
{
  {
    init_simple_test("B_BFu16ll_BFu32ll");
    static B_BFu16ll_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu16ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "B_BFu16ll_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "B_BFu16ll_BFu32ll");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_BFu32ll(Test_B_BFu16ll_BFu32ll, "B_BFu16ll_BFu32ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_BFu33()
{
  {
    init_simple_test("B_BFu16ll_BFu33");
    static B_BFu16ll_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(B_BFu16ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_BFu33)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, 1, "B_BFu16ll_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, hide_ull(1LL<<32), "B_BFu16ll_BFu33");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_BFu33(Test_B_BFu16ll_BFu33, "B_BFu16ll_BFu33", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_BFu7c()
{
  {
    init_simple_test("B_BFu16ll_BFu7c");
    static B_BFu16ll_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_BFu7c)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "B_BFu16ll_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "B_BFu16ll_BFu7c");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_BFu7c(Test_B_BFu16ll_BFu7c, "B_BFu16ll_BFu7c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_BFu7i()
{
  {
    init_simple_test("B_BFu16ll_BFu7i");
    static B_BFu16ll_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_BFu7i)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "B_BFu16ll_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "B_BFu16ll_BFu7i");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_BFu7i(Test_B_BFu16ll_BFu7i, "B_BFu16ll_BFu7i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_BFu7ll()
{
  {
    init_simple_test("B_BFu16ll_BFu7ll");
    static B_BFu16ll_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "B_BFu16ll_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "B_BFu16ll_BFu7ll");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_BFu7ll(Test_B_BFu16ll_BFu7ll, "B_BFu16ll_BFu7ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_BFu7s()
{
  {
    init_simple_test("B_BFu16ll_BFu7s");
    static B_BFu16ll_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_BFu7s)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "B_BFu16ll_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "B_BFu16ll_BFu7s");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_BFu7s(Test_B_BFu16ll_BFu7s, "B_BFu16ll_BFu7s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_BFu8c()
{
  {
    init_simple_test("B_BFu16ll_BFu8c");
    static B_BFu16ll_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_BFu8c)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "B_BFu16ll_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "B_BFu16ll_BFu8c");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_BFu8c(Test_B_BFu16ll_BFu8c, "B_BFu16ll_BFu8c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_BFu8i()
{
  {
    init_simple_test("B_BFu16ll_BFu8i");
    static B_BFu16ll_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_BFu8i)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "B_BFu16ll_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "B_BFu16ll_BFu8i");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_BFu8i(Test_B_BFu16ll_BFu8i, "B_BFu16ll_BFu8i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_BFu8ll()
{
  {
    init_simple_test("B_BFu16ll_BFu8ll");
    static B_BFu16ll_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "B_BFu16ll_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "B_BFu16ll_BFu8ll");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_BFu8ll(Test_B_BFu16ll_BFu8ll, "B_BFu16ll_BFu8ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_BFu8s()
{
  {
    init_simple_test("B_BFu16ll_BFu8s");
    static B_BFu16ll_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_BFu8s)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "B_BFu16ll_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "B_BFu16ll_BFu8s");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_BFu8s(Test_B_BFu16ll_BFu8s, "B_BFu16ll_BFu8s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_BFu9i()
{
  {
    init_simple_test("B_BFu16ll_BFu9i");
    static B_BFu16ll_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_BFu9i)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "B_BFu16ll_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "B_BFu16ll_BFu9i");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_BFu9i(Test_B_BFu16ll_BFu9i, "B_BFu16ll_BFu9i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_BFu9ll()
{
  {
    init_simple_test("B_BFu16ll_BFu9ll");
    static B_BFu16ll_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "B_BFu16ll_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "B_BFu16ll_BFu9ll");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_BFu9ll(Test_B_BFu16ll_BFu9ll, "B_BFu16ll_BFu9ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_BFu9s()
{
  {
    init_simple_test("B_BFu16ll_BFu9s");
    static B_BFu16ll_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_BFu9s)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "B_BFu16ll_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "B_BFu16ll_BFu9s");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_BFu9s(Test_B_BFu16ll_BFu9s, "B_BFu16ll_BFu9s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_C()
{
  {
    init_simple_test("B_BFu16ll_C");
    static B_BFu16ll_C lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_C)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_C");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_C");
    check_field_offset(lv, v3, 3, "B_BFu16ll_C.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_C(Test_B_BFu16ll_C, "B_BFu16ll_C", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_D()
{
  {
    init_simple_test("B_BFu16ll_D");
    static B_BFu16ll_D lv;
    check2(sizeof(lv), 11, "sizeof(B_BFu16ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_D)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_D");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_D");
    check_field_offset(lv, v3, 3, "B_BFu16ll_D.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_D(Test_B_BFu16ll_D, "B_BFu16ll_D", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_F()
{
  {
    init_simple_test("B_BFu16ll_F");
    static B_BFu16ll_F lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu16ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_F)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_F");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_F");
    check_field_offset(lv, v3, 3, "B_BFu16ll_F.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_F(Test_B_BFu16ll_F, "B_BFu16ll_F", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_I()
{
  {
    init_simple_test("B_BFu16ll_I");
    static B_BFu16ll_I lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu16ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_I)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_I");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_I");
    check_field_offset(lv, v3, 3, "B_BFu16ll_I.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_I(Test_B_BFu16ll_I, "B_BFu16ll_I", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_Ip()
{
  {
    init_simple_test("B_BFu16ll_Ip");
    static B_BFu16ll_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(B_BFu16ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_Ip)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_Ip");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_Ip");
    check_field_offset(lv, v3, 3, "B_BFu16ll_Ip.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_Ip(Test_B_BFu16ll_Ip, "B_BFu16ll_Ip", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_L()
{
  {
    init_simple_test("B_BFu16ll_L");
    static B_BFu16ll_L lv;
    check2(sizeof(lv), 11, "sizeof(B_BFu16ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_L)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_L");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_L");
    check_field_offset(lv, v3, 3, "B_BFu16ll_L.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_L(Test_B_BFu16ll_L, "B_BFu16ll_L", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_S()
{
  {
    init_simple_test("B_BFu16ll_S");
    static B_BFu16ll_S lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_S)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_S");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_S");
    check_field_offset(lv, v3, 3, "B_BFu16ll_S.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_S(Test_B_BFu16ll_S, "B_BFu16ll_S", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_Uc()
{
  {
    init_simple_test("B_BFu16ll_Uc");
    static B_BFu16ll_Uc lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_Uc)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_Uc");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_Uc");
    check_field_offset(lv, v3, 3, "B_BFu16ll_Uc.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_Uc(Test_B_BFu16ll_Uc, "B_BFu16ll_Uc", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_Ui()
{
  {
    init_simple_test("B_BFu16ll_Ui");
    static B_BFu16ll_Ui lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu16ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_Ui)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_Ui");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_Ui");
    check_field_offset(lv, v3, 3, "B_BFu16ll_Ui.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_Ui(Test_B_BFu16ll_Ui, "B_BFu16ll_Ui", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_Ul()
{
  {
    init_simple_test("B_BFu16ll_Ul");
    static B_BFu16ll_Ul lv;
    check2(sizeof(lv), 11, "sizeof(B_BFu16ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_Ul)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_Ul");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_Ul");
    check_field_offset(lv, v3, 3, "B_BFu16ll_Ul.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_Ul(Test_B_BFu16ll_Ul, "B_BFu16ll_Ul", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_Us()
{
  {
    init_simple_test("B_BFu16ll_Us");
    static B_BFu16ll_Us lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_Us)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_Us");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_Us");
    check_field_offset(lv, v3, 3, "B_BFu16ll_Us.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_Us(Test_B_BFu16ll_Us, "B_BFu16ll_Us", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16ll_Vp()
{
  {
    init_simple_test("B_BFu16ll_Vp");
    static B_BFu16ll_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(B_BFu16ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16ll_Vp)");
    check_field_offset(lv, v1, 0, "B_BFu16ll_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16ll_Vp");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16ll_Vp");
    check_field_offset(lv, v3, 3, "B_BFu16ll_Vp.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16ll_Vp(Test_B_BFu16ll_Vp, "B_BFu16ll_Vp", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s()
{
  {
    init_simple_test("B_BFu16s");
    static B_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s)");
    check_field_offset(lv, v1, 0, "B_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s");
  }
}
static Arrange_To_Call_Me vB_BFu16s(Test_B_BFu16s, "B_BFu16s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_B()
{
  {
    init_simple_test("B_BFu16s_B");
    static B_BFu16s_B lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16s_B)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_B)");
    check_field_offset(lv, v1, 0, "B_BFu16s_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_B");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_B");
    check_field_offset(lv, v3, 3, "B_BFu16s_B.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16s_B(Test_B_BFu16s_B, "B_BFu16s_B", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_BFu15i()
{
  {
    init_simple_test("B_BFu16s_BFu15i");
    static B_BFu16s_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_BFu15i)");
    check_field_offset(lv, v1, 0, "B_BFu16s_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "B_BFu16s_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "B_BFu16s_BFu15i");
  }
}
static Arrange_To_Call_Me vB_BFu16s_BFu15i(Test_B_BFu16s_BFu15i, "B_BFu16s_BFu15i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_BFu15ll()
{
  {
    init_simple_test("B_BFu16s_BFu15ll");
    static B_BFu16s_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_BFu15ll)");
    check_field_offset(lv, v1, 0, "B_BFu16s_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "B_BFu16s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "B_BFu16s_BFu15ll");
  }
}
static Arrange_To_Call_Me vB_BFu16s_BFu15ll(Test_B_BFu16s_BFu15ll, "B_BFu16s_BFu15ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_BFu15s()
{
  {
    init_simple_test("B_BFu16s_BFu15s");
    static B_BFu16s_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_BFu15s)");
    check_field_offset(lv, v1, 0, "B_BFu16s_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "B_BFu16s_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "B_BFu16s_BFu15s");
  }
}
static Arrange_To_Call_Me vB_BFu16s_BFu15s(Test_B_BFu16s_BFu15s, "B_BFu16s_BFu15s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_BFu16i()
{
  {
    init_simple_test("B_BFu16s_BFu16i");
    static B_BFu16s_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_BFu16i)");
    check_field_offset(lv, v1, 0, "B_BFu16s_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "B_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "B_BFu16s_BFu16i");
  }
}
static Arrange_To_Call_Me vB_BFu16s_BFu16i(Test_B_BFu16s_BFu16i, "B_BFu16s_BFu16i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_BFu16ll()
{
  {
    init_simple_test("B_BFu16s_BFu16ll");
    static B_BFu16s_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_BFu16ll)");
    check_field_offset(lv, v1, 0, "B_BFu16s_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "B_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "B_BFu16s_BFu16ll");
  }
}
static Arrange_To_Call_Me vB_BFu16s_BFu16ll(Test_B_BFu16s_BFu16ll, "B_BFu16s_BFu16ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_BFu16s()
{
  {
    init_simple_test("B_BFu16s_BFu16s");
    static B_BFu16s_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_BFu16s)");
    check_field_offset(lv, v1, 0, "B_BFu16s_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "B_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "B_BFu16s_BFu16s");
  }
}
static Arrange_To_Call_Me vB_BFu16s_BFu16s(Test_B_BFu16s_BFu16s, "B_BFu16s_BFu16s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_BFu17i()
{
  {
    init_simple_test("B_BFu16s_BFu17i");
    static B_BFu16s_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu16s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_BFu17i)");
    check_field_offset(lv, v1, 0, "B_BFu16s_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "B_BFu16s_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "B_BFu16s_BFu17i");
  }
}
static Arrange_To_Call_Me vB_BFu16s_BFu17i(Test_B_BFu16s_BFu17i, "B_BFu16s_BFu17i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_BFu17ll()
{
  {
    init_simple_test("B_BFu16s_BFu17ll");
    static B_BFu16s_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu16s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_BFu17ll)");
    check_field_offset(lv, v1, 0, "B_BFu16s_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "B_BFu16s_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "B_BFu16s_BFu17ll");
  }
}
static Arrange_To_Call_Me vB_BFu16s_BFu17ll(Test_B_BFu16s_BFu17ll, "B_BFu16s_BFu17ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_BFu1c()
{
  {
    init_simple_test("B_BFu16s_BFu1c");
    static B_BFu16s_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_BFu1c)");
    check_field_offset(lv, v1, 0, "B_BFu16s_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_BFu1c");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "B_BFu16s_BFu1c");
  }
}
static Arrange_To_Call_Me vB_BFu16s_BFu1c(Test_B_BFu16s_BFu1c, "B_BFu16s_BFu1c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_BFu1i()
{
  {
    init_simple_test("B_BFu16s_BFu1i");
    static B_BFu16s_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_BFu1i)");
    check_field_offset(lv, v1, 0, "B_BFu16s_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_BFu1i");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "B_BFu16s_BFu1i");
  }
}
static Arrange_To_Call_Me vB_BFu16s_BFu1i(Test_B_BFu16s_BFu1i, "B_BFu16s_BFu1i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_BFu1ll()
{
  {
    init_simple_test("B_BFu16s_BFu1ll");
    static B_BFu16s_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_BFu1ll)");
    check_field_offset(lv, v1, 0, "B_BFu16s_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_BFu1ll");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "B_BFu16s_BFu1ll");
  }
}
static Arrange_To_Call_Me vB_BFu16s_BFu1ll(Test_B_BFu16s_BFu1ll, "B_BFu16s_BFu1ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_BFu1s()
{
  {
    init_simple_test("B_BFu16s_BFu1s");
    static B_BFu16s_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_BFu1s)");
    check_field_offset(lv, v1, 0, "B_BFu16s_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_BFu1s");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "B_BFu16s_BFu1s");
  }
}
static Arrange_To_Call_Me vB_BFu16s_BFu1s(Test_B_BFu16s_BFu1s, "B_BFu16s_BFu1s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_BFu31i()
{
  {
    init_simple_test("B_BFu16s_BFu31i");
    static B_BFu16s_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu16s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_BFu31i)");
    check_field_offset(lv, v1, 0, "B_BFu16s_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "B_BFu16s_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "B_BFu16s_BFu31i");
  }
}
static Arrange_To_Call_Me vB_BFu16s_BFu31i(Test_B_BFu16s_BFu31i, "B_BFu16s_BFu31i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_BFu31ll()
{
  {
    init_simple_test("B_BFu16s_BFu31ll");
    static B_BFu16s_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu16s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_BFu31ll)");
    check_field_offset(lv, v1, 0, "B_BFu16s_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "B_BFu16s_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "B_BFu16s_BFu31ll");
  }
}
static Arrange_To_Call_Me vB_BFu16s_BFu31ll(Test_B_BFu16s_BFu31ll, "B_BFu16s_BFu31ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_BFu32i()
{
  {
    init_simple_test("B_BFu16s_BFu32i");
    static B_BFu16s_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu16s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_BFu32i)");
    check_field_offset(lv, v1, 0, "B_BFu16s_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "B_BFu16s_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "B_BFu16s_BFu32i");
  }
}
static Arrange_To_Call_Me vB_BFu16s_BFu32i(Test_B_BFu16s_BFu32i, "B_BFu16s_BFu32i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_BFu32ll()
{
  {
    init_simple_test("B_BFu16s_BFu32ll");
    static B_BFu16s_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu16s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_BFu32ll)");
    check_field_offset(lv, v1, 0, "B_BFu16s_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "B_BFu16s_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "B_BFu16s_BFu32ll");
  }
}
static Arrange_To_Call_Me vB_BFu16s_BFu32ll(Test_B_BFu16s_BFu32ll, "B_BFu16s_BFu32ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_BFu33()
{
  {
    init_simple_test("B_BFu16s_BFu33");
    static B_BFu16s_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(B_BFu16s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_BFu33)");
    check_field_offset(lv, v1, 0, "B_BFu16s_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, 1, "B_BFu16s_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, hide_ull(1LL<<32), "B_BFu16s_BFu33");
  }
}
static Arrange_To_Call_Me vB_BFu16s_BFu33(Test_B_BFu16s_BFu33, "B_BFu16s_BFu33", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_BFu7c()
{
  {
    init_simple_test("B_BFu16s_BFu7c");
    static B_BFu16s_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_BFu7c)");
    check_field_offset(lv, v1, 0, "B_BFu16s_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "B_BFu16s_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "B_BFu16s_BFu7c");
  }
}
static Arrange_To_Call_Me vB_BFu16s_BFu7c(Test_B_BFu16s_BFu7c, "B_BFu16s_BFu7c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_BFu7i()
{
  {
    init_simple_test("B_BFu16s_BFu7i");
    static B_BFu16s_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_BFu7i)");
    check_field_offset(lv, v1, 0, "B_BFu16s_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "B_BFu16s_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "B_BFu16s_BFu7i");
  }
}
static Arrange_To_Call_Me vB_BFu16s_BFu7i(Test_B_BFu16s_BFu7i, "B_BFu16s_BFu7i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_BFu7ll()
{
  {
    init_simple_test("B_BFu16s_BFu7ll");
    static B_BFu16s_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_BFu7ll)");
    check_field_offset(lv, v1, 0, "B_BFu16s_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "B_BFu16s_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "B_BFu16s_BFu7ll");
  }
}
static Arrange_To_Call_Me vB_BFu16s_BFu7ll(Test_B_BFu16s_BFu7ll, "B_BFu16s_BFu7ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_BFu7s()
{
  {
    init_simple_test("B_BFu16s_BFu7s");
    static B_BFu16s_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_BFu7s)");
    check_field_offset(lv, v1, 0, "B_BFu16s_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "B_BFu16s_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "B_BFu16s_BFu7s");
  }
}
static Arrange_To_Call_Me vB_BFu16s_BFu7s(Test_B_BFu16s_BFu7s, "B_BFu16s_BFu7s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_BFu8c()
{
  {
    init_simple_test("B_BFu16s_BFu8c");
    static B_BFu16s_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_BFu8c)");
    check_field_offset(lv, v1, 0, "B_BFu16s_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "B_BFu16s_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "B_BFu16s_BFu8c");
  }
}
static Arrange_To_Call_Me vB_BFu16s_BFu8c(Test_B_BFu16s_BFu8c, "B_BFu16s_BFu8c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_BFu8i()
{
  {
    init_simple_test("B_BFu16s_BFu8i");
    static B_BFu16s_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_BFu8i)");
    check_field_offset(lv, v1, 0, "B_BFu16s_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "B_BFu16s_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "B_BFu16s_BFu8i");
  }
}
static Arrange_To_Call_Me vB_BFu16s_BFu8i(Test_B_BFu16s_BFu8i, "B_BFu16s_BFu8i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_BFu8ll()
{
  {
    init_simple_test("B_BFu16s_BFu8ll");
    static B_BFu16s_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_BFu8ll)");
    check_field_offset(lv, v1, 0, "B_BFu16s_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "B_BFu16s_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "B_BFu16s_BFu8ll");
  }
}
static Arrange_To_Call_Me vB_BFu16s_BFu8ll(Test_B_BFu16s_BFu8ll, "B_BFu16s_BFu8ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_BFu8s()
{
  {
    init_simple_test("B_BFu16s_BFu8s");
    static B_BFu16s_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_BFu8s)");
    check_field_offset(lv, v1, 0, "B_BFu16s_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "B_BFu16s_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "B_BFu16s_BFu8s");
  }
}
static Arrange_To_Call_Me vB_BFu16s_BFu8s(Test_B_BFu16s_BFu8s, "B_BFu16s_BFu8s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_BFu9i()
{
  {
    init_simple_test("B_BFu16s_BFu9i");
    static B_BFu16s_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_BFu9i)");
    check_field_offset(lv, v1, 0, "B_BFu16s_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "B_BFu16s_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "B_BFu16s_BFu9i");
  }
}
static Arrange_To_Call_Me vB_BFu16s_BFu9i(Test_B_BFu16s_BFu9i, "B_BFu16s_BFu9i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_BFu9ll()
{
  {
    init_simple_test("B_BFu16s_BFu9ll");
    static B_BFu16s_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_BFu9ll)");
    check_field_offset(lv, v1, 0, "B_BFu16s_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "B_BFu16s_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "B_BFu16s_BFu9ll");
  }
}
static Arrange_To_Call_Me vB_BFu16s_BFu9ll(Test_B_BFu16s_BFu9ll, "B_BFu16s_BFu9ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_BFu9s()
{
  {
    init_simple_test("B_BFu16s_BFu9s");
    static B_BFu16s_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_BFu9s)");
    check_field_offset(lv, v1, 0, "B_BFu16s_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "B_BFu16s_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "B_BFu16s_BFu9s");
  }
}
static Arrange_To_Call_Me vB_BFu16s_BFu9s(Test_B_BFu16s_BFu9s, "B_BFu16s_BFu9s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_C()
{
  {
    init_simple_test("B_BFu16s_C");
    static B_BFu16s_C lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16s_C)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_C)");
    check_field_offset(lv, v1, 0, "B_BFu16s_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_C");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_C");
    check_field_offset(lv, v3, 3, "B_BFu16s_C.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16s_C(Test_B_BFu16s_C, "B_BFu16s_C", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_D()
{
  {
    init_simple_test("B_BFu16s_D");
    static B_BFu16s_D lv;
    check2(sizeof(lv), 11, "sizeof(B_BFu16s_D)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_D)");
    check_field_offset(lv, v1, 0, "B_BFu16s_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_D");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_D");
    check_field_offset(lv, v3, 3, "B_BFu16s_D.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16s_D(Test_B_BFu16s_D, "B_BFu16s_D", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_F()
{
  {
    init_simple_test("B_BFu16s_F");
    static B_BFu16s_F lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu16s_F)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_F)");
    check_field_offset(lv, v1, 0, "B_BFu16s_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_F");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_F");
    check_field_offset(lv, v3, 3, "B_BFu16s_F.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16s_F(Test_B_BFu16s_F, "B_BFu16s_F", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_I()
{
  {
    init_simple_test("B_BFu16s_I");
    static B_BFu16s_I lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu16s_I)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_I)");
    check_field_offset(lv, v1, 0, "B_BFu16s_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_I");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_I");
    check_field_offset(lv, v3, 3, "B_BFu16s_I.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16s_I(Test_B_BFu16s_I, "B_BFu16s_I", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_Ip()
{
  {
    init_simple_test("B_BFu16s_Ip");
    static B_BFu16s_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(B_BFu16s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_Ip)");
    check_field_offset(lv, v1, 0, "B_BFu16s_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_Ip");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_Ip");
    check_field_offset(lv, v3, 3, "B_BFu16s_Ip.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16s_Ip(Test_B_BFu16s_Ip, "B_BFu16s_Ip", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_L()
{
  {
    init_simple_test("B_BFu16s_L");
    static B_BFu16s_L lv;
    check2(sizeof(lv), 11, "sizeof(B_BFu16s_L)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_L)");
    check_field_offset(lv, v1, 0, "B_BFu16s_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_L");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_L");
    check_field_offset(lv, v3, 3, "B_BFu16s_L.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16s_L(Test_B_BFu16s_L, "B_BFu16s_L", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_S()
{
  {
    init_simple_test("B_BFu16s_S");
    static B_BFu16s_S lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16s_S)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_S)");
    check_field_offset(lv, v1, 0, "B_BFu16s_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_S");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_S");
    check_field_offset(lv, v3, 3, "B_BFu16s_S.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16s_S(Test_B_BFu16s_S, "B_BFu16s_S", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_Uc()
{
  {
    init_simple_test("B_BFu16s_Uc");
    static B_BFu16s_Uc lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu16s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_Uc)");
    check_field_offset(lv, v1, 0, "B_BFu16s_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_Uc");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_Uc");
    check_field_offset(lv, v3, 3, "B_BFu16s_Uc.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16s_Uc(Test_B_BFu16s_Uc, "B_BFu16s_Uc", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_Ui()
{
  {
    init_simple_test("B_BFu16s_Ui");
    static B_BFu16s_Ui lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu16s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_Ui)");
    check_field_offset(lv, v1, 0, "B_BFu16s_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_Ui");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_Ui");
    check_field_offset(lv, v3, 3, "B_BFu16s_Ui.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16s_Ui(Test_B_BFu16s_Ui, "B_BFu16s_Ui", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_Ul()
{
  {
    init_simple_test("B_BFu16s_Ul");
    static B_BFu16s_Ul lv;
    check2(sizeof(lv), 11, "sizeof(B_BFu16s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_Ul)");
    check_field_offset(lv, v1, 0, "B_BFu16s_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_Ul");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_Ul");
    check_field_offset(lv, v3, 3, "B_BFu16s_Ul.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16s_Ul(Test_B_BFu16s_Ul, "B_BFu16s_Ul", 11);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_Us()
{
  {
    init_simple_test("B_BFu16s_Us");
    static B_BFu16s_Us lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu16s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_Us)");
    check_field_offset(lv, v1, 0, "B_BFu16s_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_Us");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_Us");
    check_field_offset(lv, v3, 3, "B_BFu16s_Us.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16s_Us(Test_B_BFu16s_Us, "B_BFu16s_Us", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu16s_Vp()
{
  {
    init_simple_test("B_BFu16s_Vp");
    static B_BFu16s_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(B_BFu16s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu16s_Vp)");
    check_field_offset(lv, v1, 0, "B_BFu16s_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "B_BFu16s_Vp");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "B_BFu16s_Vp");
    check_field_offset(lv, v3, 3, "B_BFu16s_Vp.v3");
  }
}
static Arrange_To_Call_Me vB_BFu16s_Vp(Test_B_BFu16s_Vp, "B_BFu16s_Vp", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i()
{
  {
    init_simple_test("B_BFu17i");
    static B_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i)");
    check_field_offset(lv, v1, 0, "B_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i");
  }
}
static Arrange_To_Call_Me vB_BFu17i(Test_B_BFu17i, "B_BFu17i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_B()
{
  {
    init_simple_test("B_BFu17i_B");
    static B_BFu17i_B lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu17i_B)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_B)");
    check_field_offset(lv, v1, 0, "B_BFu17i_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_B");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_B");
    check_field_offset(lv, v3, 4, "B_BFu17i_B.v3");
  }
}
static Arrange_To_Call_Me vB_BFu17i_B(Test_B_BFu17i_B, "B_BFu17i_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_BFu15i()
{
  {
    init_simple_test("B_BFu17i_BFu15i");
    static B_BFu17i_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu17i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_BFu15i)");
    check_field_offset(lv, v1, 0, "B_BFu17i_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_BFu15i");
    set_bf_and_test(lv, v3, 3, 1, 15, 1, "B_BFu17i_BFu15i");
    set_bf_and_test(lv, v3, 3, 1, 15, hide_ull(1LL<<14), "B_BFu17i_BFu15i");
  }
}
static Arrange_To_Call_Me vB_BFu17i_BFu15i(Test_B_BFu17i_BFu15i, "B_BFu17i_BFu15i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_BFu15ll()
{
  {
    init_simple_test("B_BFu17i_BFu15ll");
    static B_BFu17i_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu17i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_BFu15ll)");
    check_field_offset(lv, v1, 0, "B_BFu17i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 1, 15, 1, "B_BFu17i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 1, 15, hide_ull(1LL<<14), "B_BFu17i_BFu15ll");
  }
}
static Arrange_To_Call_Me vB_BFu17i_BFu15ll(Test_B_BFu17i_BFu15ll, "B_BFu17i_BFu15ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_BFu15s()
{
  {
    init_simple_test("B_BFu17i_BFu15s");
    static B_BFu17i_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu17i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_BFu15s)");
    check_field_offset(lv, v1, 0, "B_BFu17i_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_BFu15s");
    set_bf_and_test(lv, v3, 3, 1, 15, 1, "B_BFu17i_BFu15s");
    set_bf_and_test(lv, v3, 3, 1, 15, hide_ull(1LL<<14), "B_BFu17i_BFu15s");
  }
}
static Arrange_To_Call_Me vB_BFu17i_BFu15s(Test_B_BFu17i_BFu15s, "B_BFu17i_BFu15s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_BFu16i()
{
  {
    init_simple_test("B_BFu17i_BFu16i");
    static B_BFu17i_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu17i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_BFu16i)");
    check_field_offset(lv, v1, 0, "B_BFu17i_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_BFu16i");
    set_bf_and_test(lv, v3, 3, 1, 16, 1, "B_BFu17i_BFu16i");
    set_bf_and_test(lv, v3, 3, 1, 16, hide_ull(1LL<<15), "B_BFu17i_BFu16i");
  }
}
static Arrange_To_Call_Me vB_BFu17i_BFu16i(Test_B_BFu17i_BFu16i, "B_BFu17i_BFu16i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_BFu16ll()
{
  {
    init_simple_test("B_BFu17i_BFu16ll");
    static B_BFu17i_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu17i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_BFu16ll)");
    check_field_offset(lv, v1, 0, "B_BFu17i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_BFu16ll");
    set_bf_and_test(lv, v3, 3, 1, 16, 1, "B_BFu17i_BFu16ll");
    set_bf_and_test(lv, v3, 3, 1, 16, hide_ull(1LL<<15), "B_BFu17i_BFu16ll");
  }
}
static Arrange_To_Call_Me vB_BFu17i_BFu16ll(Test_B_BFu17i_BFu16ll, "B_BFu17i_BFu16ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_BFu16s()
{
  {
    init_simple_test("B_BFu17i_BFu16s");
    static B_BFu17i_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu17i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_BFu16s)");
    check_field_offset(lv, v1, 0, "B_BFu17i_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_BFu16s");
    set_bf_and_test(lv, v3, 3, 1, 16, 1, "B_BFu17i_BFu16s");
    set_bf_and_test(lv, v3, 3, 1, 16, hide_ull(1LL<<15), "B_BFu17i_BFu16s");
  }
}
static Arrange_To_Call_Me vB_BFu17i_BFu16s(Test_B_BFu17i_BFu16s, "B_BFu17i_BFu16s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_BFu17i()
{
  {
    init_simple_test("B_BFu17i_BFu17i");
    static B_BFu17i_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu17i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_BFu17i)");
    check_field_offset(lv, v1, 0, "B_BFu17i_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_BFu17i");
    set_bf_and_test(lv, v3, 3, 1, 17, 1, "B_BFu17i_BFu17i");
    set_bf_and_test(lv, v3, 3, 1, 17, hide_ull(1LL<<16), "B_BFu17i_BFu17i");
  }
}
static Arrange_To_Call_Me vB_BFu17i_BFu17i(Test_B_BFu17i_BFu17i, "B_BFu17i_BFu17i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_BFu17ll()
{
  {
    init_simple_test("B_BFu17i_BFu17ll");
    static B_BFu17i_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu17i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_BFu17ll)");
    check_field_offset(lv, v1, 0, "B_BFu17i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_BFu17ll");
    set_bf_and_test(lv, v3, 3, 1, 17, 1, "B_BFu17i_BFu17ll");
    set_bf_and_test(lv, v3, 3, 1, 17, hide_ull(1LL<<16), "B_BFu17i_BFu17ll");
  }
}
static Arrange_To_Call_Me vB_BFu17i_BFu17ll(Test_B_BFu17i_BFu17ll, "B_BFu17i_BFu17ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_BFu1c()
{
  {
    init_simple_test("B_BFu17i_BFu1c");
    static B_BFu17i_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu17i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_BFu1c)");
    check_field_offset(lv, v1, 0, "B_BFu17i_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_BFu1c");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "B_BFu17i_BFu1c");
  }
}
static Arrange_To_Call_Me vB_BFu17i_BFu1c(Test_B_BFu17i_BFu1c, "B_BFu17i_BFu1c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_BFu1i()
{
  {
    init_simple_test("B_BFu17i_BFu1i");
    static B_BFu17i_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu17i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_BFu1i)");
    check_field_offset(lv, v1, 0, "B_BFu17i_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_BFu1i");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "B_BFu17i_BFu1i");
  }
}
static Arrange_To_Call_Me vB_BFu17i_BFu1i(Test_B_BFu17i_BFu1i, "B_BFu17i_BFu1i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_BFu1ll()
{
  {
    init_simple_test("B_BFu17i_BFu1ll");
    static B_BFu17i_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu17i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_BFu1ll)");
    check_field_offset(lv, v1, 0, "B_BFu17i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_BFu1ll");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "B_BFu17i_BFu1ll");
  }
}
static Arrange_To_Call_Me vB_BFu17i_BFu1ll(Test_B_BFu17i_BFu1ll, "B_BFu17i_BFu1ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_BFu1s()
{
  {
    init_simple_test("B_BFu17i_BFu1s");
    static B_BFu17i_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu17i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_BFu1s)");
    check_field_offset(lv, v1, 0, "B_BFu17i_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_BFu1s");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "B_BFu17i_BFu1s");
  }
}
static Arrange_To_Call_Me vB_BFu17i_BFu1s(Test_B_BFu17i_BFu1s, "B_BFu17i_BFu1s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_BFu31i()
{
  {
    init_simple_test("B_BFu17i_BFu31i");
    static B_BFu17i_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu17i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_BFu31i)");
    check_field_offset(lv, v1, 0, "B_BFu17i_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_BFu31i");
    set_bf_and_test(lv, v3, 3, 1, 31, 1, "B_BFu17i_BFu31i");
    set_bf_and_test(lv, v3, 3, 1, 31, hide_ull(1LL<<30), "B_BFu17i_BFu31i");
  }
}
static Arrange_To_Call_Me vB_BFu17i_BFu31i(Test_B_BFu17i_BFu31i, "B_BFu17i_BFu31i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_BFu31ll()
{
  {
    init_simple_test("B_BFu17i_BFu31ll");
    static B_BFu17i_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu17i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_BFu31ll)");
    check_field_offset(lv, v1, 0, "B_BFu17i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_BFu31ll");
    set_bf_and_test(lv, v3, 3, 1, 31, 1, "B_BFu17i_BFu31ll");
    set_bf_and_test(lv, v3, 3, 1, 31, hide_ull(1LL<<30), "B_BFu17i_BFu31ll");
  }
}
static Arrange_To_Call_Me vB_BFu17i_BFu31ll(Test_B_BFu17i_BFu31ll, "B_BFu17i_BFu31ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_BFu32i()
{
  {
    init_simple_test("B_BFu17i_BFu32i");
    static B_BFu17i_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(B_BFu17i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_BFu32i)");
    check_field_offset(lv, v1, 0, "B_BFu17i_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_BFu32i");
    set_bf_and_test(lv, v3, 3, 1, 32, 1, "B_BFu17i_BFu32i");
    set_bf_and_test(lv, v3, 3, 1, 32, hide_ull(1LL<<31), "B_BFu17i_BFu32i");
  }
}
static Arrange_To_Call_Me vB_BFu17i_BFu32i(Test_B_BFu17i_BFu32i, "B_BFu17i_BFu32i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_BFu32ll()
{
  {
    init_simple_test("B_BFu17i_BFu32ll");
    static B_BFu17i_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(B_BFu17i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_BFu32ll)");
    check_field_offset(lv, v1, 0, "B_BFu17i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_BFu32ll");
    set_bf_and_test(lv, v3, 3, 1, 32, 1, "B_BFu17i_BFu32ll");
    set_bf_and_test(lv, v3, 3, 1, 32, hide_ull(1LL<<31), "B_BFu17i_BFu32ll");
  }
}
static Arrange_To_Call_Me vB_BFu17i_BFu32ll(Test_B_BFu17i_BFu32ll, "B_BFu17i_BFu32ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_BFu33()
{
  {
    init_simple_test("B_BFu17i_BFu33");
    static B_BFu17i_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(B_BFu17i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_BFu33)");
    check_field_offset(lv, v1, 0, "B_BFu17i_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_BFu33");
    set_bf_and_test(lv, v3, 3, 1, 33, 1, "B_BFu17i_BFu33");
    set_bf_and_test(lv, v3, 3, 1, 33, hide_ull(1LL<<32), "B_BFu17i_BFu33");
  }
}
static Arrange_To_Call_Me vB_BFu17i_BFu33(Test_B_BFu17i_BFu33, "B_BFu17i_BFu33", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_BFu7c()
{
  {
    init_simple_test("B_BFu17i_BFu7c");
    static B_BFu17i_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu17i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_BFu7c)");
    check_field_offset(lv, v1, 0, "B_BFu17i_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_BFu7c");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "B_BFu17i_BFu7c");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "B_BFu17i_BFu7c");
  }
}
static Arrange_To_Call_Me vB_BFu17i_BFu7c(Test_B_BFu17i_BFu7c, "B_BFu17i_BFu7c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_BFu7i()
{
  {
    init_simple_test("B_BFu17i_BFu7i");
    static B_BFu17i_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu17i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_BFu7i)");
    check_field_offset(lv, v1, 0, "B_BFu17i_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_BFu7i");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "B_BFu17i_BFu7i");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "B_BFu17i_BFu7i");
  }
}
static Arrange_To_Call_Me vB_BFu17i_BFu7i(Test_B_BFu17i_BFu7i, "B_BFu17i_BFu7i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_BFu7ll()
{
  {
    init_simple_test("B_BFu17i_BFu7ll");
    static B_BFu17i_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu17i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_BFu7ll)");
    check_field_offset(lv, v1, 0, "B_BFu17i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_BFu7ll");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "B_BFu17i_BFu7ll");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "B_BFu17i_BFu7ll");
  }
}
static Arrange_To_Call_Me vB_BFu17i_BFu7ll(Test_B_BFu17i_BFu7ll, "B_BFu17i_BFu7ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_BFu7s()
{
  {
    init_simple_test("B_BFu17i_BFu7s");
    static B_BFu17i_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu17i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_BFu7s)");
    check_field_offset(lv, v1, 0, "B_BFu17i_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_BFu7s");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "B_BFu17i_BFu7s");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "B_BFu17i_BFu7s");
  }
}
static Arrange_To_Call_Me vB_BFu17i_BFu7s(Test_B_BFu17i_BFu7s, "B_BFu17i_BFu7s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_BFu8c()
{
  {
    init_simple_test("B_BFu17i_BFu8c");
    static B_BFu17i_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu17i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_BFu8c)");
    check_field_offset(lv, v1, 0, "B_BFu17i_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_BFu8c");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "B_BFu17i_BFu8c");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "B_BFu17i_BFu8c");
  }
}
static Arrange_To_Call_Me vB_BFu17i_BFu8c(Test_B_BFu17i_BFu8c, "B_BFu17i_BFu8c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_BFu8i()
{
  {
    init_simple_test("B_BFu17i_BFu8i");
    static B_BFu17i_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu17i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_BFu8i)");
    check_field_offset(lv, v1, 0, "B_BFu17i_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_BFu8i");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "B_BFu17i_BFu8i");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "B_BFu17i_BFu8i");
  }
}
static Arrange_To_Call_Me vB_BFu17i_BFu8i(Test_B_BFu17i_BFu8i, "B_BFu17i_BFu8i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_BFu8ll()
{
  {
    init_simple_test("B_BFu17i_BFu8ll");
    static B_BFu17i_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu17i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_BFu8ll)");
    check_field_offset(lv, v1, 0, "B_BFu17i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_BFu8ll");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "B_BFu17i_BFu8ll");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "B_BFu17i_BFu8ll");
  }
}
static Arrange_To_Call_Me vB_BFu17i_BFu8ll(Test_B_BFu17i_BFu8ll, "B_BFu17i_BFu8ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_BFu8s()
{
  {
    init_simple_test("B_BFu17i_BFu8s");
    static B_BFu17i_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu17i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_BFu8s)");
    check_field_offset(lv, v1, 0, "B_BFu17i_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_BFu8s");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "B_BFu17i_BFu8s");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "B_BFu17i_BFu8s");
  }
}
static Arrange_To_Call_Me vB_BFu17i_BFu8s(Test_B_BFu17i_BFu8s, "B_BFu17i_BFu8s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_BFu9i()
{
  {
    init_simple_test("B_BFu17i_BFu9i");
    static B_BFu17i_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu17i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_BFu9i)");
    check_field_offset(lv, v1, 0, "B_BFu17i_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_BFu9i");
    set_bf_and_test(lv, v3, 3, 1, 9, 1, "B_BFu17i_BFu9i");
    set_bf_and_test(lv, v3, 3, 1, 9, hide_ull(1LL<<8), "B_BFu17i_BFu9i");
  }
}
static Arrange_To_Call_Me vB_BFu17i_BFu9i(Test_B_BFu17i_BFu9i, "B_BFu17i_BFu9i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_BFu9ll()
{
  {
    init_simple_test("B_BFu17i_BFu9ll");
    static B_BFu17i_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu17i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_BFu9ll)");
    check_field_offset(lv, v1, 0, "B_BFu17i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_BFu9ll");
    set_bf_and_test(lv, v3, 3, 1, 9, 1, "B_BFu17i_BFu9ll");
    set_bf_and_test(lv, v3, 3, 1, 9, hide_ull(1LL<<8), "B_BFu17i_BFu9ll");
  }
}
static Arrange_To_Call_Me vB_BFu17i_BFu9ll(Test_B_BFu17i_BFu9ll, "B_BFu17i_BFu9ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_BFu9s()
{
  {
    init_simple_test("B_BFu17i_BFu9s");
    static B_BFu17i_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu17i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_BFu9s)");
    check_field_offset(lv, v1, 0, "B_BFu17i_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_BFu9s");
    set_bf_and_test(lv, v3, 3, 1, 9, 1, "B_BFu17i_BFu9s");
    set_bf_and_test(lv, v3, 3, 1, 9, hide_ull(1LL<<8), "B_BFu17i_BFu9s");
  }
}
static Arrange_To_Call_Me vB_BFu17i_BFu9s(Test_B_BFu17i_BFu9s, "B_BFu17i_BFu9s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_C()
{
  {
    init_simple_test("B_BFu17i_C");
    static B_BFu17i_C lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu17i_C)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_C)");
    check_field_offset(lv, v1, 0, "B_BFu17i_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_C");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_C");
    check_field_offset(lv, v3, 4, "B_BFu17i_C.v3");
  }
}
static Arrange_To_Call_Me vB_BFu17i_C(Test_B_BFu17i_C, "B_BFu17i_C", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_D()
{
  {
    init_simple_test("B_BFu17i_D");
    static B_BFu17i_D lv;
    check2(sizeof(lv), 12, "sizeof(B_BFu17i_D)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_D)");
    check_field_offset(lv, v1, 0, "B_BFu17i_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_D");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_D");
    check_field_offset(lv, v3, 4, "B_BFu17i_D.v3");
  }
}
static Arrange_To_Call_Me vB_BFu17i_D(Test_B_BFu17i_D, "B_BFu17i_D", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_F()
{
  {
    init_simple_test("B_BFu17i_F");
    static B_BFu17i_F lv;
    check2(sizeof(lv), 8, "sizeof(B_BFu17i_F)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_F)");
    check_field_offset(lv, v1, 0, "B_BFu17i_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_F");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_F");
    check_field_offset(lv, v3, 4, "B_BFu17i_F.v3");
  }
}
static Arrange_To_Call_Me vB_BFu17i_F(Test_B_BFu17i_F, "B_BFu17i_F", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_I()
{
  {
    init_simple_test("B_BFu17i_I");
    static B_BFu17i_I lv;
    check2(sizeof(lv), 8, "sizeof(B_BFu17i_I)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_I)");
    check_field_offset(lv, v1, 0, "B_BFu17i_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_I");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_I");
    check_field_offset(lv, v3, 4, "B_BFu17i_I.v3");
  }
}
static Arrange_To_Call_Me vB_BFu17i_I(Test_B_BFu17i_I, "B_BFu17i_I", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_Ip()
{
  {
    init_simple_test("B_BFu17i_Ip");
    static B_BFu17i_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(B_BFu17i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_Ip)");
    check_field_offset(lv, v1, 0, "B_BFu17i_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_Ip");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_Ip");
    check_field_offset(lv, v3, 4, "B_BFu17i_Ip.v3");
  }
}
static Arrange_To_Call_Me vB_BFu17i_Ip(Test_B_BFu17i_Ip, "B_BFu17i_Ip", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_L()
{
  {
    init_simple_test("B_BFu17i_L");
    static B_BFu17i_L lv;
    check2(sizeof(lv), 12, "sizeof(B_BFu17i_L)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_L)");
    check_field_offset(lv, v1, 0, "B_BFu17i_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_L");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_L");
    check_field_offset(lv, v3, 4, "B_BFu17i_L.v3");
  }
}
static Arrange_To_Call_Me vB_BFu17i_L(Test_B_BFu17i_L, "B_BFu17i_L", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_S()
{
  {
    init_simple_test("B_BFu17i_S");
    static B_BFu17i_S lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu17i_S)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_S)");
    check_field_offset(lv, v1, 0, "B_BFu17i_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_S");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_S");
    check_field_offset(lv, v3, 4, "B_BFu17i_S.v3");
  }
}
static Arrange_To_Call_Me vB_BFu17i_S(Test_B_BFu17i_S, "B_BFu17i_S", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_Uc()
{
  {
    init_simple_test("B_BFu17i_Uc");
    static B_BFu17i_Uc lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu17i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_Uc)");
    check_field_offset(lv, v1, 0, "B_BFu17i_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_Uc");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_Uc");
    check_field_offset(lv, v3, 4, "B_BFu17i_Uc.v3");
  }
}
static Arrange_To_Call_Me vB_BFu17i_Uc(Test_B_BFu17i_Uc, "B_BFu17i_Uc", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_Ui()
{
  {
    init_simple_test("B_BFu17i_Ui");
    static B_BFu17i_Ui lv;
    check2(sizeof(lv), 8, "sizeof(B_BFu17i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_Ui)");
    check_field_offset(lv, v1, 0, "B_BFu17i_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_Ui");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_Ui");
    check_field_offset(lv, v3, 4, "B_BFu17i_Ui.v3");
  }
}
static Arrange_To_Call_Me vB_BFu17i_Ui(Test_B_BFu17i_Ui, "B_BFu17i_Ui", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_Ul()
{
  {
    init_simple_test("B_BFu17i_Ul");
    static B_BFu17i_Ul lv;
    check2(sizeof(lv), 12, "sizeof(B_BFu17i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_Ul)");
    check_field_offset(lv, v1, 0, "B_BFu17i_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_Ul");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_Ul");
    check_field_offset(lv, v3, 4, "B_BFu17i_Ul.v3");
  }
}
static Arrange_To_Call_Me vB_BFu17i_Ul(Test_B_BFu17i_Ul, "B_BFu17i_Ul", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_Us()
{
  {
    init_simple_test("B_BFu17i_Us");
    static B_BFu17i_Us lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu17i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_Us)");
    check_field_offset(lv, v1, 0, "B_BFu17i_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_Us");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_Us");
    check_field_offset(lv, v3, 4, "B_BFu17i_Us.v3");
  }
}
static Arrange_To_Call_Me vB_BFu17i_Us(Test_B_BFu17i_Us, "B_BFu17i_Us", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17i_Vp()
{
  {
    init_simple_test("B_BFu17i_Vp");
    static B_BFu17i_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(B_BFu17i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17i_Vp)");
    check_field_offset(lv, v1, 0, "B_BFu17i_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17i_Vp");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17i_Vp");
    check_field_offset(lv, v3, 4, "B_BFu17i_Vp.v3");
  }
}
static Arrange_To_Call_Me vB_BFu17i_Vp(Test_B_BFu17i_Vp, "B_BFu17i_Vp", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll()
{
  {
    init_simple_test("B_BFu17ll");
    static B_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll)");
    check_field_offset(lv, v1, 0, "B_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll");
  }
}
static Arrange_To_Call_Me vB_BFu17ll(Test_B_BFu17ll, "B_BFu17ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_B()
{
  {
    init_simple_test("B_BFu17ll_B");
    static B_BFu17ll_B lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu17ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_B)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_B");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_B");
    check_field_offset(lv, v3, 4, "B_BFu17ll_B.v3");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_B(Test_B_BFu17ll_B, "B_BFu17ll_B", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_BFu15i()
{
  {
    init_simple_test("B_BFu17ll_BFu15i");
    static B_BFu17ll_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu17ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_BFu15i)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 1, 15, 1, "B_BFu17ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 1, 15, hide_ull(1LL<<14), "B_BFu17ll_BFu15i");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_BFu15i(Test_B_BFu17ll_BFu15i, "B_BFu17ll_BFu15i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_BFu15ll()
{
  {
    init_simple_test("B_BFu17ll_BFu15ll");
    static B_BFu17ll_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu17ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 1, 15, 1, "B_BFu17ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 1, 15, hide_ull(1LL<<14), "B_BFu17ll_BFu15ll");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_BFu15ll(Test_B_BFu17ll_BFu15ll, "B_BFu17ll_BFu15ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_BFu15s()
{
  {
    init_simple_test("B_BFu17ll_BFu15s");
    static B_BFu17ll_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu17ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_BFu15s)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 1, 15, 1, "B_BFu17ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 1, 15, hide_ull(1LL<<14), "B_BFu17ll_BFu15s");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_BFu15s(Test_B_BFu17ll_BFu15s, "B_BFu17ll_BFu15s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_BFu16i()
{
  {
    init_simple_test("B_BFu17ll_BFu16i");
    static B_BFu17ll_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu17ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_BFu16i)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_BFu16i");
    set_bf_and_test(lv, v3, 3, 1, 16, 1, "B_BFu17ll_BFu16i");
    set_bf_and_test(lv, v3, 3, 1, 16, hide_ull(1LL<<15), "B_BFu17ll_BFu16i");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_BFu16i(Test_B_BFu17ll_BFu16i, "B_BFu17ll_BFu16i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_BFu16ll()
{
  {
    init_simple_test("B_BFu17ll_BFu16ll");
    static B_BFu17ll_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu17ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_BFu16ll");
    set_bf_and_test(lv, v3, 3, 1, 16, 1, "B_BFu17ll_BFu16ll");
    set_bf_and_test(lv, v3, 3, 1, 16, hide_ull(1LL<<15), "B_BFu17ll_BFu16ll");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_BFu16ll(Test_B_BFu17ll_BFu16ll, "B_BFu17ll_BFu16ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_BFu16s()
{
  {
    init_simple_test("B_BFu17ll_BFu16s");
    static B_BFu17ll_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu17ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_BFu16s)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_BFu16s");
    set_bf_and_test(lv, v3, 3, 1, 16, 1, "B_BFu17ll_BFu16s");
    set_bf_and_test(lv, v3, 3, 1, 16, hide_ull(1LL<<15), "B_BFu17ll_BFu16s");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_BFu16s(Test_B_BFu17ll_BFu16s, "B_BFu17ll_BFu16s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_BFu17i()
{
  {
    init_simple_test("B_BFu17ll_BFu17i");
    static B_BFu17ll_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu17ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_BFu17i)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_BFu17i");
    set_bf_and_test(lv, v3, 3, 1, 17, 1, "B_BFu17ll_BFu17i");
    set_bf_and_test(lv, v3, 3, 1, 17, hide_ull(1LL<<16), "B_BFu17ll_BFu17i");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_BFu17i(Test_B_BFu17ll_BFu17i, "B_BFu17ll_BFu17i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_BFu17ll()
{
  {
    init_simple_test("B_BFu17ll_BFu17ll");
    static B_BFu17ll_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu17ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v3, 3, 1, 17, 1, "B_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v3, 3, 1, 17, hide_ull(1LL<<16), "B_BFu17ll_BFu17ll");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_BFu17ll(Test_B_BFu17ll_BFu17ll, "B_BFu17ll_BFu17ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_BFu1c()
{
  {
    init_simple_test("B_BFu17ll_BFu1c");
    static B_BFu17ll_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu17ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_BFu1c)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_BFu1c");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "B_BFu17ll_BFu1c");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_BFu1c(Test_B_BFu17ll_BFu1c, "B_BFu17ll_BFu1c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_BFu1i()
{
  {
    init_simple_test("B_BFu17ll_BFu1i");
    static B_BFu17ll_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu17ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_BFu1i)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_BFu1i");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "B_BFu17ll_BFu1i");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_BFu1i(Test_B_BFu17ll_BFu1i, "B_BFu17ll_BFu1i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_BFu1ll()
{
  {
    init_simple_test("B_BFu17ll_BFu1ll");
    static B_BFu17ll_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu17ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_BFu1ll");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "B_BFu17ll_BFu1ll");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_BFu1ll(Test_B_BFu17ll_BFu1ll, "B_BFu17ll_BFu1ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_BFu1s()
{
  {
    init_simple_test("B_BFu17ll_BFu1s");
    static B_BFu17ll_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu17ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_BFu1s)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_BFu1s");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "B_BFu17ll_BFu1s");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_BFu1s(Test_B_BFu17ll_BFu1s, "B_BFu17ll_BFu1s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_BFu31i()
{
  {
    init_simple_test("B_BFu17ll_BFu31i");
    static B_BFu17ll_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu17ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_BFu31i)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_BFu31i");
    set_bf_and_test(lv, v3, 3, 1, 31, 1, "B_BFu17ll_BFu31i");
    set_bf_and_test(lv, v3, 3, 1, 31, hide_ull(1LL<<30), "B_BFu17ll_BFu31i");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_BFu31i(Test_B_BFu17ll_BFu31i, "B_BFu17ll_BFu31i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_BFu31ll()
{
  {
    init_simple_test("B_BFu17ll_BFu31ll");
    static B_BFu17ll_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu17ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_BFu31ll");
    set_bf_and_test(lv, v3, 3, 1, 31, 1, "B_BFu17ll_BFu31ll");
    set_bf_and_test(lv, v3, 3, 1, 31, hide_ull(1LL<<30), "B_BFu17ll_BFu31ll");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_BFu31ll(Test_B_BFu17ll_BFu31ll, "B_BFu17ll_BFu31ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_BFu32i()
{
  {
    init_simple_test("B_BFu17ll_BFu32i");
    static B_BFu17ll_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(B_BFu17ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_BFu32i)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_BFu32i");
    set_bf_and_test(lv, v3, 3, 1, 32, 1, "B_BFu17ll_BFu32i");
    set_bf_and_test(lv, v3, 3, 1, 32, hide_ull(1LL<<31), "B_BFu17ll_BFu32i");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_BFu32i(Test_B_BFu17ll_BFu32i, "B_BFu17ll_BFu32i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_BFu32ll()
{
  {
    init_simple_test("B_BFu17ll_BFu32ll");
    static B_BFu17ll_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(B_BFu17ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_BFu32ll");
    set_bf_and_test(lv, v3, 3, 1, 32, 1, "B_BFu17ll_BFu32ll");
    set_bf_and_test(lv, v3, 3, 1, 32, hide_ull(1LL<<31), "B_BFu17ll_BFu32ll");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_BFu32ll(Test_B_BFu17ll_BFu32ll, "B_BFu17ll_BFu32ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_BFu33()
{
  {
    init_simple_test("B_BFu17ll_BFu33");
    static B_BFu17ll_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(B_BFu17ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_BFu33)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_BFu33");
    set_bf_and_test(lv, v3, 3, 1, 33, 1, "B_BFu17ll_BFu33");
    set_bf_and_test(lv, v3, 3, 1, 33, hide_ull(1LL<<32), "B_BFu17ll_BFu33");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_BFu33(Test_B_BFu17ll_BFu33, "B_BFu17ll_BFu33", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_BFu7c()
{
  {
    init_simple_test("B_BFu17ll_BFu7c");
    static B_BFu17ll_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu17ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_BFu7c)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_BFu7c");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "B_BFu17ll_BFu7c");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "B_BFu17ll_BFu7c");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_BFu7c(Test_B_BFu17ll_BFu7c, "B_BFu17ll_BFu7c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_BFu7i()
{
  {
    init_simple_test("B_BFu17ll_BFu7i");
    static B_BFu17ll_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu17ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_BFu7i)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_BFu7i");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "B_BFu17ll_BFu7i");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "B_BFu17ll_BFu7i");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_BFu7i(Test_B_BFu17ll_BFu7i, "B_BFu17ll_BFu7i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_BFu7ll()
{
  {
    init_simple_test("B_BFu17ll_BFu7ll");
    static B_BFu17ll_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu17ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_BFu7ll");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "B_BFu17ll_BFu7ll");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "B_BFu17ll_BFu7ll");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_BFu7ll(Test_B_BFu17ll_BFu7ll, "B_BFu17ll_BFu7ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_BFu7s()
{
  {
    init_simple_test("B_BFu17ll_BFu7s");
    static B_BFu17ll_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu17ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_BFu7s)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_BFu7s");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "B_BFu17ll_BFu7s");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "B_BFu17ll_BFu7s");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_BFu7s(Test_B_BFu17ll_BFu7s, "B_BFu17ll_BFu7s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_BFu8c()
{
  {
    init_simple_test("B_BFu17ll_BFu8c");
    static B_BFu17ll_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu17ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_BFu8c)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_BFu8c");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "B_BFu17ll_BFu8c");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "B_BFu17ll_BFu8c");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_BFu8c(Test_B_BFu17ll_BFu8c, "B_BFu17ll_BFu8c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_BFu8i()
{
  {
    init_simple_test("B_BFu17ll_BFu8i");
    static B_BFu17ll_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu17ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_BFu8i)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_BFu8i");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "B_BFu17ll_BFu8i");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "B_BFu17ll_BFu8i");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_BFu8i(Test_B_BFu17ll_BFu8i, "B_BFu17ll_BFu8i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_BFu8ll()
{
  {
    init_simple_test("B_BFu17ll_BFu8ll");
    static B_BFu17ll_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu17ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_BFu8ll");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "B_BFu17ll_BFu8ll");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "B_BFu17ll_BFu8ll");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_BFu8ll(Test_B_BFu17ll_BFu8ll, "B_BFu17ll_BFu8ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_BFu8s()
{
  {
    init_simple_test("B_BFu17ll_BFu8s");
    static B_BFu17ll_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu17ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_BFu8s)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_BFu8s");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "B_BFu17ll_BFu8s");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "B_BFu17ll_BFu8s");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_BFu8s(Test_B_BFu17ll_BFu8s, "B_BFu17ll_BFu8s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_BFu9i()
{
  {
    init_simple_test("B_BFu17ll_BFu9i");
    static B_BFu17ll_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu17ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_BFu9i)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_BFu9i");
    set_bf_and_test(lv, v3, 3, 1, 9, 1, "B_BFu17ll_BFu9i");
    set_bf_and_test(lv, v3, 3, 1, 9, hide_ull(1LL<<8), "B_BFu17ll_BFu9i");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_BFu9i(Test_B_BFu17ll_BFu9i, "B_BFu17ll_BFu9i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_BFu9ll()
{
  {
    init_simple_test("B_BFu17ll_BFu9ll");
    static B_BFu17ll_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu17ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_BFu9ll");
    set_bf_and_test(lv, v3, 3, 1, 9, 1, "B_BFu17ll_BFu9ll");
    set_bf_and_test(lv, v3, 3, 1, 9, hide_ull(1LL<<8), "B_BFu17ll_BFu9ll");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_BFu9ll(Test_B_BFu17ll_BFu9ll, "B_BFu17ll_BFu9ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_BFu9s()
{
  {
    init_simple_test("B_BFu17ll_BFu9s");
    static B_BFu17ll_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu17ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_BFu9s)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_BFu9s");
    set_bf_and_test(lv, v3, 3, 1, 9, 1, "B_BFu17ll_BFu9s");
    set_bf_and_test(lv, v3, 3, 1, 9, hide_ull(1LL<<8), "B_BFu17ll_BFu9s");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_BFu9s(Test_B_BFu17ll_BFu9s, "B_BFu17ll_BFu9s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_C()
{
  {
    init_simple_test("B_BFu17ll_C");
    static B_BFu17ll_C lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu17ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_C)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_C");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_C");
    check_field_offset(lv, v3, 4, "B_BFu17ll_C.v3");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_C(Test_B_BFu17ll_C, "B_BFu17ll_C", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_D()
{
  {
    init_simple_test("B_BFu17ll_D");
    static B_BFu17ll_D lv;
    check2(sizeof(lv), 12, "sizeof(B_BFu17ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_D)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_D");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_D");
    check_field_offset(lv, v3, 4, "B_BFu17ll_D.v3");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_D(Test_B_BFu17ll_D, "B_BFu17ll_D", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_F()
{
  {
    init_simple_test("B_BFu17ll_F");
    static B_BFu17ll_F lv;
    check2(sizeof(lv), 8, "sizeof(B_BFu17ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_F)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_F");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_F");
    check_field_offset(lv, v3, 4, "B_BFu17ll_F.v3");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_F(Test_B_BFu17ll_F, "B_BFu17ll_F", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_I()
{
  {
    init_simple_test("B_BFu17ll_I");
    static B_BFu17ll_I lv;
    check2(sizeof(lv), 8, "sizeof(B_BFu17ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_I)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_I");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_I");
    check_field_offset(lv, v3, 4, "B_BFu17ll_I.v3");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_I(Test_B_BFu17ll_I, "B_BFu17ll_I", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_Ip()
{
  {
    init_simple_test("B_BFu17ll_Ip");
    static B_BFu17ll_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(B_BFu17ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_Ip)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_Ip");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_Ip");
    check_field_offset(lv, v3, 4, "B_BFu17ll_Ip.v3");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_Ip(Test_B_BFu17ll_Ip, "B_BFu17ll_Ip", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_L()
{
  {
    init_simple_test("B_BFu17ll_L");
    static B_BFu17ll_L lv;
    check2(sizeof(lv), 12, "sizeof(B_BFu17ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_L)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_L");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_L");
    check_field_offset(lv, v3, 4, "B_BFu17ll_L.v3");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_L(Test_B_BFu17ll_L, "B_BFu17ll_L", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_S()
{
  {
    init_simple_test("B_BFu17ll_S");
    static B_BFu17ll_S lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu17ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_S)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_S");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_S");
    check_field_offset(lv, v3, 4, "B_BFu17ll_S.v3");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_S(Test_B_BFu17ll_S, "B_BFu17ll_S", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_Uc()
{
  {
    init_simple_test("B_BFu17ll_Uc");
    static B_BFu17ll_Uc lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu17ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_Uc)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_Uc");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_Uc");
    check_field_offset(lv, v3, 4, "B_BFu17ll_Uc.v3");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_Uc(Test_B_BFu17ll_Uc, "B_BFu17ll_Uc", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_Ui()
{
  {
    init_simple_test("B_BFu17ll_Ui");
    static B_BFu17ll_Ui lv;
    check2(sizeof(lv), 8, "sizeof(B_BFu17ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_Ui)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_Ui");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_Ui");
    check_field_offset(lv, v3, 4, "B_BFu17ll_Ui.v3");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_Ui(Test_B_BFu17ll_Ui, "B_BFu17ll_Ui", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_Ul()
{
  {
    init_simple_test("B_BFu17ll_Ul");
    static B_BFu17ll_Ul lv;
    check2(sizeof(lv), 12, "sizeof(B_BFu17ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_Ul)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_Ul");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_Ul");
    check_field_offset(lv, v3, 4, "B_BFu17ll_Ul.v3");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_Ul(Test_B_BFu17ll_Ul, "B_BFu17ll_Ul", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_Us()
{
  {
    init_simple_test("B_BFu17ll_Us");
    static B_BFu17ll_Us lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu17ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_Us)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_Us");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_Us");
    check_field_offset(lv, v3, 4, "B_BFu17ll_Us.v3");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_Us(Test_B_BFu17ll_Us, "B_BFu17ll_Us", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu17ll_Vp()
{
  {
    init_simple_test("B_BFu17ll_Vp");
    static B_BFu17ll_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(B_BFu17ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu17ll_Vp)");
    check_field_offset(lv, v1, 0, "B_BFu17ll_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "B_BFu17ll_Vp");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "B_BFu17ll_Vp");
    check_field_offset(lv, v3, 4, "B_BFu17ll_Vp.v3");
  }
}
static Arrange_To_Call_Me vB_BFu17ll_Vp(Test_B_BFu17ll_Vp, "B_BFu17ll_Vp", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c()
{
  {
    init_simple_test("B_BFu1c");
    static B_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c)");
    check_field_offset(lv, v1, 0, "B_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c");
  }
}
static Arrange_To_Call_Me vB_BFu1c(Test_B_BFu1c, "B_BFu1c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_B()
{
  {
    init_simple_test("B_BFu1c_B");
    static B_BFu1c_B lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1c_B)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_B)");
    check_field_offset(lv, v1, 0, "B_BFu1c_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_B");
    check_field_offset(lv, v3, 2, "B_BFu1c_B.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1c_B(Test_B_BFu1c_B, "B_BFu1c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_BFu15i()
{
  {
    init_simple_test("B_BFu1c_BFu15i");
    static B_BFu1c_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_BFu15i)");
    check_field_offset(lv, v1, 0, "B_BFu1c_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_BFu15i");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "B_BFu1c_BFu15i");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "B_BFu1c_BFu15i");
  }
}
static Arrange_To_Call_Me vB_BFu1c_BFu15i(Test_B_BFu1c_BFu15i, "B_BFu1c_BFu15i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_BFu15ll()
{
  {
    init_simple_test("B_BFu1c_BFu15ll");
    static B_BFu1c_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_BFu15ll)");
    check_field_offset(lv, v1, 0, "B_BFu1c_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_BFu15ll");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "B_BFu1c_BFu15ll");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "B_BFu1c_BFu15ll");
  }
}
static Arrange_To_Call_Me vB_BFu1c_BFu15ll(Test_B_BFu1c_BFu15ll, "B_BFu1c_BFu15ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_BFu15s()
{
  {
    init_simple_test("B_BFu1c_BFu15s");
    static B_BFu1c_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_BFu15s)");
    check_field_offset(lv, v1, 0, "B_BFu1c_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_BFu15s");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "B_BFu1c_BFu15s");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "B_BFu1c_BFu15s");
  }
}
static Arrange_To_Call_Me vB_BFu1c_BFu15s(Test_B_BFu1c_BFu15s, "B_BFu1c_BFu15s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_BFu16i()
{
  {
    init_simple_test("B_BFu1c_BFu16i");
    static B_BFu1c_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu1c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_BFu16i)");
    check_field_offset(lv, v1, 0, "B_BFu1c_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_BFu16i");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "B_BFu1c_BFu16i");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "B_BFu1c_BFu16i");
  }
}
static Arrange_To_Call_Me vB_BFu1c_BFu16i(Test_B_BFu1c_BFu16i, "B_BFu1c_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_BFu16ll()
{
  {
    init_simple_test("B_BFu1c_BFu16ll");
    static B_BFu1c_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu1c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_BFu16ll)");
    check_field_offset(lv, v1, 0, "B_BFu1c_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_BFu16ll");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "B_BFu1c_BFu16ll");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "B_BFu1c_BFu16ll");
  }
}
static Arrange_To_Call_Me vB_BFu1c_BFu16ll(Test_B_BFu1c_BFu16ll, "B_BFu1c_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_BFu16s()
{
  {
    init_simple_test("B_BFu1c_BFu16s");
    static B_BFu1c_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu1c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_BFu16s)");
    check_field_offset(lv, v1, 0, "B_BFu1c_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_BFu16s");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "B_BFu1c_BFu16s");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "B_BFu1c_BFu16s");
  }
}
static Arrange_To_Call_Me vB_BFu1c_BFu16s(Test_B_BFu1c_BFu16s, "B_BFu1c_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_BFu17i()
{
  {
    init_simple_test("B_BFu1c_BFu17i");
    static B_BFu1c_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu1c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_BFu17i)");
    check_field_offset(lv, v1, 0, "B_BFu1c_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_BFu17i");
    set_bf_and_test(lv, v3, 1, 1, 17, 1, "B_BFu1c_BFu17i");
    set_bf_and_test(lv, v3, 1, 1, 17, hide_ull(1LL<<16), "B_BFu1c_BFu17i");
  }
}
static Arrange_To_Call_Me vB_BFu1c_BFu17i(Test_B_BFu1c_BFu17i, "B_BFu1c_BFu17i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_BFu17ll()
{
  {
    init_simple_test("B_BFu1c_BFu17ll");
    static B_BFu1c_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu1c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_BFu17ll)");
    check_field_offset(lv, v1, 0, "B_BFu1c_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_BFu17ll");
    set_bf_and_test(lv, v3, 1, 1, 17, 1, "B_BFu1c_BFu17ll");
    set_bf_and_test(lv, v3, 1, 1, 17, hide_ull(1LL<<16), "B_BFu1c_BFu17ll");
  }
}
static Arrange_To_Call_Me vB_BFu1c_BFu17ll(Test_B_BFu1c_BFu17ll, "B_BFu1c_BFu17ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_BFu1c()
{
  {
    init_simple_test("B_BFu1c_BFu1c");
    static B_BFu1c_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_BFu1c)");
    check_field_offset(lv, v1, 0, "B_BFu1c_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_BFu1c");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "B_BFu1c_BFu1c");
  }
}
static Arrange_To_Call_Me vB_BFu1c_BFu1c(Test_B_BFu1c_BFu1c, "B_BFu1c_BFu1c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_BFu1i()
{
  {
    init_simple_test("B_BFu1c_BFu1i");
    static B_BFu1c_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_BFu1i)");
    check_field_offset(lv, v1, 0, "B_BFu1c_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_BFu1i");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "B_BFu1c_BFu1i");
  }
}
static Arrange_To_Call_Me vB_BFu1c_BFu1i(Test_B_BFu1c_BFu1i, "B_BFu1c_BFu1i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_BFu1ll()
{
  {
    init_simple_test("B_BFu1c_BFu1ll");
    static B_BFu1c_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_BFu1ll)");
    check_field_offset(lv, v1, 0, "B_BFu1c_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_BFu1ll");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "B_BFu1c_BFu1ll");
  }
}
static Arrange_To_Call_Me vB_BFu1c_BFu1ll(Test_B_BFu1c_BFu1ll, "B_BFu1c_BFu1ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_BFu1s()
{
  {
    init_simple_test("B_BFu1c_BFu1s");
    static B_BFu1c_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_BFu1s)");
    check_field_offset(lv, v1, 0, "B_BFu1c_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_BFu1s");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "B_BFu1c_BFu1s");
  }
}
static Arrange_To_Call_Me vB_BFu1c_BFu1s(Test_B_BFu1c_BFu1s, "B_BFu1c_BFu1s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_BFu31i()
{
  {
    init_simple_test("B_BFu1c_BFu31i");
    static B_BFu1c_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu1c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_BFu31i)");
    check_field_offset(lv, v1, 0, "B_BFu1c_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_BFu31i");
    set_bf_and_test(lv, v3, 1, 1, 31, 1, "B_BFu1c_BFu31i");
    set_bf_and_test(lv, v3, 1, 1, 31, hide_ull(1LL<<30), "B_BFu1c_BFu31i");
  }
}
static Arrange_To_Call_Me vB_BFu1c_BFu31i(Test_B_BFu1c_BFu31i, "B_BFu1c_BFu31i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_BFu31ll()
{
  {
    init_simple_test("B_BFu1c_BFu31ll");
    static B_BFu1c_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu1c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_BFu31ll)");
    check_field_offset(lv, v1, 0, "B_BFu1c_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_BFu31ll");
    set_bf_and_test(lv, v3, 1, 1, 31, 1, "B_BFu1c_BFu31ll");
    set_bf_and_test(lv, v3, 1, 1, 31, hide_ull(1LL<<30), "B_BFu1c_BFu31ll");
  }
}
static Arrange_To_Call_Me vB_BFu1c_BFu31ll(Test_B_BFu1c_BFu31ll, "B_BFu1c_BFu31ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_BFu32i()
{
  {
    init_simple_test("B_BFu1c_BFu32i");
    static B_BFu1c_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu1c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_BFu32i)");
    check_field_offset(lv, v1, 0, "B_BFu1c_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_BFu32i");
    set_bf_and_test(lv, v3, 1, 1, 32, 1, "B_BFu1c_BFu32i");
    set_bf_and_test(lv, v3, 1, 1, 32, hide_ull(1LL<<31), "B_BFu1c_BFu32i");
  }
}
static Arrange_To_Call_Me vB_BFu1c_BFu32i(Test_B_BFu1c_BFu32i, "B_BFu1c_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_BFu32ll()
{
  {
    init_simple_test("B_BFu1c_BFu32ll");
    static B_BFu1c_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu1c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_BFu32ll)");
    check_field_offset(lv, v1, 0, "B_BFu1c_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_BFu32ll");
    set_bf_and_test(lv, v3, 1, 1, 32, 1, "B_BFu1c_BFu32ll");
    set_bf_and_test(lv, v3, 1, 1, 32, hide_ull(1LL<<31), "B_BFu1c_BFu32ll");
  }
}
static Arrange_To_Call_Me vB_BFu1c_BFu32ll(Test_B_BFu1c_BFu32ll, "B_BFu1c_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_BFu33()
{
  {
    init_simple_test("B_BFu1c_BFu33");
    static B_BFu1c_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu1c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_BFu33)");
    check_field_offset(lv, v1, 0, "B_BFu1c_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_BFu33");
    set_bf_and_test(lv, v3, 1, 1, 33, 1, "B_BFu1c_BFu33");
    set_bf_and_test(lv, v3, 1, 1, 33, hide_ull(1LL<<32), "B_BFu1c_BFu33");
  }
}
static Arrange_To_Call_Me vB_BFu1c_BFu33(Test_B_BFu1c_BFu33, "B_BFu1c_BFu33", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_BFu7c()
{
  {
    init_simple_test("B_BFu1c_BFu7c");
    static B_BFu1c_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_BFu7c)");
    check_field_offset(lv, v1, 0, "B_BFu1c_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_BFu7c");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "B_BFu1c_BFu7c");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "B_BFu1c_BFu7c");
  }
}
static Arrange_To_Call_Me vB_BFu1c_BFu7c(Test_B_BFu1c_BFu7c, "B_BFu1c_BFu7c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_BFu7i()
{
  {
    init_simple_test("B_BFu1c_BFu7i");
    static B_BFu1c_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_BFu7i)");
    check_field_offset(lv, v1, 0, "B_BFu1c_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_BFu7i");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "B_BFu1c_BFu7i");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "B_BFu1c_BFu7i");
  }
}
static Arrange_To_Call_Me vB_BFu1c_BFu7i(Test_B_BFu1c_BFu7i, "B_BFu1c_BFu7i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_BFu7ll()
{
  {
    init_simple_test("B_BFu1c_BFu7ll");
    static B_BFu1c_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_BFu7ll)");
    check_field_offset(lv, v1, 0, "B_BFu1c_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_BFu7ll");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "B_BFu1c_BFu7ll");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "B_BFu1c_BFu7ll");
  }
}
static Arrange_To_Call_Me vB_BFu1c_BFu7ll(Test_B_BFu1c_BFu7ll, "B_BFu1c_BFu7ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_BFu7s()
{
  {
    init_simple_test("B_BFu1c_BFu7s");
    static B_BFu1c_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_BFu7s)");
    check_field_offset(lv, v1, 0, "B_BFu1c_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_BFu7s");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "B_BFu1c_BFu7s");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "B_BFu1c_BFu7s");
  }
}
static Arrange_To_Call_Me vB_BFu1c_BFu7s(Test_B_BFu1c_BFu7s, "B_BFu1c_BFu7s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_BFu8c()
{
  {
    init_simple_test("B_BFu1c_BFu8c");
    static B_BFu1c_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_BFu8c)");
    check_field_offset(lv, v1, 0, "B_BFu1c_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_BFu8c");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "B_BFu1c_BFu8c");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "B_BFu1c_BFu8c");
  }
}
static Arrange_To_Call_Me vB_BFu1c_BFu8c(Test_B_BFu1c_BFu8c, "B_BFu1c_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_BFu8i()
{
  {
    init_simple_test("B_BFu1c_BFu8i");
    static B_BFu1c_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_BFu8i)");
    check_field_offset(lv, v1, 0, "B_BFu1c_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_BFu8i");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "B_BFu1c_BFu8i");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "B_BFu1c_BFu8i");
  }
}
static Arrange_To_Call_Me vB_BFu1c_BFu8i(Test_B_BFu1c_BFu8i, "B_BFu1c_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_BFu8ll()
{
  {
    init_simple_test("B_BFu1c_BFu8ll");
    static B_BFu1c_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_BFu8ll)");
    check_field_offset(lv, v1, 0, "B_BFu1c_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_BFu8ll");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "B_BFu1c_BFu8ll");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "B_BFu1c_BFu8ll");
  }
}
static Arrange_To_Call_Me vB_BFu1c_BFu8ll(Test_B_BFu1c_BFu8ll, "B_BFu1c_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_BFu8s()
{
  {
    init_simple_test("B_BFu1c_BFu8s");
    static B_BFu1c_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_BFu8s)");
    check_field_offset(lv, v1, 0, "B_BFu1c_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_BFu8s");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "B_BFu1c_BFu8s");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "B_BFu1c_BFu8s");
  }
}
static Arrange_To_Call_Me vB_BFu1c_BFu8s(Test_B_BFu1c_BFu8s, "B_BFu1c_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_BFu9i()
{
  {
    init_simple_test("B_BFu1c_BFu9i");
    static B_BFu1c_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_BFu9i)");
    check_field_offset(lv, v1, 0, "B_BFu1c_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_BFu9i");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "B_BFu1c_BFu9i");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "B_BFu1c_BFu9i");
  }
}
static Arrange_To_Call_Me vB_BFu1c_BFu9i(Test_B_BFu1c_BFu9i, "B_BFu1c_BFu9i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_BFu9ll()
{
  {
    init_simple_test("B_BFu1c_BFu9ll");
    static B_BFu1c_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_BFu9ll)");
    check_field_offset(lv, v1, 0, "B_BFu1c_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_BFu9ll");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "B_BFu1c_BFu9ll");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "B_BFu1c_BFu9ll");
  }
}
static Arrange_To_Call_Me vB_BFu1c_BFu9ll(Test_B_BFu1c_BFu9ll, "B_BFu1c_BFu9ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_BFu9s()
{
  {
    init_simple_test("B_BFu1c_BFu9s");
    static B_BFu1c_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_BFu9s)");
    check_field_offset(lv, v1, 0, "B_BFu1c_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_BFu9s");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "B_BFu1c_BFu9s");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "B_BFu1c_BFu9s");
  }
}
static Arrange_To_Call_Me vB_BFu1c_BFu9s(Test_B_BFu1c_BFu9s, "B_BFu1c_BFu9s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_C()
{
  {
    init_simple_test("B_BFu1c_C");
    static B_BFu1c_C lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1c_C)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_C)");
    check_field_offset(lv, v1, 0, "B_BFu1c_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_C");
    check_field_offset(lv, v3, 2, "B_BFu1c_C.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1c_C(Test_B_BFu1c_C, "B_BFu1c_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_D()
{
  {
    init_simple_test("B_BFu1c_D");
    static B_BFu1c_D lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu1c_D)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_D)");
    check_field_offset(lv, v1, 0, "B_BFu1c_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_D");
    check_field_offset(lv, v3, 2, "B_BFu1c_D.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1c_D(Test_B_BFu1c_D, "B_BFu1c_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_F()
{
  {
    init_simple_test("B_BFu1c_F");
    static B_BFu1c_F lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu1c_F)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_F)");
    check_field_offset(lv, v1, 0, "B_BFu1c_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_F");
    check_field_offset(lv, v3, 2, "B_BFu1c_F.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1c_F(Test_B_BFu1c_F, "B_BFu1c_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_I()
{
  {
    init_simple_test("B_BFu1c_I");
    static B_BFu1c_I lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu1c_I)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_I)");
    check_field_offset(lv, v1, 0, "B_BFu1c_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_I");
    check_field_offset(lv, v3, 2, "B_BFu1c_I.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1c_I(Test_B_BFu1c_I, "B_BFu1c_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_Ip()
{
  {
    init_simple_test("B_BFu1c_Ip");
    static B_BFu1c_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(B_BFu1c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_Ip)");
    check_field_offset(lv, v1, 0, "B_BFu1c_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_Ip");
    check_field_offset(lv, v3, 2, "B_BFu1c_Ip.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1c_Ip(Test_B_BFu1c_Ip, "B_BFu1c_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_L()
{
  {
    init_simple_test("B_BFu1c_L");
    static B_BFu1c_L lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu1c_L)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_L)");
    check_field_offset(lv, v1, 0, "B_BFu1c_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_L");
    check_field_offset(lv, v3, 2, "B_BFu1c_L.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1c_L(Test_B_BFu1c_L, "B_BFu1c_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_S()
{
  {
    init_simple_test("B_BFu1c_S");
    static B_BFu1c_S lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu1c_S)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_S)");
    check_field_offset(lv, v1, 0, "B_BFu1c_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_S");
    check_field_offset(lv, v3, 2, "B_BFu1c_S.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1c_S(Test_B_BFu1c_S, "B_BFu1c_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_Uc()
{
  {
    init_simple_test("B_BFu1c_Uc");
    static B_BFu1c_Uc lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_Uc)");
    check_field_offset(lv, v1, 0, "B_BFu1c_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_Uc");
    check_field_offset(lv, v3, 2, "B_BFu1c_Uc.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1c_Uc(Test_B_BFu1c_Uc, "B_BFu1c_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_Ui()
{
  {
    init_simple_test("B_BFu1c_Ui");
    static B_BFu1c_Ui lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu1c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_Ui)");
    check_field_offset(lv, v1, 0, "B_BFu1c_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_Ui");
    check_field_offset(lv, v3, 2, "B_BFu1c_Ui.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1c_Ui(Test_B_BFu1c_Ui, "B_BFu1c_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_Ul()
{
  {
    init_simple_test("B_BFu1c_Ul");
    static B_BFu1c_Ul lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu1c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_Ul)");
    check_field_offset(lv, v1, 0, "B_BFu1c_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_Ul");
    check_field_offset(lv, v3, 2, "B_BFu1c_Ul.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1c_Ul(Test_B_BFu1c_Ul, "B_BFu1c_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_Us()
{
  {
    init_simple_test("B_BFu1c_Us");
    static B_BFu1c_Us lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu1c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_Us)");
    check_field_offset(lv, v1, 0, "B_BFu1c_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_Us");
    check_field_offset(lv, v3, 2, "B_BFu1c_Us.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1c_Us(Test_B_BFu1c_Us, "B_BFu1c_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1c_Vp()
{
  {
    init_simple_test("B_BFu1c_Vp");
    static B_BFu1c_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(B_BFu1c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1c_Vp)");
    check_field_offset(lv, v1, 0, "B_BFu1c_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1c_Vp");
    check_field_offset(lv, v3, 2, "B_BFu1c_Vp.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1c_Vp(Test_B_BFu1c_Vp, "B_BFu1c_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i()
{
  {
    init_simple_test("B_BFu1i");
    static B_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i)");
    check_field_offset(lv, v1, 0, "B_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i");
  }
}
static Arrange_To_Call_Me vB_BFu1i(Test_B_BFu1i, "B_BFu1i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_B()
{
  {
    init_simple_test("B_BFu1i_B");
    static B_BFu1i_B lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1i_B)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_B)");
    check_field_offset(lv, v1, 0, "B_BFu1i_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_B");
    check_field_offset(lv, v3, 2, "B_BFu1i_B.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1i_B(Test_B_BFu1i_B, "B_BFu1i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_BFu15i()
{
  {
    init_simple_test("B_BFu1i_BFu15i");
    static B_BFu1i_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_BFu15i)");
    check_field_offset(lv, v1, 0, "B_BFu1i_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_BFu15i");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "B_BFu1i_BFu15i");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "B_BFu1i_BFu15i");
  }
}
static Arrange_To_Call_Me vB_BFu1i_BFu15i(Test_B_BFu1i_BFu15i, "B_BFu1i_BFu15i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_BFu15ll()
{
  {
    init_simple_test("B_BFu1i_BFu15ll");
    static B_BFu1i_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_BFu15ll)");
    check_field_offset(lv, v1, 0, "B_BFu1i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_BFu15ll");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "B_BFu1i_BFu15ll");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "B_BFu1i_BFu15ll");
  }
}
static Arrange_To_Call_Me vB_BFu1i_BFu15ll(Test_B_BFu1i_BFu15ll, "B_BFu1i_BFu15ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_BFu15s()
{
  {
    init_simple_test("B_BFu1i_BFu15s");
    static B_BFu1i_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_BFu15s)");
    check_field_offset(lv, v1, 0, "B_BFu1i_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_BFu15s");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "B_BFu1i_BFu15s");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "B_BFu1i_BFu15s");
  }
}
static Arrange_To_Call_Me vB_BFu1i_BFu15s(Test_B_BFu1i_BFu15s, "B_BFu1i_BFu15s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_BFu16i()
{
  {
    init_simple_test("B_BFu1i_BFu16i");
    static B_BFu1i_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu1i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_BFu16i)");
    check_field_offset(lv, v1, 0, "B_BFu1i_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_BFu16i");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "B_BFu1i_BFu16i");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "B_BFu1i_BFu16i");
  }
}
static Arrange_To_Call_Me vB_BFu1i_BFu16i(Test_B_BFu1i_BFu16i, "B_BFu1i_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_BFu16ll()
{
  {
    init_simple_test("B_BFu1i_BFu16ll");
    static B_BFu1i_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu1i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_BFu16ll)");
    check_field_offset(lv, v1, 0, "B_BFu1i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_BFu16ll");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "B_BFu1i_BFu16ll");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "B_BFu1i_BFu16ll");
  }
}
static Arrange_To_Call_Me vB_BFu1i_BFu16ll(Test_B_BFu1i_BFu16ll, "B_BFu1i_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_BFu16s()
{
  {
    init_simple_test("B_BFu1i_BFu16s");
    static B_BFu1i_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu1i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_BFu16s)");
    check_field_offset(lv, v1, 0, "B_BFu1i_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_BFu16s");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "B_BFu1i_BFu16s");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "B_BFu1i_BFu16s");
  }
}
static Arrange_To_Call_Me vB_BFu1i_BFu16s(Test_B_BFu1i_BFu16s, "B_BFu1i_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_BFu17i()
{
  {
    init_simple_test("B_BFu1i_BFu17i");
    static B_BFu1i_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu1i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_BFu17i)");
    check_field_offset(lv, v1, 0, "B_BFu1i_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_BFu17i");
    set_bf_and_test(lv, v3, 1, 1, 17, 1, "B_BFu1i_BFu17i");
    set_bf_and_test(lv, v3, 1, 1, 17, hide_ull(1LL<<16), "B_BFu1i_BFu17i");
  }
}
static Arrange_To_Call_Me vB_BFu1i_BFu17i(Test_B_BFu1i_BFu17i, "B_BFu1i_BFu17i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_BFu17ll()
{
  {
    init_simple_test("B_BFu1i_BFu17ll");
    static B_BFu1i_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu1i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_BFu17ll)");
    check_field_offset(lv, v1, 0, "B_BFu1i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_BFu17ll");
    set_bf_and_test(lv, v3, 1, 1, 17, 1, "B_BFu1i_BFu17ll");
    set_bf_and_test(lv, v3, 1, 1, 17, hide_ull(1LL<<16), "B_BFu1i_BFu17ll");
  }
}
static Arrange_To_Call_Me vB_BFu1i_BFu17ll(Test_B_BFu1i_BFu17ll, "B_BFu1i_BFu17ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_BFu1c()
{
  {
    init_simple_test("B_BFu1i_BFu1c");
    static B_BFu1i_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_BFu1c)");
    check_field_offset(lv, v1, 0, "B_BFu1i_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_BFu1c");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "B_BFu1i_BFu1c");
  }
}
static Arrange_To_Call_Me vB_BFu1i_BFu1c(Test_B_BFu1i_BFu1c, "B_BFu1i_BFu1c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_BFu1i()
{
  {
    init_simple_test("B_BFu1i_BFu1i");
    static B_BFu1i_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_BFu1i)");
    check_field_offset(lv, v1, 0, "B_BFu1i_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_BFu1i");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "B_BFu1i_BFu1i");
  }
}
static Arrange_To_Call_Me vB_BFu1i_BFu1i(Test_B_BFu1i_BFu1i, "B_BFu1i_BFu1i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_BFu1ll()
{
  {
    init_simple_test("B_BFu1i_BFu1ll");
    static B_BFu1i_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_BFu1ll)");
    check_field_offset(lv, v1, 0, "B_BFu1i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_BFu1ll");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "B_BFu1i_BFu1ll");
  }
}
static Arrange_To_Call_Me vB_BFu1i_BFu1ll(Test_B_BFu1i_BFu1ll, "B_BFu1i_BFu1ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_BFu1s()
{
  {
    init_simple_test("B_BFu1i_BFu1s");
    static B_BFu1i_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_BFu1s)");
    check_field_offset(lv, v1, 0, "B_BFu1i_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_BFu1s");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "B_BFu1i_BFu1s");
  }
}
static Arrange_To_Call_Me vB_BFu1i_BFu1s(Test_B_BFu1i_BFu1s, "B_BFu1i_BFu1s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_BFu31i()
{
  {
    init_simple_test("B_BFu1i_BFu31i");
    static B_BFu1i_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu1i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_BFu31i)");
    check_field_offset(lv, v1, 0, "B_BFu1i_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_BFu31i");
    set_bf_and_test(lv, v3, 1, 1, 31, 1, "B_BFu1i_BFu31i");
    set_bf_and_test(lv, v3, 1, 1, 31, hide_ull(1LL<<30), "B_BFu1i_BFu31i");
  }
}
static Arrange_To_Call_Me vB_BFu1i_BFu31i(Test_B_BFu1i_BFu31i, "B_BFu1i_BFu31i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_BFu31ll()
{
  {
    init_simple_test("B_BFu1i_BFu31ll");
    static B_BFu1i_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu1i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_BFu31ll)");
    check_field_offset(lv, v1, 0, "B_BFu1i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_BFu31ll");
    set_bf_and_test(lv, v3, 1, 1, 31, 1, "B_BFu1i_BFu31ll");
    set_bf_and_test(lv, v3, 1, 1, 31, hide_ull(1LL<<30), "B_BFu1i_BFu31ll");
  }
}
static Arrange_To_Call_Me vB_BFu1i_BFu31ll(Test_B_BFu1i_BFu31ll, "B_BFu1i_BFu31ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_BFu32i()
{
  {
    init_simple_test("B_BFu1i_BFu32i");
    static B_BFu1i_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu1i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_BFu32i)");
    check_field_offset(lv, v1, 0, "B_BFu1i_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_BFu32i");
    set_bf_and_test(lv, v3, 1, 1, 32, 1, "B_BFu1i_BFu32i");
    set_bf_and_test(lv, v3, 1, 1, 32, hide_ull(1LL<<31), "B_BFu1i_BFu32i");
  }
}
static Arrange_To_Call_Me vB_BFu1i_BFu32i(Test_B_BFu1i_BFu32i, "B_BFu1i_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_BFu32ll()
{
  {
    init_simple_test("B_BFu1i_BFu32ll");
    static B_BFu1i_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu1i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_BFu32ll)");
    check_field_offset(lv, v1, 0, "B_BFu1i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_BFu32ll");
    set_bf_and_test(lv, v3, 1, 1, 32, 1, "B_BFu1i_BFu32ll");
    set_bf_and_test(lv, v3, 1, 1, 32, hide_ull(1LL<<31), "B_BFu1i_BFu32ll");
  }
}
static Arrange_To_Call_Me vB_BFu1i_BFu32ll(Test_B_BFu1i_BFu32ll, "B_BFu1i_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_BFu33()
{
  {
    init_simple_test("B_BFu1i_BFu33");
    static B_BFu1i_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu1i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_BFu33)");
    check_field_offset(lv, v1, 0, "B_BFu1i_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_BFu33");
    set_bf_and_test(lv, v3, 1, 1, 33, 1, "B_BFu1i_BFu33");
    set_bf_and_test(lv, v3, 1, 1, 33, hide_ull(1LL<<32), "B_BFu1i_BFu33");
  }
}
static Arrange_To_Call_Me vB_BFu1i_BFu33(Test_B_BFu1i_BFu33, "B_BFu1i_BFu33", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_BFu7c()
{
  {
    init_simple_test("B_BFu1i_BFu7c");
    static B_BFu1i_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_BFu7c)");
    check_field_offset(lv, v1, 0, "B_BFu1i_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_BFu7c");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "B_BFu1i_BFu7c");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "B_BFu1i_BFu7c");
  }
}
static Arrange_To_Call_Me vB_BFu1i_BFu7c(Test_B_BFu1i_BFu7c, "B_BFu1i_BFu7c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_BFu7i()
{
  {
    init_simple_test("B_BFu1i_BFu7i");
    static B_BFu1i_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_BFu7i)");
    check_field_offset(lv, v1, 0, "B_BFu1i_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_BFu7i");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "B_BFu1i_BFu7i");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "B_BFu1i_BFu7i");
  }
}
static Arrange_To_Call_Me vB_BFu1i_BFu7i(Test_B_BFu1i_BFu7i, "B_BFu1i_BFu7i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_BFu7ll()
{
  {
    init_simple_test("B_BFu1i_BFu7ll");
    static B_BFu1i_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_BFu7ll)");
    check_field_offset(lv, v1, 0, "B_BFu1i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_BFu7ll");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "B_BFu1i_BFu7ll");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "B_BFu1i_BFu7ll");
  }
}
static Arrange_To_Call_Me vB_BFu1i_BFu7ll(Test_B_BFu1i_BFu7ll, "B_BFu1i_BFu7ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_BFu7s()
{
  {
    init_simple_test("B_BFu1i_BFu7s");
    static B_BFu1i_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_BFu7s)");
    check_field_offset(lv, v1, 0, "B_BFu1i_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_BFu7s");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "B_BFu1i_BFu7s");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "B_BFu1i_BFu7s");
  }
}
static Arrange_To_Call_Me vB_BFu1i_BFu7s(Test_B_BFu1i_BFu7s, "B_BFu1i_BFu7s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_BFu8c()
{
  {
    init_simple_test("B_BFu1i_BFu8c");
    static B_BFu1i_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_BFu8c)");
    check_field_offset(lv, v1, 0, "B_BFu1i_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_BFu8c");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "B_BFu1i_BFu8c");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "B_BFu1i_BFu8c");
  }
}
static Arrange_To_Call_Me vB_BFu1i_BFu8c(Test_B_BFu1i_BFu8c, "B_BFu1i_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_BFu8i()
{
  {
    init_simple_test("B_BFu1i_BFu8i");
    static B_BFu1i_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_BFu8i)");
    check_field_offset(lv, v1, 0, "B_BFu1i_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_BFu8i");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "B_BFu1i_BFu8i");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "B_BFu1i_BFu8i");
  }
}
static Arrange_To_Call_Me vB_BFu1i_BFu8i(Test_B_BFu1i_BFu8i, "B_BFu1i_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_BFu8ll()
{
  {
    init_simple_test("B_BFu1i_BFu8ll");
    static B_BFu1i_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_BFu8ll)");
    check_field_offset(lv, v1, 0, "B_BFu1i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_BFu8ll");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "B_BFu1i_BFu8ll");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "B_BFu1i_BFu8ll");
  }
}
static Arrange_To_Call_Me vB_BFu1i_BFu8ll(Test_B_BFu1i_BFu8ll, "B_BFu1i_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_BFu8s()
{
  {
    init_simple_test("B_BFu1i_BFu8s");
    static B_BFu1i_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_BFu8s)");
    check_field_offset(lv, v1, 0, "B_BFu1i_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_BFu8s");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "B_BFu1i_BFu8s");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "B_BFu1i_BFu8s");
  }
}
static Arrange_To_Call_Me vB_BFu1i_BFu8s(Test_B_BFu1i_BFu8s, "B_BFu1i_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_BFu9i()
{
  {
    init_simple_test("B_BFu1i_BFu9i");
    static B_BFu1i_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_BFu9i)");
    check_field_offset(lv, v1, 0, "B_BFu1i_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_BFu9i");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "B_BFu1i_BFu9i");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "B_BFu1i_BFu9i");
  }
}
static Arrange_To_Call_Me vB_BFu1i_BFu9i(Test_B_BFu1i_BFu9i, "B_BFu1i_BFu9i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_BFu9ll()
{
  {
    init_simple_test("B_BFu1i_BFu9ll");
    static B_BFu1i_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_BFu9ll)");
    check_field_offset(lv, v1, 0, "B_BFu1i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_BFu9ll");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "B_BFu1i_BFu9ll");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "B_BFu1i_BFu9ll");
  }
}
static Arrange_To_Call_Me vB_BFu1i_BFu9ll(Test_B_BFu1i_BFu9ll, "B_BFu1i_BFu9ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_BFu9s()
{
  {
    init_simple_test("B_BFu1i_BFu9s");
    static B_BFu1i_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_BFu9s)");
    check_field_offset(lv, v1, 0, "B_BFu1i_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_BFu9s");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "B_BFu1i_BFu9s");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "B_BFu1i_BFu9s");
  }
}
static Arrange_To_Call_Me vB_BFu1i_BFu9s(Test_B_BFu1i_BFu9s, "B_BFu1i_BFu9s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_C()
{
  {
    init_simple_test("B_BFu1i_C");
    static B_BFu1i_C lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1i_C)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_C)");
    check_field_offset(lv, v1, 0, "B_BFu1i_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_C");
    check_field_offset(lv, v3, 2, "B_BFu1i_C.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1i_C(Test_B_BFu1i_C, "B_BFu1i_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_D()
{
  {
    init_simple_test("B_BFu1i_D");
    static B_BFu1i_D lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu1i_D)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_D)");
    check_field_offset(lv, v1, 0, "B_BFu1i_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_D");
    check_field_offset(lv, v3, 2, "B_BFu1i_D.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1i_D(Test_B_BFu1i_D, "B_BFu1i_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_F()
{
  {
    init_simple_test("B_BFu1i_F");
    static B_BFu1i_F lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu1i_F)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_F)");
    check_field_offset(lv, v1, 0, "B_BFu1i_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_F");
    check_field_offset(lv, v3, 2, "B_BFu1i_F.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1i_F(Test_B_BFu1i_F, "B_BFu1i_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_I()
{
  {
    init_simple_test("B_BFu1i_I");
    static B_BFu1i_I lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu1i_I)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_I)");
    check_field_offset(lv, v1, 0, "B_BFu1i_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_I");
    check_field_offset(lv, v3, 2, "B_BFu1i_I.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1i_I(Test_B_BFu1i_I, "B_BFu1i_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_Ip()
{
  {
    init_simple_test("B_BFu1i_Ip");
    static B_BFu1i_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(B_BFu1i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_Ip)");
    check_field_offset(lv, v1, 0, "B_BFu1i_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_Ip");
    check_field_offset(lv, v3, 2, "B_BFu1i_Ip.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1i_Ip(Test_B_BFu1i_Ip, "B_BFu1i_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_L()
{
  {
    init_simple_test("B_BFu1i_L");
    static B_BFu1i_L lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu1i_L)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_L)");
    check_field_offset(lv, v1, 0, "B_BFu1i_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_L");
    check_field_offset(lv, v3, 2, "B_BFu1i_L.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1i_L(Test_B_BFu1i_L, "B_BFu1i_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_S()
{
  {
    init_simple_test("B_BFu1i_S");
    static B_BFu1i_S lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu1i_S)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_S)");
    check_field_offset(lv, v1, 0, "B_BFu1i_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_S");
    check_field_offset(lv, v3, 2, "B_BFu1i_S.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1i_S(Test_B_BFu1i_S, "B_BFu1i_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_Uc()
{
  {
    init_simple_test("B_BFu1i_Uc");
    static B_BFu1i_Uc lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_Uc)");
    check_field_offset(lv, v1, 0, "B_BFu1i_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_Uc");
    check_field_offset(lv, v3, 2, "B_BFu1i_Uc.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1i_Uc(Test_B_BFu1i_Uc, "B_BFu1i_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_Ui()
{
  {
    init_simple_test("B_BFu1i_Ui");
    static B_BFu1i_Ui lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu1i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_Ui)");
    check_field_offset(lv, v1, 0, "B_BFu1i_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_Ui");
    check_field_offset(lv, v3, 2, "B_BFu1i_Ui.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1i_Ui(Test_B_BFu1i_Ui, "B_BFu1i_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_Ul()
{
  {
    init_simple_test("B_BFu1i_Ul");
    static B_BFu1i_Ul lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu1i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_Ul)");
    check_field_offset(lv, v1, 0, "B_BFu1i_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_Ul");
    check_field_offset(lv, v3, 2, "B_BFu1i_Ul.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1i_Ul(Test_B_BFu1i_Ul, "B_BFu1i_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_Us()
{
  {
    init_simple_test("B_BFu1i_Us");
    static B_BFu1i_Us lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu1i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_Us)");
    check_field_offset(lv, v1, 0, "B_BFu1i_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_Us");
    check_field_offset(lv, v3, 2, "B_BFu1i_Us.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1i_Us(Test_B_BFu1i_Us, "B_BFu1i_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1i_Vp()
{
  {
    init_simple_test("B_BFu1i_Vp");
    static B_BFu1i_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(B_BFu1i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1i_Vp)");
    check_field_offset(lv, v1, 0, "B_BFu1i_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1i_Vp");
    check_field_offset(lv, v3, 2, "B_BFu1i_Vp.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1i_Vp(Test_B_BFu1i_Vp, "B_BFu1i_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll()
{
  {
    init_simple_test("B_BFu1ll");
    static B_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll)");
    check_field_offset(lv, v1, 0, "B_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll");
  }
}
static Arrange_To_Call_Me vB_BFu1ll(Test_B_BFu1ll, "B_BFu1ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_B()
{
  {
    init_simple_test("B_BFu1ll_B");
    static B_BFu1ll_B lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_B)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_B");
    check_field_offset(lv, v3, 2, "B_BFu1ll_B.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_B(Test_B_BFu1ll_B, "B_BFu1ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_BFu15i()
{
  {
    init_simple_test("B_BFu1ll_BFu15i");
    static B_BFu1ll_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_BFu15i)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_BFu15i");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "B_BFu1ll_BFu15i");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "B_BFu1ll_BFu15i");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_BFu15i(Test_B_BFu1ll_BFu15i, "B_BFu1ll_BFu15i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_BFu15ll()
{
  {
    init_simple_test("B_BFu1ll_BFu15ll");
    static B_BFu1ll_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_BFu15ll");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "B_BFu1ll_BFu15ll");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "B_BFu1ll_BFu15ll");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_BFu15ll(Test_B_BFu1ll_BFu15ll, "B_BFu1ll_BFu15ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_BFu15s()
{
  {
    init_simple_test("B_BFu1ll_BFu15s");
    static B_BFu1ll_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_BFu15s)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_BFu15s");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "B_BFu1ll_BFu15s");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "B_BFu1ll_BFu15s");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_BFu15s(Test_B_BFu1ll_BFu15s, "B_BFu1ll_BFu15s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_BFu16i()
{
  {
    init_simple_test("B_BFu1ll_BFu16i");
    static B_BFu1ll_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu1ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_BFu16i)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_BFu16i");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "B_BFu1ll_BFu16i");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "B_BFu1ll_BFu16i");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_BFu16i(Test_B_BFu1ll_BFu16i, "B_BFu1ll_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_BFu16ll()
{
  {
    init_simple_test("B_BFu1ll_BFu16ll");
    static B_BFu1ll_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu1ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_BFu16ll");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "B_BFu1ll_BFu16ll");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "B_BFu1ll_BFu16ll");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_BFu16ll(Test_B_BFu1ll_BFu16ll, "B_BFu1ll_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_BFu16s()
{
  {
    init_simple_test("B_BFu1ll_BFu16s");
    static B_BFu1ll_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu1ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_BFu16s)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_BFu16s");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "B_BFu1ll_BFu16s");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "B_BFu1ll_BFu16s");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_BFu16s(Test_B_BFu1ll_BFu16s, "B_BFu1ll_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_BFu17i()
{
  {
    init_simple_test("B_BFu1ll_BFu17i");
    static B_BFu1ll_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu1ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_BFu17i)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_BFu17i");
    set_bf_and_test(lv, v3, 1, 1, 17, 1, "B_BFu1ll_BFu17i");
    set_bf_and_test(lv, v3, 1, 1, 17, hide_ull(1LL<<16), "B_BFu1ll_BFu17i");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_BFu17i(Test_B_BFu1ll_BFu17i, "B_BFu1ll_BFu17i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_BFu17ll()
{
  {
    init_simple_test("B_BFu1ll_BFu17ll");
    static B_BFu1ll_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu1ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_BFu17ll");
    set_bf_and_test(lv, v3, 1, 1, 17, 1, "B_BFu1ll_BFu17ll");
    set_bf_and_test(lv, v3, 1, 1, 17, hide_ull(1LL<<16), "B_BFu1ll_BFu17ll");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_BFu17ll(Test_B_BFu1ll_BFu17ll, "B_BFu1ll_BFu17ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_BFu1c()
{
  {
    init_simple_test("B_BFu1ll_BFu1c");
    static B_BFu1ll_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_BFu1c)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_BFu1c");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "B_BFu1ll_BFu1c");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_BFu1c(Test_B_BFu1ll_BFu1c, "B_BFu1ll_BFu1c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_BFu1i()
{
  {
    init_simple_test("B_BFu1ll_BFu1i");
    static B_BFu1ll_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_BFu1i)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_BFu1i");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "B_BFu1ll_BFu1i");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_BFu1i(Test_B_BFu1ll_BFu1i, "B_BFu1ll_BFu1i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_BFu1ll()
{
  {
    init_simple_test("B_BFu1ll_BFu1ll");
    static B_BFu1ll_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "B_BFu1ll_BFu1ll");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_BFu1ll(Test_B_BFu1ll_BFu1ll, "B_BFu1ll_BFu1ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_BFu1s()
{
  {
    init_simple_test("B_BFu1ll_BFu1s");
    static B_BFu1ll_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_BFu1s)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_BFu1s");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "B_BFu1ll_BFu1s");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_BFu1s(Test_B_BFu1ll_BFu1s, "B_BFu1ll_BFu1s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_BFu31i()
{
  {
    init_simple_test("B_BFu1ll_BFu31i");
    static B_BFu1ll_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu1ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_BFu31i)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_BFu31i");
    set_bf_and_test(lv, v3, 1, 1, 31, 1, "B_BFu1ll_BFu31i");
    set_bf_and_test(lv, v3, 1, 1, 31, hide_ull(1LL<<30), "B_BFu1ll_BFu31i");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_BFu31i(Test_B_BFu1ll_BFu31i, "B_BFu1ll_BFu31i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_BFu31ll()
{
  {
    init_simple_test("B_BFu1ll_BFu31ll");
    static B_BFu1ll_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu1ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_BFu31ll");
    set_bf_and_test(lv, v3, 1, 1, 31, 1, "B_BFu1ll_BFu31ll");
    set_bf_and_test(lv, v3, 1, 1, 31, hide_ull(1LL<<30), "B_BFu1ll_BFu31ll");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_BFu31ll(Test_B_BFu1ll_BFu31ll, "B_BFu1ll_BFu31ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_BFu32i()
{
  {
    init_simple_test("B_BFu1ll_BFu32i");
    static B_BFu1ll_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu1ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_BFu32i)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_BFu32i");
    set_bf_and_test(lv, v3, 1, 1, 32, 1, "B_BFu1ll_BFu32i");
    set_bf_and_test(lv, v3, 1, 1, 32, hide_ull(1LL<<31), "B_BFu1ll_BFu32i");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_BFu32i(Test_B_BFu1ll_BFu32i, "B_BFu1ll_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_BFu32ll()
{
  {
    init_simple_test("B_BFu1ll_BFu32ll");
    static B_BFu1ll_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu1ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_BFu32ll");
    set_bf_and_test(lv, v3, 1, 1, 32, 1, "B_BFu1ll_BFu32ll");
    set_bf_and_test(lv, v3, 1, 1, 32, hide_ull(1LL<<31), "B_BFu1ll_BFu32ll");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_BFu32ll(Test_B_BFu1ll_BFu32ll, "B_BFu1ll_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_BFu33()
{
  {
    init_simple_test("B_BFu1ll_BFu33");
    static B_BFu1ll_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu1ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_BFu33)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_BFu33");
    set_bf_and_test(lv, v3, 1, 1, 33, 1, "B_BFu1ll_BFu33");
    set_bf_and_test(lv, v3, 1, 1, 33, hide_ull(1LL<<32), "B_BFu1ll_BFu33");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_BFu33(Test_B_BFu1ll_BFu33, "B_BFu1ll_BFu33", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_BFu7c()
{
  {
    init_simple_test("B_BFu1ll_BFu7c");
    static B_BFu1ll_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_BFu7c)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_BFu7c");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "B_BFu1ll_BFu7c");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "B_BFu1ll_BFu7c");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_BFu7c(Test_B_BFu1ll_BFu7c, "B_BFu1ll_BFu7c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_BFu7i()
{
  {
    init_simple_test("B_BFu1ll_BFu7i");
    static B_BFu1ll_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_BFu7i)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_BFu7i");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "B_BFu1ll_BFu7i");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "B_BFu1ll_BFu7i");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_BFu7i(Test_B_BFu1ll_BFu7i, "B_BFu1ll_BFu7i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_BFu7ll()
{
  {
    init_simple_test("B_BFu1ll_BFu7ll");
    static B_BFu1ll_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_BFu7ll");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "B_BFu1ll_BFu7ll");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "B_BFu1ll_BFu7ll");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_BFu7ll(Test_B_BFu1ll_BFu7ll, "B_BFu1ll_BFu7ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_BFu7s()
{
  {
    init_simple_test("B_BFu1ll_BFu7s");
    static B_BFu1ll_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_BFu7s)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_BFu7s");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "B_BFu1ll_BFu7s");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "B_BFu1ll_BFu7s");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_BFu7s(Test_B_BFu1ll_BFu7s, "B_BFu1ll_BFu7s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_BFu8c()
{
  {
    init_simple_test("B_BFu1ll_BFu8c");
    static B_BFu1ll_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_BFu8c)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_BFu8c");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "B_BFu1ll_BFu8c");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "B_BFu1ll_BFu8c");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_BFu8c(Test_B_BFu1ll_BFu8c, "B_BFu1ll_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_BFu8i()
{
  {
    init_simple_test("B_BFu1ll_BFu8i");
    static B_BFu1ll_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_BFu8i)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_BFu8i");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "B_BFu1ll_BFu8i");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "B_BFu1ll_BFu8i");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_BFu8i(Test_B_BFu1ll_BFu8i, "B_BFu1ll_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_BFu8ll()
{
  {
    init_simple_test("B_BFu1ll_BFu8ll");
    static B_BFu1ll_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_BFu8ll");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "B_BFu1ll_BFu8ll");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "B_BFu1ll_BFu8ll");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_BFu8ll(Test_B_BFu1ll_BFu8ll, "B_BFu1ll_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_BFu8s()
{
  {
    init_simple_test("B_BFu1ll_BFu8s");
    static B_BFu1ll_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_BFu8s)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_BFu8s");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "B_BFu1ll_BFu8s");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "B_BFu1ll_BFu8s");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_BFu8s(Test_B_BFu1ll_BFu8s, "B_BFu1ll_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_BFu9i()
{
  {
    init_simple_test("B_BFu1ll_BFu9i");
    static B_BFu1ll_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_BFu9i)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_BFu9i");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "B_BFu1ll_BFu9i");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "B_BFu1ll_BFu9i");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_BFu9i(Test_B_BFu1ll_BFu9i, "B_BFu1ll_BFu9i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_BFu9ll()
{
  {
    init_simple_test("B_BFu1ll_BFu9ll");
    static B_BFu1ll_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_BFu9ll");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "B_BFu1ll_BFu9ll");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "B_BFu1ll_BFu9ll");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_BFu9ll(Test_B_BFu1ll_BFu9ll, "B_BFu1ll_BFu9ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_BFu9s()
{
  {
    init_simple_test("B_BFu1ll_BFu9s");
    static B_BFu1ll_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_BFu9s)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_BFu9s");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "B_BFu1ll_BFu9s");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "B_BFu1ll_BFu9s");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_BFu9s(Test_B_BFu1ll_BFu9s, "B_BFu1ll_BFu9s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_C()
{
  {
    init_simple_test("B_BFu1ll_C");
    static B_BFu1ll_C lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_C)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_C");
    check_field_offset(lv, v3, 2, "B_BFu1ll_C.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_C(Test_B_BFu1ll_C, "B_BFu1ll_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_D()
{
  {
    init_simple_test("B_BFu1ll_D");
    static B_BFu1ll_D lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu1ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_D)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_D");
    check_field_offset(lv, v3, 2, "B_BFu1ll_D.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_D(Test_B_BFu1ll_D, "B_BFu1ll_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_F()
{
  {
    init_simple_test("B_BFu1ll_F");
    static B_BFu1ll_F lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu1ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_F)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_F");
    check_field_offset(lv, v3, 2, "B_BFu1ll_F.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_F(Test_B_BFu1ll_F, "B_BFu1ll_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_I()
{
  {
    init_simple_test("B_BFu1ll_I");
    static B_BFu1ll_I lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu1ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_I)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_I");
    check_field_offset(lv, v3, 2, "B_BFu1ll_I.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_I(Test_B_BFu1ll_I, "B_BFu1ll_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_Ip()
{
  {
    init_simple_test("B_BFu1ll_Ip");
    static B_BFu1ll_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(B_BFu1ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_Ip)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_Ip");
    check_field_offset(lv, v3, 2, "B_BFu1ll_Ip.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_Ip(Test_B_BFu1ll_Ip, "B_BFu1ll_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_L()
{
  {
    init_simple_test("B_BFu1ll_L");
    static B_BFu1ll_L lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu1ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_L)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_L");
    check_field_offset(lv, v3, 2, "B_BFu1ll_L.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_L(Test_B_BFu1ll_L, "B_BFu1ll_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_S()
{
  {
    init_simple_test("B_BFu1ll_S");
    static B_BFu1ll_S lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu1ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_S)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_S");
    check_field_offset(lv, v3, 2, "B_BFu1ll_S.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_S(Test_B_BFu1ll_S, "B_BFu1ll_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_Uc()
{
  {
    init_simple_test("B_BFu1ll_Uc");
    static B_BFu1ll_Uc lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_Uc)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_Uc");
    check_field_offset(lv, v3, 2, "B_BFu1ll_Uc.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_Uc(Test_B_BFu1ll_Uc, "B_BFu1ll_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_Ui()
{
  {
    init_simple_test("B_BFu1ll_Ui");
    static B_BFu1ll_Ui lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu1ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_Ui)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_Ui");
    check_field_offset(lv, v3, 2, "B_BFu1ll_Ui.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_Ui(Test_B_BFu1ll_Ui, "B_BFu1ll_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_Ul()
{
  {
    init_simple_test("B_BFu1ll_Ul");
    static B_BFu1ll_Ul lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu1ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_Ul)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_Ul");
    check_field_offset(lv, v3, 2, "B_BFu1ll_Ul.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_Ul(Test_B_BFu1ll_Ul, "B_BFu1ll_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_Us()
{
  {
    init_simple_test("B_BFu1ll_Us");
    static B_BFu1ll_Us lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu1ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_Us)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_Us");
    check_field_offset(lv, v3, 2, "B_BFu1ll_Us.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_Us(Test_B_BFu1ll_Us, "B_BFu1ll_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1ll_Vp()
{
  {
    init_simple_test("B_BFu1ll_Vp");
    static B_BFu1ll_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(B_BFu1ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1ll_Vp)");
    check_field_offset(lv, v1, 0, "B_BFu1ll_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1ll_Vp");
    check_field_offset(lv, v3, 2, "B_BFu1ll_Vp.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1ll_Vp(Test_B_BFu1ll_Vp, "B_BFu1ll_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s()
{
  {
    init_simple_test("B_BFu1s");
    static B_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s)");
    check_field_offset(lv, v1, 0, "B_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s");
  }
}
static Arrange_To_Call_Me vB_BFu1s(Test_B_BFu1s, "B_BFu1s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_B()
{
  {
    init_simple_test("B_BFu1s_B");
    static B_BFu1s_B lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1s_B)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_B)");
    check_field_offset(lv, v1, 0, "B_BFu1s_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_B");
    check_field_offset(lv, v3, 2, "B_BFu1s_B.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1s_B(Test_B_BFu1s_B, "B_BFu1s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_BFu15i()
{
  {
    init_simple_test("B_BFu1s_BFu15i");
    static B_BFu1s_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_BFu15i)");
    check_field_offset(lv, v1, 0, "B_BFu1s_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_BFu15i");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "B_BFu1s_BFu15i");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "B_BFu1s_BFu15i");
  }
}
static Arrange_To_Call_Me vB_BFu1s_BFu15i(Test_B_BFu1s_BFu15i, "B_BFu1s_BFu15i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_BFu15ll()
{
  {
    init_simple_test("B_BFu1s_BFu15ll");
    static B_BFu1s_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_BFu15ll)");
    check_field_offset(lv, v1, 0, "B_BFu1s_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_BFu15ll");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "B_BFu1s_BFu15ll");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "B_BFu1s_BFu15ll");
  }
}
static Arrange_To_Call_Me vB_BFu1s_BFu15ll(Test_B_BFu1s_BFu15ll, "B_BFu1s_BFu15ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_BFu15s()
{
  {
    init_simple_test("B_BFu1s_BFu15s");
    static B_BFu1s_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_BFu15s)");
    check_field_offset(lv, v1, 0, "B_BFu1s_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_BFu15s");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "B_BFu1s_BFu15s");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "B_BFu1s_BFu15s");
  }
}
static Arrange_To_Call_Me vB_BFu1s_BFu15s(Test_B_BFu1s_BFu15s, "B_BFu1s_BFu15s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_BFu16i()
{
  {
    init_simple_test("B_BFu1s_BFu16i");
    static B_BFu1s_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu1s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_BFu16i)");
    check_field_offset(lv, v1, 0, "B_BFu1s_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_BFu16i");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "B_BFu1s_BFu16i");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "B_BFu1s_BFu16i");
  }
}
static Arrange_To_Call_Me vB_BFu1s_BFu16i(Test_B_BFu1s_BFu16i, "B_BFu1s_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_BFu16ll()
{
  {
    init_simple_test("B_BFu1s_BFu16ll");
    static B_BFu1s_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu1s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_BFu16ll)");
    check_field_offset(lv, v1, 0, "B_BFu1s_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_BFu16ll");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "B_BFu1s_BFu16ll");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "B_BFu1s_BFu16ll");
  }
}
static Arrange_To_Call_Me vB_BFu1s_BFu16ll(Test_B_BFu1s_BFu16ll, "B_BFu1s_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_BFu16s()
{
  {
    init_simple_test("B_BFu1s_BFu16s");
    static B_BFu1s_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu1s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_BFu16s)");
    check_field_offset(lv, v1, 0, "B_BFu1s_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_BFu16s");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "B_BFu1s_BFu16s");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "B_BFu1s_BFu16s");
  }
}
static Arrange_To_Call_Me vB_BFu1s_BFu16s(Test_B_BFu1s_BFu16s, "B_BFu1s_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_BFu17i()
{
  {
    init_simple_test("B_BFu1s_BFu17i");
    static B_BFu1s_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu1s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_BFu17i)");
    check_field_offset(lv, v1, 0, "B_BFu1s_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_BFu17i");
    set_bf_and_test(lv, v3, 1, 1, 17, 1, "B_BFu1s_BFu17i");
    set_bf_and_test(lv, v3, 1, 1, 17, hide_ull(1LL<<16), "B_BFu1s_BFu17i");
  }
}
static Arrange_To_Call_Me vB_BFu1s_BFu17i(Test_B_BFu1s_BFu17i, "B_BFu1s_BFu17i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_BFu17ll()
{
  {
    init_simple_test("B_BFu1s_BFu17ll");
    static B_BFu1s_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu1s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_BFu17ll)");
    check_field_offset(lv, v1, 0, "B_BFu1s_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_BFu17ll");
    set_bf_and_test(lv, v3, 1, 1, 17, 1, "B_BFu1s_BFu17ll");
    set_bf_and_test(lv, v3, 1, 1, 17, hide_ull(1LL<<16), "B_BFu1s_BFu17ll");
  }
}
static Arrange_To_Call_Me vB_BFu1s_BFu17ll(Test_B_BFu1s_BFu17ll, "B_BFu1s_BFu17ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_BFu1c()
{
  {
    init_simple_test("B_BFu1s_BFu1c");
    static B_BFu1s_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_BFu1c)");
    check_field_offset(lv, v1, 0, "B_BFu1s_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_BFu1c");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "B_BFu1s_BFu1c");
  }
}
static Arrange_To_Call_Me vB_BFu1s_BFu1c(Test_B_BFu1s_BFu1c, "B_BFu1s_BFu1c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_BFu1i()
{
  {
    init_simple_test("B_BFu1s_BFu1i");
    static B_BFu1s_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_BFu1i)");
    check_field_offset(lv, v1, 0, "B_BFu1s_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_BFu1i");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "B_BFu1s_BFu1i");
  }
}
static Arrange_To_Call_Me vB_BFu1s_BFu1i(Test_B_BFu1s_BFu1i, "B_BFu1s_BFu1i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_BFu1ll()
{
  {
    init_simple_test("B_BFu1s_BFu1ll");
    static B_BFu1s_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_BFu1ll)");
    check_field_offset(lv, v1, 0, "B_BFu1s_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_BFu1ll");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "B_BFu1s_BFu1ll");
  }
}
static Arrange_To_Call_Me vB_BFu1s_BFu1ll(Test_B_BFu1s_BFu1ll, "B_BFu1s_BFu1ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_BFu1s()
{
  {
    init_simple_test("B_BFu1s_BFu1s");
    static B_BFu1s_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_BFu1s)");
    check_field_offset(lv, v1, 0, "B_BFu1s_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_BFu1s");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "B_BFu1s_BFu1s");
  }
}
static Arrange_To_Call_Me vB_BFu1s_BFu1s(Test_B_BFu1s_BFu1s, "B_BFu1s_BFu1s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_BFu31i()
{
  {
    init_simple_test("B_BFu1s_BFu31i");
    static B_BFu1s_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu1s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_BFu31i)");
    check_field_offset(lv, v1, 0, "B_BFu1s_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_BFu31i");
    set_bf_and_test(lv, v3, 1, 1, 31, 1, "B_BFu1s_BFu31i");
    set_bf_and_test(lv, v3, 1, 1, 31, hide_ull(1LL<<30), "B_BFu1s_BFu31i");
  }
}
static Arrange_To_Call_Me vB_BFu1s_BFu31i(Test_B_BFu1s_BFu31i, "B_BFu1s_BFu31i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_BFu31ll()
{
  {
    init_simple_test("B_BFu1s_BFu31ll");
    static B_BFu1s_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu1s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_BFu31ll)");
    check_field_offset(lv, v1, 0, "B_BFu1s_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_BFu31ll");
    set_bf_and_test(lv, v3, 1, 1, 31, 1, "B_BFu1s_BFu31ll");
    set_bf_and_test(lv, v3, 1, 1, 31, hide_ull(1LL<<30), "B_BFu1s_BFu31ll");
  }
}
static Arrange_To_Call_Me vB_BFu1s_BFu31ll(Test_B_BFu1s_BFu31ll, "B_BFu1s_BFu31ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_BFu32i()
{
  {
    init_simple_test("B_BFu1s_BFu32i");
    static B_BFu1s_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu1s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_BFu32i)");
    check_field_offset(lv, v1, 0, "B_BFu1s_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_BFu32i");
    set_bf_and_test(lv, v3, 1, 1, 32, 1, "B_BFu1s_BFu32i");
    set_bf_and_test(lv, v3, 1, 1, 32, hide_ull(1LL<<31), "B_BFu1s_BFu32i");
  }
}
static Arrange_To_Call_Me vB_BFu1s_BFu32i(Test_B_BFu1s_BFu32i, "B_BFu1s_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_BFu32ll()
{
  {
    init_simple_test("B_BFu1s_BFu32ll");
    static B_BFu1s_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu1s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_BFu32ll)");
    check_field_offset(lv, v1, 0, "B_BFu1s_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_BFu32ll");
    set_bf_and_test(lv, v3, 1, 1, 32, 1, "B_BFu1s_BFu32ll");
    set_bf_and_test(lv, v3, 1, 1, 32, hide_ull(1LL<<31), "B_BFu1s_BFu32ll");
  }
}
static Arrange_To_Call_Me vB_BFu1s_BFu32ll(Test_B_BFu1s_BFu32ll, "B_BFu1s_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_BFu33()
{
  {
    init_simple_test("B_BFu1s_BFu33");
    static B_BFu1s_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu1s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_BFu33)");
    check_field_offset(lv, v1, 0, "B_BFu1s_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_BFu33");
    set_bf_and_test(lv, v3, 1, 1, 33, 1, "B_BFu1s_BFu33");
    set_bf_and_test(lv, v3, 1, 1, 33, hide_ull(1LL<<32), "B_BFu1s_BFu33");
  }
}
static Arrange_To_Call_Me vB_BFu1s_BFu33(Test_B_BFu1s_BFu33, "B_BFu1s_BFu33", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_BFu7c()
{
  {
    init_simple_test("B_BFu1s_BFu7c");
    static B_BFu1s_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_BFu7c)");
    check_field_offset(lv, v1, 0, "B_BFu1s_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_BFu7c");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "B_BFu1s_BFu7c");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "B_BFu1s_BFu7c");
  }
}
static Arrange_To_Call_Me vB_BFu1s_BFu7c(Test_B_BFu1s_BFu7c, "B_BFu1s_BFu7c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_BFu7i()
{
  {
    init_simple_test("B_BFu1s_BFu7i");
    static B_BFu1s_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_BFu7i)");
    check_field_offset(lv, v1, 0, "B_BFu1s_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_BFu7i");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "B_BFu1s_BFu7i");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "B_BFu1s_BFu7i");
  }
}
static Arrange_To_Call_Me vB_BFu1s_BFu7i(Test_B_BFu1s_BFu7i, "B_BFu1s_BFu7i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_BFu7ll()
{
  {
    init_simple_test("B_BFu1s_BFu7ll");
    static B_BFu1s_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_BFu7ll)");
    check_field_offset(lv, v1, 0, "B_BFu1s_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_BFu7ll");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "B_BFu1s_BFu7ll");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "B_BFu1s_BFu7ll");
  }
}
static Arrange_To_Call_Me vB_BFu1s_BFu7ll(Test_B_BFu1s_BFu7ll, "B_BFu1s_BFu7ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_BFu7s()
{
  {
    init_simple_test("B_BFu1s_BFu7s");
    static B_BFu1s_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu1s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_BFu7s)");
    check_field_offset(lv, v1, 0, "B_BFu1s_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_BFu7s");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "B_BFu1s_BFu7s");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "B_BFu1s_BFu7s");
  }
}
static Arrange_To_Call_Me vB_BFu1s_BFu7s(Test_B_BFu1s_BFu7s, "B_BFu1s_BFu7s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_BFu8c()
{
  {
    init_simple_test("B_BFu1s_BFu8c");
    static B_BFu1s_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_BFu8c)");
    check_field_offset(lv, v1, 0, "B_BFu1s_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_BFu8c");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "B_BFu1s_BFu8c");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "B_BFu1s_BFu8c");
  }
}
static Arrange_To_Call_Me vB_BFu1s_BFu8c(Test_B_BFu1s_BFu8c, "B_BFu1s_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_BFu8i()
{
  {
    init_simple_test("B_BFu1s_BFu8i");
    static B_BFu1s_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_BFu8i)");
    check_field_offset(lv, v1, 0, "B_BFu1s_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_BFu8i");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "B_BFu1s_BFu8i");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "B_BFu1s_BFu8i");
  }
}
static Arrange_To_Call_Me vB_BFu1s_BFu8i(Test_B_BFu1s_BFu8i, "B_BFu1s_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_BFu8ll()
{
  {
    init_simple_test("B_BFu1s_BFu8ll");
    static B_BFu1s_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_BFu8ll)");
    check_field_offset(lv, v1, 0, "B_BFu1s_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_BFu8ll");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "B_BFu1s_BFu8ll");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "B_BFu1s_BFu8ll");
  }
}
static Arrange_To_Call_Me vB_BFu1s_BFu8ll(Test_B_BFu1s_BFu8ll, "B_BFu1s_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_BFu8s()
{
  {
    init_simple_test("B_BFu1s_BFu8s");
    static B_BFu1s_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_BFu8s)");
    check_field_offset(lv, v1, 0, "B_BFu1s_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_BFu8s");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "B_BFu1s_BFu8s");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "B_BFu1s_BFu8s");
  }
}
static Arrange_To_Call_Me vB_BFu1s_BFu8s(Test_B_BFu1s_BFu8s, "B_BFu1s_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_BFu9i()
{
  {
    init_simple_test("B_BFu1s_BFu9i");
    static B_BFu1s_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_BFu9i)");
    check_field_offset(lv, v1, 0, "B_BFu1s_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_BFu9i");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "B_BFu1s_BFu9i");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "B_BFu1s_BFu9i");
  }
}
static Arrange_To_Call_Me vB_BFu1s_BFu9i(Test_B_BFu1s_BFu9i, "B_BFu1s_BFu9i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_BFu9ll()
{
  {
    init_simple_test("B_BFu1s_BFu9ll");
    static B_BFu1s_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_BFu9ll)");
    check_field_offset(lv, v1, 0, "B_BFu1s_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_BFu9ll");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "B_BFu1s_BFu9ll");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "B_BFu1s_BFu9ll");
  }
}
static Arrange_To_Call_Me vB_BFu1s_BFu9ll(Test_B_BFu1s_BFu9ll, "B_BFu1s_BFu9ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_BFu9s()
{
  {
    init_simple_test("B_BFu1s_BFu9s");
    static B_BFu1s_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_BFu9s)");
    check_field_offset(lv, v1, 0, "B_BFu1s_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_BFu9s");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "B_BFu1s_BFu9s");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "B_BFu1s_BFu9s");
  }
}
static Arrange_To_Call_Me vB_BFu1s_BFu9s(Test_B_BFu1s_BFu9s, "B_BFu1s_BFu9s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_C()
{
  {
    init_simple_test("B_BFu1s_C");
    static B_BFu1s_C lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1s_C)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_C)");
    check_field_offset(lv, v1, 0, "B_BFu1s_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_C");
    check_field_offset(lv, v3, 2, "B_BFu1s_C.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1s_C(Test_B_BFu1s_C, "B_BFu1s_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_D()
{
  {
    init_simple_test("B_BFu1s_D");
    static B_BFu1s_D lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu1s_D)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_D)");
    check_field_offset(lv, v1, 0, "B_BFu1s_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_D");
    check_field_offset(lv, v3, 2, "B_BFu1s_D.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1s_D(Test_B_BFu1s_D, "B_BFu1s_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_F()
{
  {
    init_simple_test("B_BFu1s_F");
    static B_BFu1s_F lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu1s_F)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_F)");
    check_field_offset(lv, v1, 0, "B_BFu1s_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_F");
    check_field_offset(lv, v3, 2, "B_BFu1s_F.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1s_F(Test_B_BFu1s_F, "B_BFu1s_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_I()
{
  {
    init_simple_test("B_BFu1s_I");
    static B_BFu1s_I lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu1s_I)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_I)");
    check_field_offset(lv, v1, 0, "B_BFu1s_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_I");
    check_field_offset(lv, v3, 2, "B_BFu1s_I.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1s_I(Test_B_BFu1s_I, "B_BFu1s_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_Ip()
{
  {
    init_simple_test("B_BFu1s_Ip");
    static B_BFu1s_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(B_BFu1s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_Ip)");
    check_field_offset(lv, v1, 0, "B_BFu1s_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_Ip");
    check_field_offset(lv, v3, 2, "B_BFu1s_Ip.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1s_Ip(Test_B_BFu1s_Ip, "B_BFu1s_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_L()
{
  {
    init_simple_test("B_BFu1s_L");
    static B_BFu1s_L lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu1s_L)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_L)");
    check_field_offset(lv, v1, 0, "B_BFu1s_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_L");
    check_field_offset(lv, v3, 2, "B_BFu1s_L.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1s_L(Test_B_BFu1s_L, "B_BFu1s_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_S()
{
  {
    init_simple_test("B_BFu1s_S");
    static B_BFu1s_S lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu1s_S)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_S)");
    check_field_offset(lv, v1, 0, "B_BFu1s_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_S");
    check_field_offset(lv, v3, 2, "B_BFu1s_S.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1s_S(Test_B_BFu1s_S, "B_BFu1s_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_Uc()
{
  {
    init_simple_test("B_BFu1s_Uc");
    static B_BFu1s_Uc lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu1s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_Uc)");
    check_field_offset(lv, v1, 0, "B_BFu1s_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_Uc");
    check_field_offset(lv, v3, 2, "B_BFu1s_Uc.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1s_Uc(Test_B_BFu1s_Uc, "B_BFu1s_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_Ui()
{
  {
    init_simple_test("B_BFu1s_Ui");
    static B_BFu1s_Ui lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu1s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_Ui)");
    check_field_offset(lv, v1, 0, "B_BFu1s_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_Ui");
    check_field_offset(lv, v3, 2, "B_BFu1s_Ui.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1s_Ui(Test_B_BFu1s_Ui, "B_BFu1s_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_Ul()
{
  {
    init_simple_test("B_BFu1s_Ul");
    static B_BFu1s_Ul lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu1s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_Ul)");
    check_field_offset(lv, v1, 0, "B_BFu1s_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_Ul");
    check_field_offset(lv, v3, 2, "B_BFu1s_Ul.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1s_Ul(Test_B_BFu1s_Ul, "B_BFu1s_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_Us()
{
  {
    init_simple_test("B_BFu1s_Us");
    static B_BFu1s_Us lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu1s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_Us)");
    check_field_offset(lv, v1, 0, "B_BFu1s_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_Us");
    check_field_offset(lv, v3, 2, "B_BFu1s_Us.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1s_Us(Test_B_BFu1s_Us, "B_BFu1s_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu1s_Vp()
{
  {
    init_simple_test("B_BFu1s_Vp");
    static B_BFu1s_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(B_BFu1s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu1s_Vp)");
    check_field_offset(lv, v1, 0, "B_BFu1s_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "B_BFu1s_Vp");
    check_field_offset(lv, v3, 2, "B_BFu1s_Vp.v3");
  }
}
static Arrange_To_Call_Me vB_BFu1s_Vp(Test_B_BFu1s_Vp, "B_BFu1s_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i()
{
  {
    init_simple_test("B_BFu31i");
    static B_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i)");
    check_field_offset(lv, v1, 0, "B_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i");
  }
}
static Arrange_To_Call_Me vB_BFu31i(Test_B_BFu31i, "B_BFu31i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_B()
{
  {
    init_simple_test("B_BFu31i_B");
    static B_BFu31i_B lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu31i_B)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_B)");
    check_field_offset(lv, v1, 0, "B_BFu31i_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_B");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_B");
    check_field_offset(lv, v3, 5, "B_BFu31i_B.v3");
  }
}
static Arrange_To_Call_Me vB_BFu31i_B(Test_B_BFu31i_B, "B_BFu31i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_BFu15i()
{
  {
    init_simple_test("B_BFu31i_BFu15i");
    static B_BFu31i_BFu15i lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu31i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_BFu15i)");
    check_field_offset(lv, v1, 0, "B_BFu31i_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_BFu15i");
    set_bf_and_test(lv, v3, 4, 7, 15, 1, "B_BFu31i_BFu15i");
    set_bf_and_test(lv, v3, 4, 7, 15, hide_ull(1LL<<14), "B_BFu31i_BFu15i");
  }
}
static Arrange_To_Call_Me vB_BFu31i_BFu15i(Test_B_BFu31i_BFu15i, "B_BFu31i_BFu15i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_BFu15ll()
{
  {
    init_simple_test("B_BFu31i_BFu15ll");
    static B_BFu31i_BFu15ll lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu31i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_BFu15ll)");
    check_field_offset(lv, v1, 0, "B_BFu31i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_BFu15ll");
    set_bf_and_test(lv, v3, 4, 7, 15, 1, "B_BFu31i_BFu15ll");
    set_bf_and_test(lv, v3, 4, 7, 15, hide_ull(1LL<<14), "B_BFu31i_BFu15ll");
  }
}
static Arrange_To_Call_Me vB_BFu31i_BFu15ll(Test_B_BFu31i_BFu15ll, "B_BFu31i_BFu15ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_BFu15s()
{
  {
    init_simple_test("B_BFu31i_BFu15s");
    static B_BFu31i_BFu15s lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu31i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_BFu15s)");
    check_field_offset(lv, v1, 0, "B_BFu31i_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_BFu15s");
    set_bf_and_test(lv, v3, 4, 7, 15, 1, "B_BFu31i_BFu15s");
    set_bf_and_test(lv, v3, 4, 7, 15, hide_ull(1LL<<14), "B_BFu31i_BFu15s");
  }
}
static Arrange_To_Call_Me vB_BFu31i_BFu15s(Test_B_BFu31i_BFu15s, "B_BFu31i_BFu15s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_BFu16i()
{
  {
    init_simple_test("B_BFu31i_BFu16i");
    static B_BFu31i_BFu16i lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu31i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_BFu16i)");
    check_field_offset(lv, v1, 0, "B_BFu31i_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_BFu16i");
    set_bf_and_test(lv, v3, 4, 7, 16, 1, "B_BFu31i_BFu16i");
    set_bf_and_test(lv, v3, 4, 7, 16, hide_ull(1LL<<15), "B_BFu31i_BFu16i");
  }
}
static Arrange_To_Call_Me vB_BFu31i_BFu16i(Test_B_BFu31i_BFu16i, "B_BFu31i_BFu16i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_BFu16ll()
{
  {
    init_simple_test("B_BFu31i_BFu16ll");
    static B_BFu31i_BFu16ll lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu31i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_BFu16ll)");
    check_field_offset(lv, v1, 0, "B_BFu31i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 7, 16, 1, "B_BFu31i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 7, 16, hide_ull(1LL<<15), "B_BFu31i_BFu16ll");
  }
}
static Arrange_To_Call_Me vB_BFu31i_BFu16ll(Test_B_BFu31i_BFu16ll, "B_BFu31i_BFu16ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_BFu16s()
{
  {
    init_simple_test("B_BFu31i_BFu16s");
    static B_BFu31i_BFu16s lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu31i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_BFu16s)");
    check_field_offset(lv, v1, 0, "B_BFu31i_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_BFu16s");
    set_bf_and_test(lv, v3, 4, 7, 16, 1, "B_BFu31i_BFu16s");
    set_bf_and_test(lv, v3, 4, 7, 16, hide_ull(1LL<<15), "B_BFu31i_BFu16s");
  }
}
static Arrange_To_Call_Me vB_BFu31i_BFu16s(Test_B_BFu31i_BFu16s, "B_BFu31i_BFu16s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_BFu17i()
{
  {
    init_simple_test("B_BFu31i_BFu17i");
    static B_BFu31i_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu31i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_BFu17i)");
    check_field_offset(lv, v1, 0, "B_BFu31i_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_BFu17i");
    set_bf_and_test(lv, v3, 4, 7, 17, 1, "B_BFu31i_BFu17i");
    set_bf_and_test(lv, v3, 4, 7, 17, hide_ull(1LL<<16), "B_BFu31i_BFu17i");
  }
}
static Arrange_To_Call_Me vB_BFu31i_BFu17i(Test_B_BFu31i_BFu17i, "B_BFu31i_BFu17i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_BFu17ll()
{
  {
    init_simple_test("B_BFu31i_BFu17ll");
    static B_BFu31i_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu31i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_BFu17ll)");
    check_field_offset(lv, v1, 0, "B_BFu31i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 7, 17, 1, "B_BFu31i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 7, 17, hide_ull(1LL<<16), "B_BFu31i_BFu17ll");
  }
}
static Arrange_To_Call_Me vB_BFu31i_BFu17ll(Test_B_BFu31i_BFu17ll, "B_BFu31i_BFu17ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_BFu1c()
{
  {
    init_simple_test("B_BFu31i_BFu1c");
    static B_BFu31i_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu31i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_BFu1c)");
    check_field_offset(lv, v1, 0, "B_BFu31i_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_BFu1c");
    set_bf_and_test(lv, v3, 4, 7, 1, 1, "B_BFu31i_BFu1c");
  }
}
static Arrange_To_Call_Me vB_BFu31i_BFu1c(Test_B_BFu31i_BFu1c, "B_BFu31i_BFu1c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_BFu1i()
{
  {
    init_simple_test("B_BFu31i_BFu1i");
    static B_BFu31i_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu31i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_BFu1i)");
    check_field_offset(lv, v1, 0, "B_BFu31i_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_BFu1i");
    set_bf_and_test(lv, v3, 4, 7, 1, 1, "B_BFu31i_BFu1i");
  }
}
static Arrange_To_Call_Me vB_BFu31i_BFu1i(Test_B_BFu31i_BFu1i, "B_BFu31i_BFu1i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_BFu1ll()
{
  {
    init_simple_test("B_BFu31i_BFu1ll");
    static B_BFu31i_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu31i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_BFu1ll)");
    check_field_offset(lv, v1, 0, "B_BFu31i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_BFu1ll");
    set_bf_and_test(lv, v3, 4, 7, 1, 1, "B_BFu31i_BFu1ll");
  }
}
static Arrange_To_Call_Me vB_BFu31i_BFu1ll(Test_B_BFu31i_BFu1ll, "B_BFu31i_BFu1ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_BFu1s()
{
  {
    init_simple_test("B_BFu31i_BFu1s");
    static B_BFu31i_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu31i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_BFu1s)");
    check_field_offset(lv, v1, 0, "B_BFu31i_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_BFu1s");
    set_bf_and_test(lv, v3, 4, 7, 1, 1, "B_BFu31i_BFu1s");
  }
}
static Arrange_To_Call_Me vB_BFu31i_BFu1s(Test_B_BFu31i_BFu1s, "B_BFu31i_BFu1s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_BFu31i()
{
  {
    init_simple_test("B_BFu31i_BFu31i");
    static B_BFu31i_BFu31i lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu31i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_BFu31i)");
    check_field_offset(lv, v1, 0, "B_BFu31i_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_BFu31i");
    set_bf_and_test(lv, v3, 4, 7, 31, 1, "B_BFu31i_BFu31i");
    set_bf_and_test(lv, v3, 4, 7, 31, hide_ull(1LL<<30), "B_BFu31i_BFu31i");
  }
}
static Arrange_To_Call_Me vB_BFu31i_BFu31i(Test_B_BFu31i_BFu31i, "B_BFu31i_BFu31i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_BFu31ll()
{
  {
    init_simple_test("B_BFu31i_BFu31ll");
    static B_BFu31i_BFu31ll lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu31i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_BFu31ll)");
    check_field_offset(lv, v1, 0, "B_BFu31i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_BFu31ll");
    set_bf_and_test(lv, v3, 4, 7, 31, 1, "B_BFu31i_BFu31ll");
    set_bf_and_test(lv, v3, 4, 7, 31, hide_ull(1LL<<30), "B_BFu31i_BFu31ll");
  }
}
static Arrange_To_Call_Me vB_BFu31i_BFu31ll(Test_B_BFu31i_BFu31ll, "B_BFu31i_BFu31ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_BFu32i()
{
  {
    init_simple_test("B_BFu31i_BFu32i");
    static B_BFu31i_BFu32i lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu31i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_BFu32i)");
    check_field_offset(lv, v1, 0, "B_BFu31i_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_BFu32i");
    set_bf_and_test(lv, v3, 4, 7, 32, 1, "B_BFu31i_BFu32i");
    set_bf_and_test(lv, v3, 4, 7, 32, hide_ull(1LL<<31), "B_BFu31i_BFu32i");
  }
}
static Arrange_To_Call_Me vB_BFu31i_BFu32i(Test_B_BFu31i_BFu32i, "B_BFu31i_BFu32i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_BFu32ll()
{
  {
    init_simple_test("B_BFu31i_BFu32ll");
    static B_BFu31i_BFu32ll lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu31i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_BFu32ll)");
    check_field_offset(lv, v1, 0, "B_BFu31i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_BFu32ll");
    set_bf_and_test(lv, v3, 4, 7, 32, 1, "B_BFu31i_BFu32ll");
    set_bf_and_test(lv, v3, 4, 7, 32, hide_ull(1LL<<31), "B_BFu31i_BFu32ll");
  }
}
static Arrange_To_Call_Me vB_BFu31i_BFu32ll(Test_B_BFu31i_BFu32ll, "B_BFu31i_BFu32ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_BFu33()
{
  {
    init_simple_test("B_BFu31i_BFu33");
    static B_BFu31i_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu31i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_BFu33)");
    check_field_offset(lv, v1, 0, "B_BFu31i_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_BFu33");
    set_bf_and_test(lv, v3, 4, 7, 33, 1, "B_BFu31i_BFu33");
    set_bf_and_test(lv, v3, 4, 7, 33, hide_ull(1LL<<32), "B_BFu31i_BFu33");
  }
}
static Arrange_To_Call_Me vB_BFu31i_BFu33(Test_B_BFu31i_BFu33, "B_BFu31i_BFu33", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_BFu7c()
{
  {
    init_simple_test("B_BFu31i_BFu7c");
    static B_BFu31i_BFu7c lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu31i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_BFu7c)");
    check_field_offset(lv, v1, 0, "B_BFu31i_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_BFu7c");
    set_bf_and_test(lv, v3, 4, 7, 7, 1, "B_BFu31i_BFu7c");
    set_bf_and_test(lv, v3, 4, 7, 7, hide_ull(1LL<<6), "B_BFu31i_BFu7c");
  }
}
static Arrange_To_Call_Me vB_BFu31i_BFu7c(Test_B_BFu31i_BFu7c, "B_BFu31i_BFu7c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_BFu7i()
{
  {
    init_simple_test("B_BFu31i_BFu7i");
    static B_BFu31i_BFu7i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu31i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_BFu7i)");
    check_field_offset(lv, v1, 0, "B_BFu31i_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_BFu7i");
    set_bf_and_test(lv, v3, 4, 7, 7, 1, "B_BFu31i_BFu7i");
    set_bf_and_test(lv, v3, 4, 7, 7, hide_ull(1LL<<6), "B_BFu31i_BFu7i");
  }
}
static Arrange_To_Call_Me vB_BFu31i_BFu7i(Test_B_BFu31i_BFu7i, "B_BFu31i_BFu7i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_BFu7ll()
{
  {
    init_simple_test("B_BFu31i_BFu7ll");
    static B_BFu31i_BFu7ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu31i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_BFu7ll)");
    check_field_offset(lv, v1, 0, "B_BFu31i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_BFu7ll");
    set_bf_and_test(lv, v3, 4, 7, 7, 1, "B_BFu31i_BFu7ll");
    set_bf_and_test(lv, v3, 4, 7, 7, hide_ull(1LL<<6), "B_BFu31i_BFu7ll");
  }
}
static Arrange_To_Call_Me vB_BFu31i_BFu7ll(Test_B_BFu31i_BFu7ll, "B_BFu31i_BFu7ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_BFu7s()
{
  {
    init_simple_test("B_BFu31i_BFu7s");
    static B_BFu31i_BFu7s lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu31i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_BFu7s)");
    check_field_offset(lv, v1, 0, "B_BFu31i_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_BFu7s");
    set_bf_and_test(lv, v3, 4, 7, 7, 1, "B_BFu31i_BFu7s");
    set_bf_and_test(lv, v3, 4, 7, 7, hide_ull(1LL<<6), "B_BFu31i_BFu7s");
  }
}
static Arrange_To_Call_Me vB_BFu31i_BFu7s(Test_B_BFu31i_BFu7s, "B_BFu31i_BFu7s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_BFu8c()
{
  {
    init_simple_test("B_BFu31i_BFu8c");
    static B_BFu31i_BFu8c lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu31i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_BFu8c)");
    check_field_offset(lv, v1, 0, "B_BFu31i_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_BFu8c");
    set_bf_and_test(lv, v3, 4, 7, 8, 1, "B_BFu31i_BFu8c");
    set_bf_and_test(lv, v3, 4, 7, 8, hide_ull(1LL<<7), "B_BFu31i_BFu8c");
  }
}
static Arrange_To_Call_Me vB_BFu31i_BFu8c(Test_B_BFu31i_BFu8c, "B_BFu31i_BFu8c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_BFu8i()
{
  {
    init_simple_test("B_BFu31i_BFu8i");
    static B_BFu31i_BFu8i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu31i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_BFu8i)");
    check_field_offset(lv, v1, 0, "B_BFu31i_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_BFu8i");
    set_bf_and_test(lv, v3, 4, 7, 8, 1, "B_BFu31i_BFu8i");
    set_bf_and_test(lv, v3, 4, 7, 8, hide_ull(1LL<<7), "B_BFu31i_BFu8i");
  }
}
static Arrange_To_Call_Me vB_BFu31i_BFu8i(Test_B_BFu31i_BFu8i, "B_BFu31i_BFu8i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_BFu8ll()
{
  {
    init_simple_test("B_BFu31i_BFu8ll");
    static B_BFu31i_BFu8ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu31i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_BFu8ll)");
    check_field_offset(lv, v1, 0, "B_BFu31i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_BFu8ll");
    set_bf_and_test(lv, v3, 4, 7, 8, 1, "B_BFu31i_BFu8ll");
    set_bf_and_test(lv, v3, 4, 7, 8, hide_ull(1LL<<7), "B_BFu31i_BFu8ll");
  }
}
static Arrange_To_Call_Me vB_BFu31i_BFu8ll(Test_B_BFu31i_BFu8ll, "B_BFu31i_BFu8ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_BFu8s()
{
  {
    init_simple_test("B_BFu31i_BFu8s");
    static B_BFu31i_BFu8s lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu31i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_BFu8s)");
    check_field_offset(lv, v1, 0, "B_BFu31i_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_BFu8s");
    set_bf_and_test(lv, v3, 4, 7, 8, 1, "B_BFu31i_BFu8s");
    set_bf_and_test(lv, v3, 4, 7, 8, hide_ull(1LL<<7), "B_BFu31i_BFu8s");
  }
}
static Arrange_To_Call_Me vB_BFu31i_BFu8s(Test_B_BFu31i_BFu8s, "B_BFu31i_BFu8s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_BFu9i()
{
  {
    init_simple_test("B_BFu31i_BFu9i");
    static B_BFu31i_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu31i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_BFu9i)");
    check_field_offset(lv, v1, 0, "B_BFu31i_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_BFu9i");
    set_bf_and_test(lv, v3, 4, 7, 9, 1, "B_BFu31i_BFu9i");
    set_bf_and_test(lv, v3, 4, 7, 9, hide_ull(1LL<<8), "B_BFu31i_BFu9i");
  }
}
static Arrange_To_Call_Me vB_BFu31i_BFu9i(Test_B_BFu31i_BFu9i, "B_BFu31i_BFu9i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_BFu9ll()
{
  {
    init_simple_test("B_BFu31i_BFu9ll");
    static B_BFu31i_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu31i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_BFu9ll)");
    check_field_offset(lv, v1, 0, "B_BFu31i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_BFu9ll");
    set_bf_and_test(lv, v3, 4, 7, 9, 1, "B_BFu31i_BFu9ll");
    set_bf_and_test(lv, v3, 4, 7, 9, hide_ull(1LL<<8), "B_BFu31i_BFu9ll");
  }
}
static Arrange_To_Call_Me vB_BFu31i_BFu9ll(Test_B_BFu31i_BFu9ll, "B_BFu31i_BFu9ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_BFu9s()
{
  {
    init_simple_test("B_BFu31i_BFu9s");
    static B_BFu31i_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu31i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_BFu9s)");
    check_field_offset(lv, v1, 0, "B_BFu31i_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_BFu9s");
    set_bf_and_test(lv, v3, 4, 7, 9, 1, "B_BFu31i_BFu9s");
    set_bf_and_test(lv, v3, 4, 7, 9, hide_ull(1LL<<8), "B_BFu31i_BFu9s");
  }
}
static Arrange_To_Call_Me vB_BFu31i_BFu9s(Test_B_BFu31i_BFu9s, "B_BFu31i_BFu9s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_C()
{
  {
    init_simple_test("B_BFu31i_C");
    static B_BFu31i_C lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu31i_C)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_C)");
    check_field_offset(lv, v1, 0, "B_BFu31i_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_C");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_C");
    check_field_offset(lv, v3, 5, "B_BFu31i_C.v3");
  }
}
static Arrange_To_Call_Me vB_BFu31i_C(Test_B_BFu31i_C, "B_BFu31i_C", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_D()
{
  {
    init_simple_test("B_BFu31i_D");
    static B_BFu31i_D lv;
    check2(sizeof(lv), 13, "sizeof(B_BFu31i_D)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_D)");
    check_field_offset(lv, v1, 0, "B_BFu31i_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_D");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_D");
    check_field_offset(lv, v3, 5, "B_BFu31i_D.v3");
  }
}
static Arrange_To_Call_Me vB_BFu31i_D(Test_B_BFu31i_D, "B_BFu31i_D", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_F()
{
  {
    init_simple_test("B_BFu31i_F");
    static B_BFu31i_F lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu31i_F)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_F)");
    check_field_offset(lv, v1, 0, "B_BFu31i_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_F");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_F");
    check_field_offset(lv, v3, 5, "B_BFu31i_F.v3");
  }
}
static Arrange_To_Call_Me vB_BFu31i_F(Test_B_BFu31i_F, "B_BFu31i_F", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_I()
{
  {
    init_simple_test("B_BFu31i_I");
    static B_BFu31i_I lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu31i_I)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_I)");
    check_field_offset(lv, v1, 0, "B_BFu31i_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_I");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_I");
    check_field_offset(lv, v3, 5, "B_BFu31i_I.v3");
  }
}
static Arrange_To_Call_Me vB_BFu31i_I(Test_B_BFu31i_I, "B_BFu31i_I", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_Ip()
{
  {
    init_simple_test("B_BFu31i_Ip");
    static B_BFu31i_Ip lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(B_BFu31i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_Ip)");
    check_field_offset(lv, v1, 0, "B_BFu31i_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_Ip");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_Ip");
    check_field_offset(lv, v3, 5, "B_BFu31i_Ip.v3");
  }
}
static Arrange_To_Call_Me vB_BFu31i_Ip(Test_B_BFu31i_Ip, "B_BFu31i_Ip", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_L()
{
  {
    init_simple_test("B_BFu31i_L");
    static B_BFu31i_L lv;
    check2(sizeof(lv), 13, "sizeof(B_BFu31i_L)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_L)");
    check_field_offset(lv, v1, 0, "B_BFu31i_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_L");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_L");
    check_field_offset(lv, v3, 5, "B_BFu31i_L.v3");
  }
}
static Arrange_To_Call_Me vB_BFu31i_L(Test_B_BFu31i_L, "B_BFu31i_L", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_S()
{
  {
    init_simple_test("B_BFu31i_S");
    static B_BFu31i_S lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu31i_S)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_S)");
    check_field_offset(lv, v1, 0, "B_BFu31i_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_S");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_S");
    check_field_offset(lv, v3, 5, "B_BFu31i_S.v3");
  }
}
static Arrange_To_Call_Me vB_BFu31i_S(Test_B_BFu31i_S, "B_BFu31i_S", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_Uc()
{
  {
    init_simple_test("B_BFu31i_Uc");
    static B_BFu31i_Uc lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu31i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_Uc)");
    check_field_offset(lv, v1, 0, "B_BFu31i_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_Uc");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_Uc");
    check_field_offset(lv, v3, 5, "B_BFu31i_Uc.v3");
  }
}
static Arrange_To_Call_Me vB_BFu31i_Uc(Test_B_BFu31i_Uc, "B_BFu31i_Uc", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_Ui()
{
  {
    init_simple_test("B_BFu31i_Ui");
    static B_BFu31i_Ui lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu31i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_Ui)");
    check_field_offset(lv, v1, 0, "B_BFu31i_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_Ui");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_Ui");
    check_field_offset(lv, v3, 5, "B_BFu31i_Ui.v3");
  }
}
static Arrange_To_Call_Me vB_BFu31i_Ui(Test_B_BFu31i_Ui, "B_BFu31i_Ui", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_Ul()
{
  {
    init_simple_test("B_BFu31i_Ul");
    static B_BFu31i_Ul lv;
    check2(sizeof(lv), 13, "sizeof(B_BFu31i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_Ul)");
    check_field_offset(lv, v1, 0, "B_BFu31i_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_Ul");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_Ul");
    check_field_offset(lv, v3, 5, "B_BFu31i_Ul.v3");
  }
}
static Arrange_To_Call_Me vB_BFu31i_Ul(Test_B_BFu31i_Ul, "B_BFu31i_Ul", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_Us()
{
  {
    init_simple_test("B_BFu31i_Us");
    static B_BFu31i_Us lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu31i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_Us)");
    check_field_offset(lv, v1, 0, "B_BFu31i_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_Us");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_Us");
    check_field_offset(lv, v3, 5, "B_BFu31i_Us.v3");
  }
}
static Arrange_To_Call_Me vB_BFu31i_Us(Test_B_BFu31i_Us, "B_BFu31i_Us", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31i_Vp()
{
  {
    init_simple_test("B_BFu31i_Vp");
    static B_BFu31i_Vp lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(B_BFu31i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31i_Vp)");
    check_field_offset(lv, v1, 0, "B_BFu31i_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31i_Vp");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31i_Vp");
    check_field_offset(lv, v3, 5, "B_BFu31i_Vp.v3");
  }
}
static Arrange_To_Call_Me vB_BFu31i_Vp(Test_B_BFu31i_Vp, "B_BFu31i_Vp", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll()
{
  {
    init_simple_test("B_BFu31ll");
    static B_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll)");
    check_field_offset(lv, v1, 0, "B_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll");
  }
}
static Arrange_To_Call_Me vB_BFu31ll(Test_B_BFu31ll, "B_BFu31ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_B()
{
  {
    init_simple_test("B_BFu31ll_B");
    static B_BFu31ll_B lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu31ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_B)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_B");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_B");
    check_field_offset(lv, v3, 5, "B_BFu31ll_B.v3");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_B(Test_B_BFu31ll_B, "B_BFu31ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_BFu15i()
{
  {
    init_simple_test("B_BFu31ll_BFu15i");
    static B_BFu31ll_BFu15i lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu31ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_BFu15i)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_BFu15i");
    set_bf_and_test(lv, v3, 4, 7, 15, 1, "B_BFu31ll_BFu15i");
    set_bf_and_test(lv, v3, 4, 7, 15, hide_ull(1LL<<14), "B_BFu31ll_BFu15i");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_BFu15i(Test_B_BFu31ll_BFu15i, "B_BFu31ll_BFu15i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_BFu15ll()
{
  {
    init_simple_test("B_BFu31ll_BFu15ll");
    static B_BFu31ll_BFu15ll lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu31ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_BFu15ll");
    set_bf_and_test(lv, v3, 4, 7, 15, 1, "B_BFu31ll_BFu15ll");
    set_bf_and_test(lv, v3, 4, 7, 15, hide_ull(1LL<<14), "B_BFu31ll_BFu15ll");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_BFu15ll(Test_B_BFu31ll_BFu15ll, "B_BFu31ll_BFu15ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_BFu15s()
{
  {
    init_simple_test("B_BFu31ll_BFu15s");
    static B_BFu31ll_BFu15s lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu31ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_BFu15s)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_BFu15s");
    set_bf_and_test(lv, v3, 4, 7, 15, 1, "B_BFu31ll_BFu15s");
    set_bf_and_test(lv, v3, 4, 7, 15, hide_ull(1LL<<14), "B_BFu31ll_BFu15s");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_BFu15s(Test_B_BFu31ll_BFu15s, "B_BFu31ll_BFu15s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_BFu16i()
{
  {
    init_simple_test("B_BFu31ll_BFu16i");
    static B_BFu31ll_BFu16i lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu31ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_BFu16i)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 7, 16, 1, "B_BFu31ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 7, 16, hide_ull(1LL<<15), "B_BFu31ll_BFu16i");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_BFu16i(Test_B_BFu31ll_BFu16i, "B_BFu31ll_BFu16i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_BFu16ll()
{
  {
    init_simple_test("B_BFu31ll_BFu16ll");
    static B_BFu31ll_BFu16ll lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu31ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 7, 16, 1, "B_BFu31ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 7, 16, hide_ull(1LL<<15), "B_BFu31ll_BFu16ll");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_BFu16ll(Test_B_BFu31ll_BFu16ll, "B_BFu31ll_BFu16ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_BFu16s()
{
  {
    init_simple_test("B_BFu31ll_BFu16s");
    static B_BFu31ll_BFu16s lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu31ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_BFu16s)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 7, 16, 1, "B_BFu31ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 7, 16, hide_ull(1LL<<15), "B_BFu31ll_BFu16s");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_BFu16s(Test_B_BFu31ll_BFu16s, "B_BFu31ll_BFu16s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_BFu17i()
{
  {
    init_simple_test("B_BFu31ll_BFu17i");
    static B_BFu31ll_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu31ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_BFu17i)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 7, 17, 1, "B_BFu31ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 7, 17, hide_ull(1LL<<16), "B_BFu31ll_BFu17i");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_BFu17i(Test_B_BFu31ll_BFu17i, "B_BFu31ll_BFu17i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_BFu17ll()
{
  {
    init_simple_test("B_BFu31ll_BFu17ll");
    static B_BFu31ll_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu31ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 7, 17, 1, "B_BFu31ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 7, 17, hide_ull(1LL<<16), "B_BFu31ll_BFu17ll");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_BFu17ll(Test_B_BFu31ll_BFu17ll, "B_BFu31ll_BFu17ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_BFu1c()
{
  {
    init_simple_test("B_BFu31ll_BFu1c");
    static B_BFu31ll_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu31ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_BFu1c)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_BFu1c");
    set_bf_and_test(lv, v3, 4, 7, 1, 1, "B_BFu31ll_BFu1c");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_BFu1c(Test_B_BFu31ll_BFu1c, "B_BFu31ll_BFu1c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_BFu1i()
{
  {
    init_simple_test("B_BFu31ll_BFu1i");
    static B_BFu31ll_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu31ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_BFu1i)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_BFu1i");
    set_bf_and_test(lv, v3, 4, 7, 1, 1, "B_BFu31ll_BFu1i");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_BFu1i(Test_B_BFu31ll_BFu1i, "B_BFu31ll_BFu1i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_BFu1ll()
{
  {
    init_simple_test("B_BFu31ll_BFu1ll");
    static B_BFu31ll_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu31ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_BFu1ll");
    set_bf_and_test(lv, v3, 4, 7, 1, 1, "B_BFu31ll_BFu1ll");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_BFu1ll(Test_B_BFu31ll_BFu1ll, "B_BFu31ll_BFu1ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_BFu1s()
{
  {
    init_simple_test("B_BFu31ll_BFu1s");
    static B_BFu31ll_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu31ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_BFu1s)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_BFu1s");
    set_bf_and_test(lv, v3, 4, 7, 1, 1, "B_BFu31ll_BFu1s");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_BFu1s(Test_B_BFu31ll_BFu1s, "B_BFu31ll_BFu1s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_BFu31i()
{
  {
    init_simple_test("B_BFu31ll_BFu31i");
    static B_BFu31ll_BFu31i lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu31ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_BFu31i)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_BFu31i");
    set_bf_and_test(lv, v3, 4, 7, 31, 1, "B_BFu31ll_BFu31i");
    set_bf_and_test(lv, v3, 4, 7, 31, hide_ull(1LL<<30), "B_BFu31ll_BFu31i");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_BFu31i(Test_B_BFu31ll_BFu31i, "B_BFu31ll_BFu31i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_BFu31ll()
{
  {
    init_simple_test("B_BFu31ll_BFu31ll");
    static B_BFu31ll_BFu31ll lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu31ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_BFu31ll");
    set_bf_and_test(lv, v3, 4, 7, 31, 1, "B_BFu31ll_BFu31ll");
    set_bf_and_test(lv, v3, 4, 7, 31, hide_ull(1LL<<30), "B_BFu31ll_BFu31ll");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_BFu31ll(Test_B_BFu31ll_BFu31ll, "B_BFu31ll_BFu31ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_BFu32i()
{
  {
    init_simple_test("B_BFu31ll_BFu32i");
    static B_BFu31ll_BFu32i lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu31ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_BFu32i)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_BFu32i");
    set_bf_and_test(lv, v3, 4, 7, 32, 1, "B_BFu31ll_BFu32i");
    set_bf_and_test(lv, v3, 4, 7, 32, hide_ull(1LL<<31), "B_BFu31ll_BFu32i");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_BFu32i(Test_B_BFu31ll_BFu32i, "B_BFu31ll_BFu32i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_BFu32ll()
{
  {
    init_simple_test("B_BFu31ll_BFu32ll");
    static B_BFu31ll_BFu32ll lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu31ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_BFu32ll");
    set_bf_and_test(lv, v3, 4, 7, 32, 1, "B_BFu31ll_BFu32ll");
    set_bf_and_test(lv, v3, 4, 7, 32, hide_ull(1LL<<31), "B_BFu31ll_BFu32ll");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_BFu32ll(Test_B_BFu31ll_BFu32ll, "B_BFu31ll_BFu32ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_BFu33()
{
  {
    init_simple_test("B_BFu31ll_BFu33");
    static B_BFu31ll_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu31ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_BFu33)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_BFu33");
    set_bf_and_test(lv, v3, 4, 7, 33, 1, "B_BFu31ll_BFu33");
    set_bf_and_test(lv, v3, 4, 7, 33, hide_ull(1LL<<32), "B_BFu31ll_BFu33");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_BFu33(Test_B_BFu31ll_BFu33, "B_BFu31ll_BFu33", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_BFu7c()
{
  {
    init_simple_test("B_BFu31ll_BFu7c");
    static B_BFu31ll_BFu7c lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu31ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_BFu7c)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_BFu7c");
    set_bf_and_test(lv, v3, 4, 7, 7, 1, "B_BFu31ll_BFu7c");
    set_bf_and_test(lv, v3, 4, 7, 7, hide_ull(1LL<<6), "B_BFu31ll_BFu7c");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_BFu7c(Test_B_BFu31ll_BFu7c, "B_BFu31ll_BFu7c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_BFu7i()
{
  {
    init_simple_test("B_BFu31ll_BFu7i");
    static B_BFu31ll_BFu7i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu31ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_BFu7i)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_BFu7i");
    set_bf_and_test(lv, v3, 4, 7, 7, 1, "B_BFu31ll_BFu7i");
    set_bf_and_test(lv, v3, 4, 7, 7, hide_ull(1LL<<6), "B_BFu31ll_BFu7i");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_BFu7i(Test_B_BFu31ll_BFu7i, "B_BFu31ll_BFu7i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_BFu7ll()
{
  {
    init_simple_test("B_BFu31ll_BFu7ll");
    static B_BFu31ll_BFu7ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu31ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_BFu7ll");
    set_bf_and_test(lv, v3, 4, 7, 7, 1, "B_BFu31ll_BFu7ll");
    set_bf_and_test(lv, v3, 4, 7, 7, hide_ull(1LL<<6), "B_BFu31ll_BFu7ll");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_BFu7ll(Test_B_BFu31ll_BFu7ll, "B_BFu31ll_BFu7ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_BFu7s()
{
  {
    init_simple_test("B_BFu31ll_BFu7s");
    static B_BFu31ll_BFu7s lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu31ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_BFu7s)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_BFu7s");
    set_bf_and_test(lv, v3, 4, 7, 7, 1, "B_BFu31ll_BFu7s");
    set_bf_and_test(lv, v3, 4, 7, 7, hide_ull(1LL<<6), "B_BFu31ll_BFu7s");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_BFu7s(Test_B_BFu31ll_BFu7s, "B_BFu31ll_BFu7s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_BFu8c()
{
  {
    init_simple_test("B_BFu31ll_BFu8c");
    static B_BFu31ll_BFu8c lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu31ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_BFu8c)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_BFu8c");
    set_bf_and_test(lv, v3, 4, 7, 8, 1, "B_BFu31ll_BFu8c");
    set_bf_and_test(lv, v3, 4, 7, 8, hide_ull(1LL<<7), "B_BFu31ll_BFu8c");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_BFu8c(Test_B_BFu31ll_BFu8c, "B_BFu31ll_BFu8c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_BFu8i()
{
  {
    init_simple_test("B_BFu31ll_BFu8i");
    static B_BFu31ll_BFu8i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu31ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_BFu8i)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_BFu8i");
    set_bf_and_test(lv, v3, 4, 7, 8, 1, "B_BFu31ll_BFu8i");
    set_bf_and_test(lv, v3, 4, 7, 8, hide_ull(1LL<<7), "B_BFu31ll_BFu8i");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_BFu8i(Test_B_BFu31ll_BFu8i, "B_BFu31ll_BFu8i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_BFu8ll()
{
  {
    init_simple_test("B_BFu31ll_BFu8ll");
    static B_BFu31ll_BFu8ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu31ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_BFu8ll");
    set_bf_and_test(lv, v3, 4, 7, 8, 1, "B_BFu31ll_BFu8ll");
    set_bf_and_test(lv, v3, 4, 7, 8, hide_ull(1LL<<7), "B_BFu31ll_BFu8ll");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_BFu8ll(Test_B_BFu31ll_BFu8ll, "B_BFu31ll_BFu8ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_BFu8s()
{
  {
    init_simple_test("B_BFu31ll_BFu8s");
    static B_BFu31ll_BFu8s lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu31ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_BFu8s)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_BFu8s");
    set_bf_and_test(lv, v3, 4, 7, 8, 1, "B_BFu31ll_BFu8s");
    set_bf_and_test(lv, v3, 4, 7, 8, hide_ull(1LL<<7), "B_BFu31ll_BFu8s");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_BFu8s(Test_B_BFu31ll_BFu8s, "B_BFu31ll_BFu8s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_BFu9i()
{
  {
    init_simple_test("B_BFu31ll_BFu9i");
    static B_BFu31ll_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu31ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_BFu9i)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_BFu9i");
    set_bf_and_test(lv, v3, 4, 7, 9, 1, "B_BFu31ll_BFu9i");
    set_bf_and_test(lv, v3, 4, 7, 9, hide_ull(1LL<<8), "B_BFu31ll_BFu9i");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_BFu9i(Test_B_BFu31ll_BFu9i, "B_BFu31ll_BFu9i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_BFu9ll()
{
  {
    init_simple_test("B_BFu31ll_BFu9ll");
    static B_BFu31ll_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu31ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_BFu9ll");
    set_bf_and_test(lv, v3, 4, 7, 9, 1, "B_BFu31ll_BFu9ll");
    set_bf_and_test(lv, v3, 4, 7, 9, hide_ull(1LL<<8), "B_BFu31ll_BFu9ll");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_BFu9ll(Test_B_BFu31ll_BFu9ll, "B_BFu31ll_BFu9ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_BFu9s()
{
  {
    init_simple_test("B_BFu31ll_BFu9s");
    static B_BFu31ll_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu31ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_BFu9s)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_BFu9s");
    set_bf_and_test(lv, v3, 4, 7, 9, 1, "B_BFu31ll_BFu9s");
    set_bf_and_test(lv, v3, 4, 7, 9, hide_ull(1LL<<8), "B_BFu31ll_BFu9s");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_BFu9s(Test_B_BFu31ll_BFu9s, "B_BFu31ll_BFu9s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_C()
{
  {
    init_simple_test("B_BFu31ll_C");
    static B_BFu31ll_C lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu31ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_C)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_C");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_C");
    check_field_offset(lv, v3, 5, "B_BFu31ll_C.v3");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_C(Test_B_BFu31ll_C, "B_BFu31ll_C", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_D()
{
  {
    init_simple_test("B_BFu31ll_D");
    static B_BFu31ll_D lv;
    check2(sizeof(lv), 13, "sizeof(B_BFu31ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_D)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_D");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_D");
    check_field_offset(lv, v3, 5, "B_BFu31ll_D.v3");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_D(Test_B_BFu31ll_D, "B_BFu31ll_D", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_F()
{
  {
    init_simple_test("B_BFu31ll_F");
    static B_BFu31ll_F lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu31ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_F)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_F");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_F");
    check_field_offset(lv, v3, 5, "B_BFu31ll_F.v3");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_F(Test_B_BFu31ll_F, "B_BFu31ll_F", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_I()
{
  {
    init_simple_test("B_BFu31ll_I");
    static B_BFu31ll_I lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu31ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_I)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_I");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_I");
    check_field_offset(lv, v3, 5, "B_BFu31ll_I.v3");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_I(Test_B_BFu31ll_I, "B_BFu31ll_I", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_Ip()
{
  {
    init_simple_test("B_BFu31ll_Ip");
    static B_BFu31ll_Ip lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(B_BFu31ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_Ip)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_Ip");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_Ip");
    check_field_offset(lv, v3, 5, "B_BFu31ll_Ip.v3");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_Ip(Test_B_BFu31ll_Ip, "B_BFu31ll_Ip", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_L()
{
  {
    init_simple_test("B_BFu31ll_L");
    static B_BFu31ll_L lv;
    check2(sizeof(lv), 13, "sizeof(B_BFu31ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_L)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_L");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_L");
    check_field_offset(lv, v3, 5, "B_BFu31ll_L.v3");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_L(Test_B_BFu31ll_L, "B_BFu31ll_L", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_S()
{
  {
    init_simple_test("B_BFu31ll_S");
    static B_BFu31ll_S lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu31ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_S)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_S");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_S");
    check_field_offset(lv, v3, 5, "B_BFu31ll_S.v3");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_S(Test_B_BFu31ll_S, "B_BFu31ll_S", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_Uc()
{
  {
    init_simple_test("B_BFu31ll_Uc");
    static B_BFu31ll_Uc lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu31ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_Uc)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_Uc");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_Uc");
    check_field_offset(lv, v3, 5, "B_BFu31ll_Uc.v3");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_Uc(Test_B_BFu31ll_Uc, "B_BFu31ll_Uc", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_Ui()
{
  {
    init_simple_test("B_BFu31ll_Ui");
    static B_BFu31ll_Ui lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu31ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_Ui)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_Ui");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_Ui");
    check_field_offset(lv, v3, 5, "B_BFu31ll_Ui.v3");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_Ui(Test_B_BFu31ll_Ui, "B_BFu31ll_Ui", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_Ul()
{
  {
    init_simple_test("B_BFu31ll_Ul");
    static B_BFu31ll_Ul lv;
    check2(sizeof(lv), 13, "sizeof(B_BFu31ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_Ul)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_Ul");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_Ul");
    check_field_offset(lv, v3, 5, "B_BFu31ll_Ul.v3");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_Ul(Test_B_BFu31ll_Ul, "B_BFu31ll_Ul", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_Us()
{
  {
    init_simple_test("B_BFu31ll_Us");
    static B_BFu31ll_Us lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu31ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_Us)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_Us");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_Us");
    check_field_offset(lv, v3, 5, "B_BFu31ll_Us.v3");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_Us(Test_B_BFu31ll_Us, "B_BFu31ll_Us", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu31ll_Vp()
{
  {
    init_simple_test("B_BFu31ll_Vp");
    static B_BFu31ll_Vp lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(B_BFu31ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu31ll_Vp)");
    check_field_offset(lv, v1, 0, "B_BFu31ll_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "B_BFu31ll_Vp");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "B_BFu31ll_Vp");
    check_field_offset(lv, v3, 5, "B_BFu31ll_Vp.v3");
  }
}
static Arrange_To_Call_Me vB_BFu31ll_Vp(Test_B_BFu31ll_Vp, "B_BFu31ll_Vp", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i()
{
  {
    init_simple_test("B_BFu32i");
    static B_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i)");
    check_field_offset(lv, v1, 0, "B_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i");
  }
}
static Arrange_To_Call_Me vB_BFu32i(Test_B_BFu32i, "B_BFu32i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_B()
{
  {
    init_simple_test("B_BFu32i_B");
    static B_BFu32i_B lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu32i_B)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_B)");
    check_field_offset(lv, v1, 0, "B_BFu32i_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_B");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_B");
    check_field_offset(lv, v3, 5, "B_BFu32i_B.v3");
  }
}
static Arrange_To_Call_Me vB_BFu32i_B(Test_B_BFu32i_B, "B_BFu32i_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_BFu15i()
{
  {
    init_simple_test("B_BFu32i_BFu15i");
    static B_BFu32i_BFu15i lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu32i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_BFu15i)");
    check_field_offset(lv, v1, 0, "B_BFu32i_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_BFu15i");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "B_BFu32i_BFu15i");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "B_BFu32i_BFu15i");
  }
}
static Arrange_To_Call_Me vB_BFu32i_BFu15i(Test_B_BFu32i_BFu15i, "B_BFu32i_BFu15i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_BFu15ll()
{
  {
    init_simple_test("B_BFu32i_BFu15ll");
    static B_BFu32i_BFu15ll lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu32i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_BFu15ll)");
    check_field_offset(lv, v1, 0, "B_BFu32i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_BFu15ll");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "B_BFu32i_BFu15ll");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "B_BFu32i_BFu15ll");
  }
}
static Arrange_To_Call_Me vB_BFu32i_BFu15ll(Test_B_BFu32i_BFu15ll, "B_BFu32i_BFu15ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_BFu15s()
{
  {
    init_simple_test("B_BFu32i_BFu15s");
    static B_BFu32i_BFu15s lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu32i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_BFu15s)");
    check_field_offset(lv, v1, 0, "B_BFu32i_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_BFu15s");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "B_BFu32i_BFu15s");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "B_BFu32i_BFu15s");
  }
}
static Arrange_To_Call_Me vB_BFu32i_BFu15s(Test_B_BFu32i_BFu15s, "B_BFu32i_BFu15s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_BFu16i()
{
  {
    init_simple_test("B_BFu32i_BFu16i");
    static B_BFu32i_BFu16i lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu32i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_BFu16i)");
    check_field_offset(lv, v1, 0, "B_BFu32i_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_BFu16i");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "B_BFu32i_BFu16i");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "B_BFu32i_BFu16i");
  }
}
static Arrange_To_Call_Me vB_BFu32i_BFu16i(Test_B_BFu32i_BFu16i, "B_BFu32i_BFu16i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_BFu16ll()
{
  {
    init_simple_test("B_BFu32i_BFu16ll");
    static B_BFu32i_BFu16ll lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu32i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_BFu16ll)");
    check_field_offset(lv, v1, 0, "B_BFu32i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_BFu16ll");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "B_BFu32i_BFu16ll");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "B_BFu32i_BFu16ll");
  }
}
static Arrange_To_Call_Me vB_BFu32i_BFu16ll(Test_B_BFu32i_BFu16ll, "B_BFu32i_BFu16ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_BFu16s()
{
  {
    init_simple_test("B_BFu32i_BFu16s");
    static B_BFu32i_BFu16s lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu32i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_BFu16s)");
    check_field_offset(lv, v1, 0, "B_BFu32i_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_BFu16s");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "B_BFu32i_BFu16s");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "B_BFu32i_BFu16s");
  }
}
static Arrange_To_Call_Me vB_BFu32i_BFu16s(Test_B_BFu32i_BFu16s, "B_BFu32i_BFu16s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_BFu17i()
{
  {
    init_simple_test("B_BFu32i_BFu17i");
    static B_BFu32i_BFu17i lv;
    check2(sizeof(lv), 8, "sizeof(B_BFu32i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_BFu17i)");
    check_field_offset(lv, v1, 0, "B_BFu32i_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_BFu17i");
    set_bf_and_test(lv, v3, 5, 0, 17, 1, "B_BFu32i_BFu17i");
    set_bf_and_test(lv, v3, 5, 0, 17, hide_ull(1LL<<16), "B_BFu32i_BFu17i");
  }
}
static Arrange_To_Call_Me vB_BFu32i_BFu17i(Test_B_BFu32i_BFu17i, "B_BFu32i_BFu17i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_BFu17ll()
{
  {
    init_simple_test("B_BFu32i_BFu17ll");
    static B_BFu32i_BFu17ll lv;
    check2(sizeof(lv), 8, "sizeof(B_BFu32i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_BFu17ll)");
    check_field_offset(lv, v1, 0, "B_BFu32i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_BFu17ll");
    set_bf_and_test(lv, v3, 5, 0, 17, 1, "B_BFu32i_BFu17ll");
    set_bf_and_test(lv, v3, 5, 0, 17, hide_ull(1LL<<16), "B_BFu32i_BFu17ll");
  }
}
static Arrange_To_Call_Me vB_BFu32i_BFu17ll(Test_B_BFu32i_BFu17ll, "B_BFu32i_BFu17ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_BFu1c()
{
  {
    init_simple_test("B_BFu32i_BFu1c");
    static B_BFu32i_BFu1c lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu32i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_BFu1c)");
    check_field_offset(lv, v1, 0, "B_BFu32i_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_BFu1c");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "B_BFu32i_BFu1c");
  }
}
static Arrange_To_Call_Me vB_BFu32i_BFu1c(Test_B_BFu32i_BFu1c, "B_BFu32i_BFu1c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_BFu1i()
{
  {
    init_simple_test("B_BFu32i_BFu1i");
    static B_BFu32i_BFu1i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu32i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_BFu1i)");
    check_field_offset(lv, v1, 0, "B_BFu32i_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_BFu1i");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "B_BFu32i_BFu1i");
  }
}
static Arrange_To_Call_Me vB_BFu32i_BFu1i(Test_B_BFu32i_BFu1i, "B_BFu32i_BFu1i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_BFu1ll()
{
  {
    init_simple_test("B_BFu32i_BFu1ll");
    static B_BFu32i_BFu1ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu32i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_BFu1ll)");
    check_field_offset(lv, v1, 0, "B_BFu32i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_BFu1ll");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "B_BFu32i_BFu1ll");
  }
}
static Arrange_To_Call_Me vB_BFu32i_BFu1ll(Test_B_BFu32i_BFu1ll, "B_BFu32i_BFu1ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_BFu1s()
{
  {
    init_simple_test("B_BFu32i_BFu1s");
    static B_BFu32i_BFu1s lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu32i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_BFu1s)");
    check_field_offset(lv, v1, 0, "B_BFu32i_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_BFu1s");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "B_BFu32i_BFu1s");
  }
}
static Arrange_To_Call_Me vB_BFu32i_BFu1s(Test_B_BFu32i_BFu1s, "B_BFu32i_BFu1s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_BFu31i()
{
  {
    init_simple_test("B_BFu32i_BFu31i");
    static B_BFu32i_BFu31i lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu32i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_BFu31i)");
    check_field_offset(lv, v1, 0, "B_BFu32i_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_BFu31i");
    set_bf_and_test(lv, v3, 5, 0, 31, 1, "B_BFu32i_BFu31i");
    set_bf_and_test(lv, v3, 5, 0, 31, hide_ull(1LL<<30), "B_BFu32i_BFu31i");
  }
}
static Arrange_To_Call_Me vB_BFu32i_BFu31i(Test_B_BFu32i_BFu31i, "B_BFu32i_BFu31i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_BFu31ll()
{
  {
    init_simple_test("B_BFu32i_BFu31ll");
    static B_BFu32i_BFu31ll lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu32i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_BFu31ll)");
    check_field_offset(lv, v1, 0, "B_BFu32i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_BFu31ll");
    set_bf_and_test(lv, v3, 5, 0, 31, 1, "B_BFu32i_BFu31ll");
    set_bf_and_test(lv, v3, 5, 0, 31, hide_ull(1LL<<30), "B_BFu32i_BFu31ll");
  }
}
static Arrange_To_Call_Me vB_BFu32i_BFu31ll(Test_B_BFu32i_BFu31ll, "B_BFu32i_BFu31ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_BFu32i()
{
  {
    init_simple_test("B_BFu32i_BFu32i");
    static B_BFu32i_BFu32i lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu32i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_BFu32i)");
    check_field_offset(lv, v1, 0, "B_BFu32i_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_BFu32i");
    set_bf_and_test(lv, v3, 5, 0, 32, 1, "B_BFu32i_BFu32i");
    set_bf_and_test(lv, v3, 5, 0, 32, hide_ull(1LL<<31), "B_BFu32i_BFu32i");
  }
}
static Arrange_To_Call_Me vB_BFu32i_BFu32i(Test_B_BFu32i_BFu32i, "B_BFu32i_BFu32i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_BFu32ll()
{
  {
    init_simple_test("B_BFu32i_BFu32ll");
    static B_BFu32i_BFu32ll lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu32i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_BFu32ll)");
    check_field_offset(lv, v1, 0, "B_BFu32i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_BFu32ll");
    set_bf_and_test(lv, v3, 5, 0, 32, 1, "B_BFu32i_BFu32ll");
    set_bf_and_test(lv, v3, 5, 0, 32, hide_ull(1LL<<31), "B_BFu32i_BFu32ll");
  }
}
static Arrange_To_Call_Me vB_BFu32i_BFu32ll(Test_B_BFu32i_BFu32ll, "B_BFu32i_BFu32ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_BFu33()
{
  {
    init_simple_test("B_BFu32i_BFu33");
    static B_BFu32i_BFu33 lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu32i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_BFu33)");
    check_field_offset(lv, v1, 0, "B_BFu32i_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_BFu33");
    set_bf_and_test(lv, v3, 5, 0, 33, 1, "B_BFu32i_BFu33");
    set_bf_and_test(lv, v3, 5, 0, 33, hide_ull(1LL<<32), "B_BFu32i_BFu33");
  }
}
static Arrange_To_Call_Me vB_BFu32i_BFu33(Test_B_BFu32i_BFu33, "B_BFu32i_BFu33", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_BFu7c()
{
  {
    init_simple_test("B_BFu32i_BFu7c");
    static B_BFu32i_BFu7c lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu32i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_BFu7c)");
    check_field_offset(lv, v1, 0, "B_BFu32i_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_BFu7c");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "B_BFu32i_BFu7c");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "B_BFu32i_BFu7c");
  }
}
static Arrange_To_Call_Me vB_BFu32i_BFu7c(Test_B_BFu32i_BFu7c, "B_BFu32i_BFu7c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_BFu7i()
{
  {
    init_simple_test("B_BFu32i_BFu7i");
    static B_BFu32i_BFu7i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu32i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_BFu7i)");
    check_field_offset(lv, v1, 0, "B_BFu32i_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_BFu7i");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "B_BFu32i_BFu7i");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "B_BFu32i_BFu7i");
  }
}
static Arrange_To_Call_Me vB_BFu32i_BFu7i(Test_B_BFu32i_BFu7i, "B_BFu32i_BFu7i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_BFu7ll()
{
  {
    init_simple_test("B_BFu32i_BFu7ll");
    static B_BFu32i_BFu7ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu32i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_BFu7ll)");
    check_field_offset(lv, v1, 0, "B_BFu32i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_BFu7ll");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "B_BFu32i_BFu7ll");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "B_BFu32i_BFu7ll");
  }
}
static Arrange_To_Call_Me vB_BFu32i_BFu7ll(Test_B_BFu32i_BFu7ll, "B_BFu32i_BFu7ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_BFu7s()
{
  {
    init_simple_test("B_BFu32i_BFu7s");
    static B_BFu32i_BFu7s lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu32i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_BFu7s)");
    check_field_offset(lv, v1, 0, "B_BFu32i_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_BFu7s");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "B_BFu32i_BFu7s");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "B_BFu32i_BFu7s");
  }
}
static Arrange_To_Call_Me vB_BFu32i_BFu7s(Test_B_BFu32i_BFu7s, "B_BFu32i_BFu7s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_BFu8c()
{
  {
    init_simple_test("B_BFu32i_BFu8c");
    static B_BFu32i_BFu8c lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu32i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_BFu8c)");
    check_field_offset(lv, v1, 0, "B_BFu32i_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_BFu8c");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "B_BFu32i_BFu8c");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "B_BFu32i_BFu8c");
  }
}
static Arrange_To_Call_Me vB_BFu32i_BFu8c(Test_B_BFu32i_BFu8c, "B_BFu32i_BFu8c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_BFu8i()
{
  {
    init_simple_test("B_BFu32i_BFu8i");
    static B_BFu32i_BFu8i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu32i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_BFu8i)");
    check_field_offset(lv, v1, 0, "B_BFu32i_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_BFu8i");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "B_BFu32i_BFu8i");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "B_BFu32i_BFu8i");
  }
}
static Arrange_To_Call_Me vB_BFu32i_BFu8i(Test_B_BFu32i_BFu8i, "B_BFu32i_BFu8i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_BFu8ll()
{
  {
    init_simple_test("B_BFu32i_BFu8ll");
    static B_BFu32i_BFu8ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu32i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_BFu8ll)");
    check_field_offset(lv, v1, 0, "B_BFu32i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_BFu8ll");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "B_BFu32i_BFu8ll");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "B_BFu32i_BFu8ll");
  }
}
static Arrange_To_Call_Me vB_BFu32i_BFu8ll(Test_B_BFu32i_BFu8ll, "B_BFu32i_BFu8ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_BFu8s()
{
  {
    init_simple_test("B_BFu32i_BFu8s");
    static B_BFu32i_BFu8s lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu32i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_BFu8s)");
    check_field_offset(lv, v1, 0, "B_BFu32i_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_BFu8s");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "B_BFu32i_BFu8s");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "B_BFu32i_BFu8s");
  }
}
static Arrange_To_Call_Me vB_BFu32i_BFu8s(Test_B_BFu32i_BFu8s, "B_BFu32i_BFu8s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_BFu9i()
{
  {
    init_simple_test("B_BFu32i_BFu9i");
    static B_BFu32i_BFu9i lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu32i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_BFu9i)");
    check_field_offset(lv, v1, 0, "B_BFu32i_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_BFu9i");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "B_BFu32i_BFu9i");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "B_BFu32i_BFu9i");
  }
}
static Arrange_To_Call_Me vB_BFu32i_BFu9i(Test_B_BFu32i_BFu9i, "B_BFu32i_BFu9i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_BFu9ll()
{
  {
    init_simple_test("B_BFu32i_BFu9ll");
    static B_BFu32i_BFu9ll lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu32i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_BFu9ll)");
    check_field_offset(lv, v1, 0, "B_BFu32i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_BFu9ll");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "B_BFu32i_BFu9ll");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "B_BFu32i_BFu9ll");
  }
}
static Arrange_To_Call_Me vB_BFu32i_BFu9ll(Test_B_BFu32i_BFu9ll, "B_BFu32i_BFu9ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_BFu9s()
{
  {
    init_simple_test("B_BFu32i_BFu9s");
    static B_BFu32i_BFu9s lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu32i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_BFu9s)");
    check_field_offset(lv, v1, 0, "B_BFu32i_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_BFu9s");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "B_BFu32i_BFu9s");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "B_BFu32i_BFu9s");
  }
}
static Arrange_To_Call_Me vB_BFu32i_BFu9s(Test_B_BFu32i_BFu9s, "B_BFu32i_BFu9s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_C()
{
  {
    init_simple_test("B_BFu32i_C");
    static B_BFu32i_C lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu32i_C)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_C)");
    check_field_offset(lv, v1, 0, "B_BFu32i_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_C");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_C");
    check_field_offset(lv, v3, 5, "B_BFu32i_C.v3");
  }
}
static Arrange_To_Call_Me vB_BFu32i_C(Test_B_BFu32i_C, "B_BFu32i_C", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_D()
{
  {
    init_simple_test("B_BFu32i_D");
    static B_BFu32i_D lv;
    check2(sizeof(lv), 13, "sizeof(B_BFu32i_D)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_D)");
    check_field_offset(lv, v1, 0, "B_BFu32i_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_D");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_D");
    check_field_offset(lv, v3, 5, "B_BFu32i_D.v3");
  }
}
static Arrange_To_Call_Me vB_BFu32i_D(Test_B_BFu32i_D, "B_BFu32i_D", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_F()
{
  {
    init_simple_test("B_BFu32i_F");
    static B_BFu32i_F lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu32i_F)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_F)");
    check_field_offset(lv, v1, 0, "B_BFu32i_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_F");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_F");
    check_field_offset(lv, v3, 5, "B_BFu32i_F.v3");
  }
}
static Arrange_To_Call_Me vB_BFu32i_F(Test_B_BFu32i_F, "B_BFu32i_F", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_I()
{
  {
    init_simple_test("B_BFu32i_I");
    static B_BFu32i_I lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu32i_I)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_I)");
    check_field_offset(lv, v1, 0, "B_BFu32i_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_I");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_I");
    check_field_offset(lv, v3, 5, "B_BFu32i_I.v3");
  }
}
static Arrange_To_Call_Me vB_BFu32i_I(Test_B_BFu32i_I, "B_BFu32i_I", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_Ip()
{
  {
    init_simple_test("B_BFu32i_Ip");
    static B_BFu32i_Ip lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(B_BFu32i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_Ip)");
    check_field_offset(lv, v1, 0, "B_BFu32i_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_Ip");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_Ip");
    check_field_offset(lv, v3, 5, "B_BFu32i_Ip.v3");
  }
}
static Arrange_To_Call_Me vB_BFu32i_Ip(Test_B_BFu32i_Ip, "B_BFu32i_Ip", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_L()
{
  {
    init_simple_test("B_BFu32i_L");
    static B_BFu32i_L lv;
    check2(sizeof(lv), 13, "sizeof(B_BFu32i_L)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_L)");
    check_field_offset(lv, v1, 0, "B_BFu32i_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_L");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_L");
    check_field_offset(lv, v3, 5, "B_BFu32i_L.v3");
  }
}
static Arrange_To_Call_Me vB_BFu32i_L(Test_B_BFu32i_L, "B_BFu32i_L", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_S()
{
  {
    init_simple_test("B_BFu32i_S");
    static B_BFu32i_S lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu32i_S)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_S)");
    check_field_offset(lv, v1, 0, "B_BFu32i_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_S");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_S");
    check_field_offset(lv, v3, 5, "B_BFu32i_S.v3");
  }
}
static Arrange_To_Call_Me vB_BFu32i_S(Test_B_BFu32i_S, "B_BFu32i_S", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_Uc()
{
  {
    init_simple_test("B_BFu32i_Uc");
    static B_BFu32i_Uc lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu32i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_Uc)");
    check_field_offset(lv, v1, 0, "B_BFu32i_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_Uc");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_Uc");
    check_field_offset(lv, v3, 5, "B_BFu32i_Uc.v3");
  }
}
static Arrange_To_Call_Me vB_BFu32i_Uc(Test_B_BFu32i_Uc, "B_BFu32i_Uc", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_Ui()
{
  {
    init_simple_test("B_BFu32i_Ui");
    static B_BFu32i_Ui lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu32i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_Ui)");
    check_field_offset(lv, v1, 0, "B_BFu32i_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_Ui");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_Ui");
    check_field_offset(lv, v3, 5, "B_BFu32i_Ui.v3");
  }
}
static Arrange_To_Call_Me vB_BFu32i_Ui(Test_B_BFu32i_Ui, "B_BFu32i_Ui", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_Ul()
{
  {
    init_simple_test("B_BFu32i_Ul");
    static B_BFu32i_Ul lv;
    check2(sizeof(lv), 13, "sizeof(B_BFu32i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_Ul)");
    check_field_offset(lv, v1, 0, "B_BFu32i_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_Ul");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_Ul");
    check_field_offset(lv, v3, 5, "B_BFu32i_Ul.v3");
  }
}
static Arrange_To_Call_Me vB_BFu32i_Ul(Test_B_BFu32i_Ul, "B_BFu32i_Ul", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_Us()
{
  {
    init_simple_test("B_BFu32i_Us");
    static B_BFu32i_Us lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu32i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_Us)");
    check_field_offset(lv, v1, 0, "B_BFu32i_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_Us");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_Us");
    check_field_offset(lv, v3, 5, "B_BFu32i_Us.v3");
  }
}
static Arrange_To_Call_Me vB_BFu32i_Us(Test_B_BFu32i_Us, "B_BFu32i_Us", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32i_Vp()
{
  {
    init_simple_test("B_BFu32i_Vp");
    static B_BFu32i_Vp lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(B_BFu32i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32i_Vp)");
    check_field_offset(lv, v1, 0, "B_BFu32i_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32i_Vp");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32i_Vp");
    check_field_offset(lv, v3, 5, "B_BFu32i_Vp.v3");
  }
}
static Arrange_To_Call_Me vB_BFu32i_Vp(Test_B_BFu32i_Vp, "B_BFu32i_Vp", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll()
{
  {
    init_simple_test("B_BFu32ll");
    static B_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll)");
    check_field_offset(lv, v1, 0, "B_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll");
  }
}
static Arrange_To_Call_Me vB_BFu32ll(Test_B_BFu32ll, "B_BFu32ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_B()
{
  {
    init_simple_test("B_BFu32ll_B");
    static B_BFu32ll_B lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu32ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_B)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_B");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_B");
    check_field_offset(lv, v3, 5, "B_BFu32ll_B.v3");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_B(Test_B_BFu32ll_B, "B_BFu32ll_B", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_BFu15i()
{
  {
    init_simple_test("B_BFu32ll_BFu15i");
    static B_BFu32ll_BFu15i lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu32ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_BFu15i)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_BFu15i");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "B_BFu32ll_BFu15i");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "B_BFu32ll_BFu15i");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_BFu15i(Test_B_BFu32ll_BFu15i, "B_BFu32ll_BFu15i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_BFu15ll()
{
  {
    init_simple_test("B_BFu32ll_BFu15ll");
    static B_BFu32ll_BFu15ll lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu32ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_BFu15ll");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "B_BFu32ll_BFu15ll");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "B_BFu32ll_BFu15ll");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_BFu15ll(Test_B_BFu32ll_BFu15ll, "B_BFu32ll_BFu15ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_BFu15s()
{
  {
    init_simple_test("B_BFu32ll_BFu15s");
    static B_BFu32ll_BFu15s lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu32ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_BFu15s)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_BFu15s");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "B_BFu32ll_BFu15s");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "B_BFu32ll_BFu15s");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_BFu15s(Test_B_BFu32ll_BFu15s, "B_BFu32ll_BFu15s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_BFu16i()
{
  {
    init_simple_test("B_BFu32ll_BFu16i");
    static B_BFu32ll_BFu16i lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu32ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_BFu16i)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_BFu16i");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "B_BFu32ll_BFu16i");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "B_BFu32ll_BFu16i");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_BFu16i(Test_B_BFu32ll_BFu16i, "B_BFu32ll_BFu16i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_BFu16ll()
{
  {
    init_simple_test("B_BFu32ll_BFu16ll");
    static B_BFu32ll_BFu16ll lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu32ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_BFu16ll");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "B_BFu32ll_BFu16ll");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "B_BFu32ll_BFu16ll");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_BFu16ll(Test_B_BFu32ll_BFu16ll, "B_BFu32ll_BFu16ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_BFu16s()
{
  {
    init_simple_test("B_BFu32ll_BFu16s");
    static B_BFu32ll_BFu16s lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu32ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_BFu16s)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_BFu16s");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "B_BFu32ll_BFu16s");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "B_BFu32ll_BFu16s");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_BFu16s(Test_B_BFu32ll_BFu16s, "B_BFu32ll_BFu16s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_BFu17i()
{
  {
    init_simple_test("B_BFu32ll_BFu17i");
    static B_BFu32ll_BFu17i lv;
    check2(sizeof(lv), 8, "sizeof(B_BFu32ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_BFu17i)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_BFu17i");
    set_bf_and_test(lv, v3, 5, 0, 17, 1, "B_BFu32ll_BFu17i");
    set_bf_and_test(lv, v3, 5, 0, 17, hide_ull(1LL<<16), "B_BFu32ll_BFu17i");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_BFu17i(Test_B_BFu32ll_BFu17i, "B_BFu32ll_BFu17i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_BFu17ll()
{
  {
    init_simple_test("B_BFu32ll_BFu17ll");
    static B_BFu32ll_BFu17ll lv;
    check2(sizeof(lv), 8, "sizeof(B_BFu32ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_BFu17ll");
    set_bf_and_test(lv, v3, 5, 0, 17, 1, "B_BFu32ll_BFu17ll");
    set_bf_and_test(lv, v3, 5, 0, 17, hide_ull(1LL<<16), "B_BFu32ll_BFu17ll");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_BFu17ll(Test_B_BFu32ll_BFu17ll, "B_BFu32ll_BFu17ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_BFu1c()
{
  {
    init_simple_test("B_BFu32ll_BFu1c");
    static B_BFu32ll_BFu1c lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu32ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_BFu1c)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_BFu1c");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "B_BFu32ll_BFu1c");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_BFu1c(Test_B_BFu32ll_BFu1c, "B_BFu32ll_BFu1c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_BFu1i()
{
  {
    init_simple_test("B_BFu32ll_BFu1i");
    static B_BFu32ll_BFu1i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu32ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_BFu1i)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_BFu1i");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "B_BFu32ll_BFu1i");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_BFu1i(Test_B_BFu32ll_BFu1i, "B_BFu32ll_BFu1i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_BFu1ll()
{
  {
    init_simple_test("B_BFu32ll_BFu1ll");
    static B_BFu32ll_BFu1ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu32ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_BFu1ll");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "B_BFu32ll_BFu1ll");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_BFu1ll(Test_B_BFu32ll_BFu1ll, "B_BFu32ll_BFu1ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_BFu1s()
{
  {
    init_simple_test("B_BFu32ll_BFu1s");
    static B_BFu32ll_BFu1s lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu32ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_BFu1s)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_BFu1s");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "B_BFu32ll_BFu1s");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_BFu1s(Test_B_BFu32ll_BFu1s, "B_BFu32ll_BFu1s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_BFu31i()
{
  {
    init_simple_test("B_BFu32ll_BFu31i");
    static B_BFu32ll_BFu31i lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu32ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_BFu31i)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_BFu31i");
    set_bf_and_test(lv, v3, 5, 0, 31, 1, "B_BFu32ll_BFu31i");
    set_bf_and_test(lv, v3, 5, 0, 31, hide_ull(1LL<<30), "B_BFu32ll_BFu31i");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_BFu31i(Test_B_BFu32ll_BFu31i, "B_BFu32ll_BFu31i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_BFu31ll()
{
  {
    init_simple_test("B_BFu32ll_BFu31ll");
    static B_BFu32ll_BFu31ll lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu32ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_BFu31ll");
    set_bf_and_test(lv, v3, 5, 0, 31, 1, "B_BFu32ll_BFu31ll");
    set_bf_and_test(lv, v3, 5, 0, 31, hide_ull(1LL<<30), "B_BFu32ll_BFu31ll");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_BFu31ll(Test_B_BFu32ll_BFu31ll, "B_BFu32ll_BFu31ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_BFu32i()
{
  {
    init_simple_test("B_BFu32ll_BFu32i");
    static B_BFu32ll_BFu32i lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu32ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_BFu32i)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_BFu32i");
    set_bf_and_test(lv, v3, 5, 0, 32, 1, "B_BFu32ll_BFu32i");
    set_bf_and_test(lv, v3, 5, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_BFu32i");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_BFu32i(Test_B_BFu32ll_BFu32i, "B_BFu32ll_BFu32i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_BFu32ll()
{
  {
    init_simple_test("B_BFu32ll_BFu32ll");
    static B_BFu32ll_BFu32ll lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu32ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_BFu32ll");
    set_bf_and_test(lv, v3, 5, 0, 32, 1, "B_BFu32ll_BFu32ll");
    set_bf_and_test(lv, v3, 5, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_BFu32ll");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_BFu32ll(Test_B_BFu32ll_BFu32ll, "B_BFu32ll_BFu32ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_BFu33()
{
  {
    init_simple_test("B_BFu32ll_BFu33");
    static B_BFu32ll_BFu33 lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu32ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_BFu33)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_BFu33");
    set_bf_and_test(lv, v3, 5, 0, 33, 1, "B_BFu32ll_BFu33");
    set_bf_and_test(lv, v3, 5, 0, 33, hide_ull(1LL<<32), "B_BFu32ll_BFu33");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_BFu33(Test_B_BFu32ll_BFu33, "B_BFu32ll_BFu33", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_BFu7c()
{
  {
    init_simple_test("B_BFu32ll_BFu7c");
    static B_BFu32ll_BFu7c lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu32ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_BFu7c)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_BFu7c");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "B_BFu32ll_BFu7c");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "B_BFu32ll_BFu7c");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_BFu7c(Test_B_BFu32ll_BFu7c, "B_BFu32ll_BFu7c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_BFu7i()
{
  {
    init_simple_test("B_BFu32ll_BFu7i");
    static B_BFu32ll_BFu7i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu32ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_BFu7i)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_BFu7i");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "B_BFu32ll_BFu7i");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "B_BFu32ll_BFu7i");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_BFu7i(Test_B_BFu32ll_BFu7i, "B_BFu32ll_BFu7i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_BFu7ll()
{
  {
    init_simple_test("B_BFu32ll_BFu7ll");
    static B_BFu32ll_BFu7ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu32ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_BFu7ll");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "B_BFu32ll_BFu7ll");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "B_BFu32ll_BFu7ll");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_BFu7ll(Test_B_BFu32ll_BFu7ll, "B_BFu32ll_BFu7ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_BFu7s()
{
  {
    init_simple_test("B_BFu32ll_BFu7s");
    static B_BFu32ll_BFu7s lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu32ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_BFu7s)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_BFu7s");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "B_BFu32ll_BFu7s");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "B_BFu32ll_BFu7s");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_BFu7s(Test_B_BFu32ll_BFu7s, "B_BFu32ll_BFu7s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_BFu8c()
{
  {
    init_simple_test("B_BFu32ll_BFu8c");
    static B_BFu32ll_BFu8c lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu32ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_BFu8c)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_BFu8c");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "B_BFu32ll_BFu8c");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "B_BFu32ll_BFu8c");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_BFu8c(Test_B_BFu32ll_BFu8c, "B_BFu32ll_BFu8c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_BFu8i()
{
  {
    init_simple_test("B_BFu32ll_BFu8i");
    static B_BFu32ll_BFu8i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu32ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_BFu8i)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_BFu8i");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "B_BFu32ll_BFu8i");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "B_BFu32ll_BFu8i");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_BFu8i(Test_B_BFu32ll_BFu8i, "B_BFu32ll_BFu8i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_BFu8ll()
{
  {
    init_simple_test("B_BFu32ll_BFu8ll");
    static B_BFu32ll_BFu8ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu32ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_BFu8ll");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "B_BFu32ll_BFu8ll");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "B_BFu32ll_BFu8ll");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_BFu8ll(Test_B_BFu32ll_BFu8ll, "B_BFu32ll_BFu8ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_BFu8s()
{
  {
    init_simple_test("B_BFu32ll_BFu8s");
    static B_BFu32ll_BFu8s lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu32ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_BFu8s)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_BFu8s");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "B_BFu32ll_BFu8s");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "B_BFu32ll_BFu8s");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_BFu8s(Test_B_BFu32ll_BFu8s, "B_BFu32ll_BFu8s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_BFu9i()
{
  {
    init_simple_test("B_BFu32ll_BFu9i");
    static B_BFu32ll_BFu9i lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu32ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_BFu9i)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_BFu9i");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "B_BFu32ll_BFu9i");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "B_BFu32ll_BFu9i");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_BFu9i(Test_B_BFu32ll_BFu9i, "B_BFu32ll_BFu9i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_BFu9ll()
{
  {
    init_simple_test("B_BFu32ll_BFu9ll");
    static B_BFu32ll_BFu9ll lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu32ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_BFu9ll");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "B_BFu32ll_BFu9ll");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "B_BFu32ll_BFu9ll");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_BFu9ll(Test_B_BFu32ll_BFu9ll, "B_BFu32ll_BFu9ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_BFu9s()
{
  {
    init_simple_test("B_BFu32ll_BFu9s");
    static B_BFu32ll_BFu9s lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu32ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_BFu9s)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_BFu9s");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "B_BFu32ll_BFu9s");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "B_BFu32ll_BFu9s");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_BFu9s(Test_B_BFu32ll_BFu9s, "B_BFu32ll_BFu9s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_C()
{
  {
    init_simple_test("B_BFu32ll_C");
    static B_BFu32ll_C lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu32ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_C)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_C");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_C");
    check_field_offset(lv, v3, 5, "B_BFu32ll_C.v3");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_C(Test_B_BFu32ll_C, "B_BFu32ll_C", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_D()
{
  {
    init_simple_test("B_BFu32ll_D");
    static B_BFu32ll_D lv;
    check2(sizeof(lv), 13, "sizeof(B_BFu32ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_D)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_D");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_D");
    check_field_offset(lv, v3, 5, "B_BFu32ll_D.v3");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_D(Test_B_BFu32ll_D, "B_BFu32ll_D", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_F()
{
  {
    init_simple_test("B_BFu32ll_F");
    static B_BFu32ll_F lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu32ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_F)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_F");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_F");
    check_field_offset(lv, v3, 5, "B_BFu32ll_F.v3");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_F(Test_B_BFu32ll_F, "B_BFu32ll_F", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_I()
{
  {
    init_simple_test("B_BFu32ll_I");
    static B_BFu32ll_I lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu32ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_I)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_I");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_I");
    check_field_offset(lv, v3, 5, "B_BFu32ll_I.v3");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_I(Test_B_BFu32ll_I, "B_BFu32ll_I", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_Ip()
{
  {
    init_simple_test("B_BFu32ll_Ip");
    static B_BFu32ll_Ip lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(B_BFu32ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_Ip)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_Ip");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_Ip");
    check_field_offset(lv, v3, 5, "B_BFu32ll_Ip.v3");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_Ip(Test_B_BFu32ll_Ip, "B_BFu32ll_Ip", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_L()
{
  {
    init_simple_test("B_BFu32ll_L");
    static B_BFu32ll_L lv;
    check2(sizeof(lv), 13, "sizeof(B_BFu32ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_L)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_L");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_L");
    check_field_offset(lv, v3, 5, "B_BFu32ll_L.v3");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_L(Test_B_BFu32ll_L, "B_BFu32ll_L", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_S()
{
  {
    init_simple_test("B_BFu32ll_S");
    static B_BFu32ll_S lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu32ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_S)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_S");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_S");
    check_field_offset(lv, v3, 5, "B_BFu32ll_S.v3");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_S(Test_B_BFu32ll_S, "B_BFu32ll_S", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_Uc()
{
  {
    init_simple_test("B_BFu32ll_Uc");
    static B_BFu32ll_Uc lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu32ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_Uc)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_Uc");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_Uc");
    check_field_offset(lv, v3, 5, "B_BFu32ll_Uc.v3");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_Uc(Test_B_BFu32ll_Uc, "B_BFu32ll_Uc", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_Ui()
{
  {
    init_simple_test("B_BFu32ll_Ui");
    static B_BFu32ll_Ui lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu32ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_Ui)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_Ui");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_Ui");
    check_field_offset(lv, v3, 5, "B_BFu32ll_Ui.v3");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_Ui(Test_B_BFu32ll_Ui, "B_BFu32ll_Ui", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_Ul()
{
  {
    init_simple_test("B_BFu32ll_Ul");
    static B_BFu32ll_Ul lv;
    check2(sizeof(lv), 13, "sizeof(B_BFu32ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_Ul)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_Ul");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_Ul");
    check_field_offset(lv, v3, 5, "B_BFu32ll_Ul.v3");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_Ul(Test_B_BFu32ll_Ul, "B_BFu32ll_Ul", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_Us()
{
  {
    init_simple_test("B_BFu32ll_Us");
    static B_BFu32ll_Us lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu32ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_Us)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_Us");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_Us");
    check_field_offset(lv, v3, 5, "B_BFu32ll_Us.v3");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_Us(Test_B_BFu32ll_Us, "B_BFu32ll_Us", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu32ll_Vp()
{
  {
    init_simple_test("B_BFu32ll_Vp");
    static B_BFu32ll_Vp lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(B_BFu32ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu32ll_Vp)");
    check_field_offset(lv, v1, 0, "B_BFu32ll_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "B_BFu32ll_Vp");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "B_BFu32ll_Vp");
    check_field_offset(lv, v3, 5, "B_BFu32ll_Vp.v3");
  }
}
static Arrange_To_Call_Me vB_BFu32ll_Vp(Test_B_BFu32ll_Vp, "B_BFu32ll_Vp", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33()
{
  {
    init_simple_test("B_BFu33");
    static B_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33)");
    check_field_offset(lv, v1, 0, "B_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33");
  }
}
static Arrange_To_Call_Me vB_BFu33(Test_B_BFu33, "B_BFu33", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_B()
{
  {
    init_simple_test("B_BFu33_B");
    static B_BFu33_B lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu33_B)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_B)");
    check_field_offset(lv, v1, 0, "B_BFu33_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_B");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_B");
    check_field_offset(lv, v3, 6, "B_BFu33_B.v3");
  }
}
static Arrange_To_Call_Me vB_BFu33_B(Test_B_BFu33_B, "B_BFu33_B", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_BFu15i()
{
  {
    init_simple_test("B_BFu33_BFu15i");
    static B_BFu33_BFu15i lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu33_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_BFu15i)");
    check_field_offset(lv, v1, 0, "B_BFu33_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_BFu15i");
    set_bf_and_test(lv, v3, 5, 1, 15, 1, "B_BFu33_BFu15i");
    set_bf_and_test(lv, v3, 5, 1, 15, hide_ull(1LL<<14), "B_BFu33_BFu15i");
  }
}
static Arrange_To_Call_Me vB_BFu33_BFu15i(Test_B_BFu33_BFu15i, "B_BFu33_BFu15i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_BFu15ll()
{
  {
    init_simple_test("B_BFu33_BFu15ll");
    static B_BFu33_BFu15ll lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu33_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_BFu15ll)");
    check_field_offset(lv, v1, 0, "B_BFu33_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_BFu15ll");
    set_bf_and_test(lv, v3, 5, 1, 15, 1, "B_BFu33_BFu15ll");
    set_bf_and_test(lv, v3, 5, 1, 15, hide_ull(1LL<<14), "B_BFu33_BFu15ll");
  }
}
static Arrange_To_Call_Me vB_BFu33_BFu15ll(Test_B_BFu33_BFu15ll, "B_BFu33_BFu15ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_BFu15s()
{
  {
    init_simple_test("B_BFu33_BFu15s");
    static B_BFu33_BFu15s lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu33_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_BFu15s)");
    check_field_offset(lv, v1, 0, "B_BFu33_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_BFu15s");
    set_bf_and_test(lv, v3, 5, 1, 15, 1, "B_BFu33_BFu15s");
    set_bf_and_test(lv, v3, 5, 1, 15, hide_ull(1LL<<14), "B_BFu33_BFu15s");
  }
}
static Arrange_To_Call_Me vB_BFu33_BFu15s(Test_B_BFu33_BFu15s, "B_BFu33_BFu15s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_BFu16i()
{
  {
    init_simple_test("B_BFu33_BFu16i");
    static B_BFu33_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(B_BFu33_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_BFu16i)");
    check_field_offset(lv, v1, 0, "B_BFu33_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_BFu16i");
    set_bf_and_test(lv, v3, 5, 1, 16, 1, "B_BFu33_BFu16i");
    set_bf_and_test(lv, v3, 5, 1, 16, hide_ull(1LL<<15), "B_BFu33_BFu16i");
  }
}
static Arrange_To_Call_Me vB_BFu33_BFu16i(Test_B_BFu33_BFu16i, "B_BFu33_BFu16i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_BFu16ll()
{
  {
    init_simple_test("B_BFu33_BFu16ll");
    static B_BFu33_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(B_BFu33_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_BFu16ll)");
    check_field_offset(lv, v1, 0, "B_BFu33_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_BFu16ll");
    set_bf_and_test(lv, v3, 5, 1, 16, 1, "B_BFu33_BFu16ll");
    set_bf_and_test(lv, v3, 5, 1, 16, hide_ull(1LL<<15), "B_BFu33_BFu16ll");
  }
}
static Arrange_To_Call_Me vB_BFu33_BFu16ll(Test_B_BFu33_BFu16ll, "B_BFu33_BFu16ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_BFu16s()
{
  {
    init_simple_test("B_BFu33_BFu16s");
    static B_BFu33_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(B_BFu33_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_BFu16s)");
    check_field_offset(lv, v1, 0, "B_BFu33_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_BFu16s");
    set_bf_and_test(lv, v3, 5, 1, 16, 1, "B_BFu33_BFu16s");
    set_bf_and_test(lv, v3, 5, 1, 16, hide_ull(1LL<<15), "B_BFu33_BFu16s");
  }
}
static Arrange_To_Call_Me vB_BFu33_BFu16s(Test_B_BFu33_BFu16s, "B_BFu33_BFu16s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_BFu17i()
{
  {
    init_simple_test("B_BFu33_BFu17i");
    static B_BFu33_BFu17i lv;
    check2(sizeof(lv), 8, "sizeof(B_BFu33_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_BFu17i)");
    check_field_offset(lv, v1, 0, "B_BFu33_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_BFu17i");
    set_bf_and_test(lv, v3, 5, 1, 17, 1, "B_BFu33_BFu17i");
    set_bf_and_test(lv, v3, 5, 1, 17, hide_ull(1LL<<16), "B_BFu33_BFu17i");
  }
}
static Arrange_To_Call_Me vB_BFu33_BFu17i(Test_B_BFu33_BFu17i, "B_BFu33_BFu17i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_BFu17ll()
{
  {
    init_simple_test("B_BFu33_BFu17ll");
    static B_BFu33_BFu17ll lv;
    check2(sizeof(lv), 8, "sizeof(B_BFu33_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_BFu17ll)");
    check_field_offset(lv, v1, 0, "B_BFu33_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_BFu17ll");
    set_bf_and_test(lv, v3, 5, 1, 17, 1, "B_BFu33_BFu17ll");
    set_bf_and_test(lv, v3, 5, 1, 17, hide_ull(1LL<<16), "B_BFu33_BFu17ll");
  }
}
static Arrange_To_Call_Me vB_BFu33_BFu17ll(Test_B_BFu33_BFu17ll, "B_BFu33_BFu17ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_BFu1c()
{
  {
    init_simple_test("B_BFu33_BFu1c");
    static B_BFu33_BFu1c lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu33_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_BFu1c)");
    check_field_offset(lv, v1, 0, "B_BFu33_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_BFu1c");
    set_bf_and_test(lv, v3, 5, 1, 1, 1, "B_BFu33_BFu1c");
  }
}
static Arrange_To_Call_Me vB_BFu33_BFu1c(Test_B_BFu33_BFu1c, "B_BFu33_BFu1c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_BFu1i()
{
  {
    init_simple_test("B_BFu33_BFu1i");
    static B_BFu33_BFu1i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu33_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_BFu1i)");
    check_field_offset(lv, v1, 0, "B_BFu33_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_BFu1i");
    set_bf_and_test(lv, v3, 5, 1, 1, 1, "B_BFu33_BFu1i");
  }
}
static Arrange_To_Call_Me vB_BFu33_BFu1i(Test_B_BFu33_BFu1i, "B_BFu33_BFu1i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_BFu1ll()
{
  {
    init_simple_test("B_BFu33_BFu1ll");
    static B_BFu33_BFu1ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu33_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_BFu1ll)");
    check_field_offset(lv, v1, 0, "B_BFu33_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_BFu1ll");
    set_bf_and_test(lv, v3, 5, 1, 1, 1, "B_BFu33_BFu1ll");
  }
}
static Arrange_To_Call_Me vB_BFu33_BFu1ll(Test_B_BFu33_BFu1ll, "B_BFu33_BFu1ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_BFu1s()
{
  {
    init_simple_test("B_BFu33_BFu1s");
    static B_BFu33_BFu1s lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu33_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_BFu1s)");
    check_field_offset(lv, v1, 0, "B_BFu33_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_BFu1s");
    set_bf_and_test(lv, v3, 5, 1, 1, 1, "B_BFu33_BFu1s");
  }
}
static Arrange_To_Call_Me vB_BFu33_BFu1s(Test_B_BFu33_BFu1s, "B_BFu33_BFu1s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_BFu31i()
{
  {
    init_simple_test("B_BFu33_BFu31i");
    static B_BFu33_BFu31i lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu33_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_BFu31i)");
    check_field_offset(lv, v1, 0, "B_BFu33_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_BFu31i");
    set_bf_and_test(lv, v3, 5, 1, 31, 1, "B_BFu33_BFu31i");
    set_bf_and_test(lv, v3, 5, 1, 31, hide_ull(1LL<<30), "B_BFu33_BFu31i");
  }
}
static Arrange_To_Call_Me vB_BFu33_BFu31i(Test_B_BFu33_BFu31i, "B_BFu33_BFu31i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_BFu31ll()
{
  {
    init_simple_test("B_BFu33_BFu31ll");
    static B_BFu33_BFu31ll lv;
    check2(sizeof(lv), 9, "sizeof(B_BFu33_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_BFu31ll)");
    check_field_offset(lv, v1, 0, "B_BFu33_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_BFu31ll");
    set_bf_and_test(lv, v3, 5, 1, 31, 1, "B_BFu33_BFu31ll");
    set_bf_and_test(lv, v3, 5, 1, 31, hide_ull(1LL<<30), "B_BFu33_BFu31ll");
  }
}
static Arrange_To_Call_Me vB_BFu33_BFu31ll(Test_B_BFu33_BFu31ll, "B_BFu33_BFu31ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_BFu32i()
{
  {
    init_simple_test("B_BFu33_BFu32i");
    static B_BFu33_BFu32i lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu33_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_BFu32i)");
    check_field_offset(lv, v1, 0, "B_BFu33_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_BFu32i");
    set_bf_and_test(lv, v3, 5, 1, 32, 1, "B_BFu33_BFu32i");
    set_bf_and_test(lv, v3, 5, 1, 32, hide_ull(1LL<<31), "B_BFu33_BFu32i");
  }
}
static Arrange_To_Call_Me vB_BFu33_BFu32i(Test_B_BFu33_BFu32i, "B_BFu33_BFu32i", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_BFu32ll()
{
  {
    init_simple_test("B_BFu33_BFu32ll");
    static B_BFu33_BFu32ll lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu33_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_BFu32ll)");
    check_field_offset(lv, v1, 0, "B_BFu33_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_BFu32ll");
    set_bf_and_test(lv, v3, 5, 1, 32, 1, "B_BFu33_BFu32ll");
    set_bf_and_test(lv, v3, 5, 1, 32, hide_ull(1LL<<31), "B_BFu33_BFu32ll");
  }
}
static Arrange_To_Call_Me vB_BFu33_BFu32ll(Test_B_BFu33_BFu32ll, "B_BFu33_BFu32ll", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_BFu33()
{
  {
    init_simple_test("B_BFu33_BFu33");
    static B_BFu33_BFu33 lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu33_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_BFu33)");
    check_field_offset(lv, v1, 0, "B_BFu33_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_BFu33");
    set_bf_and_test(lv, v3, 5, 1, 33, 1, "B_BFu33_BFu33");
    set_bf_and_test(lv, v3, 5, 1, 33, hide_ull(1LL<<32), "B_BFu33_BFu33");
  }
}
static Arrange_To_Call_Me vB_BFu33_BFu33(Test_B_BFu33_BFu33, "B_BFu33_BFu33", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_BFu7c()
{
  {
    init_simple_test("B_BFu33_BFu7c");
    static B_BFu33_BFu7c lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu33_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_BFu7c)");
    check_field_offset(lv, v1, 0, "B_BFu33_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_BFu7c");
    set_bf_and_test(lv, v3, 5, 1, 7, 1, "B_BFu33_BFu7c");
    set_bf_and_test(lv, v3, 5, 1, 7, hide_ull(1LL<<6), "B_BFu33_BFu7c");
  }
}
static Arrange_To_Call_Me vB_BFu33_BFu7c(Test_B_BFu33_BFu7c, "B_BFu33_BFu7c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_BFu7i()
{
  {
    init_simple_test("B_BFu33_BFu7i");
    static B_BFu33_BFu7i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu33_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_BFu7i)");
    check_field_offset(lv, v1, 0, "B_BFu33_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_BFu7i");
    set_bf_and_test(lv, v3, 5, 1, 7, 1, "B_BFu33_BFu7i");
    set_bf_and_test(lv, v3, 5, 1, 7, hide_ull(1LL<<6), "B_BFu33_BFu7i");
  }
}
static Arrange_To_Call_Me vB_BFu33_BFu7i(Test_B_BFu33_BFu7i, "B_BFu33_BFu7i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_BFu7ll()
{
  {
    init_simple_test("B_BFu33_BFu7ll");
    static B_BFu33_BFu7ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu33_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_BFu7ll)");
    check_field_offset(lv, v1, 0, "B_BFu33_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_BFu7ll");
    set_bf_and_test(lv, v3, 5, 1, 7, 1, "B_BFu33_BFu7ll");
    set_bf_and_test(lv, v3, 5, 1, 7, hide_ull(1LL<<6), "B_BFu33_BFu7ll");
  }
}
static Arrange_To_Call_Me vB_BFu33_BFu7ll(Test_B_BFu33_BFu7ll, "B_BFu33_BFu7ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_BFu7s()
{
  {
    init_simple_test("B_BFu33_BFu7s");
    static B_BFu33_BFu7s lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu33_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_BFu7s)");
    check_field_offset(lv, v1, 0, "B_BFu33_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_BFu7s");
    set_bf_and_test(lv, v3, 5, 1, 7, 1, "B_BFu33_BFu7s");
    set_bf_and_test(lv, v3, 5, 1, 7, hide_ull(1LL<<6), "B_BFu33_BFu7s");
  }
}
static Arrange_To_Call_Me vB_BFu33_BFu7s(Test_B_BFu33_BFu7s, "B_BFu33_BFu7s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_BFu8c()
{
  {
    init_simple_test("B_BFu33_BFu8c");
    static B_BFu33_BFu8c lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu33_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_BFu8c)");
    check_field_offset(lv, v1, 0, "B_BFu33_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_BFu8c");
    set_bf_and_test(lv, v3, 5, 1, 8, 1, "B_BFu33_BFu8c");
    set_bf_and_test(lv, v3, 5, 1, 8, hide_ull(1LL<<7), "B_BFu33_BFu8c");
  }
}
static Arrange_To_Call_Me vB_BFu33_BFu8c(Test_B_BFu33_BFu8c, "B_BFu33_BFu8c", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_BFu8i()
{
  {
    init_simple_test("B_BFu33_BFu8i");
    static B_BFu33_BFu8i lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu33_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_BFu8i)");
    check_field_offset(lv, v1, 0, "B_BFu33_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_BFu8i");
    set_bf_and_test(lv, v3, 5, 1, 8, 1, "B_BFu33_BFu8i");
    set_bf_and_test(lv, v3, 5, 1, 8, hide_ull(1LL<<7), "B_BFu33_BFu8i");
  }
}
static Arrange_To_Call_Me vB_BFu33_BFu8i(Test_B_BFu33_BFu8i, "B_BFu33_BFu8i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_BFu8ll()
{
  {
    init_simple_test("B_BFu33_BFu8ll");
    static B_BFu33_BFu8ll lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu33_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_BFu8ll)");
    check_field_offset(lv, v1, 0, "B_BFu33_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_BFu8ll");
    set_bf_and_test(lv, v3, 5, 1, 8, 1, "B_BFu33_BFu8ll");
    set_bf_and_test(lv, v3, 5, 1, 8, hide_ull(1LL<<7), "B_BFu33_BFu8ll");
  }
}
static Arrange_To_Call_Me vB_BFu33_BFu8ll(Test_B_BFu33_BFu8ll, "B_BFu33_BFu8ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_BFu8s()
{
  {
    init_simple_test("B_BFu33_BFu8s");
    static B_BFu33_BFu8s lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu33_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_BFu8s)");
    check_field_offset(lv, v1, 0, "B_BFu33_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_BFu8s");
    set_bf_and_test(lv, v3, 5, 1, 8, 1, "B_BFu33_BFu8s");
    set_bf_and_test(lv, v3, 5, 1, 8, hide_ull(1LL<<7), "B_BFu33_BFu8s");
  }
}
static Arrange_To_Call_Me vB_BFu33_BFu8s(Test_B_BFu33_BFu8s, "B_BFu33_BFu8s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_BFu9i()
{
  {
    init_simple_test("B_BFu33_BFu9i");
    static B_BFu33_BFu9i lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu33_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_BFu9i)");
    check_field_offset(lv, v1, 0, "B_BFu33_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_BFu9i");
    set_bf_and_test(lv, v3, 5, 1, 9, 1, "B_BFu33_BFu9i");
    set_bf_and_test(lv, v3, 5, 1, 9, hide_ull(1LL<<8), "B_BFu33_BFu9i");
  }
}
static Arrange_To_Call_Me vB_BFu33_BFu9i(Test_B_BFu33_BFu9i, "B_BFu33_BFu9i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_BFu9ll()
{
  {
    init_simple_test("B_BFu33_BFu9ll");
    static B_BFu33_BFu9ll lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu33_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_BFu9ll)");
    check_field_offset(lv, v1, 0, "B_BFu33_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_BFu9ll");
    set_bf_and_test(lv, v3, 5, 1, 9, 1, "B_BFu33_BFu9ll");
    set_bf_and_test(lv, v3, 5, 1, 9, hide_ull(1LL<<8), "B_BFu33_BFu9ll");
  }
}
static Arrange_To_Call_Me vB_BFu33_BFu9ll(Test_B_BFu33_BFu9ll, "B_BFu33_BFu9ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_BFu9s()
{
  {
    init_simple_test("B_BFu33_BFu9s");
    static B_BFu33_BFu9s lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu33_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_BFu9s)");
    check_field_offset(lv, v1, 0, "B_BFu33_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_BFu9s");
    set_bf_and_test(lv, v3, 5, 1, 9, 1, "B_BFu33_BFu9s");
    set_bf_and_test(lv, v3, 5, 1, 9, hide_ull(1LL<<8), "B_BFu33_BFu9s");
  }
}
static Arrange_To_Call_Me vB_BFu33_BFu9s(Test_B_BFu33_BFu9s, "B_BFu33_BFu9s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_C()
{
  {
    init_simple_test("B_BFu33_C");
    static B_BFu33_C lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu33_C)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_C)");
    check_field_offset(lv, v1, 0, "B_BFu33_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_C");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_C");
    check_field_offset(lv, v3, 6, "B_BFu33_C.v3");
  }
}
static Arrange_To_Call_Me vB_BFu33_C(Test_B_BFu33_C, "B_BFu33_C", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_D()
{
  {
    init_simple_test("B_BFu33_D");
    static B_BFu33_D lv;
    check2(sizeof(lv), 14, "sizeof(B_BFu33_D)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_D)");
    check_field_offset(lv, v1, 0, "B_BFu33_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_D");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_D");
    check_field_offset(lv, v3, 6, "B_BFu33_D.v3");
  }
}
static Arrange_To_Call_Me vB_BFu33_D(Test_B_BFu33_D, "B_BFu33_D", 14);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_F()
{
  {
    init_simple_test("B_BFu33_F");
    static B_BFu33_F lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu33_F)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_F)");
    check_field_offset(lv, v1, 0, "B_BFu33_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_F");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_F");
    check_field_offset(lv, v3, 6, "B_BFu33_F.v3");
  }
}
static Arrange_To_Call_Me vB_BFu33_F(Test_B_BFu33_F, "B_BFu33_F", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_I()
{
  {
    init_simple_test("B_BFu33_I");
    static B_BFu33_I lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu33_I)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_I)");
    check_field_offset(lv, v1, 0, "B_BFu33_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_I");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_I");
    check_field_offset(lv, v3, 6, "B_BFu33_I.v3");
  }
}
static Arrange_To_Call_Me vB_BFu33_I(Test_B_BFu33_I, "B_BFu33_I", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_Ip()
{
  {
    init_simple_test("B_BFu33_Ip");
    static B_BFu33_Ip lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(B_BFu33_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_Ip)");
    check_field_offset(lv, v1, 0, "B_BFu33_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_Ip");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_Ip");
    check_field_offset(lv, v3, 6, "B_BFu33_Ip.v3");
  }
}
static Arrange_To_Call_Me vB_BFu33_Ip(Test_B_BFu33_Ip, "B_BFu33_Ip", ABISELECT(14,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_L()
{
  {
    init_simple_test("B_BFu33_L");
    static B_BFu33_L lv;
    check2(sizeof(lv), 14, "sizeof(B_BFu33_L)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_L)");
    check_field_offset(lv, v1, 0, "B_BFu33_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_L");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_L");
    check_field_offset(lv, v3, 6, "B_BFu33_L.v3");
  }
}
static Arrange_To_Call_Me vB_BFu33_L(Test_B_BFu33_L, "B_BFu33_L", 14);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_S()
{
  {
    init_simple_test("B_BFu33_S");
    static B_BFu33_S lv;
    check2(sizeof(lv), 8, "sizeof(B_BFu33_S)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_S)");
    check_field_offset(lv, v1, 0, "B_BFu33_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_S");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_S");
    check_field_offset(lv, v3, 6, "B_BFu33_S.v3");
  }
}
static Arrange_To_Call_Me vB_BFu33_S(Test_B_BFu33_S, "B_BFu33_S", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_Uc()
{
  {
    init_simple_test("B_BFu33_Uc");
    static B_BFu33_Uc lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu33_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_Uc)");
    check_field_offset(lv, v1, 0, "B_BFu33_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_Uc");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_Uc");
    check_field_offset(lv, v3, 6, "B_BFu33_Uc.v3");
  }
}
static Arrange_To_Call_Me vB_BFu33_Uc(Test_B_BFu33_Uc, "B_BFu33_Uc", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_Ui()
{
  {
    init_simple_test("B_BFu33_Ui");
    static B_BFu33_Ui lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu33_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_Ui)");
    check_field_offset(lv, v1, 0, "B_BFu33_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_Ui");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_Ui");
    check_field_offset(lv, v3, 6, "B_BFu33_Ui.v3");
  }
}
static Arrange_To_Call_Me vB_BFu33_Ui(Test_B_BFu33_Ui, "B_BFu33_Ui", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_Ul()
{
  {
    init_simple_test("B_BFu33_Ul");
    static B_BFu33_Ul lv;
    check2(sizeof(lv), 14, "sizeof(B_BFu33_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_Ul)");
    check_field_offset(lv, v1, 0, "B_BFu33_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_Ul");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_Ul");
    check_field_offset(lv, v3, 6, "B_BFu33_Ul.v3");
  }
}
static Arrange_To_Call_Me vB_BFu33_Ul(Test_B_BFu33_Ul, "B_BFu33_Ul", 14);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_Us()
{
  {
    init_simple_test("B_BFu33_Us");
    static B_BFu33_Us lv;
    check2(sizeof(lv), 8, "sizeof(B_BFu33_Us)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_Us)");
    check_field_offset(lv, v1, 0, "B_BFu33_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_Us");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_Us");
    check_field_offset(lv, v3, 6, "B_BFu33_Us.v3");
  }
}
static Arrange_To_Call_Me vB_BFu33_Us(Test_B_BFu33_Us, "B_BFu33_Us", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu33_Vp()
{
  {
    init_simple_test("B_BFu33_Vp");
    static B_BFu33_Vp lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(B_BFu33_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu33_Vp)");
    check_field_offset(lv, v1, 0, "B_BFu33_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "B_BFu33_Vp");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "B_BFu33_Vp");
    check_field_offset(lv, v3, 6, "B_BFu33_Vp.v3");
  }
}
static Arrange_To_Call_Me vB_BFu33_Vp(Test_B_BFu33_Vp, "B_BFu33_Vp", ABISELECT(14,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c()
{
  {
    init_simple_test("B_BFu7c");
    static B_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c)");
    check_field_offset(lv, v1, 0, "B_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c");
  }
}
static Arrange_To_Call_Me vB_BFu7c(Test_B_BFu7c, "B_BFu7c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_B()
{
  {
    init_simple_test("B_BFu7c_B");
    static B_BFu7c_B lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7c_B)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_B)");
    check_field_offset(lv, v1, 0, "B_BFu7c_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_B");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_B");
    check_field_offset(lv, v3, 2, "B_BFu7c_B.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7c_B(Test_B_BFu7c_B, "B_BFu7c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_BFu15i()
{
  {
    init_simple_test("B_BFu7c_BFu15i");
    static B_BFu7c_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_BFu15i)");
    check_field_offset(lv, v1, 0, "B_BFu7c_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_BFu15i");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "B_BFu7c_BFu15i");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "B_BFu7c_BFu15i");
  }
}
static Arrange_To_Call_Me vB_BFu7c_BFu15i(Test_B_BFu7c_BFu15i, "B_BFu7c_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_BFu15ll()
{
  {
    init_simple_test("B_BFu7c_BFu15ll");
    static B_BFu7c_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_BFu15ll)");
    check_field_offset(lv, v1, 0, "B_BFu7c_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_BFu15ll");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "B_BFu7c_BFu15ll");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "B_BFu7c_BFu15ll");
  }
}
static Arrange_To_Call_Me vB_BFu7c_BFu15ll(Test_B_BFu7c_BFu15ll, "B_BFu7c_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_BFu15s()
{
  {
    init_simple_test("B_BFu7c_BFu15s");
    static B_BFu7c_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_BFu15s)");
    check_field_offset(lv, v1, 0, "B_BFu7c_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_BFu15s");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "B_BFu7c_BFu15s");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "B_BFu7c_BFu15s");
  }
}
static Arrange_To_Call_Me vB_BFu7c_BFu15s(Test_B_BFu7c_BFu15s, "B_BFu7c_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_BFu16i()
{
  {
    init_simple_test("B_BFu7c_BFu16i");
    static B_BFu7c_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_BFu16i)");
    check_field_offset(lv, v1, 0, "B_BFu7c_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_BFu16i");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "B_BFu7c_BFu16i");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "B_BFu7c_BFu16i");
  }
}
static Arrange_To_Call_Me vB_BFu7c_BFu16i(Test_B_BFu7c_BFu16i, "B_BFu7c_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_BFu16ll()
{
  {
    init_simple_test("B_BFu7c_BFu16ll");
    static B_BFu7c_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_BFu16ll)");
    check_field_offset(lv, v1, 0, "B_BFu7c_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_BFu16ll");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "B_BFu7c_BFu16ll");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "B_BFu7c_BFu16ll");
  }
}
static Arrange_To_Call_Me vB_BFu7c_BFu16ll(Test_B_BFu7c_BFu16ll, "B_BFu7c_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_BFu16s()
{
  {
    init_simple_test("B_BFu7c_BFu16s");
    static B_BFu7c_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_BFu16s)");
    check_field_offset(lv, v1, 0, "B_BFu7c_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_BFu16s");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "B_BFu7c_BFu16s");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "B_BFu7c_BFu16s");
  }
}
static Arrange_To_Call_Me vB_BFu7c_BFu16s(Test_B_BFu7c_BFu16s, "B_BFu7c_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_BFu17i()
{
  {
    init_simple_test("B_BFu7c_BFu17i");
    static B_BFu7c_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_BFu17i)");
    check_field_offset(lv, v1, 0, "B_BFu7c_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_BFu17i");
    set_bf_and_test(lv, v3, 1, 7, 17, 1, "B_BFu7c_BFu17i");
    set_bf_and_test(lv, v3, 1, 7, 17, hide_ull(1LL<<16), "B_BFu7c_BFu17i");
  }
}
static Arrange_To_Call_Me vB_BFu7c_BFu17i(Test_B_BFu7c_BFu17i, "B_BFu7c_BFu17i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_BFu17ll()
{
  {
    init_simple_test("B_BFu7c_BFu17ll");
    static B_BFu7c_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_BFu17ll)");
    check_field_offset(lv, v1, 0, "B_BFu7c_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_BFu17ll");
    set_bf_and_test(lv, v3, 1, 7, 17, 1, "B_BFu7c_BFu17ll");
    set_bf_and_test(lv, v3, 1, 7, 17, hide_ull(1LL<<16), "B_BFu7c_BFu17ll");
  }
}
static Arrange_To_Call_Me vB_BFu7c_BFu17ll(Test_B_BFu7c_BFu17ll, "B_BFu7c_BFu17ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_BFu1c()
{
  {
    init_simple_test("B_BFu7c_BFu1c");
    static B_BFu7c_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu7c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_BFu1c)");
    check_field_offset(lv, v1, 0, "B_BFu7c_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_BFu1c");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "B_BFu7c_BFu1c");
  }
}
static Arrange_To_Call_Me vB_BFu7c_BFu1c(Test_B_BFu7c_BFu1c, "B_BFu7c_BFu1c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_BFu1i()
{
  {
    init_simple_test("B_BFu7c_BFu1i");
    static B_BFu7c_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu7c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_BFu1i)");
    check_field_offset(lv, v1, 0, "B_BFu7c_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_BFu1i");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "B_BFu7c_BFu1i");
  }
}
static Arrange_To_Call_Me vB_BFu7c_BFu1i(Test_B_BFu7c_BFu1i, "B_BFu7c_BFu1i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_BFu1ll()
{
  {
    init_simple_test("B_BFu7c_BFu1ll");
    static B_BFu7c_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu7c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_BFu1ll)");
    check_field_offset(lv, v1, 0, "B_BFu7c_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_BFu1ll");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "B_BFu7c_BFu1ll");
  }
}
static Arrange_To_Call_Me vB_BFu7c_BFu1ll(Test_B_BFu7c_BFu1ll, "B_BFu7c_BFu1ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_BFu1s()
{
  {
    init_simple_test("B_BFu7c_BFu1s");
    static B_BFu7c_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu7c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_BFu1s)");
    check_field_offset(lv, v1, 0, "B_BFu7c_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_BFu1s");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "B_BFu7c_BFu1s");
  }
}
static Arrange_To_Call_Me vB_BFu7c_BFu1s(Test_B_BFu7c_BFu1s, "B_BFu7c_BFu1s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_BFu31i()
{
  {
    init_simple_test("B_BFu7c_BFu31i");
    static B_BFu7c_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_BFu31i)");
    check_field_offset(lv, v1, 0, "B_BFu7c_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_BFu31i");
    set_bf_and_test(lv, v3, 1, 7, 31, 1, "B_BFu7c_BFu31i");
    set_bf_and_test(lv, v3, 1, 7, 31, hide_ull(1LL<<30), "B_BFu7c_BFu31i");
  }
}
static Arrange_To_Call_Me vB_BFu7c_BFu31i(Test_B_BFu7c_BFu31i, "B_BFu7c_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_BFu31ll()
{
  {
    init_simple_test("B_BFu7c_BFu31ll");
    static B_BFu7c_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_BFu31ll)");
    check_field_offset(lv, v1, 0, "B_BFu7c_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_BFu31ll");
    set_bf_and_test(lv, v3, 1, 7, 31, 1, "B_BFu7c_BFu31ll");
    set_bf_and_test(lv, v3, 1, 7, 31, hide_ull(1LL<<30), "B_BFu7c_BFu31ll");
  }
}
static Arrange_To_Call_Me vB_BFu7c_BFu31ll(Test_B_BFu7c_BFu31ll, "B_BFu7c_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_BFu32i()
{
  {
    init_simple_test("B_BFu7c_BFu32i");
    static B_BFu7c_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_BFu32i)");
    check_field_offset(lv, v1, 0, "B_BFu7c_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_BFu32i");
    set_bf_and_test(lv, v3, 1, 7, 32, 1, "B_BFu7c_BFu32i");
    set_bf_and_test(lv, v3, 1, 7, 32, hide_ull(1LL<<31), "B_BFu7c_BFu32i");
  }
}
static Arrange_To_Call_Me vB_BFu7c_BFu32i(Test_B_BFu7c_BFu32i, "B_BFu7c_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_BFu32ll()
{
  {
    init_simple_test("B_BFu7c_BFu32ll");
    static B_BFu7c_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_BFu32ll)");
    check_field_offset(lv, v1, 0, "B_BFu7c_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_BFu32ll");
    set_bf_and_test(lv, v3, 1, 7, 32, 1, "B_BFu7c_BFu32ll");
    set_bf_and_test(lv, v3, 1, 7, 32, hide_ull(1LL<<31), "B_BFu7c_BFu32ll");
  }
}
static Arrange_To_Call_Me vB_BFu7c_BFu32ll(Test_B_BFu7c_BFu32ll, "B_BFu7c_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_BFu33()
{
  {
    init_simple_test("B_BFu7c_BFu33");
    static B_BFu7c_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_BFu33)");
    check_field_offset(lv, v1, 0, "B_BFu7c_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_BFu33");
    set_bf_and_test(lv, v3, 1, 7, 33, 1, "B_BFu7c_BFu33");
    set_bf_and_test(lv, v3, 1, 7, 33, hide_ull(1LL<<32), "B_BFu7c_BFu33");
  }
}
static Arrange_To_Call_Me vB_BFu7c_BFu33(Test_B_BFu7c_BFu33, "B_BFu7c_BFu33", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_BFu7c()
{
  {
    init_simple_test("B_BFu7c_BFu7c");
    static B_BFu7c_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_BFu7c)");
    check_field_offset(lv, v1, 0, "B_BFu7c_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_BFu7c");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "B_BFu7c_BFu7c");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "B_BFu7c_BFu7c");
  }
}
static Arrange_To_Call_Me vB_BFu7c_BFu7c(Test_B_BFu7c_BFu7c, "B_BFu7c_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_BFu7i()
{
  {
    init_simple_test("B_BFu7c_BFu7i");
    static B_BFu7c_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_BFu7i)");
    check_field_offset(lv, v1, 0, "B_BFu7c_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_BFu7i");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "B_BFu7c_BFu7i");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "B_BFu7c_BFu7i");
  }
}
static Arrange_To_Call_Me vB_BFu7c_BFu7i(Test_B_BFu7c_BFu7i, "B_BFu7c_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_BFu7ll()
{
  {
    init_simple_test("B_BFu7c_BFu7ll");
    static B_BFu7c_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_BFu7ll)");
    check_field_offset(lv, v1, 0, "B_BFu7c_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_BFu7ll");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "B_BFu7c_BFu7ll");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "B_BFu7c_BFu7ll");
  }
}
static Arrange_To_Call_Me vB_BFu7c_BFu7ll(Test_B_BFu7c_BFu7ll, "B_BFu7c_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_BFu7s()
{
  {
    init_simple_test("B_BFu7c_BFu7s");
    static B_BFu7c_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_BFu7s)");
    check_field_offset(lv, v1, 0, "B_BFu7c_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_BFu7s");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "B_BFu7c_BFu7s");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "B_BFu7c_BFu7s");
  }
}
static Arrange_To_Call_Me vB_BFu7c_BFu7s(Test_B_BFu7c_BFu7s, "B_BFu7c_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_BFu8c()
{
  {
    init_simple_test("B_BFu7c_BFu8c");
    static B_BFu7c_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_BFu8c)");
    check_field_offset(lv, v1, 0, "B_BFu7c_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_BFu8c");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "B_BFu7c_BFu8c");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "B_BFu7c_BFu8c");
  }
}
static Arrange_To_Call_Me vB_BFu7c_BFu8c(Test_B_BFu7c_BFu8c, "B_BFu7c_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_BFu8i()
{
  {
    init_simple_test("B_BFu7c_BFu8i");
    static B_BFu7c_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_BFu8i)");
    check_field_offset(lv, v1, 0, "B_BFu7c_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_BFu8i");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "B_BFu7c_BFu8i");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "B_BFu7c_BFu8i");
  }
}
static Arrange_To_Call_Me vB_BFu7c_BFu8i(Test_B_BFu7c_BFu8i, "B_BFu7c_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_BFu8ll()
{
  {
    init_simple_test("B_BFu7c_BFu8ll");
    static B_BFu7c_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_BFu8ll)");
    check_field_offset(lv, v1, 0, "B_BFu7c_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_BFu8ll");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "B_BFu7c_BFu8ll");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "B_BFu7c_BFu8ll");
  }
}
static Arrange_To_Call_Me vB_BFu7c_BFu8ll(Test_B_BFu7c_BFu8ll, "B_BFu7c_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_BFu8s()
{
  {
    init_simple_test("B_BFu7c_BFu8s");
    static B_BFu7c_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_BFu8s)");
    check_field_offset(lv, v1, 0, "B_BFu7c_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_BFu8s");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "B_BFu7c_BFu8s");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "B_BFu7c_BFu8s");
  }
}
static Arrange_To_Call_Me vB_BFu7c_BFu8s(Test_B_BFu7c_BFu8s, "B_BFu7c_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_BFu9i()
{
  {
    init_simple_test("B_BFu7c_BFu9i");
    static B_BFu7c_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_BFu9i)");
    check_field_offset(lv, v1, 0, "B_BFu7c_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_BFu9i");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "B_BFu7c_BFu9i");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "B_BFu7c_BFu9i");
  }
}
static Arrange_To_Call_Me vB_BFu7c_BFu9i(Test_B_BFu7c_BFu9i, "B_BFu7c_BFu9i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_BFu9ll()
{
  {
    init_simple_test("B_BFu7c_BFu9ll");
    static B_BFu7c_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_BFu9ll)");
    check_field_offset(lv, v1, 0, "B_BFu7c_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_BFu9ll");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "B_BFu7c_BFu9ll");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "B_BFu7c_BFu9ll");
  }
}
static Arrange_To_Call_Me vB_BFu7c_BFu9ll(Test_B_BFu7c_BFu9ll, "B_BFu7c_BFu9ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_BFu9s()
{
  {
    init_simple_test("B_BFu7c_BFu9s");
    static B_BFu7c_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_BFu9s)");
    check_field_offset(lv, v1, 0, "B_BFu7c_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_BFu9s");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "B_BFu7c_BFu9s");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "B_BFu7c_BFu9s");
  }
}
static Arrange_To_Call_Me vB_BFu7c_BFu9s(Test_B_BFu7c_BFu9s, "B_BFu7c_BFu9s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_C()
{
  {
    init_simple_test("B_BFu7c_C");
    static B_BFu7c_C lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7c_C)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_C)");
    check_field_offset(lv, v1, 0, "B_BFu7c_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_C");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_C");
    check_field_offset(lv, v3, 2, "B_BFu7c_C.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7c_C(Test_B_BFu7c_C, "B_BFu7c_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_D()
{
  {
    init_simple_test("B_BFu7c_D");
    static B_BFu7c_D lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu7c_D)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_D)");
    check_field_offset(lv, v1, 0, "B_BFu7c_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_D");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_D");
    check_field_offset(lv, v3, 2, "B_BFu7c_D.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7c_D(Test_B_BFu7c_D, "B_BFu7c_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_F()
{
  {
    init_simple_test("B_BFu7c_F");
    static B_BFu7c_F lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7c_F)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_F)");
    check_field_offset(lv, v1, 0, "B_BFu7c_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_F");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_F");
    check_field_offset(lv, v3, 2, "B_BFu7c_F.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7c_F(Test_B_BFu7c_F, "B_BFu7c_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_I()
{
  {
    init_simple_test("B_BFu7c_I");
    static B_BFu7c_I lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7c_I)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_I)");
    check_field_offset(lv, v1, 0, "B_BFu7c_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_I");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_I");
    check_field_offset(lv, v3, 2, "B_BFu7c_I.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7c_I(Test_B_BFu7c_I, "B_BFu7c_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_Ip()
{
  {
    init_simple_test("B_BFu7c_Ip");
    static B_BFu7c_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(B_BFu7c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_Ip)");
    check_field_offset(lv, v1, 0, "B_BFu7c_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_Ip");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_Ip");
    check_field_offset(lv, v3, 2, "B_BFu7c_Ip.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7c_Ip(Test_B_BFu7c_Ip, "B_BFu7c_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_L()
{
  {
    init_simple_test("B_BFu7c_L");
    static B_BFu7c_L lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu7c_L)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_L)");
    check_field_offset(lv, v1, 0, "B_BFu7c_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_L");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_L");
    check_field_offset(lv, v3, 2, "B_BFu7c_L.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7c_L(Test_B_BFu7c_L, "B_BFu7c_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_S()
{
  {
    init_simple_test("B_BFu7c_S");
    static B_BFu7c_S lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7c_S)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_S)");
    check_field_offset(lv, v1, 0, "B_BFu7c_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_S");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_S");
    check_field_offset(lv, v3, 2, "B_BFu7c_S.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7c_S(Test_B_BFu7c_S, "B_BFu7c_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_Uc()
{
  {
    init_simple_test("B_BFu7c_Uc");
    static B_BFu7c_Uc lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_Uc)");
    check_field_offset(lv, v1, 0, "B_BFu7c_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_Uc");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_Uc");
    check_field_offset(lv, v3, 2, "B_BFu7c_Uc.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7c_Uc(Test_B_BFu7c_Uc, "B_BFu7c_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_Ui()
{
  {
    init_simple_test("B_BFu7c_Ui");
    static B_BFu7c_Ui lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_Ui)");
    check_field_offset(lv, v1, 0, "B_BFu7c_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_Ui");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_Ui");
    check_field_offset(lv, v3, 2, "B_BFu7c_Ui.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7c_Ui(Test_B_BFu7c_Ui, "B_BFu7c_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_Ul()
{
  {
    init_simple_test("B_BFu7c_Ul");
    static B_BFu7c_Ul lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu7c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_Ul)");
    check_field_offset(lv, v1, 0, "B_BFu7c_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_Ul");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_Ul");
    check_field_offset(lv, v3, 2, "B_BFu7c_Ul.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7c_Ul(Test_B_BFu7c_Ul, "B_BFu7c_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_Us()
{
  {
    init_simple_test("B_BFu7c_Us");
    static B_BFu7c_Us lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_Us)");
    check_field_offset(lv, v1, 0, "B_BFu7c_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_Us");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_Us");
    check_field_offset(lv, v3, 2, "B_BFu7c_Us.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7c_Us(Test_B_BFu7c_Us, "B_BFu7c_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7c_Vp()
{
  {
    init_simple_test("B_BFu7c_Vp");
    static B_BFu7c_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(B_BFu7c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7c_Vp)");
    check_field_offset(lv, v1, 0, "B_BFu7c_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7c_Vp");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7c_Vp");
    check_field_offset(lv, v3, 2, "B_BFu7c_Vp.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7c_Vp(Test_B_BFu7c_Vp, "B_BFu7c_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i()
{
  {
    init_simple_test("B_BFu7i");
    static B_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i)");
    check_field_offset(lv, v1, 0, "B_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i");
  }
}
static Arrange_To_Call_Me vB_BFu7i(Test_B_BFu7i, "B_BFu7i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_B()
{
  {
    init_simple_test("B_BFu7i_B");
    static B_BFu7i_B lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7i_B)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_B)");
    check_field_offset(lv, v1, 0, "B_BFu7i_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_B");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_B");
    check_field_offset(lv, v3, 2, "B_BFu7i_B.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7i_B(Test_B_BFu7i_B, "B_BFu7i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_BFu15i()
{
  {
    init_simple_test("B_BFu7i_BFu15i");
    static B_BFu7i_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_BFu15i)");
    check_field_offset(lv, v1, 0, "B_BFu7i_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_BFu15i");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "B_BFu7i_BFu15i");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "B_BFu7i_BFu15i");
  }
}
static Arrange_To_Call_Me vB_BFu7i_BFu15i(Test_B_BFu7i_BFu15i, "B_BFu7i_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_BFu15ll()
{
  {
    init_simple_test("B_BFu7i_BFu15ll");
    static B_BFu7i_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_BFu15ll)");
    check_field_offset(lv, v1, 0, "B_BFu7i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_BFu15ll");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "B_BFu7i_BFu15ll");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "B_BFu7i_BFu15ll");
  }
}
static Arrange_To_Call_Me vB_BFu7i_BFu15ll(Test_B_BFu7i_BFu15ll, "B_BFu7i_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_BFu15s()
{
  {
    init_simple_test("B_BFu7i_BFu15s");
    static B_BFu7i_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_BFu15s)");
    check_field_offset(lv, v1, 0, "B_BFu7i_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_BFu15s");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "B_BFu7i_BFu15s");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "B_BFu7i_BFu15s");
  }
}
static Arrange_To_Call_Me vB_BFu7i_BFu15s(Test_B_BFu7i_BFu15s, "B_BFu7i_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_BFu16i()
{
  {
    init_simple_test("B_BFu7i_BFu16i");
    static B_BFu7i_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_BFu16i)");
    check_field_offset(lv, v1, 0, "B_BFu7i_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_BFu16i");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "B_BFu7i_BFu16i");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "B_BFu7i_BFu16i");
  }
}
static Arrange_To_Call_Me vB_BFu7i_BFu16i(Test_B_BFu7i_BFu16i, "B_BFu7i_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_BFu16ll()
{
  {
    init_simple_test("B_BFu7i_BFu16ll");
    static B_BFu7i_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_BFu16ll)");
    check_field_offset(lv, v1, 0, "B_BFu7i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_BFu16ll");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "B_BFu7i_BFu16ll");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "B_BFu7i_BFu16ll");
  }
}
static Arrange_To_Call_Me vB_BFu7i_BFu16ll(Test_B_BFu7i_BFu16ll, "B_BFu7i_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_BFu16s()
{
  {
    init_simple_test("B_BFu7i_BFu16s");
    static B_BFu7i_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_BFu16s)");
    check_field_offset(lv, v1, 0, "B_BFu7i_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_BFu16s");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "B_BFu7i_BFu16s");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "B_BFu7i_BFu16s");
  }
}
static Arrange_To_Call_Me vB_BFu7i_BFu16s(Test_B_BFu7i_BFu16s, "B_BFu7i_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_BFu17i()
{
  {
    init_simple_test("B_BFu7i_BFu17i");
    static B_BFu7i_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_BFu17i)");
    check_field_offset(lv, v1, 0, "B_BFu7i_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_BFu17i");
    set_bf_and_test(lv, v3, 1, 7, 17, 1, "B_BFu7i_BFu17i");
    set_bf_and_test(lv, v3, 1, 7, 17, hide_ull(1LL<<16), "B_BFu7i_BFu17i");
  }
}
static Arrange_To_Call_Me vB_BFu7i_BFu17i(Test_B_BFu7i_BFu17i, "B_BFu7i_BFu17i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_BFu17ll()
{
  {
    init_simple_test("B_BFu7i_BFu17ll");
    static B_BFu7i_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_BFu17ll)");
    check_field_offset(lv, v1, 0, "B_BFu7i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_BFu17ll");
    set_bf_and_test(lv, v3, 1, 7, 17, 1, "B_BFu7i_BFu17ll");
    set_bf_and_test(lv, v3, 1, 7, 17, hide_ull(1LL<<16), "B_BFu7i_BFu17ll");
  }
}
static Arrange_To_Call_Me vB_BFu7i_BFu17ll(Test_B_BFu7i_BFu17ll, "B_BFu7i_BFu17ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_BFu1c()
{
  {
    init_simple_test("B_BFu7i_BFu1c");
    static B_BFu7i_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu7i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_BFu1c)");
    check_field_offset(lv, v1, 0, "B_BFu7i_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_BFu1c");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "B_BFu7i_BFu1c");
  }
}
static Arrange_To_Call_Me vB_BFu7i_BFu1c(Test_B_BFu7i_BFu1c, "B_BFu7i_BFu1c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_BFu1i()
{
  {
    init_simple_test("B_BFu7i_BFu1i");
    static B_BFu7i_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu7i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_BFu1i)");
    check_field_offset(lv, v1, 0, "B_BFu7i_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_BFu1i");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "B_BFu7i_BFu1i");
  }
}
static Arrange_To_Call_Me vB_BFu7i_BFu1i(Test_B_BFu7i_BFu1i, "B_BFu7i_BFu1i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_BFu1ll()
{
  {
    init_simple_test("B_BFu7i_BFu1ll");
    static B_BFu7i_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu7i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_BFu1ll)");
    check_field_offset(lv, v1, 0, "B_BFu7i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_BFu1ll");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "B_BFu7i_BFu1ll");
  }
}
static Arrange_To_Call_Me vB_BFu7i_BFu1ll(Test_B_BFu7i_BFu1ll, "B_BFu7i_BFu1ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_BFu1s()
{
  {
    init_simple_test("B_BFu7i_BFu1s");
    static B_BFu7i_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu7i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_BFu1s)");
    check_field_offset(lv, v1, 0, "B_BFu7i_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_BFu1s");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "B_BFu7i_BFu1s");
  }
}
static Arrange_To_Call_Me vB_BFu7i_BFu1s(Test_B_BFu7i_BFu1s, "B_BFu7i_BFu1s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_BFu31i()
{
  {
    init_simple_test("B_BFu7i_BFu31i");
    static B_BFu7i_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_BFu31i)");
    check_field_offset(lv, v1, 0, "B_BFu7i_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_BFu31i");
    set_bf_and_test(lv, v3, 1, 7, 31, 1, "B_BFu7i_BFu31i");
    set_bf_and_test(lv, v3, 1, 7, 31, hide_ull(1LL<<30), "B_BFu7i_BFu31i");
  }
}
static Arrange_To_Call_Me vB_BFu7i_BFu31i(Test_B_BFu7i_BFu31i, "B_BFu7i_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_BFu31ll()
{
  {
    init_simple_test("B_BFu7i_BFu31ll");
    static B_BFu7i_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_BFu31ll)");
    check_field_offset(lv, v1, 0, "B_BFu7i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_BFu31ll");
    set_bf_and_test(lv, v3, 1, 7, 31, 1, "B_BFu7i_BFu31ll");
    set_bf_and_test(lv, v3, 1, 7, 31, hide_ull(1LL<<30), "B_BFu7i_BFu31ll");
  }
}
static Arrange_To_Call_Me vB_BFu7i_BFu31ll(Test_B_BFu7i_BFu31ll, "B_BFu7i_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_BFu32i()
{
  {
    init_simple_test("B_BFu7i_BFu32i");
    static B_BFu7i_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_BFu32i)");
    check_field_offset(lv, v1, 0, "B_BFu7i_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_BFu32i");
    set_bf_and_test(lv, v3, 1, 7, 32, 1, "B_BFu7i_BFu32i");
    set_bf_and_test(lv, v3, 1, 7, 32, hide_ull(1LL<<31), "B_BFu7i_BFu32i");
  }
}
static Arrange_To_Call_Me vB_BFu7i_BFu32i(Test_B_BFu7i_BFu32i, "B_BFu7i_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_BFu32ll()
{
  {
    init_simple_test("B_BFu7i_BFu32ll");
    static B_BFu7i_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_BFu32ll)");
    check_field_offset(lv, v1, 0, "B_BFu7i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_BFu32ll");
    set_bf_and_test(lv, v3, 1, 7, 32, 1, "B_BFu7i_BFu32ll");
    set_bf_and_test(lv, v3, 1, 7, 32, hide_ull(1LL<<31), "B_BFu7i_BFu32ll");
  }
}
static Arrange_To_Call_Me vB_BFu7i_BFu32ll(Test_B_BFu7i_BFu32ll, "B_BFu7i_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_BFu33()
{
  {
    init_simple_test("B_BFu7i_BFu33");
    static B_BFu7i_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_BFu33)");
    check_field_offset(lv, v1, 0, "B_BFu7i_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_BFu33");
    set_bf_and_test(lv, v3, 1, 7, 33, 1, "B_BFu7i_BFu33");
    set_bf_and_test(lv, v3, 1, 7, 33, hide_ull(1LL<<32), "B_BFu7i_BFu33");
  }
}
static Arrange_To_Call_Me vB_BFu7i_BFu33(Test_B_BFu7i_BFu33, "B_BFu7i_BFu33", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_BFu7c()
{
  {
    init_simple_test("B_BFu7i_BFu7c");
    static B_BFu7i_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_BFu7c)");
    check_field_offset(lv, v1, 0, "B_BFu7i_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_BFu7c");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "B_BFu7i_BFu7c");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "B_BFu7i_BFu7c");
  }
}
static Arrange_To_Call_Me vB_BFu7i_BFu7c(Test_B_BFu7i_BFu7c, "B_BFu7i_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_BFu7i()
{
  {
    init_simple_test("B_BFu7i_BFu7i");
    static B_BFu7i_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_BFu7i)");
    check_field_offset(lv, v1, 0, "B_BFu7i_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_BFu7i");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "B_BFu7i_BFu7i");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "B_BFu7i_BFu7i");
  }
}
static Arrange_To_Call_Me vB_BFu7i_BFu7i(Test_B_BFu7i_BFu7i, "B_BFu7i_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_BFu7ll()
{
  {
    init_simple_test("B_BFu7i_BFu7ll");
    static B_BFu7i_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_BFu7ll)");
    check_field_offset(lv, v1, 0, "B_BFu7i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_BFu7ll");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "B_BFu7i_BFu7ll");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "B_BFu7i_BFu7ll");
  }
}
static Arrange_To_Call_Me vB_BFu7i_BFu7ll(Test_B_BFu7i_BFu7ll, "B_BFu7i_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_BFu7s()
{
  {
    init_simple_test("B_BFu7i_BFu7s");
    static B_BFu7i_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_BFu7s)");
    check_field_offset(lv, v1, 0, "B_BFu7i_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_BFu7s");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "B_BFu7i_BFu7s");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "B_BFu7i_BFu7s");
  }
}
static Arrange_To_Call_Me vB_BFu7i_BFu7s(Test_B_BFu7i_BFu7s, "B_BFu7i_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_BFu8c()
{
  {
    init_simple_test("B_BFu7i_BFu8c");
    static B_BFu7i_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_BFu8c)");
    check_field_offset(lv, v1, 0, "B_BFu7i_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_BFu8c");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "B_BFu7i_BFu8c");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "B_BFu7i_BFu8c");
  }
}
static Arrange_To_Call_Me vB_BFu7i_BFu8c(Test_B_BFu7i_BFu8c, "B_BFu7i_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_BFu8i()
{
  {
    init_simple_test("B_BFu7i_BFu8i");
    static B_BFu7i_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_BFu8i)");
    check_field_offset(lv, v1, 0, "B_BFu7i_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_BFu8i");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "B_BFu7i_BFu8i");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "B_BFu7i_BFu8i");
  }
}
static Arrange_To_Call_Me vB_BFu7i_BFu8i(Test_B_BFu7i_BFu8i, "B_BFu7i_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_BFu8ll()
{
  {
    init_simple_test("B_BFu7i_BFu8ll");
    static B_BFu7i_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_BFu8ll)");
    check_field_offset(lv, v1, 0, "B_BFu7i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_BFu8ll");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "B_BFu7i_BFu8ll");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "B_BFu7i_BFu8ll");
  }
}
static Arrange_To_Call_Me vB_BFu7i_BFu8ll(Test_B_BFu7i_BFu8ll, "B_BFu7i_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_BFu8s()
{
  {
    init_simple_test("B_BFu7i_BFu8s");
    static B_BFu7i_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_BFu8s)");
    check_field_offset(lv, v1, 0, "B_BFu7i_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_BFu8s");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "B_BFu7i_BFu8s");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "B_BFu7i_BFu8s");
  }
}
static Arrange_To_Call_Me vB_BFu7i_BFu8s(Test_B_BFu7i_BFu8s, "B_BFu7i_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_BFu9i()
{
  {
    init_simple_test("B_BFu7i_BFu9i");
    static B_BFu7i_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_BFu9i)");
    check_field_offset(lv, v1, 0, "B_BFu7i_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_BFu9i");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "B_BFu7i_BFu9i");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "B_BFu7i_BFu9i");
  }
}
static Arrange_To_Call_Me vB_BFu7i_BFu9i(Test_B_BFu7i_BFu9i, "B_BFu7i_BFu9i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_BFu9ll()
{
  {
    init_simple_test("B_BFu7i_BFu9ll");
    static B_BFu7i_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_BFu9ll)");
    check_field_offset(lv, v1, 0, "B_BFu7i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_BFu9ll");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "B_BFu7i_BFu9ll");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "B_BFu7i_BFu9ll");
  }
}
static Arrange_To_Call_Me vB_BFu7i_BFu9ll(Test_B_BFu7i_BFu9ll, "B_BFu7i_BFu9ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_BFu9s()
{
  {
    init_simple_test("B_BFu7i_BFu9s");
    static B_BFu7i_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_BFu9s)");
    check_field_offset(lv, v1, 0, "B_BFu7i_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_BFu9s");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "B_BFu7i_BFu9s");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "B_BFu7i_BFu9s");
  }
}
static Arrange_To_Call_Me vB_BFu7i_BFu9s(Test_B_BFu7i_BFu9s, "B_BFu7i_BFu9s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_C()
{
  {
    init_simple_test("B_BFu7i_C");
    static B_BFu7i_C lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7i_C)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_C)");
    check_field_offset(lv, v1, 0, "B_BFu7i_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_C");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_C");
    check_field_offset(lv, v3, 2, "B_BFu7i_C.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7i_C(Test_B_BFu7i_C, "B_BFu7i_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_D()
{
  {
    init_simple_test("B_BFu7i_D");
    static B_BFu7i_D lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu7i_D)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_D)");
    check_field_offset(lv, v1, 0, "B_BFu7i_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_D");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_D");
    check_field_offset(lv, v3, 2, "B_BFu7i_D.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7i_D(Test_B_BFu7i_D, "B_BFu7i_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_F()
{
  {
    init_simple_test("B_BFu7i_F");
    static B_BFu7i_F lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7i_F)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_F)");
    check_field_offset(lv, v1, 0, "B_BFu7i_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_F");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_F");
    check_field_offset(lv, v3, 2, "B_BFu7i_F.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7i_F(Test_B_BFu7i_F, "B_BFu7i_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_I()
{
  {
    init_simple_test("B_BFu7i_I");
    static B_BFu7i_I lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7i_I)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_I)");
    check_field_offset(lv, v1, 0, "B_BFu7i_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_I");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_I");
    check_field_offset(lv, v3, 2, "B_BFu7i_I.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7i_I(Test_B_BFu7i_I, "B_BFu7i_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_Ip()
{
  {
    init_simple_test("B_BFu7i_Ip");
    static B_BFu7i_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(B_BFu7i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_Ip)");
    check_field_offset(lv, v1, 0, "B_BFu7i_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_Ip");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_Ip");
    check_field_offset(lv, v3, 2, "B_BFu7i_Ip.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7i_Ip(Test_B_BFu7i_Ip, "B_BFu7i_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_L()
{
  {
    init_simple_test("B_BFu7i_L");
    static B_BFu7i_L lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu7i_L)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_L)");
    check_field_offset(lv, v1, 0, "B_BFu7i_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_L");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_L");
    check_field_offset(lv, v3, 2, "B_BFu7i_L.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7i_L(Test_B_BFu7i_L, "B_BFu7i_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_S()
{
  {
    init_simple_test("B_BFu7i_S");
    static B_BFu7i_S lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7i_S)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_S)");
    check_field_offset(lv, v1, 0, "B_BFu7i_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_S");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_S");
    check_field_offset(lv, v3, 2, "B_BFu7i_S.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7i_S(Test_B_BFu7i_S, "B_BFu7i_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_Uc()
{
  {
    init_simple_test("B_BFu7i_Uc");
    static B_BFu7i_Uc lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_Uc)");
    check_field_offset(lv, v1, 0, "B_BFu7i_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_Uc");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_Uc");
    check_field_offset(lv, v3, 2, "B_BFu7i_Uc.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7i_Uc(Test_B_BFu7i_Uc, "B_BFu7i_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_Ui()
{
  {
    init_simple_test("B_BFu7i_Ui");
    static B_BFu7i_Ui lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_Ui)");
    check_field_offset(lv, v1, 0, "B_BFu7i_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_Ui");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_Ui");
    check_field_offset(lv, v3, 2, "B_BFu7i_Ui.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7i_Ui(Test_B_BFu7i_Ui, "B_BFu7i_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_Ul()
{
  {
    init_simple_test("B_BFu7i_Ul");
    static B_BFu7i_Ul lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu7i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_Ul)");
    check_field_offset(lv, v1, 0, "B_BFu7i_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_Ul");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_Ul");
    check_field_offset(lv, v3, 2, "B_BFu7i_Ul.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7i_Ul(Test_B_BFu7i_Ul, "B_BFu7i_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_Us()
{
  {
    init_simple_test("B_BFu7i_Us");
    static B_BFu7i_Us lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_Us)");
    check_field_offset(lv, v1, 0, "B_BFu7i_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_Us");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_Us");
    check_field_offset(lv, v3, 2, "B_BFu7i_Us.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7i_Us(Test_B_BFu7i_Us, "B_BFu7i_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7i_Vp()
{
  {
    init_simple_test("B_BFu7i_Vp");
    static B_BFu7i_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(B_BFu7i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7i_Vp)");
    check_field_offset(lv, v1, 0, "B_BFu7i_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7i_Vp");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7i_Vp");
    check_field_offset(lv, v3, 2, "B_BFu7i_Vp.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7i_Vp(Test_B_BFu7i_Vp, "B_BFu7i_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll()
{
  {
    init_simple_test("B_BFu7ll");
    static B_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll)");
    check_field_offset(lv, v1, 0, "B_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll");
  }
}
static Arrange_To_Call_Me vB_BFu7ll(Test_B_BFu7ll, "B_BFu7ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_B()
{
  {
    init_simple_test("B_BFu7ll_B");
    static B_BFu7ll_B lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7ll_B)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_B)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_B");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_B");
    check_field_offset(lv, v3, 2, "B_BFu7ll_B.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_B(Test_B_BFu7ll_B, "B_BFu7ll_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_BFu15i()
{
  {
    init_simple_test("B_BFu7ll_BFu15i");
    static B_BFu7ll_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_BFu15i)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu15i");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "B_BFu7ll_BFu15i");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "B_BFu7ll_BFu15i");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_BFu15i(Test_B_BFu7ll_BFu15i, "B_BFu7ll_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_BFu15ll()
{
  {
    init_simple_test("B_BFu7ll_BFu15ll");
    static B_BFu7ll_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu15ll");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "B_BFu7ll_BFu15ll");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "B_BFu7ll_BFu15ll");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_BFu15ll(Test_B_BFu7ll_BFu15ll, "B_BFu7ll_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_BFu15s()
{
  {
    init_simple_test("B_BFu7ll_BFu15s");
    static B_BFu7ll_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_BFu15s)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu15s");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "B_BFu7ll_BFu15s");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "B_BFu7ll_BFu15s");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_BFu15s(Test_B_BFu7ll_BFu15s, "B_BFu7ll_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_BFu16i()
{
  {
    init_simple_test("B_BFu7ll_BFu16i");
    static B_BFu7ll_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_BFu16i)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu16i");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "B_BFu7ll_BFu16i");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "B_BFu7ll_BFu16i");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_BFu16i(Test_B_BFu7ll_BFu16i, "B_BFu7ll_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_BFu16ll()
{
  {
    init_simple_test("B_BFu7ll_BFu16ll");
    static B_BFu7ll_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu16ll");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "B_BFu7ll_BFu16ll");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "B_BFu7ll_BFu16ll");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_BFu16ll(Test_B_BFu7ll_BFu16ll, "B_BFu7ll_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_BFu16s()
{
  {
    init_simple_test("B_BFu7ll_BFu16s");
    static B_BFu7ll_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_BFu16s)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu16s");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "B_BFu7ll_BFu16s");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "B_BFu7ll_BFu16s");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_BFu16s(Test_B_BFu7ll_BFu16s, "B_BFu7ll_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_BFu17i()
{
  {
    init_simple_test("B_BFu7ll_BFu17i");
    static B_BFu7ll_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_BFu17i)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu17i");
    set_bf_and_test(lv, v3, 1, 7, 17, 1, "B_BFu7ll_BFu17i");
    set_bf_and_test(lv, v3, 1, 7, 17, hide_ull(1LL<<16), "B_BFu7ll_BFu17i");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_BFu17i(Test_B_BFu7ll_BFu17i, "B_BFu7ll_BFu17i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_BFu17ll()
{
  {
    init_simple_test("B_BFu7ll_BFu17ll");
    static B_BFu7ll_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu17ll");
    set_bf_and_test(lv, v3, 1, 7, 17, 1, "B_BFu7ll_BFu17ll");
    set_bf_and_test(lv, v3, 1, 7, 17, hide_ull(1LL<<16), "B_BFu7ll_BFu17ll");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_BFu17ll(Test_B_BFu7ll_BFu17ll, "B_BFu7ll_BFu17ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_BFu1c()
{
  {
    init_simple_test("B_BFu7ll_BFu1c");
    static B_BFu7ll_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu7ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_BFu1c)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu1c");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "B_BFu7ll_BFu1c");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_BFu1c(Test_B_BFu7ll_BFu1c, "B_BFu7ll_BFu1c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_BFu1i()
{
  {
    init_simple_test("B_BFu7ll_BFu1i");
    static B_BFu7ll_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu7ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_BFu1i)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu1i");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "B_BFu7ll_BFu1i");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_BFu1i(Test_B_BFu7ll_BFu1i, "B_BFu7ll_BFu1i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_BFu1ll()
{
  {
    init_simple_test("B_BFu7ll_BFu1ll");
    static B_BFu7ll_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu7ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu1ll");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "B_BFu7ll_BFu1ll");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_BFu1ll(Test_B_BFu7ll_BFu1ll, "B_BFu7ll_BFu1ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_BFu1s()
{
  {
    init_simple_test("B_BFu7ll_BFu1s");
    static B_BFu7ll_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu7ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_BFu1s)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu1s");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "B_BFu7ll_BFu1s");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_BFu1s(Test_B_BFu7ll_BFu1s, "B_BFu7ll_BFu1s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_BFu31i()
{
  {
    init_simple_test("B_BFu7ll_BFu31i");
    static B_BFu7ll_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_BFu31i)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu31i");
    set_bf_and_test(lv, v3, 1, 7, 31, 1, "B_BFu7ll_BFu31i");
    set_bf_and_test(lv, v3, 1, 7, 31, hide_ull(1LL<<30), "B_BFu7ll_BFu31i");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_BFu31i(Test_B_BFu7ll_BFu31i, "B_BFu7ll_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_BFu31ll()
{
  {
    init_simple_test("B_BFu7ll_BFu31ll");
    static B_BFu7ll_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu31ll");
    set_bf_and_test(lv, v3, 1, 7, 31, 1, "B_BFu7ll_BFu31ll");
    set_bf_and_test(lv, v3, 1, 7, 31, hide_ull(1LL<<30), "B_BFu7ll_BFu31ll");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_BFu31ll(Test_B_BFu7ll_BFu31ll, "B_BFu7ll_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_BFu32i()
{
  {
    init_simple_test("B_BFu7ll_BFu32i");
    static B_BFu7ll_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_BFu32i)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu32i");
    set_bf_and_test(lv, v3, 1, 7, 32, 1, "B_BFu7ll_BFu32i");
    set_bf_and_test(lv, v3, 1, 7, 32, hide_ull(1LL<<31), "B_BFu7ll_BFu32i");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_BFu32i(Test_B_BFu7ll_BFu32i, "B_BFu7ll_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_BFu32ll()
{
  {
    init_simple_test("B_BFu7ll_BFu32ll");
    static B_BFu7ll_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu32ll");
    set_bf_and_test(lv, v3, 1, 7, 32, 1, "B_BFu7ll_BFu32ll");
    set_bf_and_test(lv, v3, 1, 7, 32, hide_ull(1LL<<31), "B_BFu7ll_BFu32ll");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_BFu32ll(Test_B_BFu7ll_BFu32ll, "B_BFu7ll_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_BFu33()
{
  {
    init_simple_test("B_BFu7ll_BFu33");
    static B_BFu7ll_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_BFu33)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu33");
    set_bf_and_test(lv, v3, 1, 7, 33, 1, "B_BFu7ll_BFu33");
    set_bf_and_test(lv, v3, 1, 7, 33, hide_ull(1LL<<32), "B_BFu7ll_BFu33");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_BFu33(Test_B_BFu7ll_BFu33, "B_BFu7ll_BFu33", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_BFu7c()
{
  {
    init_simple_test("B_BFu7ll_BFu7c");
    static B_BFu7ll_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_BFu7c)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu7c");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "B_BFu7ll_BFu7c");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu7c");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_BFu7c(Test_B_BFu7ll_BFu7c, "B_BFu7ll_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_BFu7i()
{
  {
    init_simple_test("B_BFu7ll_BFu7i");
    static B_BFu7ll_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_BFu7i)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu7i");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "B_BFu7ll_BFu7i");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu7i");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_BFu7i(Test_B_BFu7ll_BFu7i, "B_BFu7ll_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_BFu7ll()
{
  {
    init_simple_test("B_BFu7ll_BFu7ll");
    static B_BFu7ll_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu7ll");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "B_BFu7ll_BFu7ll");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu7ll");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_BFu7ll(Test_B_BFu7ll_BFu7ll, "B_BFu7ll_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_BFu7s()
{
  {
    init_simple_test("B_BFu7ll_BFu7s");
    static B_BFu7ll_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_BFu7s)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu7s");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "B_BFu7ll_BFu7s");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu7s");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_BFu7s(Test_B_BFu7ll_BFu7s, "B_BFu7ll_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_BFu8c()
{
  {
    init_simple_test("B_BFu7ll_BFu8c");
    static B_BFu7ll_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_BFu8c)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu8c");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "B_BFu7ll_BFu8c");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "B_BFu7ll_BFu8c");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_BFu8c(Test_B_BFu7ll_BFu8c, "B_BFu7ll_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_BFu8i()
{
  {
    init_simple_test("B_BFu7ll_BFu8i");
    static B_BFu7ll_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_BFu8i)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu8i");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "B_BFu7ll_BFu8i");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "B_BFu7ll_BFu8i");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_BFu8i(Test_B_BFu7ll_BFu8i, "B_BFu7ll_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_BFu8ll()
{
  {
    init_simple_test("B_BFu7ll_BFu8ll");
    static B_BFu7ll_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu8ll");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "B_BFu7ll_BFu8ll");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "B_BFu7ll_BFu8ll");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_BFu8ll(Test_B_BFu7ll_BFu8ll, "B_BFu7ll_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_BFu8s()
{
  {
    init_simple_test("B_BFu7ll_BFu8s");
    static B_BFu7ll_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_BFu8s)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu8s");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "B_BFu7ll_BFu8s");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "B_BFu7ll_BFu8s");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_BFu8s(Test_B_BFu7ll_BFu8s, "B_BFu7ll_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_BFu9i()
{
  {
    init_simple_test("B_BFu7ll_BFu9i");
    static B_BFu7ll_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_BFu9i)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu9i");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "B_BFu7ll_BFu9i");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "B_BFu7ll_BFu9i");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_BFu9i(Test_B_BFu7ll_BFu9i, "B_BFu7ll_BFu9i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_BFu9ll()
{
  {
    init_simple_test("B_BFu7ll_BFu9ll");
    static B_BFu7ll_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu9ll");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "B_BFu7ll_BFu9ll");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "B_BFu7ll_BFu9ll");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_BFu9ll(Test_B_BFu7ll_BFu9ll, "B_BFu7ll_BFu9ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_BFu9s()
{
  {
    init_simple_test("B_BFu7ll_BFu9s");
    static B_BFu7ll_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_BFu9s)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_BFu9s");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "B_BFu7ll_BFu9s");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "B_BFu7ll_BFu9s");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_BFu9s(Test_B_BFu7ll_BFu9s, "B_BFu7ll_BFu9s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_C()
{
  {
    init_simple_test("B_BFu7ll_C");
    static B_BFu7ll_C lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_C)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_C");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_C");
    check_field_offset(lv, v3, 2, "B_BFu7ll_C.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_C(Test_B_BFu7ll_C, "B_BFu7ll_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_D()
{
  {
    init_simple_test("B_BFu7ll_D");
    static B_BFu7ll_D lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu7ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_D)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_D");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_D");
    check_field_offset(lv, v3, 2, "B_BFu7ll_D.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_D(Test_B_BFu7ll_D, "B_BFu7ll_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_F()
{
  {
    init_simple_test("B_BFu7ll_F");
    static B_BFu7ll_F lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_F)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_F");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_F");
    check_field_offset(lv, v3, 2, "B_BFu7ll_F.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_F(Test_B_BFu7ll_F, "B_BFu7ll_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_I()
{
  {
    init_simple_test("B_BFu7ll_I");
    static B_BFu7ll_I lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_I)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_I");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_I");
    check_field_offset(lv, v3, 2, "B_BFu7ll_I.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_I(Test_B_BFu7ll_I, "B_BFu7ll_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_Ip()
{
  {
    init_simple_test("B_BFu7ll_Ip");
    static B_BFu7ll_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(B_BFu7ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_Ip)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_Ip");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_Ip");
    check_field_offset(lv, v3, 2, "B_BFu7ll_Ip.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_Ip(Test_B_BFu7ll_Ip, "B_BFu7ll_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_L()
{
  {
    init_simple_test("B_BFu7ll_L");
    static B_BFu7ll_L lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu7ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_L)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_L");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_L");
    check_field_offset(lv, v3, 2, "B_BFu7ll_L.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_L(Test_B_BFu7ll_L, "B_BFu7ll_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_S()
{
  {
    init_simple_test("B_BFu7ll_S");
    static B_BFu7ll_S lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_S)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_S");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_S");
    check_field_offset(lv, v3, 2, "B_BFu7ll_S.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_S(Test_B_BFu7ll_S, "B_BFu7ll_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_Uc()
{
  {
    init_simple_test("B_BFu7ll_Uc");
    static B_BFu7ll_Uc lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_Uc)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_Uc");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_Uc");
    check_field_offset(lv, v3, 2, "B_BFu7ll_Uc.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_Uc(Test_B_BFu7ll_Uc, "B_BFu7ll_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_Ui()
{
  {
    init_simple_test("B_BFu7ll_Ui");
    static B_BFu7ll_Ui lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_Ui)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_Ui");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_Ui");
    check_field_offset(lv, v3, 2, "B_BFu7ll_Ui.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_Ui(Test_B_BFu7ll_Ui, "B_BFu7ll_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_Ul()
{
  {
    init_simple_test("B_BFu7ll_Ul");
    static B_BFu7ll_Ul lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu7ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_Ul)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_Ul");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_Ul");
    check_field_offset(lv, v3, 2, "B_BFu7ll_Ul.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_Ul(Test_B_BFu7ll_Ul, "B_BFu7ll_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_Us()
{
  {
    init_simple_test("B_BFu7ll_Us");
    static B_BFu7ll_Us lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_Us)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_Us");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_Us");
    check_field_offset(lv, v3, 2, "B_BFu7ll_Us.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_Us(Test_B_BFu7ll_Us, "B_BFu7ll_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7ll_Vp()
{
  {
    init_simple_test("B_BFu7ll_Vp");
    static B_BFu7ll_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(B_BFu7ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7ll_Vp)");
    check_field_offset(lv, v1, 0, "B_BFu7ll_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7ll_Vp");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7ll_Vp");
    check_field_offset(lv, v3, 2, "B_BFu7ll_Vp.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7ll_Vp(Test_B_BFu7ll_Vp, "B_BFu7ll_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s()
{
  {
    init_simple_test("B_BFu7s");
    static B_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s)");
    check_field_offset(lv, v1, 0, "B_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s");
  }
}
static Arrange_To_Call_Me vB_BFu7s(Test_B_BFu7s, "B_BFu7s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_B()
{
  {
    init_simple_test("B_BFu7s_B");
    static B_BFu7s_B lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7s_B)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_B)");
    check_field_offset(lv, v1, 0, "B_BFu7s_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_B");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_B");
    check_field_offset(lv, v3, 2, "B_BFu7s_B.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7s_B(Test_B_BFu7s_B, "B_BFu7s_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_BFu15i()
{
  {
    init_simple_test("B_BFu7s_BFu15i");
    static B_BFu7s_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_BFu15i)");
    check_field_offset(lv, v1, 0, "B_BFu7s_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_BFu15i");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "B_BFu7s_BFu15i");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "B_BFu7s_BFu15i");
  }
}
static Arrange_To_Call_Me vB_BFu7s_BFu15i(Test_B_BFu7s_BFu15i, "B_BFu7s_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_BFu15ll()
{
  {
    init_simple_test("B_BFu7s_BFu15ll");
    static B_BFu7s_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_BFu15ll)");
    check_field_offset(lv, v1, 0, "B_BFu7s_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_BFu15ll");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "B_BFu7s_BFu15ll");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "B_BFu7s_BFu15ll");
  }
}
static Arrange_To_Call_Me vB_BFu7s_BFu15ll(Test_B_BFu7s_BFu15ll, "B_BFu7s_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_BFu15s()
{
  {
    init_simple_test("B_BFu7s_BFu15s");
    static B_BFu7s_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_BFu15s)");
    check_field_offset(lv, v1, 0, "B_BFu7s_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_BFu15s");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "B_BFu7s_BFu15s");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "B_BFu7s_BFu15s");
  }
}
static Arrange_To_Call_Me vB_BFu7s_BFu15s(Test_B_BFu7s_BFu15s, "B_BFu7s_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_BFu16i()
{
  {
    init_simple_test("B_BFu7s_BFu16i");
    static B_BFu7s_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_BFu16i)");
    check_field_offset(lv, v1, 0, "B_BFu7s_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_BFu16i");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "B_BFu7s_BFu16i");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "B_BFu7s_BFu16i");
  }
}
static Arrange_To_Call_Me vB_BFu7s_BFu16i(Test_B_BFu7s_BFu16i, "B_BFu7s_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_BFu16ll()
{
  {
    init_simple_test("B_BFu7s_BFu16ll");
    static B_BFu7s_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_BFu16ll)");
    check_field_offset(lv, v1, 0, "B_BFu7s_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_BFu16ll");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "B_BFu7s_BFu16ll");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "B_BFu7s_BFu16ll");
  }
}
static Arrange_To_Call_Me vB_BFu7s_BFu16ll(Test_B_BFu7s_BFu16ll, "B_BFu7s_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_BFu16s()
{
  {
    init_simple_test("B_BFu7s_BFu16s");
    static B_BFu7s_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_BFu16s)");
    check_field_offset(lv, v1, 0, "B_BFu7s_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_BFu16s");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "B_BFu7s_BFu16s");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "B_BFu7s_BFu16s");
  }
}
static Arrange_To_Call_Me vB_BFu7s_BFu16s(Test_B_BFu7s_BFu16s, "B_BFu7s_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_BFu17i()
{
  {
    init_simple_test("B_BFu7s_BFu17i");
    static B_BFu7s_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_BFu17i)");
    check_field_offset(lv, v1, 0, "B_BFu7s_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_BFu17i");
    set_bf_and_test(lv, v3, 1, 7, 17, 1, "B_BFu7s_BFu17i");
    set_bf_and_test(lv, v3, 1, 7, 17, hide_ull(1LL<<16), "B_BFu7s_BFu17i");
  }
}
static Arrange_To_Call_Me vB_BFu7s_BFu17i(Test_B_BFu7s_BFu17i, "B_BFu7s_BFu17i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_BFu17ll()
{
  {
    init_simple_test("B_BFu7s_BFu17ll");
    static B_BFu7s_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_BFu17ll)");
    check_field_offset(lv, v1, 0, "B_BFu7s_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_BFu17ll");
    set_bf_and_test(lv, v3, 1, 7, 17, 1, "B_BFu7s_BFu17ll");
    set_bf_and_test(lv, v3, 1, 7, 17, hide_ull(1LL<<16), "B_BFu7s_BFu17ll");
  }
}
static Arrange_To_Call_Me vB_BFu7s_BFu17ll(Test_B_BFu7s_BFu17ll, "B_BFu7s_BFu17ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_BFu1c()
{
  {
    init_simple_test("B_BFu7s_BFu1c");
    static B_BFu7s_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu7s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_BFu1c)");
    check_field_offset(lv, v1, 0, "B_BFu7s_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_BFu1c");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "B_BFu7s_BFu1c");
  }
}
static Arrange_To_Call_Me vB_BFu7s_BFu1c(Test_B_BFu7s_BFu1c, "B_BFu7s_BFu1c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_BFu1i()
{
  {
    init_simple_test("B_BFu7s_BFu1i");
    static B_BFu7s_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu7s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_BFu1i)");
    check_field_offset(lv, v1, 0, "B_BFu7s_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_BFu1i");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "B_BFu7s_BFu1i");
  }
}
static Arrange_To_Call_Me vB_BFu7s_BFu1i(Test_B_BFu7s_BFu1i, "B_BFu7s_BFu1i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_BFu1ll()
{
  {
    init_simple_test("B_BFu7s_BFu1ll");
    static B_BFu7s_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu7s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_BFu1ll)");
    check_field_offset(lv, v1, 0, "B_BFu7s_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_BFu1ll");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "B_BFu7s_BFu1ll");
  }
}
static Arrange_To_Call_Me vB_BFu7s_BFu1ll(Test_B_BFu7s_BFu1ll, "B_BFu7s_BFu1ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_BFu1s()
{
  {
    init_simple_test("B_BFu7s_BFu1s");
    static B_BFu7s_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu7s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_BFu1s)");
    check_field_offset(lv, v1, 0, "B_BFu7s_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_BFu1s");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "B_BFu7s_BFu1s");
  }
}
static Arrange_To_Call_Me vB_BFu7s_BFu1s(Test_B_BFu7s_BFu1s, "B_BFu7s_BFu1s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_BFu31i()
{
  {
    init_simple_test("B_BFu7s_BFu31i");
    static B_BFu7s_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_BFu31i)");
    check_field_offset(lv, v1, 0, "B_BFu7s_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_BFu31i");
    set_bf_and_test(lv, v3, 1, 7, 31, 1, "B_BFu7s_BFu31i");
    set_bf_and_test(lv, v3, 1, 7, 31, hide_ull(1LL<<30), "B_BFu7s_BFu31i");
  }
}
static Arrange_To_Call_Me vB_BFu7s_BFu31i(Test_B_BFu7s_BFu31i, "B_BFu7s_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_BFu31ll()
{
  {
    init_simple_test("B_BFu7s_BFu31ll");
    static B_BFu7s_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_BFu31ll)");
    check_field_offset(lv, v1, 0, "B_BFu7s_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_BFu31ll");
    set_bf_and_test(lv, v3, 1, 7, 31, 1, "B_BFu7s_BFu31ll");
    set_bf_and_test(lv, v3, 1, 7, 31, hide_ull(1LL<<30), "B_BFu7s_BFu31ll");
  }
}
static Arrange_To_Call_Me vB_BFu7s_BFu31ll(Test_B_BFu7s_BFu31ll, "B_BFu7s_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_BFu32i()
{
  {
    init_simple_test("B_BFu7s_BFu32i");
    static B_BFu7s_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_BFu32i)");
    check_field_offset(lv, v1, 0, "B_BFu7s_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_BFu32i");
    set_bf_and_test(lv, v3, 1, 7, 32, 1, "B_BFu7s_BFu32i");
    set_bf_and_test(lv, v3, 1, 7, 32, hide_ull(1LL<<31), "B_BFu7s_BFu32i");
  }
}
static Arrange_To_Call_Me vB_BFu7s_BFu32i(Test_B_BFu7s_BFu32i, "B_BFu7s_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_BFu32ll()
{
  {
    init_simple_test("B_BFu7s_BFu32ll");
    static B_BFu7s_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_BFu32ll)");
    check_field_offset(lv, v1, 0, "B_BFu7s_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_BFu32ll");
    set_bf_and_test(lv, v3, 1, 7, 32, 1, "B_BFu7s_BFu32ll");
    set_bf_and_test(lv, v3, 1, 7, 32, hide_ull(1LL<<31), "B_BFu7s_BFu32ll");
  }
}
static Arrange_To_Call_Me vB_BFu7s_BFu32ll(Test_B_BFu7s_BFu32ll, "B_BFu7s_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_BFu33()
{
  {
    init_simple_test("B_BFu7s_BFu33");
    static B_BFu7s_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_BFu33)");
    check_field_offset(lv, v1, 0, "B_BFu7s_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_BFu33");
    set_bf_and_test(lv, v3, 1, 7, 33, 1, "B_BFu7s_BFu33");
    set_bf_and_test(lv, v3, 1, 7, 33, hide_ull(1LL<<32), "B_BFu7s_BFu33");
  }
}
static Arrange_To_Call_Me vB_BFu7s_BFu33(Test_B_BFu7s_BFu33, "B_BFu7s_BFu33", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_BFu7c()
{
  {
    init_simple_test("B_BFu7s_BFu7c");
    static B_BFu7s_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_BFu7c)");
    check_field_offset(lv, v1, 0, "B_BFu7s_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_BFu7c");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "B_BFu7s_BFu7c");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "B_BFu7s_BFu7c");
  }
}
static Arrange_To_Call_Me vB_BFu7s_BFu7c(Test_B_BFu7s_BFu7c, "B_BFu7s_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_BFu7i()
{
  {
    init_simple_test("B_BFu7s_BFu7i");
    static B_BFu7s_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_BFu7i)");
    check_field_offset(lv, v1, 0, "B_BFu7s_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_BFu7i");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "B_BFu7s_BFu7i");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "B_BFu7s_BFu7i");
  }
}
static Arrange_To_Call_Me vB_BFu7s_BFu7i(Test_B_BFu7s_BFu7i, "B_BFu7s_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_BFu7ll()
{
  {
    init_simple_test("B_BFu7s_BFu7ll");
    static B_BFu7s_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_BFu7ll)");
    check_field_offset(lv, v1, 0, "B_BFu7s_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_BFu7ll");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "B_BFu7s_BFu7ll");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "B_BFu7s_BFu7ll");
  }
}
static Arrange_To_Call_Me vB_BFu7s_BFu7ll(Test_B_BFu7s_BFu7ll, "B_BFu7s_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_BFu7s()
{
  {
    init_simple_test("B_BFu7s_BFu7s");
    static B_BFu7s_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_BFu7s)");
    check_field_offset(lv, v1, 0, "B_BFu7s_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_BFu7s");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "B_BFu7s_BFu7s");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "B_BFu7s_BFu7s");
  }
}
static Arrange_To_Call_Me vB_BFu7s_BFu7s(Test_B_BFu7s_BFu7s, "B_BFu7s_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_BFu8c()
{
  {
    init_simple_test("B_BFu7s_BFu8c");
    static B_BFu7s_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_BFu8c)");
    check_field_offset(lv, v1, 0, "B_BFu7s_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_BFu8c");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "B_BFu7s_BFu8c");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "B_BFu7s_BFu8c");
  }
}
static Arrange_To_Call_Me vB_BFu7s_BFu8c(Test_B_BFu7s_BFu8c, "B_BFu7s_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_BFu8i()
{
  {
    init_simple_test("B_BFu7s_BFu8i");
    static B_BFu7s_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_BFu8i)");
    check_field_offset(lv, v1, 0, "B_BFu7s_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_BFu8i");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "B_BFu7s_BFu8i");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "B_BFu7s_BFu8i");
  }
}
static Arrange_To_Call_Me vB_BFu7s_BFu8i(Test_B_BFu7s_BFu8i, "B_BFu7s_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_BFu8ll()
{
  {
    init_simple_test("B_BFu7s_BFu8ll");
    static B_BFu7s_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_BFu8ll)");
    check_field_offset(lv, v1, 0, "B_BFu7s_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_BFu8ll");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "B_BFu7s_BFu8ll");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "B_BFu7s_BFu8ll");
  }
}
static Arrange_To_Call_Me vB_BFu7s_BFu8ll(Test_B_BFu7s_BFu8ll, "B_BFu7s_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_BFu8s()
{
  {
    init_simple_test("B_BFu7s_BFu8s");
    static B_BFu7s_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_BFu8s)");
    check_field_offset(lv, v1, 0, "B_BFu7s_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_BFu8s");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "B_BFu7s_BFu8s");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "B_BFu7s_BFu8s");
  }
}
static Arrange_To_Call_Me vB_BFu7s_BFu8s(Test_B_BFu7s_BFu8s, "B_BFu7s_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_BFu9i()
{
  {
    init_simple_test("B_BFu7s_BFu9i");
    static B_BFu7s_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_BFu9i)");
    check_field_offset(lv, v1, 0, "B_BFu7s_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_BFu9i");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "B_BFu7s_BFu9i");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "B_BFu7s_BFu9i");
  }
}
static Arrange_To_Call_Me vB_BFu7s_BFu9i(Test_B_BFu7s_BFu9i, "B_BFu7s_BFu9i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_BFu9ll()
{
  {
    init_simple_test("B_BFu7s_BFu9ll");
    static B_BFu7s_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_BFu9ll)");
    check_field_offset(lv, v1, 0, "B_BFu7s_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_BFu9ll");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "B_BFu7s_BFu9ll");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "B_BFu7s_BFu9ll");
  }
}
static Arrange_To_Call_Me vB_BFu7s_BFu9ll(Test_B_BFu7s_BFu9ll, "B_BFu7s_BFu9ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_BFu9s()
{
  {
    init_simple_test("B_BFu7s_BFu9s");
    static B_BFu7s_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_BFu9s)");
    check_field_offset(lv, v1, 0, "B_BFu7s_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_BFu9s");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "B_BFu7s_BFu9s");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "B_BFu7s_BFu9s");
  }
}
static Arrange_To_Call_Me vB_BFu7s_BFu9s(Test_B_BFu7s_BFu9s, "B_BFu7s_BFu9s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_C()
{
  {
    init_simple_test("B_BFu7s_C");
    static B_BFu7s_C lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7s_C)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_C)");
    check_field_offset(lv, v1, 0, "B_BFu7s_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_C");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_C");
    check_field_offset(lv, v3, 2, "B_BFu7s_C.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7s_C(Test_B_BFu7s_C, "B_BFu7s_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_D()
{
  {
    init_simple_test("B_BFu7s_D");
    static B_BFu7s_D lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu7s_D)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_D)");
    check_field_offset(lv, v1, 0, "B_BFu7s_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_D");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_D");
    check_field_offset(lv, v3, 2, "B_BFu7s_D.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7s_D(Test_B_BFu7s_D, "B_BFu7s_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_F()
{
  {
    init_simple_test("B_BFu7s_F");
    static B_BFu7s_F lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7s_F)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_F)");
    check_field_offset(lv, v1, 0, "B_BFu7s_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_F");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_F");
    check_field_offset(lv, v3, 2, "B_BFu7s_F.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7s_F(Test_B_BFu7s_F, "B_BFu7s_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_I()
{
  {
    init_simple_test("B_BFu7s_I");
    static B_BFu7s_I lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7s_I)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_I)");
    check_field_offset(lv, v1, 0, "B_BFu7s_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_I");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_I");
    check_field_offset(lv, v3, 2, "B_BFu7s_I.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7s_I(Test_B_BFu7s_I, "B_BFu7s_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_Ip()
{
  {
    init_simple_test("B_BFu7s_Ip");
    static B_BFu7s_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(B_BFu7s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_Ip)");
    check_field_offset(lv, v1, 0, "B_BFu7s_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_Ip");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_Ip");
    check_field_offset(lv, v3, 2, "B_BFu7s_Ip.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7s_Ip(Test_B_BFu7s_Ip, "B_BFu7s_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_L()
{
  {
    init_simple_test("B_BFu7s_L");
    static B_BFu7s_L lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu7s_L)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_L)");
    check_field_offset(lv, v1, 0, "B_BFu7s_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_L");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_L");
    check_field_offset(lv, v3, 2, "B_BFu7s_L.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7s_L(Test_B_BFu7s_L, "B_BFu7s_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_S()
{
  {
    init_simple_test("B_BFu7s_S");
    static B_BFu7s_S lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7s_S)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_S)");
    check_field_offset(lv, v1, 0, "B_BFu7s_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_S");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_S");
    check_field_offset(lv, v3, 2, "B_BFu7s_S.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7s_S(Test_B_BFu7s_S, "B_BFu7s_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_Uc()
{
  {
    init_simple_test("B_BFu7s_Uc");
    static B_BFu7s_Uc lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu7s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_Uc)");
    check_field_offset(lv, v1, 0, "B_BFu7s_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_Uc");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_Uc");
    check_field_offset(lv, v3, 2, "B_BFu7s_Uc.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7s_Uc(Test_B_BFu7s_Uc, "B_BFu7s_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_Ui()
{
  {
    init_simple_test("B_BFu7s_Ui");
    static B_BFu7s_Ui lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu7s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_Ui)");
    check_field_offset(lv, v1, 0, "B_BFu7s_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_Ui");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_Ui");
    check_field_offset(lv, v3, 2, "B_BFu7s_Ui.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7s_Ui(Test_B_BFu7s_Ui, "B_BFu7s_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_Ul()
{
  {
    init_simple_test("B_BFu7s_Ul");
    static B_BFu7s_Ul lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu7s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_Ul)");
    check_field_offset(lv, v1, 0, "B_BFu7s_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_Ul");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_Ul");
    check_field_offset(lv, v3, 2, "B_BFu7s_Ul.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7s_Ul(Test_B_BFu7s_Ul, "B_BFu7s_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_Us()
{
  {
    init_simple_test("B_BFu7s_Us");
    static B_BFu7s_Us lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu7s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_Us)");
    check_field_offset(lv, v1, 0, "B_BFu7s_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_Us");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_Us");
    check_field_offset(lv, v3, 2, "B_BFu7s_Us.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7s_Us(Test_B_BFu7s_Us, "B_BFu7s_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu7s_Vp()
{
  {
    init_simple_test("B_BFu7s_Vp");
    static B_BFu7s_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(B_BFu7s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu7s_Vp)");
    check_field_offset(lv, v1, 0, "B_BFu7s_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "B_BFu7s_Vp");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "B_BFu7s_Vp");
    check_field_offset(lv, v3, 2, "B_BFu7s_Vp.v3");
  }
}
static Arrange_To_Call_Me vB_BFu7s_Vp(Test_B_BFu7s_Vp, "B_BFu7s_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c()
{
  {
    init_simple_test("B_BFu8c");
    static B_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c)");
    check_field_offset(lv, v1, 0, "B_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c");
  }
}
static Arrange_To_Call_Me vB_BFu8c(Test_B_BFu8c, "B_BFu8c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_B()
{
  {
    init_simple_test("B_BFu8c_B");
    static B_BFu8c_B lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu8c_B)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_B)");
    check_field_offset(lv, v1, 0, "B_BFu8c_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_B");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_B");
    check_field_offset(lv, v3, 2, "B_BFu8c_B.v3");
  }
}
static Arrange_To_Call_Me vB_BFu8c_B(Test_B_BFu8c_B, "B_BFu8c_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_BFu15i()
{
  {
    init_simple_test("B_BFu8c_BFu15i");
    static B_BFu8c_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu8c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_BFu15i)");
    check_field_offset(lv, v1, 0, "B_BFu8c_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "B_BFu8c_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "B_BFu8c_BFu15i");
  }
}
static Arrange_To_Call_Me vB_BFu8c_BFu15i(Test_B_BFu8c_BFu15i, "B_BFu8c_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_BFu15ll()
{
  {
    init_simple_test("B_BFu8c_BFu15ll");
    static B_BFu8c_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu8c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_BFu15ll)");
    check_field_offset(lv, v1, 0, "B_BFu8c_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "B_BFu8c_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "B_BFu8c_BFu15ll");
  }
}
static Arrange_To_Call_Me vB_BFu8c_BFu15ll(Test_B_BFu8c_BFu15ll, "B_BFu8c_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_BFu15s()
{
  {
    init_simple_test("B_BFu8c_BFu15s");
    static B_BFu8c_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu8c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_BFu15s)");
    check_field_offset(lv, v1, 0, "B_BFu8c_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "B_BFu8c_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "B_BFu8c_BFu15s");
  }
}
static Arrange_To_Call_Me vB_BFu8c_BFu15s(Test_B_BFu8c_BFu15s, "B_BFu8c_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_BFu16i()
{
  {
    init_simple_test("B_BFu8c_BFu16i");
    static B_BFu8c_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu8c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_BFu16i)");
    check_field_offset(lv, v1, 0, "B_BFu8c_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "B_BFu8c_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "B_BFu8c_BFu16i");
  }
}
static Arrange_To_Call_Me vB_BFu8c_BFu16i(Test_B_BFu8c_BFu16i, "B_BFu8c_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_BFu16ll()
{
  {
    init_simple_test("B_BFu8c_BFu16ll");
    static B_BFu8c_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu8c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_BFu16ll)");
    check_field_offset(lv, v1, 0, "B_BFu8c_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "B_BFu8c_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "B_BFu8c_BFu16ll");
  }
}
static Arrange_To_Call_Me vB_BFu8c_BFu16ll(Test_B_BFu8c_BFu16ll, "B_BFu8c_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_BFu16s()
{
  {
    init_simple_test("B_BFu8c_BFu16s");
    static B_BFu8c_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu8c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_BFu16s)");
    check_field_offset(lv, v1, 0, "B_BFu8c_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "B_BFu8c_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "B_BFu8c_BFu16s");
  }
}
static Arrange_To_Call_Me vB_BFu8c_BFu16s(Test_B_BFu8c_BFu16s, "B_BFu8c_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_BFu17i()
{
  {
    init_simple_test("B_BFu8c_BFu17i");
    static B_BFu8c_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu8c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_BFu17i)");
    check_field_offset(lv, v1, 0, "B_BFu8c_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "B_BFu8c_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "B_BFu8c_BFu17i");
  }
}
static Arrange_To_Call_Me vB_BFu8c_BFu17i(Test_B_BFu8c_BFu17i, "B_BFu8c_BFu17i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_BFu17ll()
{
  {
    init_simple_test("B_BFu8c_BFu17ll");
    static B_BFu8c_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu8c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_BFu17ll)");
    check_field_offset(lv, v1, 0, "B_BFu8c_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "B_BFu8c_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "B_BFu8c_BFu17ll");
  }
}
static Arrange_To_Call_Me vB_BFu8c_BFu17ll(Test_B_BFu8c_BFu17ll, "B_BFu8c_BFu17ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_BFu1c()
{
  {
    init_simple_test("B_BFu8c_BFu1c");
    static B_BFu8c_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu8c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_BFu1c)");
    check_field_offset(lv, v1, 0, "B_BFu8c_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu1c");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "B_BFu8c_BFu1c");
  }
}
static Arrange_To_Call_Me vB_BFu8c_BFu1c(Test_B_BFu8c_BFu1c, "B_BFu8c_BFu1c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_BFu1i()
{
  {
    init_simple_test("B_BFu8c_BFu1i");
    static B_BFu8c_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu8c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_BFu1i)");
    check_field_offset(lv, v1, 0, "B_BFu8c_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu1i");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "B_BFu8c_BFu1i");
  }
}
static Arrange_To_Call_Me vB_BFu8c_BFu1i(Test_B_BFu8c_BFu1i, "B_BFu8c_BFu1i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_BFu1ll()
{
  {
    init_simple_test("B_BFu8c_BFu1ll");
    static B_BFu8c_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu8c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_BFu1ll)");
    check_field_offset(lv, v1, 0, "B_BFu8c_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu1ll");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "B_BFu8c_BFu1ll");
  }
}
static Arrange_To_Call_Me vB_BFu8c_BFu1ll(Test_B_BFu8c_BFu1ll, "B_BFu8c_BFu1ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_BFu1s()
{
  {
    init_simple_test("B_BFu8c_BFu1s");
    static B_BFu8c_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu8c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_BFu1s)");
    check_field_offset(lv, v1, 0, "B_BFu8c_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu1s");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "B_BFu8c_BFu1s");
  }
}
static Arrange_To_Call_Me vB_BFu8c_BFu1s(Test_B_BFu8c_BFu1s, "B_BFu8c_BFu1s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_BFu31i()
{
  {
    init_simple_test("B_BFu8c_BFu31i");
    static B_BFu8c_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu8c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_BFu31i)");
    check_field_offset(lv, v1, 0, "B_BFu8c_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "B_BFu8c_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "B_BFu8c_BFu31i");
  }
}
static Arrange_To_Call_Me vB_BFu8c_BFu31i(Test_B_BFu8c_BFu31i, "B_BFu8c_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_BFu31ll()
{
  {
    init_simple_test("B_BFu8c_BFu31ll");
    static B_BFu8c_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu8c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_BFu31ll)");
    check_field_offset(lv, v1, 0, "B_BFu8c_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "B_BFu8c_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "B_BFu8c_BFu31ll");
  }
}
static Arrange_To_Call_Me vB_BFu8c_BFu31ll(Test_B_BFu8c_BFu31ll, "B_BFu8c_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_BFu32i()
{
  {
    init_simple_test("B_BFu8c_BFu32i");
    static B_BFu8c_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu8c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_BFu32i)");
    check_field_offset(lv, v1, 0, "B_BFu8c_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "B_BFu8c_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "B_BFu8c_BFu32i");
  }
}
static Arrange_To_Call_Me vB_BFu8c_BFu32i(Test_B_BFu8c_BFu32i, "B_BFu8c_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_BFu32ll()
{
  {
    init_simple_test("B_BFu8c_BFu32ll");
    static B_BFu8c_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu8c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_BFu32ll)");
    check_field_offset(lv, v1, 0, "B_BFu8c_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "B_BFu8c_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "B_BFu8c_BFu32ll");
  }
}
static Arrange_To_Call_Me vB_BFu8c_BFu32ll(Test_B_BFu8c_BFu32ll, "B_BFu8c_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_BFu33()
{
  {
    init_simple_test("B_BFu8c_BFu33");
    static B_BFu8c_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu8c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_BFu33)");
    check_field_offset(lv, v1, 0, "B_BFu8c_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "B_BFu8c_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "B_BFu8c_BFu33");
  }
}
static Arrange_To_Call_Me vB_BFu8c_BFu33(Test_B_BFu8c_BFu33, "B_BFu8c_BFu33", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_BFu7c()
{
  {
    init_simple_test("B_BFu8c_BFu7c");
    static B_BFu8c_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu8c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_BFu7c)");
    check_field_offset(lv, v1, 0, "B_BFu8c_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "B_BFu8c_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "B_BFu8c_BFu7c");
  }
}
static Arrange_To_Call_Me vB_BFu8c_BFu7c(Test_B_BFu8c_BFu7c, "B_BFu8c_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_BFu7i()
{
  {
    init_simple_test("B_BFu8c_BFu7i");
    static B_BFu8c_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu8c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_BFu7i)");
    check_field_offset(lv, v1, 0, "B_BFu8c_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "B_BFu8c_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "B_BFu8c_BFu7i");
  }
}
static Arrange_To_Call_Me vB_BFu8c_BFu7i(Test_B_BFu8c_BFu7i, "B_BFu8c_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_BFu7ll()
{
  {
    init_simple_test("B_BFu8c_BFu7ll");
    static B_BFu8c_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu8c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_BFu7ll)");
    check_field_offset(lv, v1, 0, "B_BFu8c_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "B_BFu8c_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "B_BFu8c_BFu7ll");
  }
}
static Arrange_To_Call_Me vB_BFu8c_BFu7ll(Test_B_BFu8c_BFu7ll, "B_BFu8c_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_BFu7s()
{
  {
    init_simple_test("B_BFu8c_BFu7s");
    static B_BFu8c_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu8c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_BFu7s)");
    check_field_offset(lv, v1, 0, "B_BFu8c_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "B_BFu8c_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "B_BFu8c_BFu7s");
  }
}
static Arrange_To_Call_Me vB_BFu8c_BFu7s(Test_B_BFu8c_BFu7s, "B_BFu8c_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_BFu8c()
{
  {
    init_simple_test("B_BFu8c_BFu8c");
    static B_BFu8c_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu8c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_BFu8c)");
    check_field_offset(lv, v1, 0, "B_BFu8c_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "B_BFu8c_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu8c");
  }
}
static Arrange_To_Call_Me vB_BFu8c_BFu8c(Test_B_BFu8c_BFu8c, "B_BFu8c_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_BFu8i()
{
  {
    init_simple_test("B_BFu8c_BFu8i");
    static B_BFu8c_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu8c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_BFu8i)");
    check_field_offset(lv, v1, 0, "B_BFu8c_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "B_BFu8c_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu8i");
  }
}
static Arrange_To_Call_Me vB_BFu8c_BFu8i(Test_B_BFu8c_BFu8i, "B_BFu8c_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_BFu8ll()
{
  {
    init_simple_test("B_BFu8c_BFu8ll");
    static B_BFu8c_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu8c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_BFu8ll)");
    check_field_offset(lv, v1, 0, "B_BFu8c_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "B_BFu8c_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu8ll");
  }
}
static Arrange_To_Call_Me vB_BFu8c_BFu8ll(Test_B_BFu8c_BFu8ll, "B_BFu8c_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_BFu8s()
{
  {
    init_simple_test("B_BFu8c_BFu8s");
    static B_BFu8c_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu8c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_BFu8s)");
    check_field_offset(lv, v1, 0, "B_BFu8c_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "B_BFu8c_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu8s");
  }
}
static Arrange_To_Call_Me vB_BFu8c_BFu8s(Test_B_BFu8c_BFu8s, "B_BFu8c_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_BFu9i()
{
  {
    init_simple_test("B_BFu8c_BFu9i");
    static B_BFu8c_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu8c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_BFu9i)");
    check_field_offset(lv, v1, 0, "B_BFu8c_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "B_BFu8c_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "B_BFu8c_BFu9i");
  }
}
static Arrange_To_Call_Me vB_BFu8c_BFu9i(Test_B_BFu8c_BFu9i, "B_BFu8c_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_BFu9ll()
{
  {
    init_simple_test("B_BFu8c_BFu9ll");
    static B_BFu8c_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu8c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_BFu9ll)");
    check_field_offset(lv, v1, 0, "B_BFu8c_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "B_BFu8c_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "B_BFu8c_BFu9ll");
  }
}
static Arrange_To_Call_Me vB_BFu8c_BFu9ll(Test_B_BFu8c_BFu9ll, "B_BFu8c_BFu9ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_BFu9s()
{
  {
    init_simple_test("B_BFu8c_BFu9s");
    static B_BFu8c_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu8c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_BFu9s)");
    check_field_offset(lv, v1, 0, "B_BFu8c_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "B_BFu8c_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "B_BFu8c_BFu9s");
  }
}
static Arrange_To_Call_Me vB_BFu8c_BFu9s(Test_B_BFu8c_BFu9s, "B_BFu8c_BFu9s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_C()
{
  {
    init_simple_test("B_BFu8c_C");
    static B_BFu8c_C lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu8c_C)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_C)");
    check_field_offset(lv, v1, 0, "B_BFu8c_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_C");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_C");
    check_field_offset(lv, v3, 2, "B_BFu8c_C.v3");
  }
}
static Arrange_To_Call_Me vB_BFu8c_C(Test_B_BFu8c_C, "B_BFu8c_C", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_D()
{
  {
    init_simple_test("B_BFu8c_D");
    static B_BFu8c_D lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu8c_D)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_D)");
    check_field_offset(lv, v1, 0, "B_BFu8c_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_D");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_D");
    check_field_offset(lv, v3, 2, "B_BFu8c_D.v3");
  }
}
static Arrange_To_Call_Me vB_BFu8c_D(Test_B_BFu8c_D, "B_BFu8c_D", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_F()
{
  {
    init_simple_test("B_BFu8c_F");
    static B_BFu8c_F lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu8c_F)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_F)");
    check_field_offset(lv, v1, 0, "B_BFu8c_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_F");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_F");
    check_field_offset(lv, v3, 2, "B_BFu8c_F.v3");
  }
}
static Arrange_To_Call_Me vB_BFu8c_F(Test_B_BFu8c_F, "B_BFu8c_F", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_I()
{
  {
    init_simple_test("B_BFu8c_I");
    static B_BFu8c_I lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu8c_I)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_I)");
    check_field_offset(lv, v1, 0, "B_BFu8c_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_I");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_I");
    check_field_offset(lv, v3, 2, "B_BFu8c_I.v3");
  }
}
static Arrange_To_Call_Me vB_BFu8c_I(Test_B_BFu8c_I, "B_BFu8c_I", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_Ip()
{
  {
    init_simple_test("B_BFu8c_Ip");
    static B_BFu8c_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(B_BFu8c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_Ip)");
    check_field_offset(lv, v1, 0, "B_BFu8c_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_Ip");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_Ip");
    check_field_offset(lv, v3, 2, "B_BFu8c_Ip.v3");
  }
}
static Arrange_To_Call_Me vB_BFu8c_Ip(Test_B_BFu8c_Ip, "B_BFu8c_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_L()
{
  {
    init_simple_test("B_BFu8c_L");
    static B_BFu8c_L lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu8c_L)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_L)");
    check_field_offset(lv, v1, 0, "B_BFu8c_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_L");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_L");
    check_field_offset(lv, v3, 2, "B_BFu8c_L.v3");
  }
}
static Arrange_To_Call_Me vB_BFu8c_L(Test_B_BFu8c_L, "B_BFu8c_L", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_S()
{
  {
    init_simple_test("B_BFu8c_S");
    static B_BFu8c_S lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu8c_S)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_S)");
    check_field_offset(lv, v1, 0, "B_BFu8c_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_S");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_S");
    check_field_offset(lv, v3, 2, "B_BFu8c_S.v3");
  }
}
static Arrange_To_Call_Me vB_BFu8c_S(Test_B_BFu8c_S, "B_BFu8c_S", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_Uc()
{
  {
    init_simple_test("B_BFu8c_Uc");
    static B_BFu8c_Uc lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu8c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_Uc)");
    check_field_offset(lv, v1, 0, "B_BFu8c_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_Uc");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_Uc");
    check_field_offset(lv, v3, 2, "B_BFu8c_Uc.v3");
  }
}
static Arrange_To_Call_Me vB_BFu8c_Uc(Test_B_BFu8c_Uc, "B_BFu8c_Uc", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_Ui()
{
  {
    init_simple_test("B_BFu8c_Ui");
    static B_BFu8c_Ui lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu8c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_Ui)");
    check_field_offset(lv, v1, 0, "B_BFu8c_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_Ui");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_Ui");
    check_field_offset(lv, v3, 2, "B_BFu8c_Ui.v3");
  }
}
static Arrange_To_Call_Me vB_BFu8c_Ui(Test_B_BFu8c_Ui, "B_BFu8c_Ui", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_Ul()
{
  {
    init_simple_test("B_BFu8c_Ul");
    static B_BFu8c_Ul lv;
    check2(sizeof(lv), 10, "sizeof(B_BFu8c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_Ul)");
    check_field_offset(lv, v1, 0, "B_BFu8c_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_Ul");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_Ul");
    check_field_offset(lv, v3, 2, "B_BFu8c_Ul.v3");
  }
}
static Arrange_To_Call_Me vB_BFu8c_Ul(Test_B_BFu8c_Ul, "B_BFu8c_Ul", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_Us()
{
  {
    init_simple_test("B_BFu8c_Us");
    static B_BFu8c_Us lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu8c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_Us)");
    check_field_offset(lv, v1, 0, "B_BFu8c_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_Us");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_Us");
    check_field_offset(lv, v3, 2, "B_BFu8c_Us.v3");
  }
}
static Arrange_To_Call_Me vB_BFu8c_Us(Test_B_BFu8c_Us, "B_BFu8c_Us", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8c_Vp()
{
  {
    init_simple_test("B_BFu8c_Vp");
    static B_BFu8c_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(B_BFu8c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8c_Vp)");
    check_field_offset(lv, v1, 0, "B_BFu8c_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8c_Vp");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8c_Vp");
    check_field_offset(lv, v3, 2, "B_BFu8c_Vp.v3");
  }
}
static Arrange_To_Call_Me vB_BFu8c_Vp(Test_B_BFu8c_Vp, "B_BFu8c_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8i()
{
  {
    init_simple_test("B_BFu8i");
    static B_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(B_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8i)");
    check_field_offset(lv, v1, 0, "B_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8i");
  }
}
static Arrange_To_Call_Me vB_BFu8i(Test_B_BFu8i, "B_BFu8i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8i_B()
{
  {
    init_simple_test("B_BFu8i_B");
    static B_BFu8i_B lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu8i_B)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8i_B)");
    check_field_offset(lv, v1, 0, "B_BFu8i_B.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8i_B");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8i_B");
    check_field_offset(lv, v3, 2, "B_BFu8i_B.v3");
  }
}
static Arrange_To_Call_Me vB_BFu8i_B(Test_B_BFu8i_B, "B_BFu8i_B", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8i_BFu15i()
{
  {
    init_simple_test("B_BFu8i_BFu15i");
    static B_BFu8i_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu8i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8i_BFu15i)");
    check_field_offset(lv, v1, 0, "B_BFu8i_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8i_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "B_BFu8i_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "B_BFu8i_BFu15i");
  }
}
static Arrange_To_Call_Me vB_BFu8i_BFu15i(Test_B_BFu8i_BFu15i, "B_BFu8i_BFu15i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8i_BFu15ll()
{
  {
    init_simple_test("B_BFu8i_BFu15ll");
    static B_BFu8i_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu8i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8i_BFu15ll)");
    check_field_offset(lv, v1, 0, "B_BFu8i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "B_BFu8i_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "B_BFu8i_BFu15ll");
  }
}
static Arrange_To_Call_Me vB_BFu8i_BFu15ll(Test_B_BFu8i_BFu15ll, "B_BFu8i_BFu15ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8i_BFu15s()
{
  {
    init_simple_test("B_BFu8i_BFu15s");
    static B_BFu8i_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu8i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8i_BFu15s)");
    check_field_offset(lv, v1, 0, "B_BFu8i_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8i_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "B_BFu8i_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "B_BFu8i_BFu15s");
  }
}
static Arrange_To_Call_Me vB_BFu8i_BFu15s(Test_B_BFu8i_BFu15s, "B_BFu8i_BFu15s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8i_BFu16i()
{
  {
    init_simple_test("B_BFu8i_BFu16i");
    static B_BFu8i_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu8i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8i_BFu16i)");
    check_field_offset(lv, v1, 0, "B_BFu8i_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8i_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "B_BFu8i_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "B_BFu8i_BFu16i");
  }
}
static Arrange_To_Call_Me vB_BFu8i_BFu16i(Test_B_BFu8i_BFu16i, "B_BFu8i_BFu16i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8i_BFu16ll()
{
  {
    init_simple_test("B_BFu8i_BFu16ll");
    static B_BFu8i_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu8i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8i_BFu16ll)");
    check_field_offset(lv, v1, 0, "B_BFu8i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8i_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "B_BFu8i_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "B_BFu8i_BFu16ll");
  }
}
static Arrange_To_Call_Me vB_BFu8i_BFu16ll(Test_B_BFu8i_BFu16ll, "B_BFu8i_BFu16ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8i_BFu16s()
{
  {
    init_simple_test("B_BFu8i_BFu16s");
    static B_BFu8i_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu8i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8i_BFu16s)");
    check_field_offset(lv, v1, 0, "B_BFu8i_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8i_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "B_BFu8i_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "B_BFu8i_BFu16s");
  }
}
static Arrange_To_Call_Me vB_BFu8i_BFu16s(Test_B_BFu8i_BFu16s, "B_BFu8i_BFu16s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8i_BFu17i()
{
  {
    init_simple_test("B_BFu8i_BFu17i");
    static B_BFu8i_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu8i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8i_BFu17i)");
    check_field_offset(lv, v1, 0, "B_BFu8i_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8i_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "B_BFu8i_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "B_BFu8i_BFu17i");
  }
}
static Arrange_To_Call_Me vB_BFu8i_BFu17i(Test_B_BFu8i_BFu17i, "B_BFu8i_BFu17i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8i_BFu17ll()
{
  {
    init_simple_test("B_BFu8i_BFu17ll");
    static B_BFu8i_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(B_BFu8i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8i_BFu17ll)");
    check_field_offset(lv, v1, 0, "B_BFu8i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8i_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "B_BFu8i_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "B_BFu8i_BFu17ll");
  }
}
static Arrange_To_Call_Me vB_BFu8i_BFu17ll(Test_B_BFu8i_BFu17ll, "B_BFu8i_BFu17ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8i_BFu1c()
{
  {
    init_simple_test("B_BFu8i_BFu1c");
    static B_BFu8i_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu8i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8i_BFu1c)");
    check_field_offset(lv, v1, 0, "B_BFu8i_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8i_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu1c");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "B_BFu8i_BFu1c");
  }
}
static Arrange_To_Call_Me vB_BFu8i_BFu1c(Test_B_BFu8i_BFu1c, "B_BFu8i_BFu1c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8i_BFu1i()
{
  {
    init_simple_test("B_BFu8i_BFu1i");
    static B_BFu8i_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu8i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8i_BFu1i)");
    check_field_offset(lv, v1, 0, "B_BFu8i_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8i_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu1i");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "B_BFu8i_BFu1i");
  }
}
static Arrange_To_Call_Me vB_BFu8i_BFu1i(Test_B_BFu8i_BFu1i, "B_BFu8i_BFu1i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8i_BFu1ll()
{
  {
    init_simple_test("B_BFu8i_BFu1ll");
    static B_BFu8i_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu8i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8i_BFu1ll)");
    check_field_offset(lv, v1, 0, "B_BFu8i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8i_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu1ll");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "B_BFu8i_BFu1ll");
  }
}
static Arrange_To_Call_Me vB_BFu8i_BFu1ll(Test_B_BFu8i_BFu1ll, "B_BFu8i_BFu1ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8i_BFu1s()
{
  {
    init_simple_test("B_BFu8i_BFu1s");
    static B_BFu8i_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu8i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8i_BFu1s)");
    check_field_offset(lv, v1, 0, "B_BFu8i_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8i_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu1s");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "B_BFu8i_BFu1s");
  }
}
static Arrange_To_Call_Me vB_BFu8i_BFu1s(Test_B_BFu8i_BFu1s, "B_BFu8i_BFu1s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8i_BFu31i()
{
  {
    init_simple_test("B_BFu8i_BFu31i");
    static B_BFu8i_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu8i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8i_BFu31i)");
    check_field_offset(lv, v1, 0, "B_BFu8i_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8i_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "B_BFu8i_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "B_BFu8i_BFu31i");
  }
}
static Arrange_To_Call_Me vB_BFu8i_BFu31i(Test_B_BFu8i_BFu31i, "B_BFu8i_BFu31i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8i_BFu31ll()
{
  {
    init_simple_test("B_BFu8i_BFu31ll");
    static B_BFu8i_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu8i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8i_BFu31ll)");
    check_field_offset(lv, v1, 0, "B_BFu8i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8i_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "B_BFu8i_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "B_BFu8i_BFu31ll");
  }
}
static Arrange_To_Call_Me vB_BFu8i_BFu31ll(Test_B_BFu8i_BFu31ll, "B_BFu8i_BFu31ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8i_BFu32i()
{
  {
    init_simple_test("B_BFu8i_BFu32i");
    static B_BFu8i_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu8i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8i_BFu32i)");
    check_field_offset(lv, v1, 0, "B_BFu8i_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8i_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "B_BFu8i_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "B_BFu8i_BFu32i");
  }
}
static Arrange_To_Call_Me vB_BFu8i_BFu32i(Test_B_BFu8i_BFu32i, "B_BFu8i_BFu32i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8i_BFu32ll()
{
  {
    init_simple_test("B_BFu8i_BFu32ll");
    static B_BFu8i_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(B_BFu8i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8i_BFu32ll)");
    check_field_offset(lv, v1, 0, "B_BFu8i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8i_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "B_BFu8i_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "B_BFu8i_BFu32ll");
  }
}
static Arrange_To_Call_Me vB_BFu8i_BFu32ll(Test_B_BFu8i_BFu32ll, "B_BFu8i_BFu32ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8i_BFu33()
{
  {
    init_simple_test("B_BFu8i_BFu33");
    static B_BFu8i_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(B_BFu8i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8i_BFu33)");
    check_field_offset(lv, v1, 0, "B_BFu8i_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8i_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "B_BFu8i_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "B_BFu8i_BFu33");
  }
}
static Arrange_To_Call_Me vB_BFu8i_BFu33(Test_B_BFu8i_BFu33, "B_BFu8i_BFu33", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8i_BFu7c()
{
  {
    init_simple_test("B_BFu8i_BFu7c");
    static B_BFu8i_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu8i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8i_BFu7c)");
    check_field_offset(lv, v1, 0, "B_BFu8i_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8i_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "B_BFu8i_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "B_BFu8i_BFu7c");
  }
}
static Arrange_To_Call_Me vB_BFu8i_BFu7c(Test_B_BFu8i_BFu7c, "B_BFu8i_BFu7c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8i_BFu7i()
{
  {
    init_simple_test("B_BFu8i_BFu7i");
    static B_BFu8i_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu8i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8i_BFu7i)");
    check_field_offset(lv, v1, 0, "B_BFu8i_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8i_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "B_BFu8i_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "B_BFu8i_BFu7i");
  }
}
static Arrange_To_Call_Me vB_BFu8i_BFu7i(Test_B_BFu8i_BFu7i, "B_BFu8i_BFu7i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8i_BFu7ll()
{
  {
    init_simple_test("B_BFu8i_BFu7ll");
    static B_BFu8i_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu8i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8i_BFu7ll)");
    check_field_offset(lv, v1, 0, "B_BFu8i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8i_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "B_BFu8i_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "B_BFu8i_BFu7ll");
  }
}
static Arrange_To_Call_Me vB_BFu8i_BFu7ll(Test_B_BFu8i_BFu7ll, "B_BFu8i_BFu7ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8i_BFu7s()
{
  {
    init_simple_test("B_BFu8i_BFu7s");
    static B_BFu8i_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu8i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8i_BFu7s)");
    check_field_offset(lv, v1, 0, "B_BFu8i_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8i_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "B_BFu8i_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "B_BFu8i_BFu7s");
  }
}
static Arrange_To_Call_Me vB_BFu8i_BFu7s(Test_B_BFu8i_BFu7s, "B_BFu8i_BFu7s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8i_BFu8c()
{
  {
    init_simple_test("B_BFu8i_BFu8c");
    static B_BFu8i_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu8i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8i_BFu8c)");
    check_field_offset(lv, v1, 0, "B_BFu8i_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8i_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "B_BFu8i_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu8c");
  }
}
static Arrange_To_Call_Me vB_BFu8i_BFu8c(Test_B_BFu8i_BFu8c, "B_BFu8i_BFu8c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8i_BFu8i()
{
  {
    init_simple_test("B_BFu8i_BFu8i");
    static B_BFu8i_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu8i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8i_BFu8i)");
    check_field_offset(lv, v1, 0, "B_BFu8i_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8i_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "B_BFu8i_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu8i");
  }
}
static Arrange_To_Call_Me vB_BFu8i_BFu8i(Test_B_BFu8i_BFu8i, "B_BFu8i_BFu8i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8i_BFu8ll()
{
  {
    init_simple_test("B_BFu8i_BFu8ll");
    static B_BFu8i_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu8i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8i_BFu8ll)");
    check_field_offset(lv, v1, 0, "B_BFu8i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8i_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "B_BFu8i_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu8ll");
  }
}
static Arrange_To_Call_Me vB_BFu8i_BFu8ll(Test_B_BFu8i_BFu8ll, "B_BFu8i_BFu8ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8i_BFu8s()
{
  {
    init_simple_test("B_BFu8i_BFu8s");
    static B_BFu8i_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(B_BFu8i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8i_BFu8s)");
    check_field_offset(lv, v1, 0, "B_BFu8i_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8i_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "B_BFu8i_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu8s");
  }
}
static Arrange_To_Call_Me vB_BFu8i_BFu8s(Test_B_BFu8i_BFu8s, "B_BFu8i_BFu8s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8i_BFu9i()
{
  {
    init_simple_test("B_BFu8i_BFu9i");
    static B_BFu8i_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu8i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8i_BFu9i)");
    check_field_offset(lv, v1, 0, "B_BFu8i_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8i_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "B_BFu8i_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "B_BFu8i_BFu9i");
  }
}
static Arrange_To_Call_Me vB_BFu8i_BFu9i(Test_B_BFu8i_BFu9i, "B_BFu8i_BFu9i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8i_BFu9ll()
{
  {
    init_simple_test("B_BFu8i_BFu9ll");
    static B_BFu8i_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu8i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8i_BFu9ll)");
    check_field_offset(lv, v1, 0, "B_BFu8i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8i_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "B_BFu8i_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "B_BFu8i_BFu9ll");
  }
}
static Arrange_To_Call_Me vB_BFu8i_BFu9ll(Test_B_BFu8i_BFu9ll, "B_BFu8i_BFu9ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_B_BFu8i_BFu9s()
{
  {
    init_simple_test("B_BFu8i_BFu9s");
    static B_BFu8i_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(B_BFu8i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(B_BFu8i_BFu9s)");
    check_field_offset(lv, v1, 0, "B_BFu8i_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "B_BFu8i_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "B_BFu8i_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "B_BFu8i_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "B_BFu8i_BFu9s");
  }
}
static Arrange_To_Call_Me vB_BFu8i_BFu9s(Test_B_BFu8i_BFu9s, "B_BFu8i_BFu9s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

