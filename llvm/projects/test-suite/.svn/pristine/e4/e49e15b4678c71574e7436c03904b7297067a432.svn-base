// This file is distributed under the University of Illinois Open Source License.
// See LICENSE.TXT for details.
// RUN: c_compiler -c -o %t1.o -I "common" "common/testsuite.c"
// RUN: c_compiler -c %s -I "common" -o %t2.o
// RUN: linker -o %t1%exeext  %t1.o %t2.o
// RUN: runtool %t1%exeext | checker "TEST PASSED"
#include "testsuite.h"
typedef struct empty {} empty;
#pragma pack(1)
struct BFu31i_BFu31ll_Sf { unsigned int v1:31; unsigned long long v2:31; empty v3; };
struct BFu31i_BFu32i_Sf { unsigned int v1:31; unsigned int v2:32; empty v3; };
struct BFu31i_BFu32ll_Sf { unsigned int v1:31; unsigned long long v2:32; empty v3; };
struct BFu31i_BFu33_Sf { unsigned int v1:31; unsigned long long v2:33; empty v3; };
struct BFu31i_BFu7c_Sf { unsigned int v1:31; unsigned char v2:7; empty v3; };
struct BFu31i_BFu7i_Sf { unsigned int v1:31; unsigned int v2:7; empty v3; };
struct BFu31i_BFu7ll_Sf { unsigned int v1:31; unsigned long long v2:7; empty v3; };
struct BFu31i_BFu7s_Sf { unsigned int v1:31; unsigned short v2:7; empty v3; };
struct BFu31i_BFu8c_Sf { unsigned int v1:31; unsigned char v2:8; empty v3; };
struct BFu31i_BFu8i_Sf { unsigned int v1:31; unsigned int v2:8; empty v3; };
struct BFu31i_BFu8ll_Sf { unsigned int v1:31; unsigned long long v2:8; empty v3; };
struct BFu31i_BFu8s_Sf { unsigned int v1:31; unsigned short v2:8; empty v3; };
struct BFu31i_BFu9i_Sf { unsigned int v1:31; unsigned int v2:9; empty v3; };
struct BFu31i_BFu9ll_Sf { unsigned int v1:31; unsigned long long v2:9; empty v3; };
struct BFu31i_BFu9s_Sf { unsigned int v1:31; unsigned short v2:9; empty v3; };
struct BFu31i_C_Sf { unsigned int v1:31; char v2; empty v3; };
struct BFu31i_D_Sf { unsigned int v1:31; double v2; empty v3; };
struct BFu31i_F_Sf { unsigned int v1:31; float v2; empty v3; };
struct BFu31i_I_Sf { unsigned int v1:31; int v2; empty v3; };
struct BFu31i_Ip_Sf { unsigned int v1:31; int * v2; empty v3; };
struct BFu31i_L_Sf { unsigned int v1:31; long long v2; empty v3; };
struct BFu31i_S_Sf { unsigned int v1:31; short v2; empty v3; };
struct BFu31i_Sf { unsigned int v1:31; empty v2; };
struct BFu31i_Sf_BFu15i { unsigned int v1:31; empty v2; unsigned int v3:15; };
struct BFu31i_Sf_BFu15ll { unsigned int v1:31; empty v2; unsigned long long v3:15; };
struct BFu31i_Sf_BFu15s { unsigned int v1:31; empty v2; unsigned short v3:15; };
struct BFu31i_Sf_BFu16i { unsigned int v1:31; empty v2; unsigned int v3:16; };
struct BFu31i_Sf_BFu16ll { unsigned int v1:31; empty v2; unsigned long long v3:16; };
struct BFu31i_Sf_BFu16s { unsigned int v1:31; empty v2; unsigned short v3:16; };
struct BFu31i_Sf_BFu17i { unsigned int v1:31; empty v2; unsigned int v3:17; };
struct BFu31i_Sf_BFu17ll { unsigned int v1:31; empty v2; unsigned long long v3:17; };
struct BFu31i_Sf_BFu1c { unsigned int v1:31; empty v2; unsigned char v3:1; };
struct BFu31i_Sf_BFu1i { unsigned int v1:31; empty v2; unsigned int v3:1; };
struct BFu31i_Sf_BFu1ll { unsigned int v1:31; empty v2; unsigned long long v3:1; };
struct BFu31i_Sf_BFu1s { unsigned int v1:31; empty v2; unsigned short v3:1; };
struct BFu31i_Sf_BFu31i { unsigned int v1:31; empty v2; unsigned int v3:31; };
struct BFu31i_Sf_BFu31ll { unsigned int v1:31; empty v2; unsigned long long v3:31; };
struct BFu31i_Sf_BFu32i { unsigned int v1:31; empty v2; unsigned int v3:32; };
struct BFu31i_Sf_BFu32ll { unsigned int v1:31; empty v2; unsigned long long v3:32; };
struct BFu31i_Sf_BFu33 { unsigned int v1:31; empty v2; unsigned long long v3:33; };
struct BFu31i_Sf_BFu7c { unsigned int v1:31; empty v2; unsigned char v3:7; };
struct BFu31i_Sf_BFu7i { unsigned int v1:31; empty v2; unsigned int v3:7; };
struct BFu31i_Sf_BFu7ll { unsigned int v1:31; empty v2; unsigned long long v3:7; };
struct BFu31i_Sf_BFu7s { unsigned int v1:31; empty v2; unsigned short v3:7; };
struct BFu31i_Sf_BFu8c { unsigned int v1:31; empty v2; unsigned char v3:8; };
struct BFu31i_Sf_BFu8i { unsigned int v1:31; empty v2; unsigned int v3:8; };
struct BFu31i_Sf_BFu8ll { unsigned int v1:31; empty v2; unsigned long long v3:8; };
struct BFu31i_Sf_BFu8s { unsigned int v1:31; empty v2; unsigned short v3:8; };
struct BFu31i_Sf_BFu9i { unsigned int v1:31; empty v2; unsigned int v3:9; };
struct BFu31i_Sf_BFu9ll { unsigned int v1:31; empty v2; unsigned long long v3:9; };
struct BFu31i_Sf_BFu9s { unsigned int v1:31; empty v2; unsigned short v3:9; };
struct BFu31i_Sf_C { unsigned int v1:31; empty v2; char v3; };
struct BFu31i_Sf_D { unsigned int v1:31; empty v2; double v3; };
struct BFu31i_Sf_F { unsigned int v1:31; empty v2; float v3; };
struct BFu31i_Sf_I { unsigned int v1:31; empty v2; int v3; };
struct BFu31i_Sf_Ip { unsigned int v1:31; empty v2; int * v3; };
struct BFu31i_Sf_L { unsigned int v1:31; empty v2; long long v3; };
struct BFu31i_Sf_S { unsigned int v1:31; empty v2; short v3; };
struct BFu31i_Sf_Sf { unsigned int v1:31; empty v2; empty v3; };
struct BFu31i_Sf_Uc { unsigned int v1:31; empty v2; unsigned char v3; };
struct BFu31i_Sf_Ui { unsigned int v1:31; empty v2; unsigned int v3; };
struct BFu31i_Sf_Ul { unsigned int v1:31; empty v2; unsigned long long v3; };
struct BFu31i_Sf_Us { unsigned int v1:31; empty v2; unsigned short v3; };
struct BFu31i_Sf_Vp { unsigned int v1:31; empty v2; void * v3; };
struct BFu31i_Uc_Sf { unsigned int v1:31; unsigned char v2; empty v3; };
struct BFu31i_Ui_Sf { unsigned int v1:31; unsigned int v2; empty v3; };
struct BFu31i_Ul_Sf { unsigned int v1:31; unsigned long long v2; empty v3; };
struct BFu31i_Us_Sf { unsigned int v1:31; unsigned short v2; empty v3; };
struct BFu31i_Vp_Sf { unsigned int v1:31; void * v2; empty v3; };
struct BFu31ll_BFu15i_Sf { unsigned long long v1:31; unsigned int v2:15; empty v3; };
struct BFu31ll_BFu15ll_Sf { unsigned long long v1:31; unsigned long long v2:15; empty v3; };
struct BFu31ll_BFu15s_Sf { unsigned long long v1:31; unsigned short v2:15; empty v3; };
struct BFu31ll_BFu16i_Sf { unsigned long long v1:31; unsigned int v2:16; empty v3; };
struct BFu31ll_BFu16ll_Sf { unsigned long long v1:31; unsigned long long v2:16; empty v3; };
struct BFu31ll_BFu16s_Sf { unsigned long long v1:31; unsigned short v2:16; empty v3; };
struct BFu31ll_BFu17i_Sf { unsigned long long v1:31; unsigned int v2:17; empty v3; };
struct BFu31ll_BFu17ll_Sf { unsigned long long v1:31; unsigned long long v2:17; empty v3; };
struct BFu31ll_BFu1c_Sf { unsigned long long v1:31; unsigned char v2:1; empty v3; };
struct BFu31ll_BFu1i_Sf { unsigned long long v1:31; unsigned int v2:1; empty v3; };
struct BFu31ll_BFu1ll_Sf { unsigned long long v1:31; unsigned long long v2:1; empty v3; };
struct BFu31ll_BFu1s_Sf { unsigned long long v1:31; unsigned short v2:1; empty v3; };
struct BFu31ll_BFu31i_Sf { unsigned long long v1:31; unsigned int v2:31; empty v3; };
struct BFu31ll_BFu31ll_Sf { unsigned long long v1:31; unsigned long long v2:31; empty v3; };
struct BFu31ll_BFu32i_Sf { unsigned long long v1:31; unsigned int v2:32; empty v3; };
struct BFu31ll_BFu32ll_Sf { unsigned long long v1:31; unsigned long long v2:32; empty v3; };
struct BFu31ll_BFu33_Sf { unsigned long long v1:31; unsigned long long v2:33; empty v3; };
struct BFu31ll_BFu7c_Sf { unsigned long long v1:31; unsigned char v2:7; empty v3; };
struct BFu31ll_BFu7i_Sf { unsigned long long v1:31; unsigned int v2:7; empty v3; };
struct BFu31ll_BFu7ll_Sf { unsigned long long v1:31; unsigned long long v2:7; empty v3; };
struct BFu31ll_BFu7s_Sf { unsigned long long v1:31; unsigned short v2:7; empty v3; };
struct BFu31ll_BFu8c_Sf { unsigned long long v1:31; unsigned char v2:8; empty v3; };
struct BFu31ll_BFu8i_Sf { unsigned long long v1:31; unsigned int v2:8; empty v3; };
struct BFu31ll_BFu8ll_Sf { unsigned long long v1:31; unsigned long long v2:8; empty v3; };
struct BFu31ll_BFu8s_Sf { unsigned long long v1:31; unsigned short v2:8; empty v3; };
struct BFu31ll_BFu9i_Sf { unsigned long long v1:31; unsigned int v2:9; empty v3; };
struct BFu31ll_BFu9ll_Sf { unsigned long long v1:31; unsigned long long v2:9; empty v3; };
struct BFu31ll_BFu9s_Sf { unsigned long long v1:31; unsigned short v2:9; empty v3; };
struct BFu31ll_C_Sf { unsigned long long v1:31; char v2; empty v3; };
struct BFu31ll_D_Sf { unsigned long long v1:31; double v2; empty v3; };
struct BFu31ll_F_Sf { unsigned long long v1:31; float v2; empty v3; };
struct BFu31ll_I_Sf { unsigned long long v1:31; int v2; empty v3; };
struct BFu31ll_Ip_Sf { unsigned long long v1:31; int * v2; empty v3; };
struct BFu31ll_L_Sf { unsigned long long v1:31; long long v2; empty v3; };
struct BFu31ll_S_Sf { unsigned long long v1:31; short v2; empty v3; };
struct BFu31ll_Sf { unsigned long long v1:31; empty v2; };
struct BFu31ll_Sf_BFu15i { unsigned long long v1:31; empty v2; unsigned int v3:15; };
struct BFu31ll_Sf_BFu15ll { unsigned long long v1:31; empty v2; unsigned long long v3:15; };
struct BFu31ll_Sf_BFu15s { unsigned long long v1:31; empty v2; unsigned short v3:15; };
struct BFu31ll_Sf_BFu16i { unsigned long long v1:31; empty v2; unsigned int v3:16; };
struct BFu31ll_Sf_BFu16ll { unsigned long long v1:31; empty v2; unsigned long long v3:16; };
struct BFu31ll_Sf_BFu16s { unsigned long long v1:31; empty v2; unsigned short v3:16; };
struct BFu31ll_Sf_BFu17i { unsigned long long v1:31; empty v2; unsigned int v3:17; };
struct BFu31ll_Sf_BFu17ll { unsigned long long v1:31; empty v2; unsigned long long v3:17; };
struct BFu31ll_Sf_BFu1c { unsigned long long v1:31; empty v2; unsigned char v3:1; };
struct BFu31ll_Sf_BFu1i { unsigned long long v1:31; empty v2; unsigned int v3:1; };
struct BFu31ll_Sf_BFu1ll { unsigned long long v1:31; empty v2; unsigned long long v3:1; };
struct BFu31ll_Sf_BFu1s { unsigned long long v1:31; empty v2; unsigned short v3:1; };
struct BFu31ll_Sf_BFu31i { unsigned long long v1:31; empty v2; unsigned int v3:31; };
struct BFu31ll_Sf_BFu31ll { unsigned long long v1:31; empty v2; unsigned long long v3:31; };
struct BFu31ll_Sf_BFu32i { unsigned long long v1:31; empty v2; unsigned int v3:32; };
struct BFu31ll_Sf_BFu32ll { unsigned long long v1:31; empty v2; unsigned long long v3:32; };
struct BFu31ll_Sf_BFu33 { unsigned long long v1:31; empty v2; unsigned long long v3:33; };
struct BFu31ll_Sf_BFu7c { unsigned long long v1:31; empty v2; unsigned char v3:7; };
struct BFu31ll_Sf_BFu7i { unsigned long long v1:31; empty v2; unsigned int v3:7; };
struct BFu31ll_Sf_BFu7ll { unsigned long long v1:31; empty v2; unsigned long long v3:7; };
struct BFu31ll_Sf_BFu7s { unsigned long long v1:31; empty v2; unsigned short v3:7; };
struct BFu31ll_Sf_BFu8c { unsigned long long v1:31; empty v2; unsigned char v3:8; };
struct BFu31ll_Sf_BFu8i { unsigned long long v1:31; empty v2; unsigned int v3:8; };
struct BFu31ll_Sf_BFu8ll { unsigned long long v1:31; empty v2; unsigned long long v3:8; };
struct BFu31ll_Sf_BFu8s { unsigned long long v1:31; empty v2; unsigned short v3:8; };
struct BFu31ll_Sf_BFu9i { unsigned long long v1:31; empty v2; unsigned int v3:9; };
struct BFu31ll_Sf_BFu9ll { unsigned long long v1:31; empty v2; unsigned long long v3:9; };
struct BFu31ll_Sf_BFu9s { unsigned long long v1:31; empty v2; unsigned short v3:9; };
struct BFu31ll_Sf_C { unsigned long long v1:31; empty v2; char v3; };
struct BFu31ll_Sf_D { unsigned long long v1:31; empty v2; double v3; };
struct BFu31ll_Sf_F { unsigned long long v1:31; empty v2; float v3; };
struct BFu31ll_Sf_I { unsigned long long v1:31; empty v2; int v3; };
struct BFu31ll_Sf_Ip { unsigned long long v1:31; empty v2; int * v3; };
struct BFu31ll_Sf_L { unsigned long long v1:31; empty v2; long long v3; };
struct BFu31ll_Sf_S { unsigned long long v1:31; empty v2; short v3; };
struct BFu31ll_Sf_Sf { unsigned long long v1:31; empty v2; empty v3; };
struct BFu31ll_Sf_Uc { unsigned long long v1:31; empty v2; unsigned char v3; };
struct BFu31ll_Sf_Ui { unsigned long long v1:31; empty v2; unsigned int v3; };
struct BFu31ll_Sf_Ul { unsigned long long v1:31; empty v2; unsigned long long v3; };
struct BFu31ll_Sf_Us { unsigned long long v1:31; empty v2; unsigned short v3; };
struct BFu31ll_Sf_Vp { unsigned long long v1:31; empty v2; void * v3; };
struct BFu31ll_Uc_Sf { unsigned long long v1:31; unsigned char v2; empty v3; };
struct BFu31ll_Ui_Sf { unsigned long long v1:31; unsigned int v2; empty v3; };
struct BFu31ll_Ul_Sf { unsigned long long v1:31; unsigned long long v2; empty v3; };
struct BFu31ll_Us_Sf { unsigned long long v1:31; unsigned short v2; empty v3; };
struct BFu31ll_Vp_Sf { unsigned long long v1:31; void * v2; empty v3; };
struct BFu32i_BFu15i_Sf { unsigned int v1:32; unsigned int v2:15; empty v3; };
struct BFu32i_BFu15ll_Sf { unsigned int v1:32; unsigned long long v2:15; empty v3; };
struct BFu32i_BFu15s_Sf { unsigned int v1:32; unsigned short v2:15; empty v3; };
struct BFu32i_BFu16i_Sf { unsigned int v1:32; unsigned int v2:16; empty v3; };
struct BFu32i_BFu16ll_Sf { unsigned int v1:32; unsigned long long v2:16; empty v3; };
struct BFu32i_BFu16s_Sf { unsigned int v1:32; unsigned short v2:16; empty v3; };
struct BFu32i_BFu17i_Sf { unsigned int v1:32; unsigned int v2:17; empty v3; };
struct BFu32i_BFu17ll_Sf { unsigned int v1:32; unsigned long long v2:17; empty v3; };
struct BFu32i_BFu1c_Sf { unsigned int v1:32; unsigned char v2:1; empty v3; };
struct BFu32i_BFu1i_Sf { unsigned int v1:32; unsigned int v2:1; empty v3; };
struct BFu32i_BFu1ll_Sf { unsigned int v1:32; unsigned long long v2:1; empty v3; };
struct BFu32i_BFu1s_Sf { unsigned int v1:32; unsigned short v2:1; empty v3; };
struct BFu32i_BFu31i_Sf { unsigned int v1:32; unsigned int v2:31; empty v3; };
struct BFu32i_BFu31ll_Sf { unsigned int v1:32; unsigned long long v2:31; empty v3; };
struct BFu32i_BFu32i_Sf { unsigned int v1:32; unsigned int v2:32; empty v3; };
struct BFu32i_BFu32ll_Sf { unsigned int v1:32; unsigned long long v2:32; empty v3; };
struct BFu32i_BFu33_Sf { unsigned int v1:32; unsigned long long v2:33; empty v3; };
struct BFu32i_BFu7c_Sf { unsigned int v1:32; unsigned char v2:7; empty v3; };
struct BFu32i_BFu7i_Sf { unsigned int v1:32; unsigned int v2:7; empty v3; };
struct BFu32i_BFu7ll_Sf { unsigned int v1:32; unsigned long long v2:7; empty v3; };
struct BFu32i_BFu7s_Sf { unsigned int v1:32; unsigned short v2:7; empty v3; };
struct BFu32i_BFu8c_Sf { unsigned int v1:32; unsigned char v2:8; empty v3; };
struct BFu32i_BFu8i_Sf { unsigned int v1:32; unsigned int v2:8; empty v3; };
struct BFu32i_BFu8ll_Sf { unsigned int v1:32; unsigned long long v2:8; empty v3; };
struct BFu32i_BFu8s_Sf { unsigned int v1:32; unsigned short v2:8; empty v3; };
struct BFu32i_BFu9i_Sf { unsigned int v1:32; unsigned int v2:9; empty v3; };
struct BFu32i_BFu9ll_Sf { unsigned int v1:32; unsigned long long v2:9; empty v3; };
struct BFu32i_BFu9s_Sf { unsigned int v1:32; unsigned short v2:9; empty v3; };
struct BFu32i_C_Sf { unsigned int v1:32; char v2; empty v3; };
struct BFu32i_D_Sf { unsigned int v1:32; double v2; empty v3; };
struct BFu32i_F_Sf { unsigned int v1:32; float v2; empty v3; };
struct BFu32i_I_Sf { unsigned int v1:32; int v2; empty v3; };
struct BFu32i_Ip_Sf { unsigned int v1:32; int * v2; empty v3; };
struct BFu32i_L_Sf { unsigned int v1:32; long long v2; empty v3; };
struct BFu32i_S_Sf { unsigned int v1:32; short v2; empty v3; };
struct BFu32i_Sf { unsigned int v1:32; empty v2; };
struct BFu32i_Sf_BFu15i { unsigned int v1:32; empty v2; unsigned int v3:15; };
struct BFu32i_Sf_BFu15ll { unsigned int v1:32; empty v2; unsigned long long v3:15; };
struct BFu32i_Sf_BFu15s { unsigned int v1:32; empty v2; unsigned short v3:15; };
struct BFu32i_Sf_BFu16i { unsigned int v1:32; empty v2; unsigned int v3:16; };
struct BFu32i_Sf_BFu16ll { unsigned int v1:32; empty v2; unsigned long long v3:16; };
struct BFu32i_Sf_BFu16s { unsigned int v1:32; empty v2; unsigned short v3:16; };
struct BFu32i_Sf_BFu17i { unsigned int v1:32; empty v2; unsigned int v3:17; };
struct BFu32i_Sf_BFu17ll { unsigned int v1:32; empty v2; unsigned long long v3:17; };
struct BFu32i_Sf_BFu1c { unsigned int v1:32; empty v2; unsigned char v3:1; };
struct BFu32i_Sf_BFu1i { unsigned int v1:32; empty v2; unsigned int v3:1; };
struct BFu32i_Sf_BFu1ll { unsigned int v1:32; empty v2; unsigned long long v3:1; };
struct BFu32i_Sf_BFu1s { unsigned int v1:32; empty v2; unsigned short v3:1; };
struct BFu32i_Sf_BFu31i { unsigned int v1:32; empty v2; unsigned int v3:31; };
struct BFu32i_Sf_BFu31ll { unsigned int v1:32; empty v2; unsigned long long v3:31; };
struct BFu32i_Sf_BFu32i { unsigned int v1:32; empty v2; unsigned int v3:32; };
struct BFu32i_Sf_BFu32ll { unsigned int v1:32; empty v2; unsigned long long v3:32; };
struct BFu32i_Sf_BFu33 { unsigned int v1:32; empty v2; unsigned long long v3:33; };
struct BFu32i_Sf_BFu7c { unsigned int v1:32; empty v2; unsigned char v3:7; };
struct BFu32i_Sf_BFu7i { unsigned int v1:32; empty v2; unsigned int v3:7; };
struct BFu32i_Sf_BFu7ll { unsigned int v1:32; empty v2; unsigned long long v3:7; };
struct BFu32i_Sf_BFu7s { unsigned int v1:32; empty v2; unsigned short v3:7; };
struct BFu32i_Sf_BFu8c { unsigned int v1:32; empty v2; unsigned char v3:8; };
struct BFu32i_Sf_BFu8i { unsigned int v1:32; empty v2; unsigned int v3:8; };
struct BFu32i_Sf_BFu8ll { unsigned int v1:32; empty v2; unsigned long long v3:8; };
struct BFu32i_Sf_BFu8s { unsigned int v1:32; empty v2; unsigned short v3:8; };
struct BFu32i_Sf_BFu9i { unsigned int v1:32; empty v2; unsigned int v3:9; };
struct BFu32i_Sf_BFu9ll { unsigned int v1:32; empty v2; unsigned long long v3:9; };
struct BFu32i_Sf_BFu9s { unsigned int v1:32; empty v2; unsigned short v3:9; };
struct BFu32i_Sf_C { unsigned int v1:32; empty v2; char v3; };
struct BFu32i_Sf_D { unsigned int v1:32; empty v2; double v3; };
struct BFu32i_Sf_F { unsigned int v1:32; empty v2; float v3; };
struct BFu32i_Sf_I { unsigned int v1:32; empty v2; int v3; };
struct BFu32i_Sf_Ip { unsigned int v1:32; empty v2; int * v3; };
struct BFu32i_Sf_L { unsigned int v1:32; empty v2; long long v3; };
struct BFu32i_Sf_S { unsigned int v1:32; empty v2; short v3; };
struct BFu32i_Sf_Sf { unsigned int v1:32; empty v2; empty v3; };
struct BFu32i_Sf_Uc { unsigned int v1:32; empty v2; unsigned char v3; };
struct BFu32i_Sf_Ui { unsigned int v1:32; empty v2; unsigned int v3; };
struct BFu32i_Sf_Ul { unsigned int v1:32; empty v2; unsigned long long v3; };
struct BFu32i_Sf_Us { unsigned int v1:32; empty v2; unsigned short v3; };
struct BFu32i_Sf_Vp { unsigned int v1:32; empty v2; void * v3; };
struct BFu32i_Uc_Sf { unsigned int v1:32; unsigned char v2; empty v3; };
struct BFu32i_Ui_Sf { unsigned int v1:32; unsigned int v2; empty v3; };
struct BFu32i_Ul_Sf { unsigned int v1:32; unsigned long long v2; empty v3; };
struct BFu32i_Us_Sf { unsigned int v1:32; unsigned short v2; empty v3; };
struct BFu32i_Vp_Sf { unsigned int v1:32; void * v2; empty v3; };
struct BFu32ll_BFu15i_Sf { unsigned long long v1:32; unsigned int v2:15; empty v3; };
struct BFu32ll_BFu15ll_Sf { unsigned long long v1:32; unsigned long long v2:15; empty v3; };
struct BFu32ll_BFu15s_Sf { unsigned long long v1:32; unsigned short v2:15; empty v3; };
struct BFu32ll_BFu16i_Sf { unsigned long long v1:32; unsigned int v2:16; empty v3; };
struct BFu32ll_BFu16ll_Sf { unsigned long long v1:32; unsigned long long v2:16; empty v3; };
struct BFu32ll_BFu16s_Sf { unsigned long long v1:32; unsigned short v2:16; empty v3; };
struct BFu32ll_BFu17i_Sf { unsigned long long v1:32; unsigned int v2:17; empty v3; };
struct BFu32ll_BFu17ll_Sf { unsigned long long v1:32; unsigned long long v2:17; empty v3; };
struct BFu32ll_BFu1c_Sf { unsigned long long v1:32; unsigned char v2:1; empty v3; };
struct BFu32ll_BFu1i_Sf { unsigned long long v1:32; unsigned int v2:1; empty v3; };
struct BFu32ll_BFu1ll_Sf { unsigned long long v1:32; unsigned long long v2:1; empty v3; };
struct BFu32ll_BFu1s_Sf { unsigned long long v1:32; unsigned short v2:1; empty v3; };
struct BFu32ll_BFu31i_Sf { unsigned long long v1:32; unsigned int v2:31; empty v3; };
struct BFu32ll_BFu31ll_Sf { unsigned long long v1:32; unsigned long long v2:31; empty v3; };
struct BFu32ll_BFu32i_Sf { unsigned long long v1:32; unsigned int v2:32; empty v3; };
struct BFu32ll_BFu32ll_Sf { unsigned long long v1:32; unsigned long long v2:32; empty v3; };
struct BFu32ll_BFu33_Sf { unsigned long long v1:32; unsigned long long v2:33; empty v3; };
struct BFu32ll_BFu7c_Sf { unsigned long long v1:32; unsigned char v2:7; empty v3; };
struct BFu32ll_BFu7i_Sf { unsigned long long v1:32; unsigned int v2:7; empty v3; };
struct BFu32ll_BFu7ll_Sf { unsigned long long v1:32; unsigned long long v2:7; empty v3; };
struct BFu32ll_BFu7s_Sf { unsigned long long v1:32; unsigned short v2:7; empty v3; };
struct BFu32ll_BFu8c_Sf { unsigned long long v1:32; unsigned char v2:8; empty v3; };
struct BFu32ll_BFu8i_Sf { unsigned long long v1:32; unsigned int v2:8; empty v3; };
struct BFu32ll_BFu8ll_Sf { unsigned long long v1:32; unsigned long long v2:8; empty v3; };
struct BFu32ll_BFu8s_Sf { unsigned long long v1:32; unsigned short v2:8; empty v3; };
struct BFu32ll_BFu9i_Sf { unsigned long long v1:32; unsigned int v2:9; empty v3; };
struct BFu32ll_BFu9ll_Sf { unsigned long long v1:32; unsigned long long v2:9; empty v3; };
struct BFu32ll_BFu9s_Sf { unsigned long long v1:32; unsigned short v2:9; empty v3; };
struct BFu32ll_C_Sf { unsigned long long v1:32; char v2; empty v3; };
struct BFu32ll_D_Sf { unsigned long long v1:32; double v2; empty v3; };
struct BFu32ll_F_Sf { unsigned long long v1:32; float v2; empty v3; };
struct BFu32ll_I_Sf { unsigned long long v1:32; int v2; empty v3; };
struct BFu32ll_Ip_Sf { unsigned long long v1:32; int * v2; empty v3; };
struct BFu32ll_L_Sf { unsigned long long v1:32; long long v2; empty v3; };
struct BFu32ll_S_Sf { unsigned long long v1:32; short v2; empty v3; };
struct BFu32ll_Sf { unsigned long long v1:32; empty v2; };
struct BFu32ll_Sf_BFu15i { unsigned long long v1:32; empty v2; unsigned int v3:15; };
struct BFu32ll_Sf_BFu15ll { unsigned long long v1:32; empty v2; unsigned long long v3:15; };
struct BFu32ll_Sf_BFu15s { unsigned long long v1:32; empty v2; unsigned short v3:15; };
struct BFu32ll_Sf_BFu16i { unsigned long long v1:32; empty v2; unsigned int v3:16; };
struct BFu32ll_Sf_BFu16ll { unsigned long long v1:32; empty v2; unsigned long long v3:16; };
struct BFu32ll_Sf_BFu16s { unsigned long long v1:32; empty v2; unsigned short v3:16; };
struct BFu32ll_Sf_BFu17i { unsigned long long v1:32; empty v2; unsigned int v3:17; };
struct BFu32ll_Sf_BFu17ll { unsigned long long v1:32; empty v2; unsigned long long v3:17; };
struct BFu32ll_Sf_BFu1c { unsigned long long v1:32; empty v2; unsigned char v3:1; };
struct BFu32ll_Sf_BFu1i { unsigned long long v1:32; empty v2; unsigned int v3:1; };
struct BFu32ll_Sf_BFu1ll { unsigned long long v1:32; empty v2; unsigned long long v3:1; };
struct BFu32ll_Sf_BFu1s { unsigned long long v1:32; empty v2; unsigned short v3:1; };
struct BFu32ll_Sf_BFu31i { unsigned long long v1:32; empty v2; unsigned int v3:31; };
struct BFu32ll_Sf_BFu31ll { unsigned long long v1:32; empty v2; unsigned long long v3:31; };
struct BFu32ll_Sf_BFu32i { unsigned long long v1:32; empty v2; unsigned int v3:32; };
struct BFu32ll_Sf_BFu32ll { unsigned long long v1:32; empty v2; unsigned long long v3:32; };
struct BFu32ll_Sf_BFu33 { unsigned long long v1:32; empty v2; unsigned long long v3:33; };
struct BFu32ll_Sf_BFu7c { unsigned long long v1:32; empty v2; unsigned char v3:7; };
struct BFu32ll_Sf_BFu7i { unsigned long long v1:32; empty v2; unsigned int v3:7; };
struct BFu32ll_Sf_BFu7ll { unsigned long long v1:32; empty v2; unsigned long long v3:7; };
struct BFu32ll_Sf_BFu7s { unsigned long long v1:32; empty v2; unsigned short v3:7; };
struct BFu32ll_Sf_BFu8c { unsigned long long v1:32; empty v2; unsigned char v3:8; };
struct BFu32ll_Sf_BFu8i { unsigned long long v1:32; empty v2; unsigned int v3:8; };
struct BFu32ll_Sf_BFu8ll { unsigned long long v1:32; empty v2; unsigned long long v3:8; };
struct BFu32ll_Sf_BFu8s { unsigned long long v1:32; empty v2; unsigned short v3:8; };
struct BFu32ll_Sf_BFu9i { unsigned long long v1:32; empty v2; unsigned int v3:9; };
struct BFu32ll_Sf_BFu9ll { unsigned long long v1:32; empty v2; unsigned long long v3:9; };
struct BFu32ll_Sf_BFu9s { unsigned long long v1:32; empty v2; unsigned short v3:9; };
struct BFu32ll_Sf_C { unsigned long long v1:32; empty v2; char v3; };
struct BFu32ll_Sf_D { unsigned long long v1:32; empty v2; double v3; };
struct BFu32ll_Sf_F { unsigned long long v1:32; empty v2; float v3; };
struct BFu32ll_Sf_I { unsigned long long v1:32; empty v2; int v3; };
struct BFu32ll_Sf_Ip { unsigned long long v1:32; empty v2; int * v3; };
struct BFu32ll_Sf_L { unsigned long long v1:32; empty v2; long long v3; };
struct BFu32ll_Sf_S { unsigned long long v1:32; empty v2; short v3; };
struct BFu32ll_Sf_Sf { unsigned long long v1:32; empty v2; empty v3; };
struct BFu32ll_Sf_Uc { unsigned long long v1:32; empty v2; unsigned char v3; };
struct BFu32ll_Sf_Ui { unsigned long long v1:32; empty v2; unsigned int v3; };
struct BFu32ll_Sf_Ul { unsigned long long v1:32; empty v2; unsigned long long v3; };
struct BFu32ll_Sf_Us { unsigned long long v1:32; empty v2; unsigned short v3; };
struct BFu32ll_Sf_Vp { unsigned long long v1:32; empty v2; void * v3; };
struct BFu32ll_Uc_Sf { unsigned long long v1:32; unsigned char v2; empty v3; };
struct BFu32ll_Ui_Sf { unsigned long long v1:32; unsigned int v2; empty v3; };
struct BFu32ll_Ul_Sf { unsigned long long v1:32; unsigned long long v2; empty v3; };
struct BFu32ll_Us_Sf { unsigned long long v1:32; unsigned short v2; empty v3; };
struct BFu32ll_Vp_Sf { unsigned long long v1:32; void * v2; empty v3; };
struct BFu33_BFu15i_Sf { unsigned long long v1:33; unsigned int v2:15; empty v3; };
struct BFu33_BFu15ll_Sf { unsigned long long v1:33; unsigned long long v2:15; empty v3; };
struct BFu33_BFu15s_Sf { unsigned long long v1:33; unsigned short v2:15; empty v3; };
struct BFu33_BFu16i_Sf { unsigned long long v1:33; unsigned int v2:16; empty v3; };
struct BFu33_BFu16ll_Sf { unsigned long long v1:33; unsigned long long v2:16; empty v3; };
struct BFu33_BFu16s_Sf { unsigned long long v1:33; unsigned short v2:16; empty v3; };
struct BFu33_BFu17i_Sf { unsigned long long v1:33; unsigned int v2:17; empty v3; };
struct BFu33_BFu17ll_Sf { unsigned long long v1:33; unsigned long long v2:17; empty v3; };
struct BFu33_BFu1c_Sf { unsigned long long v1:33; unsigned char v2:1; empty v3; };
struct BFu33_BFu1i_Sf { unsigned long long v1:33; unsigned int v2:1; empty v3; };
struct BFu33_BFu1ll_Sf { unsigned long long v1:33; unsigned long long v2:1; empty v3; };
struct BFu33_BFu1s_Sf { unsigned long long v1:33; unsigned short v2:1; empty v3; };
struct BFu33_BFu31i_Sf { unsigned long long v1:33; unsigned int v2:31; empty v3; };
struct BFu33_BFu31ll_Sf { unsigned long long v1:33; unsigned long long v2:31; empty v3; };
struct BFu33_BFu32i_Sf { unsigned long long v1:33; unsigned int v2:32; empty v3; };
struct BFu33_BFu32ll_Sf { unsigned long long v1:33; unsigned long long v2:32; empty v3; };
struct BFu33_BFu33_Sf { unsigned long long v1:33; unsigned long long v2:33; empty v3; };
struct BFu33_BFu7c_Sf { unsigned long long v1:33; unsigned char v2:7; empty v3; };
struct BFu33_BFu7i_Sf { unsigned long long v1:33; unsigned int v2:7; empty v3; };
struct BFu33_BFu7ll_Sf { unsigned long long v1:33; unsigned long long v2:7; empty v3; };
struct BFu33_BFu7s_Sf { unsigned long long v1:33; unsigned short v2:7; empty v3; };
struct BFu33_BFu8c_Sf { unsigned long long v1:33; unsigned char v2:8; empty v3; };
struct BFu33_BFu8i_Sf { unsigned long long v1:33; unsigned int v2:8; empty v3; };
struct BFu33_BFu8ll_Sf { unsigned long long v1:33; unsigned long long v2:8; empty v3; };
struct BFu33_BFu8s_Sf { unsigned long long v1:33; unsigned short v2:8; empty v3; };
struct BFu33_BFu9i_Sf { unsigned long long v1:33; unsigned int v2:9; empty v3; };
struct BFu33_BFu9ll_Sf { unsigned long long v1:33; unsigned long long v2:9; empty v3; };
struct BFu33_BFu9s_Sf { unsigned long long v1:33; unsigned short v2:9; empty v3; };
struct BFu33_C_Sf { unsigned long long v1:33; char v2; empty v3; };
struct BFu33_D_Sf { unsigned long long v1:33; double v2; empty v3; };
struct BFu33_F_Sf { unsigned long long v1:33; float v2; empty v3; };
struct BFu33_I_Sf { unsigned long long v1:33; int v2; empty v3; };
struct BFu33_Ip_Sf { unsigned long long v1:33; int * v2; empty v3; };
struct BFu33_L_Sf { unsigned long long v1:33; long long v2; empty v3; };
struct BFu33_S_Sf { unsigned long long v1:33; short v2; empty v3; };
struct BFu33_Sf { unsigned long long v1:33; empty v2; };
struct BFu33_Sf_BFu15i { unsigned long long v1:33; empty v2; unsigned int v3:15; };
struct BFu33_Sf_BFu15ll { unsigned long long v1:33; empty v2; unsigned long long v3:15; };
struct BFu33_Sf_BFu15s { unsigned long long v1:33; empty v2; unsigned short v3:15; };
struct BFu33_Sf_BFu16i { unsigned long long v1:33; empty v2; unsigned int v3:16; };
struct BFu33_Sf_BFu16ll { unsigned long long v1:33; empty v2; unsigned long long v3:16; };
struct BFu33_Sf_BFu16s { unsigned long long v1:33; empty v2; unsigned short v3:16; };
struct BFu33_Sf_BFu17i { unsigned long long v1:33; empty v2; unsigned int v3:17; };
struct BFu33_Sf_BFu17ll { unsigned long long v1:33; empty v2; unsigned long long v3:17; };
struct BFu33_Sf_BFu1c { unsigned long long v1:33; empty v2; unsigned char v3:1; };
struct BFu33_Sf_BFu1i { unsigned long long v1:33; empty v2; unsigned int v3:1; };
struct BFu33_Sf_BFu1ll { unsigned long long v1:33; empty v2; unsigned long long v3:1; };
struct BFu33_Sf_BFu1s { unsigned long long v1:33; empty v2; unsigned short v3:1; };
struct BFu33_Sf_BFu31i { unsigned long long v1:33; empty v2; unsigned int v3:31; };
struct BFu33_Sf_BFu31ll { unsigned long long v1:33; empty v2; unsigned long long v3:31; };
struct BFu33_Sf_BFu32i { unsigned long long v1:33; empty v2; unsigned int v3:32; };
struct BFu33_Sf_BFu32ll { unsigned long long v1:33; empty v2; unsigned long long v3:32; };
struct BFu33_Sf_BFu33 { unsigned long long v1:33; empty v2; unsigned long long v3:33; };
struct BFu33_Sf_BFu7c { unsigned long long v1:33; empty v2; unsigned char v3:7; };
struct BFu33_Sf_BFu7i { unsigned long long v1:33; empty v2; unsigned int v3:7; };
struct BFu33_Sf_BFu7ll { unsigned long long v1:33; empty v2; unsigned long long v3:7; };
struct BFu33_Sf_BFu7s { unsigned long long v1:33; empty v2; unsigned short v3:7; };
struct BFu33_Sf_BFu8c { unsigned long long v1:33; empty v2; unsigned char v3:8; };
struct BFu33_Sf_BFu8i { unsigned long long v1:33; empty v2; unsigned int v3:8; };
struct BFu33_Sf_BFu8ll { unsigned long long v1:33; empty v2; unsigned long long v3:8; };
struct BFu33_Sf_BFu8s { unsigned long long v1:33; empty v2; unsigned short v3:8; };
struct BFu33_Sf_BFu9i { unsigned long long v1:33; empty v2; unsigned int v3:9; };
struct BFu33_Sf_BFu9ll { unsigned long long v1:33; empty v2; unsigned long long v3:9; };
struct BFu33_Sf_BFu9s { unsigned long long v1:33; empty v2; unsigned short v3:9; };
struct BFu33_Sf_C { unsigned long long v1:33; empty v2; char v3; };
struct BFu33_Sf_D { unsigned long long v1:33; empty v2; double v3; };
struct BFu33_Sf_F { unsigned long long v1:33; empty v2; float v3; };
struct BFu33_Sf_I { unsigned long long v1:33; empty v2; int v3; };
struct BFu33_Sf_Ip { unsigned long long v1:33; empty v2; int * v3; };
struct BFu33_Sf_L { unsigned long long v1:33; empty v2; long long v3; };
struct BFu33_Sf_S { unsigned long long v1:33; empty v2; short v3; };
struct BFu33_Sf_Sf { unsigned long long v1:33; empty v2; empty v3; };
struct BFu33_Sf_Uc { unsigned long long v1:33; empty v2; unsigned char v3; };
struct BFu33_Sf_Ui { unsigned long long v1:33; empty v2; unsigned int v3; };
struct BFu33_Sf_Ul { unsigned long long v1:33; empty v2; unsigned long long v3; };
struct BFu33_Sf_Us { unsigned long long v1:33; empty v2; unsigned short v3; };
struct BFu33_Sf_Vp { unsigned long long v1:33; empty v2; void * v3; };
struct BFu33_Uc_Sf { unsigned long long v1:33; unsigned char v2; empty v3; };
struct BFu33_Ui_Sf { unsigned long long v1:33; unsigned int v2; empty v3; };
struct BFu33_Ul_Sf { unsigned long long v1:33; unsigned long long v2; empty v3; };
struct BFu33_Us_Sf { unsigned long long v1:33; unsigned short v2; empty v3; };
struct BFu33_Vp_Sf { unsigned long long v1:33; void * v2; empty v3; };
struct BFu7c_BFu15i_Sf { unsigned char v1:7; unsigned int v2:15; empty v3; };
struct BFu7c_BFu15ll_Sf { unsigned char v1:7; unsigned long long v2:15; empty v3; };
struct BFu7c_BFu15s_Sf { unsigned char v1:7; unsigned short v2:15; empty v3; };
struct BFu7c_BFu16i_Sf { unsigned char v1:7; unsigned int v2:16; empty v3; };
struct BFu7c_BFu16ll_Sf { unsigned char v1:7; unsigned long long v2:16; empty v3; };
struct BFu7c_BFu16s_Sf { unsigned char v1:7; unsigned short v2:16; empty v3; };
struct BFu7c_BFu17i_Sf { unsigned char v1:7; unsigned int v2:17; empty v3; };
struct BFu7c_BFu17ll_Sf { unsigned char v1:7; unsigned long long v2:17; empty v3; };
struct BFu7c_BFu1c_Sf { unsigned char v1:7; unsigned char v2:1; empty v3; };
struct BFu7c_BFu1i_Sf { unsigned char v1:7; unsigned int v2:1; empty v3; };
struct BFu7c_BFu1ll_Sf { unsigned char v1:7; unsigned long long v2:1; empty v3; };
struct BFu7c_BFu1s_Sf { unsigned char v1:7; unsigned short v2:1; empty v3; };
struct BFu7c_BFu31i_Sf { unsigned char v1:7; unsigned int v2:31; empty v3; };
struct BFu7c_BFu31ll_Sf { unsigned char v1:7; unsigned long long v2:31; empty v3; };
struct BFu7c_BFu32i_Sf { unsigned char v1:7; unsigned int v2:32; empty v3; };
struct BFu7c_BFu32ll_Sf { unsigned char v1:7; unsigned long long v2:32; empty v3; };
struct BFu7c_BFu33_Sf { unsigned char v1:7; unsigned long long v2:33; empty v3; };
struct BFu7c_BFu7c_Sf { unsigned char v1:7; unsigned char v2:7; empty v3; };
struct BFu7c_BFu7i_Sf { unsigned char v1:7; unsigned int v2:7; empty v3; };
struct BFu7c_BFu7ll_Sf { unsigned char v1:7; unsigned long long v2:7; empty v3; };
struct BFu7c_BFu7s_Sf { unsigned char v1:7; unsigned short v2:7; empty v3; };
struct BFu7c_BFu8c_Sf { unsigned char v1:7; unsigned char v2:8; empty v3; };
struct BFu7c_BFu8i_Sf { unsigned char v1:7; unsigned int v2:8; empty v3; };
struct BFu7c_BFu8ll_Sf { unsigned char v1:7; unsigned long long v2:8; empty v3; };
struct BFu7c_BFu8s_Sf { unsigned char v1:7; unsigned short v2:8; empty v3; };
struct BFu7c_BFu9i_Sf { unsigned char v1:7; unsigned int v2:9; empty v3; };
struct BFu7c_BFu9ll_Sf { unsigned char v1:7; unsigned long long v2:9; empty v3; };
struct BFu7c_BFu9s_Sf { unsigned char v1:7; unsigned short v2:9; empty v3; };
struct BFu7c_C_Sf { unsigned char v1:7; char v2; empty v3; };
struct BFu7c_D_Sf { unsigned char v1:7; double v2; empty v3; };
struct BFu7c_F_Sf { unsigned char v1:7; float v2; empty v3; };
struct BFu7c_I_Sf { unsigned char v1:7; int v2; empty v3; };
struct BFu7c_Ip_Sf { unsigned char v1:7; int * v2; empty v3; };
struct BFu7c_L_Sf { unsigned char v1:7; long long v2; empty v3; };
struct BFu7c_S_Sf { unsigned char v1:7; short v2; empty v3; };
struct BFu7c_Sf { unsigned char v1:7; empty v2; };
struct BFu7c_Sf_BFu15i { unsigned char v1:7; empty v2; unsigned int v3:15; };
struct BFu7c_Sf_BFu15ll { unsigned char v1:7; empty v2; unsigned long long v3:15; };
struct BFu7c_Sf_BFu15s { unsigned char v1:7; empty v2; unsigned short v3:15; };
struct BFu7c_Sf_BFu16i { unsigned char v1:7; empty v2; unsigned int v3:16; };
struct BFu7c_Sf_BFu16ll { unsigned char v1:7; empty v2; unsigned long long v3:16; };
struct BFu7c_Sf_BFu16s { unsigned char v1:7; empty v2; unsigned short v3:16; };
struct BFu7c_Sf_BFu17i { unsigned char v1:7; empty v2; unsigned int v3:17; };
struct BFu7c_Sf_BFu17ll { unsigned char v1:7; empty v2; unsigned long long v3:17; };
struct BFu7c_Sf_BFu1c { unsigned char v1:7; empty v2; unsigned char v3:1; };
struct BFu7c_Sf_BFu1i { unsigned char v1:7; empty v2; unsigned int v3:1; };
struct BFu7c_Sf_BFu1ll { unsigned char v1:7; empty v2; unsigned long long v3:1; };
struct BFu7c_Sf_BFu1s { unsigned char v1:7; empty v2; unsigned short v3:1; };
struct BFu7c_Sf_BFu31i { unsigned char v1:7; empty v2; unsigned int v3:31; };
struct BFu7c_Sf_BFu31ll { unsigned char v1:7; empty v2; unsigned long long v3:31; };
struct BFu7c_Sf_BFu32i { unsigned char v1:7; empty v2; unsigned int v3:32; };
struct BFu7c_Sf_BFu32ll { unsigned char v1:7; empty v2; unsigned long long v3:32; };
struct BFu7c_Sf_BFu33 { unsigned char v1:7; empty v2; unsigned long long v3:33; };
struct BFu7c_Sf_BFu7c { unsigned char v1:7; empty v2; unsigned char v3:7; };
struct BFu7c_Sf_BFu7i { unsigned char v1:7; empty v2; unsigned int v3:7; };
struct BFu7c_Sf_BFu7ll { unsigned char v1:7; empty v2; unsigned long long v3:7; };
struct BFu7c_Sf_BFu7s { unsigned char v1:7; empty v2; unsigned short v3:7; };
struct BFu7c_Sf_BFu8c { unsigned char v1:7; empty v2; unsigned char v3:8; };
struct BFu7c_Sf_BFu8i { unsigned char v1:7; empty v2; unsigned int v3:8; };
struct BFu7c_Sf_BFu8ll { unsigned char v1:7; empty v2; unsigned long long v3:8; };
struct BFu7c_Sf_BFu8s { unsigned char v1:7; empty v2; unsigned short v3:8; };
struct BFu7c_Sf_BFu9i { unsigned char v1:7; empty v2; unsigned int v3:9; };
struct BFu7c_Sf_BFu9ll { unsigned char v1:7; empty v2; unsigned long long v3:9; };
struct BFu7c_Sf_BFu9s { unsigned char v1:7; empty v2; unsigned short v3:9; };
struct BFu7c_Sf_C { unsigned char v1:7; empty v2; char v3; };
struct BFu7c_Sf_D { unsigned char v1:7; empty v2; double v3; };
struct BFu7c_Sf_F { unsigned char v1:7; empty v2; float v3; };
struct BFu7c_Sf_I { unsigned char v1:7; empty v2; int v3; };
struct BFu7c_Sf_Ip { unsigned char v1:7; empty v2; int * v3; };
struct BFu7c_Sf_L { unsigned char v1:7; empty v2; long long v3; };
struct BFu7c_Sf_S { unsigned char v1:7; empty v2; short v3; };
struct BFu7c_Sf_Sf { unsigned char v1:7; empty v2; empty v3; };
struct BFu7c_Sf_Uc { unsigned char v1:7; empty v2; unsigned char v3; };
struct BFu7c_Sf_Ui { unsigned char v1:7; empty v2; unsigned int v3; };
struct BFu7c_Sf_Ul { unsigned char v1:7; empty v2; unsigned long long v3; };
struct BFu7c_Sf_Us { unsigned char v1:7; empty v2; unsigned short v3; };
struct BFu7c_Sf_Vp { unsigned char v1:7; empty v2; void * v3; };
struct BFu7c_Uc_Sf { unsigned char v1:7; unsigned char v2; empty v3; };
struct BFu7c_Ui_Sf { unsigned char v1:7; unsigned int v2; empty v3; };
struct BFu7c_Ul_Sf { unsigned char v1:7; unsigned long long v2; empty v3; };
struct BFu7c_Us_Sf { unsigned char v1:7; unsigned short v2; empty v3; };
struct BFu7c_Vp_Sf { unsigned char v1:7; void * v2; empty v3; };
struct BFu7i_BFu15i_Sf { unsigned int v1:7; unsigned int v2:15; empty v3; };
struct BFu7i_BFu15ll_Sf { unsigned int v1:7; unsigned long long v2:15; empty v3; };
struct BFu7i_BFu15s_Sf { unsigned int v1:7; unsigned short v2:15; empty v3; };
struct BFu7i_BFu16i_Sf { unsigned int v1:7; unsigned int v2:16; empty v3; };
struct BFu7i_BFu16ll_Sf { unsigned int v1:7; unsigned long long v2:16; empty v3; };
struct BFu7i_BFu16s_Sf { unsigned int v1:7; unsigned short v2:16; empty v3; };
struct BFu7i_BFu17i_Sf { unsigned int v1:7; unsigned int v2:17; empty v3; };
struct BFu7i_BFu17ll_Sf { unsigned int v1:7; unsigned long long v2:17; empty v3; };
struct BFu7i_BFu1c_Sf { unsigned int v1:7; unsigned char v2:1; empty v3; };
struct BFu7i_BFu1i_Sf { unsigned int v1:7; unsigned int v2:1; empty v3; };
struct BFu7i_BFu1ll_Sf { unsigned int v1:7; unsigned long long v2:1; empty v3; };
struct BFu7i_BFu1s_Sf { unsigned int v1:7; unsigned short v2:1; empty v3; };
struct BFu7i_BFu31i_Sf { unsigned int v1:7; unsigned int v2:31; empty v3; };
struct BFu7i_BFu31ll_Sf { unsigned int v1:7; unsigned long long v2:31; empty v3; };
struct BFu7i_BFu32i_Sf { unsigned int v1:7; unsigned int v2:32; empty v3; };
struct BFu7i_BFu32ll_Sf { unsigned int v1:7; unsigned long long v2:32; empty v3; };
struct BFu7i_BFu33_Sf { unsigned int v1:7; unsigned long long v2:33; empty v3; };
struct BFu7i_BFu7c_Sf { unsigned int v1:7; unsigned char v2:7; empty v3; };
struct BFu7i_BFu7i_Sf { unsigned int v1:7; unsigned int v2:7; empty v3; };
struct BFu7i_BFu7ll_Sf { unsigned int v1:7; unsigned long long v2:7; empty v3; };
struct BFu7i_BFu7s_Sf { unsigned int v1:7; unsigned short v2:7; empty v3; };
struct BFu7i_BFu8c_Sf { unsigned int v1:7; unsigned char v2:8; empty v3; };
struct BFu7i_BFu8i_Sf { unsigned int v1:7; unsigned int v2:8; empty v3; };
struct BFu7i_BFu8ll_Sf { unsigned int v1:7; unsigned long long v2:8; empty v3; };
struct BFu7i_BFu8s_Sf { unsigned int v1:7; unsigned short v2:8; empty v3; };
struct BFu7i_BFu9i_Sf { unsigned int v1:7; unsigned int v2:9; empty v3; };
struct BFu7i_BFu9ll_Sf { unsigned int v1:7; unsigned long long v2:9; empty v3; };
struct BFu7i_BFu9s_Sf { unsigned int v1:7; unsigned short v2:9; empty v3; };
struct BFu7i_C_Sf { unsigned int v1:7; char v2; empty v3; };
struct BFu7i_D_Sf { unsigned int v1:7; double v2; empty v3; };
struct BFu7i_F_Sf { unsigned int v1:7; float v2; empty v3; };
struct BFu7i_I_Sf { unsigned int v1:7; int v2; empty v3; };
struct BFu7i_Ip_Sf { unsigned int v1:7; int * v2; empty v3; };
struct BFu7i_L_Sf { unsigned int v1:7; long long v2; empty v3; };
struct BFu7i_S_Sf { unsigned int v1:7; short v2; empty v3; };
struct BFu7i_Sf { unsigned int v1:7; empty v2; };
struct BFu7i_Sf_BFu15i { unsigned int v1:7; empty v2; unsigned int v3:15; };
struct BFu7i_Sf_BFu15ll { unsigned int v1:7; empty v2; unsigned long long v3:15; };
struct BFu7i_Sf_BFu15s { unsigned int v1:7; empty v2; unsigned short v3:15; };
struct BFu7i_Sf_BFu16i { unsigned int v1:7; empty v2; unsigned int v3:16; };
struct BFu7i_Sf_BFu16ll { unsigned int v1:7; empty v2; unsigned long long v3:16; };
struct BFu7i_Sf_BFu16s { unsigned int v1:7; empty v2; unsigned short v3:16; };
struct BFu7i_Sf_BFu17i { unsigned int v1:7; empty v2; unsigned int v3:17; };
struct BFu7i_Sf_BFu17ll { unsigned int v1:7; empty v2; unsigned long long v3:17; };
struct BFu7i_Sf_BFu1c { unsigned int v1:7; empty v2; unsigned char v3:1; };
struct BFu7i_Sf_BFu1i { unsigned int v1:7; empty v2; unsigned int v3:1; };
struct BFu7i_Sf_BFu1ll { unsigned int v1:7; empty v2; unsigned long long v3:1; };
struct BFu7i_Sf_BFu1s { unsigned int v1:7; empty v2; unsigned short v3:1; };
struct BFu7i_Sf_BFu31i { unsigned int v1:7; empty v2; unsigned int v3:31; };
struct BFu7i_Sf_BFu31ll { unsigned int v1:7; empty v2; unsigned long long v3:31; };
struct BFu7i_Sf_BFu32i { unsigned int v1:7; empty v2; unsigned int v3:32; };
struct BFu7i_Sf_BFu32ll { unsigned int v1:7; empty v2; unsigned long long v3:32; };
struct BFu7i_Sf_BFu33 { unsigned int v1:7; empty v2; unsigned long long v3:33; };
struct BFu7i_Sf_BFu7c { unsigned int v1:7; empty v2; unsigned char v3:7; };
struct BFu7i_Sf_BFu7i { unsigned int v1:7; empty v2; unsigned int v3:7; };
struct BFu7i_Sf_BFu7ll { unsigned int v1:7; empty v2; unsigned long long v3:7; };
struct BFu7i_Sf_BFu7s { unsigned int v1:7; empty v2; unsigned short v3:7; };
struct BFu7i_Sf_BFu8c { unsigned int v1:7; empty v2; unsigned char v3:8; };
struct BFu7i_Sf_BFu8i { unsigned int v1:7; empty v2; unsigned int v3:8; };
struct BFu7i_Sf_BFu8ll { unsigned int v1:7; empty v2; unsigned long long v3:8; };
struct BFu7i_Sf_BFu8s { unsigned int v1:7; empty v2; unsigned short v3:8; };
struct BFu7i_Sf_BFu9i { unsigned int v1:7; empty v2; unsigned int v3:9; };
struct BFu7i_Sf_BFu9ll { unsigned int v1:7; empty v2; unsigned long long v3:9; };
struct BFu7i_Sf_BFu9s { unsigned int v1:7; empty v2; unsigned short v3:9; };
struct BFu7i_Sf_C { unsigned int v1:7; empty v2; char v3; };
struct BFu7i_Sf_D { unsigned int v1:7; empty v2; double v3; };
struct BFu7i_Sf_F { unsigned int v1:7; empty v2; float v3; };
struct BFu7i_Sf_I { unsigned int v1:7; empty v2; int v3; };
struct BFu7i_Sf_Ip { unsigned int v1:7; empty v2; int * v3; };
struct BFu7i_Sf_L { unsigned int v1:7; empty v2; long long v3; };
struct BFu7i_Sf_S { unsigned int v1:7; empty v2; short v3; };
struct BFu7i_Sf_Sf { unsigned int v1:7; empty v2; empty v3; };
struct BFu7i_Sf_Uc { unsigned int v1:7; empty v2; unsigned char v3; };
struct BFu7i_Sf_Ui { unsigned int v1:7; empty v2; unsigned int v3; };
struct BFu7i_Sf_Ul { unsigned int v1:7; empty v2; unsigned long long v3; };
struct BFu7i_Sf_Us { unsigned int v1:7; empty v2; unsigned short v3; };
struct BFu7i_Sf_Vp { unsigned int v1:7; empty v2; void * v3; };
struct BFu7i_Uc_Sf { unsigned int v1:7; unsigned char v2; empty v3; };
struct BFu7i_Ui_Sf { unsigned int v1:7; unsigned int v2; empty v3; };
struct BFu7i_Ul_Sf { unsigned int v1:7; unsigned long long v2; empty v3; };
struct BFu7i_Us_Sf { unsigned int v1:7; unsigned short v2; empty v3; };
struct BFu7i_Vp_Sf { unsigned int v1:7; void * v2; empty v3; };
struct BFu7ll_BFu15i_Sf { unsigned long long v1:7; unsigned int v2:15; empty v3; };
struct BFu7ll_BFu15ll_Sf { unsigned long long v1:7; unsigned long long v2:15; empty v3; };
struct BFu7ll_BFu15s_Sf { unsigned long long v1:7; unsigned short v2:15; empty v3; };
struct BFu7ll_BFu16i_Sf { unsigned long long v1:7; unsigned int v2:16; empty v3; };
struct BFu7ll_BFu16ll_Sf { unsigned long long v1:7; unsigned long long v2:16; empty v3; };
struct BFu7ll_BFu16s_Sf { unsigned long long v1:7; unsigned short v2:16; empty v3; };
struct BFu7ll_BFu17i_Sf { unsigned long long v1:7; unsigned int v2:17; empty v3; };
struct BFu7ll_BFu17ll_Sf { unsigned long long v1:7; unsigned long long v2:17; empty v3; };
struct BFu7ll_BFu1c_Sf { unsigned long long v1:7; unsigned char v2:1; empty v3; };
struct BFu7ll_BFu1i_Sf { unsigned long long v1:7; unsigned int v2:1; empty v3; };
struct BFu7ll_BFu1ll_Sf { unsigned long long v1:7; unsigned long long v2:1; empty v3; };
struct BFu7ll_BFu1s_Sf { unsigned long long v1:7; unsigned short v2:1; empty v3; };
struct BFu7ll_BFu31i_Sf { unsigned long long v1:7; unsigned int v2:31; empty v3; };
struct BFu7ll_BFu31ll_Sf { unsigned long long v1:7; unsigned long long v2:31; empty v3; };
struct BFu7ll_BFu32i_Sf { unsigned long long v1:7; unsigned int v2:32; empty v3; };
struct BFu7ll_BFu32ll_Sf { unsigned long long v1:7; unsigned long long v2:32; empty v3; };
struct BFu7ll_BFu33_Sf { unsigned long long v1:7; unsigned long long v2:33; empty v3; };
struct BFu7ll_BFu7c_Sf { unsigned long long v1:7; unsigned char v2:7; empty v3; };
struct BFu7ll_BFu7i_Sf { unsigned long long v1:7; unsigned int v2:7; empty v3; };
struct BFu7ll_BFu7ll_Sf { unsigned long long v1:7; unsigned long long v2:7; empty v3; };
struct BFu7ll_BFu7s_Sf { unsigned long long v1:7; unsigned short v2:7; empty v3; };
struct BFu7ll_BFu8c_Sf { unsigned long long v1:7; unsigned char v2:8; empty v3; };
struct BFu7ll_BFu8i_Sf { unsigned long long v1:7; unsigned int v2:8; empty v3; };
struct BFu7ll_BFu8ll_Sf { unsigned long long v1:7; unsigned long long v2:8; empty v3; };
struct BFu7ll_BFu8s_Sf { unsigned long long v1:7; unsigned short v2:8; empty v3; };
struct BFu7ll_BFu9i_Sf { unsigned long long v1:7; unsigned int v2:9; empty v3; };
struct BFu7ll_BFu9ll_Sf { unsigned long long v1:7; unsigned long long v2:9; empty v3; };
struct BFu7ll_BFu9s_Sf { unsigned long long v1:7; unsigned short v2:9; empty v3; };
struct BFu7ll_C_Sf { unsigned long long v1:7; char v2; empty v3; };
struct BFu7ll_D_Sf { unsigned long long v1:7; double v2; empty v3; };
struct BFu7ll_F_Sf { unsigned long long v1:7; float v2; empty v3; };
struct BFu7ll_I_Sf { unsigned long long v1:7; int v2; empty v3; };
struct BFu7ll_Ip_Sf { unsigned long long v1:7; int * v2; empty v3; };
struct BFu7ll_L_Sf { unsigned long long v1:7; long long v2; empty v3; };
struct BFu7ll_S_Sf { unsigned long long v1:7; short v2; empty v3; };
struct BFu7ll_Sf { unsigned long long v1:7; empty v2; };
struct BFu7ll_Sf_BFu15i { unsigned long long v1:7; empty v2; unsigned int v3:15; };
struct BFu7ll_Sf_BFu15ll { unsigned long long v1:7; empty v2; unsigned long long v3:15; };
struct BFu7ll_Sf_BFu15s { unsigned long long v1:7; empty v2; unsigned short v3:15; };
struct BFu7ll_Sf_BFu16i { unsigned long long v1:7; empty v2; unsigned int v3:16; };
struct BFu7ll_Sf_BFu16ll { unsigned long long v1:7; empty v2; unsigned long long v3:16; };
struct BFu7ll_Sf_BFu16s { unsigned long long v1:7; empty v2; unsigned short v3:16; };
struct BFu7ll_Sf_BFu17i { unsigned long long v1:7; empty v2; unsigned int v3:17; };
struct BFu7ll_Sf_BFu17ll { unsigned long long v1:7; empty v2; unsigned long long v3:17; };
struct BFu7ll_Sf_BFu1c { unsigned long long v1:7; empty v2; unsigned char v3:1; };
struct BFu7ll_Sf_BFu1i { unsigned long long v1:7; empty v2; unsigned int v3:1; };
struct BFu7ll_Sf_BFu1ll { unsigned long long v1:7; empty v2; unsigned long long v3:1; };
struct BFu7ll_Sf_BFu1s { unsigned long long v1:7; empty v2; unsigned short v3:1; };
struct BFu7ll_Sf_BFu31i { unsigned long long v1:7; empty v2; unsigned int v3:31; };
struct BFu7ll_Sf_BFu31ll { unsigned long long v1:7; empty v2; unsigned long long v3:31; };
struct BFu7ll_Sf_BFu32i { unsigned long long v1:7; empty v2; unsigned int v3:32; };
struct BFu7ll_Sf_BFu32ll { unsigned long long v1:7; empty v2; unsigned long long v3:32; };
struct BFu7ll_Sf_BFu33 { unsigned long long v1:7; empty v2; unsigned long long v3:33; };
struct BFu7ll_Sf_BFu7c { unsigned long long v1:7; empty v2; unsigned char v3:7; };
struct BFu7ll_Sf_BFu7i { unsigned long long v1:7; empty v2; unsigned int v3:7; };
struct BFu7ll_Sf_BFu7ll { unsigned long long v1:7; empty v2; unsigned long long v3:7; };
struct BFu7ll_Sf_BFu7s { unsigned long long v1:7; empty v2; unsigned short v3:7; };
struct BFu7ll_Sf_BFu8c { unsigned long long v1:7; empty v2; unsigned char v3:8; };
struct BFu7ll_Sf_BFu8i { unsigned long long v1:7; empty v2; unsigned int v3:8; };
struct BFu7ll_Sf_BFu8ll { unsigned long long v1:7; empty v2; unsigned long long v3:8; };
struct BFu7ll_Sf_BFu8s { unsigned long long v1:7; empty v2; unsigned short v3:8; };
struct BFu7ll_Sf_BFu9i { unsigned long long v1:7; empty v2; unsigned int v3:9; };
struct BFu7ll_Sf_BFu9ll { unsigned long long v1:7; empty v2; unsigned long long v3:9; };
struct BFu7ll_Sf_BFu9s { unsigned long long v1:7; empty v2; unsigned short v3:9; };
struct BFu7ll_Sf_C { unsigned long long v1:7; empty v2; char v3; };
struct BFu7ll_Sf_D { unsigned long long v1:7; empty v2; double v3; };
struct BFu7ll_Sf_F { unsigned long long v1:7; empty v2; float v3; };
struct BFu7ll_Sf_I { unsigned long long v1:7; empty v2; int v3; };
struct BFu7ll_Sf_Ip { unsigned long long v1:7; empty v2; int * v3; };
struct BFu7ll_Sf_L { unsigned long long v1:7; empty v2; long long v3; };
struct BFu7ll_Sf_S { unsigned long long v1:7; empty v2; short v3; };
struct BFu7ll_Sf_Sf { unsigned long long v1:7; empty v2; empty v3; };
struct BFu7ll_Sf_Uc { unsigned long long v1:7; empty v2; unsigned char v3; };
struct BFu7ll_Sf_Ui { unsigned long long v1:7; empty v2; unsigned int v3; };
struct BFu7ll_Sf_Ul { unsigned long long v1:7; empty v2; unsigned long long v3; };
struct BFu7ll_Sf_Us { unsigned long long v1:7; empty v2; unsigned short v3; };
struct BFu7ll_Sf_Vp { unsigned long long v1:7; empty v2; void * v3; };
struct BFu7ll_Uc_Sf { unsigned long long v1:7; unsigned char v2; empty v3; };
struct BFu7ll_Ui_Sf { unsigned long long v1:7; unsigned int v2; empty v3; };
struct BFu7ll_Ul_Sf { unsigned long long v1:7; unsigned long long v2; empty v3; };
struct BFu7ll_Us_Sf { unsigned long long v1:7; unsigned short v2; empty v3; };
struct BFu7ll_Vp_Sf { unsigned long long v1:7; void * v2; empty v3; };
struct BFu7s_BFu15i_Sf { unsigned short v1:7; unsigned int v2:15; empty v3; };
struct BFu7s_BFu15ll_Sf { unsigned short v1:7; unsigned long long v2:15; empty v3; };
struct BFu7s_BFu15s_Sf { unsigned short v1:7; unsigned short v2:15; empty v3; };
struct BFu7s_BFu16i_Sf { unsigned short v1:7; unsigned int v2:16; empty v3; };
struct BFu7s_BFu16ll_Sf { unsigned short v1:7; unsigned long long v2:16; empty v3; };
struct BFu7s_BFu16s_Sf { unsigned short v1:7; unsigned short v2:16; empty v3; };
struct BFu7s_BFu17i_Sf { unsigned short v1:7; unsigned int v2:17; empty v3; };
struct BFu7s_BFu17ll_Sf { unsigned short v1:7; unsigned long long v2:17; empty v3; };
struct BFu7s_BFu1c_Sf { unsigned short v1:7; unsigned char v2:1; empty v3; };
struct BFu7s_BFu1i_Sf { unsigned short v1:7; unsigned int v2:1; empty v3; };
struct BFu7s_BFu1ll_Sf { unsigned short v1:7; unsigned long long v2:1; empty v3; };
struct BFu7s_BFu1s_Sf { unsigned short v1:7; unsigned short v2:1; empty v3; };
struct BFu7s_BFu31i_Sf { unsigned short v1:7; unsigned int v2:31; empty v3; };
struct BFu7s_BFu31ll_Sf { unsigned short v1:7; unsigned long long v2:31; empty v3; };
struct BFu7s_BFu32i_Sf { unsigned short v1:7; unsigned int v2:32; empty v3; };
struct BFu7s_BFu32ll_Sf { unsigned short v1:7; unsigned long long v2:32; empty v3; };
struct BFu7s_BFu33_Sf { unsigned short v1:7; unsigned long long v2:33; empty v3; };
struct BFu7s_BFu7c_Sf { unsigned short v1:7; unsigned char v2:7; empty v3; };
struct BFu7s_BFu7i_Sf { unsigned short v1:7; unsigned int v2:7; empty v3; };
struct BFu7s_BFu7ll_Sf { unsigned short v1:7; unsigned long long v2:7; empty v3; };
struct BFu7s_BFu7s_Sf { unsigned short v1:7; unsigned short v2:7; empty v3; };
struct BFu7s_BFu8c_Sf { unsigned short v1:7; unsigned char v2:8; empty v3; };
struct BFu7s_BFu8i_Sf { unsigned short v1:7; unsigned int v2:8; empty v3; };
struct BFu7s_BFu8ll_Sf { unsigned short v1:7; unsigned long long v2:8; empty v3; };
struct BFu7s_BFu8s_Sf { unsigned short v1:7; unsigned short v2:8; empty v3; };
struct BFu7s_BFu9i_Sf { unsigned short v1:7; unsigned int v2:9; empty v3; };
struct BFu7s_BFu9ll_Sf { unsigned short v1:7; unsigned long long v2:9; empty v3; };
struct BFu7s_BFu9s_Sf { unsigned short v1:7; unsigned short v2:9; empty v3; };
struct BFu7s_C_Sf { unsigned short v1:7; char v2; empty v3; };
struct BFu7s_D_Sf { unsigned short v1:7; double v2; empty v3; };
struct BFu7s_F_Sf { unsigned short v1:7; float v2; empty v3; };
struct BFu7s_I_Sf { unsigned short v1:7; int v2; empty v3; };
struct BFu7s_Ip_Sf { unsigned short v1:7; int * v2; empty v3; };
struct BFu7s_L_Sf { unsigned short v1:7; long long v2; empty v3; };
struct BFu7s_S_Sf { unsigned short v1:7; short v2; empty v3; };
struct BFu7s_Sf { unsigned short v1:7; empty v2; };
struct BFu7s_Sf_BFu15i { unsigned short v1:7; empty v2; unsigned int v3:15; };
struct BFu7s_Sf_BFu15ll { unsigned short v1:7; empty v2; unsigned long long v3:15; };
struct BFu7s_Sf_BFu15s { unsigned short v1:7; empty v2; unsigned short v3:15; };
struct BFu7s_Sf_BFu16i { unsigned short v1:7; empty v2; unsigned int v3:16; };
struct BFu7s_Sf_BFu16ll { unsigned short v1:7; empty v2; unsigned long long v3:16; };
struct BFu7s_Sf_BFu16s { unsigned short v1:7; empty v2; unsigned short v3:16; };
struct BFu7s_Sf_BFu17i { unsigned short v1:7; empty v2; unsigned int v3:17; };
struct BFu7s_Sf_BFu17ll { unsigned short v1:7; empty v2; unsigned long long v3:17; };
struct BFu7s_Sf_BFu1c { unsigned short v1:7; empty v2; unsigned char v3:1; };
struct BFu7s_Sf_BFu1i { unsigned short v1:7; empty v2; unsigned int v3:1; };
struct BFu7s_Sf_BFu1ll { unsigned short v1:7; empty v2; unsigned long long v3:1; };
struct BFu7s_Sf_BFu1s { unsigned short v1:7; empty v2; unsigned short v3:1; };
struct BFu7s_Sf_BFu31i { unsigned short v1:7; empty v2; unsigned int v3:31; };
struct BFu7s_Sf_BFu31ll { unsigned short v1:7; empty v2; unsigned long long v3:31; };
struct BFu7s_Sf_BFu32i { unsigned short v1:7; empty v2; unsigned int v3:32; };
struct BFu7s_Sf_BFu32ll { unsigned short v1:7; empty v2; unsigned long long v3:32; };
struct BFu7s_Sf_BFu33 { unsigned short v1:7; empty v2; unsigned long long v3:33; };
struct BFu7s_Sf_BFu7c { unsigned short v1:7; empty v2; unsigned char v3:7; };
struct BFu7s_Sf_BFu7i { unsigned short v1:7; empty v2; unsigned int v3:7; };
struct BFu7s_Sf_BFu7ll { unsigned short v1:7; empty v2; unsigned long long v3:7; };
struct BFu7s_Sf_BFu7s { unsigned short v1:7; empty v2; unsigned short v3:7; };
struct BFu7s_Sf_BFu8c { unsigned short v1:7; empty v2; unsigned char v3:8; };
struct BFu7s_Sf_BFu8i { unsigned short v1:7; empty v2; unsigned int v3:8; };
struct BFu7s_Sf_BFu8ll { unsigned short v1:7; empty v2; unsigned long long v3:8; };
struct BFu7s_Sf_BFu8s { unsigned short v1:7; empty v2; unsigned short v3:8; };
struct BFu7s_Sf_BFu9i { unsigned short v1:7; empty v2; unsigned int v3:9; };
struct BFu7s_Sf_BFu9ll { unsigned short v1:7; empty v2; unsigned long long v3:9; };
struct BFu7s_Sf_BFu9s { unsigned short v1:7; empty v2; unsigned short v3:9; };
struct BFu7s_Sf_C { unsigned short v1:7; empty v2; char v3; };
struct BFu7s_Sf_D { unsigned short v1:7; empty v2; double v3; };
struct BFu7s_Sf_F { unsigned short v1:7; empty v2; float v3; };
struct BFu7s_Sf_I { unsigned short v1:7; empty v2; int v3; };
struct BFu7s_Sf_Ip { unsigned short v1:7; empty v2; int * v3; };
struct BFu7s_Sf_L { unsigned short v1:7; empty v2; long long v3; };
struct BFu7s_Sf_S { unsigned short v1:7; empty v2; short v3; };
struct BFu7s_Sf_Sf { unsigned short v1:7; empty v2; empty v3; };
struct BFu7s_Sf_Uc { unsigned short v1:7; empty v2; unsigned char v3; };
struct BFu7s_Sf_Ui { unsigned short v1:7; empty v2; unsigned int v3; };
struct BFu7s_Sf_Ul { unsigned short v1:7; empty v2; unsigned long long v3; };
struct BFu7s_Sf_Us { unsigned short v1:7; empty v2; unsigned short v3; };
struct BFu7s_Sf_Vp { unsigned short v1:7; empty v2; void * v3; };
struct BFu7s_Uc_Sf { unsigned short v1:7; unsigned char v2; empty v3; };
struct BFu7s_Ui_Sf { unsigned short v1:7; unsigned int v2; empty v3; };
struct BFu7s_Ul_Sf { unsigned short v1:7; unsigned long long v2; empty v3; };
struct BFu7s_Us_Sf { unsigned short v1:7; unsigned short v2; empty v3; };
struct BFu7s_Vp_Sf { unsigned short v1:7; void * v2; empty v3; };
struct BFu8c_BFu15i_Sf { unsigned char v1:8; unsigned int v2:15; empty v3; };
struct BFu8c_BFu15ll_Sf { unsigned char v1:8; unsigned long long v2:15; empty v3; };
struct BFu8c_BFu15s_Sf { unsigned char v1:8; unsigned short v2:15; empty v3; };
struct BFu8c_BFu16i_Sf { unsigned char v1:8; unsigned int v2:16; empty v3; };
struct BFu8c_BFu16ll_Sf { unsigned char v1:8; unsigned long long v2:16; empty v3; };
struct BFu8c_BFu16s_Sf { unsigned char v1:8; unsigned short v2:16; empty v3; };
struct BFu8c_BFu17i_Sf { unsigned char v1:8; unsigned int v2:17; empty v3; };
struct BFu8c_BFu17ll_Sf { unsigned char v1:8; unsigned long long v2:17; empty v3; };
struct BFu8c_BFu1c_Sf { unsigned char v1:8; unsigned char v2:1; empty v3; };
struct BFu8c_BFu1i_Sf { unsigned char v1:8; unsigned int v2:1; empty v3; };
struct BFu8c_BFu1ll_Sf { unsigned char v1:8; unsigned long long v2:1; empty v3; };
struct BFu8c_BFu1s_Sf { unsigned char v1:8; unsigned short v2:1; empty v3; };
struct BFu8c_BFu31i_Sf { unsigned char v1:8; unsigned int v2:31; empty v3; };
struct BFu8c_BFu31ll_Sf { unsigned char v1:8; unsigned long long v2:31; empty v3; };
struct BFu8c_BFu32i_Sf { unsigned char v1:8; unsigned int v2:32; empty v3; };
struct BFu8c_BFu32ll_Sf { unsigned char v1:8; unsigned long long v2:32; empty v3; };
struct BFu8c_BFu33_Sf { unsigned char v1:8; unsigned long long v2:33; empty v3; };
struct BFu8c_BFu7c_Sf { unsigned char v1:8; unsigned char v2:7; empty v3; };
struct BFu8c_BFu7i_Sf { unsigned char v1:8; unsigned int v2:7; empty v3; };
struct BFu8c_BFu7ll_Sf { unsigned char v1:8; unsigned long long v2:7; empty v3; };
struct BFu8c_BFu7s_Sf { unsigned char v1:8; unsigned short v2:7; empty v3; };
struct BFu8c_BFu8c_Sf { unsigned char v1:8; unsigned char v2:8; empty v3; };
struct BFu8c_BFu8i_Sf { unsigned char v1:8; unsigned int v2:8; empty v3; };
struct BFu8c_BFu8ll_Sf { unsigned char v1:8; unsigned long long v2:8; empty v3; };
struct BFu8c_BFu8s_Sf { unsigned char v1:8; unsigned short v2:8; empty v3; };
struct BFu8c_BFu9i_Sf { unsigned char v1:8; unsigned int v2:9; empty v3; };
struct BFu8c_BFu9ll_Sf { unsigned char v1:8; unsigned long long v2:9; empty v3; };
struct BFu8c_BFu9s_Sf { unsigned char v1:8; unsigned short v2:9; empty v3; };
struct BFu8c_C_Sf { unsigned char v1:8; char v2; empty v3; };
struct BFu8c_D_Sf { unsigned char v1:8; double v2; empty v3; };
struct BFu8c_F_Sf { unsigned char v1:8; float v2; empty v3; };
struct BFu8c_I_Sf { unsigned char v1:8; int v2; empty v3; };
struct BFu8c_Ip_Sf { unsigned char v1:8; int * v2; empty v3; };
struct BFu8c_L_Sf { unsigned char v1:8; long long v2; empty v3; };
struct BFu8c_S_Sf { unsigned char v1:8; short v2; empty v3; };
struct BFu8c_Sf { unsigned char v1:8; empty v2; };
struct BFu8c_Sf_BFu15i { unsigned char v1:8; empty v2; unsigned int v3:15; };
struct BFu8c_Sf_BFu15ll { unsigned char v1:8; empty v2; unsigned long long v3:15; };
struct BFu8c_Sf_BFu15s { unsigned char v1:8; empty v2; unsigned short v3:15; };
struct BFu8c_Sf_BFu16i { unsigned char v1:8; empty v2; unsigned int v3:16; };
struct BFu8c_Sf_BFu16ll { unsigned char v1:8; empty v2; unsigned long long v3:16; };
struct BFu8c_Sf_BFu16s { unsigned char v1:8; empty v2; unsigned short v3:16; };
struct BFu8c_Sf_BFu17i { unsigned char v1:8; empty v2; unsigned int v3:17; };
struct BFu8c_Sf_BFu17ll { unsigned char v1:8; empty v2; unsigned long long v3:17; };
struct BFu8c_Sf_BFu1c { unsigned char v1:8; empty v2; unsigned char v3:1; };
struct BFu8c_Sf_BFu1i { unsigned char v1:8; empty v2; unsigned int v3:1; };
struct BFu8c_Sf_BFu1ll { unsigned char v1:8; empty v2; unsigned long long v3:1; };
struct BFu8c_Sf_BFu1s { unsigned char v1:8; empty v2; unsigned short v3:1; };
struct BFu8c_Sf_BFu31i { unsigned char v1:8; empty v2; unsigned int v3:31; };
struct BFu8c_Sf_BFu31ll { unsigned char v1:8; empty v2; unsigned long long v3:31; };
struct BFu8c_Sf_BFu32i { unsigned char v1:8; empty v2; unsigned int v3:32; };
struct BFu8c_Sf_BFu32ll { unsigned char v1:8; empty v2; unsigned long long v3:32; };
struct BFu8c_Sf_BFu33 { unsigned char v1:8; empty v2; unsigned long long v3:33; };
struct BFu8c_Sf_BFu7c { unsigned char v1:8; empty v2; unsigned char v3:7; };
struct BFu8c_Sf_BFu7i { unsigned char v1:8; empty v2; unsigned int v3:7; };
struct BFu8c_Sf_BFu7ll { unsigned char v1:8; empty v2; unsigned long long v3:7; };
struct BFu8c_Sf_BFu7s { unsigned char v1:8; empty v2; unsigned short v3:7; };
struct BFu8c_Sf_BFu8c { unsigned char v1:8; empty v2; unsigned char v3:8; };
struct BFu8c_Sf_BFu8i { unsigned char v1:8; empty v2; unsigned int v3:8; };
struct BFu8c_Sf_BFu8ll { unsigned char v1:8; empty v2; unsigned long long v3:8; };
struct BFu8c_Sf_BFu8s { unsigned char v1:8; empty v2; unsigned short v3:8; };
struct BFu8c_Sf_BFu9i { unsigned char v1:8; empty v2; unsigned int v3:9; };
struct BFu8c_Sf_BFu9ll { unsigned char v1:8; empty v2; unsigned long long v3:9; };
struct BFu8c_Sf_BFu9s { unsigned char v1:8; empty v2; unsigned short v3:9; };
struct BFu8c_Sf_C { unsigned char v1:8; empty v2; char v3; };
struct BFu8c_Sf_D { unsigned char v1:8; empty v2; double v3; };
struct BFu8c_Sf_F { unsigned char v1:8; empty v2; float v3; };
struct BFu8c_Sf_I { unsigned char v1:8; empty v2; int v3; };
struct BFu8c_Sf_Ip { unsigned char v1:8; empty v2; int * v3; };
struct BFu8c_Sf_L { unsigned char v1:8; empty v2; long long v3; };
struct BFu8c_Sf_S { unsigned char v1:8; empty v2; short v3; };
struct BFu8c_Sf_Sf { unsigned char v1:8; empty v2; empty v3; };
struct BFu8c_Sf_Uc { unsigned char v1:8; empty v2; unsigned char v3; };
struct BFu8c_Sf_Ui { unsigned char v1:8; empty v2; unsigned int v3; };
struct BFu8c_Sf_Ul { unsigned char v1:8; empty v2; unsigned long long v3; };
struct BFu8c_Sf_Us { unsigned char v1:8; empty v2; unsigned short v3; };
struct BFu8c_Sf_Vp { unsigned char v1:8; empty v2; void * v3; };
struct BFu8c_Uc_Sf { unsigned char v1:8; unsigned char v2; empty v3; };
struct BFu8c_Ui_Sf { unsigned char v1:8; unsigned int v2; empty v3; };
struct BFu8c_Ul_Sf { unsigned char v1:8; unsigned long long v2; empty v3; };
struct BFu8c_Us_Sf { unsigned char v1:8; unsigned short v2; empty v3; };
struct BFu8c_Vp_Sf { unsigned char v1:8; void * v2; empty v3; };
struct BFu8i_BFu15i_Sf { unsigned int v1:8; unsigned int v2:15; empty v3; };
struct BFu8i_BFu15ll_Sf { unsigned int v1:8; unsigned long long v2:15; empty v3; };
struct BFu8i_BFu15s_Sf { unsigned int v1:8; unsigned short v2:15; empty v3; };
struct BFu8i_BFu16i_Sf { unsigned int v1:8; unsigned int v2:16; empty v3; };
struct BFu8i_BFu16ll_Sf { unsigned int v1:8; unsigned long long v2:16; empty v3; };
struct BFu8i_BFu16s_Sf { unsigned int v1:8; unsigned short v2:16; empty v3; };
struct BFu8i_BFu17i_Sf { unsigned int v1:8; unsigned int v2:17; empty v3; };
struct BFu8i_BFu17ll_Sf { unsigned int v1:8; unsigned long long v2:17; empty v3; };
struct BFu8i_BFu1c_Sf { unsigned int v1:8; unsigned char v2:1; empty v3; };
struct BFu8i_BFu1i_Sf { unsigned int v1:8; unsigned int v2:1; empty v3; };
struct BFu8i_BFu1ll_Sf { unsigned int v1:8; unsigned long long v2:1; empty v3; };
struct BFu8i_BFu1s_Sf { unsigned int v1:8; unsigned short v2:1; empty v3; };
struct BFu8i_BFu31i_Sf { unsigned int v1:8; unsigned int v2:31; empty v3; };
struct BFu8i_BFu31ll_Sf { unsigned int v1:8; unsigned long long v2:31; empty v3; };
struct BFu8i_BFu32i_Sf { unsigned int v1:8; unsigned int v2:32; empty v3; };
struct BFu8i_BFu32ll_Sf { unsigned int v1:8; unsigned long long v2:32; empty v3; };
struct BFu8i_BFu33_Sf { unsigned int v1:8; unsigned long long v2:33; empty v3; };
struct BFu8i_BFu7c_Sf { unsigned int v1:8; unsigned char v2:7; empty v3; };
struct BFu8i_BFu7i_Sf { unsigned int v1:8; unsigned int v2:7; empty v3; };
struct BFu8i_BFu7ll_Sf { unsigned int v1:8; unsigned long long v2:7; empty v3; };
struct BFu8i_BFu7s_Sf { unsigned int v1:8; unsigned short v2:7; empty v3; };
struct BFu8i_BFu8c_Sf { unsigned int v1:8; unsigned char v2:8; empty v3; };
struct BFu8i_BFu8i_Sf { unsigned int v1:8; unsigned int v2:8; empty v3; };
struct BFu8i_BFu8ll_Sf { unsigned int v1:8; unsigned long long v2:8; empty v3; };
struct BFu8i_BFu8s_Sf { unsigned int v1:8; unsigned short v2:8; empty v3; };
struct BFu8i_BFu9i_Sf { unsigned int v1:8; unsigned int v2:9; empty v3; };
struct BFu8i_BFu9ll_Sf { unsigned int v1:8; unsigned long long v2:9; empty v3; };
struct BFu8i_BFu9s_Sf { unsigned int v1:8; unsigned short v2:9; empty v3; };
struct BFu8i_C_Sf { unsigned int v1:8; char v2; empty v3; };
struct BFu8i_D_Sf { unsigned int v1:8; double v2; empty v3; };
struct BFu8i_F_Sf { unsigned int v1:8; float v2; empty v3; };
struct BFu8i_I_Sf { unsigned int v1:8; int v2; empty v3; };
struct BFu8i_Ip_Sf { unsigned int v1:8; int * v2; empty v3; };
struct BFu8i_L_Sf { unsigned int v1:8; long long v2; empty v3; };
struct BFu8i_S_Sf { unsigned int v1:8; short v2; empty v3; };
struct BFu8i_Sf { unsigned int v1:8; empty v2; };
struct BFu8i_Sf_BFu15i { unsigned int v1:8; empty v2; unsigned int v3:15; };
struct BFu8i_Sf_BFu15ll { unsigned int v1:8; empty v2; unsigned long long v3:15; };
struct BFu8i_Sf_BFu15s { unsigned int v1:8; empty v2; unsigned short v3:15; };
struct BFu8i_Sf_BFu16i { unsigned int v1:8; empty v2; unsigned int v3:16; };
struct BFu8i_Sf_BFu16ll { unsigned int v1:8; empty v2; unsigned long long v3:16; };
struct BFu8i_Sf_BFu16s { unsigned int v1:8; empty v2; unsigned short v3:16; };
struct BFu8i_Sf_BFu17i { unsigned int v1:8; empty v2; unsigned int v3:17; };
struct BFu8i_Sf_BFu17ll { unsigned int v1:8; empty v2; unsigned long long v3:17; };
struct BFu8i_Sf_BFu1c { unsigned int v1:8; empty v2; unsigned char v3:1; };
struct BFu8i_Sf_BFu1i { unsigned int v1:8; empty v2; unsigned int v3:1; };
struct BFu8i_Sf_BFu1ll { unsigned int v1:8; empty v2; unsigned long long v3:1; };
struct BFu8i_Sf_BFu1s { unsigned int v1:8; empty v2; unsigned short v3:1; };
struct BFu8i_Sf_BFu31i { unsigned int v1:8; empty v2; unsigned int v3:31; };
struct BFu8i_Sf_BFu31ll { unsigned int v1:8; empty v2; unsigned long long v3:31; };
struct BFu8i_Sf_BFu32i { unsigned int v1:8; empty v2; unsigned int v3:32; };
struct BFu8i_Sf_BFu32ll { unsigned int v1:8; empty v2; unsigned long long v3:32; };
struct BFu8i_Sf_BFu33 { unsigned int v1:8; empty v2; unsigned long long v3:33; };
struct BFu8i_Sf_BFu7c { unsigned int v1:8; empty v2; unsigned char v3:7; };
struct BFu8i_Sf_BFu7i { unsigned int v1:8; empty v2; unsigned int v3:7; };
struct BFu8i_Sf_BFu7ll { unsigned int v1:8; empty v2; unsigned long long v3:7; };
struct BFu8i_Sf_BFu7s { unsigned int v1:8; empty v2; unsigned short v3:7; };
struct BFu8i_Sf_BFu8c { unsigned int v1:8; empty v2; unsigned char v3:8; };
struct BFu8i_Sf_BFu8i { unsigned int v1:8; empty v2; unsigned int v3:8; };
struct BFu8i_Sf_BFu8ll { unsigned int v1:8; empty v2; unsigned long long v3:8; };
struct BFu8i_Sf_BFu8s { unsigned int v1:8; empty v2; unsigned short v3:8; };
struct BFu8i_Sf_BFu9i { unsigned int v1:8; empty v2; unsigned int v3:9; };
struct BFu8i_Sf_BFu9ll { unsigned int v1:8; empty v2; unsigned long long v3:9; };
struct BFu8i_Sf_BFu9s { unsigned int v1:8; empty v2; unsigned short v3:9; };
struct BFu8i_Sf_C { unsigned int v1:8; empty v2; char v3; };
struct BFu8i_Sf_D { unsigned int v1:8; empty v2; double v3; };
struct BFu8i_Sf_F { unsigned int v1:8; empty v2; float v3; };
struct BFu8i_Sf_I { unsigned int v1:8; empty v2; int v3; };
struct BFu8i_Sf_Ip { unsigned int v1:8; empty v2; int * v3; };
struct BFu8i_Sf_L { unsigned int v1:8; empty v2; long long v3; };
struct BFu8i_Sf_S { unsigned int v1:8; empty v2; short v3; };
struct BFu8i_Sf_Sf { unsigned int v1:8; empty v2; empty v3; };
struct BFu8i_Sf_Uc { unsigned int v1:8; empty v2; unsigned char v3; };
struct BFu8i_Sf_Ui { unsigned int v1:8; empty v2; unsigned int v3; };
struct BFu8i_Sf_Ul { unsigned int v1:8; empty v2; unsigned long long v3; };
struct BFu8i_Sf_Us { unsigned int v1:8; empty v2; unsigned short v3; };
struct BFu8i_Sf_Vp { unsigned int v1:8; empty v2; void * v3; };
struct BFu8i_Uc_Sf { unsigned int v1:8; unsigned char v2; empty v3; };
struct BFu8i_Ui_Sf { unsigned int v1:8; unsigned int v2; empty v3; };
struct BFu8i_Ul_Sf { unsigned int v1:8; unsigned long long v2; empty v3; };
struct BFu8i_Us_Sf { unsigned int v1:8; unsigned short v2; empty v3; };
struct BFu8i_Vp_Sf { unsigned int v1:8; void * v2; empty v3; };
struct BFu8ll_BFu15i_Sf { unsigned long long v1:8; unsigned int v2:15; empty v3; };
struct BFu8ll_BFu15ll_Sf { unsigned long long v1:8; unsigned long long v2:15; empty v3; };
struct BFu8ll_BFu15s_Sf { unsigned long long v1:8; unsigned short v2:15; empty v3; };
struct BFu8ll_BFu16i_Sf { unsigned long long v1:8; unsigned int v2:16; empty v3; };
struct BFu8ll_BFu16ll_Sf { unsigned long long v1:8; unsigned long long v2:16; empty v3; };
struct BFu8ll_BFu16s_Sf { unsigned long long v1:8; unsigned short v2:16; empty v3; };
struct BFu8ll_BFu17i_Sf { unsigned long long v1:8; unsigned int v2:17; empty v3; };
struct BFu8ll_BFu17ll_Sf { unsigned long long v1:8; unsigned long long v2:17; empty v3; };
struct BFu8ll_BFu1c_Sf { unsigned long long v1:8; unsigned char v2:1; empty v3; };
struct BFu8ll_BFu1i_Sf { unsigned long long v1:8; unsigned int v2:1; empty v3; };
struct BFu8ll_BFu1ll_Sf { unsigned long long v1:8; unsigned long long v2:1; empty v3; };
struct BFu8ll_BFu1s_Sf { unsigned long long v1:8; unsigned short v2:1; empty v3; };
struct BFu8ll_BFu31i_Sf { unsigned long long v1:8; unsigned int v2:31; empty v3; };
struct BFu8ll_BFu31ll_Sf { unsigned long long v1:8; unsigned long long v2:31; empty v3; };
struct BFu8ll_BFu32i_Sf { unsigned long long v1:8; unsigned int v2:32; empty v3; };
struct BFu8ll_BFu32ll_Sf { unsigned long long v1:8; unsigned long long v2:32; empty v3; };
struct BFu8ll_BFu33_Sf { unsigned long long v1:8; unsigned long long v2:33; empty v3; };
struct BFu8ll_BFu7c_Sf { unsigned long long v1:8; unsigned char v2:7; empty v3; };
struct BFu8ll_BFu7i_Sf { unsigned long long v1:8; unsigned int v2:7; empty v3; };
struct BFu8ll_BFu7ll_Sf { unsigned long long v1:8; unsigned long long v2:7; empty v3; };
struct BFu8ll_BFu7s_Sf { unsigned long long v1:8; unsigned short v2:7; empty v3; };
struct BFu8ll_BFu8c_Sf { unsigned long long v1:8; unsigned char v2:8; empty v3; };
struct BFu8ll_BFu8i_Sf { unsigned long long v1:8; unsigned int v2:8; empty v3; };
struct BFu8ll_BFu8ll_Sf { unsigned long long v1:8; unsigned long long v2:8; empty v3; };
struct BFu8ll_BFu8s_Sf { unsigned long long v1:8; unsigned short v2:8; empty v3; };
struct BFu8ll_BFu9i_Sf { unsigned long long v1:8; unsigned int v2:9; empty v3; };
struct BFu8ll_BFu9ll_Sf { unsigned long long v1:8; unsigned long long v2:9; empty v3; };
struct BFu8ll_BFu9s_Sf { unsigned long long v1:8; unsigned short v2:9; empty v3; };
struct BFu8ll_C_Sf { unsigned long long v1:8; char v2; empty v3; };
struct BFu8ll_D_Sf { unsigned long long v1:8; double v2; empty v3; };
struct BFu8ll_F_Sf { unsigned long long v1:8; float v2; empty v3; };
struct BFu8ll_I_Sf { unsigned long long v1:8; int v2; empty v3; };
struct BFu8ll_Ip_Sf { unsigned long long v1:8; int * v2; empty v3; };
struct BFu8ll_L_Sf { unsigned long long v1:8; long long v2; empty v3; };
struct BFu8ll_S_Sf { unsigned long long v1:8; short v2; empty v3; };
struct BFu8ll_Sf { unsigned long long v1:8; empty v2; };
struct BFu8ll_Sf_BFu15i { unsigned long long v1:8; empty v2; unsigned int v3:15; };
struct BFu8ll_Sf_BFu15ll { unsigned long long v1:8; empty v2; unsigned long long v3:15; };
struct BFu8ll_Sf_BFu15s { unsigned long long v1:8; empty v2; unsigned short v3:15; };
struct BFu8ll_Sf_BFu16i { unsigned long long v1:8; empty v2; unsigned int v3:16; };
struct BFu8ll_Sf_BFu16ll { unsigned long long v1:8; empty v2; unsigned long long v3:16; };
struct BFu8ll_Sf_BFu16s { unsigned long long v1:8; empty v2; unsigned short v3:16; };
struct BFu8ll_Sf_BFu17i { unsigned long long v1:8; empty v2; unsigned int v3:17; };
struct BFu8ll_Sf_BFu17ll { unsigned long long v1:8; empty v2; unsigned long long v3:17; };
struct BFu8ll_Sf_BFu1c { unsigned long long v1:8; empty v2; unsigned char v3:1; };
struct BFu8ll_Sf_BFu1i { unsigned long long v1:8; empty v2; unsigned int v3:1; };
struct BFu8ll_Sf_BFu1ll { unsigned long long v1:8; empty v2; unsigned long long v3:1; };
struct BFu8ll_Sf_BFu1s { unsigned long long v1:8; empty v2; unsigned short v3:1; };
struct BFu8ll_Sf_BFu31i { unsigned long long v1:8; empty v2; unsigned int v3:31; };
struct BFu8ll_Sf_BFu31ll { unsigned long long v1:8; empty v2; unsigned long long v3:31; };
struct BFu8ll_Sf_BFu32i { unsigned long long v1:8; empty v2; unsigned int v3:32; };
struct BFu8ll_Sf_BFu32ll { unsigned long long v1:8; empty v2; unsigned long long v3:32; };
struct BFu8ll_Sf_BFu33 { unsigned long long v1:8; empty v2; unsigned long long v3:33; };
struct BFu8ll_Sf_BFu7c { unsigned long long v1:8; empty v2; unsigned char v3:7; };
struct BFu8ll_Sf_BFu7i { unsigned long long v1:8; empty v2; unsigned int v3:7; };
struct BFu8ll_Sf_BFu7ll { unsigned long long v1:8; empty v2; unsigned long long v3:7; };
struct BFu8ll_Sf_BFu7s { unsigned long long v1:8; empty v2; unsigned short v3:7; };
struct BFu8ll_Sf_BFu8c { unsigned long long v1:8; empty v2; unsigned char v3:8; };
struct BFu8ll_Sf_BFu8i { unsigned long long v1:8; empty v2; unsigned int v3:8; };
struct BFu8ll_Sf_BFu8ll { unsigned long long v1:8; empty v2; unsigned long long v3:8; };
struct BFu8ll_Sf_BFu8s { unsigned long long v1:8; empty v2; unsigned short v3:8; };
struct BFu8ll_Sf_BFu9i { unsigned long long v1:8; empty v2; unsigned int v3:9; };
struct BFu8ll_Sf_BFu9ll { unsigned long long v1:8; empty v2; unsigned long long v3:9; };
struct BFu8ll_Sf_BFu9s { unsigned long long v1:8; empty v2; unsigned short v3:9; };
struct BFu8ll_Sf_C { unsigned long long v1:8; empty v2; char v3; };
struct BFu8ll_Sf_D { unsigned long long v1:8; empty v2; double v3; };
struct BFu8ll_Sf_F { unsigned long long v1:8; empty v2; float v3; };
struct BFu8ll_Sf_I { unsigned long long v1:8; empty v2; int v3; };
struct BFu8ll_Sf_Ip { unsigned long long v1:8; empty v2; int * v3; };
struct BFu8ll_Sf_L { unsigned long long v1:8; empty v2; long long v3; };
struct BFu8ll_Sf_S { unsigned long long v1:8; empty v2; short v3; };
struct BFu8ll_Sf_Sf { unsigned long long v1:8; empty v2; empty v3; };
struct BFu8ll_Sf_Uc { unsigned long long v1:8; empty v2; unsigned char v3; };
struct BFu8ll_Sf_Ui { unsigned long long v1:8; empty v2; unsigned int v3; };
struct BFu8ll_Sf_Ul { unsigned long long v1:8; empty v2; unsigned long long v3; };
struct BFu8ll_Sf_Us { unsigned long long v1:8; empty v2; unsigned short v3; };
struct BFu8ll_Sf_Vp { unsigned long long v1:8; empty v2; void * v3; };
struct BFu8ll_Uc_Sf { unsigned long long v1:8; unsigned char v2; empty v3; };
struct BFu8ll_Ui_Sf { unsigned long long v1:8; unsigned int v2; empty v3; };
struct BFu8ll_Ul_Sf { unsigned long long v1:8; unsigned long long v2; empty v3; };
struct BFu8ll_Us_Sf { unsigned long long v1:8; unsigned short v2; empty v3; };
struct BFu8ll_Vp_Sf { unsigned long long v1:8; void * v2; empty v3; };
struct BFu8s_BFu15i_Sf { unsigned short v1:8; unsigned int v2:15; empty v3; };
struct BFu8s_BFu15ll_Sf { unsigned short v1:8; unsigned long long v2:15; empty v3; };
struct BFu8s_BFu15s_Sf { unsigned short v1:8; unsigned short v2:15; empty v3; };
struct BFu8s_BFu16i_Sf { unsigned short v1:8; unsigned int v2:16; empty v3; };
struct BFu8s_BFu16ll_Sf { unsigned short v1:8; unsigned long long v2:16; empty v3; };
struct BFu8s_BFu16s_Sf { unsigned short v1:8; unsigned short v2:16; empty v3; };
struct BFu8s_BFu17i_Sf { unsigned short v1:8; unsigned int v2:17; empty v3; };
struct BFu8s_BFu17ll_Sf { unsigned short v1:8; unsigned long long v2:17; empty v3; };
struct BFu8s_BFu1c_Sf { unsigned short v1:8; unsigned char v2:1; empty v3; };
struct BFu8s_BFu1i_Sf { unsigned short v1:8; unsigned int v2:1; empty v3; };
struct BFu8s_BFu1ll_Sf { unsigned short v1:8; unsigned long long v2:1; empty v3; };
struct BFu8s_BFu1s_Sf { unsigned short v1:8; unsigned short v2:1; empty v3; };
struct BFu8s_BFu31i_Sf { unsigned short v1:8; unsigned int v2:31; empty v3; };
struct BFu8s_BFu31ll_Sf { unsigned short v1:8; unsigned long long v2:31; empty v3; };
struct BFu8s_BFu32i_Sf { unsigned short v1:8; unsigned int v2:32; empty v3; };
struct BFu8s_BFu32ll_Sf { unsigned short v1:8; unsigned long long v2:32; empty v3; };
struct BFu8s_BFu33_Sf { unsigned short v1:8; unsigned long long v2:33; empty v3; };
struct BFu8s_BFu7c_Sf { unsigned short v1:8; unsigned char v2:7; empty v3; };
struct BFu8s_BFu7i_Sf { unsigned short v1:8; unsigned int v2:7; empty v3; };
struct BFu8s_BFu7ll_Sf { unsigned short v1:8; unsigned long long v2:7; empty v3; };
struct BFu8s_BFu7s_Sf { unsigned short v1:8; unsigned short v2:7; empty v3; };
struct BFu8s_BFu8c_Sf { unsigned short v1:8; unsigned char v2:8; empty v3; };
struct BFu8s_BFu8i_Sf { unsigned short v1:8; unsigned int v2:8; empty v3; };
struct BFu8s_BFu8ll_Sf { unsigned short v1:8; unsigned long long v2:8; empty v3; };
struct BFu8s_BFu8s_Sf { unsigned short v1:8; unsigned short v2:8; empty v3; };
struct BFu8s_BFu9i_Sf { unsigned short v1:8; unsigned int v2:9; empty v3; };
struct BFu8s_BFu9ll_Sf { unsigned short v1:8; unsigned long long v2:9; empty v3; };
struct BFu8s_BFu9s_Sf { unsigned short v1:8; unsigned short v2:9; empty v3; };
struct BFu8s_C_Sf { unsigned short v1:8; char v2; empty v3; };
struct BFu8s_D_Sf { unsigned short v1:8; double v2; empty v3; };
struct BFu8s_F_Sf { unsigned short v1:8; float v2; empty v3; };
struct BFu8s_I_Sf { unsigned short v1:8; int v2; empty v3; };
struct BFu8s_Ip_Sf { unsigned short v1:8; int * v2; empty v3; };
struct BFu8s_L_Sf { unsigned short v1:8; long long v2; empty v3; };
struct BFu8s_S_Sf { unsigned short v1:8; short v2; empty v3; };
struct BFu8s_Sf { unsigned short v1:8; empty v2; };
struct BFu8s_Sf_BFu15i { unsigned short v1:8; empty v2; unsigned int v3:15; };
struct BFu8s_Sf_BFu15ll { unsigned short v1:8; empty v2; unsigned long long v3:15; };
struct BFu8s_Sf_BFu15s { unsigned short v1:8; empty v2; unsigned short v3:15; };
struct BFu8s_Sf_BFu16i { unsigned short v1:8; empty v2; unsigned int v3:16; };
struct BFu8s_Sf_BFu16ll { unsigned short v1:8; empty v2; unsigned long long v3:16; };
struct BFu8s_Sf_BFu16s { unsigned short v1:8; empty v2; unsigned short v3:16; };
struct BFu8s_Sf_BFu17i { unsigned short v1:8; empty v2; unsigned int v3:17; };
struct BFu8s_Sf_BFu17ll { unsigned short v1:8; empty v2; unsigned long long v3:17; };
struct BFu8s_Sf_BFu1c { unsigned short v1:8; empty v2; unsigned char v3:1; };
struct BFu8s_Sf_BFu1i { unsigned short v1:8; empty v2; unsigned int v3:1; };
struct BFu8s_Sf_BFu1ll { unsigned short v1:8; empty v2; unsigned long long v3:1; };
struct BFu8s_Sf_BFu1s { unsigned short v1:8; empty v2; unsigned short v3:1; };
struct BFu8s_Sf_BFu31i { unsigned short v1:8; empty v2; unsigned int v3:31; };
struct BFu8s_Sf_BFu31ll { unsigned short v1:8; empty v2; unsigned long long v3:31; };
struct BFu8s_Sf_BFu32i { unsigned short v1:8; empty v2; unsigned int v3:32; };
struct BFu8s_Sf_BFu32ll { unsigned short v1:8; empty v2; unsigned long long v3:32; };
struct BFu8s_Sf_BFu33 { unsigned short v1:8; empty v2; unsigned long long v3:33; };
struct BFu8s_Sf_BFu7c { unsigned short v1:8; empty v2; unsigned char v3:7; };
struct BFu8s_Sf_BFu7i { unsigned short v1:8; empty v2; unsigned int v3:7; };
struct BFu8s_Sf_BFu7ll { unsigned short v1:8; empty v2; unsigned long long v3:7; };
struct BFu8s_Sf_BFu7s { unsigned short v1:8; empty v2; unsigned short v3:7; };
struct BFu8s_Sf_BFu8c { unsigned short v1:8; empty v2; unsigned char v3:8; };
struct BFu8s_Sf_BFu8i { unsigned short v1:8; empty v2; unsigned int v3:8; };
struct BFu8s_Sf_BFu8ll { unsigned short v1:8; empty v2; unsigned long long v3:8; };
struct BFu8s_Sf_BFu8s { unsigned short v1:8; empty v2; unsigned short v3:8; };
struct BFu8s_Sf_BFu9i { unsigned short v1:8; empty v2; unsigned int v3:9; };
struct BFu8s_Sf_BFu9ll { unsigned short v1:8; empty v2; unsigned long long v3:9; };
struct BFu8s_Sf_BFu9s { unsigned short v1:8; empty v2; unsigned short v3:9; };
struct BFu8s_Sf_C { unsigned short v1:8; empty v2; char v3; };
struct BFu8s_Sf_D { unsigned short v1:8; empty v2; double v3; };
struct BFu8s_Sf_F { unsigned short v1:8; empty v2; float v3; };
struct BFu8s_Sf_I { unsigned short v1:8; empty v2; int v3; };
struct BFu8s_Sf_Ip { unsigned short v1:8; empty v2; int * v3; };
struct BFu8s_Sf_L { unsigned short v1:8; empty v2; long long v3; };
struct BFu8s_Sf_S { unsigned short v1:8; empty v2; short v3; };
struct BFu8s_Sf_Sf { unsigned short v1:8; empty v2; empty v3; };
struct BFu8s_Sf_Uc { unsigned short v1:8; empty v2; unsigned char v3; };
struct BFu8s_Sf_Ui { unsigned short v1:8; empty v2; unsigned int v3; };
struct BFu8s_Sf_Ul { unsigned short v1:8; empty v2; unsigned long long v3; };
struct BFu8s_Sf_Us { unsigned short v1:8; empty v2; unsigned short v3; };
struct BFu8s_Sf_Vp { unsigned short v1:8; empty v2; void * v3; };
struct BFu8s_Uc_Sf { unsigned short v1:8; unsigned char v2; empty v3; };
struct BFu8s_Ui_Sf { unsigned short v1:8; unsigned int v2; empty v3; };
struct BFu8s_Ul_Sf { unsigned short v1:8; unsigned long long v2; empty v3; };
struct BFu8s_Us_Sf { unsigned short v1:8; unsigned short v2; empty v3; };
struct BFu8s_Vp_Sf { unsigned short v1:8; void * v2; empty v3; };
struct BFu9i_BFu15i_Sf { unsigned int v1:9; unsigned int v2:15; empty v3; };
struct BFu9i_BFu15ll_Sf { unsigned int v1:9; unsigned long long v2:15; empty v3; };
struct BFu9i_BFu15s_Sf { unsigned int v1:9; unsigned short v2:15; empty v3; };
struct BFu9i_BFu16i_Sf { unsigned int v1:9; unsigned int v2:16; empty v3; };
struct BFu9i_BFu16ll_Sf { unsigned int v1:9; unsigned long long v2:16; empty v3; };
struct BFu9i_BFu16s_Sf { unsigned int v1:9; unsigned short v2:16; empty v3; };
struct BFu9i_BFu17i_Sf { unsigned int v1:9; unsigned int v2:17; empty v3; };
struct BFu9i_BFu17ll_Sf { unsigned int v1:9; unsigned long long v2:17; empty v3; };
struct BFu9i_BFu1c_Sf { unsigned int v1:9; unsigned char v2:1; empty v3; };
struct BFu9i_BFu1i_Sf { unsigned int v1:9; unsigned int v2:1; empty v3; };
struct BFu9i_BFu1ll_Sf { unsigned int v1:9; unsigned long long v2:1; empty v3; };
struct BFu9i_BFu1s_Sf { unsigned int v1:9; unsigned short v2:1; empty v3; };
struct BFu9i_BFu31i_Sf { unsigned int v1:9; unsigned int v2:31; empty v3; };
struct BFu9i_BFu31ll_Sf { unsigned int v1:9; unsigned long long v2:31; empty v3; };
struct BFu9i_BFu32i_Sf { unsigned int v1:9; unsigned int v2:32; empty v3; };
struct BFu9i_BFu32ll_Sf { unsigned int v1:9; unsigned long long v2:32; empty v3; };
struct BFu9i_BFu33_Sf { unsigned int v1:9; unsigned long long v2:33; empty v3; };
struct BFu9i_BFu7c_Sf { unsigned int v1:9; unsigned char v2:7; empty v3; };
struct BFu9i_BFu7i_Sf { unsigned int v1:9; unsigned int v2:7; empty v3; };
struct BFu9i_BFu7ll_Sf { unsigned int v1:9; unsigned long long v2:7; empty v3; };
struct BFu9i_BFu7s_Sf { unsigned int v1:9; unsigned short v2:7; empty v3; };
struct BFu9i_BFu8c_Sf { unsigned int v1:9; unsigned char v2:8; empty v3; };
struct BFu9i_BFu8i_Sf { unsigned int v1:9; unsigned int v2:8; empty v3; };
struct BFu9i_BFu8ll_Sf { unsigned int v1:9; unsigned long long v2:8; empty v3; };
struct BFu9i_BFu8s_Sf { unsigned int v1:9; unsigned short v2:8; empty v3; };
struct BFu9i_BFu9i_Sf { unsigned int v1:9; unsigned int v2:9; empty v3; };
struct BFu9i_BFu9ll_Sf { unsigned int v1:9; unsigned long long v2:9; empty v3; };
struct BFu9i_BFu9s_Sf { unsigned int v1:9; unsigned short v2:9; empty v3; };
struct BFu9i_C_Sf { unsigned int v1:9; char v2; empty v3; };
struct BFu9i_D_Sf { unsigned int v1:9; double v2; empty v3; };
struct BFu9i_F_Sf { unsigned int v1:9; float v2; empty v3; };
struct BFu9i_I_Sf { unsigned int v1:9; int v2; empty v3; };
struct BFu9i_Ip_Sf { unsigned int v1:9; int * v2; empty v3; };
struct BFu9i_L_Sf { unsigned int v1:9; long long v2; empty v3; };
struct BFu9i_S_Sf { unsigned int v1:9; short v2; empty v3; };
struct BFu9i_Sf { unsigned int v1:9; empty v2; };
struct BFu9i_Sf_BFu15i { unsigned int v1:9; empty v2; unsigned int v3:15; };
struct BFu9i_Sf_BFu15ll { unsigned int v1:9; empty v2; unsigned long long v3:15; };
struct BFu9i_Sf_BFu15s { unsigned int v1:9; empty v2; unsigned short v3:15; };
struct BFu9i_Sf_BFu16i { unsigned int v1:9; empty v2; unsigned int v3:16; };
struct BFu9i_Sf_BFu16ll { unsigned int v1:9; empty v2; unsigned long long v3:16; };
struct BFu9i_Sf_BFu16s { unsigned int v1:9; empty v2; unsigned short v3:16; };
struct BFu9i_Sf_BFu17i { unsigned int v1:9; empty v2; unsigned int v3:17; };
struct BFu9i_Sf_BFu17ll { unsigned int v1:9; empty v2; unsigned long long v3:17; };
struct BFu9i_Sf_BFu1c { unsigned int v1:9; empty v2; unsigned char v3:1; };
struct BFu9i_Sf_BFu1i { unsigned int v1:9; empty v2; unsigned int v3:1; };
struct BFu9i_Sf_BFu1ll { unsigned int v1:9; empty v2; unsigned long long v3:1; };
struct BFu9i_Sf_BFu1s { unsigned int v1:9; empty v2; unsigned short v3:1; };
struct BFu9i_Sf_BFu31i { unsigned int v1:9; empty v2; unsigned int v3:31; };
struct BFu9i_Sf_BFu31ll { unsigned int v1:9; empty v2; unsigned long long v3:31; };
struct BFu9i_Sf_BFu32i { unsigned int v1:9; empty v2; unsigned int v3:32; };
struct BFu9i_Sf_BFu32ll { unsigned int v1:9; empty v2; unsigned long long v3:32; };
struct BFu9i_Sf_BFu33 { unsigned int v1:9; empty v2; unsigned long long v3:33; };
struct BFu9i_Sf_BFu7c { unsigned int v1:9; empty v2; unsigned char v3:7; };
struct BFu9i_Sf_BFu7i { unsigned int v1:9; empty v2; unsigned int v3:7; };
struct BFu9i_Sf_BFu7ll { unsigned int v1:9; empty v2; unsigned long long v3:7; };
struct BFu9i_Sf_BFu7s { unsigned int v1:9; empty v2; unsigned short v3:7; };
struct BFu9i_Sf_BFu8c { unsigned int v1:9; empty v2; unsigned char v3:8; };
struct BFu9i_Sf_BFu8i { unsigned int v1:9; empty v2; unsigned int v3:8; };
struct BFu9i_Sf_BFu8ll { unsigned int v1:9; empty v2; unsigned long long v3:8; };
struct BFu9i_Sf_BFu8s { unsigned int v1:9; empty v2; unsigned short v3:8; };
struct BFu9i_Sf_BFu9i { unsigned int v1:9; empty v2; unsigned int v3:9; };
struct BFu9i_Sf_BFu9ll { unsigned int v1:9; empty v2; unsigned long long v3:9; };
struct BFu9i_Sf_BFu9s { unsigned int v1:9; empty v2; unsigned short v3:9; };
struct BFu9i_Sf_C { unsigned int v1:9; empty v2; char v3; };
struct BFu9i_Sf_D { unsigned int v1:9; empty v2; double v3; };
struct BFu9i_Sf_F { unsigned int v1:9; empty v2; float v3; };
struct BFu9i_Sf_I { unsigned int v1:9; empty v2; int v3; };
struct BFu9i_Sf_Ip { unsigned int v1:9; empty v2; int * v3; };
struct BFu9i_Sf_L { unsigned int v1:9; empty v2; long long v3; };
struct BFu9i_Sf_S { unsigned int v1:9; empty v2; short v3; };
struct BFu9i_Sf_Sf { unsigned int v1:9; empty v2; empty v3; };
struct BFu9i_Sf_Uc { unsigned int v1:9; empty v2; unsigned char v3; };
struct BFu9i_Sf_Ui { unsigned int v1:9; empty v2; unsigned int v3; };
struct BFu9i_Sf_Ul { unsigned int v1:9; empty v2; unsigned long long v3; };
struct BFu9i_Sf_Us { unsigned int v1:9; empty v2; unsigned short v3; };
struct BFu9i_Sf_Vp { unsigned int v1:9; empty v2; void * v3; };
struct BFu9i_Uc_Sf { unsigned int v1:9; unsigned char v2; empty v3; };
struct BFu9i_Ui_Sf { unsigned int v1:9; unsigned int v2; empty v3; };
struct BFu9i_Ul_Sf { unsigned int v1:9; unsigned long long v2; empty v3; };
struct BFu9i_Us_Sf { unsigned int v1:9; unsigned short v2; empty v3; };
struct BFu9i_Vp_Sf { unsigned int v1:9; void * v2; empty v3; };
struct BFu9ll_BFu15i_Sf { unsigned long long v1:9; unsigned int v2:15; empty v3; };
struct BFu9ll_BFu15ll_Sf { unsigned long long v1:9; unsigned long long v2:15; empty v3; };
struct BFu9ll_BFu15s_Sf { unsigned long long v1:9; unsigned short v2:15; empty v3; };
struct BFu9ll_BFu16i_Sf { unsigned long long v1:9; unsigned int v2:16; empty v3; };
struct BFu9ll_BFu16ll_Sf { unsigned long long v1:9; unsigned long long v2:16; empty v3; };
struct BFu9ll_BFu16s_Sf { unsigned long long v1:9; unsigned short v2:16; empty v3; };
struct BFu9ll_BFu17i_Sf { unsigned long long v1:9; unsigned int v2:17; empty v3; };
struct BFu9ll_BFu17ll_Sf { unsigned long long v1:9; unsigned long long v2:17; empty v3; };
struct BFu9ll_BFu1c_Sf { unsigned long long v1:9; unsigned char v2:1; empty v3; };
struct BFu9ll_BFu1i_Sf { unsigned long long v1:9; unsigned int v2:1; empty v3; };
struct BFu9ll_BFu1ll_Sf { unsigned long long v1:9; unsigned long long v2:1; empty v3; };
struct BFu9ll_BFu1s_Sf { unsigned long long v1:9; unsigned short v2:1; empty v3; };
struct BFu9ll_BFu31i_Sf { unsigned long long v1:9; unsigned int v2:31; empty v3; };
struct BFu9ll_BFu31ll_Sf { unsigned long long v1:9; unsigned long long v2:31; empty v3; };
struct BFu9ll_BFu32i_Sf { unsigned long long v1:9; unsigned int v2:32; empty v3; };
struct BFu9ll_BFu32ll_Sf { unsigned long long v1:9; unsigned long long v2:32; empty v3; };
struct BFu9ll_BFu33_Sf { unsigned long long v1:9; unsigned long long v2:33; empty v3; };
struct BFu9ll_BFu7c_Sf { unsigned long long v1:9; unsigned char v2:7; empty v3; };
struct BFu9ll_BFu7i_Sf { unsigned long long v1:9; unsigned int v2:7; empty v3; };
struct BFu9ll_BFu7ll_Sf { unsigned long long v1:9; unsigned long long v2:7; empty v3; };
struct BFu9ll_BFu7s_Sf { unsigned long long v1:9; unsigned short v2:7; empty v3; };
struct BFu9ll_BFu8c_Sf { unsigned long long v1:9; unsigned char v2:8; empty v3; };
struct BFu9ll_BFu8i_Sf { unsigned long long v1:9; unsigned int v2:8; empty v3; };
struct BFu9ll_BFu8ll_Sf { unsigned long long v1:9; unsigned long long v2:8; empty v3; };
struct BFu9ll_BFu8s_Sf { unsigned long long v1:9; unsigned short v2:8; empty v3; };
struct BFu9ll_BFu9i_Sf { unsigned long long v1:9; unsigned int v2:9; empty v3; };
struct BFu9ll_BFu9ll_Sf { unsigned long long v1:9; unsigned long long v2:9; empty v3; };
struct BFu9ll_BFu9s_Sf { unsigned long long v1:9; unsigned short v2:9; empty v3; };
struct BFu9ll_C_Sf { unsigned long long v1:9; char v2; empty v3; };
struct BFu9ll_D_Sf { unsigned long long v1:9; double v2; empty v3; };
struct BFu9ll_F_Sf { unsigned long long v1:9; float v2; empty v3; };
struct BFu9ll_I_Sf { unsigned long long v1:9; int v2; empty v3; };
struct BFu9ll_Ip_Sf { unsigned long long v1:9; int * v2; empty v3; };
struct BFu9ll_L_Sf { unsigned long long v1:9; long long v2; empty v3; };
struct BFu9ll_S_Sf { unsigned long long v1:9; short v2; empty v3; };
struct BFu9ll_Sf { unsigned long long v1:9; empty v2; };
struct BFu9ll_Sf_BFu15i { unsigned long long v1:9; empty v2; unsigned int v3:15; };
struct BFu9ll_Sf_BFu15ll { unsigned long long v1:9; empty v2; unsigned long long v3:15; };
struct BFu9ll_Sf_BFu15s { unsigned long long v1:9; empty v2; unsigned short v3:15; };
struct BFu9ll_Sf_BFu16i { unsigned long long v1:9; empty v2; unsigned int v3:16; };
struct BFu9ll_Sf_BFu16ll { unsigned long long v1:9; empty v2; unsigned long long v3:16; };
struct BFu9ll_Sf_BFu16s { unsigned long long v1:9; empty v2; unsigned short v3:16; };
struct BFu9ll_Sf_BFu17i { unsigned long long v1:9; empty v2; unsigned int v3:17; };
struct BFu9ll_Sf_BFu17ll { unsigned long long v1:9; empty v2; unsigned long long v3:17; };
struct BFu9ll_Sf_BFu1c { unsigned long long v1:9; empty v2; unsigned char v3:1; };
struct BFu9ll_Sf_BFu1i { unsigned long long v1:9; empty v2; unsigned int v3:1; };
struct BFu9ll_Sf_BFu1ll { unsigned long long v1:9; empty v2; unsigned long long v3:1; };
struct BFu9ll_Sf_BFu1s { unsigned long long v1:9; empty v2; unsigned short v3:1; };
struct BFu9ll_Sf_BFu31i { unsigned long long v1:9; empty v2; unsigned int v3:31; };
struct BFu9ll_Sf_BFu31ll { unsigned long long v1:9; empty v2; unsigned long long v3:31; };
struct BFu9ll_Sf_BFu32i { unsigned long long v1:9; empty v2; unsigned int v3:32; };
struct BFu9ll_Sf_BFu32ll { unsigned long long v1:9; empty v2; unsigned long long v3:32; };
struct BFu9ll_Sf_BFu33 { unsigned long long v1:9; empty v2; unsigned long long v3:33; };
struct BFu9ll_Sf_BFu7c { unsigned long long v1:9; empty v2; unsigned char v3:7; };
struct BFu9ll_Sf_BFu7i { unsigned long long v1:9; empty v2; unsigned int v3:7; };
struct BFu9ll_Sf_BFu7ll { unsigned long long v1:9; empty v2; unsigned long long v3:7; };
struct BFu9ll_Sf_BFu7s { unsigned long long v1:9; empty v2; unsigned short v3:7; };
struct BFu9ll_Sf_BFu8c { unsigned long long v1:9; empty v2; unsigned char v3:8; };
struct BFu9ll_Sf_BFu8i { unsigned long long v1:9; empty v2; unsigned int v3:8; };
struct BFu9ll_Sf_BFu8ll { unsigned long long v1:9; empty v2; unsigned long long v3:8; };
struct BFu9ll_Sf_BFu8s { unsigned long long v1:9; empty v2; unsigned short v3:8; };
struct BFu9ll_Sf_BFu9i { unsigned long long v1:9; empty v2; unsigned int v3:9; };
struct BFu9ll_Sf_BFu9ll { unsigned long long v1:9; empty v2; unsigned long long v3:9; };
struct BFu9ll_Sf_BFu9s { unsigned long long v1:9; empty v2; unsigned short v3:9; };
struct BFu9ll_Sf_C { unsigned long long v1:9; empty v2; char v3; };
struct BFu9ll_Sf_D { unsigned long long v1:9; empty v2; double v3; };
struct BFu9ll_Sf_F { unsigned long long v1:9; empty v2; float v3; };
struct BFu9ll_Sf_I { unsigned long long v1:9; empty v2; int v3; };
struct BFu9ll_Sf_Ip { unsigned long long v1:9; empty v2; int * v3; };
struct BFu9ll_Sf_L { unsigned long long v1:9; empty v2; long long v3; };
struct BFu9ll_Sf_S { unsigned long long v1:9; empty v2; short v3; };
struct BFu9ll_Sf_Sf { unsigned long long v1:9; empty v2; empty v3; };
struct BFu9ll_Sf_Uc { unsigned long long v1:9; empty v2; unsigned char v3; };
struct BFu9ll_Sf_Ui { unsigned long long v1:9; empty v2; unsigned int v3; };
struct BFu9ll_Sf_Ul { unsigned long long v1:9; empty v2; unsigned long long v3; };
struct BFu9ll_Sf_Us { unsigned long long v1:9; empty v2; unsigned short v3; };
struct BFu9ll_Sf_Vp { unsigned long long v1:9; empty v2; void * v3; };
struct BFu9ll_Uc_Sf { unsigned long long v1:9; unsigned char v2; empty v3; };
struct BFu9ll_Ui_Sf { unsigned long long v1:9; unsigned int v2; empty v3; };
struct BFu9ll_Ul_Sf { unsigned long long v1:9; unsigned long long v2; empty v3; };
struct BFu9ll_Us_Sf { unsigned long long v1:9; unsigned short v2; empty v3; };
struct BFu9ll_Vp_Sf { unsigned long long v1:9; void * v2; empty v3; };
struct BFu9s_BFu15i_Sf { unsigned short v1:9; unsigned int v2:15; empty v3; };
struct BFu9s_BFu15ll_Sf { unsigned short v1:9; unsigned long long v2:15; empty v3; };
struct BFu9s_BFu15s_Sf { unsigned short v1:9; unsigned short v2:15; empty v3; };
struct BFu9s_BFu16i_Sf { unsigned short v1:9; unsigned int v2:16; empty v3; };
struct BFu9s_BFu16ll_Sf { unsigned short v1:9; unsigned long long v2:16; empty v3; };
struct BFu9s_BFu16s_Sf { unsigned short v1:9; unsigned short v2:16; empty v3; };
struct BFu9s_BFu17i_Sf { unsigned short v1:9; unsigned int v2:17; empty v3; };
struct BFu9s_BFu17ll_Sf { unsigned short v1:9; unsigned long long v2:17; empty v3; };
struct BFu9s_BFu1c_Sf { unsigned short v1:9; unsigned char v2:1; empty v3; };
struct BFu9s_BFu1i_Sf { unsigned short v1:9; unsigned int v2:1; empty v3; };
struct BFu9s_BFu1ll_Sf { unsigned short v1:9; unsigned long long v2:1; empty v3; };
struct BFu9s_BFu1s_Sf { unsigned short v1:9; unsigned short v2:1; empty v3; };
struct BFu9s_BFu31i_Sf { unsigned short v1:9; unsigned int v2:31; empty v3; };
struct BFu9s_BFu31ll_Sf { unsigned short v1:9; unsigned long long v2:31; empty v3; };
struct BFu9s_BFu32i_Sf { unsigned short v1:9; unsigned int v2:32; empty v3; };
struct BFu9s_BFu32ll_Sf { unsigned short v1:9; unsigned long long v2:32; empty v3; };
struct BFu9s_BFu33_Sf { unsigned short v1:9; unsigned long long v2:33; empty v3; };
struct BFu9s_BFu7c_Sf { unsigned short v1:9; unsigned char v2:7; empty v3; };
struct BFu9s_BFu7i_Sf { unsigned short v1:9; unsigned int v2:7; empty v3; };
struct BFu9s_BFu7ll_Sf { unsigned short v1:9; unsigned long long v2:7; empty v3; };
struct BFu9s_BFu7s_Sf { unsigned short v1:9; unsigned short v2:7; empty v3; };
struct BFu9s_BFu8c_Sf { unsigned short v1:9; unsigned char v2:8; empty v3; };
struct BFu9s_BFu8i_Sf { unsigned short v1:9; unsigned int v2:8; empty v3; };
struct BFu9s_BFu8ll_Sf { unsigned short v1:9; unsigned long long v2:8; empty v3; };
struct BFu9s_BFu8s_Sf { unsigned short v1:9; unsigned short v2:8; empty v3; };
struct BFu9s_BFu9i_Sf { unsigned short v1:9; unsigned int v2:9; empty v3; };
struct BFu9s_BFu9ll_Sf { unsigned short v1:9; unsigned long long v2:9; empty v3; };
struct BFu9s_BFu9s_Sf { unsigned short v1:9; unsigned short v2:9; empty v3; };
struct BFu9s_C_Sf { unsigned short v1:9; char v2; empty v3; };
struct BFu9s_D_Sf { unsigned short v1:9; double v2; empty v3; };
struct BFu9s_F_Sf { unsigned short v1:9; float v2; empty v3; };
struct BFu9s_I_Sf { unsigned short v1:9; int v2; empty v3; };
struct BFu9s_Ip_Sf { unsigned short v1:9; int * v2; empty v3; };
struct BFu9s_L_Sf { unsigned short v1:9; long long v2; empty v3; };
struct BFu9s_S_Sf { unsigned short v1:9; short v2; empty v3; };
struct BFu9s_Sf { unsigned short v1:9; empty v2; };
struct BFu9s_Sf_BFu15i { unsigned short v1:9; empty v2; unsigned int v3:15; };
struct BFu9s_Sf_BFu15ll { unsigned short v1:9; empty v2; unsigned long long v3:15; };
struct BFu9s_Sf_BFu15s { unsigned short v1:9; empty v2; unsigned short v3:15; };
struct BFu9s_Sf_BFu16i { unsigned short v1:9; empty v2; unsigned int v3:16; };
struct BFu9s_Sf_BFu16ll { unsigned short v1:9; empty v2; unsigned long long v3:16; };
struct BFu9s_Sf_BFu16s { unsigned short v1:9; empty v2; unsigned short v3:16; };
struct BFu9s_Sf_BFu17i { unsigned short v1:9; empty v2; unsigned int v3:17; };
struct BFu9s_Sf_BFu17ll { unsigned short v1:9; empty v2; unsigned long long v3:17; };
struct BFu9s_Sf_BFu1c { unsigned short v1:9; empty v2; unsigned char v3:1; };
struct BFu9s_Sf_BFu1i { unsigned short v1:9; empty v2; unsigned int v3:1; };
struct BFu9s_Sf_BFu1ll { unsigned short v1:9; empty v2; unsigned long long v3:1; };
struct BFu9s_Sf_BFu1s { unsigned short v1:9; empty v2; unsigned short v3:1; };
struct BFu9s_Sf_BFu31i { unsigned short v1:9; empty v2; unsigned int v3:31; };
struct BFu9s_Sf_BFu31ll { unsigned short v1:9; empty v2; unsigned long long v3:31; };
struct BFu9s_Sf_BFu32i { unsigned short v1:9; empty v2; unsigned int v3:32; };
struct BFu9s_Sf_BFu32ll { unsigned short v1:9; empty v2; unsigned long long v3:32; };
struct BFu9s_Sf_BFu33 { unsigned short v1:9; empty v2; unsigned long long v3:33; };
struct BFu9s_Sf_BFu7c { unsigned short v1:9; empty v2; unsigned char v3:7; };
struct BFu9s_Sf_BFu7i { unsigned short v1:9; empty v2; unsigned int v3:7; };
struct BFu9s_Sf_BFu7ll { unsigned short v1:9; empty v2; unsigned long long v3:7; };
struct BFu9s_Sf_BFu7s { unsigned short v1:9; empty v2; unsigned short v3:7; };
struct BFu9s_Sf_BFu8c { unsigned short v1:9; empty v2; unsigned char v3:8; };
struct BFu9s_Sf_BFu8i { unsigned short v1:9; empty v2; unsigned int v3:8; };
struct BFu9s_Sf_BFu8ll { unsigned short v1:9; empty v2; unsigned long long v3:8; };
struct BFu9s_Sf_BFu8s { unsigned short v1:9; empty v2; unsigned short v3:8; };
struct BFu9s_Sf_BFu9i { unsigned short v1:9; empty v2; unsigned int v3:9; };
struct BFu9s_Sf_BFu9ll { unsigned short v1:9; empty v2; unsigned long long v3:9; };
struct BFu9s_Sf_BFu9s { unsigned short v1:9; empty v2; unsigned short v3:9; };
struct BFu9s_Sf_C { unsigned short v1:9; empty v2; char v3; };
struct BFu9s_Sf_D { unsigned short v1:9; empty v2; double v3; };
struct BFu9s_Sf_F { unsigned short v1:9; empty v2; float v3; };
struct BFu9s_Sf_I { unsigned short v1:9; empty v2; int v3; };
struct BFu9s_Sf_Ip { unsigned short v1:9; empty v2; int * v3; };
struct BFu9s_Sf_L { unsigned short v1:9; empty v2; long long v3; };
struct BFu9s_Sf_S { unsigned short v1:9; empty v2; short v3; };
struct BFu9s_Sf_Sf { unsigned short v1:9; empty v2; empty v3; };
struct BFu9s_Sf_Uc { unsigned short v1:9; empty v2; unsigned char v3; };
struct BFu9s_Sf_Ui { unsigned short v1:9; empty v2; unsigned int v3; };
struct BFu9s_Sf_Ul { unsigned short v1:9; empty v2; unsigned long long v3; };
struct BFu9s_Sf_Us { unsigned short v1:9; empty v2; unsigned short v3; };
struct BFu9s_Sf_Vp { unsigned short v1:9; empty v2; void * v3; };
struct BFu9s_Uc_Sf { unsigned short v1:9; unsigned char v2; empty v3; };
struct BFu9s_Ui_Sf { unsigned short v1:9; unsigned int v2; empty v3; };
struct BFu9s_Ul_Sf { unsigned short v1:9; unsigned long long v2; empty v3; };
struct BFu9s_Us_Sf { unsigned short v1:9; unsigned short v2; empty v3; };
struct BFu9s_Vp_Sf { unsigned short v1:9; void * v2; empty v3; };
struct C_BFu15i_Sf { char v1; unsigned int v2:15; empty v3; };
struct C_BFu15ll_Sf { char v1; unsigned long long v2:15; empty v3; };
struct C_BFu15s_Sf { char v1; unsigned short v2:15; empty v3; };
struct C_BFu16i_Sf { char v1; unsigned int v2:16; empty v3; };
struct C_BFu16ll_Sf { char v1; unsigned long long v2:16; empty v3; };
struct C_BFu16s_Sf { char v1; unsigned short v2:16; empty v3; };
struct C_BFu17i_Sf { char v1; unsigned int v2:17; empty v3; };
struct C_BFu17ll_Sf { char v1; unsigned long long v2:17; empty v3; };
struct C_BFu1c_Sf { char v1; unsigned char v2:1; empty v3; };
struct C_BFu1i_Sf { char v1; unsigned int v2:1; empty v3; };
struct C_BFu1ll_Sf { char v1; unsigned long long v2:1; empty v3; };
struct C_BFu1s_Sf { char v1; unsigned short v2:1; empty v3; };
struct C_BFu31i_Sf { char v1; unsigned int v2:31; empty v3; };
struct C_BFu31ll_Sf { char v1; unsigned long long v2:31; empty v3; };
struct C_BFu32i_Sf { char v1; unsigned int v2:32; empty v3; };
struct C_BFu32ll_Sf { char v1; unsigned long long v2:32; empty v3; };
struct C_BFu33_Sf { char v1; unsigned long long v2:33; empty v3; };
struct C_BFu7c_Sf { char v1; unsigned char v2:7; empty v3; };
struct C_BFu7i_Sf { char v1; unsigned int v2:7; empty v3; };
struct C_BFu7ll_Sf { char v1; unsigned long long v2:7; empty v3; };
struct C_BFu7s_Sf { char v1; unsigned short v2:7; empty v3; };
struct C_BFu8c_Sf { char v1; unsigned char v2:8; empty v3; };
struct C_BFu8i_Sf { char v1; unsigned int v2:8; empty v3; };
struct C_BFu8ll_Sf { char v1; unsigned long long v2:8; empty v3; };
struct C_BFu8s_Sf { char v1; unsigned short v2:8; empty v3; };
struct C_BFu9i_Sf { char v1; unsigned int v2:9; empty v3; };
struct C_BFu9ll_Sf { char v1; unsigned long long v2:9; empty v3; };
struct C_BFu9s_Sf { char v1; unsigned short v2:9; empty v3; };
struct C_C_Sf { char v1; char v2; empty v3; };
struct C_D_Sf { char v1; double v2; empty v3; };
struct C_F_Sf { char v1; float v2; empty v3; };
struct C_I_Sf { char v1; int v2; empty v3; };
struct C_Ip_Sf { char v1; int * v2; empty v3; };
struct C_L_Sf { char v1; long long v2; empty v3; };
struct C_S_Sf { char v1; short v2; empty v3; };
struct C_Sf { char v1; empty v2; };
struct C_Sf_BFu15i { char v1; empty v2; unsigned int v3:15; };
struct C_Sf_BFu15ll { char v1; empty v2; unsigned long long v3:15; };
struct C_Sf_BFu15s { char v1; empty v2; unsigned short v3:15; };
struct C_Sf_BFu16i { char v1; empty v2; unsigned int v3:16; };
struct C_Sf_BFu16ll { char v1; empty v2; unsigned long long v3:16; };
struct C_Sf_BFu16s { char v1; empty v2; unsigned short v3:16; };
struct C_Sf_BFu17i { char v1; empty v2; unsigned int v3:17; };
struct C_Sf_BFu17ll { char v1; empty v2; unsigned long long v3:17; };
struct C_Sf_BFu1c { char v1; empty v2; unsigned char v3:1; };
struct C_Sf_BFu1i { char v1; empty v2; unsigned int v3:1; };
struct C_Sf_BFu1ll { char v1; empty v2; unsigned long long v3:1; };
struct C_Sf_BFu1s { char v1; empty v2; unsigned short v3:1; };
struct C_Sf_BFu31i { char v1; empty v2; unsigned int v3:31; };
struct C_Sf_BFu31ll { char v1; empty v2; unsigned long long v3:31; };
struct C_Sf_BFu32i { char v1; empty v2; unsigned int v3:32; };
struct C_Sf_BFu32ll { char v1; empty v2; unsigned long long v3:32; };
struct C_Sf_BFu33 { char v1; empty v2; unsigned long long v3:33; };
struct C_Sf_BFu7c { char v1; empty v2; unsigned char v3:7; };
struct C_Sf_BFu7i { char v1; empty v2; unsigned int v3:7; };
struct C_Sf_BFu7ll { char v1; empty v2; unsigned long long v3:7; };
struct C_Sf_BFu7s { char v1; empty v2; unsigned short v3:7; };
struct C_Sf_BFu8c { char v1; empty v2; unsigned char v3:8; };
struct C_Sf_BFu8i { char v1; empty v2; unsigned int v3:8; };
struct C_Sf_BFu8ll { char v1; empty v2; unsigned long long v3:8; };
struct C_Sf_BFu8s { char v1; empty v2; unsigned short v3:8; };
struct C_Sf_BFu9i { char v1; empty v2; unsigned int v3:9; };
struct C_Sf_BFu9ll { char v1; empty v2; unsigned long long v3:9; };
struct C_Sf_BFu9s { char v1; empty v2; unsigned short v3:9; };
struct C_Sf_C { char v1; empty v2; char v3; };
struct C_Sf_D { char v1; empty v2; double v3; };
struct C_Sf_F { char v1; empty v2; float v3; };
struct C_Sf_I { char v1; empty v2; int v3; };
struct C_Sf_Ip { char v1; empty v2; int * v3; };
struct C_Sf_L { char v1; empty v2; long long v3; };
struct C_Sf_S { char v1; empty v2; short v3; };
struct C_Sf_Sf { char v1; empty v2; empty v3; };
struct C_Sf_Uc { char v1; empty v2; unsigned char v3; };
struct C_Sf_Ui { char v1; empty v2; unsigned int v3; };
struct C_Sf_Ul { char v1; empty v2; unsigned long long v3; };
struct C_Sf_Us { char v1; empty v2; unsigned short v3; };
struct C_Sf_Vp { char v1; empty v2; void * v3; };
struct C_Uc_Sf { char v1; unsigned char v2; empty v3; };
struct C_Ui_Sf { char v1; unsigned int v2; empty v3; };
struct C_Ul_Sf { char v1; unsigned long long v2; empty v3; };
struct C_Us_Sf { char v1; unsigned short v2; empty v3; };
struct C_Vp_Sf { char v1; void * v2; empty v3; };
struct D_BFu15i_Sf { double v1; unsigned int v2:15; empty v3; };
struct D_BFu15ll_Sf { double v1; unsigned long long v2:15; empty v3; };
struct D_BFu15s_Sf { double v1; unsigned short v2:15; empty v3; };
struct D_BFu16i_Sf { double v1; unsigned int v2:16; empty v3; };
struct D_BFu16ll_Sf { double v1; unsigned long long v2:16; empty v3; };
struct D_BFu16s_Sf { double v1; unsigned short v2:16; empty v3; };
struct D_BFu17i_Sf { double v1; unsigned int v2:17; empty v3; };
struct D_BFu17ll_Sf { double v1; unsigned long long v2:17; empty v3; };
struct D_BFu1c_Sf { double v1; unsigned char v2:1; empty v3; };
struct D_BFu1i_Sf { double v1; unsigned int v2:1; empty v3; };
struct D_BFu1ll_Sf { double v1; unsigned long long v2:1; empty v3; };
struct D_BFu1s_Sf { double v1; unsigned short v2:1; empty v3; };
struct D_BFu31i_Sf { double v1; unsigned int v2:31; empty v3; };
struct D_BFu31ll_Sf { double v1; unsigned long long v2:31; empty v3; };
struct D_BFu32i_Sf { double v1; unsigned int v2:32; empty v3; };
struct D_BFu32ll_Sf { double v1; unsigned long long v2:32; empty v3; };
struct D_BFu33_Sf { double v1; unsigned long long v2:33; empty v3; };
struct D_BFu7c_Sf { double v1; unsigned char v2:7; empty v3; };
struct D_BFu7i_Sf { double v1; unsigned int v2:7; empty v3; };
struct D_BFu7ll_Sf { double v1; unsigned long long v2:7; empty v3; };
struct D_BFu7s_Sf { double v1; unsigned short v2:7; empty v3; };
struct D_BFu8c_Sf { double v1; unsigned char v2:8; empty v3; };
struct D_BFu8i_Sf { double v1; unsigned int v2:8; empty v3; };
struct D_BFu8ll_Sf { double v1; unsigned long long v2:8; empty v3; };
struct D_BFu8s_Sf { double v1; unsigned short v2:8; empty v3; };
struct D_BFu9i_Sf { double v1; unsigned int v2:9; empty v3; };
struct D_BFu9ll_Sf { double v1; unsigned long long v2:9; empty v3; };
struct D_BFu9s_Sf { double v1; unsigned short v2:9; empty v3; };
struct D_C_Sf { double v1; char v2; empty v3; };
struct D_D_Sf { double v1; double v2; empty v3; };
struct D_F_Sf { double v1; float v2; empty v3; };
struct D_I_Sf { double v1; int v2; empty v3; };
struct D_Ip_Sf { double v1; int * v2; empty v3; };
struct D_L_Sf { double v1; long long v2; empty v3; };
struct D_S_Sf { double v1; short v2; empty v3; };
struct D_Sf { double v1; empty v2; };
struct D_Sf_BFu15i { double v1; empty v2; unsigned int v3:15; };
struct D_Sf_BFu15ll { double v1; empty v2; unsigned long long v3:15; };
struct D_Sf_BFu15s { double v1; empty v2; unsigned short v3:15; };
struct D_Sf_BFu16i { double v1; empty v2; unsigned int v3:16; };
struct D_Sf_BFu16ll { double v1; empty v2; unsigned long long v3:16; };
struct D_Sf_BFu16s { double v1; empty v2; unsigned short v3:16; };
struct D_Sf_BFu17i { double v1; empty v2; unsigned int v3:17; };
struct D_Sf_BFu17ll { double v1; empty v2; unsigned long long v3:17; };
struct D_Sf_BFu1c { double v1; empty v2; unsigned char v3:1; };
struct D_Sf_BFu1i { double v1; empty v2; unsigned int v3:1; };
struct D_Sf_BFu1ll { double v1; empty v2; unsigned long long v3:1; };
struct D_Sf_BFu1s { double v1; empty v2; unsigned short v3:1; };
struct D_Sf_BFu31i { double v1; empty v2; unsigned int v3:31; };
struct D_Sf_BFu31ll { double v1; empty v2; unsigned long long v3:31; };
struct D_Sf_BFu32i { double v1; empty v2; unsigned int v3:32; };
struct D_Sf_BFu32ll { double v1; empty v2; unsigned long long v3:32; };
struct D_Sf_BFu33 { double v1; empty v2; unsigned long long v3:33; };
struct D_Sf_BFu7c { double v1; empty v2; unsigned char v3:7; };
struct D_Sf_BFu7i { double v1; empty v2; unsigned int v3:7; };
struct D_Sf_BFu7ll { double v1; empty v2; unsigned long long v3:7; };
struct D_Sf_BFu7s { double v1; empty v2; unsigned short v3:7; };
struct D_Sf_BFu8c { double v1; empty v2; unsigned char v3:8; };
struct D_Sf_BFu8i { double v1; empty v2; unsigned int v3:8; };
struct D_Sf_BFu8ll { double v1; empty v2; unsigned long long v3:8; };
struct D_Sf_BFu8s { double v1; empty v2; unsigned short v3:8; };
struct D_Sf_BFu9i { double v1; empty v2; unsigned int v3:9; };
struct D_Sf_BFu9ll { double v1; empty v2; unsigned long long v3:9; };
struct D_Sf_BFu9s { double v1; empty v2; unsigned short v3:9; };
struct D_Sf_C { double v1; empty v2; char v3; };
struct D_Sf_D { double v1; empty v2; double v3; };
struct D_Sf_F { double v1; empty v2; float v3; };
struct D_Sf_I { double v1; empty v2; int v3; };
struct D_Sf_Ip { double v1; empty v2; int * v3; };
struct D_Sf_L { double v1; empty v2; long long v3; };
struct D_Sf_S { double v1; empty v2; short v3; };
struct D_Sf_Sf { double v1; empty v2; empty v3; };
struct D_Sf_Uc { double v1; empty v2; unsigned char v3; };
struct D_Sf_Ui { double v1; empty v2; unsigned int v3; };
struct D_Sf_Ul { double v1; empty v2; unsigned long long v3; };
struct D_Sf_Us { double v1; empty v2; unsigned short v3; };
struct D_Sf_Vp { double v1; empty v2; void * v3; };
struct D_Uc_Sf { double v1; unsigned char v2; empty v3; };
struct D_Ui_Sf { double v1; unsigned int v2; empty v3; };
struct D_Ul_Sf { double v1; unsigned long long v2; empty v3; };
struct D_Us_Sf { double v1; unsigned short v2; empty v3; };
struct D_Vp_Sf { double v1; void * v2; empty v3; };
struct F_BFu15i_Sf { float v1; unsigned int v2:15; empty v3; };
struct F_BFu15ll_Sf { float v1; unsigned long long v2:15; empty v3; };
struct F_BFu15s_Sf { float v1; unsigned short v2:15; empty v3; };
struct F_BFu16i_Sf { float v1; unsigned int v2:16; empty v3; };
struct F_BFu16ll_Sf { float v1; unsigned long long v2:16; empty v3; };
struct F_BFu16s_Sf { float v1; unsigned short v2:16; empty v3; };
struct F_BFu17i_Sf { float v1; unsigned int v2:17; empty v3; };
struct F_BFu17ll_Sf { float v1; unsigned long long v2:17; empty v3; };
struct F_BFu1c_Sf { float v1; unsigned char v2:1; empty v3; };
struct F_BFu1i_Sf { float v1; unsigned int v2:1; empty v3; };
struct F_BFu1ll_Sf { float v1; unsigned long long v2:1; empty v3; };
struct F_BFu1s_Sf { float v1; unsigned short v2:1; empty v3; };
struct F_BFu31i_Sf { float v1; unsigned int v2:31; empty v3; };
struct F_BFu31ll_Sf { float v1; unsigned long long v2:31; empty v3; };
struct F_BFu32i_Sf { float v1; unsigned int v2:32; empty v3; };
struct F_BFu32ll_Sf { float v1; unsigned long long v2:32; empty v3; };
struct F_BFu33_Sf { float v1; unsigned long long v2:33; empty v3; };
struct F_BFu7c_Sf { float v1; unsigned char v2:7; empty v3; };
struct F_BFu7i_Sf { float v1; unsigned int v2:7; empty v3; };
struct F_BFu7ll_Sf { float v1; unsigned long long v2:7; empty v3; };
struct F_BFu7s_Sf { float v1; unsigned short v2:7; empty v3; };
struct F_BFu8c_Sf { float v1; unsigned char v2:8; empty v3; };
struct F_BFu8i_Sf { float v1; unsigned int v2:8; empty v3; };
struct F_BFu8ll_Sf { float v1; unsigned long long v2:8; empty v3; };
struct F_BFu8s_Sf { float v1; unsigned short v2:8; empty v3; };
struct F_BFu9i_Sf { float v1; unsigned int v2:9; empty v3; };
struct F_BFu9ll_Sf { float v1; unsigned long long v2:9; empty v3; };
struct F_BFu9s_Sf { float v1; unsigned short v2:9; empty v3; };
struct F_C_Sf { float v1; char v2; empty v3; };
struct F_D_Sf { float v1; double v2; empty v3; };
struct F_F_Sf { float v1; float v2; empty v3; };
struct F_I_Sf { float v1; int v2; empty v3; };
struct F_Ip_Sf { float v1; int * v2; empty v3; };
struct F_L_Sf { float v1; long long v2; empty v3; };
struct F_S_Sf { float v1; short v2; empty v3; };
struct F_Sf { float v1; empty v2; };
struct F_Sf_BFu15i { float v1; empty v2; unsigned int v3:15; };
struct F_Sf_BFu15ll { float v1; empty v2; unsigned long long v3:15; };
struct F_Sf_BFu15s { float v1; empty v2; unsigned short v3:15; };
struct F_Sf_BFu16i { float v1; empty v2; unsigned int v3:16; };
struct F_Sf_BFu16ll { float v1; empty v2; unsigned long long v3:16; };
struct F_Sf_BFu16s { float v1; empty v2; unsigned short v3:16; };
struct F_Sf_BFu17i { float v1; empty v2; unsigned int v3:17; };
struct F_Sf_BFu17ll { float v1; empty v2; unsigned long long v3:17; };
struct F_Sf_BFu1c { float v1; empty v2; unsigned char v3:1; };
struct F_Sf_BFu1i { float v1; empty v2; unsigned int v3:1; };
struct F_Sf_BFu1ll { float v1; empty v2; unsigned long long v3:1; };
struct F_Sf_BFu1s { float v1; empty v2; unsigned short v3:1; };
struct F_Sf_BFu31i { float v1; empty v2; unsigned int v3:31; };
struct F_Sf_BFu31ll { float v1; empty v2; unsigned long long v3:31; };
struct F_Sf_BFu32i { float v1; empty v2; unsigned int v3:32; };
struct F_Sf_BFu32ll { float v1; empty v2; unsigned long long v3:32; };
struct F_Sf_BFu33 { float v1; empty v2; unsigned long long v3:33; };
struct F_Sf_BFu7c { float v1; empty v2; unsigned char v3:7; };
struct F_Sf_BFu7i { float v1; empty v2; unsigned int v3:7; };
struct F_Sf_BFu7ll { float v1; empty v2; unsigned long long v3:7; };
struct F_Sf_BFu7s { float v1; empty v2; unsigned short v3:7; };
struct F_Sf_BFu8c { float v1; empty v2; unsigned char v3:8; };
struct F_Sf_BFu8i { float v1; empty v2; unsigned int v3:8; };
struct F_Sf_BFu8ll { float v1; empty v2; unsigned long long v3:8; };
struct F_Sf_BFu8s { float v1; empty v2; unsigned short v3:8; };
struct F_Sf_BFu9i { float v1; empty v2; unsigned int v3:9; };
struct F_Sf_BFu9ll { float v1; empty v2; unsigned long long v3:9; };
struct F_Sf_BFu9s { float v1; empty v2; unsigned short v3:9; };
struct F_Sf_C { float v1; empty v2; char v3; };
struct F_Sf_D { float v1; empty v2; double v3; };
struct F_Sf_F { float v1; empty v2; float v3; };
struct F_Sf_I { float v1; empty v2; int v3; };
struct F_Sf_Ip { float v1; empty v2; int * v3; };
struct F_Sf_L { float v1; empty v2; long long v3; };
struct F_Sf_S { float v1; empty v2; short v3; };
struct F_Sf_Sf { float v1; empty v2; empty v3; };
struct F_Sf_Uc { float v1; empty v2; unsigned char v3; };
struct F_Sf_Ui { float v1; empty v2; unsigned int v3; };
struct F_Sf_Ul { float v1; empty v2; unsigned long long v3; };
struct F_Sf_Us { float v1; empty v2; unsigned short v3; };
struct F_Sf_Vp { float v1; empty v2; void * v3; };
struct F_Uc_Sf { float v1; unsigned char v2; empty v3; };
struct F_Ui_Sf { float v1; unsigned int v2; empty v3; };
struct F_Ul_Sf { float v1; unsigned long long v2; empty v3; };
struct F_Us_Sf { float v1; unsigned short v2; empty v3; };
struct F_Vp_Sf { float v1; void * v2; empty v3; };
struct I_BFu15i_Sf { int v1; unsigned int v2:15; empty v3; };
struct I_BFu15ll_Sf { int v1; unsigned long long v2:15; empty v3; };
struct I_BFu15s_Sf { int v1; unsigned short v2:15; empty v3; };
struct I_BFu16i_Sf { int v1; unsigned int v2:16; empty v3; };
struct I_BFu16ll_Sf { int v1; unsigned long long v2:16; empty v3; };
struct I_BFu16s_Sf { int v1; unsigned short v2:16; empty v3; };
struct I_BFu17i_Sf { int v1; unsigned int v2:17; empty v3; };
struct I_BFu17ll_Sf { int v1; unsigned long long v2:17; empty v3; };
struct I_BFu1c_Sf { int v1; unsigned char v2:1; empty v3; };
struct I_BFu1i_Sf { int v1; unsigned int v2:1; empty v3; };
struct I_BFu1ll_Sf { int v1; unsigned long long v2:1; empty v3; };
struct I_BFu1s_Sf { int v1; unsigned short v2:1; empty v3; };
struct I_BFu31i_Sf { int v1; unsigned int v2:31; empty v3; };
struct I_BFu31ll_Sf { int v1; unsigned long long v2:31; empty v3; };
struct I_BFu32i_Sf { int v1; unsigned int v2:32; empty v3; };
struct I_BFu32ll_Sf { int v1; unsigned long long v2:32; empty v3; };
struct I_BFu33_Sf { int v1; unsigned long long v2:33; empty v3; };
struct I_BFu7c_Sf { int v1; unsigned char v2:7; empty v3; };
struct I_BFu7i_Sf { int v1; unsigned int v2:7; empty v3; };
struct I_BFu7ll_Sf { int v1; unsigned long long v2:7; empty v3; };
struct I_BFu7s_Sf { int v1; unsigned short v2:7; empty v3; };
struct I_BFu8c_Sf { int v1; unsigned char v2:8; empty v3; };
struct I_BFu8i_Sf { int v1; unsigned int v2:8; empty v3; };
struct I_BFu8ll_Sf { int v1; unsigned long long v2:8; empty v3; };
struct I_BFu8s_Sf { int v1; unsigned short v2:8; empty v3; };
struct I_BFu9i_Sf { int v1; unsigned int v2:9; empty v3; };
struct I_BFu9ll_Sf { int v1; unsigned long long v2:9; empty v3; };
struct I_BFu9s_Sf { int v1; unsigned short v2:9; empty v3; };
struct I_C_Sf { int v1; char v2; empty v3; };
struct I_D_Sf { int v1; double v2; empty v3; };
struct I_F_Sf { int v1; float v2; empty v3; };
struct I_I_Sf { int v1; int v2; empty v3; };
struct I_Ip_Sf { int v1; int * v2; empty v3; };
struct I_L_Sf { int v1; long long v2; empty v3; };
struct I_S_Sf { int v1; short v2; empty v3; };
struct I_Sf { int v1; empty v2; };
struct I_Sf_BFu15i { int v1; empty v2; unsigned int v3:15; };
struct I_Sf_BFu15ll { int v1; empty v2; unsigned long long v3:15; };
struct I_Sf_BFu15s { int v1; empty v2; unsigned short v3:15; };
struct I_Sf_BFu16i { int v1; empty v2; unsigned int v3:16; };
struct I_Sf_BFu16ll { int v1; empty v2; unsigned long long v3:16; };
struct I_Sf_BFu16s { int v1; empty v2; unsigned short v3:16; };
struct I_Sf_BFu17i { int v1; empty v2; unsigned int v3:17; };
struct I_Sf_BFu17ll { int v1; empty v2; unsigned long long v3:17; };
struct I_Sf_BFu1c { int v1; empty v2; unsigned char v3:1; };
struct I_Sf_BFu1i { int v1; empty v2; unsigned int v3:1; };
struct I_Sf_BFu1ll { int v1; empty v2; unsigned long long v3:1; };
struct I_Sf_BFu1s { int v1; empty v2; unsigned short v3:1; };
struct I_Sf_BFu31i { int v1; empty v2; unsigned int v3:31; };
struct I_Sf_BFu31ll { int v1; empty v2; unsigned long long v3:31; };
struct I_Sf_BFu32i { int v1; empty v2; unsigned int v3:32; };
struct I_Sf_BFu32ll { int v1; empty v2; unsigned long long v3:32; };
struct I_Sf_BFu33 { int v1; empty v2; unsigned long long v3:33; };
struct I_Sf_BFu7c { int v1; empty v2; unsigned char v3:7; };
struct I_Sf_BFu7i { int v1; empty v2; unsigned int v3:7; };
struct I_Sf_BFu7ll { int v1; empty v2; unsigned long long v3:7; };
struct I_Sf_BFu7s { int v1; empty v2; unsigned short v3:7; };
struct I_Sf_BFu8c { int v1; empty v2; unsigned char v3:8; };
struct I_Sf_BFu8i { int v1; empty v2; unsigned int v3:8; };
struct I_Sf_BFu8ll { int v1; empty v2; unsigned long long v3:8; };
struct I_Sf_BFu8s { int v1; empty v2; unsigned short v3:8; };
struct I_Sf_BFu9i { int v1; empty v2; unsigned int v3:9; };
struct I_Sf_BFu9ll { int v1; empty v2; unsigned long long v3:9; };
struct I_Sf_BFu9s { int v1; empty v2; unsigned short v3:9; };
struct I_Sf_C { int v1; empty v2; char v3; };
struct I_Sf_D { int v1; empty v2; double v3; };
struct I_Sf_F { int v1; empty v2; float v3; };
struct I_Sf_I { int v1; empty v2; int v3; };
struct I_Sf_Ip { int v1; empty v2; int * v3; };
struct I_Sf_L { int v1; empty v2; long long v3; };
struct I_Sf_S { int v1; empty v2; short v3; };
struct I_Sf_Sf { int v1; empty v2; empty v3; };
struct I_Sf_Uc { int v1; empty v2; unsigned char v3; };
struct I_Sf_Ui { int v1; empty v2; unsigned int v3; };
struct I_Sf_Ul { int v1; empty v2; unsigned long long v3; };
struct I_Sf_Us { int v1; empty v2; unsigned short v3; };
struct I_Sf_Vp { int v1; empty v2; void * v3; };
struct I_Uc_Sf { int v1; unsigned char v2; empty v3; };
struct I_Ui_Sf { int v1; unsigned int v2; empty v3; };
struct I_Ul_Sf { int v1; unsigned long long v2; empty v3; };
struct I_Us_Sf { int v1; unsigned short v2; empty v3; };
struct I_Vp_Sf { int v1; void * v2; empty v3; };
struct Ip_BFu15i_Sf { int * v1; unsigned int v2:15; empty v3; };
struct Ip_BFu15ll_Sf { int * v1; unsigned long long v2:15; empty v3; };
struct Ip_BFu15s_Sf { int * v1; unsigned short v2:15; empty v3; };
struct Ip_BFu16i_Sf { int * v1; unsigned int v2:16; empty v3; };
struct Ip_BFu16ll_Sf { int * v1; unsigned long long v2:16; empty v3; };
struct Ip_BFu16s_Sf { int * v1; unsigned short v2:16; empty v3; };
struct Ip_BFu17i_Sf { int * v1; unsigned int v2:17; empty v3; };
struct Ip_BFu17ll_Sf { int * v1; unsigned long long v2:17; empty v3; };
struct Ip_BFu1c_Sf { int * v1; unsigned char v2:1; empty v3; };
struct Ip_BFu1i_Sf { int * v1; unsigned int v2:1; empty v3; };
struct Ip_BFu1ll_Sf { int * v1; unsigned long long v2:1; empty v3; };
struct Ip_BFu1s_Sf { int * v1; unsigned short v2:1; empty v3; };
struct Ip_BFu31i_Sf { int * v1; unsigned int v2:31; empty v3; };
struct Ip_BFu31ll_Sf { int * v1; unsigned long long v2:31; empty v3; };
struct Ip_BFu32i_Sf { int * v1; unsigned int v2:32; empty v3; };
struct Ip_BFu32ll_Sf { int * v1; unsigned long long v2:32; empty v3; };
struct Ip_BFu33_Sf { int * v1; unsigned long long v2:33; empty v3; };
struct Ip_BFu7c_Sf { int * v1; unsigned char v2:7; empty v3; };
struct Ip_BFu7i_Sf { int * v1; unsigned int v2:7; empty v3; };
struct Ip_BFu7ll_Sf { int * v1; unsigned long long v2:7; empty v3; };
struct Ip_BFu7s_Sf { int * v1; unsigned short v2:7; empty v3; };
struct Ip_BFu8c_Sf { int * v1; unsigned char v2:8; empty v3; };
struct Ip_BFu8i_Sf { int * v1; unsigned int v2:8; empty v3; };
struct Ip_BFu8ll_Sf { int * v1; unsigned long long v2:8; empty v3; };
struct Ip_BFu8s_Sf { int * v1; unsigned short v2:8; empty v3; };
struct Ip_BFu9i_Sf { int * v1; unsigned int v2:9; empty v3; };
struct Ip_BFu9ll_Sf { int * v1; unsigned long long v2:9; empty v3; };
struct Ip_BFu9s_Sf { int * v1; unsigned short v2:9; empty v3; };
struct Ip_C_Sf { int * v1; char v2; empty v3; };
struct Ip_D_Sf { int * v1; double v2; empty v3; };
struct Ip_F_Sf { int * v1; float v2; empty v3; };
struct Ip_I_Sf { int * v1; int v2; empty v3; };
struct Ip_Ip_Sf { int * v1; int * v2; empty v3; };
struct Ip_L_Sf { int * v1; long long v2; empty v3; };
struct Ip_S_Sf { int * v1; short v2; empty v3; };
struct Ip_Sf { int * v1; empty v2; };
struct Ip_Sf_BFu15i { int * v1; empty v2; unsigned int v3:15; };
struct Ip_Sf_BFu15ll { int * v1; empty v2; unsigned long long v3:15; };
struct Ip_Sf_BFu15s { int * v1; empty v2; unsigned short v3:15; };
struct Ip_Sf_BFu16i { int * v1; empty v2; unsigned int v3:16; };
struct Ip_Sf_BFu16ll { int * v1; empty v2; unsigned long long v3:16; };
struct Ip_Sf_BFu16s { int * v1; empty v2; unsigned short v3:16; };
struct Ip_Sf_BFu17i { int * v1; empty v2; unsigned int v3:17; };
struct Ip_Sf_BFu17ll { int * v1; empty v2; unsigned long long v3:17; };
struct Ip_Sf_BFu1c { int * v1; empty v2; unsigned char v3:1; };
struct Ip_Sf_BFu1i { int * v1; empty v2; unsigned int v3:1; };
struct Ip_Sf_BFu1ll { int * v1; empty v2; unsigned long long v3:1; };
struct Ip_Sf_BFu1s { int * v1; empty v2; unsigned short v3:1; };
struct Ip_Sf_BFu31i { int * v1; empty v2; unsigned int v3:31; };
struct Ip_Sf_BFu31ll { int * v1; empty v2; unsigned long long v3:31; };
struct Ip_Sf_BFu32i { int * v1; empty v2; unsigned int v3:32; };
struct Ip_Sf_BFu32ll { int * v1; empty v2; unsigned long long v3:32; };
struct Ip_Sf_BFu33 { int * v1; empty v2; unsigned long long v3:33; };
struct Ip_Sf_BFu7c { int * v1; empty v2; unsigned char v3:7; };
struct Ip_Sf_BFu7i { int * v1; empty v2; unsigned int v3:7; };
struct Ip_Sf_BFu7ll { int * v1; empty v2; unsigned long long v3:7; };
struct Ip_Sf_BFu7s { int * v1; empty v2; unsigned short v3:7; };
struct Ip_Sf_BFu8c { int * v1; empty v2; unsigned char v3:8; };
struct Ip_Sf_BFu8i { int * v1; empty v2; unsigned int v3:8; };
struct Ip_Sf_BFu8ll { int * v1; empty v2; unsigned long long v3:8; };
struct Ip_Sf_BFu8s { int * v1; empty v2; unsigned short v3:8; };
struct Ip_Sf_BFu9i { int * v1; empty v2; unsigned int v3:9; };
struct Ip_Sf_BFu9ll { int * v1; empty v2; unsigned long long v3:9; };
struct Ip_Sf_BFu9s { int * v1; empty v2; unsigned short v3:9; };
struct Ip_Sf_C { int * v1; empty v2; char v3; };
struct Ip_Sf_D { int * v1; empty v2; double v3; };
struct Ip_Sf_F { int * v1; empty v2; float v3; };
struct Ip_Sf_I { int * v1; empty v2; int v3; };
struct Ip_Sf_Ip { int * v1; empty v2; int * v3; };
struct Ip_Sf_L { int * v1; empty v2; long long v3; };
struct Ip_Sf_S { int * v1; empty v2; short v3; };
struct Ip_Sf_Sf { int * v1; empty v2; empty v3; };
struct Ip_Sf_Uc { int * v1; empty v2; unsigned char v3; };
struct Ip_Sf_Ui { int * v1; empty v2; unsigned int v3; };
struct Ip_Sf_Ul { int * v1; empty v2; unsigned long long v3; };
struct Ip_Sf_Us { int * v1; empty v2; unsigned short v3; };
struct Ip_Sf_Vp { int * v1; empty v2; void * v3; };
struct Ip_Uc_Sf { int * v1; unsigned char v2; empty v3; };
struct Ip_Ui_Sf { int * v1; unsigned int v2; empty v3; };
struct Ip_Ul_Sf { int * v1; unsigned long long v2; empty v3; };
struct Ip_Us_Sf { int * v1; unsigned short v2; empty v3; };
struct Ip_Vp_Sf { int * v1; void * v2; empty v3; };
struct L_BFu15i_Sf { long long v1; unsigned int v2:15; empty v3; };
struct L_BFu15ll_Sf { long long v1; unsigned long long v2:15; empty v3; };
struct L_BFu15s_Sf { long long v1; unsigned short v2:15; empty v3; };
struct L_BFu16i_Sf { long long v1; unsigned int v2:16; empty v3; };
struct L_BFu16ll_Sf { long long v1; unsigned long long v2:16; empty v3; };
struct L_BFu16s_Sf { long long v1; unsigned short v2:16; empty v3; };
struct L_BFu17i_Sf { long long v1; unsigned int v2:17; empty v3; };
struct L_BFu17ll_Sf { long long v1; unsigned long long v2:17; empty v3; };
struct L_BFu1c_Sf { long long v1; unsigned char v2:1; empty v3; };
struct L_BFu1i_Sf { long long v1; unsigned int v2:1; empty v3; };
struct L_BFu1ll_Sf { long long v1; unsigned long long v2:1; empty v3; };
struct L_BFu1s_Sf { long long v1; unsigned short v2:1; empty v3; };
struct L_BFu31i_Sf { long long v1; unsigned int v2:31; empty v3; };
struct L_BFu31ll_Sf { long long v1; unsigned long long v2:31; empty v3; };
struct L_BFu32i_Sf { long long v1; unsigned int v2:32; empty v3; };
struct L_BFu32ll_Sf { long long v1; unsigned long long v2:32; empty v3; };
struct L_BFu33_Sf { long long v1; unsigned long long v2:33; empty v3; };
struct L_BFu7c_Sf { long long v1; unsigned char v2:7; empty v3; };
struct L_BFu7i_Sf { long long v1; unsigned int v2:7; empty v3; };
struct L_BFu7ll_Sf { long long v1; unsigned long long v2:7; empty v3; };
struct L_BFu7s_Sf { long long v1; unsigned short v2:7; empty v3; };
struct L_BFu8c_Sf { long long v1; unsigned char v2:8; empty v3; };
struct L_BFu8i_Sf { long long v1; unsigned int v2:8; empty v3; };
struct L_BFu8ll_Sf { long long v1; unsigned long long v2:8; empty v3; };
struct L_BFu8s_Sf { long long v1; unsigned short v2:8; empty v3; };
struct L_BFu9i_Sf { long long v1; unsigned int v2:9; empty v3; };
struct L_BFu9ll_Sf { long long v1; unsigned long long v2:9; empty v3; };
struct L_BFu9s_Sf { long long v1; unsigned short v2:9; empty v3; };
struct L_C_Sf { long long v1; char v2; empty v3; };
struct L_D_Sf { long long v1; double v2; empty v3; };
struct L_F_Sf { long long v1; float v2; empty v3; };
struct L_I_Sf { long long v1; int v2; empty v3; };
struct L_Ip_Sf { long long v1; int * v2; empty v3; };
struct L_L_Sf { long long v1; long long v2; empty v3; };
struct L_S_Sf { long long v1; short v2; empty v3; };
struct L_Sf { long long v1; empty v2; };
struct L_Sf_BFu15i { long long v1; empty v2; unsigned int v3:15; };
struct L_Sf_BFu15ll { long long v1; empty v2; unsigned long long v3:15; };
struct L_Sf_BFu15s { long long v1; empty v2; unsigned short v3:15; };
struct L_Sf_BFu16i { long long v1; empty v2; unsigned int v3:16; };
struct L_Sf_BFu16ll { long long v1; empty v2; unsigned long long v3:16; };
struct L_Sf_BFu16s { long long v1; empty v2; unsigned short v3:16; };
struct L_Sf_BFu17i { long long v1; empty v2; unsigned int v3:17; };
struct L_Sf_BFu17ll { long long v1; empty v2; unsigned long long v3:17; };
struct L_Sf_BFu1c { long long v1; empty v2; unsigned char v3:1; };
struct L_Sf_BFu1i { long long v1; empty v2; unsigned int v3:1; };
struct L_Sf_BFu1ll { long long v1; empty v2; unsigned long long v3:1; };
struct L_Sf_BFu1s { long long v1; empty v2; unsigned short v3:1; };
struct L_Sf_BFu31i { long long v1; empty v2; unsigned int v3:31; };
struct L_Sf_BFu31ll { long long v1; empty v2; unsigned long long v3:31; };
struct L_Sf_BFu32i { long long v1; empty v2; unsigned int v3:32; };
struct L_Sf_BFu32ll { long long v1; empty v2; unsigned long long v3:32; };
struct L_Sf_BFu33 { long long v1; empty v2; unsigned long long v3:33; };
struct L_Sf_BFu7c { long long v1; empty v2; unsigned char v3:7; };
struct L_Sf_BFu7i { long long v1; empty v2; unsigned int v3:7; };
struct L_Sf_BFu7ll { long long v1; empty v2; unsigned long long v3:7; };
struct L_Sf_BFu7s { long long v1; empty v2; unsigned short v3:7; };
struct L_Sf_BFu8c { long long v1; empty v2; unsigned char v3:8; };
struct L_Sf_BFu8i { long long v1; empty v2; unsigned int v3:8; };
struct L_Sf_BFu8ll { long long v1; empty v2; unsigned long long v3:8; };
struct L_Sf_BFu8s { long long v1; empty v2; unsigned short v3:8; };
struct L_Sf_BFu9i { long long v1; empty v2; unsigned int v3:9; };
struct L_Sf_BFu9ll { long long v1; empty v2; unsigned long long v3:9; };
struct L_Sf_BFu9s { long long v1; empty v2; unsigned short v3:9; };
struct L_Sf_C { long long v1; empty v2; char v3; };
struct L_Sf_D { long long v1; empty v2; double v3; };
struct L_Sf_F { long long v1; empty v2; float v3; };
struct L_Sf_I { long long v1; empty v2; int v3; };
struct L_Sf_Ip { long long v1; empty v2; int * v3; };
struct L_Sf_L { long long v1; empty v2; long long v3; };
struct L_Sf_S { long long v1; empty v2; short v3; };
struct L_Sf_Sf { long long v1; empty v2; empty v3; };
struct L_Sf_Uc { long long v1; empty v2; unsigned char v3; };
struct L_Sf_Ui { long long v1; empty v2; unsigned int v3; };
struct L_Sf_Ul { long long v1; empty v2; unsigned long long v3; };
struct L_Sf_Us { long long v1; empty v2; unsigned short v3; };
struct L_Sf_Vp { long long v1; empty v2; void * v3; };
struct L_Uc_Sf { long long v1; unsigned char v2; empty v3; };
struct L_Ui_Sf { long long v1; unsigned int v2; empty v3; };
struct L_Ul_Sf { long long v1; unsigned long long v2; empty v3; };
struct L_Us_Sf { long long v1; unsigned short v2; empty v3; };
struct L_Vp_Sf { long long v1; void * v2; empty v3; };
struct S_BFu15i_Sf { short v1; unsigned int v2:15; empty v3; };
struct S_BFu15ll_Sf { short v1; unsigned long long v2:15; empty v3; };
struct S_BFu15s_Sf { short v1; unsigned short v2:15; empty v3; };
struct S_BFu16i_Sf { short v1; unsigned int v2:16; empty v3; };
struct S_BFu16ll_Sf { short v1; unsigned long long v2:16; empty v3; };
struct S_BFu16s_Sf { short v1; unsigned short v2:16; empty v3; };
struct S_BFu17i_Sf { short v1; unsigned int v2:17; empty v3; };
struct S_BFu17ll_Sf { short v1; unsigned long long v2:17; empty v3; };
struct S_BFu1c_Sf { short v1; unsigned char v2:1; empty v3; };
struct S_BFu1i_Sf { short v1; unsigned int v2:1; empty v3; };
struct S_BFu1ll_Sf { short v1; unsigned long long v2:1; empty v3; };
struct S_BFu1s_Sf { short v1; unsigned short v2:1; empty v3; };
struct S_BFu31i_Sf { short v1; unsigned int v2:31; empty v3; };
struct S_BFu31ll_Sf { short v1; unsigned long long v2:31; empty v3; };
struct S_BFu32i_Sf { short v1; unsigned int v2:32; empty v3; };
struct S_BFu32ll_Sf { short v1; unsigned long long v2:32; empty v3; };
struct S_BFu33_Sf { short v1; unsigned long long v2:33; empty v3; };
struct S_BFu7c_Sf { short v1; unsigned char v2:7; empty v3; };
struct S_BFu7i_Sf { short v1; unsigned int v2:7; empty v3; };
struct S_BFu7ll_Sf { short v1; unsigned long long v2:7; empty v3; };
struct S_BFu7s_Sf { short v1; unsigned short v2:7; empty v3; };
struct S_BFu8c_Sf { short v1; unsigned char v2:8; empty v3; };
struct S_BFu8i_Sf { short v1; unsigned int v2:8; empty v3; };
struct S_BFu8ll_Sf { short v1; unsigned long long v2:8; empty v3; };
struct S_BFu8s_Sf { short v1; unsigned short v2:8; empty v3; };
struct S_BFu9i_Sf { short v1; unsigned int v2:9; empty v3; };
struct S_BFu9ll_Sf { short v1; unsigned long long v2:9; empty v3; };
struct S_BFu9s_Sf { short v1; unsigned short v2:9; empty v3; };
struct S_C_Sf { short v1; char v2; empty v3; };
struct S_D_Sf { short v1; double v2; empty v3; };
struct S_F_Sf { short v1; float v2; empty v3; };
struct S_I_Sf { short v1; int v2; empty v3; };
struct S_Ip_Sf { short v1; int * v2; empty v3; };
struct S_L_Sf { short v1; long long v2; empty v3; };
struct S_S_Sf { short v1; short v2; empty v3; };
struct S_Sf { short v1; empty v2; };
struct S_Sf_BFu15i { short v1; empty v2; unsigned int v3:15; };
struct S_Sf_BFu15ll { short v1; empty v2; unsigned long long v3:15; };
struct S_Sf_BFu15s { short v1; empty v2; unsigned short v3:15; };
struct S_Sf_BFu16i { short v1; empty v2; unsigned int v3:16; };
struct S_Sf_BFu16ll { short v1; empty v2; unsigned long long v3:16; };
struct S_Sf_BFu16s { short v1; empty v2; unsigned short v3:16; };
struct S_Sf_BFu17i { short v1; empty v2; unsigned int v3:17; };
struct S_Sf_BFu17ll { short v1; empty v2; unsigned long long v3:17; };
struct S_Sf_BFu1c { short v1; empty v2; unsigned char v3:1; };
struct S_Sf_BFu1i { short v1; empty v2; unsigned int v3:1; };
struct S_Sf_BFu1ll { short v1; empty v2; unsigned long long v3:1; };
struct S_Sf_BFu1s { short v1; empty v2; unsigned short v3:1; };
struct S_Sf_BFu31i { short v1; empty v2; unsigned int v3:31; };
struct S_Sf_BFu31ll { short v1; empty v2; unsigned long long v3:31; };
struct S_Sf_BFu32i { short v1; empty v2; unsigned int v3:32; };
struct S_Sf_BFu32ll { short v1; empty v2; unsigned long long v3:32; };
struct S_Sf_BFu33 { short v1; empty v2; unsigned long long v3:33; };
struct S_Sf_BFu7c { short v1; empty v2; unsigned char v3:7; };
struct S_Sf_BFu7i { short v1; empty v2; unsigned int v3:7; };
struct S_Sf_BFu7ll { short v1; empty v2; unsigned long long v3:7; };
struct S_Sf_BFu7s { short v1; empty v2; unsigned short v3:7; };
struct S_Sf_BFu8c { short v1; empty v2; unsigned char v3:8; };
struct S_Sf_BFu8i { short v1; empty v2; unsigned int v3:8; };
struct S_Sf_BFu8ll { short v1; empty v2; unsigned long long v3:8; };
struct S_Sf_BFu8s { short v1; empty v2; unsigned short v3:8; };
struct S_Sf_BFu9i { short v1; empty v2; unsigned int v3:9; };
struct S_Sf_BFu9ll { short v1; empty v2; unsigned long long v3:9; };
struct S_Sf_BFu9s { short v1; empty v2; unsigned short v3:9; };
struct S_Sf_C { short v1; empty v2; char v3; };
struct S_Sf_D { short v1; empty v2; double v3; };
struct S_Sf_F { short v1; empty v2; float v3; };
struct S_Sf_I { short v1; empty v2; int v3; };
struct S_Sf_Ip { short v1; empty v2; int * v3; };
struct S_Sf_L { short v1; empty v2; long long v3; };
struct S_Sf_S { short v1; empty v2; short v3; };
struct S_Sf_Sf { short v1; empty v2; empty v3; };
struct S_Sf_Uc { short v1; empty v2; unsigned char v3; };
struct S_Sf_Ui { short v1; empty v2; unsigned int v3; };
struct S_Sf_Ul { short v1; empty v2; unsigned long long v3; };
struct S_Sf_Us { short v1; empty v2; unsigned short v3; };
struct S_Sf_Vp { short v1; empty v2; void * v3; };
struct S_Uc_Sf { short v1; unsigned char v2; empty v3; };
struct S_Ui_Sf { short v1; unsigned int v2; empty v3; };
struct S_Ul_Sf { short v1; unsigned long long v2; empty v3; };
struct S_Us_Sf { short v1; unsigned short v2; empty v3; };
struct S_Vp_Sf { short v1; void * v2; empty v3; };
struct Sf { empty v1; };
struct Sf_BFu15i { empty v1; unsigned int v2:15; };
struct Sf_BFu15i_BFu15i { empty v1; unsigned int v2:15; unsigned int v3:15; };
struct Sf_BFu15i_BFu15ll { empty v1; unsigned int v2:15; unsigned long long v3:15; };
struct Sf_BFu15i_BFu15s { empty v1; unsigned int v2:15; unsigned short v3:15; };
struct Sf_BFu15i_BFu16i { empty v1; unsigned int v2:15; unsigned int v3:16; };
struct Sf_BFu15i_BFu16ll { empty v1; unsigned int v2:15; unsigned long long v3:16; };
struct Sf_BFu15i_BFu16s { empty v1; unsigned int v2:15; unsigned short v3:16; };
struct Sf_BFu15i_BFu17i { empty v1; unsigned int v2:15; unsigned int v3:17; };
struct Sf_BFu15i_BFu17ll { empty v1; unsigned int v2:15; unsigned long long v3:17; };
struct Sf_BFu15i_BFu1c { empty v1; unsigned int v2:15; unsigned char v3:1; };
struct Sf_BFu15i_BFu1i { empty v1; unsigned int v2:15; unsigned int v3:1; };
struct Sf_BFu15i_BFu1ll { empty v1; unsigned int v2:15; unsigned long long v3:1; };
struct Sf_BFu15i_BFu1s { empty v1; unsigned int v2:15; unsigned short v3:1; };
struct Sf_BFu15i_BFu31i { empty v1; unsigned int v2:15; unsigned int v3:31; };
struct Sf_BFu15i_BFu31ll { empty v1; unsigned int v2:15; unsigned long long v3:31; };
struct Sf_BFu15i_BFu32i { empty v1; unsigned int v2:15; unsigned int v3:32; };
struct Sf_BFu15i_BFu32ll { empty v1; unsigned int v2:15; unsigned long long v3:32; };
struct Sf_BFu15i_BFu33 { empty v1; unsigned int v2:15; unsigned long long v3:33; };
struct Sf_BFu15i_BFu7c { empty v1; unsigned int v2:15; unsigned char v3:7; };
struct Sf_BFu15i_BFu7i { empty v1; unsigned int v2:15; unsigned int v3:7; };
struct Sf_BFu15i_BFu7ll { empty v1; unsigned int v2:15; unsigned long long v3:7; };
struct Sf_BFu15i_BFu7s { empty v1; unsigned int v2:15; unsigned short v3:7; };
struct Sf_BFu15i_BFu8c { empty v1; unsigned int v2:15; unsigned char v3:8; };
struct Sf_BFu15i_BFu8i { empty v1; unsigned int v2:15; unsigned int v3:8; };
struct Sf_BFu15i_BFu8ll { empty v1; unsigned int v2:15; unsigned long long v3:8; };
struct Sf_BFu15i_BFu8s { empty v1; unsigned int v2:15; unsigned short v3:8; };
struct Sf_BFu15i_BFu9i { empty v1; unsigned int v2:15; unsigned int v3:9; };
struct Sf_BFu15i_BFu9ll { empty v1; unsigned int v2:15; unsigned long long v3:9; };
struct Sf_BFu15i_BFu9s { empty v1; unsigned int v2:15; unsigned short v3:9; };
struct Sf_BFu15i_C { empty v1; unsigned int v2:15; char v3; };
struct Sf_BFu15i_D { empty v1; unsigned int v2:15; double v3; };
struct Sf_BFu15i_F { empty v1; unsigned int v2:15; float v3; };
struct Sf_BFu15i_I { empty v1; unsigned int v2:15; int v3; };
struct Sf_BFu15i_Ip { empty v1; unsigned int v2:15; int * v3; };
struct Sf_BFu15i_L { empty v1; unsigned int v2:15; long long v3; };
struct Sf_BFu15i_S { empty v1; unsigned int v2:15; short v3; };
struct Sf_BFu15i_Sf { empty v1; unsigned int v2:15; empty v3; };
struct Sf_BFu15i_Uc { empty v1; unsigned int v2:15; unsigned char v3; };
struct Sf_BFu15i_Ui { empty v1; unsigned int v2:15; unsigned int v3; };
struct Sf_BFu15i_Ul { empty v1; unsigned int v2:15; unsigned long long v3; };
struct Sf_BFu15i_Us { empty v1; unsigned int v2:15; unsigned short v3; };
struct Sf_BFu15i_Vp { empty v1; unsigned int v2:15; void * v3; };
struct Sf_BFu15ll { empty v1; unsigned long long v2:15; };
struct Sf_BFu15ll_BFu15i { empty v1; unsigned long long v2:15; unsigned int v3:15; };
struct Sf_BFu15ll_BFu15ll { empty v1; unsigned long long v2:15; unsigned long long v3:15; };
struct Sf_BFu15ll_BFu15s { empty v1; unsigned long long v2:15; unsigned short v3:15; };
struct Sf_BFu15ll_BFu16i { empty v1; unsigned long long v2:15; unsigned int v3:16; };
struct Sf_BFu15ll_BFu16ll { empty v1; unsigned long long v2:15; unsigned long long v3:16; };
struct Sf_BFu15ll_BFu16s { empty v1; unsigned long long v2:15; unsigned short v3:16; };
struct Sf_BFu15ll_BFu17i { empty v1; unsigned long long v2:15; unsigned int v3:17; };
struct Sf_BFu15ll_BFu17ll { empty v1; unsigned long long v2:15; unsigned long long v3:17; };
struct Sf_BFu15ll_BFu1c { empty v1; unsigned long long v2:15; unsigned char v3:1; };
struct Sf_BFu15ll_BFu1i { empty v1; unsigned long long v2:15; unsigned int v3:1; };
struct Sf_BFu15ll_BFu1ll { empty v1; unsigned long long v2:15; unsigned long long v3:1; };
struct Sf_BFu15ll_BFu1s { empty v1; unsigned long long v2:15; unsigned short v3:1; };
struct Sf_BFu15ll_BFu31i { empty v1; unsigned long long v2:15; unsigned int v3:31; };
struct Sf_BFu15ll_BFu31ll { empty v1; unsigned long long v2:15; unsigned long long v3:31; };
struct Sf_BFu15ll_BFu32i { empty v1; unsigned long long v2:15; unsigned int v3:32; };
struct Sf_BFu15ll_BFu32ll { empty v1; unsigned long long v2:15; unsigned long long v3:32; };
struct Sf_BFu15ll_BFu33 { empty v1; unsigned long long v2:15; unsigned long long v3:33; };
struct Sf_BFu15ll_BFu7c { empty v1; unsigned long long v2:15; unsigned char v3:7; };
struct Sf_BFu15ll_BFu7i { empty v1; unsigned long long v2:15; unsigned int v3:7; };
struct Sf_BFu15ll_BFu7ll { empty v1; unsigned long long v2:15; unsigned long long v3:7; };
struct Sf_BFu15ll_BFu7s { empty v1; unsigned long long v2:15; unsigned short v3:7; };
struct Sf_BFu15ll_BFu8c { empty v1; unsigned long long v2:15; unsigned char v3:8; };
struct Sf_BFu15ll_BFu8i { empty v1; unsigned long long v2:15; unsigned int v3:8; };
struct Sf_BFu15ll_BFu8ll { empty v1; unsigned long long v2:15; unsigned long long v3:8; };
struct Sf_BFu15ll_BFu8s { empty v1; unsigned long long v2:15; unsigned short v3:8; };
struct Sf_BFu15ll_BFu9i { empty v1; unsigned long long v2:15; unsigned int v3:9; };
struct Sf_BFu15ll_BFu9ll { empty v1; unsigned long long v2:15; unsigned long long v3:9; };
struct Sf_BFu15ll_BFu9s { empty v1; unsigned long long v2:15; unsigned short v3:9; };
struct Sf_BFu15ll_C { empty v1; unsigned long long v2:15; char v3; };
struct Sf_BFu15ll_D { empty v1; unsigned long long v2:15; double v3; };
struct Sf_BFu15ll_F { empty v1; unsigned long long v2:15; float v3; };
struct Sf_BFu15ll_I { empty v1; unsigned long long v2:15; int v3; };
struct Sf_BFu15ll_Ip { empty v1; unsigned long long v2:15; int * v3; };
struct Sf_BFu15ll_L { empty v1; unsigned long long v2:15; long long v3; };
struct Sf_BFu15ll_S { empty v1; unsigned long long v2:15; short v3; };
struct Sf_BFu15ll_Sf { empty v1; unsigned long long v2:15; empty v3; };
struct Sf_BFu15ll_Uc { empty v1; unsigned long long v2:15; unsigned char v3; };
struct Sf_BFu15ll_Ui { empty v1; unsigned long long v2:15; unsigned int v3; };
struct Sf_BFu15ll_Ul { empty v1; unsigned long long v2:15; unsigned long long v3; };
struct Sf_BFu15ll_Us { empty v1; unsigned long long v2:15; unsigned short v3; };
struct Sf_BFu15ll_Vp { empty v1; unsigned long long v2:15; void * v3; };
struct Sf_BFu15s { empty v1; unsigned short v2:15; };
struct Sf_BFu15s_BFu15i { empty v1; unsigned short v2:15; unsigned int v3:15; };
struct Sf_BFu15s_BFu15ll { empty v1; unsigned short v2:15; unsigned long long v3:15; };
struct Sf_BFu15s_BFu15s { empty v1; unsigned short v2:15; unsigned short v3:15; };
struct Sf_BFu15s_BFu16i { empty v1; unsigned short v2:15; unsigned int v3:16; };
struct Sf_BFu15s_BFu16ll { empty v1; unsigned short v2:15; unsigned long long v3:16; };
struct Sf_BFu15s_BFu16s { empty v1; unsigned short v2:15; unsigned short v3:16; };
struct Sf_BFu15s_BFu17i { empty v1; unsigned short v2:15; unsigned int v3:17; };
struct Sf_BFu15s_BFu17ll { empty v1; unsigned short v2:15; unsigned long long v3:17; };
struct Sf_BFu15s_BFu1c { empty v1; unsigned short v2:15; unsigned char v3:1; };
struct Sf_BFu15s_BFu1i { empty v1; unsigned short v2:15; unsigned int v3:1; };
struct Sf_BFu15s_BFu1ll { empty v1; unsigned short v2:15; unsigned long long v3:1; };
struct Sf_BFu15s_BFu1s { empty v1; unsigned short v2:15; unsigned short v3:1; };
struct Sf_BFu15s_BFu31i { empty v1; unsigned short v2:15; unsigned int v3:31; };
struct Sf_BFu15s_BFu31ll { empty v1; unsigned short v2:15; unsigned long long v3:31; };
struct Sf_BFu15s_BFu32i { empty v1; unsigned short v2:15; unsigned int v3:32; };
struct Sf_BFu15s_BFu32ll { empty v1; unsigned short v2:15; unsigned long long v3:32; };
struct Sf_BFu15s_BFu33 { empty v1; unsigned short v2:15; unsigned long long v3:33; };
struct Sf_BFu15s_BFu7c { empty v1; unsigned short v2:15; unsigned char v3:7; };
struct Sf_BFu15s_BFu7i { empty v1; unsigned short v2:15; unsigned int v3:7; };
struct Sf_BFu15s_BFu7ll { empty v1; unsigned short v2:15; unsigned long long v3:7; };
struct Sf_BFu15s_BFu7s { empty v1; unsigned short v2:15; unsigned short v3:7; };
struct Sf_BFu15s_BFu8c { empty v1; unsigned short v2:15; unsigned char v3:8; };
struct Sf_BFu15s_BFu8i { empty v1; unsigned short v2:15; unsigned int v3:8; };
struct Sf_BFu15s_BFu8ll { empty v1; unsigned short v2:15; unsigned long long v3:8; };
struct Sf_BFu15s_BFu8s { empty v1; unsigned short v2:15; unsigned short v3:8; };
struct Sf_BFu15s_BFu9i { empty v1; unsigned short v2:15; unsigned int v3:9; };
struct Sf_BFu15s_BFu9ll { empty v1; unsigned short v2:15; unsigned long long v3:9; };
struct Sf_BFu15s_BFu9s { empty v1; unsigned short v2:15; unsigned short v3:9; };
struct Sf_BFu15s_C { empty v1; unsigned short v2:15; char v3; };
struct Sf_BFu15s_D { empty v1; unsigned short v2:15; double v3; };
struct Sf_BFu15s_F { empty v1; unsigned short v2:15; float v3; };
struct Sf_BFu15s_I { empty v1; unsigned short v2:15; int v3; };
struct Sf_BFu15s_Ip { empty v1; unsigned short v2:15; int * v3; };
struct Sf_BFu15s_L { empty v1; unsigned short v2:15; long long v3; };
struct Sf_BFu15s_S { empty v1; unsigned short v2:15; short v3; };
struct Sf_BFu15s_Sf { empty v1; unsigned short v2:15; empty v3; };
struct Sf_BFu15s_Uc { empty v1; unsigned short v2:15; unsigned char v3; };
struct Sf_BFu15s_Ui { empty v1; unsigned short v2:15; unsigned int v3; };
struct Sf_BFu15s_Ul { empty v1; unsigned short v2:15; unsigned long long v3; };
struct Sf_BFu15s_Us { empty v1; unsigned short v2:15; unsigned short v3; };
struct Sf_BFu15s_Vp { empty v1; unsigned short v2:15; void * v3; };
struct Sf_BFu16i { empty v1; unsigned int v2:16; };
struct Sf_BFu16i_BFu15i { empty v1; unsigned int v2:16; unsigned int v3:15; };
struct Sf_BFu16i_BFu15ll { empty v1; unsigned int v2:16; unsigned long long v3:15; };
struct Sf_BFu16i_BFu15s { empty v1; unsigned int v2:16; unsigned short v3:15; };
struct Sf_BFu16i_BFu16i { empty v1; unsigned int v2:16; unsigned int v3:16; };
struct Sf_BFu16i_BFu16ll { empty v1; unsigned int v2:16; unsigned long long v3:16; };
struct Sf_BFu16i_BFu16s { empty v1; unsigned int v2:16; unsigned short v3:16; };
struct Sf_BFu16i_BFu17i { empty v1; unsigned int v2:16; unsigned int v3:17; };
struct Sf_BFu16i_BFu17ll { empty v1; unsigned int v2:16; unsigned long long v3:17; };
struct Sf_BFu16i_BFu1c { empty v1; unsigned int v2:16; unsigned char v3:1; };
struct Sf_BFu16i_BFu1i { empty v1; unsigned int v2:16; unsigned int v3:1; };
struct Sf_BFu16i_BFu1ll { empty v1; unsigned int v2:16; unsigned long long v3:1; };
struct Sf_BFu16i_BFu1s { empty v1; unsigned int v2:16; unsigned short v3:1; };
struct Sf_BFu16i_BFu31i { empty v1; unsigned int v2:16; unsigned int v3:31; };
struct Sf_BFu16i_BFu31ll { empty v1; unsigned int v2:16; unsigned long long v3:31; };
struct Sf_BFu16i_BFu32i { empty v1; unsigned int v2:16; unsigned int v3:32; };
struct Sf_BFu16i_BFu32ll { empty v1; unsigned int v2:16; unsigned long long v3:32; };
struct Sf_BFu16i_BFu33 { empty v1; unsigned int v2:16; unsigned long long v3:33; };
struct Sf_BFu16i_BFu7c { empty v1; unsigned int v2:16; unsigned char v3:7; };
struct Sf_BFu16i_BFu7i { empty v1; unsigned int v2:16; unsigned int v3:7; };
struct Sf_BFu16i_BFu7ll { empty v1; unsigned int v2:16; unsigned long long v3:7; };
struct Sf_BFu16i_BFu7s { empty v1; unsigned int v2:16; unsigned short v3:7; };
struct Sf_BFu16i_BFu8c { empty v1; unsigned int v2:16; unsigned char v3:8; };
struct Sf_BFu16i_BFu8i { empty v1; unsigned int v2:16; unsigned int v3:8; };
struct Sf_BFu16i_BFu8ll { empty v1; unsigned int v2:16; unsigned long long v3:8; };
struct Sf_BFu16i_BFu8s { empty v1; unsigned int v2:16; unsigned short v3:8; };
struct Sf_BFu16i_BFu9i { empty v1; unsigned int v2:16; unsigned int v3:9; };
struct Sf_BFu16i_BFu9ll { empty v1; unsigned int v2:16; unsigned long long v3:9; };
struct Sf_BFu16i_BFu9s { empty v1; unsigned int v2:16; unsigned short v3:9; };
struct Sf_BFu16i_C { empty v1; unsigned int v2:16; char v3; };
struct Sf_BFu16i_D { empty v1; unsigned int v2:16; double v3; };
struct Sf_BFu16i_F { empty v1; unsigned int v2:16; float v3; };
struct Sf_BFu16i_I { empty v1; unsigned int v2:16; int v3; };
struct Sf_BFu16i_Ip { empty v1; unsigned int v2:16; int * v3; };
struct Sf_BFu16i_L { empty v1; unsigned int v2:16; long long v3; };
struct Sf_BFu16i_S { empty v1; unsigned int v2:16; short v3; };
struct Sf_BFu16i_Sf { empty v1; unsigned int v2:16; empty v3; };
struct Sf_BFu16i_Uc { empty v1; unsigned int v2:16; unsigned char v3; };
struct Sf_BFu16i_Ui { empty v1; unsigned int v2:16; unsigned int v3; };
struct Sf_BFu16i_Ul { empty v1; unsigned int v2:16; unsigned long long v3; };
struct Sf_BFu16i_Us { empty v1; unsigned int v2:16; unsigned short v3; };
struct Sf_BFu16i_Vp { empty v1; unsigned int v2:16; void * v3; };
struct Sf_BFu16ll { empty v1; unsigned long long v2:16; };
struct Sf_BFu16ll_BFu15i { empty v1; unsigned long long v2:16; unsigned int v3:15; };
struct Sf_BFu16ll_BFu15ll { empty v1; unsigned long long v2:16; unsigned long long v3:15; };
struct Sf_BFu16ll_BFu15s { empty v1; unsigned long long v2:16; unsigned short v3:15; };
struct Sf_BFu16ll_BFu16i { empty v1; unsigned long long v2:16; unsigned int v3:16; };
struct Sf_BFu16ll_BFu16ll { empty v1; unsigned long long v2:16; unsigned long long v3:16; };
struct Sf_BFu16ll_BFu16s { empty v1; unsigned long long v2:16; unsigned short v3:16; };
struct Sf_BFu16ll_BFu17i { empty v1; unsigned long long v2:16; unsigned int v3:17; };
struct Sf_BFu16ll_BFu17ll { empty v1; unsigned long long v2:16; unsigned long long v3:17; };
struct Sf_BFu16ll_BFu1c { empty v1; unsigned long long v2:16; unsigned char v3:1; };
struct Sf_BFu16ll_BFu1i { empty v1; unsigned long long v2:16; unsigned int v3:1; };
struct Sf_BFu16ll_BFu1ll { empty v1; unsigned long long v2:16; unsigned long long v3:1; };
struct Sf_BFu16ll_BFu1s { empty v1; unsigned long long v2:16; unsigned short v3:1; };
struct Sf_BFu16ll_BFu31i { empty v1; unsigned long long v2:16; unsigned int v3:31; };
struct Sf_BFu16ll_BFu31ll { empty v1; unsigned long long v2:16; unsigned long long v3:31; };
struct Sf_BFu16ll_BFu32i { empty v1; unsigned long long v2:16; unsigned int v3:32; };
struct Sf_BFu16ll_BFu32ll { empty v1; unsigned long long v2:16; unsigned long long v3:32; };
struct Sf_BFu16ll_BFu33 { empty v1; unsigned long long v2:16; unsigned long long v3:33; };
struct Sf_BFu16ll_BFu7c { empty v1; unsigned long long v2:16; unsigned char v3:7; };
struct Sf_BFu16ll_BFu7i { empty v1; unsigned long long v2:16; unsigned int v3:7; };
struct Sf_BFu16ll_BFu7ll { empty v1; unsigned long long v2:16; unsigned long long v3:7; };
struct Sf_BFu16ll_BFu7s { empty v1; unsigned long long v2:16; unsigned short v3:7; };
struct Sf_BFu16ll_BFu8c { empty v1; unsigned long long v2:16; unsigned char v3:8; };
struct Sf_BFu16ll_BFu8i { empty v1; unsigned long long v2:16; unsigned int v3:8; };
struct Sf_BFu16ll_BFu8ll { empty v1; unsigned long long v2:16; unsigned long long v3:8; };
struct Sf_BFu16ll_BFu8s { empty v1; unsigned long long v2:16; unsigned short v3:8; };
struct Sf_BFu16ll_BFu9i { empty v1; unsigned long long v2:16; unsigned int v3:9; };
struct Sf_BFu16ll_BFu9ll { empty v1; unsigned long long v2:16; unsigned long long v3:9; };
struct Sf_BFu16ll_BFu9s { empty v1; unsigned long long v2:16; unsigned short v3:9; };
struct Sf_BFu16ll_C { empty v1; unsigned long long v2:16; char v3; };
struct Sf_BFu16ll_D { empty v1; unsigned long long v2:16; double v3; };
struct Sf_BFu16ll_F { empty v1; unsigned long long v2:16; float v3; };
struct Sf_BFu16ll_I { empty v1; unsigned long long v2:16; int v3; };
struct Sf_BFu16ll_Ip { empty v1; unsigned long long v2:16; int * v3; };
struct Sf_BFu16ll_L { empty v1; unsigned long long v2:16; long long v3; };
struct Sf_BFu16ll_S { empty v1; unsigned long long v2:16; short v3; };
struct Sf_BFu16ll_Sf { empty v1; unsigned long long v2:16; empty v3; };
struct Sf_BFu16ll_Uc { empty v1; unsigned long long v2:16; unsigned char v3; };
struct Sf_BFu16ll_Ui { empty v1; unsigned long long v2:16; unsigned int v3; };
struct Sf_BFu16ll_Ul { empty v1; unsigned long long v2:16; unsigned long long v3; };
struct Sf_BFu16ll_Us { empty v1; unsigned long long v2:16; unsigned short v3; };
struct Sf_BFu16ll_Vp { empty v1; unsigned long long v2:16; void * v3; };
struct Sf_BFu16s { empty v1; unsigned short v2:16; };
struct Sf_BFu16s_BFu15i { empty v1; unsigned short v2:16; unsigned int v3:15; };
struct Sf_BFu16s_BFu15ll { empty v1; unsigned short v2:16; unsigned long long v3:15; };
struct Sf_BFu16s_BFu15s { empty v1; unsigned short v2:16; unsigned short v3:15; };
struct Sf_BFu16s_BFu16i { empty v1; unsigned short v2:16; unsigned int v3:16; };
struct Sf_BFu16s_BFu16ll { empty v1; unsigned short v2:16; unsigned long long v3:16; };
struct Sf_BFu16s_BFu16s { empty v1; unsigned short v2:16; unsigned short v3:16; };
struct Sf_BFu16s_BFu17i { empty v1; unsigned short v2:16; unsigned int v3:17; };
struct Sf_BFu16s_BFu17ll { empty v1; unsigned short v2:16; unsigned long long v3:17; };
struct Sf_BFu16s_BFu1c { empty v1; unsigned short v2:16; unsigned char v3:1; };
struct Sf_BFu16s_BFu1i { empty v1; unsigned short v2:16; unsigned int v3:1; };
struct Sf_BFu16s_BFu1ll { empty v1; unsigned short v2:16; unsigned long long v3:1; };
struct Sf_BFu16s_BFu1s { empty v1; unsigned short v2:16; unsigned short v3:1; };
struct Sf_BFu16s_BFu31i { empty v1; unsigned short v2:16; unsigned int v3:31; };
struct Sf_BFu16s_BFu31ll { empty v1; unsigned short v2:16; unsigned long long v3:31; };
struct Sf_BFu16s_BFu32i { empty v1; unsigned short v2:16; unsigned int v3:32; };
struct Sf_BFu16s_BFu32ll { empty v1; unsigned short v2:16; unsigned long long v3:32; };
struct Sf_BFu16s_BFu33 { empty v1; unsigned short v2:16; unsigned long long v3:33; };
struct Sf_BFu16s_BFu7c { empty v1; unsigned short v2:16; unsigned char v3:7; };
struct Sf_BFu16s_BFu7i { empty v1; unsigned short v2:16; unsigned int v3:7; };
struct Sf_BFu16s_BFu7ll { empty v1; unsigned short v2:16; unsigned long long v3:7; };
struct Sf_BFu16s_BFu7s { empty v1; unsigned short v2:16; unsigned short v3:7; };
struct Sf_BFu16s_BFu8c { empty v1; unsigned short v2:16; unsigned char v3:8; };
struct Sf_BFu16s_BFu8i { empty v1; unsigned short v2:16; unsigned int v3:8; };
struct Sf_BFu16s_BFu8ll { empty v1; unsigned short v2:16; unsigned long long v3:8; };
struct Sf_BFu16s_BFu8s { empty v1; unsigned short v2:16; unsigned short v3:8; };
struct Sf_BFu16s_BFu9i { empty v1; unsigned short v2:16; unsigned int v3:9; };
struct Sf_BFu16s_BFu9ll { empty v1; unsigned short v2:16; unsigned long long v3:9; };
struct Sf_BFu16s_BFu9s { empty v1; unsigned short v2:16; unsigned short v3:9; };
struct Sf_BFu16s_C { empty v1; unsigned short v2:16; char v3; };
struct Sf_BFu16s_D { empty v1; unsigned short v2:16; double v3; };
struct Sf_BFu16s_F { empty v1; unsigned short v2:16; float v3; };
struct Sf_BFu16s_I { empty v1; unsigned short v2:16; int v3; };
struct Sf_BFu16s_Ip { empty v1; unsigned short v2:16; int * v3; };
struct Sf_BFu16s_L { empty v1; unsigned short v2:16; long long v3; };
struct Sf_BFu16s_S { empty v1; unsigned short v2:16; short v3; };
struct Sf_BFu16s_Sf { empty v1; unsigned short v2:16; empty v3; };
struct Sf_BFu16s_Uc { empty v1; unsigned short v2:16; unsigned char v3; };
struct Sf_BFu16s_Ui { empty v1; unsigned short v2:16; unsigned int v3; };
struct Sf_BFu16s_Ul { empty v1; unsigned short v2:16; unsigned long long v3; };
struct Sf_BFu16s_Us { empty v1; unsigned short v2:16; unsigned short v3; };
struct Sf_BFu16s_Vp { empty v1; unsigned short v2:16; void * v3; };
struct Sf_BFu17i { empty v1; unsigned int v2:17; };
struct Sf_BFu17i_BFu15i { empty v1; unsigned int v2:17; unsigned int v3:15; };
struct Sf_BFu17i_BFu15ll { empty v1; unsigned int v2:17; unsigned long long v3:15; };
struct Sf_BFu17i_BFu15s { empty v1; unsigned int v2:17; unsigned short v3:15; };
struct Sf_BFu17i_BFu16i { empty v1; unsigned int v2:17; unsigned int v3:16; };
struct Sf_BFu17i_BFu16ll { empty v1; unsigned int v2:17; unsigned long long v3:16; };
struct Sf_BFu17i_BFu16s { empty v1; unsigned int v2:17; unsigned short v3:16; };
struct Sf_BFu17i_BFu17i { empty v1; unsigned int v2:17; unsigned int v3:17; };
struct Sf_BFu17i_BFu17ll { empty v1; unsigned int v2:17; unsigned long long v3:17; };
struct Sf_BFu17i_BFu1c { empty v1; unsigned int v2:17; unsigned char v3:1; };
struct Sf_BFu17i_BFu1i { empty v1; unsigned int v2:17; unsigned int v3:1; };
struct Sf_BFu17i_BFu1ll { empty v1; unsigned int v2:17; unsigned long long v3:1; };
struct Sf_BFu17i_BFu1s { empty v1; unsigned int v2:17; unsigned short v3:1; };
struct Sf_BFu17i_BFu31i { empty v1; unsigned int v2:17; unsigned int v3:31; };
struct Sf_BFu17i_BFu31ll { empty v1; unsigned int v2:17; unsigned long long v3:31; };
struct Sf_BFu17i_BFu32i { empty v1; unsigned int v2:17; unsigned int v3:32; };
struct Sf_BFu17i_BFu32ll { empty v1; unsigned int v2:17; unsigned long long v3:32; };
struct Sf_BFu17i_BFu33 { empty v1; unsigned int v2:17; unsigned long long v3:33; };
struct Sf_BFu17i_BFu7c { empty v1; unsigned int v2:17; unsigned char v3:7; };
struct Sf_BFu17i_BFu7i { empty v1; unsigned int v2:17; unsigned int v3:7; };
struct Sf_BFu17i_BFu7ll { empty v1; unsigned int v2:17; unsigned long long v3:7; };
struct Sf_BFu17i_BFu7s { empty v1; unsigned int v2:17; unsigned short v3:7; };
struct Sf_BFu17i_BFu8c { empty v1; unsigned int v2:17; unsigned char v3:8; };
struct Sf_BFu17i_BFu8i { empty v1; unsigned int v2:17; unsigned int v3:8; };
struct Sf_BFu17i_BFu8ll { empty v1; unsigned int v2:17; unsigned long long v3:8; };
struct Sf_BFu17i_BFu8s { empty v1; unsigned int v2:17; unsigned short v3:8; };
struct Sf_BFu17i_BFu9i { empty v1; unsigned int v2:17; unsigned int v3:9; };
struct Sf_BFu17i_BFu9ll { empty v1; unsigned int v2:17; unsigned long long v3:9; };
struct Sf_BFu17i_BFu9s { empty v1; unsigned int v2:17; unsigned short v3:9; };
struct Sf_BFu17i_C { empty v1; unsigned int v2:17; char v3; };
struct Sf_BFu17i_D { empty v1; unsigned int v2:17; double v3; };
struct Sf_BFu17i_F { empty v1; unsigned int v2:17; float v3; };
struct Sf_BFu17i_I { empty v1; unsigned int v2:17; int v3; };
struct Sf_BFu17i_Ip { empty v1; unsigned int v2:17; int * v3; };
struct Sf_BFu17i_L { empty v1; unsigned int v2:17; long long v3; };
struct Sf_BFu17i_S { empty v1; unsigned int v2:17; short v3; };
struct Sf_BFu17i_Sf { empty v1; unsigned int v2:17; empty v3; };
struct Sf_BFu17i_Uc { empty v1; unsigned int v2:17; unsigned char v3; };
struct Sf_BFu17i_Ui { empty v1; unsigned int v2:17; unsigned int v3; };
struct Sf_BFu17i_Ul { empty v1; unsigned int v2:17; unsigned long long v3; };
struct Sf_BFu17i_Us { empty v1; unsigned int v2:17; unsigned short v3; };
struct Sf_BFu17i_Vp { empty v1; unsigned int v2:17; void * v3; };
struct Sf_BFu17ll { empty v1; unsigned long long v2:17; };
struct Sf_BFu17ll_BFu15i { empty v1; unsigned long long v2:17; unsigned int v3:15; };
struct Sf_BFu17ll_BFu15ll { empty v1; unsigned long long v2:17; unsigned long long v3:15; };
struct Sf_BFu17ll_BFu15s { empty v1; unsigned long long v2:17; unsigned short v3:15; };
struct Sf_BFu17ll_BFu16i { empty v1; unsigned long long v2:17; unsigned int v3:16; };
struct Sf_BFu17ll_BFu16ll { empty v1; unsigned long long v2:17; unsigned long long v3:16; };
struct Sf_BFu17ll_BFu16s { empty v1; unsigned long long v2:17; unsigned short v3:16; };
struct Sf_BFu17ll_BFu17i { empty v1; unsigned long long v2:17; unsigned int v3:17; };
struct Sf_BFu17ll_BFu17ll { empty v1; unsigned long long v2:17; unsigned long long v3:17; };
struct Sf_BFu17ll_BFu1c { empty v1; unsigned long long v2:17; unsigned char v3:1; };
struct Sf_BFu17ll_BFu1i { empty v1; unsigned long long v2:17; unsigned int v3:1; };
struct Sf_BFu17ll_BFu1ll { empty v1; unsigned long long v2:17; unsigned long long v3:1; };
struct Sf_BFu17ll_BFu1s { empty v1; unsigned long long v2:17; unsigned short v3:1; };
struct Sf_BFu17ll_BFu31i { empty v1; unsigned long long v2:17; unsigned int v3:31; };
struct Sf_BFu17ll_BFu31ll { empty v1; unsigned long long v2:17; unsigned long long v3:31; };
struct Sf_BFu17ll_BFu32i { empty v1; unsigned long long v2:17; unsigned int v3:32; };
struct Sf_BFu17ll_BFu32ll { empty v1; unsigned long long v2:17; unsigned long long v3:32; };
struct Sf_BFu17ll_BFu33 { empty v1; unsigned long long v2:17; unsigned long long v3:33; };
struct Sf_BFu17ll_BFu7c { empty v1; unsigned long long v2:17; unsigned char v3:7; };
struct Sf_BFu17ll_BFu7i { empty v1; unsigned long long v2:17; unsigned int v3:7; };
struct Sf_BFu17ll_BFu7ll { empty v1; unsigned long long v2:17; unsigned long long v3:7; };
struct Sf_BFu17ll_BFu7s { empty v1; unsigned long long v2:17; unsigned short v3:7; };
struct Sf_BFu17ll_BFu8c { empty v1; unsigned long long v2:17; unsigned char v3:8; };
struct Sf_BFu17ll_BFu8i { empty v1; unsigned long long v2:17; unsigned int v3:8; };
struct Sf_BFu17ll_BFu8ll { empty v1; unsigned long long v2:17; unsigned long long v3:8; };
struct Sf_BFu17ll_BFu8s { empty v1; unsigned long long v2:17; unsigned short v3:8; };
struct Sf_BFu17ll_BFu9i { empty v1; unsigned long long v2:17; unsigned int v3:9; };
struct Sf_BFu17ll_BFu9ll { empty v1; unsigned long long v2:17; unsigned long long v3:9; };
struct Sf_BFu17ll_BFu9s { empty v1; unsigned long long v2:17; unsigned short v3:9; };
struct Sf_BFu17ll_C { empty v1; unsigned long long v2:17; char v3; };
struct Sf_BFu17ll_D { empty v1; unsigned long long v2:17; double v3; };
struct Sf_BFu17ll_F { empty v1; unsigned long long v2:17; float v3; };
struct Sf_BFu17ll_I { empty v1; unsigned long long v2:17; int v3; };
struct Sf_BFu17ll_Ip { empty v1; unsigned long long v2:17; int * v3; };
struct Sf_BFu17ll_L { empty v1; unsigned long long v2:17; long long v3; };
struct Sf_BFu17ll_S { empty v1; unsigned long long v2:17; short v3; };
struct Sf_BFu17ll_Sf { empty v1; unsigned long long v2:17; empty v3; };
struct Sf_BFu17ll_Uc { empty v1; unsigned long long v2:17; unsigned char v3; };
struct Sf_BFu17ll_Ui { empty v1; unsigned long long v2:17; unsigned int v3; };
struct Sf_BFu17ll_Ul { empty v1; unsigned long long v2:17; unsigned long long v3; };
struct Sf_BFu17ll_Us { empty v1; unsigned long long v2:17; unsigned short v3; };
struct Sf_BFu17ll_Vp { empty v1; unsigned long long v2:17; void * v3; };
struct Sf_BFu1c { empty v1; unsigned char v2:1; };
struct Sf_BFu1c_BFu15i { empty v1; unsigned char v2:1; unsigned int v3:15; };
struct Sf_BFu1c_BFu15ll { empty v1; unsigned char v2:1; unsigned long long v3:15; };
struct Sf_BFu1c_BFu15s { empty v1; unsigned char v2:1; unsigned short v3:15; };
struct Sf_BFu1c_BFu16i { empty v1; unsigned char v2:1; unsigned int v3:16; };
struct Sf_BFu1c_BFu16ll { empty v1; unsigned char v2:1; unsigned long long v3:16; };
struct Sf_BFu1c_BFu16s { empty v1; unsigned char v2:1; unsigned short v3:16; };
struct Sf_BFu1c_BFu17i { empty v1; unsigned char v2:1; unsigned int v3:17; };
struct Sf_BFu1c_BFu17ll { empty v1; unsigned char v2:1; unsigned long long v3:17; };
struct Sf_BFu1c_BFu1c { empty v1; unsigned char v2:1; unsigned char v3:1; };
struct Sf_BFu1c_BFu1i { empty v1; unsigned char v2:1; unsigned int v3:1; };
struct Sf_BFu1c_BFu1ll { empty v1; unsigned char v2:1; unsigned long long v3:1; };
struct Sf_BFu1c_BFu1s { empty v1; unsigned char v2:1; unsigned short v3:1; };
struct Sf_BFu1c_BFu31i { empty v1; unsigned char v2:1; unsigned int v3:31; };
struct Sf_BFu1c_BFu31ll { empty v1; unsigned char v2:1; unsigned long long v3:31; };
struct Sf_BFu1c_BFu32i { empty v1; unsigned char v2:1; unsigned int v3:32; };
struct Sf_BFu1c_BFu32ll { empty v1; unsigned char v2:1; unsigned long long v3:32; };
struct Sf_BFu1c_BFu33 { empty v1; unsigned char v2:1; unsigned long long v3:33; };
struct Sf_BFu1c_BFu7c { empty v1; unsigned char v2:1; unsigned char v3:7; };
struct Sf_BFu1c_BFu7i { empty v1; unsigned char v2:1; unsigned int v3:7; };
struct Sf_BFu1c_BFu7ll { empty v1; unsigned char v2:1; unsigned long long v3:7; };
struct Sf_BFu1c_BFu7s { empty v1; unsigned char v2:1; unsigned short v3:7; };
struct Sf_BFu1c_BFu8c { empty v1; unsigned char v2:1; unsigned char v3:8; };
struct Sf_BFu1c_BFu8i { empty v1; unsigned char v2:1; unsigned int v3:8; };
struct Sf_BFu1c_BFu8ll { empty v1; unsigned char v2:1; unsigned long long v3:8; };
struct Sf_BFu1c_BFu8s { empty v1; unsigned char v2:1; unsigned short v3:8; };
struct Sf_BFu1c_BFu9i { empty v1; unsigned char v2:1; unsigned int v3:9; };
struct Sf_BFu1c_BFu9ll { empty v1; unsigned char v2:1; unsigned long long v3:9; };
struct Sf_BFu1c_BFu9s { empty v1; unsigned char v2:1; unsigned short v3:9; };
struct Sf_BFu1c_C { empty v1; unsigned char v2:1; char v3; };
struct Sf_BFu1c_D { empty v1; unsigned char v2:1; double v3; };
struct Sf_BFu1c_F { empty v1; unsigned char v2:1; float v3; };
struct Sf_BFu1c_I { empty v1; unsigned char v2:1; int v3; };
struct Sf_BFu1c_Ip { empty v1; unsigned char v2:1; int * v3; };
struct Sf_BFu1c_L { empty v1; unsigned char v2:1; long long v3; };
struct Sf_BFu1c_S { empty v1; unsigned char v2:1; short v3; };
struct Sf_BFu1c_Sf { empty v1; unsigned char v2:1; empty v3; };
struct Sf_BFu1c_Uc { empty v1; unsigned char v2:1; unsigned char v3; };
struct Sf_BFu1c_Ui { empty v1; unsigned char v2:1; unsigned int v3; };
struct Sf_BFu1c_Ul { empty v1; unsigned char v2:1; unsigned long long v3; };
struct Sf_BFu1c_Us { empty v1; unsigned char v2:1; unsigned short v3; };
struct Sf_BFu1c_Vp { empty v1; unsigned char v2:1; void * v3; };
struct Sf_BFu1i { empty v1; unsigned int v2:1; };
struct Sf_BFu1i_BFu15i { empty v1; unsigned int v2:1; unsigned int v3:15; };
struct Sf_BFu1i_BFu15ll { empty v1; unsigned int v2:1; unsigned long long v3:15; };
struct Sf_BFu1i_BFu15s { empty v1; unsigned int v2:1; unsigned short v3:15; };
struct Sf_BFu1i_BFu16i { empty v1; unsigned int v2:1; unsigned int v3:16; };
struct Sf_BFu1i_BFu16ll { empty v1; unsigned int v2:1; unsigned long long v3:16; };
struct Sf_BFu1i_BFu16s { empty v1; unsigned int v2:1; unsigned short v3:16; };
struct Sf_BFu1i_BFu17i { empty v1; unsigned int v2:1; unsigned int v3:17; };
struct Sf_BFu1i_BFu17ll { empty v1; unsigned int v2:1; unsigned long long v3:17; };
struct Sf_BFu1i_BFu1c { empty v1; unsigned int v2:1; unsigned char v3:1; };
struct Sf_BFu1i_BFu1i { empty v1; unsigned int v2:1; unsigned int v3:1; };
struct Sf_BFu1i_BFu1ll { empty v1; unsigned int v2:1; unsigned long long v3:1; };
struct Sf_BFu1i_BFu1s { empty v1; unsigned int v2:1; unsigned short v3:1; };
struct Sf_BFu1i_BFu31i { empty v1; unsigned int v2:1; unsigned int v3:31; };
struct Sf_BFu1i_BFu31ll { empty v1; unsigned int v2:1; unsigned long long v3:31; };
struct Sf_BFu1i_BFu32i { empty v1; unsigned int v2:1; unsigned int v3:32; };
struct Sf_BFu1i_BFu32ll { empty v1; unsigned int v2:1; unsigned long long v3:32; };
struct Sf_BFu1i_BFu33 { empty v1; unsigned int v2:1; unsigned long long v3:33; };
struct Sf_BFu1i_BFu7c { empty v1; unsigned int v2:1; unsigned char v3:7; };
struct Sf_BFu1i_BFu7i { empty v1; unsigned int v2:1; unsigned int v3:7; };
struct Sf_BFu1i_BFu7ll { empty v1; unsigned int v2:1; unsigned long long v3:7; };
struct Sf_BFu1i_BFu7s { empty v1; unsigned int v2:1; unsigned short v3:7; };
struct Sf_BFu1i_BFu8c { empty v1; unsigned int v2:1; unsigned char v3:8; };
struct Sf_BFu1i_BFu8i { empty v1; unsigned int v2:1; unsigned int v3:8; };
struct Sf_BFu1i_BFu8ll { empty v1; unsigned int v2:1; unsigned long long v3:8; };
struct Sf_BFu1i_BFu8s { empty v1; unsigned int v2:1; unsigned short v3:8; };
struct Sf_BFu1i_BFu9i { empty v1; unsigned int v2:1; unsigned int v3:9; };
struct Sf_BFu1i_BFu9ll { empty v1; unsigned int v2:1; unsigned long long v3:9; };
struct Sf_BFu1i_BFu9s { empty v1; unsigned int v2:1; unsigned short v3:9; };
struct Sf_BFu1i_C { empty v1; unsigned int v2:1; char v3; };
struct Sf_BFu1i_D { empty v1; unsigned int v2:1; double v3; };
struct Sf_BFu1i_F { empty v1; unsigned int v2:1; float v3; };
struct Sf_BFu1i_I { empty v1; unsigned int v2:1; int v3; };
struct Sf_BFu1i_Ip { empty v1; unsigned int v2:1; int * v3; };
struct Sf_BFu1i_L { empty v1; unsigned int v2:1; long long v3; };
struct Sf_BFu1i_S { empty v1; unsigned int v2:1; short v3; };
struct Sf_BFu1i_Sf { empty v1; unsigned int v2:1; empty v3; };
struct Sf_BFu1i_Uc { empty v1; unsigned int v2:1; unsigned char v3; };
struct Sf_BFu1i_Ui { empty v1; unsigned int v2:1; unsigned int v3; };
struct Sf_BFu1i_Ul { empty v1; unsigned int v2:1; unsigned long long v3; };
struct Sf_BFu1i_Us { empty v1; unsigned int v2:1; unsigned short v3; };
struct Sf_BFu1i_Vp { empty v1; unsigned int v2:1; void * v3; };
struct Sf_BFu1ll { empty v1; unsigned long long v2:1; };
struct Sf_BFu1ll_BFu15i { empty v1; unsigned long long v2:1; unsigned int v3:15; };
struct Sf_BFu1ll_BFu15ll { empty v1; unsigned long long v2:1; unsigned long long v3:15; };
struct Sf_BFu1ll_BFu15s { empty v1; unsigned long long v2:1; unsigned short v3:15; };
struct Sf_BFu1ll_BFu16i { empty v1; unsigned long long v2:1; unsigned int v3:16; };
struct Sf_BFu1ll_BFu16ll { empty v1; unsigned long long v2:1; unsigned long long v3:16; };
struct Sf_BFu1ll_BFu16s { empty v1; unsigned long long v2:1; unsigned short v3:16; };
struct Sf_BFu1ll_BFu17i { empty v1; unsigned long long v2:1; unsigned int v3:17; };
struct Sf_BFu1ll_BFu17ll { empty v1; unsigned long long v2:1; unsigned long long v3:17; };
struct Sf_BFu1ll_BFu1c { empty v1; unsigned long long v2:1; unsigned char v3:1; };
struct Sf_BFu1ll_BFu1i { empty v1; unsigned long long v2:1; unsigned int v3:1; };
struct Sf_BFu1ll_BFu1ll { empty v1; unsigned long long v2:1; unsigned long long v3:1; };
struct Sf_BFu1ll_BFu1s { empty v1; unsigned long long v2:1; unsigned short v3:1; };
struct Sf_BFu1ll_BFu31i { empty v1; unsigned long long v2:1; unsigned int v3:31; };
struct Sf_BFu1ll_BFu31ll { empty v1; unsigned long long v2:1; unsigned long long v3:31; };
struct Sf_BFu1ll_BFu32i { empty v1; unsigned long long v2:1; unsigned int v3:32; };
struct Sf_BFu1ll_BFu32ll { empty v1; unsigned long long v2:1; unsigned long long v3:32; };
struct Sf_BFu1ll_BFu33 { empty v1; unsigned long long v2:1; unsigned long long v3:33; };
struct Sf_BFu1ll_BFu7c { empty v1; unsigned long long v2:1; unsigned char v3:7; };
struct Sf_BFu1ll_BFu7i { empty v1; unsigned long long v2:1; unsigned int v3:7; };
struct Sf_BFu1ll_BFu7ll { empty v1; unsigned long long v2:1; unsigned long long v3:7; };
struct Sf_BFu1ll_BFu7s { empty v1; unsigned long long v2:1; unsigned short v3:7; };
struct Sf_BFu1ll_BFu8c { empty v1; unsigned long long v2:1; unsigned char v3:8; };
struct Sf_BFu1ll_BFu8i { empty v1; unsigned long long v2:1; unsigned int v3:8; };
struct Sf_BFu1ll_BFu8ll { empty v1; unsigned long long v2:1; unsigned long long v3:8; };
struct Sf_BFu1ll_BFu8s { empty v1; unsigned long long v2:1; unsigned short v3:8; };
struct Sf_BFu1ll_BFu9i { empty v1; unsigned long long v2:1; unsigned int v3:9; };
struct Sf_BFu1ll_BFu9ll { empty v1; unsigned long long v2:1; unsigned long long v3:9; };
struct Sf_BFu1ll_BFu9s { empty v1; unsigned long long v2:1; unsigned short v3:9; };
struct Sf_BFu1ll_C { empty v1; unsigned long long v2:1; char v3; };
struct Sf_BFu1ll_D { empty v1; unsigned long long v2:1; double v3; };
struct Sf_BFu1ll_F { empty v1; unsigned long long v2:1; float v3; };
struct Sf_BFu1ll_I { empty v1; unsigned long long v2:1; int v3; };
struct Sf_BFu1ll_Ip { empty v1; unsigned long long v2:1; int * v3; };
struct Sf_BFu1ll_L { empty v1; unsigned long long v2:1; long long v3; };
struct Sf_BFu1ll_S { empty v1; unsigned long long v2:1; short v3; };
struct Sf_BFu1ll_Sf { empty v1; unsigned long long v2:1; empty v3; };
struct Sf_BFu1ll_Uc { empty v1; unsigned long long v2:1; unsigned char v3; };
struct Sf_BFu1ll_Ui { empty v1; unsigned long long v2:1; unsigned int v3; };
struct Sf_BFu1ll_Ul { empty v1; unsigned long long v2:1; unsigned long long v3; };
struct Sf_BFu1ll_Us { empty v1; unsigned long long v2:1; unsigned short v3; };
struct Sf_BFu1ll_Vp { empty v1; unsigned long long v2:1; void * v3; };
struct Sf_BFu1s { empty v1; unsigned short v2:1; };
struct Sf_BFu1s_BFu15i { empty v1; unsigned short v2:1; unsigned int v3:15; };
struct Sf_BFu1s_BFu15ll { empty v1; unsigned short v2:1; unsigned long long v3:15; };
struct Sf_BFu1s_BFu15s { empty v1; unsigned short v2:1; unsigned short v3:15; };
struct Sf_BFu1s_BFu16i { empty v1; unsigned short v2:1; unsigned int v3:16; };
struct Sf_BFu1s_BFu16ll { empty v1; unsigned short v2:1; unsigned long long v3:16; };
struct Sf_BFu1s_BFu16s { empty v1; unsigned short v2:1; unsigned short v3:16; };
struct Sf_BFu1s_BFu17i { empty v1; unsigned short v2:1; unsigned int v3:17; };
struct Sf_BFu1s_BFu17ll { empty v1; unsigned short v2:1; unsigned long long v3:17; };
struct Sf_BFu1s_BFu1c { empty v1; unsigned short v2:1; unsigned char v3:1; };
struct Sf_BFu1s_BFu1i { empty v1; unsigned short v2:1; unsigned int v3:1; };
struct Sf_BFu1s_BFu1ll { empty v1; unsigned short v2:1; unsigned long long v3:1; };
struct Sf_BFu1s_BFu1s { empty v1; unsigned short v2:1; unsigned short v3:1; };
struct Sf_BFu1s_BFu31i { empty v1; unsigned short v2:1; unsigned int v3:31; };
struct Sf_BFu1s_BFu31ll { empty v1; unsigned short v2:1; unsigned long long v3:31; };
struct Sf_BFu1s_BFu32i { empty v1; unsigned short v2:1; unsigned int v3:32; };
struct Sf_BFu1s_BFu32ll { empty v1; unsigned short v2:1; unsigned long long v3:32; };
struct Sf_BFu1s_BFu33 { empty v1; unsigned short v2:1; unsigned long long v3:33; };
struct Sf_BFu1s_BFu7c { empty v1; unsigned short v2:1; unsigned char v3:7; };
struct Sf_BFu1s_BFu7i { empty v1; unsigned short v2:1; unsigned int v3:7; };
struct Sf_BFu1s_BFu7ll { empty v1; unsigned short v2:1; unsigned long long v3:7; };
struct Sf_BFu1s_BFu7s { empty v1; unsigned short v2:1; unsigned short v3:7; };
struct Sf_BFu1s_BFu8c { empty v1; unsigned short v2:1; unsigned char v3:8; };
struct Sf_BFu1s_BFu8i { empty v1; unsigned short v2:1; unsigned int v3:8; };
struct Sf_BFu1s_BFu8ll { empty v1; unsigned short v2:1; unsigned long long v3:8; };
struct Sf_BFu1s_BFu8s { empty v1; unsigned short v2:1; unsigned short v3:8; };
struct Sf_BFu1s_BFu9i { empty v1; unsigned short v2:1; unsigned int v3:9; };
struct Sf_BFu1s_BFu9ll { empty v1; unsigned short v2:1; unsigned long long v3:9; };
struct Sf_BFu1s_BFu9s { empty v1; unsigned short v2:1; unsigned short v3:9; };
struct Sf_BFu1s_C { empty v1; unsigned short v2:1; char v3; };
struct Sf_BFu1s_D { empty v1; unsigned short v2:1; double v3; };
struct Sf_BFu1s_F { empty v1; unsigned short v2:1; float v3; };
struct Sf_BFu1s_I { empty v1; unsigned short v2:1; int v3; };
struct Sf_BFu1s_Ip { empty v1; unsigned short v2:1; int * v3; };
struct Sf_BFu1s_L { empty v1; unsigned short v2:1; long long v3; };
struct Sf_BFu1s_S { empty v1; unsigned short v2:1; short v3; };
struct Sf_BFu1s_Sf { empty v1; unsigned short v2:1; empty v3; };
struct Sf_BFu1s_Uc { empty v1; unsigned short v2:1; unsigned char v3; };
struct Sf_BFu1s_Ui { empty v1; unsigned short v2:1; unsigned int v3; };
struct Sf_BFu1s_Ul { empty v1; unsigned short v2:1; unsigned long long v3; };
struct Sf_BFu1s_Us { empty v1; unsigned short v2:1; unsigned short v3; };
struct Sf_BFu1s_Vp { empty v1; unsigned short v2:1; void * v3; };
struct Sf_BFu31i { empty v1; unsigned int v2:31; };
struct Sf_BFu31i_BFu15i { empty v1; unsigned int v2:31; unsigned int v3:15; };
struct Sf_BFu31i_BFu15ll { empty v1; unsigned int v2:31; unsigned long long v3:15; };
struct Sf_BFu31i_BFu15s { empty v1; unsigned int v2:31; unsigned short v3:15; };
struct Sf_BFu31i_BFu16i { empty v1; unsigned int v2:31; unsigned int v3:16; };
struct Sf_BFu31i_BFu16ll { empty v1; unsigned int v2:31; unsigned long long v3:16; };
struct Sf_BFu31i_BFu16s { empty v1; unsigned int v2:31; unsigned short v3:16; };
struct Sf_BFu31i_BFu17i { empty v1; unsigned int v2:31; unsigned int v3:17; };
struct Sf_BFu31i_BFu17ll { empty v1; unsigned int v2:31; unsigned long long v3:17; };
struct Sf_BFu31i_BFu1c { empty v1; unsigned int v2:31; unsigned char v3:1; };
struct Sf_BFu31i_BFu1i { empty v1; unsigned int v2:31; unsigned int v3:1; };
struct Sf_BFu31i_BFu1ll { empty v1; unsigned int v2:31; unsigned long long v3:1; };
struct Sf_BFu31i_BFu1s { empty v1; unsigned int v2:31; unsigned short v3:1; };
struct Sf_BFu31i_BFu31i { empty v1; unsigned int v2:31; unsigned int v3:31; };
struct Sf_BFu31i_BFu31ll { empty v1; unsigned int v2:31; unsigned long long v3:31; };
struct Sf_BFu31i_BFu32i { empty v1; unsigned int v2:31; unsigned int v3:32; };
struct Sf_BFu31i_BFu32ll { empty v1; unsigned int v2:31; unsigned long long v3:32; };
struct Sf_BFu31i_BFu33 { empty v1; unsigned int v2:31; unsigned long long v3:33; };
struct Sf_BFu31i_BFu7c { empty v1; unsigned int v2:31; unsigned char v3:7; };
struct Sf_BFu31i_BFu7i { empty v1; unsigned int v2:31; unsigned int v3:7; };
struct Sf_BFu31i_BFu7ll { empty v1; unsigned int v2:31; unsigned long long v3:7; };
struct Sf_BFu31i_BFu7s { empty v1; unsigned int v2:31; unsigned short v3:7; };
struct Sf_BFu31i_BFu8c { empty v1; unsigned int v2:31; unsigned char v3:8; };
struct Sf_BFu31i_BFu8i { empty v1; unsigned int v2:31; unsigned int v3:8; };
struct Sf_BFu31i_BFu8ll { empty v1; unsigned int v2:31; unsigned long long v3:8; };
struct Sf_BFu31i_BFu8s { empty v1; unsigned int v2:31; unsigned short v3:8; };
struct Sf_BFu31i_BFu9i { empty v1; unsigned int v2:31; unsigned int v3:9; };
struct Sf_BFu31i_BFu9ll { empty v1; unsigned int v2:31; unsigned long long v3:9; };
struct Sf_BFu31i_BFu9s { empty v1; unsigned int v2:31; unsigned short v3:9; };
struct Sf_BFu31i_C { empty v1; unsigned int v2:31; char v3; };
struct Sf_BFu31i_D { empty v1; unsigned int v2:31; double v3; };
struct Sf_BFu31i_F { empty v1; unsigned int v2:31; float v3; };
struct Sf_BFu31i_I { empty v1; unsigned int v2:31; int v3; };
struct Sf_BFu31i_Ip { empty v1; unsigned int v2:31; int * v3; };
struct Sf_BFu31i_L { empty v1; unsigned int v2:31; long long v3; };
struct Sf_BFu31i_S { empty v1; unsigned int v2:31; short v3; };
struct Sf_BFu31i_Sf { empty v1; unsigned int v2:31; empty v3; };
struct Sf_BFu31i_Uc { empty v1; unsigned int v2:31; unsigned char v3; };
struct Sf_BFu31i_Ui { empty v1; unsigned int v2:31; unsigned int v3; };
struct Sf_BFu31i_Ul { empty v1; unsigned int v2:31; unsigned long long v3; };
struct Sf_BFu31i_Us { empty v1; unsigned int v2:31; unsigned short v3; };
struct Sf_BFu31i_Vp { empty v1; unsigned int v2:31; void * v3; };
struct Sf_BFu31ll { empty v1; unsigned long long v2:31; };
struct Sf_BFu31ll_BFu15i { empty v1; unsigned long long v2:31; unsigned int v3:15; };
struct Sf_BFu31ll_BFu15ll { empty v1; unsigned long long v2:31; unsigned long long v3:15; };
struct Sf_BFu31ll_BFu15s { empty v1; unsigned long long v2:31; unsigned short v3:15; };
struct Sf_BFu31ll_BFu16i { empty v1; unsigned long long v2:31; unsigned int v3:16; };
struct Sf_BFu31ll_BFu16ll { empty v1; unsigned long long v2:31; unsigned long long v3:16; };
struct Sf_BFu31ll_BFu16s { empty v1; unsigned long long v2:31; unsigned short v3:16; };
struct Sf_BFu31ll_BFu17i { empty v1; unsigned long long v2:31; unsigned int v3:17; };
struct Sf_BFu31ll_BFu17ll { empty v1; unsigned long long v2:31; unsigned long long v3:17; };
struct Sf_BFu31ll_BFu1c { empty v1; unsigned long long v2:31; unsigned char v3:1; };
struct Sf_BFu31ll_BFu1i { empty v1; unsigned long long v2:31; unsigned int v3:1; };
struct Sf_BFu31ll_BFu1ll { empty v1; unsigned long long v2:31; unsigned long long v3:1; };
struct Sf_BFu31ll_BFu1s { empty v1; unsigned long long v2:31; unsigned short v3:1; };
struct Sf_BFu31ll_BFu31i { empty v1; unsigned long long v2:31; unsigned int v3:31; };
struct Sf_BFu31ll_BFu31ll { empty v1; unsigned long long v2:31; unsigned long long v3:31; };
struct Sf_BFu31ll_BFu32i { empty v1; unsigned long long v2:31; unsigned int v3:32; };
struct Sf_BFu31ll_BFu32ll { empty v1; unsigned long long v2:31; unsigned long long v3:32; };
struct Sf_BFu31ll_BFu33 { empty v1; unsigned long long v2:31; unsigned long long v3:33; };
struct Sf_BFu31ll_BFu7c { empty v1; unsigned long long v2:31; unsigned char v3:7; };
struct Sf_BFu31ll_BFu7i { empty v1; unsigned long long v2:31; unsigned int v3:7; };
struct Sf_BFu31ll_BFu7ll { empty v1; unsigned long long v2:31; unsigned long long v3:7; };
struct Sf_BFu31ll_BFu7s { empty v1; unsigned long long v2:31; unsigned short v3:7; };
struct Sf_BFu31ll_BFu8c { empty v1; unsigned long long v2:31; unsigned char v3:8; };
struct Sf_BFu31ll_BFu8i { empty v1; unsigned long long v2:31; unsigned int v3:8; };
struct Sf_BFu31ll_BFu8ll { empty v1; unsigned long long v2:31; unsigned long long v3:8; };
struct Sf_BFu31ll_BFu8s { empty v1; unsigned long long v2:31; unsigned short v3:8; };
struct Sf_BFu31ll_BFu9i { empty v1; unsigned long long v2:31; unsigned int v3:9; };
struct Sf_BFu31ll_BFu9ll { empty v1; unsigned long long v2:31; unsigned long long v3:9; };
struct Sf_BFu31ll_BFu9s { empty v1; unsigned long long v2:31; unsigned short v3:9; };
struct Sf_BFu31ll_C { empty v1; unsigned long long v2:31; char v3; };
struct Sf_BFu31ll_D { empty v1; unsigned long long v2:31; double v3; };
struct Sf_BFu31ll_F { empty v1; unsigned long long v2:31; float v3; };
struct Sf_BFu31ll_I { empty v1; unsigned long long v2:31; int v3; };
struct Sf_BFu31ll_Ip { empty v1; unsigned long long v2:31; int * v3; };
struct Sf_BFu31ll_L { empty v1; unsigned long long v2:31; long long v3; };
struct Sf_BFu31ll_S { empty v1; unsigned long long v2:31; short v3; };
struct Sf_BFu31ll_Sf { empty v1; unsigned long long v2:31; empty v3; };
struct Sf_BFu31ll_Uc { empty v1; unsigned long long v2:31; unsigned char v3; };
struct Sf_BFu31ll_Ui { empty v1; unsigned long long v2:31; unsigned int v3; };
struct Sf_BFu31ll_Ul { empty v1; unsigned long long v2:31; unsigned long long v3; };
struct Sf_BFu31ll_Us { empty v1; unsigned long long v2:31; unsigned short v3; };
struct Sf_BFu31ll_Vp { empty v1; unsigned long long v2:31; void * v3; };
struct Sf_BFu32i { empty v1; unsigned int v2:32; };
struct Sf_BFu32i_BFu15i { empty v1; unsigned int v2:32; unsigned int v3:15; };
struct Sf_BFu32i_BFu15ll { empty v1; unsigned int v2:32; unsigned long long v3:15; };
struct Sf_BFu32i_BFu15s { empty v1; unsigned int v2:32; unsigned short v3:15; };
struct Sf_BFu32i_BFu16i { empty v1; unsigned int v2:32; unsigned int v3:16; };
struct Sf_BFu32i_BFu16ll { empty v1; unsigned int v2:32; unsigned long long v3:16; };
struct Sf_BFu32i_BFu16s { empty v1; unsigned int v2:32; unsigned short v3:16; };
struct Sf_BFu32i_BFu17i { empty v1; unsigned int v2:32; unsigned int v3:17; };
struct Sf_BFu32i_BFu17ll { empty v1; unsigned int v2:32; unsigned long long v3:17; };
struct Sf_BFu32i_BFu1c { empty v1; unsigned int v2:32; unsigned char v3:1; };
struct Sf_BFu32i_BFu1i { empty v1; unsigned int v2:32; unsigned int v3:1; };
struct Sf_BFu32i_BFu1ll { empty v1; unsigned int v2:32; unsigned long long v3:1; };
struct Sf_BFu32i_BFu1s { empty v1; unsigned int v2:32; unsigned short v3:1; };
struct Sf_BFu32i_BFu31i { empty v1; unsigned int v2:32; unsigned int v3:31; };
struct Sf_BFu32i_BFu31ll { empty v1; unsigned int v2:32; unsigned long long v3:31; };
struct Sf_BFu32i_BFu32i { empty v1; unsigned int v2:32; unsigned int v3:32; };
struct Sf_BFu32i_BFu32ll { empty v1; unsigned int v2:32; unsigned long long v3:32; };
struct Sf_BFu32i_BFu33 { empty v1; unsigned int v2:32; unsigned long long v3:33; };
struct Sf_BFu32i_BFu7c { empty v1; unsigned int v2:32; unsigned char v3:7; };
struct Sf_BFu32i_BFu7i { empty v1; unsigned int v2:32; unsigned int v3:7; };
struct Sf_BFu32i_BFu7ll { empty v1; unsigned int v2:32; unsigned long long v3:7; };
struct Sf_BFu32i_BFu7s { empty v1; unsigned int v2:32; unsigned short v3:7; };
struct Sf_BFu32i_BFu8c { empty v1; unsigned int v2:32; unsigned char v3:8; };
struct Sf_BFu32i_BFu8i { empty v1; unsigned int v2:32; unsigned int v3:8; };
struct Sf_BFu32i_BFu8ll { empty v1; unsigned int v2:32; unsigned long long v3:8; };
struct Sf_BFu32i_BFu8s { empty v1; unsigned int v2:32; unsigned short v3:8; };
struct Sf_BFu32i_BFu9i { empty v1; unsigned int v2:32; unsigned int v3:9; };
struct Sf_BFu32i_BFu9ll { empty v1; unsigned int v2:32; unsigned long long v3:9; };
struct Sf_BFu32i_BFu9s { empty v1; unsigned int v2:32; unsigned short v3:9; };
struct Sf_BFu32i_C { empty v1; unsigned int v2:32; char v3; };
struct Sf_BFu32i_D { empty v1; unsigned int v2:32; double v3; };
struct Sf_BFu32i_F { empty v1; unsigned int v2:32; float v3; };
struct Sf_BFu32i_I { empty v1; unsigned int v2:32; int v3; };
struct Sf_BFu32i_Ip { empty v1; unsigned int v2:32; int * v3; };
struct Sf_BFu32i_L { empty v1; unsigned int v2:32; long long v3; };
struct Sf_BFu32i_S { empty v1; unsigned int v2:32; short v3; };
struct Sf_BFu32i_Sf { empty v1; unsigned int v2:32; empty v3; };
struct Sf_BFu32i_Uc { empty v1; unsigned int v2:32; unsigned char v3; };
struct Sf_BFu32i_Ui { empty v1; unsigned int v2:32; unsigned int v3; };
struct Sf_BFu32i_Ul { empty v1; unsigned int v2:32; unsigned long long v3; };
struct Sf_BFu32i_Us { empty v1; unsigned int v2:32; unsigned short v3; };
struct Sf_BFu32i_Vp { empty v1; unsigned int v2:32; void * v3; };
struct Sf_BFu32ll { empty v1; unsigned long long v2:32; };
struct Sf_BFu32ll_BFu15i { empty v1; unsigned long long v2:32; unsigned int v3:15; };
struct Sf_BFu32ll_BFu15ll { empty v1; unsigned long long v2:32; unsigned long long v3:15; };
struct Sf_BFu32ll_BFu15s { empty v1; unsigned long long v2:32; unsigned short v3:15; };
struct Sf_BFu32ll_BFu16i { empty v1; unsigned long long v2:32; unsigned int v3:16; };
struct Sf_BFu32ll_BFu16ll { empty v1; unsigned long long v2:32; unsigned long long v3:16; };
struct Sf_BFu32ll_BFu16s { empty v1; unsigned long long v2:32; unsigned short v3:16; };
struct Sf_BFu32ll_BFu17i { empty v1; unsigned long long v2:32; unsigned int v3:17; };
struct Sf_BFu32ll_BFu17ll { empty v1; unsigned long long v2:32; unsigned long long v3:17; };
struct Sf_BFu32ll_BFu1c { empty v1; unsigned long long v2:32; unsigned char v3:1; };
struct Sf_BFu32ll_BFu1i { empty v1; unsigned long long v2:32; unsigned int v3:1; };
struct Sf_BFu32ll_BFu1ll { empty v1; unsigned long long v2:32; unsigned long long v3:1; };
struct Sf_BFu32ll_BFu1s { empty v1; unsigned long long v2:32; unsigned short v3:1; };
struct Sf_BFu32ll_BFu31i { empty v1; unsigned long long v2:32; unsigned int v3:31; };
struct Sf_BFu32ll_BFu31ll { empty v1; unsigned long long v2:32; unsigned long long v3:31; };
struct Sf_BFu32ll_BFu32i { empty v1; unsigned long long v2:32; unsigned int v3:32; };
struct Sf_BFu32ll_BFu32ll { empty v1; unsigned long long v2:32; unsigned long long v3:32; };
struct Sf_BFu32ll_BFu33 { empty v1; unsigned long long v2:32; unsigned long long v3:33; };
struct Sf_BFu32ll_BFu7c { empty v1; unsigned long long v2:32; unsigned char v3:7; };
struct Sf_BFu32ll_BFu7i { empty v1; unsigned long long v2:32; unsigned int v3:7; };
struct Sf_BFu32ll_BFu7ll { empty v1; unsigned long long v2:32; unsigned long long v3:7; };
struct Sf_BFu32ll_BFu7s { empty v1; unsigned long long v2:32; unsigned short v3:7; };
struct Sf_BFu32ll_BFu8c { empty v1; unsigned long long v2:32; unsigned char v3:8; };
struct Sf_BFu32ll_BFu8i { empty v1; unsigned long long v2:32; unsigned int v3:8; };
struct Sf_BFu32ll_BFu8ll { empty v1; unsigned long long v2:32; unsigned long long v3:8; };
struct Sf_BFu32ll_BFu8s { empty v1; unsigned long long v2:32; unsigned short v3:8; };
struct Sf_BFu32ll_BFu9i { empty v1; unsigned long long v2:32; unsigned int v3:9; };
struct Sf_BFu32ll_BFu9ll { empty v1; unsigned long long v2:32; unsigned long long v3:9; };
struct Sf_BFu32ll_BFu9s { empty v1; unsigned long long v2:32; unsigned short v3:9; };
struct Sf_BFu32ll_C { empty v1; unsigned long long v2:32; char v3; };
struct Sf_BFu32ll_D { empty v1; unsigned long long v2:32; double v3; };
struct Sf_BFu32ll_F { empty v1; unsigned long long v2:32; float v3; };
struct Sf_BFu32ll_I { empty v1; unsigned long long v2:32; int v3; };
struct Sf_BFu32ll_Ip { empty v1; unsigned long long v2:32; int * v3; };
struct Sf_BFu32ll_L { empty v1; unsigned long long v2:32; long long v3; };
struct Sf_BFu32ll_S { empty v1; unsigned long long v2:32; short v3; };
struct Sf_BFu32ll_Sf { empty v1; unsigned long long v2:32; empty v3; };
struct Sf_BFu32ll_Uc { empty v1; unsigned long long v2:32; unsigned char v3; };
struct Sf_BFu32ll_Ui { empty v1; unsigned long long v2:32; unsigned int v3; };
struct Sf_BFu32ll_Ul { empty v1; unsigned long long v2:32; unsigned long long v3; };
struct Sf_BFu32ll_Us { empty v1; unsigned long long v2:32; unsigned short v3; };
struct Sf_BFu32ll_Vp { empty v1; unsigned long long v2:32; void * v3; };
struct Sf_BFu33 { empty v1; unsigned long long v2:33; };
struct Sf_BFu33_BFu15i { empty v1; unsigned long long v2:33; unsigned int v3:15; };
struct Sf_BFu33_BFu15ll { empty v1; unsigned long long v2:33; unsigned long long v3:15; };
struct Sf_BFu33_BFu15s { empty v1; unsigned long long v2:33; unsigned short v3:15; };
struct Sf_BFu33_BFu16i { empty v1; unsigned long long v2:33; unsigned int v3:16; };
struct Sf_BFu33_BFu16ll { empty v1; unsigned long long v2:33; unsigned long long v3:16; };
struct Sf_BFu33_BFu16s { empty v1; unsigned long long v2:33; unsigned short v3:16; };
struct Sf_BFu33_BFu17i { empty v1; unsigned long long v2:33; unsigned int v3:17; };
struct Sf_BFu33_BFu17ll { empty v1; unsigned long long v2:33; unsigned long long v3:17; };
struct Sf_BFu33_BFu1c { empty v1; unsigned long long v2:33; unsigned char v3:1; };
struct Sf_BFu33_BFu1i { empty v1; unsigned long long v2:33; unsigned int v3:1; };
struct Sf_BFu33_BFu1ll { empty v1; unsigned long long v2:33; unsigned long long v3:1; };
struct Sf_BFu33_BFu1s { empty v1; unsigned long long v2:33; unsigned short v3:1; };
struct Sf_BFu33_BFu31i { empty v1; unsigned long long v2:33; unsigned int v3:31; };
struct Sf_BFu33_BFu31ll { empty v1; unsigned long long v2:33; unsigned long long v3:31; };
struct Sf_BFu33_BFu32i { empty v1; unsigned long long v2:33; unsigned int v3:32; };
struct Sf_BFu33_BFu32ll { empty v1; unsigned long long v2:33; unsigned long long v3:32; };
struct Sf_BFu33_BFu33 { empty v1; unsigned long long v2:33; unsigned long long v3:33; };
struct Sf_BFu33_BFu7c { empty v1; unsigned long long v2:33; unsigned char v3:7; };
struct Sf_BFu33_BFu7i { empty v1; unsigned long long v2:33; unsigned int v3:7; };
struct Sf_BFu33_BFu7ll { empty v1; unsigned long long v2:33; unsigned long long v3:7; };
struct Sf_BFu33_BFu7s { empty v1; unsigned long long v2:33; unsigned short v3:7; };
struct Sf_BFu33_BFu8c { empty v1; unsigned long long v2:33; unsigned char v3:8; };
struct Sf_BFu33_BFu8i { empty v1; unsigned long long v2:33; unsigned int v3:8; };
struct Sf_BFu33_BFu8ll { empty v1; unsigned long long v2:33; unsigned long long v3:8; };
struct Sf_BFu33_BFu8s { empty v1; unsigned long long v2:33; unsigned short v3:8; };
struct Sf_BFu33_BFu9i { empty v1; unsigned long long v2:33; unsigned int v3:9; };
struct Sf_BFu33_BFu9ll { empty v1; unsigned long long v2:33; unsigned long long v3:9; };
struct Sf_BFu33_BFu9s { empty v1; unsigned long long v2:33; unsigned short v3:9; };
struct Sf_BFu33_C { empty v1; unsigned long long v2:33; char v3; };
struct Sf_BFu33_D { empty v1; unsigned long long v2:33; double v3; };
struct Sf_BFu33_F { empty v1; unsigned long long v2:33; float v3; };
struct Sf_BFu33_I { empty v1; unsigned long long v2:33; int v3; };
struct Sf_BFu33_Ip { empty v1; unsigned long long v2:33; int * v3; };
struct Sf_BFu33_L { empty v1; unsigned long long v2:33; long long v3; };
struct Sf_BFu33_S { empty v1; unsigned long long v2:33; short v3; };
struct Sf_BFu33_Sf { empty v1; unsigned long long v2:33; empty v3; };
struct Sf_BFu33_Uc { empty v1; unsigned long long v2:33; unsigned char v3; };
struct Sf_BFu33_Ui { empty v1; unsigned long long v2:33; unsigned int v3; };
struct Sf_BFu33_Ul { empty v1; unsigned long long v2:33; unsigned long long v3; };
struct Sf_BFu33_Us { empty v1; unsigned long long v2:33; unsigned short v3; };
struct Sf_BFu33_Vp { empty v1; unsigned long long v2:33; void * v3; };
struct Sf_BFu7c { empty v1; unsigned char v2:7; };
struct Sf_BFu7c_BFu15i { empty v1; unsigned char v2:7; unsigned int v3:15; };
struct Sf_BFu7c_BFu15ll { empty v1; unsigned char v2:7; unsigned long long v3:15; };
struct Sf_BFu7c_BFu15s { empty v1; unsigned char v2:7; unsigned short v3:15; };
struct Sf_BFu7c_BFu16i { empty v1; unsigned char v2:7; unsigned int v3:16; };
struct Sf_BFu7c_BFu16ll { empty v1; unsigned char v2:7; unsigned long long v3:16; };
struct Sf_BFu7c_BFu16s { empty v1; unsigned char v2:7; unsigned short v3:16; };
struct Sf_BFu7c_BFu17i { empty v1; unsigned char v2:7; unsigned int v3:17; };
struct Sf_BFu7c_BFu17ll { empty v1; unsigned char v2:7; unsigned long long v3:17; };
struct Sf_BFu7c_BFu1c { empty v1; unsigned char v2:7; unsigned char v3:1; };
struct Sf_BFu7c_BFu1i { empty v1; unsigned char v2:7; unsigned int v3:1; };
struct Sf_BFu7c_BFu1ll { empty v1; unsigned char v2:7; unsigned long long v3:1; };
struct Sf_BFu7c_BFu1s { empty v1; unsigned char v2:7; unsigned short v3:1; };
struct Sf_BFu7c_BFu31i { empty v1; unsigned char v2:7; unsigned int v3:31; };
struct Sf_BFu7c_BFu31ll { empty v1; unsigned char v2:7; unsigned long long v3:31; };
struct Sf_BFu7c_BFu32i { empty v1; unsigned char v2:7; unsigned int v3:32; };
struct Sf_BFu7c_BFu32ll { empty v1; unsigned char v2:7; unsigned long long v3:32; };
struct Sf_BFu7c_BFu33 { empty v1; unsigned char v2:7; unsigned long long v3:33; };
struct Sf_BFu7c_BFu7c { empty v1; unsigned char v2:7; unsigned char v3:7; };
struct Sf_BFu7c_BFu7i { empty v1; unsigned char v2:7; unsigned int v3:7; };
struct Sf_BFu7c_BFu7ll { empty v1; unsigned char v2:7; unsigned long long v3:7; };
struct Sf_BFu7c_BFu7s { empty v1; unsigned char v2:7; unsigned short v3:7; };
struct Sf_BFu7c_BFu8c { empty v1; unsigned char v2:7; unsigned char v3:8; };
struct Sf_BFu7c_BFu8i { empty v1; unsigned char v2:7; unsigned int v3:8; };
struct Sf_BFu7c_BFu8ll { empty v1; unsigned char v2:7; unsigned long long v3:8; };
struct Sf_BFu7c_BFu8s { empty v1; unsigned char v2:7; unsigned short v3:8; };
struct Sf_BFu7c_BFu9i { empty v1; unsigned char v2:7; unsigned int v3:9; };
struct Sf_BFu7c_BFu9ll { empty v1; unsigned char v2:7; unsigned long long v3:9; };
struct Sf_BFu7c_BFu9s { empty v1; unsigned char v2:7; unsigned short v3:9; };
struct Sf_BFu7c_C { empty v1; unsigned char v2:7; char v3; };
struct Sf_BFu7c_D { empty v1; unsigned char v2:7; double v3; };
struct Sf_BFu7c_F { empty v1; unsigned char v2:7; float v3; };
struct Sf_BFu7c_I { empty v1; unsigned char v2:7; int v3; };
struct Sf_BFu7c_Ip { empty v1; unsigned char v2:7; int * v3; };
struct Sf_BFu7c_L { empty v1; unsigned char v2:7; long long v3; };
struct Sf_BFu7c_S { empty v1; unsigned char v2:7; short v3; };
struct Sf_BFu7c_Sf { empty v1; unsigned char v2:7; empty v3; };
struct Sf_BFu7c_Uc { empty v1; unsigned char v2:7; unsigned char v3; };
struct Sf_BFu7c_Ui { empty v1; unsigned char v2:7; unsigned int v3; };
struct Sf_BFu7c_Ul { empty v1; unsigned char v2:7; unsigned long long v3; };
struct Sf_BFu7c_Us { empty v1; unsigned char v2:7; unsigned short v3; };
struct Sf_BFu7c_Vp { empty v1; unsigned char v2:7; void * v3; };
struct Sf_BFu7i { empty v1; unsigned int v2:7; };
struct Sf_BFu7i_BFu15i { empty v1; unsigned int v2:7; unsigned int v3:15; };
struct Sf_BFu7i_BFu15ll { empty v1; unsigned int v2:7; unsigned long long v3:15; };
struct Sf_BFu7i_BFu15s { empty v1; unsigned int v2:7; unsigned short v3:15; };
struct Sf_BFu7i_BFu16i { empty v1; unsigned int v2:7; unsigned int v3:16; };
struct Sf_BFu7i_BFu16ll { empty v1; unsigned int v2:7; unsigned long long v3:16; };
struct Sf_BFu7i_BFu16s { empty v1; unsigned int v2:7; unsigned short v3:16; };
struct Sf_BFu7i_BFu17i { empty v1; unsigned int v2:7; unsigned int v3:17; };
struct Sf_BFu7i_BFu17ll { empty v1; unsigned int v2:7; unsigned long long v3:17; };
struct Sf_BFu7i_BFu1c { empty v1; unsigned int v2:7; unsigned char v3:1; };
struct Sf_BFu7i_BFu1i { empty v1; unsigned int v2:7; unsigned int v3:1; };
struct Sf_BFu7i_BFu1ll { empty v1; unsigned int v2:7; unsigned long long v3:1; };
struct Sf_BFu7i_BFu1s { empty v1; unsigned int v2:7; unsigned short v3:1; };
struct Sf_BFu7i_BFu31i { empty v1; unsigned int v2:7; unsigned int v3:31; };
struct Sf_BFu7i_BFu31ll { empty v1; unsigned int v2:7; unsigned long long v3:31; };
struct Sf_BFu7i_BFu32i { empty v1; unsigned int v2:7; unsigned int v3:32; };
struct Sf_BFu7i_BFu32ll { empty v1; unsigned int v2:7; unsigned long long v3:32; };
struct Sf_BFu7i_BFu33 { empty v1; unsigned int v2:7; unsigned long long v3:33; };
struct Sf_BFu7i_BFu7c { empty v1; unsigned int v2:7; unsigned char v3:7; };
struct Sf_BFu7i_BFu7i { empty v1; unsigned int v2:7; unsigned int v3:7; };
struct Sf_BFu7i_BFu7ll { empty v1; unsigned int v2:7; unsigned long long v3:7; };
struct Sf_BFu7i_BFu7s { empty v1; unsigned int v2:7; unsigned short v3:7; };
struct Sf_BFu7i_BFu8c { empty v1; unsigned int v2:7; unsigned char v3:8; };
struct Sf_BFu7i_BFu8i { empty v1; unsigned int v2:7; unsigned int v3:8; };
struct Sf_BFu7i_BFu8ll { empty v1; unsigned int v2:7; unsigned long long v3:8; };
struct Sf_BFu7i_BFu8s { empty v1; unsigned int v2:7; unsigned short v3:8; };
struct Sf_BFu7i_BFu9i { empty v1; unsigned int v2:7; unsigned int v3:9; };
struct Sf_BFu7i_BFu9ll { empty v1; unsigned int v2:7; unsigned long long v3:9; };
struct Sf_BFu7i_BFu9s { empty v1; unsigned int v2:7; unsigned short v3:9; };
struct Sf_BFu7i_C { empty v1; unsigned int v2:7; char v3; };
struct Sf_BFu7i_D { empty v1; unsigned int v2:7; double v3; };
struct Sf_BFu7i_F { empty v1; unsigned int v2:7; float v3; };
struct Sf_BFu7i_I { empty v1; unsigned int v2:7; int v3; };
struct Sf_BFu7i_Ip { empty v1; unsigned int v2:7; int * v3; };
struct Sf_BFu7i_L { empty v1; unsigned int v2:7; long long v3; };
struct Sf_BFu7i_S { empty v1; unsigned int v2:7; short v3; };
struct Sf_BFu7i_Sf { empty v1; unsigned int v2:7; empty v3; };
struct Sf_BFu7i_Uc { empty v1; unsigned int v2:7; unsigned char v3; };
struct Sf_BFu7i_Ui { empty v1; unsigned int v2:7; unsigned int v3; };
struct Sf_BFu7i_Ul { empty v1; unsigned int v2:7; unsigned long long v3; };
struct Sf_BFu7i_Us { empty v1; unsigned int v2:7; unsigned short v3; };
struct Sf_BFu7i_Vp { empty v1; unsigned int v2:7; void * v3; };
struct Sf_BFu7ll { empty v1; unsigned long long v2:7; };
struct Sf_BFu7ll_BFu15i { empty v1; unsigned long long v2:7; unsigned int v3:15; };
struct Sf_BFu7ll_BFu15ll { empty v1; unsigned long long v2:7; unsigned long long v3:15; };
struct Sf_BFu7ll_BFu15s { empty v1; unsigned long long v2:7; unsigned short v3:15; };
struct Sf_BFu7ll_BFu16i { empty v1; unsigned long long v2:7; unsigned int v3:16; };
struct Sf_BFu7ll_BFu16ll { empty v1; unsigned long long v2:7; unsigned long long v3:16; };
struct Sf_BFu7ll_BFu16s { empty v1; unsigned long long v2:7; unsigned short v3:16; };
struct Sf_BFu7ll_BFu17i { empty v1; unsigned long long v2:7; unsigned int v3:17; };
struct Sf_BFu7ll_BFu17ll { empty v1; unsigned long long v2:7; unsigned long long v3:17; };
struct Sf_BFu7ll_BFu1c { empty v1; unsigned long long v2:7; unsigned char v3:1; };
struct Sf_BFu7ll_BFu1i { empty v1; unsigned long long v2:7; unsigned int v3:1; };
struct Sf_BFu7ll_BFu1ll { empty v1; unsigned long long v2:7; unsigned long long v3:1; };
struct Sf_BFu7ll_BFu1s { empty v1; unsigned long long v2:7; unsigned short v3:1; };
struct Sf_BFu7ll_BFu31i { empty v1; unsigned long long v2:7; unsigned int v3:31; };
struct Sf_BFu7ll_BFu31ll { empty v1; unsigned long long v2:7; unsigned long long v3:31; };
struct Sf_BFu7ll_BFu32i { empty v1; unsigned long long v2:7; unsigned int v3:32; };
struct Sf_BFu7ll_BFu32ll { empty v1; unsigned long long v2:7; unsigned long long v3:32; };
struct Sf_BFu7ll_BFu33 { empty v1; unsigned long long v2:7; unsigned long long v3:33; };
struct Sf_BFu7ll_BFu7c { empty v1; unsigned long long v2:7; unsigned char v3:7; };
struct Sf_BFu7ll_BFu7i { empty v1; unsigned long long v2:7; unsigned int v3:7; };
struct Sf_BFu7ll_BFu7ll { empty v1; unsigned long long v2:7; unsigned long long v3:7; };
struct Sf_BFu7ll_BFu7s { empty v1; unsigned long long v2:7; unsigned short v3:7; };
struct Sf_BFu7ll_BFu8c { empty v1; unsigned long long v2:7; unsigned char v3:8; };
struct Sf_BFu7ll_BFu8i { empty v1; unsigned long long v2:7; unsigned int v3:8; };
struct Sf_BFu7ll_BFu8ll { empty v1; unsigned long long v2:7; unsigned long long v3:8; };
struct Sf_BFu7ll_BFu8s { empty v1; unsigned long long v2:7; unsigned short v3:8; };
struct Sf_BFu7ll_BFu9i { empty v1; unsigned long long v2:7; unsigned int v3:9; };
struct Sf_BFu7ll_BFu9ll { empty v1; unsigned long long v2:7; unsigned long long v3:9; };
struct Sf_BFu7ll_BFu9s { empty v1; unsigned long long v2:7; unsigned short v3:9; };
struct Sf_BFu7ll_C { empty v1; unsigned long long v2:7; char v3; };
struct Sf_BFu7ll_D { empty v1; unsigned long long v2:7; double v3; };
struct Sf_BFu7ll_F { empty v1; unsigned long long v2:7; float v3; };
struct Sf_BFu7ll_I { empty v1; unsigned long long v2:7; int v3; };
struct Sf_BFu7ll_Ip { empty v1; unsigned long long v2:7; int * v3; };
struct Sf_BFu7ll_L { empty v1; unsigned long long v2:7; long long v3; };
struct Sf_BFu7ll_S { empty v1; unsigned long long v2:7; short v3; };
struct Sf_BFu7ll_Sf { empty v1; unsigned long long v2:7; empty v3; };
struct Sf_BFu7ll_Uc { empty v1; unsigned long long v2:7; unsigned char v3; };
struct Sf_BFu7ll_Ui { empty v1; unsigned long long v2:7; unsigned int v3; };
struct Sf_BFu7ll_Ul { empty v1; unsigned long long v2:7; unsigned long long v3; };
struct Sf_BFu7ll_Us { empty v1; unsigned long long v2:7; unsigned short v3; };
struct Sf_BFu7ll_Vp { empty v1; unsigned long long v2:7; void * v3; };
struct Sf_BFu7s { empty v1; unsigned short v2:7; };
struct Sf_BFu7s_BFu15i { empty v1; unsigned short v2:7; unsigned int v3:15; };
struct Sf_BFu7s_BFu15ll { empty v1; unsigned short v2:7; unsigned long long v3:15; };
struct Sf_BFu7s_BFu15s { empty v1; unsigned short v2:7; unsigned short v3:15; };
struct Sf_BFu7s_BFu16i { empty v1; unsigned short v2:7; unsigned int v3:16; };
struct Sf_BFu7s_BFu16ll { empty v1; unsigned short v2:7; unsigned long long v3:16; };
struct Sf_BFu7s_BFu16s { empty v1; unsigned short v2:7; unsigned short v3:16; };
struct Sf_BFu7s_BFu17i { empty v1; unsigned short v2:7; unsigned int v3:17; };
struct Sf_BFu7s_BFu17ll { empty v1; unsigned short v2:7; unsigned long long v3:17; };
struct Sf_BFu7s_BFu1c { empty v1; unsigned short v2:7; unsigned char v3:1; };
struct Sf_BFu7s_BFu1i { empty v1; unsigned short v2:7; unsigned int v3:1; };
struct Sf_BFu7s_BFu1ll { empty v1; unsigned short v2:7; unsigned long long v3:1; };
struct Sf_BFu7s_BFu1s { empty v1; unsigned short v2:7; unsigned short v3:1; };
struct Sf_BFu7s_BFu31i { empty v1; unsigned short v2:7; unsigned int v3:31; };
struct Sf_BFu7s_BFu31ll { empty v1; unsigned short v2:7; unsigned long long v3:31; };
struct Sf_BFu7s_BFu32i { empty v1; unsigned short v2:7; unsigned int v3:32; };
struct Sf_BFu7s_BFu32ll { empty v1; unsigned short v2:7; unsigned long long v3:32; };
struct Sf_BFu7s_BFu33 { empty v1; unsigned short v2:7; unsigned long long v3:33; };
struct Sf_BFu7s_BFu7c { empty v1; unsigned short v2:7; unsigned char v3:7; };
struct Sf_BFu7s_BFu7i { empty v1; unsigned short v2:7; unsigned int v3:7; };
struct Sf_BFu7s_BFu7ll { empty v1; unsigned short v2:7; unsigned long long v3:7; };
struct Sf_BFu7s_BFu7s { empty v1; unsigned short v2:7; unsigned short v3:7; };
struct Sf_BFu7s_BFu8c { empty v1; unsigned short v2:7; unsigned char v3:8; };
struct Sf_BFu7s_BFu8i { empty v1; unsigned short v2:7; unsigned int v3:8; };
struct Sf_BFu7s_BFu8ll { empty v1; unsigned short v2:7; unsigned long long v3:8; };
struct Sf_BFu7s_BFu8s { empty v1; unsigned short v2:7; unsigned short v3:8; };
struct Sf_BFu7s_BFu9i { empty v1; unsigned short v2:7; unsigned int v3:9; };
struct Sf_BFu7s_BFu9ll { empty v1; unsigned short v2:7; unsigned long long v3:9; };
struct Sf_BFu7s_BFu9s { empty v1; unsigned short v2:7; unsigned short v3:9; };
struct Sf_BFu7s_C { empty v1; unsigned short v2:7; char v3; };
struct Sf_BFu7s_D { empty v1; unsigned short v2:7; double v3; };
struct Sf_BFu7s_F { empty v1; unsigned short v2:7; float v3; };
struct Sf_BFu7s_I { empty v1; unsigned short v2:7; int v3; };
struct Sf_BFu7s_Ip { empty v1; unsigned short v2:7; int * v3; };
struct Sf_BFu7s_L { empty v1; unsigned short v2:7; long long v3; };
struct Sf_BFu7s_S { empty v1; unsigned short v2:7; short v3; };
struct Sf_BFu7s_Sf { empty v1; unsigned short v2:7; empty v3; };
struct Sf_BFu7s_Uc { empty v1; unsigned short v2:7; unsigned char v3; };
struct Sf_BFu7s_Ui { empty v1; unsigned short v2:7; unsigned int v3; };
struct Sf_BFu7s_Ul { empty v1; unsigned short v2:7; unsigned long long v3; };
struct Sf_BFu7s_Us { empty v1; unsigned short v2:7; unsigned short v3; };
struct Sf_BFu7s_Vp { empty v1; unsigned short v2:7; void * v3; };
struct Sf_BFu8c { empty v1; unsigned char v2:8; };
struct Sf_BFu8c_BFu15i { empty v1; unsigned char v2:8; unsigned int v3:15; };
struct Sf_BFu8c_BFu15ll { empty v1; unsigned char v2:8; unsigned long long v3:15; };
struct Sf_BFu8c_BFu15s { empty v1; unsigned char v2:8; unsigned short v3:15; };
struct Sf_BFu8c_BFu16i { empty v1; unsigned char v2:8; unsigned int v3:16; };
struct Sf_BFu8c_BFu16ll { empty v1; unsigned char v2:8; unsigned long long v3:16; };
struct Sf_BFu8c_BFu16s { empty v1; unsigned char v2:8; unsigned short v3:16; };
struct Sf_BFu8c_BFu17i { empty v1; unsigned char v2:8; unsigned int v3:17; };
struct Sf_BFu8c_BFu17ll { empty v1; unsigned char v2:8; unsigned long long v3:17; };
struct Sf_BFu8c_BFu1c { empty v1; unsigned char v2:8; unsigned char v3:1; };
struct Sf_BFu8c_BFu1i { empty v1; unsigned char v2:8; unsigned int v3:1; };
struct Sf_BFu8c_BFu1ll { empty v1; unsigned char v2:8; unsigned long long v3:1; };
struct Sf_BFu8c_BFu1s { empty v1; unsigned char v2:8; unsigned short v3:1; };
struct Sf_BFu8c_BFu31i { empty v1; unsigned char v2:8; unsigned int v3:31; };
struct Sf_BFu8c_BFu31ll { empty v1; unsigned char v2:8; unsigned long long v3:31; };
struct Sf_BFu8c_BFu32i { empty v1; unsigned char v2:8; unsigned int v3:32; };
struct Sf_BFu8c_BFu32ll { empty v1; unsigned char v2:8; unsigned long long v3:32; };
struct Sf_BFu8c_BFu33 { empty v1; unsigned char v2:8; unsigned long long v3:33; };
struct Sf_BFu8c_BFu7c { empty v1; unsigned char v2:8; unsigned char v3:7; };
struct Sf_BFu8c_BFu7i { empty v1; unsigned char v2:8; unsigned int v3:7; };
struct Sf_BFu8c_BFu7ll { empty v1; unsigned char v2:8; unsigned long long v3:7; };
struct Sf_BFu8c_BFu7s { empty v1; unsigned char v2:8; unsigned short v3:7; };
struct Sf_BFu8c_BFu8c { empty v1; unsigned char v2:8; unsigned char v3:8; };
struct Sf_BFu8c_BFu8i { empty v1; unsigned char v2:8; unsigned int v3:8; };
struct Sf_BFu8c_BFu8ll { empty v1; unsigned char v2:8; unsigned long long v3:8; };
struct Sf_BFu8c_BFu8s { empty v1; unsigned char v2:8; unsigned short v3:8; };
struct Sf_BFu8c_BFu9i { empty v1; unsigned char v2:8; unsigned int v3:9; };
struct Sf_BFu8c_BFu9ll { empty v1; unsigned char v2:8; unsigned long long v3:9; };
struct Sf_BFu8c_BFu9s { empty v1; unsigned char v2:8; unsigned short v3:9; };
struct Sf_BFu8c_C { empty v1; unsigned char v2:8; char v3; };
struct Sf_BFu8c_D { empty v1; unsigned char v2:8; double v3; };
struct Sf_BFu8c_F { empty v1; unsigned char v2:8; float v3; };
struct Sf_BFu8c_I { empty v1; unsigned char v2:8; int v3; };
struct Sf_BFu8c_Ip { empty v1; unsigned char v2:8; int * v3; };
struct Sf_BFu8c_L { empty v1; unsigned char v2:8; long long v3; };
struct Sf_BFu8c_S { empty v1; unsigned char v2:8; short v3; };
struct Sf_BFu8c_Sf { empty v1; unsigned char v2:8; empty v3; };
struct Sf_BFu8c_Uc { empty v1; unsigned char v2:8; unsigned char v3; };
struct Sf_BFu8c_Ui { empty v1; unsigned char v2:8; unsigned int v3; };
struct Sf_BFu8c_Ul { empty v1; unsigned char v2:8; unsigned long long v3; };
struct Sf_BFu8c_Us { empty v1; unsigned char v2:8; unsigned short v3; };
struct Sf_BFu8c_Vp { empty v1; unsigned char v2:8; void * v3; };
struct Sf_BFu8i { empty v1; unsigned int v2:8; };
struct Sf_BFu8i_BFu15i { empty v1; unsigned int v2:8; unsigned int v3:15; };
struct Sf_BFu8i_BFu15ll { empty v1; unsigned int v2:8; unsigned long long v3:15; };
struct Sf_BFu8i_BFu15s { empty v1; unsigned int v2:8; unsigned short v3:15; };
struct Sf_BFu8i_BFu16i { empty v1; unsigned int v2:8; unsigned int v3:16; };
struct Sf_BFu8i_BFu16ll { empty v1; unsigned int v2:8; unsigned long long v3:16; };
struct Sf_BFu8i_BFu16s { empty v1; unsigned int v2:8; unsigned short v3:16; };
struct Sf_BFu8i_BFu17i { empty v1; unsigned int v2:8; unsigned int v3:17; };
struct Sf_BFu8i_BFu17ll { empty v1; unsigned int v2:8; unsigned long long v3:17; };
struct Sf_BFu8i_BFu1c { empty v1; unsigned int v2:8; unsigned char v3:1; };
struct Sf_BFu8i_BFu1i { empty v1; unsigned int v2:8; unsigned int v3:1; };
struct Sf_BFu8i_BFu1ll { empty v1; unsigned int v2:8; unsigned long long v3:1; };
struct Sf_BFu8i_BFu1s { empty v1; unsigned int v2:8; unsigned short v3:1; };
struct Sf_BFu8i_BFu31i { empty v1; unsigned int v2:8; unsigned int v3:31; };
struct Sf_BFu8i_BFu31ll { empty v1; unsigned int v2:8; unsigned long long v3:31; };
struct Sf_BFu8i_BFu32i { empty v1; unsigned int v2:8; unsigned int v3:32; };
struct Sf_BFu8i_BFu32ll { empty v1; unsigned int v2:8; unsigned long long v3:32; };
struct Sf_BFu8i_BFu33 { empty v1; unsigned int v2:8; unsigned long long v3:33; };
struct Sf_BFu8i_BFu7c { empty v1; unsigned int v2:8; unsigned char v3:7; };
struct Sf_BFu8i_BFu7i { empty v1; unsigned int v2:8; unsigned int v3:7; };
struct Sf_BFu8i_BFu7ll { empty v1; unsigned int v2:8; unsigned long long v3:7; };
struct Sf_BFu8i_BFu7s { empty v1; unsigned int v2:8; unsigned short v3:7; };
struct Sf_BFu8i_BFu8c { empty v1; unsigned int v2:8; unsigned char v3:8; };
struct Sf_BFu8i_BFu8i { empty v1; unsigned int v2:8; unsigned int v3:8; };
struct Sf_BFu8i_BFu8ll { empty v1; unsigned int v2:8; unsigned long long v3:8; };
struct Sf_BFu8i_BFu8s { empty v1; unsigned int v2:8; unsigned short v3:8; };
struct Sf_BFu8i_BFu9i { empty v1; unsigned int v2:8; unsigned int v3:9; };
struct Sf_BFu8i_BFu9ll { empty v1; unsigned int v2:8; unsigned long long v3:9; };
struct Sf_BFu8i_BFu9s { empty v1; unsigned int v2:8; unsigned short v3:9; };
struct Sf_BFu8i_C { empty v1; unsigned int v2:8; char v3; };
struct Sf_BFu8i_D { empty v1; unsigned int v2:8; double v3; };
struct Sf_BFu8i_F { empty v1; unsigned int v2:8; float v3; };
struct Sf_BFu8i_I { empty v1; unsigned int v2:8; int v3; };
struct Sf_BFu8i_Ip { empty v1; unsigned int v2:8; int * v3; };
struct Sf_BFu8i_L { empty v1; unsigned int v2:8; long long v3; };
struct Sf_BFu8i_S { empty v1; unsigned int v2:8; short v3; };
struct Sf_BFu8i_Sf { empty v1; unsigned int v2:8; empty v3; };
struct Sf_BFu8i_Uc { empty v1; unsigned int v2:8; unsigned char v3; };
struct Sf_BFu8i_Ui { empty v1; unsigned int v2:8; unsigned int v3; };
struct Sf_BFu8i_Ul { empty v1; unsigned int v2:8; unsigned long long v3; };
struct Sf_BFu8i_Us { empty v1; unsigned int v2:8; unsigned short v3; };
struct Sf_BFu8i_Vp { empty v1; unsigned int v2:8; void * v3; };
struct Sf_BFu8ll { empty v1; unsigned long long v2:8; };
struct Sf_BFu8ll_BFu15i { empty v1; unsigned long long v2:8; unsigned int v3:15; };
struct Sf_BFu8ll_BFu15ll { empty v1; unsigned long long v2:8; unsigned long long v3:15; };
struct Sf_BFu8ll_BFu15s { empty v1; unsigned long long v2:8; unsigned short v3:15; };
struct Sf_BFu8ll_BFu16i { empty v1; unsigned long long v2:8; unsigned int v3:16; };
struct Sf_BFu8ll_BFu16ll { empty v1; unsigned long long v2:8; unsigned long long v3:16; };
struct Sf_BFu8ll_BFu16s { empty v1; unsigned long long v2:8; unsigned short v3:16; };
struct Sf_BFu8ll_BFu17i { empty v1; unsigned long long v2:8; unsigned int v3:17; };
struct Sf_BFu8ll_BFu17ll { empty v1; unsigned long long v2:8; unsigned long long v3:17; };
struct Sf_BFu8ll_BFu1c { empty v1; unsigned long long v2:8; unsigned char v3:1; };
struct Sf_BFu8ll_BFu1i { empty v1; unsigned long long v2:8; unsigned int v3:1; };
struct Sf_BFu8ll_BFu1ll { empty v1; unsigned long long v2:8; unsigned long long v3:1; };
struct Sf_BFu8ll_BFu1s { empty v1; unsigned long long v2:8; unsigned short v3:1; };
struct Sf_BFu8ll_BFu31i { empty v1; unsigned long long v2:8; unsigned int v3:31; };
struct Sf_BFu8ll_BFu31ll { empty v1; unsigned long long v2:8; unsigned long long v3:31; };
struct Sf_BFu8ll_BFu32i { empty v1; unsigned long long v2:8; unsigned int v3:32; };
struct Sf_BFu8ll_BFu32ll { empty v1; unsigned long long v2:8; unsigned long long v3:32; };
struct Sf_BFu8ll_BFu33 { empty v1; unsigned long long v2:8; unsigned long long v3:33; };
struct Sf_BFu8ll_BFu7c { empty v1; unsigned long long v2:8; unsigned char v3:7; };
struct Sf_BFu8ll_BFu7i { empty v1; unsigned long long v2:8; unsigned int v3:7; };
struct Sf_BFu8ll_BFu7ll { empty v1; unsigned long long v2:8; unsigned long long v3:7; };
struct Sf_BFu8ll_BFu7s { empty v1; unsigned long long v2:8; unsigned short v3:7; };
struct Sf_BFu8ll_BFu8c { empty v1; unsigned long long v2:8; unsigned char v3:8; };
struct Sf_BFu8ll_BFu8i { empty v1; unsigned long long v2:8; unsigned int v3:8; };
struct Sf_BFu8ll_BFu8ll { empty v1; unsigned long long v2:8; unsigned long long v3:8; };
struct Sf_BFu8ll_BFu8s { empty v1; unsigned long long v2:8; unsigned short v3:8; };
struct Sf_BFu8ll_BFu9i { empty v1; unsigned long long v2:8; unsigned int v3:9; };
struct Sf_BFu8ll_BFu9ll { empty v1; unsigned long long v2:8; unsigned long long v3:9; };
struct Sf_BFu8ll_BFu9s { empty v1; unsigned long long v2:8; unsigned short v3:9; };
struct Sf_BFu8ll_C { empty v1; unsigned long long v2:8; char v3; };
struct Sf_BFu8ll_D { empty v1; unsigned long long v2:8; double v3; };
struct Sf_BFu8ll_F { empty v1; unsigned long long v2:8; float v3; };
struct Sf_BFu8ll_I { empty v1; unsigned long long v2:8; int v3; };
struct Sf_BFu8ll_Ip { empty v1; unsigned long long v2:8; int * v3; };
struct Sf_BFu8ll_L { empty v1; unsigned long long v2:8; long long v3; };
struct Sf_BFu8ll_S { empty v1; unsigned long long v2:8; short v3; };
struct Sf_BFu8ll_Sf { empty v1; unsigned long long v2:8; empty v3; };
struct Sf_BFu8ll_Uc { empty v1; unsigned long long v2:8; unsigned char v3; };
struct Sf_BFu8ll_Ui { empty v1; unsigned long long v2:8; unsigned int v3; };
struct Sf_BFu8ll_Ul { empty v1; unsigned long long v2:8; unsigned long long v3; };
struct Sf_BFu8ll_Us { empty v1; unsigned long long v2:8; unsigned short v3; };
struct Sf_BFu8ll_Vp { empty v1; unsigned long long v2:8; void * v3; };
struct Sf_BFu8s { empty v1; unsigned short v2:8; };
struct Sf_BFu8s_BFu15i { empty v1; unsigned short v2:8; unsigned int v3:15; };
struct Sf_BFu8s_BFu15ll { empty v1; unsigned short v2:8; unsigned long long v3:15; };
struct Sf_BFu8s_BFu15s { empty v1; unsigned short v2:8; unsigned short v3:15; };
struct Sf_BFu8s_BFu16i { empty v1; unsigned short v2:8; unsigned int v3:16; };
struct Sf_BFu8s_BFu16ll { empty v1; unsigned short v2:8; unsigned long long v3:16; };
struct Sf_BFu8s_BFu16s { empty v1; unsigned short v2:8; unsigned short v3:16; };
struct Sf_BFu8s_BFu17i { empty v1; unsigned short v2:8; unsigned int v3:17; };
struct Sf_BFu8s_BFu17ll { empty v1; unsigned short v2:8; unsigned long long v3:17; };
struct Sf_BFu8s_BFu1c { empty v1; unsigned short v2:8; unsigned char v3:1; };
struct Sf_BFu8s_BFu1i { empty v1; unsigned short v2:8; unsigned int v3:1; };
struct Sf_BFu8s_BFu1ll { empty v1; unsigned short v2:8; unsigned long long v3:1; };
struct Sf_BFu8s_BFu1s { empty v1; unsigned short v2:8; unsigned short v3:1; };
struct Sf_BFu8s_BFu31i { empty v1; unsigned short v2:8; unsigned int v3:31; };
struct Sf_BFu8s_BFu31ll { empty v1; unsigned short v2:8; unsigned long long v3:31; };
struct Sf_BFu8s_BFu32i { empty v1; unsigned short v2:8; unsigned int v3:32; };
struct Sf_BFu8s_BFu32ll { empty v1; unsigned short v2:8; unsigned long long v3:32; };
struct Sf_BFu8s_BFu33 { empty v1; unsigned short v2:8; unsigned long long v3:33; };
struct Sf_BFu8s_BFu7c { empty v1; unsigned short v2:8; unsigned char v3:7; };
struct Sf_BFu8s_BFu7i { empty v1; unsigned short v2:8; unsigned int v3:7; };
struct Sf_BFu8s_BFu7ll { empty v1; unsigned short v2:8; unsigned long long v3:7; };
struct Sf_BFu8s_BFu7s { empty v1; unsigned short v2:8; unsigned short v3:7; };
struct Sf_BFu8s_BFu8c { empty v1; unsigned short v2:8; unsigned char v3:8; };
struct Sf_BFu8s_BFu8i { empty v1; unsigned short v2:8; unsigned int v3:8; };
struct Sf_BFu8s_BFu8ll { empty v1; unsigned short v2:8; unsigned long long v3:8; };
struct Sf_BFu8s_BFu8s { empty v1; unsigned short v2:8; unsigned short v3:8; };
struct Sf_BFu8s_BFu9i { empty v1; unsigned short v2:8; unsigned int v3:9; };
struct Sf_BFu8s_BFu9ll { empty v1; unsigned short v2:8; unsigned long long v3:9; };
struct Sf_BFu8s_BFu9s { empty v1; unsigned short v2:8; unsigned short v3:9; };
struct Sf_BFu8s_C { empty v1; unsigned short v2:8; char v3; };
struct Sf_BFu8s_D { empty v1; unsigned short v2:8; double v3; };
struct Sf_BFu8s_F { empty v1; unsigned short v2:8; float v3; };
struct Sf_BFu8s_I { empty v1; unsigned short v2:8; int v3; };
struct Sf_BFu8s_Ip { empty v1; unsigned short v2:8; int * v3; };
struct Sf_BFu8s_L { empty v1; unsigned short v2:8; long long v3; };
struct Sf_BFu8s_S { empty v1; unsigned short v2:8; short v3; };
struct Sf_BFu8s_Sf { empty v1; unsigned short v2:8; empty v3; };
struct Sf_BFu8s_Uc { empty v1; unsigned short v2:8; unsigned char v3; };
struct Sf_BFu8s_Ui { empty v1; unsigned short v2:8; unsigned int v3; };
struct Sf_BFu8s_Ul { empty v1; unsigned short v2:8; unsigned long long v3; };
struct Sf_BFu8s_Us { empty v1; unsigned short v2:8; unsigned short v3; };
struct Sf_BFu8s_Vp { empty v1; unsigned short v2:8; void * v3; };
struct Sf_BFu9i { empty v1; unsigned int v2:9; };
struct Sf_BFu9i_BFu15i { empty v1; unsigned int v2:9; unsigned int v3:15; };
struct Sf_BFu9i_BFu15ll { empty v1; unsigned int v2:9; unsigned long long v3:15; };
struct Sf_BFu9i_BFu15s { empty v1; unsigned int v2:9; unsigned short v3:15; };
struct Sf_BFu9i_BFu16i { empty v1; unsigned int v2:9; unsigned int v3:16; };
struct Sf_BFu9i_BFu16ll { empty v1; unsigned int v2:9; unsigned long long v3:16; };
struct Sf_BFu9i_BFu16s { empty v1; unsigned int v2:9; unsigned short v3:16; };
struct Sf_BFu9i_BFu17i { empty v1; unsigned int v2:9; unsigned int v3:17; };
struct Sf_BFu9i_BFu17ll { empty v1; unsigned int v2:9; unsigned long long v3:17; };
struct Sf_BFu9i_BFu1c { empty v1; unsigned int v2:9; unsigned char v3:1; };
struct Sf_BFu9i_BFu1i { empty v1; unsigned int v2:9; unsigned int v3:1; };
struct Sf_BFu9i_BFu1ll { empty v1; unsigned int v2:9; unsigned long long v3:1; };
struct Sf_BFu9i_BFu1s { empty v1; unsigned int v2:9; unsigned short v3:1; };
struct Sf_BFu9i_BFu31i { empty v1; unsigned int v2:9; unsigned int v3:31; };
struct Sf_BFu9i_BFu31ll { empty v1; unsigned int v2:9; unsigned long long v3:31; };
struct Sf_BFu9i_BFu32i { empty v1; unsigned int v2:9; unsigned int v3:32; };
struct Sf_BFu9i_BFu32ll { empty v1; unsigned int v2:9; unsigned long long v3:32; };
struct Sf_BFu9i_BFu33 { empty v1; unsigned int v2:9; unsigned long long v3:33; };
struct Sf_BFu9i_BFu7c { empty v1; unsigned int v2:9; unsigned char v3:7; };
struct Sf_BFu9i_BFu7i { empty v1; unsigned int v2:9; unsigned int v3:7; };
struct Sf_BFu9i_BFu7ll { empty v1; unsigned int v2:9; unsigned long long v3:7; };
struct Sf_BFu9i_BFu7s { empty v1; unsigned int v2:9; unsigned short v3:7; };
struct Sf_BFu9i_BFu8c { empty v1; unsigned int v2:9; unsigned char v3:8; };
struct Sf_BFu9i_BFu8i { empty v1; unsigned int v2:9; unsigned int v3:8; };
struct Sf_BFu9i_BFu8ll { empty v1; unsigned int v2:9; unsigned long long v3:8; };
struct Sf_BFu9i_BFu8s { empty v1; unsigned int v2:9; unsigned short v3:8; };
struct Sf_BFu9i_BFu9i { empty v1; unsigned int v2:9; unsigned int v3:9; };
struct Sf_BFu9i_BFu9ll { empty v1; unsigned int v2:9; unsigned long long v3:9; };
struct Sf_BFu9i_BFu9s { empty v1; unsigned int v2:9; unsigned short v3:9; };
struct Sf_BFu9i_C { empty v1; unsigned int v2:9; char v3; };
struct Sf_BFu9i_D { empty v1; unsigned int v2:9; double v3; };
struct Sf_BFu9i_F { empty v1; unsigned int v2:9; float v3; };
struct Sf_BFu9i_I { empty v1; unsigned int v2:9; int v3; };
struct Sf_BFu9i_Ip { empty v1; unsigned int v2:9; int * v3; };
struct Sf_BFu9i_L { empty v1; unsigned int v2:9; long long v3; };
struct Sf_BFu9i_S { empty v1; unsigned int v2:9; short v3; };
struct Sf_BFu9i_Sf { empty v1; unsigned int v2:9; empty v3; };
struct Sf_BFu9i_Uc { empty v1; unsigned int v2:9; unsigned char v3; };
struct Sf_BFu9i_Ui { empty v1; unsigned int v2:9; unsigned int v3; };
struct Sf_BFu9i_Ul { empty v1; unsigned int v2:9; unsigned long long v3; };
struct Sf_BFu9i_Us { empty v1; unsigned int v2:9; unsigned short v3; };
struct Sf_BFu9i_Vp { empty v1; unsigned int v2:9; void * v3; };
struct Sf_BFu9ll { empty v1; unsigned long long v2:9; };
struct Sf_BFu9ll_BFu15i { empty v1; unsigned long long v2:9; unsigned int v3:15; };
struct Sf_BFu9ll_BFu15ll { empty v1; unsigned long long v2:9; unsigned long long v3:15; };
struct Sf_BFu9ll_BFu15s { empty v1; unsigned long long v2:9; unsigned short v3:15; };
struct Sf_BFu9ll_BFu16i { empty v1; unsigned long long v2:9; unsigned int v3:16; };
struct Sf_BFu9ll_BFu16ll { empty v1; unsigned long long v2:9; unsigned long long v3:16; };
struct Sf_BFu9ll_BFu16s { empty v1; unsigned long long v2:9; unsigned short v3:16; };
struct Sf_BFu9ll_BFu17i { empty v1; unsigned long long v2:9; unsigned int v3:17; };
struct Sf_BFu9ll_BFu17ll { empty v1; unsigned long long v2:9; unsigned long long v3:17; };
struct Sf_BFu9ll_BFu1c { empty v1; unsigned long long v2:9; unsigned char v3:1; };
struct Sf_BFu9ll_BFu1i { empty v1; unsigned long long v2:9; unsigned int v3:1; };
struct Sf_BFu9ll_BFu1ll { empty v1; unsigned long long v2:9; unsigned long long v3:1; };
struct Sf_BFu9ll_BFu1s { empty v1; unsigned long long v2:9; unsigned short v3:1; };
struct Sf_BFu9ll_BFu31i { empty v1; unsigned long long v2:9; unsigned int v3:31; };
struct Sf_BFu9ll_BFu31ll { empty v1; unsigned long long v2:9; unsigned long long v3:31; };
struct Sf_BFu9ll_BFu32i { empty v1; unsigned long long v2:9; unsigned int v3:32; };
struct Sf_BFu9ll_BFu32ll { empty v1; unsigned long long v2:9; unsigned long long v3:32; };
struct Sf_BFu9ll_BFu33 { empty v1; unsigned long long v2:9; unsigned long long v3:33; };
struct Sf_BFu9ll_BFu7c { empty v1; unsigned long long v2:9; unsigned char v3:7; };
struct Sf_BFu9ll_BFu7i { empty v1; unsigned long long v2:9; unsigned int v3:7; };
struct Sf_BFu9ll_BFu7ll { empty v1; unsigned long long v2:9; unsigned long long v3:7; };
struct Sf_BFu9ll_BFu7s { empty v1; unsigned long long v2:9; unsigned short v3:7; };
struct Sf_BFu9ll_BFu8c { empty v1; unsigned long long v2:9; unsigned char v3:8; };
struct Sf_BFu9ll_BFu8i { empty v1; unsigned long long v2:9; unsigned int v3:8; };
struct Sf_BFu9ll_BFu8ll { empty v1; unsigned long long v2:9; unsigned long long v3:8; };
struct Sf_BFu9ll_BFu8s { empty v1; unsigned long long v2:9; unsigned short v3:8; };
struct Sf_BFu9ll_BFu9i { empty v1; unsigned long long v2:9; unsigned int v3:9; };
struct Sf_BFu9ll_BFu9ll { empty v1; unsigned long long v2:9; unsigned long long v3:9; };
struct Sf_BFu9ll_BFu9s { empty v1; unsigned long long v2:9; unsigned short v3:9; };
struct Sf_BFu9ll_C { empty v1; unsigned long long v2:9; char v3; };
struct Sf_BFu9ll_D { empty v1; unsigned long long v2:9; double v3; };
struct Sf_BFu9ll_F { empty v1; unsigned long long v2:9; float v3; };
struct Sf_BFu9ll_I { empty v1; unsigned long long v2:9; int v3; };
struct Sf_BFu9ll_Ip { empty v1; unsigned long long v2:9; int * v3; };


static void Test_empty()
{
  {
    init_simple_test("empty");
    STRUCT_IF_C empty lv;
    check2(sizeof(lv), 0, "sizeof(empty)");
    check2(__alignof__(lv), 1, "__alignof__(empty)");
  }
}
ARRANGE_TO_CALL_ME(Test_empty, empty)
//============================================================================



static void Test_BFu31i_BFu31ll_Sf()
{
  {
    init_simple_test("BFu31i_BFu31ll_Sf");
    static STRUCT_IF_C BFu31i_BFu31ll_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu31ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu31ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "BFu31i_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "BFu31i_BFu31ll_Sf");
    check_field_offset(lv, v3, 8, "BFu31i_BFu31ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_BFu31ll_Sf, BFu31i_BFu31ll_Sf)
//============================================================================



static void Test_BFu31i_BFu32i_Sf()
{
  {
    init_simple_test("BFu31i_BFu32i_Sf");
    static STRUCT_IF_C BFu31i_BFu32i_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu32i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu32i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu32i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "BFu31i_BFu32i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "BFu31i_BFu32i_Sf");
    check_field_offset(lv, v3, 8, "BFu31i_BFu32i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_BFu32i_Sf, BFu31i_BFu32i_Sf)
//============================================================================



static void Test_BFu31i_BFu32ll_Sf()
{
  {
    init_simple_test("BFu31i_BFu32ll_Sf");
    static STRUCT_IF_C BFu31i_BFu32ll_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu32ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu32ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "BFu31i_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "BFu31i_BFu32ll_Sf");
    check_field_offset(lv, v3, 8, "BFu31i_BFu32ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_BFu32ll_Sf, BFu31i_BFu32ll_Sf)
//============================================================================



static void Test_BFu31i_BFu33_Sf()
{
  {
    init_simple_test("BFu31i_BFu33_Sf");
    static STRUCT_IF_C BFu31i_BFu33_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu33_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu33_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu33_Sf");
    set_bf_and_test(lv, v2, 3, 7, 33, 1, "BFu31i_BFu33_Sf");
    set_bf_and_test(lv, v2, 3, 7, 33, hide_ull(1LL<<32), "BFu31i_BFu33_Sf");
    check_field_offset(lv, v3, 8, "BFu31i_BFu33_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_BFu33_Sf, BFu31i_BFu33_Sf)
//============================================================================



static void Test_BFu31i_BFu7c_Sf()
{
  {
    init_simple_test("BFu31i_BFu7c_Sf");
    static STRUCT_IF_C BFu31i_BFu7c_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu7c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu7c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu7c_Sf");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31i_BFu7c_Sf");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31i_BFu7c_Sf");
    check_field_offset(lv, v3, 5, "BFu31i_BFu7c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_BFu7c_Sf, BFu31i_BFu7c_Sf)
//============================================================================



static void Test_BFu31i_BFu7i_Sf()
{
  {
    init_simple_test("BFu31i_BFu7i_Sf");
    static STRUCT_IF_C BFu31i_BFu7i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu7i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu7i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu7i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31i_BFu7i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31i_BFu7i_Sf");
    check_field_offset(lv, v3, 5, "BFu31i_BFu7i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_BFu7i_Sf, BFu31i_BFu7i_Sf)
//============================================================================



static void Test_BFu31i_BFu7ll_Sf()
{
  {
    init_simple_test("BFu31i_BFu7ll_Sf");
    static STRUCT_IF_C BFu31i_BFu7ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu7ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu7ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31i_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31i_BFu7ll_Sf");
    check_field_offset(lv, v3, 5, "BFu31i_BFu7ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_BFu7ll_Sf, BFu31i_BFu7ll_Sf)
//============================================================================



static void Test_BFu31i_BFu7s_Sf()
{
  {
    init_simple_test("BFu31i_BFu7s_Sf");
    static STRUCT_IF_C BFu31i_BFu7s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu7s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu7s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu7s_Sf");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31i_BFu7s_Sf");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31i_BFu7s_Sf");
    check_field_offset(lv, v3, 5, "BFu31i_BFu7s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_BFu7s_Sf, BFu31i_BFu7s_Sf)
//============================================================================



static void Test_BFu31i_BFu8c_Sf()
{
  {
    init_simple_test("BFu31i_BFu8c_Sf");
    static STRUCT_IF_C BFu31i_BFu8c_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu8c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu8c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu8c_Sf");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31i_BFu8c_Sf");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31i_BFu8c_Sf");
    check_field_offset(lv, v3, 5, "BFu31i_BFu8c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_BFu8c_Sf, BFu31i_BFu8c_Sf)
//============================================================================



static void Test_BFu31i_BFu8i_Sf()
{
  {
    init_simple_test("BFu31i_BFu8i_Sf");
    static STRUCT_IF_C BFu31i_BFu8i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu8i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu8i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu8i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31i_BFu8i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31i_BFu8i_Sf");
    check_field_offset(lv, v3, 5, "BFu31i_BFu8i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_BFu8i_Sf, BFu31i_BFu8i_Sf)
//============================================================================



static void Test_BFu31i_BFu8ll_Sf()
{
  {
    init_simple_test("BFu31i_BFu8ll_Sf");
    static STRUCT_IF_C BFu31i_BFu8ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu8ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu8ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31i_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31i_BFu8ll_Sf");
    check_field_offset(lv, v3, 5, "BFu31i_BFu8ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_BFu8ll_Sf, BFu31i_BFu8ll_Sf)
//============================================================================



static void Test_BFu31i_BFu8s_Sf()
{
  {
    init_simple_test("BFu31i_BFu8s_Sf");
    static STRUCT_IF_C BFu31i_BFu8s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu8s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu8s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu8s_Sf");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31i_BFu8s_Sf");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31i_BFu8s_Sf");
    check_field_offset(lv, v3, 5, "BFu31i_BFu8s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_BFu8s_Sf, BFu31i_BFu8s_Sf)
//============================================================================



static void Test_BFu31i_BFu9i_Sf()
{
  {
    init_simple_test("BFu31i_BFu9i_Sf");
    static STRUCT_IF_C BFu31i_BFu9i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu9i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu9i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu9i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "BFu31i_BFu9i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "BFu31i_BFu9i_Sf");
    check_field_offset(lv, v3, 5, "BFu31i_BFu9i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_BFu9i_Sf, BFu31i_BFu9i_Sf)
//============================================================================



static void Test_BFu31i_BFu9ll_Sf()
{
  {
    init_simple_test("BFu31i_BFu9ll_Sf");
    static STRUCT_IF_C BFu31i_BFu9ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu9ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu9ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "BFu31i_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "BFu31i_BFu9ll_Sf");
    check_field_offset(lv, v3, 5, "BFu31i_BFu9ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_BFu9ll_Sf, BFu31i_BFu9ll_Sf)
//============================================================================



static void Test_BFu31i_BFu9s_Sf()
{
  {
    init_simple_test("BFu31i_BFu9s_Sf");
    static STRUCT_IF_C BFu31i_BFu9s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu9s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu9s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu9s_Sf");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "BFu31i_BFu9s_Sf");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "BFu31i_BFu9s_Sf");
    check_field_offset(lv, v3, 5, "BFu31i_BFu9s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_BFu9s_Sf, BFu31i_BFu9s_Sf)
//============================================================================



static void Test_BFu31i_C_Sf()
{
  {
    init_simple_test("BFu31i_C_Sf");
    static STRUCT_IF_C BFu31i_C_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_C_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_C_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_C_Sf");
    check_field_offset(lv, v2, 4, "BFu31i_C_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu31i_C_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_C_Sf, BFu31i_C_Sf)
//============================================================================



static void Test_BFu31i_D_Sf()
{
  {
    init_simple_test("BFu31i_D_Sf");
    static STRUCT_IF_C BFu31i_D_Sf lv;
    check2(sizeof(lv), 12, "sizeof(BFu31i_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_D_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_D_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_D_Sf");
    check_field_offset(lv, v2, 4, "BFu31i_D_Sf.v2");
    check_field_offset(lv, v3, 12, "BFu31i_D_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_D_Sf, BFu31i_D_Sf)
//============================================================================



static void Test_BFu31i_F_Sf()
{
  {
    init_simple_test("BFu31i_F_Sf");
    static STRUCT_IF_C BFu31i_F_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_F_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_F_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_F_Sf");
    check_field_offset(lv, v2, 4, "BFu31i_F_Sf.v2");
    check_field_offset(lv, v3, 8, "BFu31i_F_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_F_Sf, BFu31i_F_Sf)
//============================================================================



static void Test_BFu31i_I_Sf()
{
  {
    init_simple_test("BFu31i_I_Sf");
    static STRUCT_IF_C BFu31i_I_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_I_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_I_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_I_Sf");
    check_field_offset(lv, v2, 4, "BFu31i_I_Sf.v2");
    check_field_offset(lv, v3, 8, "BFu31i_I_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_I_Sf, BFu31i_I_Sf)
//============================================================================



static void Test_BFu31i_Ip_Sf()
{
  {
    init_simple_test("BFu31i_Ip_Sf");
    static STRUCT_IF_C BFu31i_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31i_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Ip_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Ip_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Ip_Sf");
    check_field_offset(lv, v2, 4, "BFu31i_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "BFu31i_Ip_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Ip_Sf, BFu31i_Ip_Sf)
//============================================================================



static void Test_BFu31i_L_Sf()
{
  {
    init_simple_test("BFu31i_L_Sf");
    static STRUCT_IF_C BFu31i_L_Sf lv;
    check2(sizeof(lv), 12, "sizeof(BFu31i_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_L_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_L_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_L_Sf");
    check_field_offset(lv, v2, 4, "BFu31i_L_Sf.v2");
    check_field_offset(lv, v3, 12, "BFu31i_L_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_L_Sf, BFu31i_L_Sf)
//============================================================================



static void Test_BFu31i_S_Sf()
{
  {
    init_simple_test("BFu31i_S_Sf");
    static STRUCT_IF_C BFu31i_S_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_S_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_S_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_S_Sf");
    check_field_offset(lv, v2, 4, "BFu31i_S_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu31i_S_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_S_Sf, BFu31i_S_Sf)
//============================================================================



static void Test_BFu31i_Sf()
{
  {
    init_simple_test("BFu31i_Sf");
    static STRUCT_IF_C BFu31i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf");
    check_field_offset(lv, v2, 4, "BFu31i_Sf.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf, BFu31i_Sf)
//============================================================================



static void Test_BFu31i_Sf_BFu15i()
{
  {
    init_simple_test("BFu31i_Sf_BFu15i");
    static STRUCT_IF_C BFu31i_Sf_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_BFu15i");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "BFu31i_Sf_BFu15i");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "BFu31i_Sf_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_BFu15i, BFu31i_Sf_BFu15i)
//============================================================================



static void Test_BFu31i_Sf_BFu15ll()
{
  {
    init_simple_test("BFu31i_Sf_BFu15ll");
    static STRUCT_IF_C BFu31i_Sf_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_BFu15ll");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "BFu31i_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "BFu31i_Sf_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_BFu15ll, BFu31i_Sf_BFu15ll)
//============================================================================



static void Test_BFu31i_Sf_BFu15s()
{
  {
    init_simple_test("BFu31i_Sf_BFu15s");
    static STRUCT_IF_C BFu31i_Sf_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_BFu15s");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "BFu31i_Sf_BFu15s");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "BFu31i_Sf_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_BFu15s, BFu31i_Sf_BFu15s)
//============================================================================



static void Test_BFu31i_Sf_BFu16i()
{
  {
    init_simple_test("BFu31i_Sf_BFu16i");
    static STRUCT_IF_C BFu31i_Sf_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_BFu16i");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "BFu31i_Sf_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "BFu31i_Sf_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_BFu16i, BFu31i_Sf_BFu16i)
//============================================================================



static void Test_BFu31i_Sf_BFu16ll()
{
  {
    init_simple_test("BFu31i_Sf_BFu16ll");
    static STRUCT_IF_C BFu31i_Sf_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_BFu16ll");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "BFu31i_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "BFu31i_Sf_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_BFu16ll, BFu31i_Sf_BFu16ll)
//============================================================================



static void Test_BFu31i_Sf_BFu16s()
{
  {
    init_simple_test("BFu31i_Sf_BFu16s");
    static STRUCT_IF_C BFu31i_Sf_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_BFu16s");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "BFu31i_Sf_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "BFu31i_Sf_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_BFu16s, BFu31i_Sf_BFu16s)
//============================================================================



static void Test_BFu31i_Sf_BFu17i()
{
  {
    init_simple_test("BFu31i_Sf_BFu17i");
    static STRUCT_IF_C BFu31i_Sf_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(BFu31i_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_BFu17i");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 4, 0, 17, 1, "BFu31i_Sf_BFu17i");
    set_bf_and_test(lv, v3, 4, 0, 17, hide_ull(1LL<<16), "BFu31i_Sf_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_BFu17i, BFu31i_Sf_BFu17i)
//============================================================================



static void Test_BFu31i_Sf_BFu17ll()
{
  {
    init_simple_test("BFu31i_Sf_BFu17ll");
    static STRUCT_IF_C BFu31i_Sf_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(BFu31i_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_BFu17ll");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 17, 1, "BFu31i_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 4, 0, 17, hide_ull(1LL<<16), "BFu31i_Sf_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_BFu17ll, BFu31i_Sf_BFu17ll)
//============================================================================



static void Test_BFu31i_Sf_BFu1c()
{
  {
    init_simple_test("BFu31i_Sf_BFu1c");
    static STRUCT_IF_C BFu31i_Sf_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_BFu1c");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "BFu31i_Sf_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_BFu1c, BFu31i_Sf_BFu1c)
//============================================================================



static void Test_BFu31i_Sf_BFu1i()
{
  {
    init_simple_test("BFu31i_Sf_BFu1i");
    static STRUCT_IF_C BFu31i_Sf_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_BFu1i");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "BFu31i_Sf_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_BFu1i, BFu31i_Sf_BFu1i)
//============================================================================



static void Test_BFu31i_Sf_BFu1ll()
{
  {
    init_simple_test("BFu31i_Sf_BFu1ll");
    static STRUCT_IF_C BFu31i_Sf_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_BFu1ll");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "BFu31i_Sf_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_BFu1ll, BFu31i_Sf_BFu1ll)
//============================================================================



static void Test_BFu31i_Sf_BFu1s()
{
  {
    init_simple_test("BFu31i_Sf_BFu1s");
    static STRUCT_IF_C BFu31i_Sf_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_BFu1s");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "BFu31i_Sf_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_BFu1s, BFu31i_Sf_BFu1s)
//============================================================================



static void Test_BFu31i_Sf_BFu31i()
{
  {
    init_simple_test("BFu31i_Sf_BFu31i");
    static STRUCT_IF_C BFu31i_Sf_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_BFu31i");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 4, 0, 31, 1, "BFu31i_Sf_BFu31i");
    set_bf_and_test(lv, v3, 4, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_BFu31i, BFu31i_Sf_BFu31i)
//============================================================================



static void Test_BFu31i_Sf_BFu31ll()
{
  {
    init_simple_test("BFu31i_Sf_BFu31ll");
    static STRUCT_IF_C BFu31i_Sf_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_BFu31ll");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 31, 1, "BFu31i_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 4, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_BFu31ll, BFu31i_Sf_BFu31ll)
//============================================================================



static void Test_BFu31i_Sf_BFu32i()
{
  {
    init_simple_test("BFu31i_Sf_BFu32i");
    static STRUCT_IF_C BFu31i_Sf_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_BFu32i");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 4, 0, 32, 1, "BFu31i_Sf_BFu32i");
    set_bf_and_test(lv, v3, 4, 0, 32, hide_ull(1LL<<31), "BFu31i_Sf_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_BFu32i, BFu31i_Sf_BFu32i)
//============================================================================



static void Test_BFu31i_Sf_BFu32ll()
{
  {
    init_simple_test("BFu31i_Sf_BFu32ll");
    static STRUCT_IF_C BFu31i_Sf_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_BFu32ll");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 32, 1, "BFu31i_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 4, 0, 32, hide_ull(1LL<<31), "BFu31i_Sf_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_BFu32ll, BFu31i_Sf_BFu32ll)
//============================================================================



static void Test_BFu31i_Sf_BFu33()
{
  {
    init_simple_test("BFu31i_Sf_BFu33");
    static STRUCT_IF_C BFu31i_Sf_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(BFu31i_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_BFu33");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 4, 0, 33, 1, "BFu31i_Sf_BFu33");
    set_bf_and_test(lv, v3, 4, 0, 33, hide_ull(1LL<<32), "BFu31i_Sf_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_BFu33, BFu31i_Sf_BFu33)
//============================================================================



static void Test_BFu31i_Sf_BFu7c()
{
  {
    init_simple_test("BFu31i_Sf_BFu7c");
    static STRUCT_IF_C BFu31i_Sf_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_BFu7c");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "BFu31i_Sf_BFu7c");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "BFu31i_Sf_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_BFu7c, BFu31i_Sf_BFu7c)
//============================================================================



static void Test_BFu31i_Sf_BFu7i()
{
  {
    init_simple_test("BFu31i_Sf_BFu7i");
    static STRUCT_IF_C BFu31i_Sf_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_BFu7i");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "BFu31i_Sf_BFu7i");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "BFu31i_Sf_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_BFu7i, BFu31i_Sf_BFu7i)
//============================================================================



static void Test_BFu31i_Sf_BFu7ll()
{
  {
    init_simple_test("BFu31i_Sf_BFu7ll");
    static STRUCT_IF_C BFu31i_Sf_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_BFu7ll");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "BFu31i_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "BFu31i_Sf_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_BFu7ll, BFu31i_Sf_BFu7ll)
//============================================================================



static void Test_BFu31i_Sf_BFu7s()
{
  {
    init_simple_test("BFu31i_Sf_BFu7s");
    static STRUCT_IF_C BFu31i_Sf_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_BFu7s");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "BFu31i_Sf_BFu7s");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "BFu31i_Sf_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_BFu7s, BFu31i_Sf_BFu7s)
//============================================================================



static void Test_BFu31i_Sf_BFu8c()
{
  {
    init_simple_test("BFu31i_Sf_BFu8c");
    static STRUCT_IF_C BFu31i_Sf_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_BFu8c");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "BFu31i_Sf_BFu8c");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "BFu31i_Sf_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_BFu8c, BFu31i_Sf_BFu8c)
//============================================================================



static void Test_BFu31i_Sf_BFu8i()
{
  {
    init_simple_test("BFu31i_Sf_BFu8i");
    static STRUCT_IF_C BFu31i_Sf_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_BFu8i");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "BFu31i_Sf_BFu8i");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "BFu31i_Sf_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_BFu8i, BFu31i_Sf_BFu8i)
//============================================================================



static void Test_BFu31i_Sf_BFu8ll()
{
  {
    init_simple_test("BFu31i_Sf_BFu8ll");
    static STRUCT_IF_C BFu31i_Sf_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_BFu8ll");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "BFu31i_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "BFu31i_Sf_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_BFu8ll, BFu31i_Sf_BFu8ll)
//============================================================================



static void Test_BFu31i_Sf_BFu8s()
{
  {
    init_simple_test("BFu31i_Sf_BFu8s");
    static STRUCT_IF_C BFu31i_Sf_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_BFu8s");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "BFu31i_Sf_BFu8s");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "BFu31i_Sf_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_BFu8s, BFu31i_Sf_BFu8s)
//============================================================================



static void Test_BFu31i_Sf_BFu9i()
{
  {
    init_simple_test("BFu31i_Sf_BFu9i");
    static STRUCT_IF_C BFu31i_Sf_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_BFu9i");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "BFu31i_Sf_BFu9i");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "BFu31i_Sf_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_BFu9i, BFu31i_Sf_BFu9i)
//============================================================================



static void Test_BFu31i_Sf_BFu9ll()
{
  {
    init_simple_test("BFu31i_Sf_BFu9ll");
    static STRUCT_IF_C BFu31i_Sf_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_BFu9ll");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "BFu31i_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "BFu31i_Sf_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_BFu9ll, BFu31i_Sf_BFu9ll)
//============================================================================



static void Test_BFu31i_Sf_BFu9s()
{
  {
    init_simple_test("BFu31i_Sf_BFu9s");
    static STRUCT_IF_C BFu31i_Sf_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_BFu9s");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "BFu31i_Sf_BFu9s");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "BFu31i_Sf_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_BFu9s, BFu31i_Sf_BFu9s)
//============================================================================



static void Test_BFu31i_Sf_C()
{
  {
    init_simple_test("BFu31i_Sf_C");
    static STRUCT_IF_C BFu31i_Sf_C lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_C)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_C");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_C");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_C.v2");
    check_field_offset(lv, v3, 4, "BFu31i_Sf_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_C, BFu31i_Sf_C)
//============================================================================



static void Test_BFu31i_Sf_D()
{
  {
    init_simple_test("BFu31i_Sf_D");
    static STRUCT_IF_C BFu31i_Sf_D lv;
    check2(sizeof(lv), 12, "sizeof(BFu31i_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_D)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_D");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_D");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_D.v2");
    check_field_offset(lv, v3, 4, "BFu31i_Sf_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_D, BFu31i_Sf_D)
//============================================================================



static void Test_BFu31i_Sf_F()
{
  {
    init_simple_test("BFu31i_Sf_F");
    static STRUCT_IF_C BFu31i_Sf_F lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_F)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_F");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_F");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_F.v2");
    check_field_offset(lv, v3, 4, "BFu31i_Sf_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_F, BFu31i_Sf_F)
//============================================================================



static void Test_BFu31i_Sf_I()
{
  {
    init_simple_test("BFu31i_Sf_I");
    static STRUCT_IF_C BFu31i_Sf_I lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_I)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_I");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_I");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_I.v2");
    check_field_offset(lv, v3, 4, "BFu31i_Sf_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_I, BFu31i_Sf_I)
//============================================================================



static void Test_BFu31i_Sf_Ip()
{
  {
    init_simple_test("BFu31i_Sf_Ip");
    static STRUCT_IF_C BFu31i_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31i_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_Ip");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_Ip");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_Ip.v2");
    check_field_offset(lv, v3, 4, "BFu31i_Sf_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_Ip, BFu31i_Sf_Ip)
//============================================================================



static void Test_BFu31i_Sf_L()
{
  {
    init_simple_test("BFu31i_Sf_L");
    static STRUCT_IF_C BFu31i_Sf_L lv;
    check2(sizeof(lv), 12, "sizeof(BFu31i_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_L)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_L");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_L");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_L.v2");
    check_field_offset(lv, v3, 4, "BFu31i_Sf_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_L, BFu31i_Sf_L)
//============================================================================



static void Test_BFu31i_Sf_S()
{
  {
    init_simple_test("BFu31i_Sf_S");
    static STRUCT_IF_C BFu31i_Sf_S lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_S)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_S");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_S");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_S.v2");
    check_field_offset(lv, v3, 4, "BFu31i_Sf_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_S, BFu31i_Sf_S)
//============================================================================



static void Test_BFu31i_Sf_Sf()
{
  {
    init_simple_test("BFu31i_Sf_Sf");
    static STRUCT_IF_C BFu31i_Sf_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu31i_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_Sf");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_Sf.v2");
    check_field_offset(lv, v3, 4, "BFu31i_Sf_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_Sf, BFu31i_Sf_Sf)
//============================================================================



static void Test_BFu31i_Sf_Uc()
{
  {
    init_simple_test("BFu31i_Sf_Uc");
    static STRUCT_IF_C BFu31i_Sf_Uc lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_Uc");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_Uc");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_Uc.v2");
    check_field_offset(lv, v3, 4, "BFu31i_Sf_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_Uc, BFu31i_Sf_Uc)
//============================================================================



static void Test_BFu31i_Sf_Ui()
{
  {
    init_simple_test("BFu31i_Sf_Ui");
    static STRUCT_IF_C BFu31i_Sf_Ui lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_Ui");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_Ui");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_Ui.v2");
    check_field_offset(lv, v3, 4, "BFu31i_Sf_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_Ui, BFu31i_Sf_Ui)
//============================================================================



static void Test_BFu31i_Sf_Ul()
{
  {
    init_simple_test("BFu31i_Sf_Ul");
    static STRUCT_IF_C BFu31i_Sf_Ul lv;
    check2(sizeof(lv), 12, "sizeof(BFu31i_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_Ul");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_Ul");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_Ul.v2");
    check_field_offset(lv, v3, 4, "BFu31i_Sf_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_Ul, BFu31i_Sf_Ul)
//============================================================================



static void Test_BFu31i_Sf_Us()
{
  {
    init_simple_test("BFu31i_Sf_Us");
    static STRUCT_IF_C BFu31i_Sf_Us lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_Us)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_Us");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_Us");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_Us.v2");
    check_field_offset(lv, v3, 4, "BFu31i_Sf_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_Us, BFu31i_Sf_Us)
//============================================================================



static void Test_BFu31i_Sf_Vp()
{
  {
    init_simple_test("BFu31i_Sf_Vp");
    static STRUCT_IF_C BFu31i_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31i_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Sf_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Sf_Vp");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Sf_Vp");
    check_field_offset(lv, v2, 4, "BFu31i_Sf_Vp.v2");
    check_field_offset(lv, v3, 4, "BFu31i_Sf_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Sf_Vp, BFu31i_Sf_Vp)
//============================================================================



static void Test_BFu31i_Uc_Sf()
{
  {
    init_simple_test("BFu31i_Uc_Sf");
    static STRUCT_IF_C BFu31i_Uc_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Uc_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Uc_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Uc_Sf");
    check_field_offset(lv, v2, 4, "BFu31i_Uc_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu31i_Uc_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Uc_Sf, BFu31i_Uc_Sf)
//============================================================================



static void Test_BFu31i_Ui_Sf()
{
  {
    init_simple_test("BFu31i_Ui_Sf");
    static STRUCT_IF_C BFu31i_Ui_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Ui_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Ui_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Ui_Sf");
    check_field_offset(lv, v2, 4, "BFu31i_Ui_Sf.v2");
    check_field_offset(lv, v3, 8, "BFu31i_Ui_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Ui_Sf, BFu31i_Ui_Sf)
//============================================================================



static void Test_BFu31i_Ul_Sf()
{
  {
    init_simple_test("BFu31i_Ul_Sf");
    static STRUCT_IF_C BFu31i_Ul_Sf lv;
    check2(sizeof(lv), 12, "sizeof(BFu31i_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Ul_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Ul_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Ul_Sf");
    check_field_offset(lv, v2, 4, "BFu31i_Ul_Sf.v2");
    check_field_offset(lv, v3, 12, "BFu31i_Ul_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Ul_Sf, BFu31i_Ul_Sf)
//============================================================================



static void Test_BFu31i_Us_Sf()
{
  {
    init_simple_test("BFu31i_Us_Sf");
    static STRUCT_IF_C BFu31i_Us_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Us_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Us_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Us_Sf");
    check_field_offset(lv, v2, 4, "BFu31i_Us_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu31i_Us_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Us_Sf, BFu31i_Us_Sf)
//============================================================================



static void Test_BFu31i_Vp_Sf()
{
  {
    init_simple_test("BFu31i_Vp_Sf");
    static STRUCT_IF_C BFu31i_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31i_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Vp_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Vp_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Vp_Sf");
    check_field_offset(lv, v2, 4, "BFu31i_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "BFu31i_Vp_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31i_Vp_Sf, BFu31i_Vp_Sf)
//============================================================================



static void Test_BFu31ll_BFu15i_Sf()
{
  {
    init_simple_test("BFu31ll_BFu15i_Sf");
    static STRUCT_IF_C BFu31ll_BFu15i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu15i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu15i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu15i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "BFu31ll_BFu15i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "BFu31ll_BFu15i_Sf");
    check_field_offset(lv, v3, 6, "BFu31ll_BFu15i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_BFu15i_Sf, BFu31ll_BFu15i_Sf)
//============================================================================



static void Test_BFu31ll_BFu15ll_Sf()
{
  {
    init_simple_test("BFu31ll_BFu15ll_Sf");
    static STRUCT_IF_C BFu31ll_BFu15ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu15ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu15ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "BFu31ll_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "BFu31ll_BFu15ll_Sf");
    check_field_offset(lv, v3, 6, "BFu31ll_BFu15ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_BFu15ll_Sf, BFu31ll_BFu15ll_Sf)
//============================================================================



static void Test_BFu31ll_BFu15s_Sf()
{
  {
    init_simple_test("BFu31ll_BFu15s_Sf");
    static STRUCT_IF_C BFu31ll_BFu15s_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu15s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu15s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu15s_Sf");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "BFu31ll_BFu15s_Sf");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "BFu31ll_BFu15s_Sf");
    check_field_offset(lv, v3, 6, "BFu31ll_BFu15s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_BFu15s_Sf, BFu31ll_BFu15s_Sf)
//============================================================================



static void Test_BFu31ll_BFu16i_Sf()
{
  {
    init_simple_test("BFu31ll_BFu16i_Sf");
    static STRUCT_IF_C BFu31ll_BFu16i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu16i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu16i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu16i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "BFu31ll_BFu16i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "BFu31ll_BFu16i_Sf");
    check_field_offset(lv, v3, 6, "BFu31ll_BFu16i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_BFu16i_Sf, BFu31ll_BFu16i_Sf)
//============================================================================



static void Test_BFu31ll_BFu16ll_Sf()
{
  {
    init_simple_test("BFu31ll_BFu16ll_Sf");
    static STRUCT_IF_C BFu31ll_BFu16ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu16ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu16ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "BFu31ll_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "BFu31ll_BFu16ll_Sf");
    check_field_offset(lv, v3, 6, "BFu31ll_BFu16ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_BFu16ll_Sf, BFu31ll_BFu16ll_Sf)
//============================================================================



static void Test_BFu31ll_BFu16s_Sf()
{
  {
    init_simple_test("BFu31ll_BFu16s_Sf");
    static STRUCT_IF_C BFu31ll_BFu16s_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu16s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu16s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu16s_Sf");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "BFu31ll_BFu16s_Sf");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "BFu31ll_BFu16s_Sf");
    check_field_offset(lv, v3, 6, "BFu31ll_BFu16s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_BFu16s_Sf, BFu31ll_BFu16s_Sf)
//============================================================================



static void Test_BFu31ll_BFu17i_Sf()
{
  {
    init_simple_test("BFu31ll_BFu17i_Sf");
    static STRUCT_IF_C BFu31ll_BFu17i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu17i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu17i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu17i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "BFu31ll_BFu17i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "BFu31ll_BFu17i_Sf");
    check_field_offset(lv, v3, 6, "BFu31ll_BFu17i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_BFu17i_Sf, BFu31ll_BFu17i_Sf)
//============================================================================



static void Test_BFu31ll_BFu17ll_Sf()
{
  {
    init_simple_test("BFu31ll_BFu17ll_Sf");
    static STRUCT_IF_C BFu31ll_BFu17ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu17ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu17ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "BFu31ll_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "BFu31ll_BFu17ll_Sf");
    check_field_offset(lv, v3, 6, "BFu31ll_BFu17ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_BFu17ll_Sf, BFu31ll_BFu17ll_Sf)
//============================================================================



static void Test_BFu31ll_BFu1c_Sf()
{
  {
    init_simple_test("BFu31ll_BFu1c_Sf");
    static STRUCT_IF_C BFu31ll_BFu1c_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu31ll_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu1c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu1c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu1c_Sf");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31ll_BFu1c_Sf");
    check_field_offset(lv, v3, 4, "BFu31ll_BFu1c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_BFu1c_Sf, BFu31ll_BFu1c_Sf)
//============================================================================



static void Test_BFu31ll_BFu1i_Sf()
{
  {
    init_simple_test("BFu31ll_BFu1i_Sf");
    static STRUCT_IF_C BFu31ll_BFu1i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu31ll_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu1i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu1i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu1i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31ll_BFu1i_Sf");
    check_field_offset(lv, v3, 4, "BFu31ll_BFu1i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_BFu1i_Sf, BFu31ll_BFu1i_Sf)
//============================================================================



static void Test_BFu31ll_BFu1ll_Sf()
{
  {
    init_simple_test("BFu31ll_BFu1ll_Sf");
    static STRUCT_IF_C BFu31ll_BFu1ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu31ll_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu1ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu1ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu1ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31ll_BFu1ll_Sf");
    check_field_offset(lv, v3, 4, "BFu31ll_BFu1ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_BFu1ll_Sf, BFu31ll_BFu1ll_Sf)
//============================================================================



static void Test_BFu31ll_BFu1s_Sf()
{
  {
    init_simple_test("BFu31ll_BFu1s_Sf");
    static STRUCT_IF_C BFu31ll_BFu1s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu31ll_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu1s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu1s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu1s_Sf");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31ll_BFu1s_Sf");
    check_field_offset(lv, v3, 4, "BFu31ll_BFu1s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_BFu1s_Sf, BFu31ll_BFu1s_Sf)
//============================================================================



static void Test_BFu31ll_BFu31i_Sf()
{
  {
    init_simple_test("BFu31ll_BFu31i_Sf");
    static STRUCT_IF_C BFu31ll_BFu31i_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu31i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu31i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu31i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "BFu31ll_BFu31i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "BFu31ll_BFu31i_Sf");
    check_field_offset(lv, v3, 8, "BFu31ll_BFu31i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_BFu31i_Sf, BFu31ll_BFu31i_Sf)
//============================================================================



static void Test_BFu31ll_BFu31ll_Sf()
{
  {
    init_simple_test("BFu31ll_BFu31ll_Sf");
    static STRUCT_IF_C BFu31ll_BFu31ll_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu31ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu31ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "BFu31ll_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "BFu31ll_BFu31ll_Sf");
    check_field_offset(lv, v3, 8, "BFu31ll_BFu31ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_BFu31ll_Sf, BFu31ll_BFu31ll_Sf)
//============================================================================



static void Test_BFu31ll_BFu32i_Sf()
{
  {
    init_simple_test("BFu31ll_BFu32i_Sf");
    static STRUCT_IF_C BFu31ll_BFu32i_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu32i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu32i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu32i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "BFu31ll_BFu32i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "BFu31ll_BFu32i_Sf");
    check_field_offset(lv, v3, 8, "BFu31ll_BFu32i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_BFu32i_Sf, BFu31ll_BFu32i_Sf)
//============================================================================



static void Test_BFu31ll_BFu32ll_Sf()
{
  {
    init_simple_test("BFu31ll_BFu32ll_Sf");
    static STRUCT_IF_C BFu31ll_BFu32ll_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu32ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu32ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "BFu31ll_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "BFu31ll_BFu32ll_Sf");
    check_field_offset(lv, v3, 8, "BFu31ll_BFu32ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_BFu32ll_Sf, BFu31ll_BFu32ll_Sf)
//============================================================================



static void Test_BFu31ll_BFu33_Sf()
{
  {
    init_simple_test("BFu31ll_BFu33_Sf");
    static STRUCT_IF_C BFu31ll_BFu33_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu33_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu33_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu33_Sf");
    set_bf_and_test(lv, v2, 3, 7, 33, 1, "BFu31ll_BFu33_Sf");
    set_bf_and_test(lv, v2, 3, 7, 33, hide_ull(1LL<<32), "BFu31ll_BFu33_Sf");
    check_field_offset(lv, v3, 8, "BFu31ll_BFu33_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_BFu33_Sf, BFu31ll_BFu33_Sf)
//============================================================================



static void Test_BFu31ll_BFu7c_Sf()
{
  {
    init_simple_test("BFu31ll_BFu7c_Sf");
    static STRUCT_IF_C BFu31ll_BFu7c_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu7c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu7c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu7c_Sf");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31ll_BFu7c_Sf");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31ll_BFu7c_Sf");
    check_field_offset(lv, v3, 5, "BFu31ll_BFu7c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_BFu7c_Sf, BFu31ll_BFu7c_Sf)
//============================================================================



static void Test_BFu31ll_BFu7i_Sf()
{
  {
    init_simple_test("BFu31ll_BFu7i_Sf");
    static STRUCT_IF_C BFu31ll_BFu7i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu7i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu7i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu7i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31ll_BFu7i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31ll_BFu7i_Sf");
    check_field_offset(lv, v3, 5, "BFu31ll_BFu7i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_BFu7i_Sf, BFu31ll_BFu7i_Sf)
//============================================================================



static void Test_BFu31ll_BFu7ll_Sf()
{
  {
    init_simple_test("BFu31ll_BFu7ll_Sf");
    static STRUCT_IF_C BFu31ll_BFu7ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu7ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu7ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31ll_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31ll_BFu7ll_Sf");
    check_field_offset(lv, v3, 5, "BFu31ll_BFu7ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_BFu7ll_Sf, BFu31ll_BFu7ll_Sf)
//============================================================================



static void Test_BFu31ll_BFu7s_Sf()
{
  {
    init_simple_test("BFu31ll_BFu7s_Sf");
    static STRUCT_IF_C BFu31ll_BFu7s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu7s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu7s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu7s_Sf");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31ll_BFu7s_Sf");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31ll_BFu7s_Sf");
    check_field_offset(lv, v3, 5, "BFu31ll_BFu7s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_BFu7s_Sf, BFu31ll_BFu7s_Sf)
//============================================================================



static void Test_BFu31ll_BFu8c_Sf()
{
  {
    init_simple_test("BFu31ll_BFu8c_Sf");
    static STRUCT_IF_C BFu31ll_BFu8c_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu8c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu8c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu8c_Sf");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31ll_BFu8c_Sf");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31ll_BFu8c_Sf");
    check_field_offset(lv, v3, 5, "BFu31ll_BFu8c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_BFu8c_Sf, BFu31ll_BFu8c_Sf)
//============================================================================



static void Test_BFu31ll_BFu8i_Sf()
{
  {
    init_simple_test("BFu31ll_BFu8i_Sf");
    static STRUCT_IF_C BFu31ll_BFu8i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu8i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu8i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu8i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31ll_BFu8i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31ll_BFu8i_Sf");
    check_field_offset(lv, v3, 5, "BFu31ll_BFu8i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_BFu8i_Sf, BFu31ll_BFu8i_Sf)
//============================================================================



static void Test_BFu31ll_BFu8ll_Sf()
{
  {
    init_simple_test("BFu31ll_BFu8ll_Sf");
    static STRUCT_IF_C BFu31ll_BFu8ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu8ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu8ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31ll_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31ll_BFu8ll_Sf");
    check_field_offset(lv, v3, 5, "BFu31ll_BFu8ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_BFu8ll_Sf, BFu31ll_BFu8ll_Sf)
//============================================================================



static void Test_BFu31ll_BFu8s_Sf()
{
  {
    init_simple_test("BFu31ll_BFu8s_Sf");
    static STRUCT_IF_C BFu31ll_BFu8s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu8s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu8s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu8s_Sf");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31ll_BFu8s_Sf");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31ll_BFu8s_Sf");
    check_field_offset(lv, v3, 5, "BFu31ll_BFu8s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_BFu8s_Sf, BFu31ll_BFu8s_Sf)
//============================================================================



static void Test_BFu31ll_BFu9i_Sf()
{
  {
    init_simple_test("BFu31ll_BFu9i_Sf");
    static STRUCT_IF_C BFu31ll_BFu9i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu9i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu9i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu9i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "BFu31ll_BFu9i_Sf");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "BFu31ll_BFu9i_Sf");
    check_field_offset(lv, v3, 5, "BFu31ll_BFu9i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_BFu9i_Sf, BFu31ll_BFu9i_Sf)
//============================================================================



static void Test_BFu31ll_BFu9ll_Sf()
{
  {
    init_simple_test("BFu31ll_BFu9ll_Sf");
    static STRUCT_IF_C BFu31ll_BFu9ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu9ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu9ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "BFu31ll_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "BFu31ll_BFu9ll_Sf");
    check_field_offset(lv, v3, 5, "BFu31ll_BFu9ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_BFu9ll_Sf, BFu31ll_BFu9ll_Sf)
//============================================================================



static void Test_BFu31ll_BFu9s_Sf()
{
  {
    init_simple_test("BFu31ll_BFu9s_Sf");
    static STRUCT_IF_C BFu31ll_BFu9s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu9s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu9s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu9s_Sf");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "BFu31ll_BFu9s_Sf");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "BFu31ll_BFu9s_Sf");
    check_field_offset(lv, v3, 5, "BFu31ll_BFu9s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_BFu9s_Sf, BFu31ll_BFu9s_Sf)
//============================================================================



static void Test_BFu31ll_C_Sf()
{
  {
    init_simple_test("BFu31ll_C_Sf");
    static STRUCT_IF_C BFu31ll_C_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_C_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_C_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_C_Sf");
    check_field_offset(lv, v2, 4, "BFu31ll_C_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu31ll_C_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_C_Sf, BFu31ll_C_Sf)
//============================================================================



static void Test_BFu31ll_D_Sf()
{
  {
    init_simple_test("BFu31ll_D_Sf");
    static STRUCT_IF_C BFu31ll_D_Sf lv;
    check2(sizeof(lv), 12, "sizeof(BFu31ll_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_D_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_D_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_D_Sf");
    check_field_offset(lv, v2, 4, "BFu31ll_D_Sf.v2");
    check_field_offset(lv, v3, 12, "BFu31ll_D_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_D_Sf, BFu31ll_D_Sf)
//============================================================================



static void Test_BFu31ll_F_Sf()
{
  {
    init_simple_test("BFu31ll_F_Sf");
    static STRUCT_IF_C BFu31ll_F_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_F_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_F_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_F_Sf");
    check_field_offset(lv, v2, 4, "BFu31ll_F_Sf.v2");
    check_field_offset(lv, v3, 8, "BFu31ll_F_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_F_Sf, BFu31ll_F_Sf)
//============================================================================



static void Test_BFu31ll_I_Sf()
{
  {
    init_simple_test("BFu31ll_I_Sf");
    static STRUCT_IF_C BFu31ll_I_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_I_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_I_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_I_Sf");
    check_field_offset(lv, v2, 4, "BFu31ll_I_Sf.v2");
    check_field_offset(lv, v3, 8, "BFu31ll_I_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_I_Sf, BFu31ll_I_Sf)
//============================================================================



static void Test_BFu31ll_Ip_Sf()
{
  {
    init_simple_test("BFu31ll_Ip_Sf");
    static STRUCT_IF_C BFu31ll_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31ll_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Ip_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Ip_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Ip_Sf");
    check_field_offset(lv, v2, 4, "BFu31ll_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "BFu31ll_Ip_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Ip_Sf, BFu31ll_Ip_Sf)
//============================================================================



static void Test_BFu31ll_L_Sf()
{
  {
    init_simple_test("BFu31ll_L_Sf");
    static STRUCT_IF_C BFu31ll_L_Sf lv;
    check2(sizeof(lv), 12, "sizeof(BFu31ll_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_L_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_L_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_L_Sf");
    check_field_offset(lv, v2, 4, "BFu31ll_L_Sf.v2");
    check_field_offset(lv, v3, 12, "BFu31ll_L_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_L_Sf, BFu31ll_L_Sf)
//============================================================================



static void Test_BFu31ll_S_Sf()
{
  {
    init_simple_test("BFu31ll_S_Sf");
    static STRUCT_IF_C BFu31ll_S_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_S_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_S_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_S_Sf");
    check_field_offset(lv, v2, 4, "BFu31ll_S_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu31ll_S_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_S_Sf, BFu31ll_S_Sf)
//============================================================================



static void Test_BFu31ll_Sf()
{
  {
    init_simple_test("BFu31ll_Sf");
    static STRUCT_IF_C BFu31ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf, BFu31ll_Sf)
//============================================================================



static void Test_BFu31ll_Sf_BFu15i()
{
  {
    init_simple_test("BFu31ll_Sf_BFu15i");
    static STRUCT_IF_C BFu31ll_Sf_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_BFu15i");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "BFu31ll_Sf_BFu15i");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "BFu31ll_Sf_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_BFu15i, BFu31ll_Sf_BFu15i)
//============================================================================



static void Test_BFu31ll_Sf_BFu15ll()
{
  {
    init_simple_test("BFu31ll_Sf_BFu15ll");
    static STRUCT_IF_C BFu31ll_Sf_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_BFu15ll");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "BFu31ll_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "BFu31ll_Sf_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_BFu15ll, BFu31ll_Sf_BFu15ll)
//============================================================================



static void Test_BFu31ll_Sf_BFu15s()
{
  {
    init_simple_test("BFu31ll_Sf_BFu15s");
    static STRUCT_IF_C BFu31ll_Sf_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_BFu15s");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "BFu31ll_Sf_BFu15s");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "BFu31ll_Sf_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_BFu15s, BFu31ll_Sf_BFu15s)
//============================================================================



static void Test_BFu31ll_Sf_BFu16i()
{
  {
    init_simple_test("BFu31ll_Sf_BFu16i");
    static STRUCT_IF_C BFu31ll_Sf_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_BFu16i");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "BFu31ll_Sf_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "BFu31ll_Sf_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_BFu16i, BFu31ll_Sf_BFu16i)
//============================================================================



static void Test_BFu31ll_Sf_BFu16ll()
{
  {
    init_simple_test("BFu31ll_Sf_BFu16ll");
    static STRUCT_IF_C BFu31ll_Sf_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_BFu16ll");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "BFu31ll_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "BFu31ll_Sf_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_BFu16ll, BFu31ll_Sf_BFu16ll)
//============================================================================



static void Test_BFu31ll_Sf_BFu16s()
{
  {
    init_simple_test("BFu31ll_Sf_BFu16s");
    static STRUCT_IF_C BFu31ll_Sf_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_BFu16s");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "BFu31ll_Sf_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "BFu31ll_Sf_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_BFu16s, BFu31ll_Sf_BFu16s)
//============================================================================



static void Test_BFu31ll_Sf_BFu17i()
{
  {
    init_simple_test("BFu31ll_Sf_BFu17i");
    static STRUCT_IF_C BFu31ll_Sf_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(BFu31ll_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_BFu17i");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 4, 0, 17, 1, "BFu31ll_Sf_BFu17i");
    set_bf_and_test(lv, v3, 4, 0, 17, hide_ull(1LL<<16), "BFu31ll_Sf_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_BFu17i, BFu31ll_Sf_BFu17i)
//============================================================================



static void Test_BFu31ll_Sf_BFu17ll()
{
  {
    init_simple_test("BFu31ll_Sf_BFu17ll");
    static STRUCT_IF_C BFu31ll_Sf_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(BFu31ll_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_BFu17ll");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 17, 1, "BFu31ll_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 4, 0, 17, hide_ull(1LL<<16), "BFu31ll_Sf_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_BFu17ll, BFu31ll_Sf_BFu17ll)
//============================================================================



static void Test_BFu31ll_Sf_BFu1c()
{
  {
    init_simple_test("BFu31ll_Sf_BFu1c");
    static STRUCT_IF_C BFu31ll_Sf_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_BFu1c");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "BFu31ll_Sf_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_BFu1c, BFu31ll_Sf_BFu1c)
//============================================================================



static void Test_BFu31ll_Sf_BFu1i()
{
  {
    init_simple_test("BFu31ll_Sf_BFu1i");
    static STRUCT_IF_C BFu31ll_Sf_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_BFu1i");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "BFu31ll_Sf_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_BFu1i, BFu31ll_Sf_BFu1i)
//============================================================================



static void Test_BFu31ll_Sf_BFu1ll()
{
  {
    init_simple_test("BFu31ll_Sf_BFu1ll");
    static STRUCT_IF_C BFu31ll_Sf_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_BFu1ll");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "BFu31ll_Sf_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_BFu1ll, BFu31ll_Sf_BFu1ll)
//============================================================================



static void Test_BFu31ll_Sf_BFu1s()
{
  {
    init_simple_test("BFu31ll_Sf_BFu1s");
    static STRUCT_IF_C BFu31ll_Sf_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_BFu1s");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "BFu31ll_Sf_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_BFu1s, BFu31ll_Sf_BFu1s)
//============================================================================



static void Test_BFu31ll_Sf_BFu31i()
{
  {
    init_simple_test("BFu31ll_Sf_BFu31i");
    static STRUCT_IF_C BFu31ll_Sf_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_BFu31i");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 4, 0, 31, 1, "BFu31ll_Sf_BFu31i");
    set_bf_and_test(lv, v3, 4, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_BFu31i, BFu31ll_Sf_BFu31i)
//============================================================================



static void Test_BFu31ll_Sf_BFu31ll()
{
  {
    init_simple_test("BFu31ll_Sf_BFu31ll");
    static STRUCT_IF_C BFu31ll_Sf_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_BFu31ll");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 31, 1, "BFu31ll_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 4, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_BFu31ll, BFu31ll_Sf_BFu31ll)
//============================================================================



static void Test_BFu31ll_Sf_BFu32i()
{
  {
    init_simple_test("BFu31ll_Sf_BFu32i");
    static STRUCT_IF_C BFu31ll_Sf_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_BFu32i");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 4, 0, 32, 1, "BFu31ll_Sf_BFu32i");
    set_bf_and_test(lv, v3, 4, 0, 32, hide_ull(1LL<<31), "BFu31ll_Sf_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_BFu32i, BFu31ll_Sf_BFu32i)
//============================================================================



static void Test_BFu31ll_Sf_BFu32ll()
{
  {
    init_simple_test("BFu31ll_Sf_BFu32ll");
    static STRUCT_IF_C BFu31ll_Sf_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_BFu32ll");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 32, 1, "BFu31ll_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 4, 0, 32, hide_ull(1LL<<31), "BFu31ll_Sf_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_BFu32ll, BFu31ll_Sf_BFu32ll)
//============================================================================



static void Test_BFu31ll_Sf_BFu33()
{
  {
    init_simple_test("BFu31ll_Sf_BFu33");
    static STRUCT_IF_C BFu31ll_Sf_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(BFu31ll_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_BFu33");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 4, 0, 33, 1, "BFu31ll_Sf_BFu33");
    set_bf_and_test(lv, v3, 4, 0, 33, hide_ull(1LL<<32), "BFu31ll_Sf_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_BFu33, BFu31ll_Sf_BFu33)
//============================================================================



static void Test_BFu31ll_Sf_BFu7c()
{
  {
    init_simple_test("BFu31ll_Sf_BFu7c");
    static STRUCT_IF_C BFu31ll_Sf_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_BFu7c");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "BFu31ll_Sf_BFu7c");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "BFu31ll_Sf_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_BFu7c, BFu31ll_Sf_BFu7c)
//============================================================================



static void Test_BFu31ll_Sf_BFu7i()
{
  {
    init_simple_test("BFu31ll_Sf_BFu7i");
    static STRUCT_IF_C BFu31ll_Sf_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_BFu7i");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "BFu31ll_Sf_BFu7i");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "BFu31ll_Sf_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_BFu7i, BFu31ll_Sf_BFu7i)
//============================================================================



static void Test_BFu31ll_Sf_BFu7ll()
{
  {
    init_simple_test("BFu31ll_Sf_BFu7ll");
    static STRUCT_IF_C BFu31ll_Sf_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_BFu7ll");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "BFu31ll_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "BFu31ll_Sf_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_BFu7ll, BFu31ll_Sf_BFu7ll)
//============================================================================



static void Test_BFu31ll_Sf_BFu7s()
{
  {
    init_simple_test("BFu31ll_Sf_BFu7s");
    static STRUCT_IF_C BFu31ll_Sf_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_BFu7s");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "BFu31ll_Sf_BFu7s");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "BFu31ll_Sf_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_BFu7s, BFu31ll_Sf_BFu7s)
//============================================================================



static void Test_BFu31ll_Sf_BFu8c()
{
  {
    init_simple_test("BFu31ll_Sf_BFu8c");
    static STRUCT_IF_C BFu31ll_Sf_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_BFu8c");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "BFu31ll_Sf_BFu8c");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "BFu31ll_Sf_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_BFu8c, BFu31ll_Sf_BFu8c)
//============================================================================



static void Test_BFu31ll_Sf_BFu8i()
{
  {
    init_simple_test("BFu31ll_Sf_BFu8i");
    static STRUCT_IF_C BFu31ll_Sf_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_BFu8i");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "BFu31ll_Sf_BFu8i");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "BFu31ll_Sf_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_BFu8i, BFu31ll_Sf_BFu8i)
//============================================================================



static void Test_BFu31ll_Sf_BFu8ll()
{
  {
    init_simple_test("BFu31ll_Sf_BFu8ll");
    static STRUCT_IF_C BFu31ll_Sf_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_BFu8ll");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "BFu31ll_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "BFu31ll_Sf_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_BFu8ll, BFu31ll_Sf_BFu8ll)
//============================================================================



static void Test_BFu31ll_Sf_BFu8s()
{
  {
    init_simple_test("BFu31ll_Sf_BFu8s");
    static STRUCT_IF_C BFu31ll_Sf_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_BFu8s");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "BFu31ll_Sf_BFu8s");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "BFu31ll_Sf_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_BFu8s, BFu31ll_Sf_BFu8s)
//============================================================================



static void Test_BFu31ll_Sf_BFu9i()
{
  {
    init_simple_test("BFu31ll_Sf_BFu9i");
    static STRUCT_IF_C BFu31ll_Sf_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_BFu9i");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "BFu31ll_Sf_BFu9i");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "BFu31ll_Sf_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_BFu9i, BFu31ll_Sf_BFu9i)
//============================================================================



static void Test_BFu31ll_Sf_BFu9ll()
{
  {
    init_simple_test("BFu31ll_Sf_BFu9ll");
    static STRUCT_IF_C BFu31ll_Sf_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_BFu9ll");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "BFu31ll_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "BFu31ll_Sf_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_BFu9ll, BFu31ll_Sf_BFu9ll)
//============================================================================



static void Test_BFu31ll_Sf_BFu9s()
{
  {
    init_simple_test("BFu31ll_Sf_BFu9s");
    static STRUCT_IF_C BFu31ll_Sf_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_BFu9s");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "BFu31ll_Sf_BFu9s");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "BFu31ll_Sf_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_BFu9s, BFu31ll_Sf_BFu9s)
//============================================================================



static void Test_BFu31ll_Sf_C()
{
  {
    init_simple_test("BFu31ll_Sf_C");
    static STRUCT_IF_C BFu31ll_Sf_C lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_C)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_C");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_C");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_C.v2");
    check_field_offset(lv, v3, 4, "BFu31ll_Sf_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_C, BFu31ll_Sf_C)
//============================================================================



static void Test_BFu31ll_Sf_D()
{
  {
    init_simple_test("BFu31ll_Sf_D");
    static STRUCT_IF_C BFu31ll_Sf_D lv;
    check2(sizeof(lv), 12, "sizeof(BFu31ll_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_D)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_D");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_D");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_D.v2");
    check_field_offset(lv, v3, 4, "BFu31ll_Sf_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_D, BFu31ll_Sf_D)
//============================================================================



static void Test_BFu31ll_Sf_F()
{
  {
    init_simple_test("BFu31ll_Sf_F");
    static STRUCT_IF_C BFu31ll_Sf_F lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_F)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_F");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_F");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_F.v2");
    check_field_offset(lv, v3, 4, "BFu31ll_Sf_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_F, BFu31ll_Sf_F)
//============================================================================



static void Test_BFu31ll_Sf_I()
{
  {
    init_simple_test("BFu31ll_Sf_I");
    static STRUCT_IF_C BFu31ll_Sf_I lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_I)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_I");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_I");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_I.v2");
    check_field_offset(lv, v3, 4, "BFu31ll_Sf_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_I, BFu31ll_Sf_I)
//============================================================================



static void Test_BFu31ll_Sf_Ip()
{
  {
    init_simple_test("BFu31ll_Sf_Ip");
    static STRUCT_IF_C BFu31ll_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31ll_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_Ip");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_Ip");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_Ip.v2");
    check_field_offset(lv, v3, 4, "BFu31ll_Sf_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_Ip, BFu31ll_Sf_Ip)
//============================================================================



static void Test_BFu31ll_Sf_L()
{
  {
    init_simple_test("BFu31ll_Sf_L");
    static STRUCT_IF_C BFu31ll_Sf_L lv;
    check2(sizeof(lv), 12, "sizeof(BFu31ll_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_L)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_L");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_L");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_L.v2");
    check_field_offset(lv, v3, 4, "BFu31ll_Sf_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_L, BFu31ll_Sf_L)
//============================================================================



static void Test_BFu31ll_Sf_S()
{
  {
    init_simple_test("BFu31ll_Sf_S");
    static STRUCT_IF_C BFu31ll_Sf_S lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_S)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_S");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_S");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_S.v2");
    check_field_offset(lv, v3, 4, "BFu31ll_Sf_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_S, BFu31ll_Sf_S)
//============================================================================



static void Test_BFu31ll_Sf_Sf()
{
  {
    init_simple_test("BFu31ll_Sf_Sf");
    static STRUCT_IF_C BFu31ll_Sf_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu31ll_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_Sf");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_Sf.v2");
    check_field_offset(lv, v3, 4, "BFu31ll_Sf_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_Sf, BFu31ll_Sf_Sf)
//============================================================================



static void Test_BFu31ll_Sf_Uc()
{
  {
    init_simple_test("BFu31ll_Sf_Uc");
    static STRUCT_IF_C BFu31ll_Sf_Uc lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_Uc");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_Uc");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_Uc.v2");
    check_field_offset(lv, v3, 4, "BFu31ll_Sf_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_Uc, BFu31ll_Sf_Uc)
//============================================================================



static void Test_BFu31ll_Sf_Ui()
{
  {
    init_simple_test("BFu31ll_Sf_Ui");
    static STRUCT_IF_C BFu31ll_Sf_Ui lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_Ui");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_Ui");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_Ui.v2");
    check_field_offset(lv, v3, 4, "BFu31ll_Sf_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_Ui, BFu31ll_Sf_Ui)
//============================================================================



static void Test_BFu31ll_Sf_Ul()
{
  {
    init_simple_test("BFu31ll_Sf_Ul");
    static STRUCT_IF_C BFu31ll_Sf_Ul lv;
    check2(sizeof(lv), 12, "sizeof(BFu31ll_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_Ul");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_Ul");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_Ul.v2");
    check_field_offset(lv, v3, 4, "BFu31ll_Sf_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_Ul, BFu31ll_Sf_Ul)
//============================================================================



static void Test_BFu31ll_Sf_Us()
{
  {
    init_simple_test("BFu31ll_Sf_Us");
    static STRUCT_IF_C BFu31ll_Sf_Us lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_Us)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_Us");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_Us");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_Us.v2");
    check_field_offset(lv, v3, 4, "BFu31ll_Sf_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_Us, BFu31ll_Sf_Us)
//============================================================================



static void Test_BFu31ll_Sf_Vp()
{
  {
    init_simple_test("BFu31ll_Sf_Vp");
    static STRUCT_IF_C BFu31ll_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31ll_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Sf_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Sf_Vp");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Sf_Vp");
    check_field_offset(lv, v2, 4, "BFu31ll_Sf_Vp.v2");
    check_field_offset(lv, v3, 4, "BFu31ll_Sf_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Sf_Vp, BFu31ll_Sf_Vp)
//============================================================================



static void Test_BFu31ll_Uc_Sf()
{
  {
    init_simple_test("BFu31ll_Uc_Sf");
    static STRUCT_IF_C BFu31ll_Uc_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Uc_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Uc_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Uc_Sf");
    check_field_offset(lv, v2, 4, "BFu31ll_Uc_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu31ll_Uc_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Uc_Sf, BFu31ll_Uc_Sf)
//============================================================================



static void Test_BFu31ll_Ui_Sf()
{
  {
    init_simple_test("BFu31ll_Ui_Sf");
    static STRUCT_IF_C BFu31ll_Ui_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Ui_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Ui_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Ui_Sf");
    check_field_offset(lv, v2, 4, "BFu31ll_Ui_Sf.v2");
    check_field_offset(lv, v3, 8, "BFu31ll_Ui_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Ui_Sf, BFu31ll_Ui_Sf)
//============================================================================



static void Test_BFu31ll_Ul_Sf()
{
  {
    init_simple_test("BFu31ll_Ul_Sf");
    static STRUCT_IF_C BFu31ll_Ul_Sf lv;
    check2(sizeof(lv), 12, "sizeof(BFu31ll_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Ul_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Ul_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Ul_Sf");
    check_field_offset(lv, v2, 4, "BFu31ll_Ul_Sf.v2");
    check_field_offset(lv, v3, 12, "BFu31ll_Ul_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Ul_Sf, BFu31ll_Ul_Sf)
//============================================================================



static void Test_BFu31ll_Us_Sf()
{
  {
    init_simple_test("BFu31ll_Us_Sf");
    static STRUCT_IF_C BFu31ll_Us_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Us_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Us_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Us_Sf");
    check_field_offset(lv, v2, 4, "BFu31ll_Us_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu31ll_Us_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Us_Sf, BFu31ll_Us_Sf)
//============================================================================



static void Test_BFu31ll_Vp_Sf()
{
  {
    init_simple_test("BFu31ll_Vp_Sf");
    static STRUCT_IF_C BFu31ll_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31ll_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Vp_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Vp_Sf");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Vp_Sf");
    check_field_offset(lv, v2, 4, "BFu31ll_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "BFu31ll_Vp_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu31ll_Vp_Sf, BFu31ll_Vp_Sf)
//============================================================================



static void Test_BFu32i_BFu15i_Sf()
{
  {
    init_simple_test("BFu32i_BFu15i_Sf");
    static STRUCT_IF_C BFu32i_BFu15i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu15i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu15i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu15i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32i_BFu15i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32i_BFu15i_Sf");
    check_field_offset(lv, v3, 6, "BFu32i_BFu15i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_BFu15i_Sf, BFu32i_BFu15i_Sf)
//============================================================================



static void Test_BFu32i_BFu15ll_Sf()
{
  {
    init_simple_test("BFu32i_BFu15ll_Sf");
    static STRUCT_IF_C BFu32i_BFu15ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu15ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu15ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32i_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32i_BFu15ll_Sf");
    check_field_offset(lv, v3, 6, "BFu32i_BFu15ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_BFu15ll_Sf, BFu32i_BFu15ll_Sf)
//============================================================================



static void Test_BFu32i_BFu15s_Sf()
{
  {
    init_simple_test("BFu32i_BFu15s_Sf");
    static STRUCT_IF_C BFu32i_BFu15s_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu15s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu15s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu15s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32i_BFu15s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32i_BFu15s_Sf");
    check_field_offset(lv, v3, 6, "BFu32i_BFu15s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_BFu15s_Sf, BFu32i_BFu15s_Sf)
//============================================================================



static void Test_BFu32i_BFu16i_Sf()
{
  {
    init_simple_test("BFu32i_BFu16i_Sf");
    static STRUCT_IF_C BFu32i_BFu16i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu16i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu16i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu16i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32i_BFu16i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32i_BFu16i_Sf");
    check_field_offset(lv, v3, 6, "BFu32i_BFu16i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_BFu16i_Sf, BFu32i_BFu16i_Sf)
//============================================================================



static void Test_BFu32i_BFu16ll_Sf()
{
  {
    init_simple_test("BFu32i_BFu16ll_Sf");
    static STRUCT_IF_C BFu32i_BFu16ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu16ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu16ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32i_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32i_BFu16ll_Sf");
    check_field_offset(lv, v3, 6, "BFu32i_BFu16ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_BFu16ll_Sf, BFu32i_BFu16ll_Sf)
//============================================================================



static void Test_BFu32i_BFu16s_Sf()
{
  {
    init_simple_test("BFu32i_BFu16s_Sf");
    static STRUCT_IF_C BFu32i_BFu16s_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu16s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu16s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu16s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32i_BFu16s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32i_BFu16s_Sf");
    check_field_offset(lv, v3, 6, "BFu32i_BFu16s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_BFu16s_Sf, BFu32i_BFu16s_Sf)
//============================================================================



static void Test_BFu32i_BFu17i_Sf()
{
  {
    init_simple_test("BFu32i_BFu17i_Sf");
    static STRUCT_IF_C BFu32i_BFu17i_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu32i_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu17i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu17i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu17i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32i_BFu17i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32i_BFu17i_Sf");
    check_field_offset(lv, v3, 7, "BFu32i_BFu17i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_BFu17i_Sf, BFu32i_BFu17i_Sf)
//============================================================================



static void Test_BFu32i_BFu17ll_Sf()
{
  {
    init_simple_test("BFu32i_BFu17ll_Sf");
    static STRUCT_IF_C BFu32i_BFu17ll_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu32i_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu17ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu17ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32i_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32i_BFu17ll_Sf");
    check_field_offset(lv, v3, 7, "BFu32i_BFu17ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_BFu17ll_Sf, BFu32i_BFu17ll_Sf)
//============================================================================



static void Test_BFu32i_BFu1c_Sf()
{
  {
    init_simple_test("BFu32i_BFu1c_Sf");
    static STRUCT_IF_C BFu32i_BFu1c_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu1c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu1c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu1c_Sf");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu1c_Sf");
    check_field_offset(lv, v3, 5, "BFu32i_BFu1c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_BFu1c_Sf, BFu32i_BFu1c_Sf)
//============================================================================



static void Test_BFu32i_BFu1i_Sf()
{
  {
    init_simple_test("BFu32i_BFu1i_Sf");
    static STRUCT_IF_C BFu32i_BFu1i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu1i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu1i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu1i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu1i_Sf");
    check_field_offset(lv, v3, 5, "BFu32i_BFu1i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_BFu1i_Sf, BFu32i_BFu1i_Sf)
//============================================================================



static void Test_BFu32i_BFu1ll_Sf()
{
  {
    init_simple_test("BFu32i_BFu1ll_Sf");
    static STRUCT_IF_C BFu32i_BFu1ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu1ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu1ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu1ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu1ll_Sf");
    check_field_offset(lv, v3, 5, "BFu32i_BFu1ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_BFu1ll_Sf, BFu32i_BFu1ll_Sf)
//============================================================================



static void Test_BFu32i_BFu1s_Sf()
{
  {
    init_simple_test("BFu32i_BFu1s_Sf");
    static STRUCT_IF_C BFu32i_BFu1s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu1s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu1s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu1s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu1s_Sf");
    check_field_offset(lv, v3, 5, "BFu32i_BFu1s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_BFu1s_Sf, BFu32i_BFu1s_Sf)
//============================================================================



static void Test_BFu32i_BFu31i_Sf()
{
  {
    init_simple_test("BFu32i_BFu31i_Sf");
    static STRUCT_IF_C BFu32i_BFu31i_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu31i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu31i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu31i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32i_BFu31i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32i_BFu31i_Sf");
    check_field_offset(lv, v3, 8, "BFu32i_BFu31i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_BFu31i_Sf, BFu32i_BFu31i_Sf)
//============================================================================



static void Test_BFu32i_BFu31ll_Sf()
{
  {
    init_simple_test("BFu32i_BFu31ll_Sf");
    static STRUCT_IF_C BFu32i_BFu31ll_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu31ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu31ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32i_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32i_BFu31ll_Sf");
    check_field_offset(lv, v3, 8, "BFu32i_BFu31ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_BFu31ll_Sf, BFu32i_BFu31ll_Sf)
//============================================================================



static void Test_BFu32i_BFu32i_Sf()
{
  {
    init_simple_test("BFu32i_BFu32i_Sf");
    static STRUCT_IF_C BFu32i_BFu32i_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu32i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu32i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu32i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32i_BFu32i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu32i_Sf");
    check_field_offset(lv, v3, 8, "BFu32i_BFu32i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_BFu32i_Sf, BFu32i_BFu32i_Sf)
//============================================================================



static void Test_BFu32i_BFu32ll_Sf()
{
  {
    init_simple_test("BFu32i_BFu32ll_Sf");
    static STRUCT_IF_C BFu32i_BFu32ll_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu32ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu32ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32i_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu32ll_Sf");
    check_field_offset(lv, v3, 8, "BFu32i_BFu32ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_BFu32ll_Sf, BFu32i_BFu32ll_Sf)
//============================================================================



static void Test_BFu32i_BFu33_Sf()
{
  {
    init_simple_test("BFu32i_BFu33_Sf");
    static STRUCT_IF_C BFu32i_BFu33_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu32i_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu33_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu33_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu33_Sf");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "BFu32i_BFu33_Sf");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "BFu32i_BFu33_Sf");
    check_field_offset(lv, v3, 9, "BFu32i_BFu33_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_BFu33_Sf, BFu32i_BFu33_Sf)
//============================================================================



static void Test_BFu32i_BFu7c_Sf()
{
  {
    init_simple_test("BFu32i_BFu7c_Sf");
    static STRUCT_IF_C BFu32i_BFu7c_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu7c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu7c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu7c_Sf");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu7c_Sf");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu7c_Sf");
    check_field_offset(lv, v3, 5, "BFu32i_BFu7c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_BFu7c_Sf, BFu32i_BFu7c_Sf)
//============================================================================



static void Test_BFu32i_BFu7i_Sf()
{
  {
    init_simple_test("BFu32i_BFu7i_Sf");
    static STRUCT_IF_C BFu32i_BFu7i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu7i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu7i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu7i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu7i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu7i_Sf");
    check_field_offset(lv, v3, 5, "BFu32i_BFu7i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_BFu7i_Sf, BFu32i_BFu7i_Sf)
//============================================================================



static void Test_BFu32i_BFu7ll_Sf()
{
  {
    init_simple_test("BFu32i_BFu7ll_Sf");
    static STRUCT_IF_C BFu32i_BFu7ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu7ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu7ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu7ll_Sf");
    check_field_offset(lv, v3, 5, "BFu32i_BFu7ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_BFu7ll_Sf, BFu32i_BFu7ll_Sf)
//============================================================================



static void Test_BFu32i_BFu7s_Sf()
{
  {
    init_simple_test("BFu32i_BFu7s_Sf");
    static STRUCT_IF_C BFu32i_BFu7s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu7s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu7s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu7s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu7s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu7s_Sf");
    check_field_offset(lv, v3, 5, "BFu32i_BFu7s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_BFu7s_Sf, BFu32i_BFu7s_Sf)
//============================================================================



static void Test_BFu32i_BFu8c_Sf()
{
  {
    init_simple_test("BFu32i_BFu8c_Sf");
    static STRUCT_IF_C BFu32i_BFu8c_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu8c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu8c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu8c_Sf");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu8c_Sf");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu8c_Sf");
    check_field_offset(lv, v3, 5, "BFu32i_BFu8c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_BFu8c_Sf, BFu32i_BFu8c_Sf)
//============================================================================



static void Test_BFu32i_BFu8i_Sf()
{
  {
    init_simple_test("BFu32i_BFu8i_Sf");
    static STRUCT_IF_C BFu32i_BFu8i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu8i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu8i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu8i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu8i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu8i_Sf");
    check_field_offset(lv, v3, 5, "BFu32i_BFu8i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_BFu8i_Sf, BFu32i_BFu8i_Sf)
//============================================================================



static void Test_BFu32i_BFu8ll_Sf()
{
  {
    init_simple_test("BFu32i_BFu8ll_Sf");
    static STRUCT_IF_C BFu32i_BFu8ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu8ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu8ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu8ll_Sf");
    check_field_offset(lv, v3, 5, "BFu32i_BFu8ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_BFu8ll_Sf, BFu32i_BFu8ll_Sf)
//============================================================================



static void Test_BFu32i_BFu8s_Sf()
{
  {
    init_simple_test("BFu32i_BFu8s_Sf");
    static STRUCT_IF_C BFu32i_BFu8s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu8s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu8s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu8s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu8s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu8s_Sf");
    check_field_offset(lv, v3, 5, "BFu32i_BFu8s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_BFu8s_Sf, BFu32i_BFu8s_Sf)
//============================================================================



static void Test_BFu32i_BFu9i_Sf()
{
  {
    init_simple_test("BFu32i_BFu9i_Sf");
    static STRUCT_IF_C BFu32i_BFu9i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu9i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu9i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu9i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32i_BFu9i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32i_BFu9i_Sf");
    check_field_offset(lv, v3, 6, "BFu32i_BFu9i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_BFu9i_Sf, BFu32i_BFu9i_Sf)
//============================================================================



static void Test_BFu32i_BFu9ll_Sf()
{
  {
    init_simple_test("BFu32i_BFu9ll_Sf");
    static STRUCT_IF_C BFu32i_BFu9ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu9ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu9ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32i_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32i_BFu9ll_Sf");
    check_field_offset(lv, v3, 6, "BFu32i_BFu9ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_BFu9ll_Sf, BFu32i_BFu9ll_Sf)
//============================================================================



static void Test_BFu32i_BFu9s_Sf()
{
  {
    init_simple_test("BFu32i_BFu9s_Sf");
    static STRUCT_IF_C BFu32i_BFu9s_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu9s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu9s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu9s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32i_BFu9s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32i_BFu9s_Sf");
    check_field_offset(lv, v3, 6, "BFu32i_BFu9s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_BFu9s_Sf, BFu32i_BFu9s_Sf)
//============================================================================



static void Test_BFu32i_C_Sf()
{
  {
    init_simple_test("BFu32i_C_Sf");
    static STRUCT_IF_C BFu32i_C_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_C_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_C_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_C_Sf");
    check_field_offset(lv, v2, 4, "BFu32i_C_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu32i_C_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_C_Sf, BFu32i_C_Sf)
//============================================================================



static void Test_BFu32i_D_Sf()
{
  {
    init_simple_test("BFu32i_D_Sf");
    static STRUCT_IF_C BFu32i_D_Sf lv;
    check2(sizeof(lv), 12, "sizeof(BFu32i_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_D_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_D_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_D_Sf");
    check_field_offset(lv, v2, 4, "BFu32i_D_Sf.v2");
    check_field_offset(lv, v3, 12, "BFu32i_D_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_D_Sf, BFu32i_D_Sf)
//============================================================================



static void Test_BFu32i_F_Sf()
{
  {
    init_simple_test("BFu32i_F_Sf");
    static STRUCT_IF_C BFu32i_F_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_F_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_F_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_F_Sf");
    check_field_offset(lv, v2, 4, "BFu32i_F_Sf.v2");
    check_field_offset(lv, v3, 8, "BFu32i_F_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_F_Sf, BFu32i_F_Sf)
//============================================================================



static void Test_BFu32i_I_Sf()
{
  {
    init_simple_test("BFu32i_I_Sf");
    static STRUCT_IF_C BFu32i_I_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_I_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_I_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_I_Sf");
    check_field_offset(lv, v2, 4, "BFu32i_I_Sf.v2");
    check_field_offset(lv, v3, 8, "BFu32i_I_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_I_Sf, BFu32i_I_Sf)
//============================================================================



static void Test_BFu32i_Ip_Sf()
{
  {
    init_simple_test("BFu32i_Ip_Sf");
    static STRUCT_IF_C BFu32i_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32i_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Ip_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Ip_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Ip_Sf");
    check_field_offset(lv, v2, 4, "BFu32i_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "BFu32i_Ip_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Ip_Sf, BFu32i_Ip_Sf)
//============================================================================



static void Test_BFu32i_L_Sf()
{
  {
    init_simple_test("BFu32i_L_Sf");
    static STRUCT_IF_C BFu32i_L_Sf lv;
    check2(sizeof(lv), 12, "sizeof(BFu32i_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_L_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_L_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_L_Sf");
    check_field_offset(lv, v2, 4, "BFu32i_L_Sf.v2");
    check_field_offset(lv, v3, 12, "BFu32i_L_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_L_Sf, BFu32i_L_Sf)
//============================================================================



static void Test_BFu32i_S_Sf()
{
  {
    init_simple_test("BFu32i_S_Sf");
    static STRUCT_IF_C BFu32i_S_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_S_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_S_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_S_Sf");
    check_field_offset(lv, v2, 4, "BFu32i_S_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu32i_S_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_S_Sf, BFu32i_S_Sf)
//============================================================================



static void Test_BFu32i_Sf()
{
  {
    init_simple_test("BFu32i_Sf");
    static STRUCT_IF_C BFu32i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf");
    check_field_offset(lv, v2, 4, "BFu32i_Sf.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf, BFu32i_Sf)
//============================================================================



static void Test_BFu32i_Sf_BFu15i()
{
  {
    init_simple_test("BFu32i_Sf_BFu15i");
    static STRUCT_IF_C BFu32i_Sf_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_BFu15i");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "BFu32i_Sf_BFu15i");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "BFu32i_Sf_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_BFu15i, BFu32i_Sf_BFu15i)
//============================================================================



static void Test_BFu32i_Sf_BFu15ll()
{
  {
    init_simple_test("BFu32i_Sf_BFu15ll");
    static STRUCT_IF_C BFu32i_Sf_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_BFu15ll");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "BFu32i_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "BFu32i_Sf_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_BFu15ll, BFu32i_Sf_BFu15ll)
//============================================================================



static void Test_BFu32i_Sf_BFu15s()
{
  {
    init_simple_test("BFu32i_Sf_BFu15s");
    static STRUCT_IF_C BFu32i_Sf_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_BFu15s");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "BFu32i_Sf_BFu15s");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "BFu32i_Sf_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_BFu15s, BFu32i_Sf_BFu15s)
//============================================================================



static void Test_BFu32i_Sf_BFu16i()
{
  {
    init_simple_test("BFu32i_Sf_BFu16i");
    static STRUCT_IF_C BFu32i_Sf_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_BFu16i");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "BFu32i_Sf_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "BFu32i_Sf_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_BFu16i, BFu32i_Sf_BFu16i)
//============================================================================



static void Test_BFu32i_Sf_BFu16ll()
{
  {
    init_simple_test("BFu32i_Sf_BFu16ll");
    static STRUCT_IF_C BFu32i_Sf_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_BFu16ll");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "BFu32i_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "BFu32i_Sf_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_BFu16ll, BFu32i_Sf_BFu16ll)
//============================================================================



static void Test_BFu32i_Sf_BFu16s()
{
  {
    init_simple_test("BFu32i_Sf_BFu16s");
    static STRUCT_IF_C BFu32i_Sf_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_BFu16s");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "BFu32i_Sf_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "BFu32i_Sf_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_BFu16s, BFu32i_Sf_BFu16s)
//============================================================================



static void Test_BFu32i_Sf_BFu17i()
{
  {
    init_simple_test("BFu32i_Sf_BFu17i");
    static STRUCT_IF_C BFu32i_Sf_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(BFu32i_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_BFu17i");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 4, 0, 17, 1, "BFu32i_Sf_BFu17i");
    set_bf_and_test(lv, v3, 4, 0, 17, hide_ull(1LL<<16), "BFu32i_Sf_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_BFu17i, BFu32i_Sf_BFu17i)
//============================================================================



static void Test_BFu32i_Sf_BFu17ll()
{
  {
    init_simple_test("BFu32i_Sf_BFu17ll");
    static STRUCT_IF_C BFu32i_Sf_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(BFu32i_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_BFu17ll");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 17, 1, "BFu32i_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 4, 0, 17, hide_ull(1LL<<16), "BFu32i_Sf_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_BFu17ll, BFu32i_Sf_BFu17ll)
//============================================================================



static void Test_BFu32i_Sf_BFu1c()
{
  {
    init_simple_test("BFu32i_Sf_BFu1c");
    static STRUCT_IF_C BFu32i_Sf_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_BFu1c");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "BFu32i_Sf_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_BFu1c, BFu32i_Sf_BFu1c)
//============================================================================



static void Test_BFu32i_Sf_BFu1i()
{
  {
    init_simple_test("BFu32i_Sf_BFu1i");
    static STRUCT_IF_C BFu32i_Sf_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_BFu1i");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "BFu32i_Sf_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_BFu1i, BFu32i_Sf_BFu1i)
//============================================================================



static void Test_BFu32i_Sf_BFu1ll()
{
  {
    init_simple_test("BFu32i_Sf_BFu1ll");
    static STRUCT_IF_C BFu32i_Sf_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_BFu1ll");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "BFu32i_Sf_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_BFu1ll, BFu32i_Sf_BFu1ll)
//============================================================================



static void Test_BFu32i_Sf_BFu1s()
{
  {
    init_simple_test("BFu32i_Sf_BFu1s");
    static STRUCT_IF_C BFu32i_Sf_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_BFu1s");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "BFu32i_Sf_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_BFu1s, BFu32i_Sf_BFu1s)
//============================================================================



static void Test_BFu32i_Sf_BFu31i()
{
  {
    init_simple_test("BFu32i_Sf_BFu31i");
    static STRUCT_IF_C BFu32i_Sf_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_BFu31i");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 4, 0, 31, 1, "BFu32i_Sf_BFu31i");
    set_bf_and_test(lv, v3, 4, 0, 31, hide_ull(1LL<<30), "BFu32i_Sf_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_BFu31i, BFu32i_Sf_BFu31i)
//============================================================================



static void Test_BFu32i_Sf_BFu31ll()
{
  {
    init_simple_test("BFu32i_Sf_BFu31ll");
    static STRUCT_IF_C BFu32i_Sf_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_BFu31ll");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 31, 1, "BFu32i_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 4, 0, 31, hide_ull(1LL<<30), "BFu32i_Sf_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_BFu31ll, BFu32i_Sf_BFu31ll)
//============================================================================



static void Test_BFu32i_Sf_BFu32i()
{
  {
    init_simple_test("BFu32i_Sf_BFu32i");
    static STRUCT_IF_C BFu32i_Sf_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_BFu32i");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 4, 0, 32, 1, "BFu32i_Sf_BFu32i");
    set_bf_and_test(lv, v3, 4, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_BFu32i, BFu32i_Sf_BFu32i)
//============================================================================



static void Test_BFu32i_Sf_BFu32ll()
{
  {
    init_simple_test("BFu32i_Sf_BFu32ll");
    static STRUCT_IF_C BFu32i_Sf_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_BFu32ll");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 32, 1, "BFu32i_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 4, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_BFu32ll, BFu32i_Sf_BFu32ll)
//============================================================================



static void Test_BFu32i_Sf_BFu33()
{
  {
    init_simple_test("BFu32i_Sf_BFu33");
    static STRUCT_IF_C BFu32i_Sf_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(BFu32i_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_BFu33");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 4, 0, 33, 1, "BFu32i_Sf_BFu33");
    set_bf_and_test(lv, v3, 4, 0, 33, hide_ull(1LL<<32), "BFu32i_Sf_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_BFu33, BFu32i_Sf_BFu33)
//============================================================================



static void Test_BFu32i_Sf_BFu7c()
{
  {
    init_simple_test("BFu32i_Sf_BFu7c");
    static STRUCT_IF_C BFu32i_Sf_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_BFu7c");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "BFu32i_Sf_BFu7c");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_Sf_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_BFu7c, BFu32i_Sf_BFu7c)
//============================================================================



static void Test_BFu32i_Sf_BFu7i()
{
  {
    init_simple_test("BFu32i_Sf_BFu7i");
    static STRUCT_IF_C BFu32i_Sf_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_BFu7i");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "BFu32i_Sf_BFu7i");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_Sf_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_BFu7i, BFu32i_Sf_BFu7i)
//============================================================================



static void Test_BFu32i_Sf_BFu7ll()
{
  {
    init_simple_test("BFu32i_Sf_BFu7ll");
    static STRUCT_IF_C BFu32i_Sf_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_BFu7ll");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "BFu32i_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_Sf_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_BFu7ll, BFu32i_Sf_BFu7ll)
//============================================================================



static void Test_BFu32i_Sf_BFu7s()
{
  {
    init_simple_test("BFu32i_Sf_BFu7s");
    static STRUCT_IF_C BFu32i_Sf_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_BFu7s");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "BFu32i_Sf_BFu7s");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_Sf_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_BFu7s, BFu32i_Sf_BFu7s)
//============================================================================



static void Test_BFu32i_Sf_BFu8c()
{
  {
    init_simple_test("BFu32i_Sf_BFu8c");
    static STRUCT_IF_C BFu32i_Sf_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_BFu8c");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "BFu32i_Sf_BFu8c");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_Sf_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_BFu8c, BFu32i_Sf_BFu8c)
//============================================================================



static void Test_BFu32i_Sf_BFu8i()
{
  {
    init_simple_test("BFu32i_Sf_BFu8i");
    static STRUCT_IF_C BFu32i_Sf_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_BFu8i");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "BFu32i_Sf_BFu8i");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_Sf_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_BFu8i, BFu32i_Sf_BFu8i)
//============================================================================



static void Test_BFu32i_Sf_BFu8ll()
{
  {
    init_simple_test("BFu32i_Sf_BFu8ll");
    static STRUCT_IF_C BFu32i_Sf_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_BFu8ll");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "BFu32i_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_Sf_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_BFu8ll, BFu32i_Sf_BFu8ll)
//============================================================================



static void Test_BFu32i_Sf_BFu8s()
{
  {
    init_simple_test("BFu32i_Sf_BFu8s");
    static STRUCT_IF_C BFu32i_Sf_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_BFu8s");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "BFu32i_Sf_BFu8s");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_Sf_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_BFu8s, BFu32i_Sf_BFu8s)
//============================================================================



static void Test_BFu32i_Sf_BFu9i()
{
  {
    init_simple_test("BFu32i_Sf_BFu9i");
    static STRUCT_IF_C BFu32i_Sf_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_BFu9i");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "BFu32i_Sf_BFu9i");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "BFu32i_Sf_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_BFu9i, BFu32i_Sf_BFu9i)
//============================================================================



static void Test_BFu32i_Sf_BFu9ll()
{
  {
    init_simple_test("BFu32i_Sf_BFu9ll");
    static STRUCT_IF_C BFu32i_Sf_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_BFu9ll");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "BFu32i_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "BFu32i_Sf_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_BFu9ll, BFu32i_Sf_BFu9ll)
//============================================================================



static void Test_BFu32i_Sf_BFu9s()
{
  {
    init_simple_test("BFu32i_Sf_BFu9s");
    static STRUCT_IF_C BFu32i_Sf_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_BFu9s");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "BFu32i_Sf_BFu9s");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "BFu32i_Sf_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_BFu9s, BFu32i_Sf_BFu9s)
//============================================================================



static void Test_BFu32i_Sf_C()
{
  {
    init_simple_test("BFu32i_Sf_C");
    static STRUCT_IF_C BFu32i_Sf_C lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_C)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_C");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_C");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_C.v2");
    check_field_offset(lv, v3, 4, "BFu32i_Sf_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_C, BFu32i_Sf_C)
//============================================================================



static void Test_BFu32i_Sf_D()
{
  {
    init_simple_test("BFu32i_Sf_D");
    static STRUCT_IF_C BFu32i_Sf_D lv;
    check2(sizeof(lv), 12, "sizeof(BFu32i_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_D)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_D");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_D");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_D.v2");
    check_field_offset(lv, v3, 4, "BFu32i_Sf_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_D, BFu32i_Sf_D)
//============================================================================



static void Test_BFu32i_Sf_F()
{
  {
    init_simple_test("BFu32i_Sf_F");
    static STRUCT_IF_C BFu32i_Sf_F lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_F)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_F");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_F");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_F.v2");
    check_field_offset(lv, v3, 4, "BFu32i_Sf_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_F, BFu32i_Sf_F)
//============================================================================



static void Test_BFu32i_Sf_I()
{
  {
    init_simple_test("BFu32i_Sf_I");
    static STRUCT_IF_C BFu32i_Sf_I lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_I)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_I");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_I");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_I.v2");
    check_field_offset(lv, v3, 4, "BFu32i_Sf_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_I, BFu32i_Sf_I)
//============================================================================



static void Test_BFu32i_Sf_Ip()
{
  {
    init_simple_test("BFu32i_Sf_Ip");
    static STRUCT_IF_C BFu32i_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32i_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_Ip");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_Ip");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_Ip.v2");
    check_field_offset(lv, v3, 4, "BFu32i_Sf_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_Ip, BFu32i_Sf_Ip)
//============================================================================



static void Test_BFu32i_Sf_L()
{
  {
    init_simple_test("BFu32i_Sf_L");
    static STRUCT_IF_C BFu32i_Sf_L lv;
    check2(sizeof(lv), 12, "sizeof(BFu32i_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_L)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_L");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_L");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_L.v2");
    check_field_offset(lv, v3, 4, "BFu32i_Sf_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_L, BFu32i_Sf_L)
//============================================================================



static void Test_BFu32i_Sf_S()
{
  {
    init_simple_test("BFu32i_Sf_S");
    static STRUCT_IF_C BFu32i_Sf_S lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_S)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_S");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_S");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_S.v2");
    check_field_offset(lv, v3, 4, "BFu32i_Sf_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_S, BFu32i_Sf_S)
//============================================================================



static void Test_BFu32i_Sf_Sf()
{
  {
    init_simple_test("BFu32i_Sf_Sf");
    static STRUCT_IF_C BFu32i_Sf_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu32i_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_Sf");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_Sf.v2");
    check_field_offset(lv, v3, 4, "BFu32i_Sf_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_Sf, BFu32i_Sf_Sf)
//============================================================================



static void Test_BFu32i_Sf_Uc()
{
  {
    init_simple_test("BFu32i_Sf_Uc");
    static STRUCT_IF_C BFu32i_Sf_Uc lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_Uc");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_Uc");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_Uc.v2");
    check_field_offset(lv, v3, 4, "BFu32i_Sf_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_Uc, BFu32i_Sf_Uc)
//============================================================================



static void Test_BFu32i_Sf_Ui()
{
  {
    init_simple_test("BFu32i_Sf_Ui");
    static STRUCT_IF_C BFu32i_Sf_Ui lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_Ui");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_Ui");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_Ui.v2");
    check_field_offset(lv, v3, 4, "BFu32i_Sf_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_Ui, BFu32i_Sf_Ui)
//============================================================================



static void Test_BFu32i_Sf_Ul()
{
  {
    init_simple_test("BFu32i_Sf_Ul");
    static STRUCT_IF_C BFu32i_Sf_Ul lv;
    check2(sizeof(lv), 12, "sizeof(BFu32i_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_Ul");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_Ul");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_Ul.v2");
    check_field_offset(lv, v3, 4, "BFu32i_Sf_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_Ul, BFu32i_Sf_Ul)
//============================================================================



static void Test_BFu32i_Sf_Us()
{
  {
    init_simple_test("BFu32i_Sf_Us");
    static STRUCT_IF_C BFu32i_Sf_Us lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_Us)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_Us");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_Us");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_Us.v2");
    check_field_offset(lv, v3, 4, "BFu32i_Sf_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_Us, BFu32i_Sf_Us)
//============================================================================



static void Test_BFu32i_Sf_Vp()
{
  {
    init_simple_test("BFu32i_Sf_Vp");
    static STRUCT_IF_C BFu32i_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32i_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Sf_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Sf_Vp");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Sf_Vp");
    check_field_offset(lv, v2, 4, "BFu32i_Sf_Vp.v2");
    check_field_offset(lv, v3, 4, "BFu32i_Sf_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Sf_Vp, BFu32i_Sf_Vp)
//============================================================================



static void Test_BFu32i_Uc_Sf()
{
  {
    init_simple_test("BFu32i_Uc_Sf");
    static STRUCT_IF_C BFu32i_Uc_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Uc_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Uc_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Uc_Sf");
    check_field_offset(lv, v2, 4, "BFu32i_Uc_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu32i_Uc_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Uc_Sf, BFu32i_Uc_Sf)
//============================================================================



static void Test_BFu32i_Ui_Sf()
{
  {
    init_simple_test("BFu32i_Ui_Sf");
    static STRUCT_IF_C BFu32i_Ui_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Ui_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Ui_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Ui_Sf");
    check_field_offset(lv, v2, 4, "BFu32i_Ui_Sf.v2");
    check_field_offset(lv, v3, 8, "BFu32i_Ui_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Ui_Sf, BFu32i_Ui_Sf)
//============================================================================



static void Test_BFu32i_Ul_Sf()
{
  {
    init_simple_test("BFu32i_Ul_Sf");
    static STRUCT_IF_C BFu32i_Ul_Sf lv;
    check2(sizeof(lv), 12, "sizeof(BFu32i_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Ul_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Ul_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Ul_Sf");
    check_field_offset(lv, v2, 4, "BFu32i_Ul_Sf.v2");
    check_field_offset(lv, v3, 12, "BFu32i_Ul_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Ul_Sf, BFu32i_Ul_Sf)
//============================================================================



static void Test_BFu32i_Us_Sf()
{
  {
    init_simple_test("BFu32i_Us_Sf");
    static STRUCT_IF_C BFu32i_Us_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Us_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Us_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Us_Sf");
    check_field_offset(lv, v2, 4, "BFu32i_Us_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu32i_Us_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Us_Sf, BFu32i_Us_Sf)
//============================================================================



static void Test_BFu32i_Vp_Sf()
{
  {
    init_simple_test("BFu32i_Vp_Sf");
    static STRUCT_IF_C BFu32i_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32i_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Vp_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Vp_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Vp_Sf");
    check_field_offset(lv, v2, 4, "BFu32i_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "BFu32i_Vp_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32i_Vp_Sf, BFu32i_Vp_Sf)
//============================================================================



static void Test_BFu32ll_BFu15i_Sf()
{
  {
    init_simple_test("BFu32ll_BFu15i_Sf");
    static STRUCT_IF_C BFu32ll_BFu15i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu15i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu15i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu15i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32ll_BFu15i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32ll_BFu15i_Sf");
    check_field_offset(lv, v3, 6, "BFu32ll_BFu15i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_BFu15i_Sf, BFu32ll_BFu15i_Sf)
//============================================================================



static void Test_BFu32ll_BFu15ll_Sf()
{
  {
    init_simple_test("BFu32ll_BFu15ll_Sf");
    static STRUCT_IF_C BFu32ll_BFu15ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu15ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu15ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32ll_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32ll_BFu15ll_Sf");
    check_field_offset(lv, v3, 6, "BFu32ll_BFu15ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_BFu15ll_Sf, BFu32ll_BFu15ll_Sf)
//============================================================================



static void Test_BFu32ll_BFu15s_Sf()
{
  {
    init_simple_test("BFu32ll_BFu15s_Sf");
    static STRUCT_IF_C BFu32ll_BFu15s_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu15s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu15s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu15s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32ll_BFu15s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32ll_BFu15s_Sf");
    check_field_offset(lv, v3, 6, "BFu32ll_BFu15s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_BFu15s_Sf, BFu32ll_BFu15s_Sf)
//============================================================================



static void Test_BFu32ll_BFu16i_Sf()
{
  {
    init_simple_test("BFu32ll_BFu16i_Sf");
    static STRUCT_IF_C BFu32ll_BFu16i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu16i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu16i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu16i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32ll_BFu16i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32ll_BFu16i_Sf");
    check_field_offset(lv, v3, 6, "BFu32ll_BFu16i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_BFu16i_Sf, BFu32ll_BFu16i_Sf)
//============================================================================



static void Test_BFu32ll_BFu16ll_Sf()
{
  {
    init_simple_test("BFu32ll_BFu16ll_Sf");
    static STRUCT_IF_C BFu32ll_BFu16ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu16ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu16ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32ll_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32ll_BFu16ll_Sf");
    check_field_offset(lv, v3, 6, "BFu32ll_BFu16ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_BFu16ll_Sf, BFu32ll_BFu16ll_Sf)
//============================================================================



static void Test_BFu32ll_BFu16s_Sf()
{
  {
    init_simple_test("BFu32ll_BFu16s_Sf");
    static STRUCT_IF_C BFu32ll_BFu16s_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu16s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu16s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu16s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32ll_BFu16s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32ll_BFu16s_Sf");
    check_field_offset(lv, v3, 6, "BFu32ll_BFu16s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_BFu16s_Sf, BFu32ll_BFu16s_Sf)
//============================================================================



static void Test_BFu32ll_BFu17i_Sf()
{
  {
    init_simple_test("BFu32ll_BFu17i_Sf");
    static STRUCT_IF_C BFu32ll_BFu17i_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu32ll_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu17i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu17i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu17i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32ll_BFu17i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32ll_BFu17i_Sf");
    check_field_offset(lv, v3, 7, "BFu32ll_BFu17i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_BFu17i_Sf, BFu32ll_BFu17i_Sf)
//============================================================================



static void Test_BFu32ll_BFu17ll_Sf()
{
  {
    init_simple_test("BFu32ll_BFu17ll_Sf");
    static STRUCT_IF_C BFu32ll_BFu17ll_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu32ll_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu17ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu17ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32ll_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32ll_BFu17ll_Sf");
    check_field_offset(lv, v3, 7, "BFu32ll_BFu17ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_BFu17ll_Sf, BFu32ll_BFu17ll_Sf)
//============================================================================



static void Test_BFu32ll_BFu1c_Sf()
{
  {
    init_simple_test("BFu32ll_BFu1c_Sf");
    static STRUCT_IF_C BFu32ll_BFu1c_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu1c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu1c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu1c_Sf");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu1c_Sf");
    check_field_offset(lv, v3, 5, "BFu32ll_BFu1c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_BFu1c_Sf, BFu32ll_BFu1c_Sf)
//============================================================================



static void Test_BFu32ll_BFu1i_Sf()
{
  {
    init_simple_test("BFu32ll_BFu1i_Sf");
    static STRUCT_IF_C BFu32ll_BFu1i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu1i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu1i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu1i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu1i_Sf");
    check_field_offset(lv, v3, 5, "BFu32ll_BFu1i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_BFu1i_Sf, BFu32ll_BFu1i_Sf)
//============================================================================



static void Test_BFu32ll_BFu1ll_Sf()
{
  {
    init_simple_test("BFu32ll_BFu1ll_Sf");
    static STRUCT_IF_C BFu32ll_BFu1ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu1ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu1ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu1ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu1ll_Sf");
    check_field_offset(lv, v3, 5, "BFu32ll_BFu1ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_BFu1ll_Sf, BFu32ll_BFu1ll_Sf)
//============================================================================



static void Test_BFu32ll_BFu1s_Sf()
{
  {
    init_simple_test("BFu32ll_BFu1s_Sf");
    static STRUCT_IF_C BFu32ll_BFu1s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu1s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu1s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu1s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu1s_Sf");
    check_field_offset(lv, v3, 5, "BFu32ll_BFu1s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_BFu1s_Sf, BFu32ll_BFu1s_Sf)
//============================================================================



static void Test_BFu32ll_BFu31i_Sf()
{
  {
    init_simple_test("BFu32ll_BFu31i_Sf");
    static STRUCT_IF_C BFu32ll_BFu31i_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu31i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu31i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu31i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32ll_BFu31i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32ll_BFu31i_Sf");
    check_field_offset(lv, v3, 8, "BFu32ll_BFu31i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_BFu31i_Sf, BFu32ll_BFu31i_Sf)
//============================================================================



static void Test_BFu32ll_BFu31ll_Sf()
{
  {
    init_simple_test("BFu32ll_BFu31ll_Sf");
    static STRUCT_IF_C BFu32ll_BFu31ll_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu31ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu31ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32ll_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32ll_BFu31ll_Sf");
    check_field_offset(lv, v3, 8, "BFu32ll_BFu31ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_BFu31ll_Sf, BFu32ll_BFu31ll_Sf)
//============================================================================



static void Test_BFu32ll_BFu32i_Sf()
{
  {
    init_simple_test("BFu32ll_BFu32i_Sf");
    static STRUCT_IF_C BFu32ll_BFu32i_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu32i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu32i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu32i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32ll_BFu32i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu32i_Sf");
    check_field_offset(lv, v3, 8, "BFu32ll_BFu32i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_BFu32i_Sf, BFu32ll_BFu32i_Sf)
//============================================================================



static void Test_BFu32ll_BFu32ll_Sf()
{
  {
    init_simple_test("BFu32ll_BFu32ll_Sf");
    static STRUCT_IF_C BFu32ll_BFu32ll_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu32ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu32ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32ll_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu32ll_Sf");
    check_field_offset(lv, v3, 8, "BFu32ll_BFu32ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_BFu32ll_Sf, BFu32ll_BFu32ll_Sf)
//============================================================================



static void Test_BFu32ll_BFu33_Sf()
{
  {
    init_simple_test("BFu32ll_BFu33_Sf");
    static STRUCT_IF_C BFu32ll_BFu33_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu32ll_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu33_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu33_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu33_Sf");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "BFu32ll_BFu33_Sf");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "BFu32ll_BFu33_Sf");
    check_field_offset(lv, v3, 9, "BFu32ll_BFu33_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_BFu33_Sf, BFu32ll_BFu33_Sf)
//============================================================================



static void Test_BFu32ll_BFu7c_Sf()
{
  {
    init_simple_test("BFu32ll_BFu7c_Sf");
    static STRUCT_IF_C BFu32ll_BFu7c_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu7c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu7c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu7c_Sf");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu7c_Sf");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu7c_Sf");
    check_field_offset(lv, v3, 5, "BFu32ll_BFu7c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_BFu7c_Sf, BFu32ll_BFu7c_Sf)
//============================================================================



static void Test_BFu32ll_BFu7i_Sf()
{
  {
    init_simple_test("BFu32ll_BFu7i_Sf");
    static STRUCT_IF_C BFu32ll_BFu7i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu7i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu7i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu7i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu7i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu7i_Sf");
    check_field_offset(lv, v3, 5, "BFu32ll_BFu7i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_BFu7i_Sf, BFu32ll_BFu7i_Sf)
//============================================================================



static void Test_BFu32ll_BFu7ll_Sf()
{
  {
    init_simple_test("BFu32ll_BFu7ll_Sf");
    static STRUCT_IF_C BFu32ll_BFu7ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu7ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu7ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu7ll_Sf");
    check_field_offset(lv, v3, 5, "BFu32ll_BFu7ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_BFu7ll_Sf, BFu32ll_BFu7ll_Sf)
//============================================================================



static void Test_BFu32ll_BFu7s_Sf()
{
  {
    init_simple_test("BFu32ll_BFu7s_Sf");
    static STRUCT_IF_C BFu32ll_BFu7s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu7s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu7s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu7s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu7s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu7s_Sf");
    check_field_offset(lv, v3, 5, "BFu32ll_BFu7s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_BFu7s_Sf, BFu32ll_BFu7s_Sf)
//============================================================================



static void Test_BFu32ll_BFu8c_Sf()
{
  {
    init_simple_test("BFu32ll_BFu8c_Sf");
    static STRUCT_IF_C BFu32ll_BFu8c_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu8c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu8c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu8c_Sf");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu8c_Sf");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu8c_Sf");
    check_field_offset(lv, v3, 5, "BFu32ll_BFu8c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_BFu8c_Sf, BFu32ll_BFu8c_Sf)
//============================================================================



static void Test_BFu32ll_BFu8i_Sf()
{
  {
    init_simple_test("BFu32ll_BFu8i_Sf");
    static STRUCT_IF_C BFu32ll_BFu8i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu8i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu8i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu8i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu8i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu8i_Sf");
    check_field_offset(lv, v3, 5, "BFu32ll_BFu8i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_BFu8i_Sf, BFu32ll_BFu8i_Sf)
//============================================================================



static void Test_BFu32ll_BFu8ll_Sf()
{
  {
    init_simple_test("BFu32ll_BFu8ll_Sf");
    static STRUCT_IF_C BFu32ll_BFu8ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu8ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu8ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu8ll_Sf");
    check_field_offset(lv, v3, 5, "BFu32ll_BFu8ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_BFu8ll_Sf, BFu32ll_BFu8ll_Sf)
//============================================================================



static void Test_BFu32ll_BFu8s_Sf()
{
  {
    init_simple_test("BFu32ll_BFu8s_Sf");
    static STRUCT_IF_C BFu32ll_BFu8s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu8s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu8s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu8s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu8s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu8s_Sf");
    check_field_offset(lv, v3, 5, "BFu32ll_BFu8s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_BFu8s_Sf, BFu32ll_BFu8s_Sf)
//============================================================================



static void Test_BFu32ll_BFu9i_Sf()
{
  {
    init_simple_test("BFu32ll_BFu9i_Sf");
    static STRUCT_IF_C BFu32ll_BFu9i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu9i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu9i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu9i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32ll_BFu9i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32ll_BFu9i_Sf");
    check_field_offset(lv, v3, 6, "BFu32ll_BFu9i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_BFu9i_Sf, BFu32ll_BFu9i_Sf)
//============================================================================



static void Test_BFu32ll_BFu9ll_Sf()
{
  {
    init_simple_test("BFu32ll_BFu9ll_Sf");
    static STRUCT_IF_C BFu32ll_BFu9ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu9ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu9ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32ll_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32ll_BFu9ll_Sf");
    check_field_offset(lv, v3, 6, "BFu32ll_BFu9ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_BFu9ll_Sf, BFu32ll_BFu9ll_Sf)
//============================================================================



static void Test_BFu32ll_BFu9s_Sf()
{
  {
    init_simple_test("BFu32ll_BFu9s_Sf");
    static STRUCT_IF_C BFu32ll_BFu9s_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu9s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu9s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu9s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32ll_BFu9s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32ll_BFu9s_Sf");
    check_field_offset(lv, v3, 6, "BFu32ll_BFu9s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_BFu9s_Sf, BFu32ll_BFu9s_Sf)
//============================================================================



static void Test_BFu32ll_C_Sf()
{
  {
    init_simple_test("BFu32ll_C_Sf");
    static STRUCT_IF_C BFu32ll_C_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_C_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_C_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_C_Sf");
    check_field_offset(lv, v2, 4, "BFu32ll_C_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu32ll_C_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_C_Sf, BFu32ll_C_Sf)
//============================================================================



static void Test_BFu32ll_D_Sf()
{
  {
    init_simple_test("BFu32ll_D_Sf");
    static STRUCT_IF_C BFu32ll_D_Sf lv;
    check2(sizeof(lv), 12, "sizeof(BFu32ll_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_D_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_D_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_D_Sf");
    check_field_offset(lv, v2, 4, "BFu32ll_D_Sf.v2");
    check_field_offset(lv, v3, 12, "BFu32ll_D_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_D_Sf, BFu32ll_D_Sf)
//============================================================================



static void Test_BFu32ll_F_Sf()
{
  {
    init_simple_test("BFu32ll_F_Sf");
    static STRUCT_IF_C BFu32ll_F_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_F_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_F_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_F_Sf");
    check_field_offset(lv, v2, 4, "BFu32ll_F_Sf.v2");
    check_field_offset(lv, v3, 8, "BFu32ll_F_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_F_Sf, BFu32ll_F_Sf)
//============================================================================



static void Test_BFu32ll_I_Sf()
{
  {
    init_simple_test("BFu32ll_I_Sf");
    static STRUCT_IF_C BFu32ll_I_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_I_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_I_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_I_Sf");
    check_field_offset(lv, v2, 4, "BFu32ll_I_Sf.v2");
    check_field_offset(lv, v3, 8, "BFu32ll_I_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_I_Sf, BFu32ll_I_Sf)
//============================================================================



static void Test_BFu32ll_Ip_Sf()
{
  {
    init_simple_test("BFu32ll_Ip_Sf");
    static STRUCT_IF_C BFu32ll_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32ll_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Ip_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Ip_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Ip_Sf");
    check_field_offset(lv, v2, 4, "BFu32ll_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "BFu32ll_Ip_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Ip_Sf, BFu32ll_Ip_Sf)
//============================================================================



static void Test_BFu32ll_L_Sf()
{
  {
    init_simple_test("BFu32ll_L_Sf");
    static STRUCT_IF_C BFu32ll_L_Sf lv;
    check2(sizeof(lv), 12, "sizeof(BFu32ll_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_L_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_L_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_L_Sf");
    check_field_offset(lv, v2, 4, "BFu32ll_L_Sf.v2");
    check_field_offset(lv, v3, 12, "BFu32ll_L_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_L_Sf, BFu32ll_L_Sf)
//============================================================================



static void Test_BFu32ll_S_Sf()
{
  {
    init_simple_test("BFu32ll_S_Sf");
    static STRUCT_IF_C BFu32ll_S_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_S_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_S_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_S_Sf");
    check_field_offset(lv, v2, 4, "BFu32ll_S_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu32ll_S_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_S_Sf, BFu32ll_S_Sf)
//============================================================================



static void Test_BFu32ll_Sf()
{
  {
    init_simple_test("BFu32ll_Sf");
    static STRUCT_IF_C BFu32ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf, BFu32ll_Sf)
//============================================================================



static void Test_BFu32ll_Sf_BFu15i()
{
  {
    init_simple_test("BFu32ll_Sf_BFu15i");
    static STRUCT_IF_C BFu32ll_Sf_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_BFu15i");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "BFu32ll_Sf_BFu15i");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "BFu32ll_Sf_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_BFu15i, BFu32ll_Sf_BFu15i)
//============================================================================



static void Test_BFu32ll_Sf_BFu15ll()
{
  {
    init_simple_test("BFu32ll_Sf_BFu15ll");
    static STRUCT_IF_C BFu32ll_Sf_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_BFu15ll");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "BFu32ll_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "BFu32ll_Sf_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_BFu15ll, BFu32ll_Sf_BFu15ll)
//============================================================================



static void Test_BFu32ll_Sf_BFu15s()
{
  {
    init_simple_test("BFu32ll_Sf_BFu15s");
    static STRUCT_IF_C BFu32ll_Sf_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_BFu15s");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "BFu32ll_Sf_BFu15s");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "BFu32ll_Sf_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_BFu15s, BFu32ll_Sf_BFu15s)
//============================================================================



static void Test_BFu32ll_Sf_BFu16i()
{
  {
    init_simple_test("BFu32ll_Sf_BFu16i");
    static STRUCT_IF_C BFu32ll_Sf_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_BFu16i");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "BFu32ll_Sf_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "BFu32ll_Sf_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_BFu16i, BFu32ll_Sf_BFu16i)
//============================================================================



static void Test_BFu32ll_Sf_BFu16ll()
{
  {
    init_simple_test("BFu32ll_Sf_BFu16ll");
    static STRUCT_IF_C BFu32ll_Sf_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_BFu16ll");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "BFu32ll_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "BFu32ll_Sf_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_BFu16ll, BFu32ll_Sf_BFu16ll)
//============================================================================



static void Test_BFu32ll_Sf_BFu16s()
{
  {
    init_simple_test("BFu32ll_Sf_BFu16s");
    static STRUCT_IF_C BFu32ll_Sf_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_BFu16s");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "BFu32ll_Sf_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "BFu32ll_Sf_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_BFu16s, BFu32ll_Sf_BFu16s)
//============================================================================



static void Test_BFu32ll_Sf_BFu17i()
{
  {
    init_simple_test("BFu32ll_Sf_BFu17i");
    static STRUCT_IF_C BFu32ll_Sf_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(BFu32ll_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_BFu17i");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 4, 0, 17, 1, "BFu32ll_Sf_BFu17i");
    set_bf_and_test(lv, v3, 4, 0, 17, hide_ull(1LL<<16), "BFu32ll_Sf_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_BFu17i, BFu32ll_Sf_BFu17i)
//============================================================================



static void Test_BFu32ll_Sf_BFu17ll()
{
  {
    init_simple_test("BFu32ll_Sf_BFu17ll");
    static STRUCT_IF_C BFu32ll_Sf_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(BFu32ll_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_BFu17ll");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 17, 1, "BFu32ll_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 4, 0, 17, hide_ull(1LL<<16), "BFu32ll_Sf_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_BFu17ll, BFu32ll_Sf_BFu17ll)
//============================================================================



static void Test_BFu32ll_Sf_BFu1c()
{
  {
    init_simple_test("BFu32ll_Sf_BFu1c");
    static STRUCT_IF_C BFu32ll_Sf_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_BFu1c");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "BFu32ll_Sf_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_BFu1c, BFu32ll_Sf_BFu1c)
//============================================================================



static void Test_BFu32ll_Sf_BFu1i()
{
  {
    init_simple_test("BFu32ll_Sf_BFu1i");
    static STRUCT_IF_C BFu32ll_Sf_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_BFu1i");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "BFu32ll_Sf_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_BFu1i, BFu32ll_Sf_BFu1i)
//============================================================================



static void Test_BFu32ll_Sf_BFu1ll()
{
  {
    init_simple_test("BFu32ll_Sf_BFu1ll");
    static STRUCT_IF_C BFu32ll_Sf_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_BFu1ll");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "BFu32ll_Sf_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_BFu1ll, BFu32ll_Sf_BFu1ll)
//============================================================================



static void Test_BFu32ll_Sf_BFu1s()
{
  {
    init_simple_test("BFu32ll_Sf_BFu1s");
    static STRUCT_IF_C BFu32ll_Sf_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_BFu1s");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "BFu32ll_Sf_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_BFu1s, BFu32ll_Sf_BFu1s)
//============================================================================



static void Test_BFu32ll_Sf_BFu31i()
{
  {
    init_simple_test("BFu32ll_Sf_BFu31i");
    static STRUCT_IF_C BFu32ll_Sf_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_BFu31i");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 4, 0, 31, 1, "BFu32ll_Sf_BFu31i");
    set_bf_and_test(lv, v3, 4, 0, 31, hide_ull(1LL<<30), "BFu32ll_Sf_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_BFu31i, BFu32ll_Sf_BFu31i)
//============================================================================



static void Test_BFu32ll_Sf_BFu31ll()
{
  {
    init_simple_test("BFu32ll_Sf_BFu31ll");
    static STRUCT_IF_C BFu32ll_Sf_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_BFu31ll");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 31, 1, "BFu32ll_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 4, 0, 31, hide_ull(1LL<<30), "BFu32ll_Sf_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_BFu31ll, BFu32ll_Sf_BFu31ll)
//============================================================================



static void Test_BFu32ll_Sf_BFu32i()
{
  {
    init_simple_test("BFu32ll_Sf_BFu32i");
    static STRUCT_IF_C BFu32ll_Sf_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_BFu32i");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 4, 0, 32, 1, "BFu32ll_Sf_BFu32i");
    set_bf_and_test(lv, v3, 4, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_BFu32i, BFu32ll_Sf_BFu32i)
//============================================================================



static void Test_BFu32ll_Sf_BFu32ll()
{
  {
    init_simple_test("BFu32ll_Sf_BFu32ll");
    static STRUCT_IF_C BFu32ll_Sf_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_BFu32ll");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 32, 1, "BFu32ll_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 4, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_BFu32ll, BFu32ll_Sf_BFu32ll)
//============================================================================



static void Test_BFu32ll_Sf_BFu33()
{
  {
    init_simple_test("BFu32ll_Sf_BFu33");
    static STRUCT_IF_C BFu32ll_Sf_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(BFu32ll_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_BFu33");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 4, 0, 33, 1, "BFu32ll_Sf_BFu33");
    set_bf_and_test(lv, v3, 4, 0, 33, hide_ull(1LL<<32), "BFu32ll_Sf_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_BFu33, BFu32ll_Sf_BFu33)
//============================================================================



static void Test_BFu32ll_Sf_BFu7c()
{
  {
    init_simple_test("BFu32ll_Sf_BFu7c");
    static STRUCT_IF_C BFu32ll_Sf_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_BFu7c");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "BFu32ll_Sf_BFu7c");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_Sf_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_BFu7c, BFu32ll_Sf_BFu7c)
//============================================================================



static void Test_BFu32ll_Sf_BFu7i()
{
  {
    init_simple_test("BFu32ll_Sf_BFu7i");
    static STRUCT_IF_C BFu32ll_Sf_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_BFu7i");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "BFu32ll_Sf_BFu7i");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_Sf_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_BFu7i, BFu32ll_Sf_BFu7i)
//============================================================================



static void Test_BFu32ll_Sf_BFu7ll()
{
  {
    init_simple_test("BFu32ll_Sf_BFu7ll");
    static STRUCT_IF_C BFu32ll_Sf_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_BFu7ll");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "BFu32ll_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_Sf_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_BFu7ll, BFu32ll_Sf_BFu7ll)
//============================================================================



static void Test_BFu32ll_Sf_BFu7s()
{
  {
    init_simple_test("BFu32ll_Sf_BFu7s");
    static STRUCT_IF_C BFu32ll_Sf_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_BFu7s");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "BFu32ll_Sf_BFu7s");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_Sf_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_BFu7s, BFu32ll_Sf_BFu7s)
//============================================================================



static void Test_BFu32ll_Sf_BFu8c()
{
  {
    init_simple_test("BFu32ll_Sf_BFu8c");
    static STRUCT_IF_C BFu32ll_Sf_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_BFu8c");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "BFu32ll_Sf_BFu8c");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_Sf_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_BFu8c, BFu32ll_Sf_BFu8c)
//============================================================================



static void Test_BFu32ll_Sf_BFu8i()
{
  {
    init_simple_test("BFu32ll_Sf_BFu8i");
    static STRUCT_IF_C BFu32ll_Sf_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_BFu8i");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "BFu32ll_Sf_BFu8i");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_Sf_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_BFu8i, BFu32ll_Sf_BFu8i)
//============================================================================



static void Test_BFu32ll_Sf_BFu8ll()
{
  {
    init_simple_test("BFu32ll_Sf_BFu8ll");
    static STRUCT_IF_C BFu32ll_Sf_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_BFu8ll");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "BFu32ll_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_Sf_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_BFu8ll, BFu32ll_Sf_BFu8ll)
//============================================================================



static void Test_BFu32ll_Sf_BFu8s()
{
  {
    init_simple_test("BFu32ll_Sf_BFu8s");
    static STRUCT_IF_C BFu32ll_Sf_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_BFu8s");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "BFu32ll_Sf_BFu8s");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_Sf_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_BFu8s, BFu32ll_Sf_BFu8s)
//============================================================================



static void Test_BFu32ll_Sf_BFu9i()
{
  {
    init_simple_test("BFu32ll_Sf_BFu9i");
    static STRUCT_IF_C BFu32ll_Sf_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_BFu9i");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "BFu32ll_Sf_BFu9i");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "BFu32ll_Sf_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_BFu9i, BFu32ll_Sf_BFu9i)
//============================================================================



static void Test_BFu32ll_Sf_BFu9ll()
{
  {
    init_simple_test("BFu32ll_Sf_BFu9ll");
    static STRUCT_IF_C BFu32ll_Sf_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_BFu9ll");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "BFu32ll_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "BFu32ll_Sf_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_BFu9ll, BFu32ll_Sf_BFu9ll)
//============================================================================



static void Test_BFu32ll_Sf_BFu9s()
{
  {
    init_simple_test("BFu32ll_Sf_BFu9s");
    static STRUCT_IF_C BFu32ll_Sf_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_BFu9s");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "BFu32ll_Sf_BFu9s");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "BFu32ll_Sf_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_BFu9s, BFu32ll_Sf_BFu9s)
//============================================================================



static void Test_BFu32ll_Sf_C()
{
  {
    init_simple_test("BFu32ll_Sf_C");
    static STRUCT_IF_C BFu32ll_Sf_C lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_C)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_C");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_C");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_C.v2");
    check_field_offset(lv, v3, 4, "BFu32ll_Sf_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_C, BFu32ll_Sf_C)
//============================================================================



static void Test_BFu32ll_Sf_D()
{
  {
    init_simple_test("BFu32ll_Sf_D");
    static STRUCT_IF_C BFu32ll_Sf_D lv;
    check2(sizeof(lv), 12, "sizeof(BFu32ll_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_D)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_D");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_D");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_D.v2");
    check_field_offset(lv, v3, 4, "BFu32ll_Sf_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_D, BFu32ll_Sf_D)
//============================================================================



static void Test_BFu32ll_Sf_F()
{
  {
    init_simple_test("BFu32ll_Sf_F");
    static STRUCT_IF_C BFu32ll_Sf_F lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_F)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_F");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_F");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_F.v2");
    check_field_offset(lv, v3, 4, "BFu32ll_Sf_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_F, BFu32ll_Sf_F)
//============================================================================



static void Test_BFu32ll_Sf_I()
{
  {
    init_simple_test("BFu32ll_Sf_I");
    static STRUCT_IF_C BFu32ll_Sf_I lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_I)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_I");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_I");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_I.v2");
    check_field_offset(lv, v3, 4, "BFu32ll_Sf_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_I, BFu32ll_Sf_I)
//============================================================================



static void Test_BFu32ll_Sf_Ip()
{
  {
    init_simple_test("BFu32ll_Sf_Ip");
    static STRUCT_IF_C BFu32ll_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32ll_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_Ip");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_Ip");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_Ip.v2");
    check_field_offset(lv, v3, 4, "BFu32ll_Sf_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_Ip, BFu32ll_Sf_Ip)
//============================================================================



static void Test_BFu32ll_Sf_L()
{
  {
    init_simple_test("BFu32ll_Sf_L");
    static STRUCT_IF_C BFu32ll_Sf_L lv;
    check2(sizeof(lv), 12, "sizeof(BFu32ll_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_L)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_L");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_L");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_L.v2");
    check_field_offset(lv, v3, 4, "BFu32ll_Sf_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_L, BFu32ll_Sf_L)
//============================================================================



static void Test_BFu32ll_Sf_S()
{
  {
    init_simple_test("BFu32ll_Sf_S");
    static STRUCT_IF_C BFu32ll_Sf_S lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_S)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_S");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_S");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_S.v2");
    check_field_offset(lv, v3, 4, "BFu32ll_Sf_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_S, BFu32ll_Sf_S)
//============================================================================



static void Test_BFu32ll_Sf_Sf()
{
  {
    init_simple_test("BFu32ll_Sf_Sf");
    static STRUCT_IF_C BFu32ll_Sf_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu32ll_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_Sf");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_Sf.v2");
    check_field_offset(lv, v3, 4, "BFu32ll_Sf_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_Sf, BFu32ll_Sf_Sf)
//============================================================================



static void Test_BFu32ll_Sf_Uc()
{
  {
    init_simple_test("BFu32ll_Sf_Uc");
    static STRUCT_IF_C BFu32ll_Sf_Uc lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_Uc");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_Uc");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_Uc.v2");
    check_field_offset(lv, v3, 4, "BFu32ll_Sf_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_Uc, BFu32ll_Sf_Uc)
//============================================================================



static void Test_BFu32ll_Sf_Ui()
{
  {
    init_simple_test("BFu32ll_Sf_Ui");
    static STRUCT_IF_C BFu32ll_Sf_Ui lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_Ui");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_Ui");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_Ui.v2");
    check_field_offset(lv, v3, 4, "BFu32ll_Sf_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_Ui, BFu32ll_Sf_Ui)
//============================================================================



static void Test_BFu32ll_Sf_Ul()
{
  {
    init_simple_test("BFu32ll_Sf_Ul");
    static STRUCT_IF_C BFu32ll_Sf_Ul lv;
    check2(sizeof(lv), 12, "sizeof(BFu32ll_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_Ul");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_Ul");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_Ul.v2");
    check_field_offset(lv, v3, 4, "BFu32ll_Sf_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_Ul, BFu32ll_Sf_Ul)
//============================================================================



static void Test_BFu32ll_Sf_Us()
{
  {
    init_simple_test("BFu32ll_Sf_Us");
    static STRUCT_IF_C BFu32ll_Sf_Us lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_Us)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_Us");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_Us");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_Us.v2");
    check_field_offset(lv, v3, 4, "BFu32ll_Sf_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_Us, BFu32ll_Sf_Us)
//============================================================================



static void Test_BFu32ll_Sf_Vp()
{
  {
    init_simple_test("BFu32ll_Sf_Vp");
    static STRUCT_IF_C BFu32ll_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32ll_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Sf_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Sf_Vp");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Sf_Vp");
    check_field_offset(lv, v2, 4, "BFu32ll_Sf_Vp.v2");
    check_field_offset(lv, v3, 4, "BFu32ll_Sf_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Sf_Vp, BFu32ll_Sf_Vp)
//============================================================================



static void Test_BFu32ll_Uc_Sf()
{
  {
    init_simple_test("BFu32ll_Uc_Sf");
    static STRUCT_IF_C BFu32ll_Uc_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Uc_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Uc_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Uc_Sf");
    check_field_offset(lv, v2, 4, "BFu32ll_Uc_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu32ll_Uc_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Uc_Sf, BFu32ll_Uc_Sf)
//============================================================================



static void Test_BFu32ll_Ui_Sf()
{
  {
    init_simple_test("BFu32ll_Ui_Sf");
    static STRUCT_IF_C BFu32ll_Ui_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Ui_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Ui_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Ui_Sf");
    check_field_offset(lv, v2, 4, "BFu32ll_Ui_Sf.v2");
    check_field_offset(lv, v3, 8, "BFu32ll_Ui_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Ui_Sf, BFu32ll_Ui_Sf)
//============================================================================



static void Test_BFu32ll_Ul_Sf()
{
  {
    init_simple_test("BFu32ll_Ul_Sf");
    static STRUCT_IF_C BFu32ll_Ul_Sf lv;
    check2(sizeof(lv), 12, "sizeof(BFu32ll_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Ul_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Ul_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Ul_Sf");
    check_field_offset(lv, v2, 4, "BFu32ll_Ul_Sf.v2");
    check_field_offset(lv, v3, 12, "BFu32ll_Ul_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Ul_Sf, BFu32ll_Ul_Sf)
//============================================================================



static void Test_BFu32ll_Us_Sf()
{
  {
    init_simple_test("BFu32ll_Us_Sf");
    static STRUCT_IF_C BFu32ll_Us_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Us_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Us_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Us_Sf");
    check_field_offset(lv, v2, 4, "BFu32ll_Us_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu32ll_Us_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Us_Sf, BFu32ll_Us_Sf)
//============================================================================



static void Test_BFu32ll_Vp_Sf()
{
  {
    init_simple_test("BFu32ll_Vp_Sf");
    static STRUCT_IF_C BFu32ll_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32ll_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Vp_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Vp_Sf");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Vp_Sf");
    check_field_offset(lv, v2, 4, "BFu32ll_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "BFu32ll_Vp_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu32ll_Vp_Sf, BFu32ll_Vp_Sf)
//============================================================================



static void Test_BFu33_BFu15i_Sf()
{
  {
    init_simple_test("BFu33_BFu15i_Sf");
    static STRUCT_IF_C BFu33_BFu15i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu15i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu15i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu15i_Sf");
    set_bf_and_test(lv, v2, 4, 1, 15, 1, "BFu33_BFu15i_Sf");
    set_bf_and_test(lv, v2, 4, 1, 15, hide_ull(1LL<<14), "BFu33_BFu15i_Sf");
    check_field_offset(lv, v3, 6, "BFu33_BFu15i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_BFu15i_Sf, BFu33_BFu15i_Sf)
//============================================================================



static void Test_BFu33_BFu15ll_Sf()
{
  {
    init_simple_test("BFu33_BFu15ll_Sf");
    static STRUCT_IF_C BFu33_BFu15ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu15ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu15ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 4, 1, 15, 1, "BFu33_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 4, 1, 15, hide_ull(1LL<<14), "BFu33_BFu15ll_Sf");
    check_field_offset(lv, v3, 6, "BFu33_BFu15ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_BFu15ll_Sf, BFu33_BFu15ll_Sf)
//============================================================================



static void Test_BFu33_BFu15s_Sf()
{
  {
    init_simple_test("BFu33_BFu15s_Sf");
    static STRUCT_IF_C BFu33_BFu15s_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu15s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu15s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu15s_Sf");
    set_bf_and_test(lv, v2, 4, 1, 15, 1, "BFu33_BFu15s_Sf");
    set_bf_and_test(lv, v2, 4, 1, 15, hide_ull(1LL<<14), "BFu33_BFu15s_Sf");
    check_field_offset(lv, v3, 6, "BFu33_BFu15s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_BFu15s_Sf, BFu33_BFu15s_Sf)
//============================================================================



static void Test_BFu33_BFu16i_Sf()
{
  {
    init_simple_test("BFu33_BFu16i_Sf");
    static STRUCT_IF_C BFu33_BFu16i_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu16i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu16i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu16i_Sf");
    set_bf_and_test(lv, v2, 4, 1, 16, 1, "BFu33_BFu16i_Sf");
    set_bf_and_test(lv, v2, 4, 1, 16, hide_ull(1LL<<15), "BFu33_BFu16i_Sf");
    check_field_offset(lv, v3, 7, "BFu33_BFu16i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_BFu16i_Sf, BFu33_BFu16i_Sf)
//============================================================================



static void Test_BFu33_BFu16ll_Sf()
{
  {
    init_simple_test("BFu33_BFu16ll_Sf");
    static STRUCT_IF_C BFu33_BFu16ll_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu16ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu16ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 4, 1, 16, 1, "BFu33_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 4, 1, 16, hide_ull(1LL<<15), "BFu33_BFu16ll_Sf");
    check_field_offset(lv, v3, 7, "BFu33_BFu16ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_BFu16ll_Sf, BFu33_BFu16ll_Sf)
//============================================================================



static void Test_BFu33_BFu16s_Sf()
{
  {
    init_simple_test("BFu33_BFu16s_Sf");
    static STRUCT_IF_C BFu33_BFu16s_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu16s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu16s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu16s_Sf");
    set_bf_and_test(lv, v2, 4, 1, 16, 1, "BFu33_BFu16s_Sf");
    set_bf_and_test(lv, v2, 4, 1, 16, hide_ull(1LL<<15), "BFu33_BFu16s_Sf");
    check_field_offset(lv, v3, 7, "BFu33_BFu16s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_BFu16s_Sf, BFu33_BFu16s_Sf)
//============================================================================



static void Test_BFu33_BFu17i_Sf()
{
  {
    init_simple_test("BFu33_BFu17i_Sf");
    static STRUCT_IF_C BFu33_BFu17i_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu17i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu17i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu17i_Sf");
    set_bf_and_test(lv, v2, 4, 1, 17, 1, "BFu33_BFu17i_Sf");
    set_bf_and_test(lv, v2, 4, 1, 17, hide_ull(1LL<<16), "BFu33_BFu17i_Sf");
    check_field_offset(lv, v3, 7, "BFu33_BFu17i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_BFu17i_Sf, BFu33_BFu17i_Sf)
//============================================================================



static void Test_BFu33_BFu17ll_Sf()
{
  {
    init_simple_test("BFu33_BFu17ll_Sf");
    static STRUCT_IF_C BFu33_BFu17ll_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu17ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu17ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 4, 1, 17, 1, "BFu33_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 4, 1, 17, hide_ull(1LL<<16), "BFu33_BFu17ll_Sf");
    check_field_offset(lv, v3, 7, "BFu33_BFu17ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_BFu17ll_Sf, BFu33_BFu17ll_Sf)
//============================================================================



static void Test_BFu33_BFu1c_Sf()
{
  {
    init_simple_test("BFu33_BFu1c_Sf");
    static STRUCT_IF_C BFu33_BFu1c_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu33_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu1c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu1c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu1c_Sf");
    set_bf_and_test(lv, v2, 4, 1, 1, 1, "BFu33_BFu1c_Sf");
    check_field_offset(lv, v3, 5, "BFu33_BFu1c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_BFu1c_Sf, BFu33_BFu1c_Sf)
//============================================================================



static void Test_BFu33_BFu1i_Sf()
{
  {
    init_simple_test("BFu33_BFu1i_Sf");
    static STRUCT_IF_C BFu33_BFu1i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu33_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu1i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu1i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu1i_Sf");
    set_bf_and_test(lv, v2, 4, 1, 1, 1, "BFu33_BFu1i_Sf");
    check_field_offset(lv, v3, 5, "BFu33_BFu1i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_BFu1i_Sf, BFu33_BFu1i_Sf)
//============================================================================



static void Test_BFu33_BFu1ll_Sf()
{
  {
    init_simple_test("BFu33_BFu1ll_Sf");
    static STRUCT_IF_C BFu33_BFu1ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu33_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu1ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu1ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu1ll_Sf");
    set_bf_and_test(lv, v2, 4, 1, 1, 1, "BFu33_BFu1ll_Sf");
    check_field_offset(lv, v3, 5, "BFu33_BFu1ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_BFu1ll_Sf, BFu33_BFu1ll_Sf)
//============================================================================



static void Test_BFu33_BFu1s_Sf()
{
  {
    init_simple_test("BFu33_BFu1s_Sf");
    static STRUCT_IF_C BFu33_BFu1s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu33_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu1s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu1s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu1s_Sf");
    set_bf_and_test(lv, v2, 4, 1, 1, 1, "BFu33_BFu1s_Sf");
    check_field_offset(lv, v3, 5, "BFu33_BFu1s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_BFu1s_Sf, BFu33_BFu1s_Sf)
//============================================================================



static void Test_BFu33_BFu31i_Sf()
{
  {
    init_simple_test("BFu33_BFu31i_Sf");
    static STRUCT_IF_C BFu33_BFu31i_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu33_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu31i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu31i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu31i_Sf");
    set_bf_and_test(lv, v2, 4, 1, 31, 1, "BFu33_BFu31i_Sf");
    set_bf_and_test(lv, v2, 4, 1, 31, hide_ull(1LL<<30), "BFu33_BFu31i_Sf");
    check_field_offset(lv, v3, 8, "BFu33_BFu31i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_BFu31i_Sf, BFu33_BFu31i_Sf)
//============================================================================



static void Test_BFu33_BFu31ll_Sf()
{
  {
    init_simple_test("BFu33_BFu31ll_Sf");
    static STRUCT_IF_C BFu33_BFu31ll_Sf lv;
    check2(sizeof(lv), 8, "sizeof(BFu33_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu31ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu31ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 4, 1, 31, 1, "BFu33_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 4, 1, 31, hide_ull(1LL<<30), "BFu33_BFu31ll_Sf");
    check_field_offset(lv, v3, 8, "BFu33_BFu31ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_BFu31ll_Sf, BFu33_BFu31ll_Sf)
//============================================================================



static void Test_BFu33_BFu32i_Sf()
{
  {
    init_simple_test("BFu33_BFu32i_Sf");
    static STRUCT_IF_C BFu33_BFu32i_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu33_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu32i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu32i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu32i_Sf");
    set_bf_and_test(lv, v2, 4, 1, 32, 1, "BFu33_BFu32i_Sf");
    set_bf_and_test(lv, v2, 4, 1, 32, hide_ull(1LL<<31), "BFu33_BFu32i_Sf");
    check_field_offset(lv, v3, 9, "BFu33_BFu32i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_BFu32i_Sf, BFu33_BFu32i_Sf)
//============================================================================



static void Test_BFu33_BFu32ll_Sf()
{
  {
    init_simple_test("BFu33_BFu32ll_Sf");
    static STRUCT_IF_C BFu33_BFu32ll_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu33_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu32ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu32ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 4, 1, 32, 1, "BFu33_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 4, 1, 32, hide_ull(1LL<<31), "BFu33_BFu32ll_Sf");
    check_field_offset(lv, v3, 9, "BFu33_BFu32ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_BFu32ll_Sf, BFu33_BFu32ll_Sf)
//============================================================================



static void Test_BFu33_BFu33_Sf()
{
  {
    init_simple_test("BFu33_BFu33_Sf");
    static STRUCT_IF_C BFu33_BFu33_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu33_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu33_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu33_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu33_Sf");
    set_bf_and_test(lv, v2, 4, 1, 33, 1, "BFu33_BFu33_Sf");
    set_bf_and_test(lv, v2, 4, 1, 33, hide_ull(1LL<<32), "BFu33_BFu33_Sf");
    check_field_offset(lv, v3, 9, "BFu33_BFu33_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_BFu33_Sf, BFu33_BFu33_Sf)
//============================================================================



static void Test_BFu33_BFu7c_Sf()
{
  {
    init_simple_test("BFu33_BFu7c_Sf");
    static STRUCT_IF_C BFu33_BFu7c_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu33_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu7c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu7c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu7c_Sf");
    set_bf_and_test(lv, v2, 4, 1, 7, 1, "BFu33_BFu7c_Sf");
    set_bf_and_test(lv, v2, 4, 1, 7, hide_ull(1LL<<6), "BFu33_BFu7c_Sf");
    check_field_offset(lv, v3, 5, "BFu33_BFu7c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_BFu7c_Sf, BFu33_BFu7c_Sf)
//============================================================================



static void Test_BFu33_BFu7i_Sf()
{
  {
    init_simple_test("BFu33_BFu7i_Sf");
    static STRUCT_IF_C BFu33_BFu7i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu33_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu7i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu7i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu7i_Sf");
    set_bf_and_test(lv, v2, 4, 1, 7, 1, "BFu33_BFu7i_Sf");
    set_bf_and_test(lv, v2, 4, 1, 7, hide_ull(1LL<<6), "BFu33_BFu7i_Sf");
    check_field_offset(lv, v3, 5, "BFu33_BFu7i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_BFu7i_Sf, BFu33_BFu7i_Sf)
//============================================================================



static void Test_BFu33_BFu7ll_Sf()
{
  {
    init_simple_test("BFu33_BFu7ll_Sf");
    static STRUCT_IF_C BFu33_BFu7ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu33_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu7ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu7ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 4, 1, 7, 1, "BFu33_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 4, 1, 7, hide_ull(1LL<<6), "BFu33_BFu7ll_Sf");
    check_field_offset(lv, v3, 5, "BFu33_BFu7ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_BFu7ll_Sf, BFu33_BFu7ll_Sf)
//============================================================================



static void Test_BFu33_BFu7s_Sf()
{
  {
    init_simple_test("BFu33_BFu7s_Sf");
    static STRUCT_IF_C BFu33_BFu7s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu33_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu7s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu7s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu7s_Sf");
    set_bf_and_test(lv, v2, 4, 1, 7, 1, "BFu33_BFu7s_Sf");
    set_bf_and_test(lv, v2, 4, 1, 7, hide_ull(1LL<<6), "BFu33_BFu7s_Sf");
    check_field_offset(lv, v3, 5, "BFu33_BFu7s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_BFu7s_Sf, BFu33_BFu7s_Sf)
//============================================================================



static void Test_BFu33_BFu8c_Sf()
{
  {
    init_simple_test("BFu33_BFu8c_Sf");
    static STRUCT_IF_C BFu33_BFu8c_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu8c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu8c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu8c_Sf");
    set_bf_and_test(lv, v2, 4, 1, 8, 1, "BFu33_BFu8c_Sf");
    set_bf_and_test(lv, v2, 4, 1, 8, hide_ull(1LL<<7), "BFu33_BFu8c_Sf");
    check_field_offset(lv, v3, 6, "BFu33_BFu8c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_BFu8c_Sf, BFu33_BFu8c_Sf)
//============================================================================



static void Test_BFu33_BFu8i_Sf()
{
  {
    init_simple_test("BFu33_BFu8i_Sf");
    static STRUCT_IF_C BFu33_BFu8i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu8i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu8i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu8i_Sf");
    set_bf_and_test(lv, v2, 4, 1, 8, 1, "BFu33_BFu8i_Sf");
    set_bf_and_test(lv, v2, 4, 1, 8, hide_ull(1LL<<7), "BFu33_BFu8i_Sf");
    check_field_offset(lv, v3, 6, "BFu33_BFu8i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_BFu8i_Sf, BFu33_BFu8i_Sf)
//============================================================================



static void Test_BFu33_BFu8ll_Sf()
{
  {
    init_simple_test("BFu33_BFu8ll_Sf");
    static STRUCT_IF_C BFu33_BFu8ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu8ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu8ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 4, 1, 8, 1, "BFu33_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 4, 1, 8, hide_ull(1LL<<7), "BFu33_BFu8ll_Sf");
    check_field_offset(lv, v3, 6, "BFu33_BFu8ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_BFu8ll_Sf, BFu33_BFu8ll_Sf)
//============================================================================



static void Test_BFu33_BFu8s_Sf()
{
  {
    init_simple_test("BFu33_BFu8s_Sf");
    static STRUCT_IF_C BFu33_BFu8s_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu8s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu8s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu8s_Sf");
    set_bf_and_test(lv, v2, 4, 1, 8, 1, "BFu33_BFu8s_Sf");
    set_bf_and_test(lv, v2, 4, 1, 8, hide_ull(1LL<<7), "BFu33_BFu8s_Sf");
    check_field_offset(lv, v3, 6, "BFu33_BFu8s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_BFu8s_Sf, BFu33_BFu8s_Sf)
//============================================================================



static void Test_BFu33_BFu9i_Sf()
{
  {
    init_simple_test("BFu33_BFu9i_Sf");
    static STRUCT_IF_C BFu33_BFu9i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu9i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu9i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu9i_Sf");
    set_bf_and_test(lv, v2, 4, 1, 9, 1, "BFu33_BFu9i_Sf");
    set_bf_and_test(lv, v2, 4, 1, 9, hide_ull(1LL<<8), "BFu33_BFu9i_Sf");
    check_field_offset(lv, v3, 6, "BFu33_BFu9i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_BFu9i_Sf, BFu33_BFu9i_Sf)
//============================================================================



static void Test_BFu33_BFu9ll_Sf()
{
  {
    init_simple_test("BFu33_BFu9ll_Sf");
    static STRUCT_IF_C BFu33_BFu9ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu9ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu9ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 4, 1, 9, 1, "BFu33_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 4, 1, 9, hide_ull(1LL<<8), "BFu33_BFu9ll_Sf");
    check_field_offset(lv, v3, 6, "BFu33_BFu9ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_BFu9ll_Sf, BFu33_BFu9ll_Sf)
//============================================================================



static void Test_BFu33_BFu9s_Sf()
{
  {
    init_simple_test("BFu33_BFu9s_Sf");
    static STRUCT_IF_C BFu33_BFu9s_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu9s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu9s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu9s_Sf");
    set_bf_and_test(lv, v2, 4, 1, 9, 1, "BFu33_BFu9s_Sf");
    set_bf_and_test(lv, v2, 4, 1, 9, hide_ull(1LL<<8), "BFu33_BFu9s_Sf");
    check_field_offset(lv, v3, 6, "BFu33_BFu9s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_BFu9s_Sf, BFu33_BFu9s_Sf)
//============================================================================



static void Test_BFu33_C_Sf()
{
  {
    init_simple_test("BFu33_C_Sf");
    static STRUCT_IF_C BFu33_C_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_C_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_C_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_C_Sf");
    check_field_offset(lv, v2, 5, "BFu33_C_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu33_C_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_C_Sf, BFu33_C_Sf)
//============================================================================



static void Test_BFu33_D_Sf()
{
  {
    init_simple_test("BFu33_D_Sf");
    static STRUCT_IF_C BFu33_D_Sf lv;
    check2(sizeof(lv), 13, "sizeof(BFu33_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_D_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_D_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_D_Sf");
    check_field_offset(lv, v2, 5, "BFu33_D_Sf.v2");
    check_field_offset(lv, v3, 13, "BFu33_D_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_D_Sf, BFu33_D_Sf)
//============================================================================



static void Test_BFu33_F_Sf()
{
  {
    init_simple_test("BFu33_F_Sf");
    static STRUCT_IF_C BFu33_F_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu33_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_F_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_F_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_F_Sf");
    check_field_offset(lv, v2, 5, "BFu33_F_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu33_F_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_F_Sf, BFu33_F_Sf)
//============================================================================



static void Test_BFu33_I_Sf()
{
  {
    init_simple_test("BFu33_I_Sf");
    static STRUCT_IF_C BFu33_I_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu33_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_I_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_I_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_I_Sf");
    check_field_offset(lv, v2, 5, "BFu33_I_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu33_I_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_I_Sf, BFu33_I_Sf)
//============================================================================



static void Test_BFu33_Ip_Sf()
{
  {
    init_simple_test("BFu33_Ip_Sf");
    static STRUCT_IF_C BFu33_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(BFu33_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Ip_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Ip_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Ip_Sf");
    check_field_offset(lv, v2, 5, "BFu33_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(13,9), "BFu33_Ip_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Ip_Sf, BFu33_Ip_Sf)
//============================================================================



static void Test_BFu33_L_Sf()
{
  {
    init_simple_test("BFu33_L_Sf");
    static STRUCT_IF_C BFu33_L_Sf lv;
    check2(sizeof(lv), 13, "sizeof(BFu33_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_L_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_L_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_L_Sf");
    check_field_offset(lv, v2, 5, "BFu33_L_Sf.v2");
    check_field_offset(lv, v3, 13, "BFu33_L_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_L_Sf, BFu33_L_Sf)
//============================================================================



static void Test_BFu33_S_Sf()
{
  {
    init_simple_test("BFu33_S_Sf");
    static STRUCT_IF_C BFu33_S_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_S_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_S_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_S_Sf");
    check_field_offset(lv, v2, 5, "BFu33_S_Sf.v2");
    check_field_offset(lv, v3, 7, "BFu33_S_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_S_Sf, BFu33_S_Sf)
//============================================================================



static void Test_BFu33_Sf()
{
  {
    init_simple_test("BFu33_Sf");
    static STRUCT_IF_C BFu33_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf");
    check_field_offset(lv, v2, 5, "BFu33_Sf.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf, BFu33_Sf)
//============================================================================



static void Test_BFu33_Sf_BFu15i()
{
  {
    init_simple_test("BFu33_Sf_BFu15i");
    static STRUCT_IF_C BFu33_Sf_BFu15i lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_BFu15i");
    check_field_offset(lv, v2, 5, "BFu33_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "BFu33_Sf_BFu15i");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "BFu33_Sf_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_BFu15i, BFu33_Sf_BFu15i)
//============================================================================



static void Test_BFu33_Sf_BFu15ll()
{
  {
    init_simple_test("BFu33_Sf_BFu15ll");
    static STRUCT_IF_C BFu33_Sf_BFu15ll lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_BFu15ll");
    check_field_offset(lv, v2, 5, "BFu33_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "BFu33_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "BFu33_Sf_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_BFu15ll, BFu33_Sf_BFu15ll)
//============================================================================



static void Test_BFu33_Sf_BFu15s()
{
  {
    init_simple_test("BFu33_Sf_BFu15s");
    static STRUCT_IF_C BFu33_Sf_BFu15s lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_BFu15s");
    check_field_offset(lv, v2, 5, "BFu33_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "BFu33_Sf_BFu15s");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "BFu33_Sf_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_BFu15s, BFu33_Sf_BFu15s)
//============================================================================



static void Test_BFu33_Sf_BFu16i()
{
  {
    init_simple_test("BFu33_Sf_BFu16i");
    static STRUCT_IF_C BFu33_Sf_BFu16i lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_BFu16i");
    check_field_offset(lv, v2, 5, "BFu33_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "BFu33_Sf_BFu16i");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "BFu33_Sf_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_BFu16i, BFu33_Sf_BFu16i)
//============================================================================



static void Test_BFu33_Sf_BFu16ll()
{
  {
    init_simple_test("BFu33_Sf_BFu16ll");
    static STRUCT_IF_C BFu33_Sf_BFu16ll lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_BFu16ll");
    check_field_offset(lv, v2, 5, "BFu33_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "BFu33_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "BFu33_Sf_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_BFu16ll, BFu33_Sf_BFu16ll)
//============================================================================



static void Test_BFu33_Sf_BFu16s()
{
  {
    init_simple_test("BFu33_Sf_BFu16s");
    static STRUCT_IF_C BFu33_Sf_BFu16s lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_BFu16s");
    check_field_offset(lv, v2, 5, "BFu33_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "BFu33_Sf_BFu16s");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "BFu33_Sf_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_BFu16s, BFu33_Sf_BFu16s)
//============================================================================



static void Test_BFu33_Sf_BFu17i()
{
  {
    init_simple_test("BFu33_Sf_BFu17i");
    static STRUCT_IF_C BFu33_Sf_BFu17i lv;
    check2(sizeof(lv), 8, "sizeof(BFu33_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_BFu17i");
    check_field_offset(lv, v2, 5, "BFu33_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 5, 0, 17, 1, "BFu33_Sf_BFu17i");
    set_bf_and_test(lv, v3, 5, 0, 17, hide_ull(1LL<<16), "BFu33_Sf_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_BFu17i, BFu33_Sf_BFu17i)
//============================================================================



static void Test_BFu33_Sf_BFu17ll()
{
  {
    init_simple_test("BFu33_Sf_BFu17ll");
    static STRUCT_IF_C BFu33_Sf_BFu17ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu33_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_BFu17ll");
    check_field_offset(lv, v2, 5, "BFu33_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 17, 1, "BFu33_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 5, 0, 17, hide_ull(1LL<<16), "BFu33_Sf_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_BFu17ll, BFu33_Sf_BFu17ll)
//============================================================================



static void Test_BFu33_Sf_BFu1c()
{
  {
    init_simple_test("BFu33_Sf_BFu1c");
    static STRUCT_IF_C BFu33_Sf_BFu1c lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_BFu1c");
    check_field_offset(lv, v2, 5, "BFu33_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "BFu33_Sf_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_BFu1c, BFu33_Sf_BFu1c)
//============================================================================



static void Test_BFu33_Sf_BFu1i()
{
  {
    init_simple_test("BFu33_Sf_BFu1i");
    static STRUCT_IF_C BFu33_Sf_BFu1i lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_BFu1i");
    check_field_offset(lv, v2, 5, "BFu33_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "BFu33_Sf_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_BFu1i, BFu33_Sf_BFu1i)
//============================================================================



static void Test_BFu33_Sf_BFu1ll()
{
  {
    init_simple_test("BFu33_Sf_BFu1ll");
    static STRUCT_IF_C BFu33_Sf_BFu1ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_BFu1ll");
    check_field_offset(lv, v2, 5, "BFu33_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "BFu33_Sf_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_BFu1ll, BFu33_Sf_BFu1ll)
//============================================================================



static void Test_BFu33_Sf_BFu1s()
{
  {
    init_simple_test("BFu33_Sf_BFu1s");
    static STRUCT_IF_C BFu33_Sf_BFu1s lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_BFu1s");
    check_field_offset(lv, v2, 5, "BFu33_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "BFu33_Sf_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_BFu1s, BFu33_Sf_BFu1s)
//============================================================================



static void Test_BFu33_Sf_BFu31i()
{
  {
    init_simple_test("BFu33_Sf_BFu31i");
    static STRUCT_IF_C BFu33_Sf_BFu31i lv;
    check2(sizeof(lv), 9, "sizeof(BFu33_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_BFu31i");
    check_field_offset(lv, v2, 5, "BFu33_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 5, 0, 31, 1, "BFu33_Sf_BFu31i");
    set_bf_and_test(lv, v3, 5, 0, 31, hide_ull(1LL<<30), "BFu33_Sf_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_BFu31i, BFu33_Sf_BFu31i)
//============================================================================



static void Test_BFu33_Sf_BFu31ll()
{
  {
    init_simple_test("BFu33_Sf_BFu31ll");
    static STRUCT_IF_C BFu33_Sf_BFu31ll lv;
    check2(sizeof(lv), 9, "sizeof(BFu33_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_BFu31ll");
    check_field_offset(lv, v2, 5, "BFu33_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 31, 1, "BFu33_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 5, 0, 31, hide_ull(1LL<<30), "BFu33_Sf_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_BFu31ll, BFu33_Sf_BFu31ll)
//============================================================================



static void Test_BFu33_Sf_BFu32i()
{
  {
    init_simple_test("BFu33_Sf_BFu32i");
    static STRUCT_IF_C BFu33_Sf_BFu32i lv;
    check2(sizeof(lv), 9, "sizeof(BFu33_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_BFu32i");
    check_field_offset(lv, v2, 5, "BFu33_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 5, 0, 32, 1, "BFu33_Sf_BFu32i");
    set_bf_and_test(lv, v3, 5, 0, 32, hide_ull(1LL<<31), "BFu33_Sf_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_BFu32i, BFu33_Sf_BFu32i)
//============================================================================



static void Test_BFu33_Sf_BFu32ll()
{
  {
    init_simple_test("BFu33_Sf_BFu32ll");
    static STRUCT_IF_C BFu33_Sf_BFu32ll lv;
    check2(sizeof(lv), 9, "sizeof(BFu33_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_BFu32ll");
    check_field_offset(lv, v2, 5, "BFu33_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 32, 1, "BFu33_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 5, 0, 32, hide_ull(1LL<<31), "BFu33_Sf_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_BFu32ll, BFu33_Sf_BFu32ll)
//============================================================================



static void Test_BFu33_Sf_BFu33()
{
  {
    init_simple_test("BFu33_Sf_BFu33");
    static STRUCT_IF_C BFu33_Sf_BFu33 lv;
    check2(sizeof(lv), 10, "sizeof(BFu33_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_BFu33");
    check_field_offset(lv, v2, 5, "BFu33_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 5, 0, 33, 1, "BFu33_Sf_BFu33");
    set_bf_and_test(lv, v3, 5, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_BFu33, BFu33_Sf_BFu33)
//============================================================================



static void Test_BFu33_Sf_BFu7c()
{
  {
    init_simple_test("BFu33_Sf_BFu7c");
    static STRUCT_IF_C BFu33_Sf_BFu7c lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_BFu7c");
    check_field_offset(lv, v2, 5, "BFu33_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "BFu33_Sf_BFu7c");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "BFu33_Sf_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_BFu7c, BFu33_Sf_BFu7c)
//============================================================================



static void Test_BFu33_Sf_BFu7i()
{
  {
    init_simple_test("BFu33_Sf_BFu7i");
    static STRUCT_IF_C BFu33_Sf_BFu7i lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_BFu7i");
    check_field_offset(lv, v2, 5, "BFu33_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "BFu33_Sf_BFu7i");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "BFu33_Sf_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_BFu7i, BFu33_Sf_BFu7i)
//============================================================================



static void Test_BFu33_Sf_BFu7ll()
{
  {
    init_simple_test("BFu33_Sf_BFu7ll");
    static STRUCT_IF_C BFu33_Sf_BFu7ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_BFu7ll");
    check_field_offset(lv, v2, 5, "BFu33_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "BFu33_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "BFu33_Sf_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_BFu7ll, BFu33_Sf_BFu7ll)
//============================================================================



static void Test_BFu33_Sf_BFu7s()
{
  {
    init_simple_test("BFu33_Sf_BFu7s");
    static STRUCT_IF_C BFu33_Sf_BFu7s lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_BFu7s");
    check_field_offset(lv, v2, 5, "BFu33_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "BFu33_Sf_BFu7s");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "BFu33_Sf_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_BFu7s, BFu33_Sf_BFu7s)
//============================================================================



static void Test_BFu33_Sf_BFu8c()
{
  {
    init_simple_test("BFu33_Sf_BFu8c");
    static STRUCT_IF_C BFu33_Sf_BFu8c lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_BFu8c");
    check_field_offset(lv, v2, 5, "BFu33_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "BFu33_Sf_BFu8c");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "BFu33_Sf_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_BFu8c, BFu33_Sf_BFu8c)
//============================================================================



static void Test_BFu33_Sf_BFu8i()
{
  {
    init_simple_test("BFu33_Sf_BFu8i");
    static STRUCT_IF_C BFu33_Sf_BFu8i lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_BFu8i");
    check_field_offset(lv, v2, 5, "BFu33_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "BFu33_Sf_BFu8i");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "BFu33_Sf_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_BFu8i, BFu33_Sf_BFu8i)
//============================================================================



static void Test_BFu33_Sf_BFu8ll()
{
  {
    init_simple_test("BFu33_Sf_BFu8ll");
    static STRUCT_IF_C BFu33_Sf_BFu8ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_BFu8ll");
    check_field_offset(lv, v2, 5, "BFu33_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "BFu33_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "BFu33_Sf_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_BFu8ll, BFu33_Sf_BFu8ll)
//============================================================================



static void Test_BFu33_Sf_BFu8s()
{
  {
    init_simple_test("BFu33_Sf_BFu8s");
    static STRUCT_IF_C BFu33_Sf_BFu8s lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_BFu8s");
    check_field_offset(lv, v2, 5, "BFu33_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "BFu33_Sf_BFu8s");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "BFu33_Sf_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_BFu8s, BFu33_Sf_BFu8s)
//============================================================================



static void Test_BFu33_Sf_BFu9i()
{
  {
    init_simple_test("BFu33_Sf_BFu9i");
    static STRUCT_IF_C BFu33_Sf_BFu9i lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_BFu9i");
    check_field_offset(lv, v2, 5, "BFu33_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "BFu33_Sf_BFu9i");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "BFu33_Sf_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_BFu9i, BFu33_Sf_BFu9i)
//============================================================================



static void Test_BFu33_Sf_BFu9ll()
{
  {
    init_simple_test("BFu33_Sf_BFu9ll");
    static STRUCT_IF_C BFu33_Sf_BFu9ll lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_BFu9ll");
    check_field_offset(lv, v2, 5, "BFu33_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "BFu33_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "BFu33_Sf_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_BFu9ll, BFu33_Sf_BFu9ll)
//============================================================================



static void Test_BFu33_Sf_BFu9s()
{
  {
    init_simple_test("BFu33_Sf_BFu9s");
    static STRUCT_IF_C BFu33_Sf_BFu9s lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_BFu9s");
    check_field_offset(lv, v2, 5, "BFu33_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "BFu33_Sf_BFu9s");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "BFu33_Sf_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_BFu9s, BFu33_Sf_BFu9s)
//============================================================================



static void Test_BFu33_Sf_C()
{
  {
    init_simple_test("BFu33_Sf_C");
    static STRUCT_IF_C BFu33_Sf_C lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_C)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_C");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_C");
    check_field_offset(lv, v2, 5, "BFu33_Sf_C.v2");
    check_field_offset(lv, v3, 5, "BFu33_Sf_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_C, BFu33_Sf_C)
//============================================================================



static void Test_BFu33_Sf_D()
{
  {
    init_simple_test("BFu33_Sf_D");
    static STRUCT_IF_C BFu33_Sf_D lv;
    check2(sizeof(lv), 13, "sizeof(BFu33_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_D)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_D");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_D");
    check_field_offset(lv, v2, 5, "BFu33_Sf_D.v2");
    check_field_offset(lv, v3, 5, "BFu33_Sf_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_D, BFu33_Sf_D)
//============================================================================



static void Test_BFu33_Sf_F()
{
  {
    init_simple_test("BFu33_Sf_F");
    static STRUCT_IF_C BFu33_Sf_F lv;
    check2(sizeof(lv), 9, "sizeof(BFu33_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_F)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_F");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_F");
    check_field_offset(lv, v2, 5, "BFu33_Sf_F.v2");
    check_field_offset(lv, v3, 5, "BFu33_Sf_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_F, BFu33_Sf_F)
//============================================================================



static void Test_BFu33_Sf_I()
{
  {
    init_simple_test("BFu33_Sf_I");
    static STRUCT_IF_C BFu33_Sf_I lv;
    check2(sizeof(lv), 9, "sizeof(BFu33_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_I)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_I");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_I");
    check_field_offset(lv, v2, 5, "BFu33_Sf_I.v2");
    check_field_offset(lv, v3, 5, "BFu33_Sf_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_I, BFu33_Sf_I)
//============================================================================



static void Test_BFu33_Sf_Ip()
{
  {
    init_simple_test("BFu33_Sf_Ip");
    static STRUCT_IF_C BFu33_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(BFu33_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_Ip");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_Ip");
    check_field_offset(lv, v2, 5, "BFu33_Sf_Ip.v2");
    check_field_offset(lv, v3, 5, "BFu33_Sf_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_Ip, BFu33_Sf_Ip)
//============================================================================



static void Test_BFu33_Sf_L()
{
  {
    init_simple_test("BFu33_Sf_L");
    static STRUCT_IF_C BFu33_Sf_L lv;
    check2(sizeof(lv), 13, "sizeof(BFu33_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_L)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_L");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_L");
    check_field_offset(lv, v2, 5, "BFu33_Sf_L.v2");
    check_field_offset(lv, v3, 5, "BFu33_Sf_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_L, BFu33_Sf_L)
//============================================================================



static void Test_BFu33_Sf_S()
{
  {
    init_simple_test("BFu33_Sf_S");
    static STRUCT_IF_C BFu33_Sf_S lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_S)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_S");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_S");
    check_field_offset(lv, v2, 5, "BFu33_Sf_S.v2");
    check_field_offset(lv, v3, 5, "BFu33_Sf_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_S, BFu33_Sf_S)
//============================================================================



static void Test_BFu33_Sf_Sf()
{
  {
    init_simple_test("BFu33_Sf_Sf");
    static STRUCT_IF_C BFu33_Sf_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu33_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_Sf");
    check_field_offset(lv, v2, 5, "BFu33_Sf_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu33_Sf_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_Sf, BFu33_Sf_Sf)
//============================================================================



static void Test_BFu33_Sf_Uc()
{
  {
    init_simple_test("BFu33_Sf_Uc");
    static STRUCT_IF_C BFu33_Sf_Uc lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_Uc");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_Uc");
    check_field_offset(lv, v2, 5, "BFu33_Sf_Uc.v2");
    check_field_offset(lv, v3, 5, "BFu33_Sf_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_Uc, BFu33_Sf_Uc)
//============================================================================



static void Test_BFu33_Sf_Ui()
{
  {
    init_simple_test("BFu33_Sf_Ui");
    static STRUCT_IF_C BFu33_Sf_Ui lv;
    check2(sizeof(lv), 9, "sizeof(BFu33_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_Ui");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_Ui");
    check_field_offset(lv, v2, 5, "BFu33_Sf_Ui.v2");
    check_field_offset(lv, v3, 5, "BFu33_Sf_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_Ui, BFu33_Sf_Ui)
//============================================================================



static void Test_BFu33_Sf_Ul()
{
  {
    init_simple_test("BFu33_Sf_Ul");
    static STRUCT_IF_C BFu33_Sf_Ul lv;
    check2(sizeof(lv), 13, "sizeof(BFu33_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_Ul");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_Ul");
    check_field_offset(lv, v2, 5, "BFu33_Sf_Ul.v2");
    check_field_offset(lv, v3, 5, "BFu33_Sf_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_Ul, BFu33_Sf_Ul)
//============================================================================



static void Test_BFu33_Sf_Us()
{
  {
    init_simple_test("BFu33_Sf_Us");
    static STRUCT_IF_C BFu33_Sf_Us lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_Us)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_Us");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_Us");
    check_field_offset(lv, v2, 5, "BFu33_Sf_Us.v2");
    check_field_offset(lv, v3, 5, "BFu33_Sf_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_Us, BFu33_Sf_Us)
//============================================================================



static void Test_BFu33_Sf_Vp()
{
  {
    init_simple_test("BFu33_Sf_Vp");
    static STRUCT_IF_C BFu33_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(BFu33_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Sf_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Sf_Vp");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Sf_Vp");
    check_field_offset(lv, v2, 5, "BFu33_Sf_Vp.v2");
    check_field_offset(lv, v3, 5, "BFu33_Sf_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Sf_Vp, BFu33_Sf_Vp)
//============================================================================



static void Test_BFu33_Uc_Sf()
{
  {
    init_simple_test("BFu33_Uc_Sf");
    static STRUCT_IF_C BFu33_Uc_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Uc_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Uc_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Uc_Sf");
    check_field_offset(lv, v2, 5, "BFu33_Uc_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu33_Uc_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Uc_Sf, BFu33_Uc_Sf)
//============================================================================



static void Test_BFu33_Ui_Sf()
{
  {
    init_simple_test("BFu33_Ui_Sf");
    static STRUCT_IF_C BFu33_Ui_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu33_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Ui_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Ui_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Ui_Sf");
    check_field_offset(lv, v2, 5, "BFu33_Ui_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu33_Ui_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Ui_Sf, BFu33_Ui_Sf)
//============================================================================



static void Test_BFu33_Ul_Sf()
{
  {
    init_simple_test("BFu33_Ul_Sf");
    static STRUCT_IF_C BFu33_Ul_Sf lv;
    check2(sizeof(lv), 13, "sizeof(BFu33_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Ul_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Ul_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Ul_Sf");
    check_field_offset(lv, v2, 5, "BFu33_Ul_Sf.v2");
    check_field_offset(lv, v3, 13, "BFu33_Ul_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Ul_Sf, BFu33_Ul_Sf)
//============================================================================



static void Test_BFu33_Us_Sf()
{
  {
    init_simple_test("BFu33_Us_Sf");
    static STRUCT_IF_C BFu33_Us_Sf lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Us_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Us_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Us_Sf");
    check_field_offset(lv, v2, 5, "BFu33_Us_Sf.v2");
    check_field_offset(lv, v3, 7, "BFu33_Us_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Us_Sf, BFu33_Us_Sf)
//============================================================================



static void Test_BFu33_Vp_Sf()
{
  {
    init_simple_test("BFu33_Vp_Sf");
    static STRUCT_IF_C BFu33_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(BFu33_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Vp_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Vp_Sf");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Vp_Sf");
    check_field_offset(lv, v2, 5, "BFu33_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(13,9), "BFu33_Vp_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu33_Vp_Sf, BFu33_Vp_Sf)
//============================================================================



static void Test_BFu7c_BFu15i_Sf()
{
  {
    init_simple_test("BFu7c_BFu15i_Sf");
    static STRUCT_IF_C BFu7c_BFu15i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu15i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu15i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu15i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7c_BFu15i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7c_BFu15i_Sf");
    check_field_offset(lv, v3, 3, "BFu7c_BFu15i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_BFu15i_Sf, BFu7c_BFu15i_Sf)
//============================================================================



static void Test_BFu7c_BFu15ll_Sf()
{
  {
    init_simple_test("BFu7c_BFu15ll_Sf");
    static STRUCT_IF_C BFu7c_BFu15ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu15ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu15ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7c_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7c_BFu15ll_Sf");
    check_field_offset(lv, v3, 3, "BFu7c_BFu15ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_BFu15ll_Sf, BFu7c_BFu15ll_Sf)
//============================================================================



static void Test_BFu7c_BFu15s_Sf()
{
  {
    init_simple_test("BFu7c_BFu15s_Sf");
    static STRUCT_IF_C BFu7c_BFu15s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu15s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu15s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu15s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7c_BFu15s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7c_BFu15s_Sf");
    check_field_offset(lv, v3, 3, "BFu7c_BFu15s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_BFu15s_Sf, BFu7c_BFu15s_Sf)
//============================================================================



static void Test_BFu7c_BFu16i_Sf()
{
  {
    init_simple_test("BFu7c_BFu16i_Sf");
    static STRUCT_IF_C BFu7c_BFu16i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu16i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu16i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu16i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7c_BFu16i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7c_BFu16i_Sf");
    check_field_offset(lv, v3, 3, "BFu7c_BFu16i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_BFu16i_Sf, BFu7c_BFu16i_Sf)
//============================================================================



static void Test_BFu7c_BFu16ll_Sf()
{
  {
    init_simple_test("BFu7c_BFu16ll_Sf");
    static STRUCT_IF_C BFu7c_BFu16ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu16ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu16ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7c_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7c_BFu16ll_Sf");
    check_field_offset(lv, v3, 3, "BFu7c_BFu16ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_BFu16ll_Sf, BFu7c_BFu16ll_Sf)
//============================================================================



static void Test_BFu7c_BFu16s_Sf()
{
  {
    init_simple_test("BFu7c_BFu16s_Sf");
    static STRUCT_IF_C BFu7c_BFu16s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu16s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu16s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu16s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7c_BFu16s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7c_BFu16s_Sf");
    check_field_offset(lv, v3, 3, "BFu7c_BFu16s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_BFu16s_Sf, BFu7c_BFu16s_Sf)
//============================================================================



static void Test_BFu7c_BFu17i_Sf()
{
  {
    init_simple_test("BFu7c_BFu17i_Sf");
    static STRUCT_IF_C BFu7c_BFu17i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu17i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu17i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu17i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "BFu7c_BFu17i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "BFu7c_BFu17i_Sf");
    check_field_offset(lv, v3, 3, "BFu7c_BFu17i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_BFu17i_Sf, BFu7c_BFu17i_Sf)
//============================================================================



static void Test_BFu7c_BFu17ll_Sf()
{
  {
    init_simple_test("BFu7c_BFu17ll_Sf");
    static STRUCT_IF_C BFu7c_BFu17ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu17ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu17ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "BFu7c_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "BFu7c_BFu17ll_Sf");
    check_field_offset(lv, v3, 3, "BFu7c_BFu17ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_BFu17ll_Sf, BFu7c_BFu17ll_Sf)
//============================================================================



static void Test_BFu7c_BFu1c_Sf()
{
  {
    init_simple_test("BFu7c_BFu1c_Sf");
    static STRUCT_IF_C BFu7c_BFu1c_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu7c_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu1c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu1c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu1c_Sf");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7c_BFu1c_Sf");
    check_field_offset(lv, v3, 1, "BFu7c_BFu1c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_BFu1c_Sf, BFu7c_BFu1c_Sf)
//============================================================================



static void Test_BFu7c_BFu1i_Sf()
{
  {
    init_simple_test("BFu7c_BFu1i_Sf");
    static STRUCT_IF_C BFu7c_BFu1i_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu7c_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu1i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu1i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu1i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7c_BFu1i_Sf");
    check_field_offset(lv, v3, 1, "BFu7c_BFu1i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_BFu1i_Sf, BFu7c_BFu1i_Sf)
//============================================================================



static void Test_BFu7c_BFu1ll_Sf()
{
  {
    init_simple_test("BFu7c_BFu1ll_Sf");
    static STRUCT_IF_C BFu7c_BFu1ll_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu7c_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu1ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu1ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu1ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7c_BFu1ll_Sf");
    check_field_offset(lv, v3, 1, "BFu7c_BFu1ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_BFu1ll_Sf, BFu7c_BFu1ll_Sf)
//============================================================================



static void Test_BFu7c_BFu1s_Sf()
{
  {
    init_simple_test("BFu7c_BFu1s_Sf");
    static STRUCT_IF_C BFu7c_BFu1s_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu7c_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu1s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu1s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu1s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7c_BFu1s_Sf");
    check_field_offset(lv, v3, 1, "BFu7c_BFu1s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_BFu1s_Sf, BFu7c_BFu1s_Sf)
//============================================================================



static void Test_BFu7c_BFu31i_Sf()
{
  {
    init_simple_test("BFu7c_BFu31i_Sf");
    static STRUCT_IF_C BFu7c_BFu31i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7c_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu31i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu31i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu31i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "BFu7c_BFu31i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "BFu7c_BFu31i_Sf");
    check_field_offset(lv, v3, 5, "BFu7c_BFu31i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_BFu31i_Sf, BFu7c_BFu31i_Sf)
//============================================================================



static void Test_BFu7c_BFu31ll_Sf()
{
  {
    init_simple_test("BFu7c_BFu31ll_Sf");
    static STRUCT_IF_C BFu7c_BFu31ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7c_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu31ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu31ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "BFu7c_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "BFu7c_BFu31ll_Sf");
    check_field_offset(lv, v3, 5, "BFu7c_BFu31ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_BFu31ll_Sf, BFu7c_BFu31ll_Sf)
//============================================================================



static void Test_BFu7c_BFu32i_Sf()
{
  {
    init_simple_test("BFu7c_BFu32i_Sf");
    static STRUCT_IF_C BFu7c_BFu32i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7c_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu32i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu32i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu32i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "BFu7c_BFu32i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "BFu7c_BFu32i_Sf");
    check_field_offset(lv, v3, 5, "BFu7c_BFu32i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_BFu32i_Sf, BFu7c_BFu32i_Sf)
//============================================================================



static void Test_BFu7c_BFu32ll_Sf()
{
  {
    init_simple_test("BFu7c_BFu32ll_Sf");
    static STRUCT_IF_C BFu7c_BFu32ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7c_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu32ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu32ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "BFu7c_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "BFu7c_BFu32ll_Sf");
    check_field_offset(lv, v3, 5, "BFu7c_BFu32ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_BFu32ll_Sf, BFu7c_BFu32ll_Sf)
//============================================================================



static void Test_BFu7c_BFu33_Sf()
{
  {
    init_simple_test("BFu7c_BFu33_Sf");
    static STRUCT_IF_C BFu7c_BFu33_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7c_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu33_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu33_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu33_Sf");
    set_bf_and_test(lv, v2, 0, 7, 33, 1, "BFu7c_BFu33_Sf");
    set_bf_and_test(lv, v2, 0, 7, 33, hide_ull(1LL<<32), "BFu7c_BFu33_Sf");
    check_field_offset(lv, v3, 5, "BFu7c_BFu33_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_BFu33_Sf, BFu7c_BFu33_Sf)
//============================================================================



static void Test_BFu7c_BFu7c_Sf()
{
  {
    init_simple_test("BFu7c_BFu7c_Sf");
    static STRUCT_IF_C BFu7c_BFu7c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu7c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu7c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu7c_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7c_BFu7c_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7c_BFu7c_Sf");
    check_field_offset(lv, v3, 2, "BFu7c_BFu7c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_BFu7c_Sf, BFu7c_BFu7c_Sf)
//============================================================================



static void Test_BFu7c_BFu7i_Sf()
{
  {
    init_simple_test("BFu7c_BFu7i_Sf");
    static STRUCT_IF_C BFu7c_BFu7i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu7i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu7i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu7i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7c_BFu7i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7c_BFu7i_Sf");
    check_field_offset(lv, v3, 2, "BFu7c_BFu7i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_BFu7i_Sf, BFu7c_BFu7i_Sf)
//============================================================================



static void Test_BFu7c_BFu7ll_Sf()
{
  {
    init_simple_test("BFu7c_BFu7ll_Sf");
    static STRUCT_IF_C BFu7c_BFu7ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu7ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu7ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7c_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7c_BFu7ll_Sf");
    check_field_offset(lv, v3, 2, "BFu7c_BFu7ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_BFu7ll_Sf, BFu7c_BFu7ll_Sf)
//============================================================================



static void Test_BFu7c_BFu7s_Sf()
{
  {
    init_simple_test("BFu7c_BFu7s_Sf");
    static STRUCT_IF_C BFu7c_BFu7s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu7s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu7s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu7s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7c_BFu7s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7c_BFu7s_Sf");
    check_field_offset(lv, v3, 2, "BFu7c_BFu7s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_BFu7s_Sf, BFu7c_BFu7s_Sf)
//============================================================================



static void Test_BFu7c_BFu8c_Sf()
{
  {
    init_simple_test("BFu7c_BFu8c_Sf");
    static STRUCT_IF_C BFu7c_BFu8c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu8c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu8c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu8c_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7c_BFu8c_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7c_BFu8c_Sf");
    check_field_offset(lv, v3, 2, "BFu7c_BFu8c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_BFu8c_Sf, BFu7c_BFu8c_Sf)
//============================================================================



static void Test_BFu7c_BFu8i_Sf()
{
  {
    init_simple_test("BFu7c_BFu8i_Sf");
    static STRUCT_IF_C BFu7c_BFu8i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu8i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu8i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu8i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7c_BFu8i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7c_BFu8i_Sf");
    check_field_offset(lv, v3, 2, "BFu7c_BFu8i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_BFu8i_Sf, BFu7c_BFu8i_Sf)
//============================================================================



static void Test_BFu7c_BFu8ll_Sf()
{
  {
    init_simple_test("BFu7c_BFu8ll_Sf");
    static STRUCT_IF_C BFu7c_BFu8ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu8ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu8ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7c_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7c_BFu8ll_Sf");
    check_field_offset(lv, v3, 2, "BFu7c_BFu8ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_BFu8ll_Sf, BFu7c_BFu8ll_Sf)
//============================================================================



static void Test_BFu7c_BFu8s_Sf()
{
  {
    init_simple_test("BFu7c_BFu8s_Sf");
    static STRUCT_IF_C BFu7c_BFu8s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu8s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu8s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu8s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7c_BFu8s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7c_BFu8s_Sf");
    check_field_offset(lv, v3, 2, "BFu7c_BFu8s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_BFu8s_Sf, BFu7c_BFu8s_Sf)
//============================================================================



static void Test_BFu7c_BFu9i_Sf()
{
  {
    init_simple_test("BFu7c_BFu9i_Sf");
    static STRUCT_IF_C BFu7c_BFu9i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu9i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu9i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu9i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "BFu7c_BFu9i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "BFu7c_BFu9i_Sf");
    check_field_offset(lv, v3, 2, "BFu7c_BFu9i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_BFu9i_Sf, BFu7c_BFu9i_Sf)
//============================================================================



static void Test_BFu7c_BFu9ll_Sf()
{
  {
    init_simple_test("BFu7c_BFu9ll_Sf");
    static STRUCT_IF_C BFu7c_BFu9ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu9ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu9ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "BFu7c_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "BFu7c_BFu9ll_Sf");
    check_field_offset(lv, v3, 2, "BFu7c_BFu9ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_BFu9ll_Sf, BFu7c_BFu9ll_Sf)
//============================================================================



static void Test_BFu7c_BFu9s_Sf()
{
  {
    init_simple_test("BFu7c_BFu9s_Sf");
    static STRUCT_IF_C BFu7c_BFu9s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu9s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu9s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu9s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "BFu7c_BFu9s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "BFu7c_BFu9s_Sf");
    check_field_offset(lv, v3, 2, "BFu7c_BFu9s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_BFu9s_Sf, BFu7c_BFu9s_Sf)
//============================================================================



static void Test_BFu7c_C_Sf()
{
  {
    init_simple_test("BFu7c_C_Sf");
    static STRUCT_IF_C BFu7c_C_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_C_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_C_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_C_Sf");
    check_field_offset(lv, v2, 1, "BFu7c_C_Sf.v2");
    check_field_offset(lv, v3, 2, "BFu7c_C_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_C_Sf, BFu7c_C_Sf)
//============================================================================



static void Test_BFu7c_D_Sf()
{
  {
    init_simple_test("BFu7c_D_Sf");
    static STRUCT_IF_C BFu7c_D_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu7c_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_D_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_D_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_D_Sf");
    check_field_offset(lv, v2, 1, "BFu7c_D_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu7c_D_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_D_Sf, BFu7c_D_Sf)
//============================================================================



static void Test_BFu7c_F_Sf()
{
  {
    init_simple_test("BFu7c_F_Sf");
    static STRUCT_IF_C BFu7c_F_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7c_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_F_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_F_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_F_Sf");
    check_field_offset(lv, v2, 1, "BFu7c_F_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu7c_F_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_F_Sf, BFu7c_F_Sf)
//============================================================================



static void Test_BFu7c_I_Sf()
{
  {
    init_simple_test("BFu7c_I_Sf");
    static STRUCT_IF_C BFu7c_I_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7c_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_I_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_I_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_I_Sf");
    check_field_offset(lv, v2, 1, "BFu7c_I_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu7c_I_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_I_Sf, BFu7c_I_Sf)
//============================================================================



static void Test_BFu7c_Ip_Sf()
{
  {
    init_simple_test("BFu7c_Ip_Sf");
    static STRUCT_IF_C BFu7c_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7c_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Ip_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Ip_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Ip_Sf");
    check_field_offset(lv, v2, 1, "BFu7c_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "BFu7c_Ip_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Ip_Sf, BFu7c_Ip_Sf)
//============================================================================



static void Test_BFu7c_L_Sf()
{
  {
    init_simple_test("BFu7c_L_Sf");
    static STRUCT_IF_C BFu7c_L_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu7c_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_L_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_L_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_L_Sf");
    check_field_offset(lv, v2, 1, "BFu7c_L_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu7c_L_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_L_Sf, BFu7c_L_Sf)
//============================================================================



static void Test_BFu7c_S_Sf()
{
  {
    init_simple_test("BFu7c_S_Sf");
    static STRUCT_IF_C BFu7c_S_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_S_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_S_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_S_Sf");
    check_field_offset(lv, v2, 1, "BFu7c_S_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu7c_S_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_S_Sf, BFu7c_S_Sf)
//============================================================================



static void Test_BFu7c_Sf()
{
  {
    init_simple_test("BFu7c_Sf");
    static STRUCT_IF_C BFu7c_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf");
    check_field_offset(lv, v2, 1, "BFu7c_Sf.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf, BFu7c_Sf)
//============================================================================



static void Test_BFu7c_Sf_BFu15i()
{
  {
    init_simple_test("BFu7c_Sf_BFu15i");
    static STRUCT_IF_C BFu7c_Sf_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu15i");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "BFu7c_Sf_BFu15i");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "BFu7c_Sf_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_BFu15i, BFu7c_Sf_BFu15i)
//============================================================================



static void Test_BFu7c_Sf_BFu15ll()
{
  {
    init_simple_test("BFu7c_Sf_BFu15ll");
    static STRUCT_IF_C BFu7c_Sf_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu15ll");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "BFu7c_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "BFu7c_Sf_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_BFu15ll, BFu7c_Sf_BFu15ll)
//============================================================================



static void Test_BFu7c_Sf_BFu15s()
{
  {
    init_simple_test("BFu7c_Sf_BFu15s");
    static STRUCT_IF_C BFu7c_Sf_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu15s");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "BFu7c_Sf_BFu15s");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "BFu7c_Sf_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_BFu15s, BFu7c_Sf_BFu15s)
//============================================================================



static void Test_BFu7c_Sf_BFu16i()
{
  {
    init_simple_test("BFu7c_Sf_BFu16i");
    static STRUCT_IF_C BFu7c_Sf_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu16i");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "BFu7c_Sf_BFu16i");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "BFu7c_Sf_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_BFu16i, BFu7c_Sf_BFu16i)
//============================================================================



static void Test_BFu7c_Sf_BFu16ll()
{
  {
    init_simple_test("BFu7c_Sf_BFu16ll");
    static STRUCT_IF_C BFu7c_Sf_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu16ll");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "BFu7c_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "BFu7c_Sf_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_BFu16ll, BFu7c_Sf_BFu16ll)
//============================================================================



static void Test_BFu7c_Sf_BFu16s()
{
  {
    init_simple_test("BFu7c_Sf_BFu16s");
    static STRUCT_IF_C BFu7c_Sf_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu16s");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "BFu7c_Sf_BFu16s");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "BFu7c_Sf_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_BFu16s, BFu7c_Sf_BFu16s)
//============================================================================



static void Test_BFu7c_Sf_BFu17i()
{
  {
    init_simple_test("BFu7c_Sf_BFu17i");
    static STRUCT_IF_C BFu7c_Sf_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(BFu7c_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu17i");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 1, 0, 17, 1, "BFu7c_Sf_BFu17i");
    set_bf_and_test(lv, v3, 1, 0, 17, hide_ull(1LL<<16), "BFu7c_Sf_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_BFu17i, BFu7c_Sf_BFu17i)
//============================================================================



static void Test_BFu7c_Sf_BFu17ll()
{
  {
    init_simple_test("BFu7c_Sf_BFu17ll");
    static STRUCT_IF_C BFu7c_Sf_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu7c_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu17ll");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 17, 1, "BFu7c_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 1, 0, 17, hide_ull(1LL<<16), "BFu7c_Sf_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_BFu17ll, BFu7c_Sf_BFu17ll)
//============================================================================



static void Test_BFu7c_Sf_BFu1c()
{
  {
    init_simple_test("BFu7c_Sf_BFu1c");
    static STRUCT_IF_C BFu7c_Sf_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu1c");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu7c_Sf_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_BFu1c, BFu7c_Sf_BFu1c)
//============================================================================



static void Test_BFu7c_Sf_BFu1i()
{
  {
    init_simple_test("BFu7c_Sf_BFu1i");
    static STRUCT_IF_C BFu7c_Sf_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu1i");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu7c_Sf_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_BFu1i, BFu7c_Sf_BFu1i)
//============================================================================



static void Test_BFu7c_Sf_BFu1ll()
{
  {
    init_simple_test("BFu7c_Sf_BFu1ll");
    static STRUCT_IF_C BFu7c_Sf_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu1ll");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu7c_Sf_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_BFu1ll, BFu7c_Sf_BFu1ll)
//============================================================================



static void Test_BFu7c_Sf_BFu1s()
{
  {
    init_simple_test("BFu7c_Sf_BFu1s");
    static STRUCT_IF_C BFu7c_Sf_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu1s");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu7c_Sf_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_BFu1s, BFu7c_Sf_BFu1s)
//============================================================================



static void Test_BFu7c_Sf_BFu31i()
{
  {
    init_simple_test("BFu7c_Sf_BFu31i");
    static STRUCT_IF_C BFu7c_Sf_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(BFu7c_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu31i");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 1, 0, 31, 1, "BFu7c_Sf_BFu31i");
    set_bf_and_test(lv, v3, 1, 0, 31, hide_ull(1LL<<30), "BFu7c_Sf_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_BFu31i, BFu7c_Sf_BFu31i)
//============================================================================



static void Test_BFu7c_Sf_BFu31ll()
{
  {
    init_simple_test("BFu7c_Sf_BFu31ll");
    static STRUCT_IF_C BFu7c_Sf_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu7c_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu31ll");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 31, 1, "BFu7c_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 1, 0, 31, hide_ull(1LL<<30), "BFu7c_Sf_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_BFu31ll, BFu7c_Sf_BFu31ll)
//============================================================================



static void Test_BFu7c_Sf_BFu32i()
{
  {
    init_simple_test("BFu7c_Sf_BFu32i");
    static STRUCT_IF_C BFu7c_Sf_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(BFu7c_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu32i");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 1, 0, 32, 1, "BFu7c_Sf_BFu32i");
    set_bf_and_test(lv, v3, 1, 0, 32, hide_ull(1LL<<31), "BFu7c_Sf_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_BFu32i, BFu7c_Sf_BFu32i)
//============================================================================



static void Test_BFu7c_Sf_BFu32ll()
{
  {
    init_simple_test("BFu7c_Sf_BFu32ll");
    static STRUCT_IF_C BFu7c_Sf_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu7c_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu32ll");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 32, 1, "BFu7c_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 1, 0, 32, hide_ull(1LL<<31), "BFu7c_Sf_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_BFu32ll, BFu7c_Sf_BFu32ll)
//============================================================================



static void Test_BFu7c_Sf_BFu33()
{
  {
    init_simple_test("BFu7c_Sf_BFu33");
    static STRUCT_IF_C BFu7c_Sf_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(BFu7c_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu33");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 1, 0, 33, 1, "BFu7c_Sf_BFu33");
    set_bf_and_test(lv, v3, 1, 0, 33, hide_ull(1LL<<32), "BFu7c_Sf_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_BFu33, BFu7c_Sf_BFu33)
//============================================================================



static void Test_BFu7c_Sf_BFu7c()
{
  {
    init_simple_test("BFu7c_Sf_BFu7c");
    static STRUCT_IF_C BFu7c_Sf_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu7c");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu7c_Sf_BFu7c");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_BFu7c, BFu7c_Sf_BFu7c)
//============================================================================



static void Test_BFu7c_Sf_BFu7i()
{
  {
    init_simple_test("BFu7c_Sf_BFu7i");
    static STRUCT_IF_C BFu7c_Sf_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu7i");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu7c_Sf_BFu7i");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_BFu7i, BFu7c_Sf_BFu7i)
//============================================================================



static void Test_BFu7c_Sf_BFu7ll()
{
  {
    init_simple_test("BFu7c_Sf_BFu7ll");
    static STRUCT_IF_C BFu7c_Sf_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu7ll");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu7c_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_BFu7ll, BFu7c_Sf_BFu7ll)
//============================================================================



static void Test_BFu7c_Sf_BFu7s()
{
  {
    init_simple_test("BFu7c_Sf_BFu7s");
    static STRUCT_IF_C BFu7c_Sf_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu7s");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu7c_Sf_BFu7s");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_BFu7s, BFu7c_Sf_BFu7s)
//============================================================================



static void Test_BFu7c_Sf_BFu8c()
{
  {
    init_simple_test("BFu7c_Sf_BFu8c");
    static STRUCT_IF_C BFu7c_Sf_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu8c");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu7c_Sf_BFu8c");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu7c_Sf_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_BFu8c, BFu7c_Sf_BFu8c)
//============================================================================



static void Test_BFu7c_Sf_BFu8i()
{
  {
    init_simple_test("BFu7c_Sf_BFu8i");
    static STRUCT_IF_C BFu7c_Sf_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu8i");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu7c_Sf_BFu8i");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu7c_Sf_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_BFu8i, BFu7c_Sf_BFu8i)
//============================================================================



static void Test_BFu7c_Sf_BFu8ll()
{
  {
    init_simple_test("BFu7c_Sf_BFu8ll");
    static STRUCT_IF_C BFu7c_Sf_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu8ll");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu7c_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu7c_Sf_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_BFu8ll, BFu7c_Sf_BFu8ll)
//============================================================================



static void Test_BFu7c_Sf_BFu8s()
{
  {
    init_simple_test("BFu7c_Sf_BFu8s");
    static STRUCT_IF_C BFu7c_Sf_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu8s");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu7c_Sf_BFu8s");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu7c_Sf_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_BFu8s, BFu7c_Sf_BFu8s)
//============================================================================



static void Test_BFu7c_Sf_BFu9i()
{
  {
    init_simple_test("BFu7c_Sf_BFu9i");
    static STRUCT_IF_C BFu7c_Sf_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu9i");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "BFu7c_Sf_BFu9i");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "BFu7c_Sf_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_BFu9i, BFu7c_Sf_BFu9i)
//============================================================================



static void Test_BFu7c_Sf_BFu9ll()
{
  {
    init_simple_test("BFu7c_Sf_BFu9ll");
    static STRUCT_IF_C BFu7c_Sf_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu9ll");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "BFu7c_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "BFu7c_Sf_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_BFu9ll, BFu7c_Sf_BFu9ll)
//============================================================================



static void Test_BFu7c_Sf_BFu9s()
{
  {
    init_simple_test("BFu7c_Sf_BFu9s");
    static STRUCT_IF_C BFu7c_Sf_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_BFu9s");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "BFu7c_Sf_BFu9s");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "BFu7c_Sf_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_BFu9s, BFu7c_Sf_BFu9s)
//============================================================================



static void Test_BFu7c_Sf_C()
{
  {
    init_simple_test("BFu7c_Sf_C");
    static STRUCT_IF_C BFu7c_Sf_C lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_C)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_C");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_C");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_C.v2");
    check_field_offset(lv, v3, 1, "BFu7c_Sf_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_C, BFu7c_Sf_C)
//============================================================================



static void Test_BFu7c_Sf_D()
{
  {
    init_simple_test("BFu7c_Sf_D");
    static STRUCT_IF_C BFu7c_Sf_D lv;
    check2(sizeof(lv), 9, "sizeof(BFu7c_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_D)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_D");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_D");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_D.v2");
    check_field_offset(lv, v3, 1, "BFu7c_Sf_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_D, BFu7c_Sf_D)
//============================================================================



static void Test_BFu7c_Sf_F()
{
  {
    init_simple_test("BFu7c_Sf_F");
    static STRUCT_IF_C BFu7c_Sf_F lv;
    check2(sizeof(lv), 5, "sizeof(BFu7c_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_F)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_F");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_F");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_F.v2");
    check_field_offset(lv, v3, 1, "BFu7c_Sf_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_F, BFu7c_Sf_F)
//============================================================================



static void Test_BFu7c_Sf_I()
{
  {
    init_simple_test("BFu7c_Sf_I");
    static STRUCT_IF_C BFu7c_Sf_I lv;
    check2(sizeof(lv), 5, "sizeof(BFu7c_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_I)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_I");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_I");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_I.v2");
    check_field_offset(lv, v3, 1, "BFu7c_Sf_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_I, BFu7c_Sf_I)
//============================================================================



static void Test_BFu7c_Sf_Ip()
{
  {
    init_simple_test("BFu7c_Sf_Ip");
    static STRUCT_IF_C BFu7c_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7c_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_Ip");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_Ip");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_Ip.v2");
    check_field_offset(lv, v3, 1, "BFu7c_Sf_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_Ip, BFu7c_Sf_Ip)
//============================================================================



static void Test_BFu7c_Sf_L()
{
  {
    init_simple_test("BFu7c_Sf_L");
    static STRUCT_IF_C BFu7c_Sf_L lv;
    check2(sizeof(lv), 9, "sizeof(BFu7c_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_L)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_L");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_L");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_L.v2");
    check_field_offset(lv, v3, 1, "BFu7c_Sf_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_L, BFu7c_Sf_L)
//============================================================================



static void Test_BFu7c_Sf_S()
{
  {
    init_simple_test("BFu7c_Sf_S");
    static STRUCT_IF_C BFu7c_Sf_S lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_S)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_S");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_S");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_S.v2");
    check_field_offset(lv, v3, 1, "BFu7c_Sf_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_S, BFu7c_Sf_S)
//============================================================================



static void Test_BFu7c_Sf_Sf()
{
  {
    init_simple_test("BFu7c_Sf_Sf");
    static STRUCT_IF_C BFu7c_Sf_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu7c_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_Sf");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_Sf.v2");
    check_field_offset(lv, v3, 1, "BFu7c_Sf_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_Sf, BFu7c_Sf_Sf)
//============================================================================



static void Test_BFu7c_Sf_Uc()
{
  {
    init_simple_test("BFu7c_Sf_Uc");
    static STRUCT_IF_C BFu7c_Sf_Uc lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_Uc");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_Uc");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_Uc.v2");
    check_field_offset(lv, v3, 1, "BFu7c_Sf_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_Uc, BFu7c_Sf_Uc)
//============================================================================



static void Test_BFu7c_Sf_Ui()
{
  {
    init_simple_test("BFu7c_Sf_Ui");
    static STRUCT_IF_C BFu7c_Sf_Ui lv;
    check2(sizeof(lv), 5, "sizeof(BFu7c_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_Ui");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_Ui");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_Ui.v2");
    check_field_offset(lv, v3, 1, "BFu7c_Sf_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_Ui, BFu7c_Sf_Ui)
//============================================================================



static void Test_BFu7c_Sf_Ul()
{
  {
    init_simple_test("BFu7c_Sf_Ul");
    static STRUCT_IF_C BFu7c_Sf_Ul lv;
    check2(sizeof(lv), 9, "sizeof(BFu7c_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_Ul");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_Ul");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_Ul.v2");
    check_field_offset(lv, v3, 1, "BFu7c_Sf_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_Ul, BFu7c_Sf_Ul)
//============================================================================



static void Test_BFu7c_Sf_Us()
{
  {
    init_simple_test("BFu7c_Sf_Us");
    static STRUCT_IF_C BFu7c_Sf_Us lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_Us)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_Us");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_Us");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_Us.v2");
    check_field_offset(lv, v3, 1, "BFu7c_Sf_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_Us, BFu7c_Sf_Us)
//============================================================================



static void Test_BFu7c_Sf_Vp()
{
  {
    init_simple_test("BFu7c_Sf_Vp");
    static STRUCT_IF_C BFu7c_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7c_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Sf_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Sf_Vp");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Sf_Vp");
    check_field_offset(lv, v2, 1, "BFu7c_Sf_Vp.v2");
    check_field_offset(lv, v3, 1, "BFu7c_Sf_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Sf_Vp, BFu7c_Sf_Vp)
//============================================================================



static void Test_BFu7c_Uc_Sf()
{
  {
    init_simple_test("BFu7c_Uc_Sf");
    static STRUCT_IF_C BFu7c_Uc_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Uc_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Uc_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Uc_Sf");
    check_field_offset(lv, v2, 1, "BFu7c_Uc_Sf.v2");
    check_field_offset(lv, v3, 2, "BFu7c_Uc_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Uc_Sf, BFu7c_Uc_Sf)
//============================================================================



static void Test_BFu7c_Ui_Sf()
{
  {
    init_simple_test("BFu7c_Ui_Sf");
    static STRUCT_IF_C BFu7c_Ui_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7c_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Ui_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Ui_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Ui_Sf");
    check_field_offset(lv, v2, 1, "BFu7c_Ui_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu7c_Ui_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Ui_Sf, BFu7c_Ui_Sf)
//============================================================================



static void Test_BFu7c_Ul_Sf()
{
  {
    init_simple_test("BFu7c_Ul_Sf");
    static STRUCT_IF_C BFu7c_Ul_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu7c_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Ul_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Ul_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Ul_Sf");
    check_field_offset(lv, v2, 1, "BFu7c_Ul_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu7c_Ul_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Ul_Sf, BFu7c_Ul_Sf)
//============================================================================



static void Test_BFu7c_Us_Sf()
{
  {
    init_simple_test("BFu7c_Us_Sf");
    static STRUCT_IF_C BFu7c_Us_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Us_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Us_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Us_Sf");
    check_field_offset(lv, v2, 1, "BFu7c_Us_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu7c_Us_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Us_Sf, BFu7c_Us_Sf)
//============================================================================



static void Test_BFu7c_Vp_Sf()
{
  {
    init_simple_test("BFu7c_Vp_Sf");
    static STRUCT_IF_C BFu7c_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7c_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Vp_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Vp_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Vp_Sf");
    check_field_offset(lv, v2, 1, "BFu7c_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "BFu7c_Vp_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7c_Vp_Sf, BFu7c_Vp_Sf)
//============================================================================



static void Test_BFu7i_BFu15i_Sf()
{
  {
    init_simple_test("BFu7i_BFu15i_Sf");
    static STRUCT_IF_C BFu7i_BFu15i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu15i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu15i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu15i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7i_BFu15i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7i_BFu15i_Sf");
    check_field_offset(lv, v3, 3, "BFu7i_BFu15i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_BFu15i_Sf, BFu7i_BFu15i_Sf)
//============================================================================



static void Test_BFu7i_BFu15ll_Sf()
{
  {
    init_simple_test("BFu7i_BFu15ll_Sf");
    static STRUCT_IF_C BFu7i_BFu15ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu15ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu15ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7i_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7i_BFu15ll_Sf");
    check_field_offset(lv, v3, 3, "BFu7i_BFu15ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_BFu15ll_Sf, BFu7i_BFu15ll_Sf)
//============================================================================



static void Test_BFu7i_BFu15s_Sf()
{
  {
    init_simple_test("BFu7i_BFu15s_Sf");
    static STRUCT_IF_C BFu7i_BFu15s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu15s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu15s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu15s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7i_BFu15s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7i_BFu15s_Sf");
    check_field_offset(lv, v3, 3, "BFu7i_BFu15s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_BFu15s_Sf, BFu7i_BFu15s_Sf)
//============================================================================



static void Test_BFu7i_BFu16i_Sf()
{
  {
    init_simple_test("BFu7i_BFu16i_Sf");
    static STRUCT_IF_C BFu7i_BFu16i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu16i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu16i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu16i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7i_BFu16i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7i_BFu16i_Sf");
    check_field_offset(lv, v3, 3, "BFu7i_BFu16i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_BFu16i_Sf, BFu7i_BFu16i_Sf)
//============================================================================



static void Test_BFu7i_BFu16ll_Sf()
{
  {
    init_simple_test("BFu7i_BFu16ll_Sf");
    static STRUCT_IF_C BFu7i_BFu16ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu16ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu16ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7i_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7i_BFu16ll_Sf");
    check_field_offset(lv, v3, 3, "BFu7i_BFu16ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_BFu16ll_Sf, BFu7i_BFu16ll_Sf)
//============================================================================



static void Test_BFu7i_BFu16s_Sf()
{
  {
    init_simple_test("BFu7i_BFu16s_Sf");
    static STRUCT_IF_C BFu7i_BFu16s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu16s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu16s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu16s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7i_BFu16s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7i_BFu16s_Sf");
    check_field_offset(lv, v3, 3, "BFu7i_BFu16s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_BFu16s_Sf, BFu7i_BFu16s_Sf)
//============================================================================



static void Test_BFu7i_BFu17i_Sf()
{
  {
    init_simple_test("BFu7i_BFu17i_Sf");
    static STRUCT_IF_C BFu7i_BFu17i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu17i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu17i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu17i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "BFu7i_BFu17i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "BFu7i_BFu17i_Sf");
    check_field_offset(lv, v3, 3, "BFu7i_BFu17i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_BFu17i_Sf, BFu7i_BFu17i_Sf)
//============================================================================



static void Test_BFu7i_BFu17ll_Sf()
{
  {
    init_simple_test("BFu7i_BFu17ll_Sf");
    static STRUCT_IF_C BFu7i_BFu17ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu17ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu17ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "BFu7i_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "BFu7i_BFu17ll_Sf");
    check_field_offset(lv, v3, 3, "BFu7i_BFu17ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_BFu17ll_Sf, BFu7i_BFu17ll_Sf)
//============================================================================



static void Test_BFu7i_BFu1c_Sf()
{
  {
    init_simple_test("BFu7i_BFu1c_Sf");
    static STRUCT_IF_C BFu7i_BFu1c_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu7i_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu1c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu1c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu1c_Sf");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7i_BFu1c_Sf");
    check_field_offset(lv, v3, 1, "BFu7i_BFu1c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_BFu1c_Sf, BFu7i_BFu1c_Sf)
//============================================================================



static void Test_BFu7i_BFu1i_Sf()
{
  {
    init_simple_test("BFu7i_BFu1i_Sf");
    static STRUCT_IF_C BFu7i_BFu1i_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu7i_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu1i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu1i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu1i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7i_BFu1i_Sf");
    check_field_offset(lv, v3, 1, "BFu7i_BFu1i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_BFu1i_Sf, BFu7i_BFu1i_Sf)
//============================================================================



static void Test_BFu7i_BFu1ll_Sf()
{
  {
    init_simple_test("BFu7i_BFu1ll_Sf");
    static STRUCT_IF_C BFu7i_BFu1ll_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu7i_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu1ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu1ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu1ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7i_BFu1ll_Sf");
    check_field_offset(lv, v3, 1, "BFu7i_BFu1ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_BFu1ll_Sf, BFu7i_BFu1ll_Sf)
//============================================================================



static void Test_BFu7i_BFu1s_Sf()
{
  {
    init_simple_test("BFu7i_BFu1s_Sf");
    static STRUCT_IF_C BFu7i_BFu1s_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu7i_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu1s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu1s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu1s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7i_BFu1s_Sf");
    check_field_offset(lv, v3, 1, "BFu7i_BFu1s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_BFu1s_Sf, BFu7i_BFu1s_Sf)
//============================================================================



static void Test_BFu7i_BFu31i_Sf()
{
  {
    init_simple_test("BFu7i_BFu31i_Sf");
    static STRUCT_IF_C BFu7i_BFu31i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7i_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu31i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu31i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu31i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "BFu7i_BFu31i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "BFu7i_BFu31i_Sf");
    check_field_offset(lv, v3, 5, "BFu7i_BFu31i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_BFu31i_Sf, BFu7i_BFu31i_Sf)
//============================================================================



static void Test_BFu7i_BFu31ll_Sf()
{
  {
    init_simple_test("BFu7i_BFu31ll_Sf");
    static STRUCT_IF_C BFu7i_BFu31ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7i_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu31ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu31ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "BFu7i_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "BFu7i_BFu31ll_Sf");
    check_field_offset(lv, v3, 5, "BFu7i_BFu31ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_BFu31ll_Sf, BFu7i_BFu31ll_Sf)
//============================================================================



static void Test_BFu7i_BFu32i_Sf()
{
  {
    init_simple_test("BFu7i_BFu32i_Sf");
    static STRUCT_IF_C BFu7i_BFu32i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7i_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu32i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu32i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu32i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "BFu7i_BFu32i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "BFu7i_BFu32i_Sf");
    check_field_offset(lv, v3, 5, "BFu7i_BFu32i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_BFu32i_Sf, BFu7i_BFu32i_Sf)
//============================================================================



static void Test_BFu7i_BFu32ll_Sf()
{
  {
    init_simple_test("BFu7i_BFu32ll_Sf");
    static STRUCT_IF_C BFu7i_BFu32ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7i_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu32ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu32ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "BFu7i_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "BFu7i_BFu32ll_Sf");
    check_field_offset(lv, v3, 5, "BFu7i_BFu32ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_BFu32ll_Sf, BFu7i_BFu32ll_Sf)
//============================================================================



static void Test_BFu7i_BFu33_Sf()
{
  {
    init_simple_test("BFu7i_BFu33_Sf");
    static STRUCT_IF_C BFu7i_BFu33_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7i_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu33_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu33_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu33_Sf");
    set_bf_and_test(lv, v2, 0, 7, 33, 1, "BFu7i_BFu33_Sf");
    set_bf_and_test(lv, v2, 0, 7, 33, hide_ull(1LL<<32), "BFu7i_BFu33_Sf");
    check_field_offset(lv, v3, 5, "BFu7i_BFu33_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_BFu33_Sf, BFu7i_BFu33_Sf)
//============================================================================



static void Test_BFu7i_BFu7c_Sf()
{
  {
    init_simple_test("BFu7i_BFu7c_Sf");
    static STRUCT_IF_C BFu7i_BFu7c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu7c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu7c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu7c_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7i_BFu7c_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7i_BFu7c_Sf");
    check_field_offset(lv, v3, 2, "BFu7i_BFu7c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_BFu7c_Sf, BFu7i_BFu7c_Sf)
//============================================================================



static void Test_BFu7i_BFu7i_Sf()
{
  {
    init_simple_test("BFu7i_BFu7i_Sf");
    static STRUCT_IF_C BFu7i_BFu7i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu7i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu7i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu7i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7i_BFu7i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7i_BFu7i_Sf");
    check_field_offset(lv, v3, 2, "BFu7i_BFu7i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_BFu7i_Sf, BFu7i_BFu7i_Sf)
//============================================================================



static void Test_BFu7i_BFu7ll_Sf()
{
  {
    init_simple_test("BFu7i_BFu7ll_Sf");
    static STRUCT_IF_C BFu7i_BFu7ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu7ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu7ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7i_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7i_BFu7ll_Sf");
    check_field_offset(lv, v3, 2, "BFu7i_BFu7ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_BFu7ll_Sf, BFu7i_BFu7ll_Sf)
//============================================================================



static void Test_BFu7i_BFu7s_Sf()
{
  {
    init_simple_test("BFu7i_BFu7s_Sf");
    static STRUCT_IF_C BFu7i_BFu7s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu7s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu7s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu7s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7i_BFu7s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7i_BFu7s_Sf");
    check_field_offset(lv, v3, 2, "BFu7i_BFu7s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_BFu7s_Sf, BFu7i_BFu7s_Sf)
//============================================================================



static void Test_BFu7i_BFu8c_Sf()
{
  {
    init_simple_test("BFu7i_BFu8c_Sf");
    static STRUCT_IF_C BFu7i_BFu8c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu8c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu8c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu8c_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7i_BFu8c_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7i_BFu8c_Sf");
    check_field_offset(lv, v3, 2, "BFu7i_BFu8c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_BFu8c_Sf, BFu7i_BFu8c_Sf)
//============================================================================



static void Test_BFu7i_BFu8i_Sf()
{
  {
    init_simple_test("BFu7i_BFu8i_Sf");
    static STRUCT_IF_C BFu7i_BFu8i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu8i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu8i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu8i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7i_BFu8i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7i_BFu8i_Sf");
    check_field_offset(lv, v3, 2, "BFu7i_BFu8i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_BFu8i_Sf, BFu7i_BFu8i_Sf)
//============================================================================



static void Test_BFu7i_BFu8ll_Sf()
{
  {
    init_simple_test("BFu7i_BFu8ll_Sf");
    static STRUCT_IF_C BFu7i_BFu8ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu8ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu8ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7i_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7i_BFu8ll_Sf");
    check_field_offset(lv, v3, 2, "BFu7i_BFu8ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_BFu8ll_Sf, BFu7i_BFu8ll_Sf)
//============================================================================



static void Test_BFu7i_BFu8s_Sf()
{
  {
    init_simple_test("BFu7i_BFu8s_Sf");
    static STRUCT_IF_C BFu7i_BFu8s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu8s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu8s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu8s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7i_BFu8s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7i_BFu8s_Sf");
    check_field_offset(lv, v3, 2, "BFu7i_BFu8s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_BFu8s_Sf, BFu7i_BFu8s_Sf)
//============================================================================



static void Test_BFu7i_BFu9i_Sf()
{
  {
    init_simple_test("BFu7i_BFu9i_Sf");
    static STRUCT_IF_C BFu7i_BFu9i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu9i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu9i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu9i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "BFu7i_BFu9i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "BFu7i_BFu9i_Sf");
    check_field_offset(lv, v3, 2, "BFu7i_BFu9i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_BFu9i_Sf, BFu7i_BFu9i_Sf)
//============================================================================



static void Test_BFu7i_BFu9ll_Sf()
{
  {
    init_simple_test("BFu7i_BFu9ll_Sf");
    static STRUCT_IF_C BFu7i_BFu9ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu9ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu9ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "BFu7i_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "BFu7i_BFu9ll_Sf");
    check_field_offset(lv, v3, 2, "BFu7i_BFu9ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_BFu9ll_Sf, BFu7i_BFu9ll_Sf)
//============================================================================



static void Test_BFu7i_BFu9s_Sf()
{
  {
    init_simple_test("BFu7i_BFu9s_Sf");
    static STRUCT_IF_C BFu7i_BFu9s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu9s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu9s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu9s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "BFu7i_BFu9s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "BFu7i_BFu9s_Sf");
    check_field_offset(lv, v3, 2, "BFu7i_BFu9s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_BFu9s_Sf, BFu7i_BFu9s_Sf)
//============================================================================



static void Test_BFu7i_C_Sf()
{
  {
    init_simple_test("BFu7i_C_Sf");
    static STRUCT_IF_C BFu7i_C_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_C_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_C_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_C_Sf");
    check_field_offset(lv, v2, 1, "BFu7i_C_Sf.v2");
    check_field_offset(lv, v3, 2, "BFu7i_C_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_C_Sf, BFu7i_C_Sf)
//============================================================================



static void Test_BFu7i_D_Sf()
{
  {
    init_simple_test("BFu7i_D_Sf");
    static STRUCT_IF_C BFu7i_D_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu7i_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_D_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_D_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_D_Sf");
    check_field_offset(lv, v2, 1, "BFu7i_D_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu7i_D_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_D_Sf, BFu7i_D_Sf)
//============================================================================



static void Test_BFu7i_F_Sf()
{
  {
    init_simple_test("BFu7i_F_Sf");
    static STRUCT_IF_C BFu7i_F_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7i_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_F_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_F_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_F_Sf");
    check_field_offset(lv, v2, 1, "BFu7i_F_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu7i_F_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_F_Sf, BFu7i_F_Sf)
//============================================================================



static void Test_BFu7i_I_Sf()
{
  {
    init_simple_test("BFu7i_I_Sf");
    static STRUCT_IF_C BFu7i_I_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7i_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_I_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_I_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_I_Sf");
    check_field_offset(lv, v2, 1, "BFu7i_I_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu7i_I_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_I_Sf, BFu7i_I_Sf)
//============================================================================



static void Test_BFu7i_Ip_Sf()
{
  {
    init_simple_test("BFu7i_Ip_Sf");
    static STRUCT_IF_C BFu7i_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7i_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Ip_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Ip_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Ip_Sf");
    check_field_offset(lv, v2, 1, "BFu7i_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "BFu7i_Ip_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Ip_Sf, BFu7i_Ip_Sf)
//============================================================================



static void Test_BFu7i_L_Sf()
{
  {
    init_simple_test("BFu7i_L_Sf");
    static STRUCT_IF_C BFu7i_L_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu7i_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_L_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_L_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_L_Sf");
    check_field_offset(lv, v2, 1, "BFu7i_L_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu7i_L_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_L_Sf, BFu7i_L_Sf)
//============================================================================



static void Test_BFu7i_S_Sf()
{
  {
    init_simple_test("BFu7i_S_Sf");
    static STRUCT_IF_C BFu7i_S_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_S_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_S_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_S_Sf");
    check_field_offset(lv, v2, 1, "BFu7i_S_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu7i_S_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_S_Sf, BFu7i_S_Sf)
//============================================================================



static void Test_BFu7i_Sf()
{
  {
    init_simple_test("BFu7i_Sf");
    static STRUCT_IF_C BFu7i_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf");
    check_field_offset(lv, v2, 1, "BFu7i_Sf.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf, BFu7i_Sf)
//============================================================================



static void Test_BFu7i_Sf_BFu15i()
{
  {
    init_simple_test("BFu7i_Sf_BFu15i");
    static STRUCT_IF_C BFu7i_Sf_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu15i");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "BFu7i_Sf_BFu15i");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "BFu7i_Sf_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_BFu15i, BFu7i_Sf_BFu15i)
//============================================================================



static void Test_BFu7i_Sf_BFu15ll()
{
  {
    init_simple_test("BFu7i_Sf_BFu15ll");
    static STRUCT_IF_C BFu7i_Sf_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu15ll");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "BFu7i_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "BFu7i_Sf_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_BFu15ll, BFu7i_Sf_BFu15ll)
//============================================================================



static void Test_BFu7i_Sf_BFu15s()
{
  {
    init_simple_test("BFu7i_Sf_BFu15s");
    static STRUCT_IF_C BFu7i_Sf_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu15s");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "BFu7i_Sf_BFu15s");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "BFu7i_Sf_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_BFu15s, BFu7i_Sf_BFu15s)
//============================================================================



static void Test_BFu7i_Sf_BFu16i()
{
  {
    init_simple_test("BFu7i_Sf_BFu16i");
    static STRUCT_IF_C BFu7i_Sf_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu16i");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "BFu7i_Sf_BFu16i");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "BFu7i_Sf_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_BFu16i, BFu7i_Sf_BFu16i)
//============================================================================



static void Test_BFu7i_Sf_BFu16ll()
{
  {
    init_simple_test("BFu7i_Sf_BFu16ll");
    static STRUCT_IF_C BFu7i_Sf_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu16ll");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "BFu7i_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "BFu7i_Sf_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_BFu16ll, BFu7i_Sf_BFu16ll)
//============================================================================



static void Test_BFu7i_Sf_BFu16s()
{
  {
    init_simple_test("BFu7i_Sf_BFu16s");
    static STRUCT_IF_C BFu7i_Sf_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu16s");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "BFu7i_Sf_BFu16s");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "BFu7i_Sf_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_BFu16s, BFu7i_Sf_BFu16s)
//============================================================================



static void Test_BFu7i_Sf_BFu17i()
{
  {
    init_simple_test("BFu7i_Sf_BFu17i");
    static STRUCT_IF_C BFu7i_Sf_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(BFu7i_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu17i");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 1, 0, 17, 1, "BFu7i_Sf_BFu17i");
    set_bf_and_test(lv, v3, 1, 0, 17, hide_ull(1LL<<16), "BFu7i_Sf_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_BFu17i, BFu7i_Sf_BFu17i)
//============================================================================



static void Test_BFu7i_Sf_BFu17ll()
{
  {
    init_simple_test("BFu7i_Sf_BFu17ll");
    static STRUCT_IF_C BFu7i_Sf_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu7i_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu17ll");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 17, 1, "BFu7i_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 1, 0, 17, hide_ull(1LL<<16), "BFu7i_Sf_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_BFu17ll, BFu7i_Sf_BFu17ll)
//============================================================================



static void Test_BFu7i_Sf_BFu1c()
{
  {
    init_simple_test("BFu7i_Sf_BFu1c");
    static STRUCT_IF_C BFu7i_Sf_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu1c");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu7i_Sf_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_BFu1c, BFu7i_Sf_BFu1c)
//============================================================================



static void Test_BFu7i_Sf_BFu1i()
{
  {
    init_simple_test("BFu7i_Sf_BFu1i");
    static STRUCT_IF_C BFu7i_Sf_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu1i");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu7i_Sf_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_BFu1i, BFu7i_Sf_BFu1i)
//============================================================================



static void Test_BFu7i_Sf_BFu1ll()
{
  {
    init_simple_test("BFu7i_Sf_BFu1ll");
    static STRUCT_IF_C BFu7i_Sf_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu1ll");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu7i_Sf_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_BFu1ll, BFu7i_Sf_BFu1ll)
//============================================================================



static void Test_BFu7i_Sf_BFu1s()
{
  {
    init_simple_test("BFu7i_Sf_BFu1s");
    static STRUCT_IF_C BFu7i_Sf_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu1s");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu7i_Sf_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_BFu1s, BFu7i_Sf_BFu1s)
//============================================================================



static void Test_BFu7i_Sf_BFu31i()
{
  {
    init_simple_test("BFu7i_Sf_BFu31i");
    static STRUCT_IF_C BFu7i_Sf_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(BFu7i_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu31i");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 1, 0, 31, 1, "BFu7i_Sf_BFu31i");
    set_bf_and_test(lv, v3, 1, 0, 31, hide_ull(1LL<<30), "BFu7i_Sf_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_BFu31i, BFu7i_Sf_BFu31i)
//============================================================================



static void Test_BFu7i_Sf_BFu31ll()
{
  {
    init_simple_test("BFu7i_Sf_BFu31ll");
    static STRUCT_IF_C BFu7i_Sf_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu7i_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu31ll");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 31, 1, "BFu7i_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 1, 0, 31, hide_ull(1LL<<30), "BFu7i_Sf_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_BFu31ll, BFu7i_Sf_BFu31ll)
//============================================================================



static void Test_BFu7i_Sf_BFu32i()
{
  {
    init_simple_test("BFu7i_Sf_BFu32i");
    static STRUCT_IF_C BFu7i_Sf_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(BFu7i_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu32i");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 1, 0, 32, 1, "BFu7i_Sf_BFu32i");
    set_bf_and_test(lv, v3, 1, 0, 32, hide_ull(1LL<<31), "BFu7i_Sf_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_BFu32i, BFu7i_Sf_BFu32i)
//============================================================================



static void Test_BFu7i_Sf_BFu32ll()
{
  {
    init_simple_test("BFu7i_Sf_BFu32ll");
    static STRUCT_IF_C BFu7i_Sf_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu7i_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu32ll");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 32, 1, "BFu7i_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 1, 0, 32, hide_ull(1LL<<31), "BFu7i_Sf_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_BFu32ll, BFu7i_Sf_BFu32ll)
//============================================================================



static void Test_BFu7i_Sf_BFu33()
{
  {
    init_simple_test("BFu7i_Sf_BFu33");
    static STRUCT_IF_C BFu7i_Sf_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(BFu7i_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu33");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 1, 0, 33, 1, "BFu7i_Sf_BFu33");
    set_bf_and_test(lv, v3, 1, 0, 33, hide_ull(1LL<<32), "BFu7i_Sf_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_BFu33, BFu7i_Sf_BFu33)
//============================================================================



static void Test_BFu7i_Sf_BFu7c()
{
  {
    init_simple_test("BFu7i_Sf_BFu7c");
    static STRUCT_IF_C BFu7i_Sf_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu7c");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu7i_Sf_BFu7c");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_BFu7c, BFu7i_Sf_BFu7c)
//============================================================================



static void Test_BFu7i_Sf_BFu7i()
{
  {
    init_simple_test("BFu7i_Sf_BFu7i");
    static STRUCT_IF_C BFu7i_Sf_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu7i");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu7i_Sf_BFu7i");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_BFu7i, BFu7i_Sf_BFu7i)
//============================================================================



static void Test_BFu7i_Sf_BFu7ll()
{
  {
    init_simple_test("BFu7i_Sf_BFu7ll");
    static STRUCT_IF_C BFu7i_Sf_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu7ll");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu7i_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_BFu7ll, BFu7i_Sf_BFu7ll)
//============================================================================



static void Test_BFu7i_Sf_BFu7s()
{
  {
    init_simple_test("BFu7i_Sf_BFu7s");
    static STRUCT_IF_C BFu7i_Sf_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu7s");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu7i_Sf_BFu7s");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_BFu7s, BFu7i_Sf_BFu7s)
//============================================================================



static void Test_BFu7i_Sf_BFu8c()
{
  {
    init_simple_test("BFu7i_Sf_BFu8c");
    static STRUCT_IF_C BFu7i_Sf_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu8c");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu7i_Sf_BFu8c");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu7i_Sf_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_BFu8c, BFu7i_Sf_BFu8c)
//============================================================================



static void Test_BFu7i_Sf_BFu8i()
{
  {
    init_simple_test("BFu7i_Sf_BFu8i");
    static STRUCT_IF_C BFu7i_Sf_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu8i");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu7i_Sf_BFu8i");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu7i_Sf_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_BFu8i, BFu7i_Sf_BFu8i)
//============================================================================



static void Test_BFu7i_Sf_BFu8ll()
{
  {
    init_simple_test("BFu7i_Sf_BFu8ll");
    static STRUCT_IF_C BFu7i_Sf_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu8ll");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu7i_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu7i_Sf_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_BFu8ll, BFu7i_Sf_BFu8ll)
//============================================================================



static void Test_BFu7i_Sf_BFu8s()
{
  {
    init_simple_test("BFu7i_Sf_BFu8s");
    static STRUCT_IF_C BFu7i_Sf_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu8s");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu7i_Sf_BFu8s");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu7i_Sf_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_BFu8s, BFu7i_Sf_BFu8s)
//============================================================================



static void Test_BFu7i_Sf_BFu9i()
{
  {
    init_simple_test("BFu7i_Sf_BFu9i");
    static STRUCT_IF_C BFu7i_Sf_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu9i");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "BFu7i_Sf_BFu9i");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "BFu7i_Sf_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_BFu9i, BFu7i_Sf_BFu9i)
//============================================================================



static void Test_BFu7i_Sf_BFu9ll()
{
  {
    init_simple_test("BFu7i_Sf_BFu9ll");
    static STRUCT_IF_C BFu7i_Sf_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu9ll");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "BFu7i_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "BFu7i_Sf_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_BFu9ll, BFu7i_Sf_BFu9ll)
//============================================================================



static void Test_BFu7i_Sf_BFu9s()
{
  {
    init_simple_test("BFu7i_Sf_BFu9s");
    static STRUCT_IF_C BFu7i_Sf_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_BFu9s");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "BFu7i_Sf_BFu9s");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "BFu7i_Sf_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_BFu9s, BFu7i_Sf_BFu9s)
//============================================================================



static void Test_BFu7i_Sf_C()
{
  {
    init_simple_test("BFu7i_Sf_C");
    static STRUCT_IF_C BFu7i_Sf_C lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_C)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_C");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_C");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_C.v2");
    check_field_offset(lv, v3, 1, "BFu7i_Sf_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_C, BFu7i_Sf_C)
//============================================================================



static void Test_BFu7i_Sf_D()
{
  {
    init_simple_test("BFu7i_Sf_D");
    static STRUCT_IF_C BFu7i_Sf_D lv;
    check2(sizeof(lv), 9, "sizeof(BFu7i_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_D)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_D");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_D");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_D.v2");
    check_field_offset(lv, v3, 1, "BFu7i_Sf_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_D, BFu7i_Sf_D)
//============================================================================



static void Test_BFu7i_Sf_F()
{
  {
    init_simple_test("BFu7i_Sf_F");
    static STRUCT_IF_C BFu7i_Sf_F lv;
    check2(sizeof(lv), 5, "sizeof(BFu7i_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_F)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_F");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_F");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_F.v2");
    check_field_offset(lv, v3, 1, "BFu7i_Sf_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_F, BFu7i_Sf_F)
//============================================================================



static void Test_BFu7i_Sf_I()
{
  {
    init_simple_test("BFu7i_Sf_I");
    static STRUCT_IF_C BFu7i_Sf_I lv;
    check2(sizeof(lv), 5, "sizeof(BFu7i_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_I)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_I");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_I");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_I.v2");
    check_field_offset(lv, v3, 1, "BFu7i_Sf_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_I, BFu7i_Sf_I)
//============================================================================



static void Test_BFu7i_Sf_Ip()
{
  {
    init_simple_test("BFu7i_Sf_Ip");
    static STRUCT_IF_C BFu7i_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7i_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_Ip");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_Ip");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_Ip.v2");
    check_field_offset(lv, v3, 1, "BFu7i_Sf_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_Ip, BFu7i_Sf_Ip)
//============================================================================



static void Test_BFu7i_Sf_L()
{
  {
    init_simple_test("BFu7i_Sf_L");
    static STRUCT_IF_C BFu7i_Sf_L lv;
    check2(sizeof(lv), 9, "sizeof(BFu7i_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_L)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_L");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_L");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_L.v2");
    check_field_offset(lv, v3, 1, "BFu7i_Sf_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_L, BFu7i_Sf_L)
//============================================================================



static void Test_BFu7i_Sf_S()
{
  {
    init_simple_test("BFu7i_Sf_S");
    static STRUCT_IF_C BFu7i_Sf_S lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_S)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_S");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_S");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_S.v2");
    check_field_offset(lv, v3, 1, "BFu7i_Sf_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_S, BFu7i_Sf_S)
//============================================================================



static void Test_BFu7i_Sf_Sf()
{
  {
    init_simple_test("BFu7i_Sf_Sf");
    static STRUCT_IF_C BFu7i_Sf_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu7i_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_Sf");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_Sf.v2");
    check_field_offset(lv, v3, 1, "BFu7i_Sf_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_Sf, BFu7i_Sf_Sf)
//============================================================================



static void Test_BFu7i_Sf_Uc()
{
  {
    init_simple_test("BFu7i_Sf_Uc");
    static STRUCT_IF_C BFu7i_Sf_Uc lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_Uc");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_Uc");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_Uc.v2");
    check_field_offset(lv, v3, 1, "BFu7i_Sf_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_Uc, BFu7i_Sf_Uc)
//============================================================================



static void Test_BFu7i_Sf_Ui()
{
  {
    init_simple_test("BFu7i_Sf_Ui");
    static STRUCT_IF_C BFu7i_Sf_Ui lv;
    check2(sizeof(lv), 5, "sizeof(BFu7i_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_Ui");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_Ui");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_Ui.v2");
    check_field_offset(lv, v3, 1, "BFu7i_Sf_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_Ui, BFu7i_Sf_Ui)
//============================================================================



static void Test_BFu7i_Sf_Ul()
{
  {
    init_simple_test("BFu7i_Sf_Ul");
    static STRUCT_IF_C BFu7i_Sf_Ul lv;
    check2(sizeof(lv), 9, "sizeof(BFu7i_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_Ul");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_Ul");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_Ul.v2");
    check_field_offset(lv, v3, 1, "BFu7i_Sf_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_Ul, BFu7i_Sf_Ul)
//============================================================================



static void Test_BFu7i_Sf_Us()
{
  {
    init_simple_test("BFu7i_Sf_Us");
    static STRUCT_IF_C BFu7i_Sf_Us lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_Us)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_Us");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_Us");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_Us.v2");
    check_field_offset(lv, v3, 1, "BFu7i_Sf_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_Us, BFu7i_Sf_Us)
//============================================================================



static void Test_BFu7i_Sf_Vp()
{
  {
    init_simple_test("BFu7i_Sf_Vp");
    static STRUCT_IF_C BFu7i_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7i_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Sf_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Sf_Vp");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Sf_Vp");
    check_field_offset(lv, v2, 1, "BFu7i_Sf_Vp.v2");
    check_field_offset(lv, v3, 1, "BFu7i_Sf_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Sf_Vp, BFu7i_Sf_Vp)
//============================================================================



static void Test_BFu7i_Uc_Sf()
{
  {
    init_simple_test("BFu7i_Uc_Sf");
    static STRUCT_IF_C BFu7i_Uc_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Uc_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Uc_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Uc_Sf");
    check_field_offset(lv, v2, 1, "BFu7i_Uc_Sf.v2");
    check_field_offset(lv, v3, 2, "BFu7i_Uc_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Uc_Sf, BFu7i_Uc_Sf)
//============================================================================



static void Test_BFu7i_Ui_Sf()
{
  {
    init_simple_test("BFu7i_Ui_Sf");
    static STRUCT_IF_C BFu7i_Ui_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7i_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Ui_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Ui_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Ui_Sf");
    check_field_offset(lv, v2, 1, "BFu7i_Ui_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu7i_Ui_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Ui_Sf, BFu7i_Ui_Sf)
//============================================================================



static void Test_BFu7i_Ul_Sf()
{
  {
    init_simple_test("BFu7i_Ul_Sf");
    static STRUCT_IF_C BFu7i_Ul_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu7i_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Ul_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Ul_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Ul_Sf");
    check_field_offset(lv, v2, 1, "BFu7i_Ul_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu7i_Ul_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Ul_Sf, BFu7i_Ul_Sf)
//============================================================================



static void Test_BFu7i_Us_Sf()
{
  {
    init_simple_test("BFu7i_Us_Sf");
    static STRUCT_IF_C BFu7i_Us_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Us_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Us_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Us_Sf");
    check_field_offset(lv, v2, 1, "BFu7i_Us_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu7i_Us_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Us_Sf, BFu7i_Us_Sf)
//============================================================================



static void Test_BFu7i_Vp_Sf()
{
  {
    init_simple_test("BFu7i_Vp_Sf");
    static STRUCT_IF_C BFu7i_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7i_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_Vp_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_Vp_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_Vp_Sf");
    check_field_offset(lv, v2, 1, "BFu7i_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "BFu7i_Vp_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7i_Vp_Sf, BFu7i_Vp_Sf)
//============================================================================



static void Test_BFu7ll_BFu15i_Sf()
{
  {
    init_simple_test("BFu7ll_BFu15i_Sf");
    static STRUCT_IF_C BFu7ll_BFu15i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7ll_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_BFu15i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_BFu15i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_BFu15i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7ll_BFu15i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7ll_BFu15i_Sf");
    check_field_offset(lv, v3, 3, "BFu7ll_BFu15i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_BFu15i_Sf, BFu7ll_BFu15i_Sf)
//============================================================================



static void Test_BFu7ll_BFu15ll_Sf()
{
  {
    init_simple_test("BFu7ll_BFu15ll_Sf");
    static STRUCT_IF_C BFu7ll_BFu15ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7ll_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_BFu15ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_BFu15ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7ll_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7ll_BFu15ll_Sf");
    check_field_offset(lv, v3, 3, "BFu7ll_BFu15ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_BFu15ll_Sf, BFu7ll_BFu15ll_Sf)
//============================================================================



static void Test_BFu7ll_BFu15s_Sf()
{
  {
    init_simple_test("BFu7ll_BFu15s_Sf");
    static STRUCT_IF_C BFu7ll_BFu15s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7ll_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_BFu15s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_BFu15s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_BFu15s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7ll_BFu15s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7ll_BFu15s_Sf");
    check_field_offset(lv, v3, 3, "BFu7ll_BFu15s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_BFu15s_Sf, BFu7ll_BFu15s_Sf)
//============================================================================



static void Test_BFu7ll_BFu16i_Sf()
{
  {
    init_simple_test("BFu7ll_BFu16i_Sf");
    static STRUCT_IF_C BFu7ll_BFu16i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7ll_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_BFu16i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_BFu16i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_BFu16i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7ll_BFu16i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7ll_BFu16i_Sf");
    check_field_offset(lv, v3, 3, "BFu7ll_BFu16i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_BFu16i_Sf, BFu7ll_BFu16i_Sf)
//============================================================================



static void Test_BFu7ll_BFu16ll_Sf()
{
  {
    init_simple_test("BFu7ll_BFu16ll_Sf");
    static STRUCT_IF_C BFu7ll_BFu16ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7ll_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_BFu16ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_BFu16ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7ll_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7ll_BFu16ll_Sf");
    check_field_offset(lv, v3, 3, "BFu7ll_BFu16ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_BFu16ll_Sf, BFu7ll_BFu16ll_Sf)
//============================================================================



static void Test_BFu7ll_BFu16s_Sf()
{
  {
    init_simple_test("BFu7ll_BFu16s_Sf");
    static STRUCT_IF_C BFu7ll_BFu16s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7ll_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_BFu16s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_BFu16s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_BFu16s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7ll_BFu16s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7ll_BFu16s_Sf");
    check_field_offset(lv, v3, 3, "BFu7ll_BFu16s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_BFu16s_Sf, BFu7ll_BFu16s_Sf)
//============================================================================



static void Test_BFu7ll_BFu17i_Sf()
{
  {
    init_simple_test("BFu7ll_BFu17i_Sf");
    static STRUCT_IF_C BFu7ll_BFu17i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7ll_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_BFu17i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_BFu17i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_BFu17i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "BFu7ll_BFu17i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "BFu7ll_BFu17i_Sf");
    check_field_offset(lv, v3, 3, "BFu7ll_BFu17i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_BFu17i_Sf, BFu7ll_BFu17i_Sf)
//============================================================================



static void Test_BFu7ll_BFu17ll_Sf()
{
  {
    init_simple_test("BFu7ll_BFu17ll_Sf");
    static STRUCT_IF_C BFu7ll_BFu17ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7ll_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_BFu17ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_BFu17ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "BFu7ll_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "BFu7ll_BFu17ll_Sf");
    check_field_offset(lv, v3, 3, "BFu7ll_BFu17ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_BFu17ll_Sf, BFu7ll_BFu17ll_Sf)
//============================================================================



static void Test_BFu7ll_BFu1c_Sf()
{
  {
    init_simple_test("BFu7ll_BFu1c_Sf");
    static STRUCT_IF_C BFu7ll_BFu1c_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu7ll_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_BFu1c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_BFu1c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_BFu1c_Sf");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7ll_BFu1c_Sf");
    check_field_offset(lv, v3, 1, "BFu7ll_BFu1c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_BFu1c_Sf, BFu7ll_BFu1c_Sf)
//============================================================================



static void Test_BFu7ll_BFu1i_Sf()
{
  {
    init_simple_test("BFu7ll_BFu1i_Sf");
    static STRUCT_IF_C BFu7ll_BFu1i_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu7ll_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_BFu1i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_BFu1i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_BFu1i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7ll_BFu1i_Sf");
    check_field_offset(lv, v3, 1, "BFu7ll_BFu1i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_BFu1i_Sf, BFu7ll_BFu1i_Sf)
//============================================================================



static void Test_BFu7ll_BFu1ll_Sf()
{
  {
    init_simple_test("BFu7ll_BFu1ll_Sf");
    static STRUCT_IF_C BFu7ll_BFu1ll_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu7ll_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_BFu1ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_BFu1ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_BFu1ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7ll_BFu1ll_Sf");
    check_field_offset(lv, v3, 1, "BFu7ll_BFu1ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_BFu1ll_Sf, BFu7ll_BFu1ll_Sf)
//============================================================================



static void Test_BFu7ll_BFu1s_Sf()
{
  {
    init_simple_test("BFu7ll_BFu1s_Sf");
    static STRUCT_IF_C BFu7ll_BFu1s_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu7ll_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_BFu1s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_BFu1s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_BFu1s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7ll_BFu1s_Sf");
    check_field_offset(lv, v3, 1, "BFu7ll_BFu1s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_BFu1s_Sf, BFu7ll_BFu1s_Sf)
//============================================================================



static void Test_BFu7ll_BFu31i_Sf()
{
  {
    init_simple_test("BFu7ll_BFu31i_Sf");
    static STRUCT_IF_C BFu7ll_BFu31i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7ll_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_BFu31i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_BFu31i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_BFu31i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "BFu7ll_BFu31i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "BFu7ll_BFu31i_Sf");
    check_field_offset(lv, v3, 5, "BFu7ll_BFu31i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_BFu31i_Sf, BFu7ll_BFu31i_Sf)
//============================================================================



static void Test_BFu7ll_BFu31ll_Sf()
{
  {
    init_simple_test("BFu7ll_BFu31ll_Sf");
    static STRUCT_IF_C BFu7ll_BFu31ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7ll_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_BFu31ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_BFu31ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "BFu7ll_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "BFu7ll_BFu31ll_Sf");
    check_field_offset(lv, v3, 5, "BFu7ll_BFu31ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_BFu31ll_Sf, BFu7ll_BFu31ll_Sf)
//============================================================================



static void Test_BFu7ll_BFu32i_Sf()
{
  {
    init_simple_test("BFu7ll_BFu32i_Sf");
    static STRUCT_IF_C BFu7ll_BFu32i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7ll_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_BFu32i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_BFu32i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_BFu32i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "BFu7ll_BFu32i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "BFu7ll_BFu32i_Sf");
    check_field_offset(lv, v3, 5, "BFu7ll_BFu32i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_BFu32i_Sf, BFu7ll_BFu32i_Sf)
//============================================================================



static void Test_BFu7ll_BFu32ll_Sf()
{
  {
    init_simple_test("BFu7ll_BFu32ll_Sf");
    static STRUCT_IF_C BFu7ll_BFu32ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7ll_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_BFu32ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_BFu32ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "BFu7ll_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "BFu7ll_BFu32ll_Sf");
    check_field_offset(lv, v3, 5, "BFu7ll_BFu32ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_BFu32ll_Sf, BFu7ll_BFu32ll_Sf)
//============================================================================



static void Test_BFu7ll_BFu33_Sf()
{
  {
    init_simple_test("BFu7ll_BFu33_Sf");
    static STRUCT_IF_C BFu7ll_BFu33_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7ll_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_BFu33_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_BFu33_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_BFu33_Sf");
    set_bf_and_test(lv, v2, 0, 7, 33, 1, "BFu7ll_BFu33_Sf");
    set_bf_and_test(lv, v2, 0, 7, 33, hide_ull(1LL<<32), "BFu7ll_BFu33_Sf");
    check_field_offset(lv, v3, 5, "BFu7ll_BFu33_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_BFu33_Sf, BFu7ll_BFu33_Sf)
//============================================================================



static void Test_BFu7ll_BFu7c_Sf()
{
  {
    init_simple_test("BFu7ll_BFu7c_Sf");
    static STRUCT_IF_C BFu7ll_BFu7c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7ll_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_BFu7c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_BFu7c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_BFu7c_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7ll_BFu7c_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7ll_BFu7c_Sf");
    check_field_offset(lv, v3, 2, "BFu7ll_BFu7c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_BFu7c_Sf, BFu7ll_BFu7c_Sf)
//============================================================================



static void Test_BFu7ll_BFu7i_Sf()
{
  {
    init_simple_test("BFu7ll_BFu7i_Sf");
    static STRUCT_IF_C BFu7ll_BFu7i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7ll_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_BFu7i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_BFu7i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_BFu7i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7ll_BFu7i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7ll_BFu7i_Sf");
    check_field_offset(lv, v3, 2, "BFu7ll_BFu7i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_BFu7i_Sf, BFu7ll_BFu7i_Sf)
//============================================================================



static void Test_BFu7ll_BFu7ll_Sf()
{
  {
    init_simple_test("BFu7ll_BFu7ll_Sf");
    static STRUCT_IF_C BFu7ll_BFu7ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7ll_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_BFu7ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_BFu7ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7ll_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7ll_BFu7ll_Sf");
    check_field_offset(lv, v3, 2, "BFu7ll_BFu7ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_BFu7ll_Sf, BFu7ll_BFu7ll_Sf)
//============================================================================



static void Test_BFu7ll_BFu7s_Sf()
{
  {
    init_simple_test("BFu7ll_BFu7s_Sf");
    static STRUCT_IF_C BFu7ll_BFu7s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7ll_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_BFu7s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_BFu7s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_BFu7s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7ll_BFu7s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7ll_BFu7s_Sf");
    check_field_offset(lv, v3, 2, "BFu7ll_BFu7s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_BFu7s_Sf, BFu7ll_BFu7s_Sf)
//============================================================================



static void Test_BFu7ll_BFu8c_Sf()
{
  {
    init_simple_test("BFu7ll_BFu8c_Sf");
    static STRUCT_IF_C BFu7ll_BFu8c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7ll_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_BFu8c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_BFu8c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_BFu8c_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7ll_BFu8c_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7ll_BFu8c_Sf");
    check_field_offset(lv, v3, 2, "BFu7ll_BFu8c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_BFu8c_Sf, BFu7ll_BFu8c_Sf)
//============================================================================



static void Test_BFu7ll_BFu8i_Sf()
{
  {
    init_simple_test("BFu7ll_BFu8i_Sf");
    static STRUCT_IF_C BFu7ll_BFu8i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7ll_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_BFu8i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_BFu8i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_BFu8i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7ll_BFu8i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7ll_BFu8i_Sf");
    check_field_offset(lv, v3, 2, "BFu7ll_BFu8i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_BFu8i_Sf, BFu7ll_BFu8i_Sf)
//============================================================================



static void Test_BFu7ll_BFu8ll_Sf()
{
  {
    init_simple_test("BFu7ll_BFu8ll_Sf");
    static STRUCT_IF_C BFu7ll_BFu8ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7ll_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_BFu8ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_BFu8ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7ll_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7ll_BFu8ll_Sf");
    check_field_offset(lv, v3, 2, "BFu7ll_BFu8ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_BFu8ll_Sf, BFu7ll_BFu8ll_Sf)
//============================================================================



static void Test_BFu7ll_BFu8s_Sf()
{
  {
    init_simple_test("BFu7ll_BFu8s_Sf");
    static STRUCT_IF_C BFu7ll_BFu8s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7ll_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_BFu8s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_BFu8s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_BFu8s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7ll_BFu8s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7ll_BFu8s_Sf");
    check_field_offset(lv, v3, 2, "BFu7ll_BFu8s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_BFu8s_Sf, BFu7ll_BFu8s_Sf)
//============================================================================



static void Test_BFu7ll_BFu9i_Sf()
{
  {
    init_simple_test("BFu7ll_BFu9i_Sf");
    static STRUCT_IF_C BFu7ll_BFu9i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7ll_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_BFu9i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_BFu9i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_BFu9i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "BFu7ll_BFu9i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "BFu7ll_BFu9i_Sf");
    check_field_offset(lv, v3, 2, "BFu7ll_BFu9i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_BFu9i_Sf, BFu7ll_BFu9i_Sf)
//============================================================================



static void Test_BFu7ll_BFu9ll_Sf()
{
  {
    init_simple_test("BFu7ll_BFu9ll_Sf");
    static STRUCT_IF_C BFu7ll_BFu9ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7ll_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_BFu9ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_BFu9ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "BFu7ll_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "BFu7ll_BFu9ll_Sf");
    check_field_offset(lv, v3, 2, "BFu7ll_BFu9ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_BFu9ll_Sf, BFu7ll_BFu9ll_Sf)
//============================================================================



static void Test_BFu7ll_BFu9s_Sf()
{
  {
    init_simple_test("BFu7ll_BFu9s_Sf");
    static STRUCT_IF_C BFu7ll_BFu9s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7ll_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_BFu9s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_BFu9s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_BFu9s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "BFu7ll_BFu9s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "BFu7ll_BFu9s_Sf");
    check_field_offset(lv, v3, 2, "BFu7ll_BFu9s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_BFu9s_Sf, BFu7ll_BFu9s_Sf)
//============================================================================



static void Test_BFu7ll_C_Sf()
{
  {
    init_simple_test("BFu7ll_C_Sf");
    static STRUCT_IF_C BFu7ll_C_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7ll_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_C_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_C_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_C_Sf");
    check_field_offset(lv, v2, 1, "BFu7ll_C_Sf.v2");
    check_field_offset(lv, v3, 2, "BFu7ll_C_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_C_Sf, BFu7ll_C_Sf)
//============================================================================



static void Test_BFu7ll_D_Sf()
{
  {
    init_simple_test("BFu7ll_D_Sf");
    static STRUCT_IF_C BFu7ll_D_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu7ll_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_D_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_D_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_D_Sf");
    check_field_offset(lv, v2, 1, "BFu7ll_D_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu7ll_D_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_D_Sf, BFu7ll_D_Sf)
//============================================================================



static void Test_BFu7ll_F_Sf()
{
  {
    init_simple_test("BFu7ll_F_Sf");
    static STRUCT_IF_C BFu7ll_F_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7ll_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_F_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_F_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_F_Sf");
    check_field_offset(lv, v2, 1, "BFu7ll_F_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu7ll_F_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_F_Sf, BFu7ll_F_Sf)
//============================================================================



static void Test_BFu7ll_I_Sf()
{
  {
    init_simple_test("BFu7ll_I_Sf");
    static STRUCT_IF_C BFu7ll_I_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7ll_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_I_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_I_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_I_Sf");
    check_field_offset(lv, v2, 1, "BFu7ll_I_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu7ll_I_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_I_Sf, BFu7ll_I_Sf)
//============================================================================



static void Test_BFu7ll_Ip_Sf()
{
  {
    init_simple_test("BFu7ll_Ip_Sf");
    static STRUCT_IF_C BFu7ll_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7ll_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Ip_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Ip_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Ip_Sf");
    check_field_offset(lv, v2, 1, "BFu7ll_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "BFu7ll_Ip_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Ip_Sf, BFu7ll_Ip_Sf)
//============================================================================



static void Test_BFu7ll_L_Sf()
{
  {
    init_simple_test("BFu7ll_L_Sf");
    static STRUCT_IF_C BFu7ll_L_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu7ll_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_L_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_L_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_L_Sf");
    check_field_offset(lv, v2, 1, "BFu7ll_L_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu7ll_L_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_L_Sf, BFu7ll_L_Sf)
//============================================================================



static void Test_BFu7ll_S_Sf()
{
  {
    init_simple_test("BFu7ll_S_Sf");
    static STRUCT_IF_C BFu7ll_S_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7ll_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_S_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_S_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_S_Sf");
    check_field_offset(lv, v2, 1, "BFu7ll_S_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu7ll_S_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_S_Sf, BFu7ll_S_Sf)
//============================================================================



static void Test_BFu7ll_Sf()
{
  {
    init_simple_test("BFu7ll_Sf");
    static STRUCT_IF_C BFu7ll_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf, BFu7ll_Sf)
//============================================================================



static void Test_BFu7ll_Sf_BFu15i()
{
  {
    init_simple_test("BFu7ll_Sf_BFu15i");
    static STRUCT_IF_C BFu7ll_Sf_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(BFu7ll_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu15i");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "BFu7ll_Sf_BFu15i");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "BFu7ll_Sf_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_BFu15i, BFu7ll_Sf_BFu15i)
//============================================================================



static void Test_BFu7ll_Sf_BFu15ll()
{
  {
    init_simple_test("BFu7ll_Sf_BFu15ll");
    static STRUCT_IF_C BFu7ll_Sf_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu7ll_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu15ll");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "BFu7ll_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "BFu7ll_Sf_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_BFu15ll, BFu7ll_Sf_BFu15ll)
//============================================================================



static void Test_BFu7ll_Sf_BFu15s()
{
  {
    init_simple_test("BFu7ll_Sf_BFu15s");
    static STRUCT_IF_C BFu7ll_Sf_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(BFu7ll_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu15s");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "BFu7ll_Sf_BFu15s");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "BFu7ll_Sf_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_BFu15s, BFu7ll_Sf_BFu15s)
//============================================================================



static void Test_BFu7ll_Sf_BFu16i()
{
  {
    init_simple_test("BFu7ll_Sf_BFu16i");
    static STRUCT_IF_C BFu7ll_Sf_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(BFu7ll_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu16i");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "BFu7ll_Sf_BFu16i");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "BFu7ll_Sf_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_BFu16i, BFu7ll_Sf_BFu16i)
//============================================================================



static void Test_BFu7ll_Sf_BFu16ll()
{
  {
    init_simple_test("BFu7ll_Sf_BFu16ll");
    static STRUCT_IF_C BFu7ll_Sf_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu7ll_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu16ll");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "BFu7ll_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "BFu7ll_Sf_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_BFu16ll, BFu7ll_Sf_BFu16ll)
//============================================================================



static void Test_BFu7ll_Sf_BFu16s()
{
  {
    init_simple_test("BFu7ll_Sf_BFu16s");
    static STRUCT_IF_C BFu7ll_Sf_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(BFu7ll_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu16s");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "BFu7ll_Sf_BFu16s");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "BFu7ll_Sf_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_BFu16s, BFu7ll_Sf_BFu16s)
//============================================================================



static void Test_BFu7ll_Sf_BFu17i()
{
  {
    init_simple_test("BFu7ll_Sf_BFu17i");
    static STRUCT_IF_C BFu7ll_Sf_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(BFu7ll_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu17i");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 1, 0, 17, 1, "BFu7ll_Sf_BFu17i");
    set_bf_and_test(lv, v3, 1, 0, 17, hide_ull(1LL<<16), "BFu7ll_Sf_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_BFu17i, BFu7ll_Sf_BFu17i)
//============================================================================



static void Test_BFu7ll_Sf_BFu17ll()
{
  {
    init_simple_test("BFu7ll_Sf_BFu17ll");
    static STRUCT_IF_C BFu7ll_Sf_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu7ll_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu17ll");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 17, 1, "BFu7ll_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 1, 0, 17, hide_ull(1LL<<16), "BFu7ll_Sf_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_BFu17ll, BFu7ll_Sf_BFu17ll)
//============================================================================



static void Test_BFu7ll_Sf_BFu1c()
{
  {
    init_simple_test("BFu7ll_Sf_BFu1c");
    static STRUCT_IF_C BFu7ll_Sf_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(BFu7ll_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu1c");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu7ll_Sf_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_BFu1c, BFu7ll_Sf_BFu1c)
//============================================================================



static void Test_BFu7ll_Sf_BFu1i()
{
  {
    init_simple_test("BFu7ll_Sf_BFu1i");
    static STRUCT_IF_C BFu7ll_Sf_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(BFu7ll_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu1i");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu7ll_Sf_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_BFu1i, BFu7ll_Sf_BFu1i)
//============================================================================



static void Test_BFu7ll_Sf_BFu1ll()
{
  {
    init_simple_test("BFu7ll_Sf_BFu1ll");
    static STRUCT_IF_C BFu7ll_Sf_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu7ll_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu1ll");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu7ll_Sf_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_BFu1ll, BFu7ll_Sf_BFu1ll)
//============================================================================



static void Test_BFu7ll_Sf_BFu1s()
{
  {
    init_simple_test("BFu7ll_Sf_BFu1s");
    static STRUCT_IF_C BFu7ll_Sf_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(BFu7ll_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu1s");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu7ll_Sf_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_BFu1s, BFu7ll_Sf_BFu1s)
//============================================================================



static void Test_BFu7ll_Sf_BFu31i()
{
  {
    init_simple_test("BFu7ll_Sf_BFu31i");
    static STRUCT_IF_C BFu7ll_Sf_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(BFu7ll_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu31i");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 1, 0, 31, 1, "BFu7ll_Sf_BFu31i");
    set_bf_and_test(lv, v3, 1, 0, 31, hide_ull(1LL<<30), "BFu7ll_Sf_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_BFu31i, BFu7ll_Sf_BFu31i)
//============================================================================



static void Test_BFu7ll_Sf_BFu31ll()
{
  {
    init_simple_test("BFu7ll_Sf_BFu31ll");
    static STRUCT_IF_C BFu7ll_Sf_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu7ll_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu31ll");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 31, 1, "BFu7ll_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 1, 0, 31, hide_ull(1LL<<30), "BFu7ll_Sf_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_BFu31ll, BFu7ll_Sf_BFu31ll)
//============================================================================



static void Test_BFu7ll_Sf_BFu32i()
{
  {
    init_simple_test("BFu7ll_Sf_BFu32i");
    static STRUCT_IF_C BFu7ll_Sf_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(BFu7ll_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu32i");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 1, 0, 32, 1, "BFu7ll_Sf_BFu32i");
    set_bf_and_test(lv, v3, 1, 0, 32, hide_ull(1LL<<31), "BFu7ll_Sf_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_BFu32i, BFu7ll_Sf_BFu32i)
//============================================================================



static void Test_BFu7ll_Sf_BFu32ll()
{
  {
    init_simple_test("BFu7ll_Sf_BFu32ll");
    static STRUCT_IF_C BFu7ll_Sf_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu7ll_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu32ll");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 32, 1, "BFu7ll_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 1, 0, 32, hide_ull(1LL<<31), "BFu7ll_Sf_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_BFu32ll, BFu7ll_Sf_BFu32ll)
//============================================================================



static void Test_BFu7ll_Sf_BFu33()
{
  {
    init_simple_test("BFu7ll_Sf_BFu33");
    static STRUCT_IF_C BFu7ll_Sf_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(BFu7ll_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu33");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 1, 0, 33, 1, "BFu7ll_Sf_BFu33");
    set_bf_and_test(lv, v3, 1, 0, 33, hide_ull(1LL<<32), "BFu7ll_Sf_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_BFu33, BFu7ll_Sf_BFu33)
//============================================================================



static void Test_BFu7ll_Sf_BFu7c()
{
  {
    init_simple_test("BFu7ll_Sf_BFu7c");
    static STRUCT_IF_C BFu7ll_Sf_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(BFu7ll_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu7c");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu7ll_Sf_BFu7c");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_BFu7c, BFu7ll_Sf_BFu7c)
//============================================================================



static void Test_BFu7ll_Sf_BFu7i()
{
  {
    init_simple_test("BFu7ll_Sf_BFu7i");
    static STRUCT_IF_C BFu7ll_Sf_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(BFu7ll_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu7i");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu7ll_Sf_BFu7i");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_BFu7i, BFu7ll_Sf_BFu7i)
//============================================================================



static void Test_BFu7ll_Sf_BFu7ll()
{
  {
    init_simple_test("BFu7ll_Sf_BFu7ll");
    static STRUCT_IF_C BFu7ll_Sf_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu7ll_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu7ll");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu7ll_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_BFu7ll, BFu7ll_Sf_BFu7ll)
//============================================================================



static void Test_BFu7ll_Sf_BFu7s()
{
  {
    init_simple_test("BFu7ll_Sf_BFu7s");
    static STRUCT_IF_C BFu7ll_Sf_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(BFu7ll_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu7s");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu7ll_Sf_BFu7s");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_BFu7s, BFu7ll_Sf_BFu7s)
//============================================================================



static void Test_BFu7ll_Sf_BFu8c()
{
  {
    init_simple_test("BFu7ll_Sf_BFu8c");
    static STRUCT_IF_C BFu7ll_Sf_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(BFu7ll_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu8c");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu7ll_Sf_BFu8c");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu7ll_Sf_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_BFu8c, BFu7ll_Sf_BFu8c)
//============================================================================



static void Test_BFu7ll_Sf_BFu8i()
{
  {
    init_simple_test("BFu7ll_Sf_BFu8i");
    static STRUCT_IF_C BFu7ll_Sf_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(BFu7ll_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu8i");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu7ll_Sf_BFu8i");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu7ll_Sf_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_BFu8i, BFu7ll_Sf_BFu8i)
//============================================================================



static void Test_BFu7ll_Sf_BFu8ll()
{
  {
    init_simple_test("BFu7ll_Sf_BFu8ll");
    static STRUCT_IF_C BFu7ll_Sf_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu7ll_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu8ll");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu7ll_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu7ll_Sf_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_BFu8ll, BFu7ll_Sf_BFu8ll)
//============================================================================



static void Test_BFu7ll_Sf_BFu8s()
{
  {
    init_simple_test("BFu7ll_Sf_BFu8s");
    static STRUCT_IF_C BFu7ll_Sf_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(BFu7ll_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu8s");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu7ll_Sf_BFu8s");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu7ll_Sf_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_BFu8s, BFu7ll_Sf_BFu8s)
//============================================================================



static void Test_BFu7ll_Sf_BFu9i()
{
  {
    init_simple_test("BFu7ll_Sf_BFu9i");
    static STRUCT_IF_C BFu7ll_Sf_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(BFu7ll_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu9i");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "BFu7ll_Sf_BFu9i");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "BFu7ll_Sf_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_BFu9i, BFu7ll_Sf_BFu9i)
//============================================================================



static void Test_BFu7ll_Sf_BFu9ll()
{
  {
    init_simple_test("BFu7ll_Sf_BFu9ll");
    static STRUCT_IF_C BFu7ll_Sf_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu7ll_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu9ll");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "BFu7ll_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "BFu7ll_Sf_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_BFu9ll, BFu7ll_Sf_BFu9ll)
//============================================================================



static void Test_BFu7ll_Sf_BFu9s()
{
  {
    init_simple_test("BFu7ll_Sf_BFu9s");
    static STRUCT_IF_C BFu7ll_Sf_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(BFu7ll_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_BFu9s");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "BFu7ll_Sf_BFu9s");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "BFu7ll_Sf_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_BFu9s, BFu7ll_Sf_BFu9s)
//============================================================================



static void Test_BFu7ll_Sf_C()
{
  {
    init_simple_test("BFu7ll_Sf_C");
    static STRUCT_IF_C BFu7ll_Sf_C lv;
    check2(sizeof(lv), 2, "sizeof(BFu7ll_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_C)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_C");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_C");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_C.v2");
    check_field_offset(lv, v3, 1, "BFu7ll_Sf_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_C, BFu7ll_Sf_C)
//============================================================================



static void Test_BFu7ll_Sf_D()
{
  {
    init_simple_test("BFu7ll_Sf_D");
    static STRUCT_IF_C BFu7ll_Sf_D lv;
    check2(sizeof(lv), 9, "sizeof(BFu7ll_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_D)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_D");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_D");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_D.v2");
    check_field_offset(lv, v3, 1, "BFu7ll_Sf_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_D, BFu7ll_Sf_D)
//============================================================================



static void Test_BFu7ll_Sf_F()
{
  {
    init_simple_test("BFu7ll_Sf_F");
    static STRUCT_IF_C BFu7ll_Sf_F lv;
    check2(sizeof(lv), 5, "sizeof(BFu7ll_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_F)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_F");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_F");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_F.v2");
    check_field_offset(lv, v3, 1, "BFu7ll_Sf_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_F, BFu7ll_Sf_F)
//============================================================================



static void Test_BFu7ll_Sf_I()
{
  {
    init_simple_test("BFu7ll_Sf_I");
    static STRUCT_IF_C BFu7ll_Sf_I lv;
    check2(sizeof(lv), 5, "sizeof(BFu7ll_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_I)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_I");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_I");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_I.v2");
    check_field_offset(lv, v3, 1, "BFu7ll_Sf_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_I, BFu7ll_Sf_I)
//============================================================================



static void Test_BFu7ll_Sf_Ip()
{
  {
    init_simple_test("BFu7ll_Sf_Ip");
    static STRUCT_IF_C BFu7ll_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7ll_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_Ip");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_Ip");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_Ip.v2");
    check_field_offset(lv, v3, 1, "BFu7ll_Sf_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_Ip, BFu7ll_Sf_Ip)
//============================================================================



static void Test_BFu7ll_Sf_L()
{
  {
    init_simple_test("BFu7ll_Sf_L");
    static STRUCT_IF_C BFu7ll_Sf_L lv;
    check2(sizeof(lv), 9, "sizeof(BFu7ll_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_L)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_L");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_L");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_L.v2");
    check_field_offset(lv, v3, 1, "BFu7ll_Sf_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_L, BFu7ll_Sf_L)
//============================================================================



static void Test_BFu7ll_Sf_S()
{
  {
    init_simple_test("BFu7ll_Sf_S");
    static STRUCT_IF_C BFu7ll_Sf_S lv;
    check2(sizeof(lv), 3, "sizeof(BFu7ll_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_S)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_S");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_S");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_S.v2");
    check_field_offset(lv, v3, 1, "BFu7ll_Sf_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_S, BFu7ll_Sf_S)
//============================================================================



static void Test_BFu7ll_Sf_Sf()
{
  {
    init_simple_test("BFu7ll_Sf_Sf");
    static STRUCT_IF_C BFu7ll_Sf_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu7ll_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_Sf");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_Sf.v2");
    check_field_offset(lv, v3, 1, "BFu7ll_Sf_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_Sf, BFu7ll_Sf_Sf)
//============================================================================



static void Test_BFu7ll_Sf_Uc()
{
  {
    init_simple_test("BFu7ll_Sf_Uc");
    static STRUCT_IF_C BFu7ll_Sf_Uc lv;
    check2(sizeof(lv), 2, "sizeof(BFu7ll_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_Uc");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_Uc");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_Uc.v2");
    check_field_offset(lv, v3, 1, "BFu7ll_Sf_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_Uc, BFu7ll_Sf_Uc)
//============================================================================



static void Test_BFu7ll_Sf_Ui()
{
  {
    init_simple_test("BFu7ll_Sf_Ui");
    static STRUCT_IF_C BFu7ll_Sf_Ui lv;
    check2(sizeof(lv), 5, "sizeof(BFu7ll_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_Ui");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_Ui");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_Ui.v2");
    check_field_offset(lv, v3, 1, "BFu7ll_Sf_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_Ui, BFu7ll_Sf_Ui)
//============================================================================



static void Test_BFu7ll_Sf_Ul()
{
  {
    init_simple_test("BFu7ll_Sf_Ul");
    static STRUCT_IF_C BFu7ll_Sf_Ul lv;
    check2(sizeof(lv), 9, "sizeof(BFu7ll_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_Ul");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_Ul");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_Ul.v2");
    check_field_offset(lv, v3, 1, "BFu7ll_Sf_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_Ul, BFu7ll_Sf_Ul)
//============================================================================



static void Test_BFu7ll_Sf_Us()
{
  {
    init_simple_test("BFu7ll_Sf_Us");
    static STRUCT_IF_C BFu7ll_Sf_Us lv;
    check2(sizeof(lv), 3, "sizeof(BFu7ll_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_Us)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_Us");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_Us");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_Us.v2");
    check_field_offset(lv, v3, 1, "BFu7ll_Sf_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_Us, BFu7ll_Sf_Us)
//============================================================================



static void Test_BFu7ll_Sf_Vp()
{
  {
    init_simple_test("BFu7ll_Sf_Vp");
    static STRUCT_IF_C BFu7ll_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7ll_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Sf_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Sf_Vp");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Sf_Vp");
    check_field_offset(lv, v2, 1, "BFu7ll_Sf_Vp.v2");
    check_field_offset(lv, v3, 1, "BFu7ll_Sf_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Sf_Vp, BFu7ll_Sf_Vp)
//============================================================================



static void Test_BFu7ll_Uc_Sf()
{
  {
    init_simple_test("BFu7ll_Uc_Sf");
    static STRUCT_IF_C BFu7ll_Uc_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7ll_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Uc_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Uc_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Uc_Sf");
    check_field_offset(lv, v2, 1, "BFu7ll_Uc_Sf.v2");
    check_field_offset(lv, v3, 2, "BFu7ll_Uc_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Uc_Sf, BFu7ll_Uc_Sf)
//============================================================================



static void Test_BFu7ll_Ui_Sf()
{
  {
    init_simple_test("BFu7ll_Ui_Sf");
    static STRUCT_IF_C BFu7ll_Ui_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7ll_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Ui_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Ui_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Ui_Sf");
    check_field_offset(lv, v2, 1, "BFu7ll_Ui_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu7ll_Ui_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Ui_Sf, BFu7ll_Ui_Sf)
//============================================================================



static void Test_BFu7ll_Ul_Sf()
{
  {
    init_simple_test("BFu7ll_Ul_Sf");
    static STRUCT_IF_C BFu7ll_Ul_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu7ll_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Ul_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Ul_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Ul_Sf");
    check_field_offset(lv, v2, 1, "BFu7ll_Ul_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu7ll_Ul_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Ul_Sf, BFu7ll_Ul_Sf)
//============================================================================



static void Test_BFu7ll_Us_Sf()
{
  {
    init_simple_test("BFu7ll_Us_Sf");
    static STRUCT_IF_C BFu7ll_Us_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7ll_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Us_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Us_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Us_Sf");
    check_field_offset(lv, v2, 1, "BFu7ll_Us_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu7ll_Us_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Us_Sf, BFu7ll_Us_Sf)
//============================================================================



static void Test_BFu7ll_Vp_Sf()
{
  {
    init_simple_test("BFu7ll_Vp_Sf");
    static STRUCT_IF_C BFu7ll_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7ll_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7ll_Vp_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7ll_Vp_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7ll_Vp_Sf");
    check_field_offset(lv, v2, 1, "BFu7ll_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "BFu7ll_Vp_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7ll_Vp_Sf, BFu7ll_Vp_Sf)
//============================================================================



static void Test_BFu7s_BFu15i_Sf()
{
  {
    init_simple_test("BFu7s_BFu15i_Sf");
    static STRUCT_IF_C BFu7s_BFu15i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7s_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_BFu15i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_BFu15i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_BFu15i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7s_BFu15i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7s_BFu15i_Sf");
    check_field_offset(lv, v3, 3, "BFu7s_BFu15i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_BFu15i_Sf, BFu7s_BFu15i_Sf)
//============================================================================



static void Test_BFu7s_BFu15ll_Sf()
{
  {
    init_simple_test("BFu7s_BFu15ll_Sf");
    static STRUCT_IF_C BFu7s_BFu15ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7s_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_BFu15ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_BFu15ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7s_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7s_BFu15ll_Sf");
    check_field_offset(lv, v3, 3, "BFu7s_BFu15ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_BFu15ll_Sf, BFu7s_BFu15ll_Sf)
//============================================================================



static void Test_BFu7s_BFu15s_Sf()
{
  {
    init_simple_test("BFu7s_BFu15s_Sf");
    static STRUCT_IF_C BFu7s_BFu15s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7s_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_BFu15s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_BFu15s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_BFu15s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7s_BFu15s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7s_BFu15s_Sf");
    check_field_offset(lv, v3, 3, "BFu7s_BFu15s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_BFu15s_Sf, BFu7s_BFu15s_Sf)
//============================================================================



static void Test_BFu7s_BFu16i_Sf()
{
  {
    init_simple_test("BFu7s_BFu16i_Sf");
    static STRUCT_IF_C BFu7s_BFu16i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7s_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_BFu16i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_BFu16i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_BFu16i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7s_BFu16i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7s_BFu16i_Sf");
    check_field_offset(lv, v3, 3, "BFu7s_BFu16i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_BFu16i_Sf, BFu7s_BFu16i_Sf)
//============================================================================



static void Test_BFu7s_BFu16ll_Sf()
{
  {
    init_simple_test("BFu7s_BFu16ll_Sf");
    static STRUCT_IF_C BFu7s_BFu16ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7s_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_BFu16ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_BFu16ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7s_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7s_BFu16ll_Sf");
    check_field_offset(lv, v3, 3, "BFu7s_BFu16ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_BFu16ll_Sf, BFu7s_BFu16ll_Sf)
//============================================================================



static void Test_BFu7s_BFu16s_Sf()
{
  {
    init_simple_test("BFu7s_BFu16s_Sf");
    static STRUCT_IF_C BFu7s_BFu16s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7s_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_BFu16s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_BFu16s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_BFu16s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7s_BFu16s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7s_BFu16s_Sf");
    check_field_offset(lv, v3, 3, "BFu7s_BFu16s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_BFu16s_Sf, BFu7s_BFu16s_Sf)
//============================================================================



static void Test_BFu7s_BFu17i_Sf()
{
  {
    init_simple_test("BFu7s_BFu17i_Sf");
    static STRUCT_IF_C BFu7s_BFu17i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7s_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_BFu17i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_BFu17i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_BFu17i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "BFu7s_BFu17i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "BFu7s_BFu17i_Sf");
    check_field_offset(lv, v3, 3, "BFu7s_BFu17i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_BFu17i_Sf, BFu7s_BFu17i_Sf)
//============================================================================



static void Test_BFu7s_BFu17ll_Sf()
{
  {
    init_simple_test("BFu7s_BFu17ll_Sf");
    static STRUCT_IF_C BFu7s_BFu17ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7s_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_BFu17ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_BFu17ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "BFu7s_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "BFu7s_BFu17ll_Sf");
    check_field_offset(lv, v3, 3, "BFu7s_BFu17ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_BFu17ll_Sf, BFu7s_BFu17ll_Sf)
//============================================================================



static void Test_BFu7s_BFu1c_Sf()
{
  {
    init_simple_test("BFu7s_BFu1c_Sf");
    static STRUCT_IF_C BFu7s_BFu1c_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu7s_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_BFu1c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_BFu1c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_BFu1c_Sf");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7s_BFu1c_Sf");
    check_field_offset(lv, v3, 1, "BFu7s_BFu1c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_BFu1c_Sf, BFu7s_BFu1c_Sf)
//============================================================================



static void Test_BFu7s_BFu1i_Sf()
{
  {
    init_simple_test("BFu7s_BFu1i_Sf");
    static STRUCT_IF_C BFu7s_BFu1i_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu7s_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_BFu1i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_BFu1i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_BFu1i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7s_BFu1i_Sf");
    check_field_offset(lv, v3, 1, "BFu7s_BFu1i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_BFu1i_Sf, BFu7s_BFu1i_Sf)
//============================================================================



static void Test_BFu7s_BFu1ll_Sf()
{
  {
    init_simple_test("BFu7s_BFu1ll_Sf");
    static STRUCT_IF_C BFu7s_BFu1ll_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu7s_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_BFu1ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_BFu1ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_BFu1ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7s_BFu1ll_Sf");
    check_field_offset(lv, v3, 1, "BFu7s_BFu1ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_BFu1ll_Sf, BFu7s_BFu1ll_Sf)
//============================================================================



static void Test_BFu7s_BFu1s_Sf()
{
  {
    init_simple_test("BFu7s_BFu1s_Sf");
    static STRUCT_IF_C BFu7s_BFu1s_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu7s_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_BFu1s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_BFu1s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_BFu1s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7s_BFu1s_Sf");
    check_field_offset(lv, v3, 1, "BFu7s_BFu1s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_BFu1s_Sf, BFu7s_BFu1s_Sf)
//============================================================================



static void Test_BFu7s_BFu31i_Sf()
{
  {
    init_simple_test("BFu7s_BFu31i_Sf");
    static STRUCT_IF_C BFu7s_BFu31i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7s_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_BFu31i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_BFu31i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_BFu31i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "BFu7s_BFu31i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "BFu7s_BFu31i_Sf");
    check_field_offset(lv, v3, 5, "BFu7s_BFu31i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_BFu31i_Sf, BFu7s_BFu31i_Sf)
//============================================================================



static void Test_BFu7s_BFu31ll_Sf()
{
  {
    init_simple_test("BFu7s_BFu31ll_Sf");
    static STRUCT_IF_C BFu7s_BFu31ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7s_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_BFu31ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_BFu31ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "BFu7s_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "BFu7s_BFu31ll_Sf");
    check_field_offset(lv, v3, 5, "BFu7s_BFu31ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_BFu31ll_Sf, BFu7s_BFu31ll_Sf)
//============================================================================



static void Test_BFu7s_BFu32i_Sf()
{
  {
    init_simple_test("BFu7s_BFu32i_Sf");
    static STRUCT_IF_C BFu7s_BFu32i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7s_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_BFu32i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_BFu32i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_BFu32i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "BFu7s_BFu32i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "BFu7s_BFu32i_Sf");
    check_field_offset(lv, v3, 5, "BFu7s_BFu32i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_BFu32i_Sf, BFu7s_BFu32i_Sf)
//============================================================================



static void Test_BFu7s_BFu32ll_Sf()
{
  {
    init_simple_test("BFu7s_BFu32ll_Sf");
    static STRUCT_IF_C BFu7s_BFu32ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7s_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_BFu32ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_BFu32ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "BFu7s_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "BFu7s_BFu32ll_Sf");
    check_field_offset(lv, v3, 5, "BFu7s_BFu32ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_BFu32ll_Sf, BFu7s_BFu32ll_Sf)
//============================================================================



static void Test_BFu7s_BFu33_Sf()
{
  {
    init_simple_test("BFu7s_BFu33_Sf");
    static STRUCT_IF_C BFu7s_BFu33_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7s_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_BFu33_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_BFu33_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_BFu33_Sf");
    set_bf_and_test(lv, v2, 0, 7, 33, 1, "BFu7s_BFu33_Sf");
    set_bf_and_test(lv, v2, 0, 7, 33, hide_ull(1LL<<32), "BFu7s_BFu33_Sf");
    check_field_offset(lv, v3, 5, "BFu7s_BFu33_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_BFu33_Sf, BFu7s_BFu33_Sf)
//============================================================================



static void Test_BFu7s_BFu7c_Sf()
{
  {
    init_simple_test("BFu7s_BFu7c_Sf");
    static STRUCT_IF_C BFu7s_BFu7c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7s_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_BFu7c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_BFu7c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_BFu7c_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7s_BFu7c_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7s_BFu7c_Sf");
    check_field_offset(lv, v3, 2, "BFu7s_BFu7c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_BFu7c_Sf, BFu7s_BFu7c_Sf)
//============================================================================



static void Test_BFu7s_BFu7i_Sf()
{
  {
    init_simple_test("BFu7s_BFu7i_Sf");
    static STRUCT_IF_C BFu7s_BFu7i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7s_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_BFu7i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_BFu7i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_BFu7i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7s_BFu7i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7s_BFu7i_Sf");
    check_field_offset(lv, v3, 2, "BFu7s_BFu7i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_BFu7i_Sf, BFu7s_BFu7i_Sf)
//============================================================================



static void Test_BFu7s_BFu7ll_Sf()
{
  {
    init_simple_test("BFu7s_BFu7ll_Sf");
    static STRUCT_IF_C BFu7s_BFu7ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7s_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_BFu7ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_BFu7ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7s_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7s_BFu7ll_Sf");
    check_field_offset(lv, v3, 2, "BFu7s_BFu7ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_BFu7ll_Sf, BFu7s_BFu7ll_Sf)
//============================================================================



static void Test_BFu7s_BFu7s_Sf()
{
  {
    init_simple_test("BFu7s_BFu7s_Sf");
    static STRUCT_IF_C BFu7s_BFu7s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7s_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_BFu7s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_BFu7s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_BFu7s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7s_BFu7s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7s_BFu7s_Sf");
    check_field_offset(lv, v3, 2, "BFu7s_BFu7s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_BFu7s_Sf, BFu7s_BFu7s_Sf)
//============================================================================



static void Test_BFu7s_BFu8c_Sf()
{
  {
    init_simple_test("BFu7s_BFu8c_Sf");
    static STRUCT_IF_C BFu7s_BFu8c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7s_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_BFu8c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_BFu8c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_BFu8c_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7s_BFu8c_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7s_BFu8c_Sf");
    check_field_offset(lv, v3, 2, "BFu7s_BFu8c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_BFu8c_Sf, BFu7s_BFu8c_Sf)
//============================================================================



static void Test_BFu7s_BFu8i_Sf()
{
  {
    init_simple_test("BFu7s_BFu8i_Sf");
    static STRUCT_IF_C BFu7s_BFu8i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7s_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_BFu8i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_BFu8i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_BFu8i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7s_BFu8i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7s_BFu8i_Sf");
    check_field_offset(lv, v3, 2, "BFu7s_BFu8i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_BFu8i_Sf, BFu7s_BFu8i_Sf)
//============================================================================



static void Test_BFu7s_BFu8ll_Sf()
{
  {
    init_simple_test("BFu7s_BFu8ll_Sf");
    static STRUCT_IF_C BFu7s_BFu8ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7s_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_BFu8ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_BFu8ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7s_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7s_BFu8ll_Sf");
    check_field_offset(lv, v3, 2, "BFu7s_BFu8ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_BFu8ll_Sf, BFu7s_BFu8ll_Sf)
//============================================================================



static void Test_BFu7s_BFu8s_Sf()
{
  {
    init_simple_test("BFu7s_BFu8s_Sf");
    static STRUCT_IF_C BFu7s_BFu8s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7s_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_BFu8s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_BFu8s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_BFu8s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7s_BFu8s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7s_BFu8s_Sf");
    check_field_offset(lv, v3, 2, "BFu7s_BFu8s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_BFu8s_Sf, BFu7s_BFu8s_Sf)
//============================================================================



static void Test_BFu7s_BFu9i_Sf()
{
  {
    init_simple_test("BFu7s_BFu9i_Sf");
    static STRUCT_IF_C BFu7s_BFu9i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7s_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_BFu9i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_BFu9i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_BFu9i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "BFu7s_BFu9i_Sf");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "BFu7s_BFu9i_Sf");
    check_field_offset(lv, v3, 2, "BFu7s_BFu9i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_BFu9i_Sf, BFu7s_BFu9i_Sf)
//============================================================================



static void Test_BFu7s_BFu9ll_Sf()
{
  {
    init_simple_test("BFu7s_BFu9ll_Sf");
    static STRUCT_IF_C BFu7s_BFu9ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7s_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_BFu9ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_BFu9ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "BFu7s_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "BFu7s_BFu9ll_Sf");
    check_field_offset(lv, v3, 2, "BFu7s_BFu9ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_BFu9ll_Sf, BFu7s_BFu9ll_Sf)
//============================================================================



static void Test_BFu7s_BFu9s_Sf()
{
  {
    init_simple_test("BFu7s_BFu9s_Sf");
    static STRUCT_IF_C BFu7s_BFu9s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7s_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_BFu9s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_BFu9s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_BFu9s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "BFu7s_BFu9s_Sf");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "BFu7s_BFu9s_Sf");
    check_field_offset(lv, v3, 2, "BFu7s_BFu9s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_BFu9s_Sf, BFu7s_BFu9s_Sf)
//============================================================================



static void Test_BFu7s_C_Sf()
{
  {
    init_simple_test("BFu7s_C_Sf");
    static STRUCT_IF_C BFu7s_C_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7s_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_C_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_C_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_C_Sf");
    check_field_offset(lv, v2, 1, "BFu7s_C_Sf.v2");
    check_field_offset(lv, v3, 2, "BFu7s_C_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_C_Sf, BFu7s_C_Sf)
//============================================================================



static void Test_BFu7s_D_Sf()
{
  {
    init_simple_test("BFu7s_D_Sf");
    static STRUCT_IF_C BFu7s_D_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu7s_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_D_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_D_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_D_Sf");
    check_field_offset(lv, v2, 1, "BFu7s_D_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu7s_D_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_D_Sf, BFu7s_D_Sf)
//============================================================================



static void Test_BFu7s_F_Sf()
{
  {
    init_simple_test("BFu7s_F_Sf");
    static STRUCT_IF_C BFu7s_F_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7s_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_F_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_F_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_F_Sf");
    check_field_offset(lv, v2, 1, "BFu7s_F_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu7s_F_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_F_Sf, BFu7s_F_Sf)
//============================================================================



static void Test_BFu7s_I_Sf()
{
  {
    init_simple_test("BFu7s_I_Sf");
    static STRUCT_IF_C BFu7s_I_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7s_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_I_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_I_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_I_Sf");
    check_field_offset(lv, v2, 1, "BFu7s_I_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu7s_I_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_I_Sf, BFu7s_I_Sf)
//============================================================================



static void Test_BFu7s_Ip_Sf()
{
  {
    init_simple_test("BFu7s_Ip_Sf");
    static STRUCT_IF_C BFu7s_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7s_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Ip_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Ip_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Ip_Sf");
    check_field_offset(lv, v2, 1, "BFu7s_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "BFu7s_Ip_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Ip_Sf, BFu7s_Ip_Sf)
//============================================================================



static void Test_BFu7s_L_Sf()
{
  {
    init_simple_test("BFu7s_L_Sf");
    static STRUCT_IF_C BFu7s_L_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu7s_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_L_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_L_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_L_Sf");
    check_field_offset(lv, v2, 1, "BFu7s_L_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu7s_L_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_L_Sf, BFu7s_L_Sf)
//============================================================================



static void Test_BFu7s_S_Sf()
{
  {
    init_simple_test("BFu7s_S_Sf");
    static STRUCT_IF_C BFu7s_S_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7s_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_S_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_S_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_S_Sf");
    check_field_offset(lv, v2, 1, "BFu7s_S_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu7s_S_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_S_Sf, BFu7s_S_Sf)
//============================================================================



static void Test_BFu7s_Sf()
{
  {
    init_simple_test("BFu7s_Sf");
    static STRUCT_IF_C BFu7s_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf");
    check_field_offset(lv, v2, 1, "BFu7s_Sf.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf, BFu7s_Sf)
//============================================================================



static void Test_BFu7s_Sf_BFu15i()
{
  {
    init_simple_test("BFu7s_Sf_BFu15i");
    static STRUCT_IF_C BFu7s_Sf_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(BFu7s_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu15i");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "BFu7s_Sf_BFu15i");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "BFu7s_Sf_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_BFu15i, BFu7s_Sf_BFu15i)
//============================================================================



static void Test_BFu7s_Sf_BFu15ll()
{
  {
    init_simple_test("BFu7s_Sf_BFu15ll");
    static STRUCT_IF_C BFu7s_Sf_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu7s_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu15ll");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "BFu7s_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "BFu7s_Sf_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_BFu15ll, BFu7s_Sf_BFu15ll)
//============================================================================



static void Test_BFu7s_Sf_BFu15s()
{
  {
    init_simple_test("BFu7s_Sf_BFu15s");
    static STRUCT_IF_C BFu7s_Sf_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(BFu7s_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu15s");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "BFu7s_Sf_BFu15s");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "BFu7s_Sf_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_BFu15s, BFu7s_Sf_BFu15s)
//============================================================================



static void Test_BFu7s_Sf_BFu16i()
{
  {
    init_simple_test("BFu7s_Sf_BFu16i");
    static STRUCT_IF_C BFu7s_Sf_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(BFu7s_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu16i");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "BFu7s_Sf_BFu16i");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "BFu7s_Sf_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_BFu16i, BFu7s_Sf_BFu16i)
//============================================================================



static void Test_BFu7s_Sf_BFu16ll()
{
  {
    init_simple_test("BFu7s_Sf_BFu16ll");
    static STRUCT_IF_C BFu7s_Sf_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu7s_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu16ll");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "BFu7s_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "BFu7s_Sf_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_BFu16ll, BFu7s_Sf_BFu16ll)
//============================================================================



static void Test_BFu7s_Sf_BFu16s()
{
  {
    init_simple_test("BFu7s_Sf_BFu16s");
    static STRUCT_IF_C BFu7s_Sf_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(BFu7s_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu16s");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "BFu7s_Sf_BFu16s");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "BFu7s_Sf_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_BFu16s, BFu7s_Sf_BFu16s)
//============================================================================



static void Test_BFu7s_Sf_BFu17i()
{
  {
    init_simple_test("BFu7s_Sf_BFu17i");
    static STRUCT_IF_C BFu7s_Sf_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(BFu7s_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu17i");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 1, 0, 17, 1, "BFu7s_Sf_BFu17i");
    set_bf_and_test(lv, v3, 1, 0, 17, hide_ull(1LL<<16), "BFu7s_Sf_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_BFu17i, BFu7s_Sf_BFu17i)
//============================================================================



static void Test_BFu7s_Sf_BFu17ll()
{
  {
    init_simple_test("BFu7s_Sf_BFu17ll");
    static STRUCT_IF_C BFu7s_Sf_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu7s_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu17ll");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 17, 1, "BFu7s_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 1, 0, 17, hide_ull(1LL<<16), "BFu7s_Sf_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_BFu17ll, BFu7s_Sf_BFu17ll)
//============================================================================



static void Test_BFu7s_Sf_BFu1c()
{
  {
    init_simple_test("BFu7s_Sf_BFu1c");
    static STRUCT_IF_C BFu7s_Sf_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(BFu7s_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu1c");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu7s_Sf_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_BFu1c, BFu7s_Sf_BFu1c)
//============================================================================



static void Test_BFu7s_Sf_BFu1i()
{
  {
    init_simple_test("BFu7s_Sf_BFu1i");
    static STRUCT_IF_C BFu7s_Sf_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(BFu7s_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu1i");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu7s_Sf_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_BFu1i, BFu7s_Sf_BFu1i)
//============================================================================



static void Test_BFu7s_Sf_BFu1ll()
{
  {
    init_simple_test("BFu7s_Sf_BFu1ll");
    static STRUCT_IF_C BFu7s_Sf_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu7s_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu1ll");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu7s_Sf_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_BFu1ll, BFu7s_Sf_BFu1ll)
//============================================================================



static void Test_BFu7s_Sf_BFu1s()
{
  {
    init_simple_test("BFu7s_Sf_BFu1s");
    static STRUCT_IF_C BFu7s_Sf_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(BFu7s_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu1s");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu7s_Sf_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_BFu1s, BFu7s_Sf_BFu1s)
//============================================================================



static void Test_BFu7s_Sf_BFu31i()
{
  {
    init_simple_test("BFu7s_Sf_BFu31i");
    static STRUCT_IF_C BFu7s_Sf_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(BFu7s_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu31i");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 1, 0, 31, 1, "BFu7s_Sf_BFu31i");
    set_bf_and_test(lv, v3, 1, 0, 31, hide_ull(1LL<<30), "BFu7s_Sf_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_BFu31i, BFu7s_Sf_BFu31i)
//============================================================================



static void Test_BFu7s_Sf_BFu31ll()
{
  {
    init_simple_test("BFu7s_Sf_BFu31ll");
    static STRUCT_IF_C BFu7s_Sf_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu7s_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu31ll");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 31, 1, "BFu7s_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 1, 0, 31, hide_ull(1LL<<30), "BFu7s_Sf_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_BFu31ll, BFu7s_Sf_BFu31ll)
//============================================================================



static void Test_BFu7s_Sf_BFu32i()
{
  {
    init_simple_test("BFu7s_Sf_BFu32i");
    static STRUCT_IF_C BFu7s_Sf_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(BFu7s_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu32i");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 1, 0, 32, 1, "BFu7s_Sf_BFu32i");
    set_bf_and_test(lv, v3, 1, 0, 32, hide_ull(1LL<<31), "BFu7s_Sf_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_BFu32i, BFu7s_Sf_BFu32i)
//============================================================================



static void Test_BFu7s_Sf_BFu32ll()
{
  {
    init_simple_test("BFu7s_Sf_BFu32ll");
    static STRUCT_IF_C BFu7s_Sf_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu7s_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu32ll");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 32, 1, "BFu7s_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 1, 0, 32, hide_ull(1LL<<31), "BFu7s_Sf_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_BFu32ll, BFu7s_Sf_BFu32ll)
//============================================================================



static void Test_BFu7s_Sf_BFu33()
{
  {
    init_simple_test("BFu7s_Sf_BFu33");
    static STRUCT_IF_C BFu7s_Sf_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(BFu7s_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu33");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 1, 0, 33, 1, "BFu7s_Sf_BFu33");
    set_bf_and_test(lv, v3, 1, 0, 33, hide_ull(1LL<<32), "BFu7s_Sf_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_BFu33, BFu7s_Sf_BFu33)
//============================================================================



static void Test_BFu7s_Sf_BFu7c()
{
  {
    init_simple_test("BFu7s_Sf_BFu7c");
    static STRUCT_IF_C BFu7s_Sf_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(BFu7s_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu7c");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu7s_Sf_BFu7c");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_BFu7c, BFu7s_Sf_BFu7c)
//============================================================================



static void Test_BFu7s_Sf_BFu7i()
{
  {
    init_simple_test("BFu7s_Sf_BFu7i");
    static STRUCT_IF_C BFu7s_Sf_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(BFu7s_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu7i");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu7s_Sf_BFu7i");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_BFu7i, BFu7s_Sf_BFu7i)
//============================================================================



static void Test_BFu7s_Sf_BFu7ll()
{
  {
    init_simple_test("BFu7s_Sf_BFu7ll");
    static STRUCT_IF_C BFu7s_Sf_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu7s_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu7ll");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu7s_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_BFu7ll, BFu7s_Sf_BFu7ll)
//============================================================================



static void Test_BFu7s_Sf_BFu7s()
{
  {
    init_simple_test("BFu7s_Sf_BFu7s");
    static STRUCT_IF_C BFu7s_Sf_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(BFu7s_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu7s");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu7s_Sf_BFu7s");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_BFu7s, BFu7s_Sf_BFu7s)
//============================================================================



static void Test_BFu7s_Sf_BFu8c()
{
  {
    init_simple_test("BFu7s_Sf_BFu8c");
    static STRUCT_IF_C BFu7s_Sf_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(BFu7s_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu8c");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu7s_Sf_BFu8c");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu7s_Sf_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_BFu8c, BFu7s_Sf_BFu8c)
//============================================================================



static void Test_BFu7s_Sf_BFu8i()
{
  {
    init_simple_test("BFu7s_Sf_BFu8i");
    static STRUCT_IF_C BFu7s_Sf_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(BFu7s_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu8i");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu7s_Sf_BFu8i");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu7s_Sf_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_BFu8i, BFu7s_Sf_BFu8i)
//============================================================================



static void Test_BFu7s_Sf_BFu8ll()
{
  {
    init_simple_test("BFu7s_Sf_BFu8ll");
    static STRUCT_IF_C BFu7s_Sf_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu7s_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu8ll");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu7s_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu7s_Sf_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_BFu8ll, BFu7s_Sf_BFu8ll)
//============================================================================



static void Test_BFu7s_Sf_BFu8s()
{
  {
    init_simple_test("BFu7s_Sf_BFu8s");
    static STRUCT_IF_C BFu7s_Sf_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(BFu7s_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu8s");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu7s_Sf_BFu8s");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu7s_Sf_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_BFu8s, BFu7s_Sf_BFu8s)
//============================================================================



static void Test_BFu7s_Sf_BFu9i()
{
  {
    init_simple_test("BFu7s_Sf_BFu9i");
    static STRUCT_IF_C BFu7s_Sf_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(BFu7s_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu9i");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "BFu7s_Sf_BFu9i");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "BFu7s_Sf_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_BFu9i, BFu7s_Sf_BFu9i)
//============================================================================



static void Test_BFu7s_Sf_BFu9ll()
{
  {
    init_simple_test("BFu7s_Sf_BFu9ll");
    static STRUCT_IF_C BFu7s_Sf_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu7s_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu9ll");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "BFu7s_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "BFu7s_Sf_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_BFu9ll, BFu7s_Sf_BFu9ll)
//============================================================================



static void Test_BFu7s_Sf_BFu9s()
{
  {
    init_simple_test("BFu7s_Sf_BFu9s");
    static STRUCT_IF_C BFu7s_Sf_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(BFu7s_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_BFu9s");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "BFu7s_Sf_BFu9s");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "BFu7s_Sf_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_BFu9s, BFu7s_Sf_BFu9s)
//============================================================================



static void Test_BFu7s_Sf_C()
{
  {
    init_simple_test("BFu7s_Sf_C");
    static STRUCT_IF_C BFu7s_Sf_C lv;
    check2(sizeof(lv), 2, "sizeof(BFu7s_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_C)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_C");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_C");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_C.v2");
    check_field_offset(lv, v3, 1, "BFu7s_Sf_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_C, BFu7s_Sf_C)
//============================================================================



static void Test_BFu7s_Sf_D()
{
  {
    init_simple_test("BFu7s_Sf_D");
    static STRUCT_IF_C BFu7s_Sf_D lv;
    check2(sizeof(lv), 9, "sizeof(BFu7s_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_D)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_D");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_D");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_D.v2");
    check_field_offset(lv, v3, 1, "BFu7s_Sf_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_D, BFu7s_Sf_D)
//============================================================================



static void Test_BFu7s_Sf_F()
{
  {
    init_simple_test("BFu7s_Sf_F");
    static STRUCT_IF_C BFu7s_Sf_F lv;
    check2(sizeof(lv), 5, "sizeof(BFu7s_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_F)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_F");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_F");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_F.v2");
    check_field_offset(lv, v3, 1, "BFu7s_Sf_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_F, BFu7s_Sf_F)
//============================================================================



static void Test_BFu7s_Sf_I()
{
  {
    init_simple_test("BFu7s_Sf_I");
    static STRUCT_IF_C BFu7s_Sf_I lv;
    check2(sizeof(lv), 5, "sizeof(BFu7s_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_I)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_I");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_I");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_I.v2");
    check_field_offset(lv, v3, 1, "BFu7s_Sf_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_I, BFu7s_Sf_I)
//============================================================================



static void Test_BFu7s_Sf_Ip()
{
  {
    init_simple_test("BFu7s_Sf_Ip");
    static STRUCT_IF_C BFu7s_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7s_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_Ip");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_Ip");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_Ip.v2");
    check_field_offset(lv, v3, 1, "BFu7s_Sf_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_Ip, BFu7s_Sf_Ip)
//============================================================================



static void Test_BFu7s_Sf_L()
{
  {
    init_simple_test("BFu7s_Sf_L");
    static STRUCT_IF_C BFu7s_Sf_L lv;
    check2(sizeof(lv), 9, "sizeof(BFu7s_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_L)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_L");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_L");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_L.v2");
    check_field_offset(lv, v3, 1, "BFu7s_Sf_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_L, BFu7s_Sf_L)
//============================================================================



static void Test_BFu7s_Sf_S()
{
  {
    init_simple_test("BFu7s_Sf_S");
    static STRUCT_IF_C BFu7s_Sf_S lv;
    check2(sizeof(lv), 3, "sizeof(BFu7s_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_S)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_S");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_S");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_S.v2");
    check_field_offset(lv, v3, 1, "BFu7s_Sf_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_S, BFu7s_Sf_S)
//============================================================================



static void Test_BFu7s_Sf_Sf()
{
  {
    init_simple_test("BFu7s_Sf_Sf");
    static STRUCT_IF_C BFu7s_Sf_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu7s_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_Sf");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_Sf.v2");
    check_field_offset(lv, v3, 1, "BFu7s_Sf_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_Sf, BFu7s_Sf_Sf)
//============================================================================



static void Test_BFu7s_Sf_Uc()
{
  {
    init_simple_test("BFu7s_Sf_Uc");
    static STRUCT_IF_C BFu7s_Sf_Uc lv;
    check2(sizeof(lv), 2, "sizeof(BFu7s_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_Uc");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_Uc");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_Uc.v2");
    check_field_offset(lv, v3, 1, "BFu7s_Sf_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_Uc, BFu7s_Sf_Uc)
//============================================================================



static void Test_BFu7s_Sf_Ui()
{
  {
    init_simple_test("BFu7s_Sf_Ui");
    static STRUCT_IF_C BFu7s_Sf_Ui lv;
    check2(sizeof(lv), 5, "sizeof(BFu7s_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_Ui");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_Ui");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_Ui.v2");
    check_field_offset(lv, v3, 1, "BFu7s_Sf_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_Ui, BFu7s_Sf_Ui)
//============================================================================



static void Test_BFu7s_Sf_Ul()
{
  {
    init_simple_test("BFu7s_Sf_Ul");
    static STRUCT_IF_C BFu7s_Sf_Ul lv;
    check2(sizeof(lv), 9, "sizeof(BFu7s_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_Ul");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_Ul");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_Ul.v2");
    check_field_offset(lv, v3, 1, "BFu7s_Sf_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_Ul, BFu7s_Sf_Ul)
//============================================================================



static void Test_BFu7s_Sf_Us()
{
  {
    init_simple_test("BFu7s_Sf_Us");
    static STRUCT_IF_C BFu7s_Sf_Us lv;
    check2(sizeof(lv), 3, "sizeof(BFu7s_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_Us)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_Us");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_Us");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_Us.v2");
    check_field_offset(lv, v3, 1, "BFu7s_Sf_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_Us, BFu7s_Sf_Us)
//============================================================================



static void Test_BFu7s_Sf_Vp()
{
  {
    init_simple_test("BFu7s_Sf_Vp");
    static STRUCT_IF_C BFu7s_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7s_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Sf_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Sf_Vp");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Sf_Vp");
    check_field_offset(lv, v2, 1, "BFu7s_Sf_Vp.v2");
    check_field_offset(lv, v3, 1, "BFu7s_Sf_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Sf_Vp, BFu7s_Sf_Vp)
//============================================================================



static void Test_BFu7s_Uc_Sf()
{
  {
    init_simple_test("BFu7s_Uc_Sf");
    static STRUCT_IF_C BFu7s_Uc_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu7s_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Uc_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Uc_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Uc_Sf");
    check_field_offset(lv, v2, 1, "BFu7s_Uc_Sf.v2");
    check_field_offset(lv, v3, 2, "BFu7s_Uc_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Uc_Sf, BFu7s_Uc_Sf)
//============================================================================



static void Test_BFu7s_Ui_Sf()
{
  {
    init_simple_test("BFu7s_Ui_Sf");
    static STRUCT_IF_C BFu7s_Ui_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu7s_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Ui_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Ui_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Ui_Sf");
    check_field_offset(lv, v2, 1, "BFu7s_Ui_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu7s_Ui_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Ui_Sf, BFu7s_Ui_Sf)
//============================================================================



static void Test_BFu7s_Ul_Sf()
{
  {
    init_simple_test("BFu7s_Ul_Sf");
    static STRUCT_IF_C BFu7s_Ul_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu7s_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Ul_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Ul_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Ul_Sf");
    check_field_offset(lv, v2, 1, "BFu7s_Ul_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu7s_Ul_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Ul_Sf, BFu7s_Ul_Sf)
//============================================================================



static void Test_BFu7s_Us_Sf()
{
  {
    init_simple_test("BFu7s_Us_Sf");
    static STRUCT_IF_C BFu7s_Us_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu7s_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Us_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Us_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Us_Sf");
    check_field_offset(lv, v2, 1, "BFu7s_Us_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu7s_Us_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Us_Sf, BFu7s_Us_Sf)
//============================================================================



static void Test_BFu7s_Vp_Sf()
{
  {
    init_simple_test("BFu7s_Vp_Sf");
    static STRUCT_IF_C BFu7s_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7s_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7s_Vp_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7s_Vp_Sf");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7s_Vp_Sf");
    check_field_offset(lv, v2, 1, "BFu7s_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "BFu7s_Vp_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu7s_Vp_Sf, BFu7s_Vp_Sf)
//============================================================================



static void Test_BFu8c_BFu15i_Sf()
{
  {
    init_simple_test("BFu8c_BFu15i_Sf");
    static STRUCT_IF_C BFu8c_BFu15i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8c_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_BFu15i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_BFu15i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu15i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "BFu8c_BFu15i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "BFu8c_BFu15i_Sf");
    check_field_offset(lv, v3, 3, "BFu8c_BFu15i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_BFu15i_Sf, BFu8c_BFu15i_Sf)
//============================================================================



static void Test_BFu8c_BFu15ll_Sf()
{
  {
    init_simple_test("BFu8c_BFu15ll_Sf");
    static STRUCT_IF_C BFu8c_BFu15ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8c_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_BFu15ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_BFu15ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "BFu8c_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "BFu8c_BFu15ll_Sf");
    check_field_offset(lv, v3, 3, "BFu8c_BFu15ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_BFu15ll_Sf, BFu8c_BFu15ll_Sf)
//============================================================================



static void Test_BFu8c_BFu15s_Sf()
{
  {
    init_simple_test("BFu8c_BFu15s_Sf");
    static STRUCT_IF_C BFu8c_BFu15s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8c_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_BFu15s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_BFu15s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu15s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "BFu8c_BFu15s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "BFu8c_BFu15s_Sf");
    check_field_offset(lv, v3, 3, "BFu8c_BFu15s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_BFu15s_Sf, BFu8c_BFu15s_Sf)
//============================================================================



static void Test_BFu8c_BFu16i_Sf()
{
  {
    init_simple_test("BFu8c_BFu16i_Sf");
    static STRUCT_IF_C BFu8c_BFu16i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8c_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_BFu16i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_BFu16i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu16i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "BFu8c_BFu16i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "BFu8c_BFu16i_Sf");
    check_field_offset(lv, v3, 3, "BFu8c_BFu16i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_BFu16i_Sf, BFu8c_BFu16i_Sf)
//============================================================================



static void Test_BFu8c_BFu16ll_Sf()
{
  {
    init_simple_test("BFu8c_BFu16ll_Sf");
    static STRUCT_IF_C BFu8c_BFu16ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8c_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_BFu16ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_BFu16ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "BFu8c_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "BFu8c_BFu16ll_Sf");
    check_field_offset(lv, v3, 3, "BFu8c_BFu16ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_BFu16ll_Sf, BFu8c_BFu16ll_Sf)
//============================================================================



static void Test_BFu8c_BFu16s_Sf()
{
  {
    init_simple_test("BFu8c_BFu16s_Sf");
    static STRUCT_IF_C BFu8c_BFu16s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8c_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_BFu16s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_BFu16s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu16s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "BFu8c_BFu16s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "BFu8c_BFu16s_Sf");
    check_field_offset(lv, v3, 3, "BFu8c_BFu16s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_BFu16s_Sf, BFu8c_BFu16s_Sf)
//============================================================================



static void Test_BFu8c_BFu17i_Sf()
{
  {
    init_simple_test("BFu8c_BFu17i_Sf");
    static STRUCT_IF_C BFu8c_BFu17i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu8c_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_BFu17i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_BFu17i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu17i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "BFu8c_BFu17i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "BFu8c_BFu17i_Sf");
    check_field_offset(lv, v3, 4, "BFu8c_BFu17i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_BFu17i_Sf, BFu8c_BFu17i_Sf)
//============================================================================



static void Test_BFu8c_BFu17ll_Sf()
{
  {
    init_simple_test("BFu8c_BFu17ll_Sf");
    static STRUCT_IF_C BFu8c_BFu17ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu8c_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_BFu17ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_BFu17ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "BFu8c_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "BFu8c_BFu17ll_Sf");
    check_field_offset(lv, v3, 4, "BFu8c_BFu17ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_BFu17ll_Sf, BFu8c_BFu17ll_Sf)
//============================================================================



static void Test_BFu8c_BFu1c_Sf()
{
  {
    init_simple_test("BFu8c_BFu1c_Sf");
    static STRUCT_IF_C BFu8c_BFu1c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8c_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_BFu1c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_BFu1c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu1c_Sf");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu8c_BFu1c_Sf");
    check_field_offset(lv, v3, 2, "BFu8c_BFu1c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_BFu1c_Sf, BFu8c_BFu1c_Sf)
//============================================================================



static void Test_BFu8c_BFu1i_Sf()
{
  {
    init_simple_test("BFu8c_BFu1i_Sf");
    static STRUCT_IF_C BFu8c_BFu1i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8c_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_BFu1i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_BFu1i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu1i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu8c_BFu1i_Sf");
    check_field_offset(lv, v3, 2, "BFu8c_BFu1i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_BFu1i_Sf, BFu8c_BFu1i_Sf)
//============================================================================



static void Test_BFu8c_BFu1ll_Sf()
{
  {
    init_simple_test("BFu8c_BFu1ll_Sf");
    static STRUCT_IF_C BFu8c_BFu1ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8c_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_BFu1ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_BFu1ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu1ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu8c_BFu1ll_Sf");
    check_field_offset(lv, v3, 2, "BFu8c_BFu1ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_BFu1ll_Sf, BFu8c_BFu1ll_Sf)
//============================================================================



static void Test_BFu8c_BFu1s_Sf()
{
  {
    init_simple_test("BFu8c_BFu1s_Sf");
    static STRUCT_IF_C BFu8c_BFu1s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8c_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_BFu1s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_BFu1s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu1s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu8c_BFu1s_Sf");
    check_field_offset(lv, v3, 2, "BFu8c_BFu1s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_BFu1s_Sf, BFu8c_BFu1s_Sf)
//============================================================================



static void Test_BFu8c_BFu31i_Sf()
{
  {
    init_simple_test("BFu8c_BFu31i_Sf");
    static STRUCT_IF_C BFu8c_BFu31i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu8c_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_BFu31i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_BFu31i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu31i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "BFu8c_BFu31i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "BFu8c_BFu31i_Sf");
    check_field_offset(lv, v3, 5, "BFu8c_BFu31i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_BFu31i_Sf, BFu8c_BFu31i_Sf)
//============================================================================



static void Test_BFu8c_BFu31ll_Sf()
{
  {
    init_simple_test("BFu8c_BFu31ll_Sf");
    static STRUCT_IF_C BFu8c_BFu31ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu8c_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_BFu31ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_BFu31ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "BFu8c_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "BFu8c_BFu31ll_Sf");
    check_field_offset(lv, v3, 5, "BFu8c_BFu31ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_BFu31ll_Sf, BFu8c_BFu31ll_Sf)
//============================================================================



static void Test_BFu8c_BFu32i_Sf()
{
  {
    init_simple_test("BFu8c_BFu32i_Sf");
    static STRUCT_IF_C BFu8c_BFu32i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu8c_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_BFu32i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_BFu32i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu32i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "BFu8c_BFu32i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "BFu8c_BFu32i_Sf");
    check_field_offset(lv, v3, 5, "BFu8c_BFu32i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_BFu32i_Sf, BFu8c_BFu32i_Sf)
//============================================================================



static void Test_BFu8c_BFu32ll_Sf()
{
  {
    init_simple_test("BFu8c_BFu32ll_Sf");
    static STRUCT_IF_C BFu8c_BFu32ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu8c_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_BFu32ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_BFu32ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "BFu8c_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "BFu8c_BFu32ll_Sf");
    check_field_offset(lv, v3, 5, "BFu8c_BFu32ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_BFu32ll_Sf, BFu8c_BFu32ll_Sf)
//============================================================================



static void Test_BFu8c_BFu33_Sf()
{
  {
    init_simple_test("BFu8c_BFu33_Sf");
    static STRUCT_IF_C BFu8c_BFu33_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu8c_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_BFu33_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_BFu33_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu33_Sf");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "BFu8c_BFu33_Sf");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "BFu8c_BFu33_Sf");
    check_field_offset(lv, v3, 6, "BFu8c_BFu33_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_BFu33_Sf, BFu8c_BFu33_Sf)
//============================================================================



static void Test_BFu8c_BFu7c_Sf()
{
  {
    init_simple_test("BFu8c_BFu7c_Sf");
    static STRUCT_IF_C BFu8c_BFu7c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8c_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_BFu7c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_BFu7c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu7c_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu8c_BFu7c_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu8c_BFu7c_Sf");
    check_field_offset(lv, v3, 2, "BFu8c_BFu7c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_BFu7c_Sf, BFu8c_BFu7c_Sf)
//============================================================================



static void Test_BFu8c_BFu7i_Sf()
{
  {
    init_simple_test("BFu8c_BFu7i_Sf");
    static STRUCT_IF_C BFu8c_BFu7i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8c_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_BFu7i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_BFu7i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu7i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu8c_BFu7i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu8c_BFu7i_Sf");
    check_field_offset(lv, v3, 2, "BFu8c_BFu7i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_BFu7i_Sf, BFu8c_BFu7i_Sf)
//============================================================================



static void Test_BFu8c_BFu7ll_Sf()
{
  {
    init_simple_test("BFu8c_BFu7ll_Sf");
    static STRUCT_IF_C BFu8c_BFu7ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8c_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_BFu7ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_BFu7ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu8c_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu8c_BFu7ll_Sf");
    check_field_offset(lv, v3, 2, "BFu8c_BFu7ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_BFu7ll_Sf, BFu8c_BFu7ll_Sf)
//============================================================================



static void Test_BFu8c_BFu7s_Sf()
{
  {
    init_simple_test("BFu8c_BFu7s_Sf");
    static STRUCT_IF_C BFu8c_BFu7s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8c_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_BFu7s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_BFu7s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu7s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu8c_BFu7s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu8c_BFu7s_Sf");
    check_field_offset(lv, v3, 2, "BFu8c_BFu7s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_BFu7s_Sf, BFu8c_BFu7s_Sf)
//============================================================================



static void Test_BFu8c_BFu8c_Sf()
{
  {
    init_simple_test("BFu8c_BFu8c_Sf");
    static STRUCT_IF_C BFu8c_BFu8c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8c_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_BFu8c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_BFu8c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu8c_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu8c_BFu8c_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu8c_Sf");
    check_field_offset(lv, v3, 2, "BFu8c_BFu8c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_BFu8c_Sf, BFu8c_BFu8c_Sf)
//============================================================================



static void Test_BFu8c_BFu8i_Sf()
{
  {
    init_simple_test("BFu8c_BFu8i_Sf");
    static STRUCT_IF_C BFu8c_BFu8i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8c_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_BFu8i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_BFu8i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu8i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu8c_BFu8i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu8i_Sf");
    check_field_offset(lv, v3, 2, "BFu8c_BFu8i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_BFu8i_Sf, BFu8c_BFu8i_Sf)
//============================================================================



static void Test_BFu8c_BFu8ll_Sf()
{
  {
    init_simple_test("BFu8c_BFu8ll_Sf");
    static STRUCT_IF_C BFu8c_BFu8ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8c_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_BFu8ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_BFu8ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu8c_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu8ll_Sf");
    check_field_offset(lv, v3, 2, "BFu8c_BFu8ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_BFu8ll_Sf, BFu8c_BFu8ll_Sf)
//============================================================================



static void Test_BFu8c_BFu8s_Sf()
{
  {
    init_simple_test("BFu8c_BFu8s_Sf");
    static STRUCT_IF_C BFu8c_BFu8s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8c_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_BFu8s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_BFu8s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu8s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu8c_BFu8s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu8s_Sf");
    check_field_offset(lv, v3, 2, "BFu8c_BFu8s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_BFu8s_Sf, BFu8c_BFu8s_Sf)
//============================================================================



static void Test_BFu8c_BFu9i_Sf()
{
  {
    init_simple_test("BFu8c_BFu9i_Sf");
    static STRUCT_IF_C BFu8c_BFu9i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8c_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_BFu9i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_BFu9i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu9i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "BFu8c_BFu9i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "BFu8c_BFu9i_Sf");
    check_field_offset(lv, v3, 3, "BFu8c_BFu9i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_BFu9i_Sf, BFu8c_BFu9i_Sf)
//============================================================================



static void Test_BFu8c_BFu9ll_Sf()
{
  {
    init_simple_test("BFu8c_BFu9ll_Sf");
    static STRUCT_IF_C BFu8c_BFu9ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8c_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_BFu9ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_BFu9ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "BFu8c_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "BFu8c_BFu9ll_Sf");
    check_field_offset(lv, v3, 3, "BFu8c_BFu9ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_BFu9ll_Sf, BFu8c_BFu9ll_Sf)
//============================================================================



static void Test_BFu8c_BFu9s_Sf()
{
  {
    init_simple_test("BFu8c_BFu9s_Sf");
    static STRUCT_IF_C BFu8c_BFu9s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8c_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_BFu9s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_BFu9s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_BFu9s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "BFu8c_BFu9s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "BFu8c_BFu9s_Sf");
    check_field_offset(lv, v3, 3, "BFu8c_BFu9s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_BFu9s_Sf, BFu8c_BFu9s_Sf)
//============================================================================



static void Test_BFu8c_C_Sf()
{
  {
    init_simple_test("BFu8c_C_Sf");
    static STRUCT_IF_C BFu8c_C_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8c_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_C_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_C_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_C_Sf");
    check_field_offset(lv, v2, 1, "BFu8c_C_Sf.v2");
    check_field_offset(lv, v3, 2, "BFu8c_C_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_C_Sf, BFu8c_C_Sf)
//============================================================================



static void Test_BFu8c_D_Sf()
{
  {
    init_simple_test("BFu8c_D_Sf");
    static STRUCT_IF_C BFu8c_D_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu8c_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_D_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_D_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_D_Sf");
    check_field_offset(lv, v2, 1, "BFu8c_D_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu8c_D_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_D_Sf, BFu8c_D_Sf)
//============================================================================



static void Test_BFu8c_F_Sf()
{
  {
    init_simple_test("BFu8c_F_Sf");
    static STRUCT_IF_C BFu8c_F_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu8c_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_F_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_F_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_F_Sf");
    check_field_offset(lv, v2, 1, "BFu8c_F_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu8c_F_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_F_Sf, BFu8c_F_Sf)
//============================================================================



static void Test_BFu8c_I_Sf()
{
  {
    init_simple_test("BFu8c_I_Sf");
    static STRUCT_IF_C BFu8c_I_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu8c_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_I_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_I_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_I_Sf");
    check_field_offset(lv, v2, 1, "BFu8c_I_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu8c_I_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_I_Sf, BFu8c_I_Sf)
//============================================================================



static void Test_BFu8c_Ip_Sf()
{
  {
    init_simple_test("BFu8c_Ip_Sf");
    static STRUCT_IF_C BFu8c_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu8c_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Ip_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Ip_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Ip_Sf");
    check_field_offset(lv, v2, 1, "BFu8c_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "BFu8c_Ip_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Ip_Sf, BFu8c_Ip_Sf)
//============================================================================



static void Test_BFu8c_L_Sf()
{
  {
    init_simple_test("BFu8c_L_Sf");
    static STRUCT_IF_C BFu8c_L_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu8c_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_L_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_L_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_L_Sf");
    check_field_offset(lv, v2, 1, "BFu8c_L_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu8c_L_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_L_Sf, BFu8c_L_Sf)
//============================================================================



static void Test_BFu8c_S_Sf()
{
  {
    init_simple_test("BFu8c_S_Sf");
    static STRUCT_IF_C BFu8c_S_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8c_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_S_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_S_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_S_Sf");
    check_field_offset(lv, v2, 1, "BFu8c_S_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu8c_S_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_S_Sf, BFu8c_S_Sf)
//============================================================================



static void Test_BFu8c_Sf()
{
  {
    init_simple_test("BFu8c_Sf");
    static STRUCT_IF_C BFu8c_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf");
    check_field_offset(lv, v2, 1, "BFu8c_Sf.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf, BFu8c_Sf)
//============================================================================



static void Test_BFu8c_Sf_BFu15i()
{
  {
    init_simple_test("BFu8c_Sf_BFu15i");
    static STRUCT_IF_C BFu8c_Sf_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(BFu8c_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu15i");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "BFu8c_Sf_BFu15i");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "BFu8c_Sf_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_BFu15i, BFu8c_Sf_BFu15i)
//============================================================================



static void Test_BFu8c_Sf_BFu15ll()
{
  {
    init_simple_test("BFu8c_Sf_BFu15ll");
    static STRUCT_IF_C BFu8c_Sf_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu8c_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu15ll");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "BFu8c_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "BFu8c_Sf_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_BFu15ll, BFu8c_Sf_BFu15ll)
//============================================================================



static void Test_BFu8c_Sf_BFu15s()
{
  {
    init_simple_test("BFu8c_Sf_BFu15s");
    static STRUCT_IF_C BFu8c_Sf_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(BFu8c_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu15s");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "BFu8c_Sf_BFu15s");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "BFu8c_Sf_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_BFu15s, BFu8c_Sf_BFu15s)
//============================================================================



static void Test_BFu8c_Sf_BFu16i()
{
  {
    init_simple_test("BFu8c_Sf_BFu16i");
    static STRUCT_IF_C BFu8c_Sf_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(BFu8c_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu16i");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "BFu8c_Sf_BFu16i");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "BFu8c_Sf_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_BFu16i, BFu8c_Sf_BFu16i)
//============================================================================



static void Test_BFu8c_Sf_BFu16ll()
{
  {
    init_simple_test("BFu8c_Sf_BFu16ll");
    static STRUCT_IF_C BFu8c_Sf_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu8c_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu16ll");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "BFu8c_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "BFu8c_Sf_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_BFu16ll, BFu8c_Sf_BFu16ll)
//============================================================================



static void Test_BFu8c_Sf_BFu16s()
{
  {
    init_simple_test("BFu8c_Sf_BFu16s");
    static STRUCT_IF_C BFu8c_Sf_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(BFu8c_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu16s");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "BFu8c_Sf_BFu16s");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "BFu8c_Sf_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_BFu16s, BFu8c_Sf_BFu16s)
//============================================================================



static void Test_BFu8c_Sf_BFu17i()
{
  {
    init_simple_test("BFu8c_Sf_BFu17i");
    static STRUCT_IF_C BFu8c_Sf_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(BFu8c_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu17i");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 1, 0, 17, 1, "BFu8c_Sf_BFu17i");
    set_bf_and_test(lv, v3, 1, 0, 17, hide_ull(1LL<<16), "BFu8c_Sf_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_BFu17i, BFu8c_Sf_BFu17i)
//============================================================================



static void Test_BFu8c_Sf_BFu17ll()
{
  {
    init_simple_test("BFu8c_Sf_BFu17ll");
    static STRUCT_IF_C BFu8c_Sf_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu8c_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu17ll");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 17, 1, "BFu8c_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 1, 0, 17, hide_ull(1LL<<16), "BFu8c_Sf_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_BFu17ll, BFu8c_Sf_BFu17ll)
//============================================================================



static void Test_BFu8c_Sf_BFu1c()
{
  {
    init_simple_test("BFu8c_Sf_BFu1c");
    static STRUCT_IF_C BFu8c_Sf_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(BFu8c_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu1c");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu8c_Sf_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_BFu1c, BFu8c_Sf_BFu1c)
//============================================================================



static void Test_BFu8c_Sf_BFu1i()
{
  {
    init_simple_test("BFu8c_Sf_BFu1i");
    static STRUCT_IF_C BFu8c_Sf_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(BFu8c_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu1i");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu8c_Sf_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_BFu1i, BFu8c_Sf_BFu1i)
//============================================================================



static void Test_BFu8c_Sf_BFu1ll()
{
  {
    init_simple_test("BFu8c_Sf_BFu1ll");
    static STRUCT_IF_C BFu8c_Sf_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu8c_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu1ll");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu8c_Sf_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_BFu1ll, BFu8c_Sf_BFu1ll)
//============================================================================



static void Test_BFu8c_Sf_BFu1s()
{
  {
    init_simple_test("BFu8c_Sf_BFu1s");
    static STRUCT_IF_C BFu8c_Sf_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(BFu8c_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu1s");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu8c_Sf_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_BFu1s, BFu8c_Sf_BFu1s)
//============================================================================



static void Test_BFu8c_Sf_BFu31i()
{
  {
    init_simple_test("BFu8c_Sf_BFu31i");
    static STRUCT_IF_C BFu8c_Sf_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(BFu8c_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu31i");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 1, 0, 31, 1, "BFu8c_Sf_BFu31i");
    set_bf_and_test(lv, v3, 1, 0, 31, hide_ull(1LL<<30), "BFu8c_Sf_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_BFu31i, BFu8c_Sf_BFu31i)
//============================================================================



static void Test_BFu8c_Sf_BFu31ll()
{
  {
    init_simple_test("BFu8c_Sf_BFu31ll");
    static STRUCT_IF_C BFu8c_Sf_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu8c_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu31ll");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 31, 1, "BFu8c_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 1, 0, 31, hide_ull(1LL<<30), "BFu8c_Sf_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_BFu31ll, BFu8c_Sf_BFu31ll)
//============================================================================



static void Test_BFu8c_Sf_BFu32i()
{
  {
    init_simple_test("BFu8c_Sf_BFu32i");
    static STRUCT_IF_C BFu8c_Sf_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(BFu8c_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu32i");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 1, 0, 32, 1, "BFu8c_Sf_BFu32i");
    set_bf_and_test(lv, v3, 1, 0, 32, hide_ull(1LL<<31), "BFu8c_Sf_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_BFu32i, BFu8c_Sf_BFu32i)
//============================================================================



static void Test_BFu8c_Sf_BFu32ll()
{
  {
    init_simple_test("BFu8c_Sf_BFu32ll");
    static STRUCT_IF_C BFu8c_Sf_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu8c_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu32ll");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 32, 1, "BFu8c_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 1, 0, 32, hide_ull(1LL<<31), "BFu8c_Sf_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_BFu32ll, BFu8c_Sf_BFu32ll)
//============================================================================



static void Test_BFu8c_Sf_BFu33()
{
  {
    init_simple_test("BFu8c_Sf_BFu33");
    static STRUCT_IF_C BFu8c_Sf_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(BFu8c_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu33");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 1, 0, 33, 1, "BFu8c_Sf_BFu33");
    set_bf_and_test(lv, v3, 1, 0, 33, hide_ull(1LL<<32), "BFu8c_Sf_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_BFu33, BFu8c_Sf_BFu33)
//============================================================================



static void Test_BFu8c_Sf_BFu7c()
{
  {
    init_simple_test("BFu8c_Sf_BFu7c");
    static STRUCT_IF_C BFu8c_Sf_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(BFu8c_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu7c");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu8c_Sf_BFu7c");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu8c_Sf_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_BFu7c, BFu8c_Sf_BFu7c)
//============================================================================



static void Test_BFu8c_Sf_BFu7i()
{
  {
    init_simple_test("BFu8c_Sf_BFu7i");
    static STRUCT_IF_C BFu8c_Sf_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(BFu8c_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu7i");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu8c_Sf_BFu7i");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu8c_Sf_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_BFu7i, BFu8c_Sf_BFu7i)
//============================================================================



static void Test_BFu8c_Sf_BFu7ll()
{
  {
    init_simple_test("BFu8c_Sf_BFu7ll");
    static STRUCT_IF_C BFu8c_Sf_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu8c_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu7ll");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu8c_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu8c_Sf_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_BFu7ll, BFu8c_Sf_BFu7ll)
//============================================================================



static void Test_BFu8c_Sf_BFu7s()
{
  {
    init_simple_test("BFu8c_Sf_BFu7s");
    static STRUCT_IF_C BFu8c_Sf_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(BFu8c_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu7s");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu8c_Sf_BFu7s");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu8c_Sf_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_BFu7s, BFu8c_Sf_BFu7s)
//============================================================================



static void Test_BFu8c_Sf_BFu8c()
{
  {
    init_simple_test("BFu8c_Sf_BFu8c");
    static STRUCT_IF_C BFu8c_Sf_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(BFu8c_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu8c");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu8c_Sf_BFu8c");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_BFu8c, BFu8c_Sf_BFu8c)
//============================================================================



static void Test_BFu8c_Sf_BFu8i()
{
  {
    init_simple_test("BFu8c_Sf_BFu8i");
    static STRUCT_IF_C BFu8c_Sf_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(BFu8c_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu8i");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu8c_Sf_BFu8i");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_BFu8i, BFu8c_Sf_BFu8i)
//============================================================================



static void Test_BFu8c_Sf_BFu8ll()
{
  {
    init_simple_test("BFu8c_Sf_BFu8ll");
    static STRUCT_IF_C BFu8c_Sf_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu8c_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu8ll");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu8c_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_BFu8ll, BFu8c_Sf_BFu8ll)
//============================================================================



static void Test_BFu8c_Sf_BFu8s()
{
  {
    init_simple_test("BFu8c_Sf_BFu8s");
    static STRUCT_IF_C BFu8c_Sf_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(BFu8c_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu8s");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu8c_Sf_BFu8s");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_BFu8s, BFu8c_Sf_BFu8s)
//============================================================================



static void Test_BFu8c_Sf_BFu9i()
{
  {
    init_simple_test("BFu8c_Sf_BFu9i");
    static STRUCT_IF_C BFu8c_Sf_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(BFu8c_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu9i");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "BFu8c_Sf_BFu9i");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "BFu8c_Sf_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_BFu9i, BFu8c_Sf_BFu9i)
//============================================================================



static void Test_BFu8c_Sf_BFu9ll()
{
  {
    init_simple_test("BFu8c_Sf_BFu9ll");
    static STRUCT_IF_C BFu8c_Sf_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu8c_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu9ll");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "BFu8c_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "BFu8c_Sf_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_BFu9ll, BFu8c_Sf_BFu9ll)
//============================================================================



static void Test_BFu8c_Sf_BFu9s()
{
  {
    init_simple_test("BFu8c_Sf_BFu9s");
    static STRUCT_IF_C BFu8c_Sf_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(BFu8c_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_BFu9s");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "BFu8c_Sf_BFu9s");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "BFu8c_Sf_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_BFu9s, BFu8c_Sf_BFu9s)
//============================================================================



static void Test_BFu8c_Sf_C()
{
  {
    init_simple_test("BFu8c_Sf_C");
    static STRUCT_IF_C BFu8c_Sf_C lv;
    check2(sizeof(lv), 2, "sizeof(BFu8c_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_C)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_C");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_C");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_C.v2");
    check_field_offset(lv, v3, 1, "BFu8c_Sf_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_C, BFu8c_Sf_C)
//============================================================================



static void Test_BFu8c_Sf_D()
{
  {
    init_simple_test("BFu8c_Sf_D");
    static STRUCT_IF_C BFu8c_Sf_D lv;
    check2(sizeof(lv), 9, "sizeof(BFu8c_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_D)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_D");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_D");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_D.v2");
    check_field_offset(lv, v3, 1, "BFu8c_Sf_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_D, BFu8c_Sf_D)
//============================================================================



static void Test_BFu8c_Sf_F()
{
  {
    init_simple_test("BFu8c_Sf_F");
    static STRUCT_IF_C BFu8c_Sf_F lv;
    check2(sizeof(lv), 5, "sizeof(BFu8c_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_F)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_F");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_F");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_F.v2");
    check_field_offset(lv, v3, 1, "BFu8c_Sf_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_F, BFu8c_Sf_F)
//============================================================================



static void Test_BFu8c_Sf_I()
{
  {
    init_simple_test("BFu8c_Sf_I");
    static STRUCT_IF_C BFu8c_Sf_I lv;
    check2(sizeof(lv), 5, "sizeof(BFu8c_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_I)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_I");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_I");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_I.v2");
    check_field_offset(lv, v3, 1, "BFu8c_Sf_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_I, BFu8c_Sf_I)
//============================================================================



static void Test_BFu8c_Sf_Ip()
{
  {
    init_simple_test("BFu8c_Sf_Ip");
    static STRUCT_IF_C BFu8c_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu8c_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_Ip");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_Ip");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_Ip.v2");
    check_field_offset(lv, v3, 1, "BFu8c_Sf_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_Ip, BFu8c_Sf_Ip)
//============================================================================



static void Test_BFu8c_Sf_L()
{
  {
    init_simple_test("BFu8c_Sf_L");
    static STRUCT_IF_C BFu8c_Sf_L lv;
    check2(sizeof(lv), 9, "sizeof(BFu8c_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_L)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_L");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_L");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_L.v2");
    check_field_offset(lv, v3, 1, "BFu8c_Sf_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_L, BFu8c_Sf_L)
//============================================================================



static void Test_BFu8c_Sf_S()
{
  {
    init_simple_test("BFu8c_Sf_S");
    static STRUCT_IF_C BFu8c_Sf_S lv;
    check2(sizeof(lv), 3, "sizeof(BFu8c_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_S)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_S");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_S");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_S.v2");
    check_field_offset(lv, v3, 1, "BFu8c_Sf_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_S, BFu8c_Sf_S)
//============================================================================



static void Test_BFu8c_Sf_Sf()
{
  {
    init_simple_test("BFu8c_Sf_Sf");
    static STRUCT_IF_C BFu8c_Sf_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu8c_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_Sf");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_Sf.v2");
    check_field_offset(lv, v3, 1, "BFu8c_Sf_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_Sf, BFu8c_Sf_Sf)
//============================================================================



static void Test_BFu8c_Sf_Uc()
{
  {
    init_simple_test("BFu8c_Sf_Uc");
    static STRUCT_IF_C BFu8c_Sf_Uc lv;
    check2(sizeof(lv), 2, "sizeof(BFu8c_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_Uc");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_Uc");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_Uc.v2");
    check_field_offset(lv, v3, 1, "BFu8c_Sf_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_Uc, BFu8c_Sf_Uc)
//============================================================================



static void Test_BFu8c_Sf_Ui()
{
  {
    init_simple_test("BFu8c_Sf_Ui");
    static STRUCT_IF_C BFu8c_Sf_Ui lv;
    check2(sizeof(lv), 5, "sizeof(BFu8c_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_Ui");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_Ui");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_Ui.v2");
    check_field_offset(lv, v3, 1, "BFu8c_Sf_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_Ui, BFu8c_Sf_Ui)
//============================================================================



static void Test_BFu8c_Sf_Ul()
{
  {
    init_simple_test("BFu8c_Sf_Ul");
    static STRUCT_IF_C BFu8c_Sf_Ul lv;
    check2(sizeof(lv), 9, "sizeof(BFu8c_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_Ul");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_Ul");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_Ul.v2");
    check_field_offset(lv, v3, 1, "BFu8c_Sf_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_Ul, BFu8c_Sf_Ul)
//============================================================================



static void Test_BFu8c_Sf_Us()
{
  {
    init_simple_test("BFu8c_Sf_Us");
    static STRUCT_IF_C BFu8c_Sf_Us lv;
    check2(sizeof(lv), 3, "sizeof(BFu8c_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_Us)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_Us");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_Us");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_Us.v2");
    check_field_offset(lv, v3, 1, "BFu8c_Sf_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_Us, BFu8c_Sf_Us)
//============================================================================



static void Test_BFu8c_Sf_Vp()
{
  {
    init_simple_test("BFu8c_Sf_Vp");
    static STRUCT_IF_C BFu8c_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu8c_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Sf_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Sf_Vp");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Sf_Vp");
    check_field_offset(lv, v2, 1, "BFu8c_Sf_Vp.v2");
    check_field_offset(lv, v3, 1, "BFu8c_Sf_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Sf_Vp, BFu8c_Sf_Vp)
//============================================================================



static void Test_BFu8c_Uc_Sf()
{
  {
    init_simple_test("BFu8c_Uc_Sf");
    static STRUCT_IF_C BFu8c_Uc_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8c_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Uc_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Uc_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Uc_Sf");
    check_field_offset(lv, v2, 1, "BFu8c_Uc_Sf.v2");
    check_field_offset(lv, v3, 2, "BFu8c_Uc_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Uc_Sf, BFu8c_Uc_Sf)
//============================================================================



static void Test_BFu8c_Ui_Sf()
{
  {
    init_simple_test("BFu8c_Ui_Sf");
    static STRUCT_IF_C BFu8c_Ui_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu8c_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Ui_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Ui_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Ui_Sf");
    check_field_offset(lv, v2, 1, "BFu8c_Ui_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu8c_Ui_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Ui_Sf, BFu8c_Ui_Sf)
//============================================================================



static void Test_BFu8c_Ul_Sf()
{
  {
    init_simple_test("BFu8c_Ul_Sf");
    static STRUCT_IF_C BFu8c_Ul_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu8c_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Ul_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Ul_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Ul_Sf");
    check_field_offset(lv, v2, 1, "BFu8c_Ul_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu8c_Ul_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Ul_Sf, BFu8c_Ul_Sf)
//============================================================================



static void Test_BFu8c_Us_Sf()
{
  {
    init_simple_test("BFu8c_Us_Sf");
    static STRUCT_IF_C BFu8c_Us_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8c_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Us_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Us_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Us_Sf");
    check_field_offset(lv, v2, 1, "BFu8c_Us_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu8c_Us_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Us_Sf, BFu8c_Us_Sf)
//============================================================================



static void Test_BFu8c_Vp_Sf()
{
  {
    init_simple_test("BFu8c_Vp_Sf");
    static STRUCT_IF_C BFu8c_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu8c_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8c_Vp_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8c_Vp_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8c_Vp_Sf");
    check_field_offset(lv, v2, 1, "BFu8c_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "BFu8c_Vp_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8c_Vp_Sf, BFu8c_Vp_Sf)
//============================================================================



static void Test_BFu8i_BFu15i_Sf()
{
  {
    init_simple_test("BFu8i_BFu15i_Sf");
    static STRUCT_IF_C BFu8i_BFu15i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8i_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_BFu15i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_BFu15i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu15i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "BFu8i_BFu15i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "BFu8i_BFu15i_Sf");
    check_field_offset(lv, v3, 3, "BFu8i_BFu15i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_BFu15i_Sf, BFu8i_BFu15i_Sf)
//============================================================================



static void Test_BFu8i_BFu15ll_Sf()
{
  {
    init_simple_test("BFu8i_BFu15ll_Sf");
    static STRUCT_IF_C BFu8i_BFu15ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8i_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_BFu15ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_BFu15ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "BFu8i_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "BFu8i_BFu15ll_Sf");
    check_field_offset(lv, v3, 3, "BFu8i_BFu15ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_BFu15ll_Sf, BFu8i_BFu15ll_Sf)
//============================================================================



static void Test_BFu8i_BFu15s_Sf()
{
  {
    init_simple_test("BFu8i_BFu15s_Sf");
    static STRUCT_IF_C BFu8i_BFu15s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8i_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_BFu15s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_BFu15s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu15s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "BFu8i_BFu15s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "BFu8i_BFu15s_Sf");
    check_field_offset(lv, v3, 3, "BFu8i_BFu15s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_BFu15s_Sf, BFu8i_BFu15s_Sf)
//============================================================================



static void Test_BFu8i_BFu16i_Sf()
{
  {
    init_simple_test("BFu8i_BFu16i_Sf");
    static STRUCT_IF_C BFu8i_BFu16i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8i_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_BFu16i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_BFu16i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu16i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "BFu8i_BFu16i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "BFu8i_BFu16i_Sf");
    check_field_offset(lv, v3, 3, "BFu8i_BFu16i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_BFu16i_Sf, BFu8i_BFu16i_Sf)
//============================================================================



static void Test_BFu8i_BFu16ll_Sf()
{
  {
    init_simple_test("BFu8i_BFu16ll_Sf");
    static STRUCT_IF_C BFu8i_BFu16ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8i_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_BFu16ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_BFu16ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "BFu8i_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "BFu8i_BFu16ll_Sf");
    check_field_offset(lv, v3, 3, "BFu8i_BFu16ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_BFu16ll_Sf, BFu8i_BFu16ll_Sf)
//============================================================================



static void Test_BFu8i_BFu16s_Sf()
{
  {
    init_simple_test("BFu8i_BFu16s_Sf");
    static STRUCT_IF_C BFu8i_BFu16s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8i_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_BFu16s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_BFu16s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu16s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "BFu8i_BFu16s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "BFu8i_BFu16s_Sf");
    check_field_offset(lv, v3, 3, "BFu8i_BFu16s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_BFu16s_Sf, BFu8i_BFu16s_Sf)
//============================================================================



static void Test_BFu8i_BFu17i_Sf()
{
  {
    init_simple_test("BFu8i_BFu17i_Sf");
    static STRUCT_IF_C BFu8i_BFu17i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu8i_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_BFu17i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_BFu17i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu17i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "BFu8i_BFu17i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "BFu8i_BFu17i_Sf");
    check_field_offset(lv, v3, 4, "BFu8i_BFu17i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_BFu17i_Sf, BFu8i_BFu17i_Sf)
//============================================================================



static void Test_BFu8i_BFu17ll_Sf()
{
  {
    init_simple_test("BFu8i_BFu17ll_Sf");
    static STRUCT_IF_C BFu8i_BFu17ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu8i_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_BFu17ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_BFu17ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "BFu8i_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "BFu8i_BFu17ll_Sf");
    check_field_offset(lv, v3, 4, "BFu8i_BFu17ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_BFu17ll_Sf, BFu8i_BFu17ll_Sf)
//============================================================================



static void Test_BFu8i_BFu1c_Sf()
{
  {
    init_simple_test("BFu8i_BFu1c_Sf");
    static STRUCT_IF_C BFu8i_BFu1c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8i_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_BFu1c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_BFu1c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu1c_Sf");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu8i_BFu1c_Sf");
    check_field_offset(lv, v3, 2, "BFu8i_BFu1c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_BFu1c_Sf, BFu8i_BFu1c_Sf)
//============================================================================



static void Test_BFu8i_BFu1i_Sf()
{
  {
    init_simple_test("BFu8i_BFu1i_Sf");
    static STRUCT_IF_C BFu8i_BFu1i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8i_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_BFu1i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_BFu1i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu1i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu8i_BFu1i_Sf");
    check_field_offset(lv, v3, 2, "BFu8i_BFu1i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_BFu1i_Sf, BFu8i_BFu1i_Sf)
//============================================================================



static void Test_BFu8i_BFu1ll_Sf()
{
  {
    init_simple_test("BFu8i_BFu1ll_Sf");
    static STRUCT_IF_C BFu8i_BFu1ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8i_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_BFu1ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_BFu1ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu1ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu8i_BFu1ll_Sf");
    check_field_offset(lv, v3, 2, "BFu8i_BFu1ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_BFu1ll_Sf, BFu8i_BFu1ll_Sf)
//============================================================================



static void Test_BFu8i_BFu1s_Sf()
{
  {
    init_simple_test("BFu8i_BFu1s_Sf");
    static STRUCT_IF_C BFu8i_BFu1s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8i_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_BFu1s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_BFu1s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu1s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu8i_BFu1s_Sf");
    check_field_offset(lv, v3, 2, "BFu8i_BFu1s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_BFu1s_Sf, BFu8i_BFu1s_Sf)
//============================================================================



static void Test_BFu8i_BFu31i_Sf()
{
  {
    init_simple_test("BFu8i_BFu31i_Sf");
    static STRUCT_IF_C BFu8i_BFu31i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu8i_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_BFu31i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_BFu31i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu31i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "BFu8i_BFu31i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "BFu8i_BFu31i_Sf");
    check_field_offset(lv, v3, 5, "BFu8i_BFu31i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_BFu31i_Sf, BFu8i_BFu31i_Sf)
//============================================================================



static void Test_BFu8i_BFu31ll_Sf()
{
  {
    init_simple_test("BFu8i_BFu31ll_Sf");
    static STRUCT_IF_C BFu8i_BFu31ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu8i_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_BFu31ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_BFu31ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "BFu8i_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "BFu8i_BFu31ll_Sf");
    check_field_offset(lv, v3, 5, "BFu8i_BFu31ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_BFu31ll_Sf, BFu8i_BFu31ll_Sf)
//============================================================================



static void Test_BFu8i_BFu32i_Sf()
{
  {
    init_simple_test("BFu8i_BFu32i_Sf");
    static STRUCT_IF_C BFu8i_BFu32i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu8i_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_BFu32i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_BFu32i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu32i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "BFu8i_BFu32i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "BFu8i_BFu32i_Sf");
    check_field_offset(lv, v3, 5, "BFu8i_BFu32i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_BFu32i_Sf, BFu8i_BFu32i_Sf)
//============================================================================



static void Test_BFu8i_BFu32ll_Sf()
{
  {
    init_simple_test("BFu8i_BFu32ll_Sf");
    static STRUCT_IF_C BFu8i_BFu32ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu8i_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_BFu32ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_BFu32ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "BFu8i_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "BFu8i_BFu32ll_Sf");
    check_field_offset(lv, v3, 5, "BFu8i_BFu32ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_BFu32ll_Sf, BFu8i_BFu32ll_Sf)
//============================================================================



static void Test_BFu8i_BFu33_Sf()
{
  {
    init_simple_test("BFu8i_BFu33_Sf");
    static STRUCT_IF_C BFu8i_BFu33_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu8i_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_BFu33_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_BFu33_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu33_Sf");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "BFu8i_BFu33_Sf");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "BFu8i_BFu33_Sf");
    check_field_offset(lv, v3, 6, "BFu8i_BFu33_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_BFu33_Sf, BFu8i_BFu33_Sf)
//============================================================================



static void Test_BFu8i_BFu7c_Sf()
{
  {
    init_simple_test("BFu8i_BFu7c_Sf");
    static STRUCT_IF_C BFu8i_BFu7c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8i_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_BFu7c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_BFu7c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu7c_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu8i_BFu7c_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu8i_BFu7c_Sf");
    check_field_offset(lv, v3, 2, "BFu8i_BFu7c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_BFu7c_Sf, BFu8i_BFu7c_Sf)
//============================================================================



static void Test_BFu8i_BFu7i_Sf()
{
  {
    init_simple_test("BFu8i_BFu7i_Sf");
    static STRUCT_IF_C BFu8i_BFu7i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8i_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_BFu7i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_BFu7i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu7i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu8i_BFu7i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu8i_BFu7i_Sf");
    check_field_offset(lv, v3, 2, "BFu8i_BFu7i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_BFu7i_Sf, BFu8i_BFu7i_Sf)
//============================================================================



static void Test_BFu8i_BFu7ll_Sf()
{
  {
    init_simple_test("BFu8i_BFu7ll_Sf");
    static STRUCT_IF_C BFu8i_BFu7ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8i_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_BFu7ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_BFu7ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu8i_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu8i_BFu7ll_Sf");
    check_field_offset(lv, v3, 2, "BFu8i_BFu7ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_BFu7ll_Sf, BFu8i_BFu7ll_Sf)
//============================================================================



static void Test_BFu8i_BFu7s_Sf()
{
  {
    init_simple_test("BFu8i_BFu7s_Sf");
    static STRUCT_IF_C BFu8i_BFu7s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8i_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_BFu7s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_BFu7s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu7s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu8i_BFu7s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu8i_BFu7s_Sf");
    check_field_offset(lv, v3, 2, "BFu8i_BFu7s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_BFu7s_Sf, BFu8i_BFu7s_Sf)
//============================================================================



static void Test_BFu8i_BFu8c_Sf()
{
  {
    init_simple_test("BFu8i_BFu8c_Sf");
    static STRUCT_IF_C BFu8i_BFu8c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8i_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_BFu8c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_BFu8c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu8c_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu8i_BFu8c_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu8c_Sf");
    check_field_offset(lv, v3, 2, "BFu8i_BFu8c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_BFu8c_Sf, BFu8i_BFu8c_Sf)
//============================================================================



static void Test_BFu8i_BFu8i_Sf()
{
  {
    init_simple_test("BFu8i_BFu8i_Sf");
    static STRUCT_IF_C BFu8i_BFu8i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8i_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_BFu8i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_BFu8i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu8i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu8i_BFu8i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu8i_Sf");
    check_field_offset(lv, v3, 2, "BFu8i_BFu8i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_BFu8i_Sf, BFu8i_BFu8i_Sf)
//============================================================================



static void Test_BFu8i_BFu8ll_Sf()
{
  {
    init_simple_test("BFu8i_BFu8ll_Sf");
    static STRUCT_IF_C BFu8i_BFu8ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8i_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_BFu8ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_BFu8ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu8i_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu8ll_Sf");
    check_field_offset(lv, v3, 2, "BFu8i_BFu8ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_BFu8ll_Sf, BFu8i_BFu8ll_Sf)
//============================================================================



static void Test_BFu8i_BFu8s_Sf()
{
  {
    init_simple_test("BFu8i_BFu8s_Sf");
    static STRUCT_IF_C BFu8i_BFu8s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8i_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_BFu8s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_BFu8s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu8s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu8i_BFu8s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu8s_Sf");
    check_field_offset(lv, v3, 2, "BFu8i_BFu8s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_BFu8s_Sf, BFu8i_BFu8s_Sf)
//============================================================================



static void Test_BFu8i_BFu9i_Sf()
{
  {
    init_simple_test("BFu8i_BFu9i_Sf");
    static STRUCT_IF_C BFu8i_BFu9i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8i_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_BFu9i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_BFu9i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu9i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "BFu8i_BFu9i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "BFu8i_BFu9i_Sf");
    check_field_offset(lv, v3, 3, "BFu8i_BFu9i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_BFu9i_Sf, BFu8i_BFu9i_Sf)
//============================================================================



static void Test_BFu8i_BFu9ll_Sf()
{
  {
    init_simple_test("BFu8i_BFu9ll_Sf");
    static STRUCT_IF_C BFu8i_BFu9ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8i_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_BFu9ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_BFu9ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "BFu8i_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "BFu8i_BFu9ll_Sf");
    check_field_offset(lv, v3, 3, "BFu8i_BFu9ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_BFu9ll_Sf, BFu8i_BFu9ll_Sf)
//============================================================================



static void Test_BFu8i_BFu9s_Sf()
{
  {
    init_simple_test("BFu8i_BFu9s_Sf");
    static STRUCT_IF_C BFu8i_BFu9s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8i_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_BFu9s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_BFu9s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_BFu9s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "BFu8i_BFu9s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "BFu8i_BFu9s_Sf");
    check_field_offset(lv, v3, 3, "BFu8i_BFu9s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_BFu9s_Sf, BFu8i_BFu9s_Sf)
//============================================================================



static void Test_BFu8i_C_Sf()
{
  {
    init_simple_test("BFu8i_C_Sf");
    static STRUCT_IF_C BFu8i_C_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8i_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_C_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_C_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_C_Sf");
    check_field_offset(lv, v2, 1, "BFu8i_C_Sf.v2");
    check_field_offset(lv, v3, 2, "BFu8i_C_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_C_Sf, BFu8i_C_Sf)
//============================================================================



static void Test_BFu8i_D_Sf()
{
  {
    init_simple_test("BFu8i_D_Sf");
    static STRUCT_IF_C BFu8i_D_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu8i_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_D_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_D_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_D_Sf");
    check_field_offset(lv, v2, 1, "BFu8i_D_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu8i_D_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_D_Sf, BFu8i_D_Sf)
//============================================================================



static void Test_BFu8i_F_Sf()
{
  {
    init_simple_test("BFu8i_F_Sf");
    static STRUCT_IF_C BFu8i_F_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu8i_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_F_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_F_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_F_Sf");
    check_field_offset(lv, v2, 1, "BFu8i_F_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu8i_F_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_F_Sf, BFu8i_F_Sf)
//============================================================================



static void Test_BFu8i_I_Sf()
{
  {
    init_simple_test("BFu8i_I_Sf");
    static STRUCT_IF_C BFu8i_I_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu8i_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_I_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_I_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_I_Sf");
    check_field_offset(lv, v2, 1, "BFu8i_I_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu8i_I_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_I_Sf, BFu8i_I_Sf)
//============================================================================



static void Test_BFu8i_Ip_Sf()
{
  {
    init_simple_test("BFu8i_Ip_Sf");
    static STRUCT_IF_C BFu8i_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu8i_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Ip_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Ip_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Ip_Sf");
    check_field_offset(lv, v2, 1, "BFu8i_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "BFu8i_Ip_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Ip_Sf, BFu8i_Ip_Sf)
//============================================================================



static void Test_BFu8i_L_Sf()
{
  {
    init_simple_test("BFu8i_L_Sf");
    static STRUCT_IF_C BFu8i_L_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu8i_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_L_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_L_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_L_Sf");
    check_field_offset(lv, v2, 1, "BFu8i_L_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu8i_L_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_L_Sf, BFu8i_L_Sf)
//============================================================================



static void Test_BFu8i_S_Sf()
{
  {
    init_simple_test("BFu8i_S_Sf");
    static STRUCT_IF_C BFu8i_S_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8i_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_S_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_S_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_S_Sf");
    check_field_offset(lv, v2, 1, "BFu8i_S_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu8i_S_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_S_Sf, BFu8i_S_Sf)
//============================================================================



static void Test_BFu8i_Sf()
{
  {
    init_simple_test("BFu8i_Sf");
    static STRUCT_IF_C BFu8i_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf");
    check_field_offset(lv, v2, 1, "BFu8i_Sf.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf, BFu8i_Sf)
//============================================================================



static void Test_BFu8i_Sf_BFu15i()
{
  {
    init_simple_test("BFu8i_Sf_BFu15i");
    static STRUCT_IF_C BFu8i_Sf_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(BFu8i_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu15i");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "BFu8i_Sf_BFu15i");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "BFu8i_Sf_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_BFu15i, BFu8i_Sf_BFu15i)
//============================================================================



static void Test_BFu8i_Sf_BFu15ll()
{
  {
    init_simple_test("BFu8i_Sf_BFu15ll");
    static STRUCT_IF_C BFu8i_Sf_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu8i_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu15ll");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "BFu8i_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "BFu8i_Sf_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_BFu15ll, BFu8i_Sf_BFu15ll)
//============================================================================



static void Test_BFu8i_Sf_BFu15s()
{
  {
    init_simple_test("BFu8i_Sf_BFu15s");
    static STRUCT_IF_C BFu8i_Sf_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(BFu8i_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu15s");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "BFu8i_Sf_BFu15s");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "BFu8i_Sf_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_BFu15s, BFu8i_Sf_BFu15s)
//============================================================================



static void Test_BFu8i_Sf_BFu16i()
{
  {
    init_simple_test("BFu8i_Sf_BFu16i");
    static STRUCT_IF_C BFu8i_Sf_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(BFu8i_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu16i");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "BFu8i_Sf_BFu16i");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "BFu8i_Sf_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_BFu16i, BFu8i_Sf_BFu16i)
//============================================================================



static void Test_BFu8i_Sf_BFu16ll()
{
  {
    init_simple_test("BFu8i_Sf_BFu16ll");
    static STRUCT_IF_C BFu8i_Sf_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu8i_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu16ll");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "BFu8i_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "BFu8i_Sf_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_BFu16ll, BFu8i_Sf_BFu16ll)
//============================================================================



static void Test_BFu8i_Sf_BFu16s()
{
  {
    init_simple_test("BFu8i_Sf_BFu16s");
    static STRUCT_IF_C BFu8i_Sf_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(BFu8i_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu16s");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "BFu8i_Sf_BFu16s");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "BFu8i_Sf_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_BFu16s, BFu8i_Sf_BFu16s)
//============================================================================



static void Test_BFu8i_Sf_BFu17i()
{
  {
    init_simple_test("BFu8i_Sf_BFu17i");
    static STRUCT_IF_C BFu8i_Sf_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(BFu8i_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu17i");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 1, 0, 17, 1, "BFu8i_Sf_BFu17i");
    set_bf_and_test(lv, v3, 1, 0, 17, hide_ull(1LL<<16), "BFu8i_Sf_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_BFu17i, BFu8i_Sf_BFu17i)
//============================================================================



static void Test_BFu8i_Sf_BFu17ll()
{
  {
    init_simple_test("BFu8i_Sf_BFu17ll");
    static STRUCT_IF_C BFu8i_Sf_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu8i_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu17ll");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 17, 1, "BFu8i_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 1, 0, 17, hide_ull(1LL<<16), "BFu8i_Sf_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_BFu17ll, BFu8i_Sf_BFu17ll)
//============================================================================



static void Test_BFu8i_Sf_BFu1c()
{
  {
    init_simple_test("BFu8i_Sf_BFu1c");
    static STRUCT_IF_C BFu8i_Sf_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(BFu8i_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu1c");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu8i_Sf_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_BFu1c, BFu8i_Sf_BFu1c)
//============================================================================



static void Test_BFu8i_Sf_BFu1i()
{
  {
    init_simple_test("BFu8i_Sf_BFu1i");
    static STRUCT_IF_C BFu8i_Sf_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(BFu8i_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu1i");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu8i_Sf_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_BFu1i, BFu8i_Sf_BFu1i)
//============================================================================



static void Test_BFu8i_Sf_BFu1ll()
{
  {
    init_simple_test("BFu8i_Sf_BFu1ll");
    static STRUCT_IF_C BFu8i_Sf_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu8i_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu1ll");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu8i_Sf_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_BFu1ll, BFu8i_Sf_BFu1ll)
//============================================================================



static void Test_BFu8i_Sf_BFu1s()
{
  {
    init_simple_test("BFu8i_Sf_BFu1s");
    static STRUCT_IF_C BFu8i_Sf_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(BFu8i_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu1s");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu8i_Sf_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_BFu1s, BFu8i_Sf_BFu1s)
//============================================================================



static void Test_BFu8i_Sf_BFu31i()
{
  {
    init_simple_test("BFu8i_Sf_BFu31i");
    static STRUCT_IF_C BFu8i_Sf_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(BFu8i_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu31i");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 1, 0, 31, 1, "BFu8i_Sf_BFu31i");
    set_bf_and_test(lv, v3, 1, 0, 31, hide_ull(1LL<<30), "BFu8i_Sf_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_BFu31i, BFu8i_Sf_BFu31i)
//============================================================================



static void Test_BFu8i_Sf_BFu31ll()
{
  {
    init_simple_test("BFu8i_Sf_BFu31ll");
    static STRUCT_IF_C BFu8i_Sf_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu8i_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu31ll");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 31, 1, "BFu8i_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 1, 0, 31, hide_ull(1LL<<30), "BFu8i_Sf_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_BFu31ll, BFu8i_Sf_BFu31ll)
//============================================================================



static void Test_BFu8i_Sf_BFu32i()
{
  {
    init_simple_test("BFu8i_Sf_BFu32i");
    static STRUCT_IF_C BFu8i_Sf_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(BFu8i_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu32i");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 1, 0, 32, 1, "BFu8i_Sf_BFu32i");
    set_bf_and_test(lv, v3, 1, 0, 32, hide_ull(1LL<<31), "BFu8i_Sf_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_BFu32i, BFu8i_Sf_BFu32i)
//============================================================================



static void Test_BFu8i_Sf_BFu32ll()
{
  {
    init_simple_test("BFu8i_Sf_BFu32ll");
    static STRUCT_IF_C BFu8i_Sf_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu8i_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu32ll");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 32, 1, "BFu8i_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 1, 0, 32, hide_ull(1LL<<31), "BFu8i_Sf_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_BFu32ll, BFu8i_Sf_BFu32ll)
//============================================================================



static void Test_BFu8i_Sf_BFu33()
{
  {
    init_simple_test("BFu8i_Sf_BFu33");
    static STRUCT_IF_C BFu8i_Sf_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(BFu8i_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu33");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 1, 0, 33, 1, "BFu8i_Sf_BFu33");
    set_bf_and_test(lv, v3, 1, 0, 33, hide_ull(1LL<<32), "BFu8i_Sf_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_BFu33, BFu8i_Sf_BFu33)
//============================================================================



static void Test_BFu8i_Sf_BFu7c()
{
  {
    init_simple_test("BFu8i_Sf_BFu7c");
    static STRUCT_IF_C BFu8i_Sf_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(BFu8i_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu7c");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu8i_Sf_BFu7c");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu8i_Sf_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_BFu7c, BFu8i_Sf_BFu7c)
//============================================================================



static void Test_BFu8i_Sf_BFu7i()
{
  {
    init_simple_test("BFu8i_Sf_BFu7i");
    static STRUCT_IF_C BFu8i_Sf_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(BFu8i_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu7i");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu8i_Sf_BFu7i");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu8i_Sf_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_BFu7i, BFu8i_Sf_BFu7i)
//============================================================================



static void Test_BFu8i_Sf_BFu7ll()
{
  {
    init_simple_test("BFu8i_Sf_BFu7ll");
    static STRUCT_IF_C BFu8i_Sf_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu8i_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu7ll");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu8i_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu8i_Sf_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_BFu7ll, BFu8i_Sf_BFu7ll)
//============================================================================



static void Test_BFu8i_Sf_BFu7s()
{
  {
    init_simple_test("BFu8i_Sf_BFu7s");
    static STRUCT_IF_C BFu8i_Sf_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(BFu8i_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu7s");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu8i_Sf_BFu7s");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu8i_Sf_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_BFu7s, BFu8i_Sf_BFu7s)
//============================================================================



static void Test_BFu8i_Sf_BFu8c()
{
  {
    init_simple_test("BFu8i_Sf_BFu8c");
    static STRUCT_IF_C BFu8i_Sf_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(BFu8i_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu8c");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu8i_Sf_BFu8c");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_BFu8c, BFu8i_Sf_BFu8c)
//============================================================================



static void Test_BFu8i_Sf_BFu8i()
{
  {
    init_simple_test("BFu8i_Sf_BFu8i");
    static STRUCT_IF_C BFu8i_Sf_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(BFu8i_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu8i");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu8i_Sf_BFu8i");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_BFu8i, BFu8i_Sf_BFu8i)
//============================================================================



static void Test_BFu8i_Sf_BFu8ll()
{
  {
    init_simple_test("BFu8i_Sf_BFu8ll");
    static STRUCT_IF_C BFu8i_Sf_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu8i_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu8ll");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu8i_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_BFu8ll, BFu8i_Sf_BFu8ll)
//============================================================================



static void Test_BFu8i_Sf_BFu8s()
{
  {
    init_simple_test("BFu8i_Sf_BFu8s");
    static STRUCT_IF_C BFu8i_Sf_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(BFu8i_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu8s");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu8i_Sf_BFu8s");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_BFu8s, BFu8i_Sf_BFu8s)
//============================================================================



static void Test_BFu8i_Sf_BFu9i()
{
  {
    init_simple_test("BFu8i_Sf_BFu9i");
    static STRUCT_IF_C BFu8i_Sf_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(BFu8i_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu9i");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "BFu8i_Sf_BFu9i");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "BFu8i_Sf_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_BFu9i, BFu8i_Sf_BFu9i)
//============================================================================



static void Test_BFu8i_Sf_BFu9ll()
{
  {
    init_simple_test("BFu8i_Sf_BFu9ll");
    static STRUCT_IF_C BFu8i_Sf_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu8i_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu9ll");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "BFu8i_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "BFu8i_Sf_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_BFu9ll, BFu8i_Sf_BFu9ll)
//============================================================================



static void Test_BFu8i_Sf_BFu9s()
{
  {
    init_simple_test("BFu8i_Sf_BFu9s");
    static STRUCT_IF_C BFu8i_Sf_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(BFu8i_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_BFu9s");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "BFu8i_Sf_BFu9s");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "BFu8i_Sf_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_BFu9s, BFu8i_Sf_BFu9s)
//============================================================================



static void Test_BFu8i_Sf_C()
{
  {
    init_simple_test("BFu8i_Sf_C");
    static STRUCT_IF_C BFu8i_Sf_C lv;
    check2(sizeof(lv), 2, "sizeof(BFu8i_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_C)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_C");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_C");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_C.v2");
    check_field_offset(lv, v3, 1, "BFu8i_Sf_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_C, BFu8i_Sf_C)
//============================================================================



static void Test_BFu8i_Sf_D()
{
  {
    init_simple_test("BFu8i_Sf_D");
    static STRUCT_IF_C BFu8i_Sf_D lv;
    check2(sizeof(lv), 9, "sizeof(BFu8i_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_D)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_D");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_D");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_D.v2");
    check_field_offset(lv, v3, 1, "BFu8i_Sf_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_D, BFu8i_Sf_D)
//============================================================================



static void Test_BFu8i_Sf_F()
{
  {
    init_simple_test("BFu8i_Sf_F");
    static STRUCT_IF_C BFu8i_Sf_F lv;
    check2(sizeof(lv), 5, "sizeof(BFu8i_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_F)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_F");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_F");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_F.v2");
    check_field_offset(lv, v3, 1, "BFu8i_Sf_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_F, BFu8i_Sf_F)
//============================================================================



static void Test_BFu8i_Sf_I()
{
  {
    init_simple_test("BFu8i_Sf_I");
    static STRUCT_IF_C BFu8i_Sf_I lv;
    check2(sizeof(lv), 5, "sizeof(BFu8i_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_I)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_I");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_I");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_I.v2");
    check_field_offset(lv, v3, 1, "BFu8i_Sf_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_I, BFu8i_Sf_I)
//============================================================================



static void Test_BFu8i_Sf_Ip()
{
  {
    init_simple_test("BFu8i_Sf_Ip");
    static STRUCT_IF_C BFu8i_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu8i_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_Ip");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_Ip");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_Ip.v2");
    check_field_offset(lv, v3, 1, "BFu8i_Sf_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_Ip, BFu8i_Sf_Ip)
//============================================================================



static void Test_BFu8i_Sf_L()
{
  {
    init_simple_test("BFu8i_Sf_L");
    static STRUCT_IF_C BFu8i_Sf_L lv;
    check2(sizeof(lv), 9, "sizeof(BFu8i_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_L)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_L");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_L");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_L.v2");
    check_field_offset(lv, v3, 1, "BFu8i_Sf_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_L, BFu8i_Sf_L)
//============================================================================



static void Test_BFu8i_Sf_S()
{
  {
    init_simple_test("BFu8i_Sf_S");
    static STRUCT_IF_C BFu8i_Sf_S lv;
    check2(sizeof(lv), 3, "sizeof(BFu8i_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_S)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_S");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_S");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_S.v2");
    check_field_offset(lv, v3, 1, "BFu8i_Sf_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_S, BFu8i_Sf_S)
//============================================================================



static void Test_BFu8i_Sf_Sf()
{
  {
    init_simple_test("BFu8i_Sf_Sf");
    static STRUCT_IF_C BFu8i_Sf_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu8i_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_Sf");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_Sf.v2");
    check_field_offset(lv, v3, 1, "BFu8i_Sf_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_Sf, BFu8i_Sf_Sf)
//============================================================================



static void Test_BFu8i_Sf_Uc()
{
  {
    init_simple_test("BFu8i_Sf_Uc");
    static STRUCT_IF_C BFu8i_Sf_Uc lv;
    check2(sizeof(lv), 2, "sizeof(BFu8i_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_Uc");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_Uc");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_Uc.v2");
    check_field_offset(lv, v3, 1, "BFu8i_Sf_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_Uc, BFu8i_Sf_Uc)
//============================================================================



static void Test_BFu8i_Sf_Ui()
{
  {
    init_simple_test("BFu8i_Sf_Ui");
    static STRUCT_IF_C BFu8i_Sf_Ui lv;
    check2(sizeof(lv), 5, "sizeof(BFu8i_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_Ui");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_Ui");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_Ui.v2");
    check_field_offset(lv, v3, 1, "BFu8i_Sf_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_Ui, BFu8i_Sf_Ui)
//============================================================================



static void Test_BFu8i_Sf_Ul()
{
  {
    init_simple_test("BFu8i_Sf_Ul");
    static STRUCT_IF_C BFu8i_Sf_Ul lv;
    check2(sizeof(lv), 9, "sizeof(BFu8i_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_Ul");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_Ul");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_Ul.v2");
    check_field_offset(lv, v3, 1, "BFu8i_Sf_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_Ul, BFu8i_Sf_Ul)
//============================================================================



static void Test_BFu8i_Sf_Us()
{
  {
    init_simple_test("BFu8i_Sf_Us");
    static STRUCT_IF_C BFu8i_Sf_Us lv;
    check2(sizeof(lv), 3, "sizeof(BFu8i_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_Us)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_Us");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_Us");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_Us.v2");
    check_field_offset(lv, v3, 1, "BFu8i_Sf_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_Us, BFu8i_Sf_Us)
//============================================================================



static void Test_BFu8i_Sf_Vp()
{
  {
    init_simple_test("BFu8i_Sf_Vp");
    static STRUCT_IF_C BFu8i_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu8i_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Sf_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Sf_Vp");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Sf_Vp");
    check_field_offset(lv, v2, 1, "BFu8i_Sf_Vp.v2");
    check_field_offset(lv, v3, 1, "BFu8i_Sf_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Sf_Vp, BFu8i_Sf_Vp)
//============================================================================



static void Test_BFu8i_Uc_Sf()
{
  {
    init_simple_test("BFu8i_Uc_Sf");
    static STRUCT_IF_C BFu8i_Uc_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8i_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Uc_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Uc_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Uc_Sf");
    check_field_offset(lv, v2, 1, "BFu8i_Uc_Sf.v2");
    check_field_offset(lv, v3, 2, "BFu8i_Uc_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Uc_Sf, BFu8i_Uc_Sf)
//============================================================================



static void Test_BFu8i_Ui_Sf()
{
  {
    init_simple_test("BFu8i_Ui_Sf");
    static STRUCT_IF_C BFu8i_Ui_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu8i_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Ui_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Ui_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Ui_Sf");
    check_field_offset(lv, v2, 1, "BFu8i_Ui_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu8i_Ui_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Ui_Sf, BFu8i_Ui_Sf)
//============================================================================



static void Test_BFu8i_Ul_Sf()
{
  {
    init_simple_test("BFu8i_Ul_Sf");
    static STRUCT_IF_C BFu8i_Ul_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu8i_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Ul_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Ul_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Ul_Sf");
    check_field_offset(lv, v2, 1, "BFu8i_Ul_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu8i_Ul_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Ul_Sf, BFu8i_Ul_Sf)
//============================================================================



static void Test_BFu8i_Us_Sf()
{
  {
    init_simple_test("BFu8i_Us_Sf");
    static STRUCT_IF_C BFu8i_Us_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8i_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Us_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Us_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Us_Sf");
    check_field_offset(lv, v2, 1, "BFu8i_Us_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu8i_Us_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Us_Sf, BFu8i_Us_Sf)
//============================================================================



static void Test_BFu8i_Vp_Sf()
{
  {
    init_simple_test("BFu8i_Vp_Sf");
    static STRUCT_IF_C BFu8i_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu8i_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8i_Vp_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8i_Vp_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8i_Vp_Sf");
    check_field_offset(lv, v2, 1, "BFu8i_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "BFu8i_Vp_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8i_Vp_Sf, BFu8i_Vp_Sf)
//============================================================================



static void Test_BFu8ll_BFu15i_Sf()
{
  {
    init_simple_test("BFu8ll_BFu15i_Sf");
    static STRUCT_IF_C BFu8ll_BFu15i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8ll_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_BFu15i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_BFu15i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu15i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "BFu8ll_BFu15i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "BFu8ll_BFu15i_Sf");
    check_field_offset(lv, v3, 3, "BFu8ll_BFu15i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_BFu15i_Sf, BFu8ll_BFu15i_Sf)
//============================================================================



static void Test_BFu8ll_BFu15ll_Sf()
{
  {
    init_simple_test("BFu8ll_BFu15ll_Sf");
    static STRUCT_IF_C BFu8ll_BFu15ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8ll_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_BFu15ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_BFu15ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "BFu8ll_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "BFu8ll_BFu15ll_Sf");
    check_field_offset(lv, v3, 3, "BFu8ll_BFu15ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_BFu15ll_Sf, BFu8ll_BFu15ll_Sf)
//============================================================================



static void Test_BFu8ll_BFu15s_Sf()
{
  {
    init_simple_test("BFu8ll_BFu15s_Sf");
    static STRUCT_IF_C BFu8ll_BFu15s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8ll_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_BFu15s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_BFu15s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu15s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "BFu8ll_BFu15s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "BFu8ll_BFu15s_Sf");
    check_field_offset(lv, v3, 3, "BFu8ll_BFu15s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_BFu15s_Sf, BFu8ll_BFu15s_Sf)
//============================================================================



static void Test_BFu8ll_BFu16i_Sf()
{
  {
    init_simple_test("BFu8ll_BFu16i_Sf");
    static STRUCT_IF_C BFu8ll_BFu16i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8ll_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_BFu16i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_BFu16i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu16i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "BFu8ll_BFu16i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "BFu8ll_BFu16i_Sf");
    check_field_offset(lv, v3, 3, "BFu8ll_BFu16i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_BFu16i_Sf, BFu8ll_BFu16i_Sf)
//============================================================================



static void Test_BFu8ll_BFu16ll_Sf()
{
  {
    init_simple_test("BFu8ll_BFu16ll_Sf");
    static STRUCT_IF_C BFu8ll_BFu16ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8ll_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_BFu16ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_BFu16ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "BFu8ll_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "BFu8ll_BFu16ll_Sf");
    check_field_offset(lv, v3, 3, "BFu8ll_BFu16ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_BFu16ll_Sf, BFu8ll_BFu16ll_Sf)
//============================================================================



static void Test_BFu8ll_BFu16s_Sf()
{
  {
    init_simple_test("BFu8ll_BFu16s_Sf");
    static STRUCT_IF_C BFu8ll_BFu16s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8ll_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_BFu16s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_BFu16s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu16s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "BFu8ll_BFu16s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "BFu8ll_BFu16s_Sf");
    check_field_offset(lv, v3, 3, "BFu8ll_BFu16s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_BFu16s_Sf, BFu8ll_BFu16s_Sf)
//============================================================================



static void Test_BFu8ll_BFu17i_Sf()
{
  {
    init_simple_test("BFu8ll_BFu17i_Sf");
    static STRUCT_IF_C BFu8ll_BFu17i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu8ll_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_BFu17i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_BFu17i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu17i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "BFu8ll_BFu17i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "BFu8ll_BFu17i_Sf");
    check_field_offset(lv, v3, 4, "BFu8ll_BFu17i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_BFu17i_Sf, BFu8ll_BFu17i_Sf)
//============================================================================



static void Test_BFu8ll_BFu17ll_Sf()
{
  {
    init_simple_test("BFu8ll_BFu17ll_Sf");
    static STRUCT_IF_C BFu8ll_BFu17ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu8ll_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_BFu17ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_BFu17ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "BFu8ll_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "BFu8ll_BFu17ll_Sf");
    check_field_offset(lv, v3, 4, "BFu8ll_BFu17ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_BFu17ll_Sf, BFu8ll_BFu17ll_Sf)
//============================================================================



static void Test_BFu8ll_BFu1c_Sf()
{
  {
    init_simple_test("BFu8ll_BFu1c_Sf");
    static STRUCT_IF_C BFu8ll_BFu1c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8ll_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_BFu1c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_BFu1c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu1c_Sf");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu8ll_BFu1c_Sf");
    check_field_offset(lv, v3, 2, "BFu8ll_BFu1c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_BFu1c_Sf, BFu8ll_BFu1c_Sf)
//============================================================================



static void Test_BFu8ll_BFu1i_Sf()
{
  {
    init_simple_test("BFu8ll_BFu1i_Sf");
    static STRUCT_IF_C BFu8ll_BFu1i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8ll_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_BFu1i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_BFu1i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu1i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu8ll_BFu1i_Sf");
    check_field_offset(lv, v3, 2, "BFu8ll_BFu1i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_BFu1i_Sf, BFu8ll_BFu1i_Sf)
//============================================================================



static void Test_BFu8ll_BFu1ll_Sf()
{
  {
    init_simple_test("BFu8ll_BFu1ll_Sf");
    static STRUCT_IF_C BFu8ll_BFu1ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8ll_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_BFu1ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_BFu1ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu1ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu8ll_BFu1ll_Sf");
    check_field_offset(lv, v3, 2, "BFu8ll_BFu1ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_BFu1ll_Sf, BFu8ll_BFu1ll_Sf)
//============================================================================



static void Test_BFu8ll_BFu1s_Sf()
{
  {
    init_simple_test("BFu8ll_BFu1s_Sf");
    static STRUCT_IF_C BFu8ll_BFu1s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8ll_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_BFu1s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_BFu1s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu1s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu8ll_BFu1s_Sf");
    check_field_offset(lv, v3, 2, "BFu8ll_BFu1s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_BFu1s_Sf, BFu8ll_BFu1s_Sf)
//============================================================================



static void Test_BFu8ll_BFu31i_Sf()
{
  {
    init_simple_test("BFu8ll_BFu31i_Sf");
    static STRUCT_IF_C BFu8ll_BFu31i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu8ll_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_BFu31i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_BFu31i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu31i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "BFu8ll_BFu31i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "BFu8ll_BFu31i_Sf");
    check_field_offset(lv, v3, 5, "BFu8ll_BFu31i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_BFu31i_Sf, BFu8ll_BFu31i_Sf)
//============================================================================



static void Test_BFu8ll_BFu31ll_Sf()
{
  {
    init_simple_test("BFu8ll_BFu31ll_Sf");
    static STRUCT_IF_C BFu8ll_BFu31ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu8ll_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_BFu31ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_BFu31ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "BFu8ll_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "BFu8ll_BFu31ll_Sf");
    check_field_offset(lv, v3, 5, "BFu8ll_BFu31ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_BFu31ll_Sf, BFu8ll_BFu31ll_Sf)
//============================================================================



static void Test_BFu8ll_BFu32i_Sf()
{
  {
    init_simple_test("BFu8ll_BFu32i_Sf");
    static STRUCT_IF_C BFu8ll_BFu32i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu8ll_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_BFu32i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_BFu32i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu32i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "BFu8ll_BFu32i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "BFu8ll_BFu32i_Sf");
    check_field_offset(lv, v3, 5, "BFu8ll_BFu32i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_BFu32i_Sf, BFu8ll_BFu32i_Sf)
//============================================================================



static void Test_BFu8ll_BFu32ll_Sf()
{
  {
    init_simple_test("BFu8ll_BFu32ll_Sf");
    static STRUCT_IF_C BFu8ll_BFu32ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu8ll_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_BFu32ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_BFu32ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "BFu8ll_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "BFu8ll_BFu32ll_Sf");
    check_field_offset(lv, v3, 5, "BFu8ll_BFu32ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_BFu32ll_Sf, BFu8ll_BFu32ll_Sf)
//============================================================================



static void Test_BFu8ll_BFu33_Sf()
{
  {
    init_simple_test("BFu8ll_BFu33_Sf");
    static STRUCT_IF_C BFu8ll_BFu33_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu8ll_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_BFu33_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_BFu33_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu33_Sf");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "BFu8ll_BFu33_Sf");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "BFu8ll_BFu33_Sf");
    check_field_offset(lv, v3, 6, "BFu8ll_BFu33_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_BFu33_Sf, BFu8ll_BFu33_Sf)
//============================================================================



static void Test_BFu8ll_BFu7c_Sf()
{
  {
    init_simple_test("BFu8ll_BFu7c_Sf");
    static STRUCT_IF_C BFu8ll_BFu7c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8ll_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_BFu7c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_BFu7c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu7c_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu8ll_BFu7c_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu8ll_BFu7c_Sf");
    check_field_offset(lv, v3, 2, "BFu8ll_BFu7c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_BFu7c_Sf, BFu8ll_BFu7c_Sf)
//============================================================================



static void Test_BFu8ll_BFu7i_Sf()
{
  {
    init_simple_test("BFu8ll_BFu7i_Sf");
    static STRUCT_IF_C BFu8ll_BFu7i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8ll_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_BFu7i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_BFu7i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu7i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu8ll_BFu7i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu8ll_BFu7i_Sf");
    check_field_offset(lv, v3, 2, "BFu8ll_BFu7i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_BFu7i_Sf, BFu8ll_BFu7i_Sf)
//============================================================================



static void Test_BFu8ll_BFu7ll_Sf()
{
  {
    init_simple_test("BFu8ll_BFu7ll_Sf");
    static STRUCT_IF_C BFu8ll_BFu7ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8ll_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_BFu7ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_BFu7ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu8ll_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu8ll_BFu7ll_Sf");
    check_field_offset(lv, v3, 2, "BFu8ll_BFu7ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_BFu7ll_Sf, BFu8ll_BFu7ll_Sf)
//============================================================================



static void Test_BFu8ll_BFu7s_Sf()
{
  {
    init_simple_test("BFu8ll_BFu7s_Sf");
    static STRUCT_IF_C BFu8ll_BFu7s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8ll_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_BFu7s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_BFu7s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu7s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu8ll_BFu7s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu8ll_BFu7s_Sf");
    check_field_offset(lv, v3, 2, "BFu8ll_BFu7s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_BFu7s_Sf, BFu8ll_BFu7s_Sf)
//============================================================================



static void Test_BFu8ll_BFu8c_Sf()
{
  {
    init_simple_test("BFu8ll_BFu8c_Sf");
    static STRUCT_IF_C BFu8ll_BFu8c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8ll_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_BFu8c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_BFu8c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu8c_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu8ll_BFu8c_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu8c_Sf");
    check_field_offset(lv, v3, 2, "BFu8ll_BFu8c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_BFu8c_Sf, BFu8ll_BFu8c_Sf)
//============================================================================



static void Test_BFu8ll_BFu8i_Sf()
{
  {
    init_simple_test("BFu8ll_BFu8i_Sf");
    static STRUCT_IF_C BFu8ll_BFu8i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8ll_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_BFu8i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_BFu8i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu8i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu8ll_BFu8i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu8i_Sf");
    check_field_offset(lv, v3, 2, "BFu8ll_BFu8i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_BFu8i_Sf, BFu8ll_BFu8i_Sf)
//============================================================================



static void Test_BFu8ll_BFu8ll_Sf()
{
  {
    init_simple_test("BFu8ll_BFu8ll_Sf");
    static STRUCT_IF_C BFu8ll_BFu8ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8ll_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_BFu8ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_BFu8ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu8ll_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu8ll_Sf");
    check_field_offset(lv, v3, 2, "BFu8ll_BFu8ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_BFu8ll_Sf, BFu8ll_BFu8ll_Sf)
//============================================================================



static void Test_BFu8ll_BFu8s_Sf()
{
  {
    init_simple_test("BFu8ll_BFu8s_Sf");
    static STRUCT_IF_C BFu8ll_BFu8s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8ll_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_BFu8s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_BFu8s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu8s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu8ll_BFu8s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu8s_Sf");
    check_field_offset(lv, v3, 2, "BFu8ll_BFu8s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_BFu8s_Sf, BFu8ll_BFu8s_Sf)
//============================================================================



static void Test_BFu8ll_BFu9i_Sf()
{
  {
    init_simple_test("BFu8ll_BFu9i_Sf");
    static STRUCT_IF_C BFu8ll_BFu9i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8ll_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_BFu9i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_BFu9i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu9i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "BFu8ll_BFu9i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "BFu8ll_BFu9i_Sf");
    check_field_offset(lv, v3, 3, "BFu8ll_BFu9i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_BFu9i_Sf, BFu8ll_BFu9i_Sf)
//============================================================================



static void Test_BFu8ll_BFu9ll_Sf()
{
  {
    init_simple_test("BFu8ll_BFu9ll_Sf");
    static STRUCT_IF_C BFu8ll_BFu9ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8ll_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_BFu9ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_BFu9ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "BFu8ll_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "BFu8ll_BFu9ll_Sf");
    check_field_offset(lv, v3, 3, "BFu8ll_BFu9ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_BFu9ll_Sf, BFu8ll_BFu9ll_Sf)
//============================================================================



static void Test_BFu8ll_BFu9s_Sf()
{
  {
    init_simple_test("BFu8ll_BFu9s_Sf");
    static STRUCT_IF_C BFu8ll_BFu9s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8ll_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_BFu9s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_BFu9s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_BFu9s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "BFu8ll_BFu9s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "BFu8ll_BFu9s_Sf");
    check_field_offset(lv, v3, 3, "BFu8ll_BFu9s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_BFu9s_Sf, BFu8ll_BFu9s_Sf)
//============================================================================



static void Test_BFu8ll_C_Sf()
{
  {
    init_simple_test("BFu8ll_C_Sf");
    static STRUCT_IF_C BFu8ll_C_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8ll_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_C_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_C_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_C_Sf");
    check_field_offset(lv, v2, 1, "BFu8ll_C_Sf.v2");
    check_field_offset(lv, v3, 2, "BFu8ll_C_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_C_Sf, BFu8ll_C_Sf)
//============================================================================



static void Test_BFu8ll_D_Sf()
{
  {
    init_simple_test("BFu8ll_D_Sf");
    static STRUCT_IF_C BFu8ll_D_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu8ll_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_D_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_D_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_D_Sf");
    check_field_offset(lv, v2, 1, "BFu8ll_D_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu8ll_D_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_D_Sf, BFu8ll_D_Sf)
//============================================================================



static void Test_BFu8ll_F_Sf()
{
  {
    init_simple_test("BFu8ll_F_Sf");
    static STRUCT_IF_C BFu8ll_F_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu8ll_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_F_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_F_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_F_Sf");
    check_field_offset(lv, v2, 1, "BFu8ll_F_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu8ll_F_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_F_Sf, BFu8ll_F_Sf)
//============================================================================



static void Test_BFu8ll_I_Sf()
{
  {
    init_simple_test("BFu8ll_I_Sf");
    static STRUCT_IF_C BFu8ll_I_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu8ll_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_I_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_I_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_I_Sf");
    check_field_offset(lv, v2, 1, "BFu8ll_I_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu8ll_I_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_I_Sf, BFu8ll_I_Sf)
//============================================================================



static void Test_BFu8ll_Ip_Sf()
{
  {
    init_simple_test("BFu8ll_Ip_Sf");
    static STRUCT_IF_C BFu8ll_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu8ll_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Ip_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Ip_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Ip_Sf");
    check_field_offset(lv, v2, 1, "BFu8ll_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "BFu8ll_Ip_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Ip_Sf, BFu8ll_Ip_Sf)
//============================================================================



static void Test_BFu8ll_L_Sf()
{
  {
    init_simple_test("BFu8ll_L_Sf");
    static STRUCT_IF_C BFu8ll_L_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu8ll_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_L_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_L_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_L_Sf");
    check_field_offset(lv, v2, 1, "BFu8ll_L_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu8ll_L_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_L_Sf, BFu8ll_L_Sf)
//============================================================================



static void Test_BFu8ll_S_Sf()
{
  {
    init_simple_test("BFu8ll_S_Sf");
    static STRUCT_IF_C BFu8ll_S_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8ll_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_S_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_S_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_S_Sf");
    check_field_offset(lv, v2, 1, "BFu8ll_S_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu8ll_S_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_S_Sf, BFu8ll_S_Sf)
//============================================================================



static void Test_BFu8ll_Sf()
{
  {
    init_simple_test("BFu8ll_Sf");
    static STRUCT_IF_C BFu8ll_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf, BFu8ll_Sf)
//============================================================================



static void Test_BFu8ll_Sf_BFu15i()
{
  {
    init_simple_test("BFu8ll_Sf_BFu15i");
    static STRUCT_IF_C BFu8ll_Sf_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(BFu8ll_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu15i");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "BFu8ll_Sf_BFu15i");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "BFu8ll_Sf_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_BFu15i, BFu8ll_Sf_BFu15i)
//============================================================================



static void Test_BFu8ll_Sf_BFu15ll()
{
  {
    init_simple_test("BFu8ll_Sf_BFu15ll");
    static STRUCT_IF_C BFu8ll_Sf_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu8ll_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu15ll");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "BFu8ll_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "BFu8ll_Sf_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_BFu15ll, BFu8ll_Sf_BFu15ll)
//============================================================================



static void Test_BFu8ll_Sf_BFu15s()
{
  {
    init_simple_test("BFu8ll_Sf_BFu15s");
    static STRUCT_IF_C BFu8ll_Sf_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(BFu8ll_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu15s");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "BFu8ll_Sf_BFu15s");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "BFu8ll_Sf_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_BFu15s, BFu8ll_Sf_BFu15s)
//============================================================================



static void Test_BFu8ll_Sf_BFu16i()
{
  {
    init_simple_test("BFu8ll_Sf_BFu16i");
    static STRUCT_IF_C BFu8ll_Sf_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(BFu8ll_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu16i");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "BFu8ll_Sf_BFu16i");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "BFu8ll_Sf_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_BFu16i, BFu8ll_Sf_BFu16i)
//============================================================================



static void Test_BFu8ll_Sf_BFu16ll()
{
  {
    init_simple_test("BFu8ll_Sf_BFu16ll");
    static STRUCT_IF_C BFu8ll_Sf_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu8ll_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu16ll");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "BFu8ll_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "BFu8ll_Sf_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_BFu16ll, BFu8ll_Sf_BFu16ll)
//============================================================================



static void Test_BFu8ll_Sf_BFu16s()
{
  {
    init_simple_test("BFu8ll_Sf_BFu16s");
    static STRUCT_IF_C BFu8ll_Sf_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(BFu8ll_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu16s");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "BFu8ll_Sf_BFu16s");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "BFu8ll_Sf_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_BFu16s, BFu8ll_Sf_BFu16s)
//============================================================================



static void Test_BFu8ll_Sf_BFu17i()
{
  {
    init_simple_test("BFu8ll_Sf_BFu17i");
    static STRUCT_IF_C BFu8ll_Sf_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(BFu8ll_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu17i");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 1, 0, 17, 1, "BFu8ll_Sf_BFu17i");
    set_bf_and_test(lv, v3, 1, 0, 17, hide_ull(1LL<<16), "BFu8ll_Sf_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_BFu17i, BFu8ll_Sf_BFu17i)
//============================================================================



static void Test_BFu8ll_Sf_BFu17ll()
{
  {
    init_simple_test("BFu8ll_Sf_BFu17ll");
    static STRUCT_IF_C BFu8ll_Sf_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu8ll_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu17ll");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 17, 1, "BFu8ll_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 1, 0, 17, hide_ull(1LL<<16), "BFu8ll_Sf_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_BFu17ll, BFu8ll_Sf_BFu17ll)
//============================================================================



static void Test_BFu8ll_Sf_BFu1c()
{
  {
    init_simple_test("BFu8ll_Sf_BFu1c");
    static STRUCT_IF_C BFu8ll_Sf_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(BFu8ll_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu1c");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu8ll_Sf_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_BFu1c, BFu8ll_Sf_BFu1c)
//============================================================================



static void Test_BFu8ll_Sf_BFu1i()
{
  {
    init_simple_test("BFu8ll_Sf_BFu1i");
    static STRUCT_IF_C BFu8ll_Sf_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(BFu8ll_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu1i");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu8ll_Sf_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_BFu1i, BFu8ll_Sf_BFu1i)
//============================================================================



static void Test_BFu8ll_Sf_BFu1ll()
{
  {
    init_simple_test("BFu8ll_Sf_BFu1ll");
    static STRUCT_IF_C BFu8ll_Sf_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu8ll_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu1ll");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu8ll_Sf_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_BFu1ll, BFu8ll_Sf_BFu1ll)
//============================================================================



static void Test_BFu8ll_Sf_BFu1s()
{
  {
    init_simple_test("BFu8ll_Sf_BFu1s");
    static STRUCT_IF_C BFu8ll_Sf_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(BFu8ll_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu1s");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu8ll_Sf_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_BFu1s, BFu8ll_Sf_BFu1s)
//============================================================================



static void Test_BFu8ll_Sf_BFu31i()
{
  {
    init_simple_test("BFu8ll_Sf_BFu31i");
    static STRUCT_IF_C BFu8ll_Sf_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(BFu8ll_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu31i");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 1, 0, 31, 1, "BFu8ll_Sf_BFu31i");
    set_bf_and_test(lv, v3, 1, 0, 31, hide_ull(1LL<<30), "BFu8ll_Sf_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_BFu31i, BFu8ll_Sf_BFu31i)
//============================================================================



static void Test_BFu8ll_Sf_BFu31ll()
{
  {
    init_simple_test("BFu8ll_Sf_BFu31ll");
    static STRUCT_IF_C BFu8ll_Sf_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu8ll_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu31ll");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 31, 1, "BFu8ll_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 1, 0, 31, hide_ull(1LL<<30), "BFu8ll_Sf_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_BFu31ll, BFu8ll_Sf_BFu31ll)
//============================================================================



static void Test_BFu8ll_Sf_BFu32i()
{
  {
    init_simple_test("BFu8ll_Sf_BFu32i");
    static STRUCT_IF_C BFu8ll_Sf_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(BFu8ll_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu32i");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 1, 0, 32, 1, "BFu8ll_Sf_BFu32i");
    set_bf_and_test(lv, v3, 1, 0, 32, hide_ull(1LL<<31), "BFu8ll_Sf_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_BFu32i, BFu8ll_Sf_BFu32i)
//============================================================================



static void Test_BFu8ll_Sf_BFu32ll()
{
  {
    init_simple_test("BFu8ll_Sf_BFu32ll");
    static STRUCT_IF_C BFu8ll_Sf_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu8ll_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu32ll");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 32, 1, "BFu8ll_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 1, 0, 32, hide_ull(1LL<<31), "BFu8ll_Sf_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_BFu32ll, BFu8ll_Sf_BFu32ll)
//============================================================================



static void Test_BFu8ll_Sf_BFu33()
{
  {
    init_simple_test("BFu8ll_Sf_BFu33");
    static STRUCT_IF_C BFu8ll_Sf_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(BFu8ll_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu33");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 1, 0, 33, 1, "BFu8ll_Sf_BFu33");
    set_bf_and_test(lv, v3, 1, 0, 33, hide_ull(1LL<<32), "BFu8ll_Sf_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_BFu33, BFu8ll_Sf_BFu33)
//============================================================================



static void Test_BFu8ll_Sf_BFu7c()
{
  {
    init_simple_test("BFu8ll_Sf_BFu7c");
    static STRUCT_IF_C BFu8ll_Sf_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(BFu8ll_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu7c");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu8ll_Sf_BFu7c");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu8ll_Sf_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_BFu7c, BFu8ll_Sf_BFu7c)
//============================================================================



static void Test_BFu8ll_Sf_BFu7i()
{
  {
    init_simple_test("BFu8ll_Sf_BFu7i");
    static STRUCT_IF_C BFu8ll_Sf_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(BFu8ll_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu7i");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu8ll_Sf_BFu7i");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu8ll_Sf_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_BFu7i, BFu8ll_Sf_BFu7i)
//============================================================================



static void Test_BFu8ll_Sf_BFu7ll()
{
  {
    init_simple_test("BFu8ll_Sf_BFu7ll");
    static STRUCT_IF_C BFu8ll_Sf_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu8ll_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu7ll");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu8ll_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu8ll_Sf_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_BFu7ll, BFu8ll_Sf_BFu7ll)
//============================================================================



static void Test_BFu8ll_Sf_BFu7s()
{
  {
    init_simple_test("BFu8ll_Sf_BFu7s");
    static STRUCT_IF_C BFu8ll_Sf_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(BFu8ll_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu7s");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu8ll_Sf_BFu7s");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu8ll_Sf_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_BFu7s, BFu8ll_Sf_BFu7s)
//============================================================================



static void Test_BFu8ll_Sf_BFu8c()
{
  {
    init_simple_test("BFu8ll_Sf_BFu8c");
    static STRUCT_IF_C BFu8ll_Sf_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(BFu8ll_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu8c");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu8ll_Sf_BFu8c");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_BFu8c, BFu8ll_Sf_BFu8c)
//============================================================================



static void Test_BFu8ll_Sf_BFu8i()
{
  {
    init_simple_test("BFu8ll_Sf_BFu8i");
    static STRUCT_IF_C BFu8ll_Sf_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(BFu8ll_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu8i");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu8ll_Sf_BFu8i");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_BFu8i, BFu8ll_Sf_BFu8i)
//============================================================================



static void Test_BFu8ll_Sf_BFu8ll()
{
  {
    init_simple_test("BFu8ll_Sf_BFu8ll");
    static STRUCT_IF_C BFu8ll_Sf_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu8ll_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu8ll");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu8ll_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_BFu8ll, BFu8ll_Sf_BFu8ll)
//============================================================================



static void Test_BFu8ll_Sf_BFu8s()
{
  {
    init_simple_test("BFu8ll_Sf_BFu8s");
    static STRUCT_IF_C BFu8ll_Sf_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(BFu8ll_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu8s");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu8ll_Sf_BFu8s");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_BFu8s, BFu8ll_Sf_BFu8s)
//============================================================================



static void Test_BFu8ll_Sf_BFu9i()
{
  {
    init_simple_test("BFu8ll_Sf_BFu9i");
    static STRUCT_IF_C BFu8ll_Sf_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(BFu8ll_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu9i");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "BFu8ll_Sf_BFu9i");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "BFu8ll_Sf_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_BFu9i, BFu8ll_Sf_BFu9i)
//============================================================================



static void Test_BFu8ll_Sf_BFu9ll()
{
  {
    init_simple_test("BFu8ll_Sf_BFu9ll");
    static STRUCT_IF_C BFu8ll_Sf_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu8ll_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu9ll");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "BFu8ll_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "BFu8ll_Sf_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_BFu9ll, BFu8ll_Sf_BFu9ll)
//============================================================================



static void Test_BFu8ll_Sf_BFu9s()
{
  {
    init_simple_test("BFu8ll_Sf_BFu9s");
    static STRUCT_IF_C BFu8ll_Sf_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(BFu8ll_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_BFu9s");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "BFu8ll_Sf_BFu9s");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "BFu8ll_Sf_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_BFu9s, BFu8ll_Sf_BFu9s)
//============================================================================



static void Test_BFu8ll_Sf_C()
{
  {
    init_simple_test("BFu8ll_Sf_C");
    static STRUCT_IF_C BFu8ll_Sf_C lv;
    check2(sizeof(lv), 2, "sizeof(BFu8ll_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_C)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_C");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_C");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_C.v2");
    check_field_offset(lv, v3, 1, "BFu8ll_Sf_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_C, BFu8ll_Sf_C)
//============================================================================



static void Test_BFu8ll_Sf_D()
{
  {
    init_simple_test("BFu8ll_Sf_D");
    static STRUCT_IF_C BFu8ll_Sf_D lv;
    check2(sizeof(lv), 9, "sizeof(BFu8ll_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_D)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_D");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_D");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_D.v2");
    check_field_offset(lv, v3, 1, "BFu8ll_Sf_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_D, BFu8ll_Sf_D)
//============================================================================



static void Test_BFu8ll_Sf_F()
{
  {
    init_simple_test("BFu8ll_Sf_F");
    static STRUCT_IF_C BFu8ll_Sf_F lv;
    check2(sizeof(lv), 5, "sizeof(BFu8ll_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_F)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_F");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_F");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_F.v2");
    check_field_offset(lv, v3, 1, "BFu8ll_Sf_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_F, BFu8ll_Sf_F)
//============================================================================



static void Test_BFu8ll_Sf_I()
{
  {
    init_simple_test("BFu8ll_Sf_I");
    static STRUCT_IF_C BFu8ll_Sf_I lv;
    check2(sizeof(lv), 5, "sizeof(BFu8ll_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_I)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_I");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_I");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_I.v2");
    check_field_offset(lv, v3, 1, "BFu8ll_Sf_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_I, BFu8ll_Sf_I)
//============================================================================



static void Test_BFu8ll_Sf_Ip()
{
  {
    init_simple_test("BFu8ll_Sf_Ip");
    static STRUCT_IF_C BFu8ll_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu8ll_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_Ip");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_Ip");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_Ip.v2");
    check_field_offset(lv, v3, 1, "BFu8ll_Sf_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_Ip, BFu8ll_Sf_Ip)
//============================================================================



static void Test_BFu8ll_Sf_L()
{
  {
    init_simple_test("BFu8ll_Sf_L");
    static STRUCT_IF_C BFu8ll_Sf_L lv;
    check2(sizeof(lv), 9, "sizeof(BFu8ll_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_L)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_L");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_L");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_L.v2");
    check_field_offset(lv, v3, 1, "BFu8ll_Sf_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_L, BFu8ll_Sf_L)
//============================================================================



static void Test_BFu8ll_Sf_S()
{
  {
    init_simple_test("BFu8ll_Sf_S");
    static STRUCT_IF_C BFu8ll_Sf_S lv;
    check2(sizeof(lv), 3, "sizeof(BFu8ll_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_S)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_S");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_S");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_S.v2");
    check_field_offset(lv, v3, 1, "BFu8ll_Sf_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_S, BFu8ll_Sf_S)
//============================================================================



static void Test_BFu8ll_Sf_Sf()
{
  {
    init_simple_test("BFu8ll_Sf_Sf");
    static STRUCT_IF_C BFu8ll_Sf_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu8ll_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_Sf");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_Sf.v2");
    check_field_offset(lv, v3, 1, "BFu8ll_Sf_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_Sf, BFu8ll_Sf_Sf)
//============================================================================



static void Test_BFu8ll_Sf_Uc()
{
  {
    init_simple_test("BFu8ll_Sf_Uc");
    static STRUCT_IF_C BFu8ll_Sf_Uc lv;
    check2(sizeof(lv), 2, "sizeof(BFu8ll_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_Uc");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_Uc");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_Uc.v2");
    check_field_offset(lv, v3, 1, "BFu8ll_Sf_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_Uc, BFu8ll_Sf_Uc)
//============================================================================



static void Test_BFu8ll_Sf_Ui()
{
  {
    init_simple_test("BFu8ll_Sf_Ui");
    static STRUCT_IF_C BFu8ll_Sf_Ui lv;
    check2(sizeof(lv), 5, "sizeof(BFu8ll_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_Ui");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_Ui");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_Ui.v2");
    check_field_offset(lv, v3, 1, "BFu8ll_Sf_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_Ui, BFu8ll_Sf_Ui)
//============================================================================



static void Test_BFu8ll_Sf_Ul()
{
  {
    init_simple_test("BFu8ll_Sf_Ul");
    static STRUCT_IF_C BFu8ll_Sf_Ul lv;
    check2(sizeof(lv), 9, "sizeof(BFu8ll_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_Ul");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_Ul");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_Ul.v2");
    check_field_offset(lv, v3, 1, "BFu8ll_Sf_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_Ul, BFu8ll_Sf_Ul)
//============================================================================



static void Test_BFu8ll_Sf_Us()
{
  {
    init_simple_test("BFu8ll_Sf_Us");
    static STRUCT_IF_C BFu8ll_Sf_Us lv;
    check2(sizeof(lv), 3, "sizeof(BFu8ll_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_Us)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_Us");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_Us");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_Us.v2");
    check_field_offset(lv, v3, 1, "BFu8ll_Sf_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_Us, BFu8ll_Sf_Us)
//============================================================================



static void Test_BFu8ll_Sf_Vp()
{
  {
    init_simple_test("BFu8ll_Sf_Vp");
    static STRUCT_IF_C BFu8ll_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu8ll_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Sf_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Sf_Vp");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Sf_Vp");
    check_field_offset(lv, v2, 1, "BFu8ll_Sf_Vp.v2");
    check_field_offset(lv, v3, 1, "BFu8ll_Sf_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Sf_Vp, BFu8ll_Sf_Vp)
//============================================================================



static void Test_BFu8ll_Uc_Sf()
{
  {
    init_simple_test("BFu8ll_Uc_Sf");
    static STRUCT_IF_C BFu8ll_Uc_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8ll_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Uc_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Uc_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Uc_Sf");
    check_field_offset(lv, v2, 1, "BFu8ll_Uc_Sf.v2");
    check_field_offset(lv, v3, 2, "BFu8ll_Uc_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Uc_Sf, BFu8ll_Uc_Sf)
//============================================================================



static void Test_BFu8ll_Ui_Sf()
{
  {
    init_simple_test("BFu8ll_Ui_Sf");
    static STRUCT_IF_C BFu8ll_Ui_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu8ll_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Ui_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Ui_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Ui_Sf");
    check_field_offset(lv, v2, 1, "BFu8ll_Ui_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu8ll_Ui_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Ui_Sf, BFu8ll_Ui_Sf)
//============================================================================



static void Test_BFu8ll_Ul_Sf()
{
  {
    init_simple_test("BFu8ll_Ul_Sf");
    static STRUCT_IF_C BFu8ll_Ul_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu8ll_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Ul_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Ul_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Ul_Sf");
    check_field_offset(lv, v2, 1, "BFu8ll_Ul_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu8ll_Ul_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Ul_Sf, BFu8ll_Ul_Sf)
//============================================================================



static void Test_BFu8ll_Us_Sf()
{
  {
    init_simple_test("BFu8ll_Us_Sf");
    static STRUCT_IF_C BFu8ll_Us_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8ll_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Us_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Us_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Us_Sf");
    check_field_offset(lv, v2, 1, "BFu8ll_Us_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu8ll_Us_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Us_Sf, BFu8ll_Us_Sf)
//============================================================================



static void Test_BFu8ll_Vp_Sf()
{
  {
    init_simple_test("BFu8ll_Vp_Sf");
    static STRUCT_IF_C BFu8ll_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu8ll_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8ll_Vp_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8ll_Vp_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8ll_Vp_Sf");
    check_field_offset(lv, v2, 1, "BFu8ll_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "BFu8ll_Vp_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8ll_Vp_Sf, BFu8ll_Vp_Sf)
//============================================================================



static void Test_BFu8s_BFu15i_Sf()
{
  {
    init_simple_test("BFu8s_BFu15i_Sf");
    static STRUCT_IF_C BFu8s_BFu15i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8s_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_BFu15i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_BFu15i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu15i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "BFu8s_BFu15i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "BFu8s_BFu15i_Sf");
    check_field_offset(lv, v3, 3, "BFu8s_BFu15i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_BFu15i_Sf, BFu8s_BFu15i_Sf)
//============================================================================



static void Test_BFu8s_BFu15ll_Sf()
{
  {
    init_simple_test("BFu8s_BFu15ll_Sf");
    static STRUCT_IF_C BFu8s_BFu15ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8s_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_BFu15ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_BFu15ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "BFu8s_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "BFu8s_BFu15ll_Sf");
    check_field_offset(lv, v3, 3, "BFu8s_BFu15ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_BFu15ll_Sf, BFu8s_BFu15ll_Sf)
//============================================================================



static void Test_BFu8s_BFu15s_Sf()
{
  {
    init_simple_test("BFu8s_BFu15s_Sf");
    static STRUCT_IF_C BFu8s_BFu15s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8s_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_BFu15s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_BFu15s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu15s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "BFu8s_BFu15s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "BFu8s_BFu15s_Sf");
    check_field_offset(lv, v3, 3, "BFu8s_BFu15s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_BFu15s_Sf, BFu8s_BFu15s_Sf)
//============================================================================



static void Test_BFu8s_BFu16i_Sf()
{
  {
    init_simple_test("BFu8s_BFu16i_Sf");
    static STRUCT_IF_C BFu8s_BFu16i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8s_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_BFu16i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_BFu16i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu16i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "BFu8s_BFu16i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "BFu8s_BFu16i_Sf");
    check_field_offset(lv, v3, 3, "BFu8s_BFu16i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_BFu16i_Sf, BFu8s_BFu16i_Sf)
//============================================================================



static void Test_BFu8s_BFu16ll_Sf()
{
  {
    init_simple_test("BFu8s_BFu16ll_Sf");
    static STRUCT_IF_C BFu8s_BFu16ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8s_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_BFu16ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_BFu16ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "BFu8s_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "BFu8s_BFu16ll_Sf");
    check_field_offset(lv, v3, 3, "BFu8s_BFu16ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_BFu16ll_Sf, BFu8s_BFu16ll_Sf)
//============================================================================



static void Test_BFu8s_BFu16s_Sf()
{
  {
    init_simple_test("BFu8s_BFu16s_Sf");
    static STRUCT_IF_C BFu8s_BFu16s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8s_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_BFu16s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_BFu16s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu16s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "BFu8s_BFu16s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "BFu8s_BFu16s_Sf");
    check_field_offset(lv, v3, 3, "BFu8s_BFu16s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_BFu16s_Sf, BFu8s_BFu16s_Sf)
//============================================================================



static void Test_BFu8s_BFu17i_Sf()
{
  {
    init_simple_test("BFu8s_BFu17i_Sf");
    static STRUCT_IF_C BFu8s_BFu17i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu8s_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_BFu17i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_BFu17i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu17i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "BFu8s_BFu17i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "BFu8s_BFu17i_Sf");
    check_field_offset(lv, v3, 4, "BFu8s_BFu17i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_BFu17i_Sf, BFu8s_BFu17i_Sf)
//============================================================================



static void Test_BFu8s_BFu17ll_Sf()
{
  {
    init_simple_test("BFu8s_BFu17ll_Sf");
    static STRUCT_IF_C BFu8s_BFu17ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu8s_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_BFu17ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_BFu17ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "BFu8s_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "BFu8s_BFu17ll_Sf");
    check_field_offset(lv, v3, 4, "BFu8s_BFu17ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_BFu17ll_Sf, BFu8s_BFu17ll_Sf)
//============================================================================



static void Test_BFu8s_BFu1c_Sf()
{
  {
    init_simple_test("BFu8s_BFu1c_Sf");
    static STRUCT_IF_C BFu8s_BFu1c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8s_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_BFu1c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_BFu1c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu1c_Sf");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu8s_BFu1c_Sf");
    check_field_offset(lv, v3, 2, "BFu8s_BFu1c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_BFu1c_Sf, BFu8s_BFu1c_Sf)
//============================================================================



static void Test_BFu8s_BFu1i_Sf()
{
  {
    init_simple_test("BFu8s_BFu1i_Sf");
    static STRUCT_IF_C BFu8s_BFu1i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8s_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_BFu1i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_BFu1i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu1i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu8s_BFu1i_Sf");
    check_field_offset(lv, v3, 2, "BFu8s_BFu1i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_BFu1i_Sf, BFu8s_BFu1i_Sf)
//============================================================================



static void Test_BFu8s_BFu1ll_Sf()
{
  {
    init_simple_test("BFu8s_BFu1ll_Sf");
    static STRUCT_IF_C BFu8s_BFu1ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8s_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_BFu1ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_BFu1ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu1ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu8s_BFu1ll_Sf");
    check_field_offset(lv, v3, 2, "BFu8s_BFu1ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_BFu1ll_Sf, BFu8s_BFu1ll_Sf)
//============================================================================



static void Test_BFu8s_BFu1s_Sf()
{
  {
    init_simple_test("BFu8s_BFu1s_Sf");
    static STRUCT_IF_C BFu8s_BFu1s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8s_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_BFu1s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_BFu1s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu1s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu8s_BFu1s_Sf");
    check_field_offset(lv, v3, 2, "BFu8s_BFu1s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_BFu1s_Sf, BFu8s_BFu1s_Sf)
//============================================================================



static void Test_BFu8s_BFu31i_Sf()
{
  {
    init_simple_test("BFu8s_BFu31i_Sf");
    static STRUCT_IF_C BFu8s_BFu31i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu8s_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_BFu31i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_BFu31i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu31i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "BFu8s_BFu31i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "BFu8s_BFu31i_Sf");
    check_field_offset(lv, v3, 5, "BFu8s_BFu31i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_BFu31i_Sf, BFu8s_BFu31i_Sf)
//============================================================================



static void Test_BFu8s_BFu31ll_Sf()
{
  {
    init_simple_test("BFu8s_BFu31ll_Sf");
    static STRUCT_IF_C BFu8s_BFu31ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu8s_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_BFu31ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_BFu31ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "BFu8s_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "BFu8s_BFu31ll_Sf");
    check_field_offset(lv, v3, 5, "BFu8s_BFu31ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_BFu31ll_Sf, BFu8s_BFu31ll_Sf)
//============================================================================



static void Test_BFu8s_BFu32i_Sf()
{
  {
    init_simple_test("BFu8s_BFu32i_Sf");
    static STRUCT_IF_C BFu8s_BFu32i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu8s_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_BFu32i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_BFu32i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu32i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "BFu8s_BFu32i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "BFu8s_BFu32i_Sf");
    check_field_offset(lv, v3, 5, "BFu8s_BFu32i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_BFu32i_Sf, BFu8s_BFu32i_Sf)
//============================================================================



static void Test_BFu8s_BFu32ll_Sf()
{
  {
    init_simple_test("BFu8s_BFu32ll_Sf");
    static STRUCT_IF_C BFu8s_BFu32ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu8s_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_BFu32ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_BFu32ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "BFu8s_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "BFu8s_BFu32ll_Sf");
    check_field_offset(lv, v3, 5, "BFu8s_BFu32ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_BFu32ll_Sf, BFu8s_BFu32ll_Sf)
//============================================================================



static void Test_BFu8s_BFu33_Sf()
{
  {
    init_simple_test("BFu8s_BFu33_Sf");
    static STRUCT_IF_C BFu8s_BFu33_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu8s_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_BFu33_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_BFu33_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu33_Sf");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "BFu8s_BFu33_Sf");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "BFu8s_BFu33_Sf");
    check_field_offset(lv, v3, 6, "BFu8s_BFu33_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_BFu33_Sf, BFu8s_BFu33_Sf)
//============================================================================



static void Test_BFu8s_BFu7c_Sf()
{
  {
    init_simple_test("BFu8s_BFu7c_Sf");
    static STRUCT_IF_C BFu8s_BFu7c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8s_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_BFu7c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_BFu7c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu7c_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu8s_BFu7c_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu8s_BFu7c_Sf");
    check_field_offset(lv, v3, 2, "BFu8s_BFu7c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_BFu7c_Sf, BFu8s_BFu7c_Sf)
//============================================================================



static void Test_BFu8s_BFu7i_Sf()
{
  {
    init_simple_test("BFu8s_BFu7i_Sf");
    static STRUCT_IF_C BFu8s_BFu7i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8s_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_BFu7i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_BFu7i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu7i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu8s_BFu7i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu8s_BFu7i_Sf");
    check_field_offset(lv, v3, 2, "BFu8s_BFu7i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_BFu7i_Sf, BFu8s_BFu7i_Sf)
//============================================================================



static void Test_BFu8s_BFu7ll_Sf()
{
  {
    init_simple_test("BFu8s_BFu7ll_Sf");
    static STRUCT_IF_C BFu8s_BFu7ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8s_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_BFu7ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_BFu7ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu8s_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu8s_BFu7ll_Sf");
    check_field_offset(lv, v3, 2, "BFu8s_BFu7ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_BFu7ll_Sf, BFu8s_BFu7ll_Sf)
//============================================================================



static void Test_BFu8s_BFu7s_Sf()
{
  {
    init_simple_test("BFu8s_BFu7s_Sf");
    static STRUCT_IF_C BFu8s_BFu7s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8s_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_BFu7s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_BFu7s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu7s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu8s_BFu7s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu8s_BFu7s_Sf");
    check_field_offset(lv, v3, 2, "BFu8s_BFu7s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_BFu7s_Sf, BFu8s_BFu7s_Sf)
//============================================================================



static void Test_BFu8s_BFu8c_Sf()
{
  {
    init_simple_test("BFu8s_BFu8c_Sf");
    static STRUCT_IF_C BFu8s_BFu8c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8s_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_BFu8c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_BFu8c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu8c_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu8s_BFu8c_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu8c_Sf");
    check_field_offset(lv, v3, 2, "BFu8s_BFu8c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_BFu8c_Sf, BFu8s_BFu8c_Sf)
//============================================================================



static void Test_BFu8s_BFu8i_Sf()
{
  {
    init_simple_test("BFu8s_BFu8i_Sf");
    static STRUCT_IF_C BFu8s_BFu8i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8s_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_BFu8i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_BFu8i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu8i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu8s_BFu8i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu8i_Sf");
    check_field_offset(lv, v3, 2, "BFu8s_BFu8i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_BFu8i_Sf, BFu8s_BFu8i_Sf)
//============================================================================



static void Test_BFu8s_BFu8ll_Sf()
{
  {
    init_simple_test("BFu8s_BFu8ll_Sf");
    static STRUCT_IF_C BFu8s_BFu8ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8s_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_BFu8ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_BFu8ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu8s_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu8ll_Sf");
    check_field_offset(lv, v3, 2, "BFu8s_BFu8ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_BFu8ll_Sf, BFu8s_BFu8ll_Sf)
//============================================================================



static void Test_BFu8s_BFu8s_Sf()
{
  {
    init_simple_test("BFu8s_BFu8s_Sf");
    static STRUCT_IF_C BFu8s_BFu8s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8s_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_BFu8s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_BFu8s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu8s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu8s_BFu8s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu8s_Sf");
    check_field_offset(lv, v3, 2, "BFu8s_BFu8s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_BFu8s_Sf, BFu8s_BFu8s_Sf)
//============================================================================



static void Test_BFu8s_BFu9i_Sf()
{
  {
    init_simple_test("BFu8s_BFu9i_Sf");
    static STRUCT_IF_C BFu8s_BFu9i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8s_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_BFu9i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_BFu9i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu9i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "BFu8s_BFu9i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "BFu8s_BFu9i_Sf");
    check_field_offset(lv, v3, 3, "BFu8s_BFu9i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_BFu9i_Sf, BFu8s_BFu9i_Sf)
//============================================================================



static void Test_BFu8s_BFu9ll_Sf()
{
  {
    init_simple_test("BFu8s_BFu9ll_Sf");
    static STRUCT_IF_C BFu8s_BFu9ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8s_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_BFu9ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_BFu9ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "BFu8s_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "BFu8s_BFu9ll_Sf");
    check_field_offset(lv, v3, 3, "BFu8s_BFu9ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_BFu9ll_Sf, BFu8s_BFu9ll_Sf)
//============================================================================



static void Test_BFu8s_BFu9s_Sf()
{
  {
    init_simple_test("BFu8s_BFu9s_Sf");
    static STRUCT_IF_C BFu8s_BFu9s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8s_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_BFu9s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_BFu9s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_BFu9s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "BFu8s_BFu9s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "BFu8s_BFu9s_Sf");
    check_field_offset(lv, v3, 3, "BFu8s_BFu9s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_BFu9s_Sf, BFu8s_BFu9s_Sf)
//============================================================================



static void Test_BFu8s_C_Sf()
{
  {
    init_simple_test("BFu8s_C_Sf");
    static STRUCT_IF_C BFu8s_C_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8s_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_C_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_C_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_C_Sf");
    check_field_offset(lv, v2, 1, "BFu8s_C_Sf.v2");
    check_field_offset(lv, v3, 2, "BFu8s_C_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_C_Sf, BFu8s_C_Sf)
//============================================================================



static void Test_BFu8s_D_Sf()
{
  {
    init_simple_test("BFu8s_D_Sf");
    static STRUCT_IF_C BFu8s_D_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu8s_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_D_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_D_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_D_Sf");
    check_field_offset(lv, v2, 1, "BFu8s_D_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu8s_D_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_D_Sf, BFu8s_D_Sf)
//============================================================================



static void Test_BFu8s_F_Sf()
{
  {
    init_simple_test("BFu8s_F_Sf");
    static STRUCT_IF_C BFu8s_F_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu8s_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_F_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_F_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_F_Sf");
    check_field_offset(lv, v2, 1, "BFu8s_F_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu8s_F_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_F_Sf, BFu8s_F_Sf)
//============================================================================



static void Test_BFu8s_I_Sf()
{
  {
    init_simple_test("BFu8s_I_Sf");
    static STRUCT_IF_C BFu8s_I_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu8s_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_I_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_I_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_I_Sf");
    check_field_offset(lv, v2, 1, "BFu8s_I_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu8s_I_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_I_Sf, BFu8s_I_Sf)
//============================================================================



static void Test_BFu8s_Ip_Sf()
{
  {
    init_simple_test("BFu8s_Ip_Sf");
    static STRUCT_IF_C BFu8s_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu8s_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Ip_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Ip_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Ip_Sf");
    check_field_offset(lv, v2, 1, "BFu8s_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "BFu8s_Ip_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Ip_Sf, BFu8s_Ip_Sf)
//============================================================================



static void Test_BFu8s_L_Sf()
{
  {
    init_simple_test("BFu8s_L_Sf");
    static STRUCT_IF_C BFu8s_L_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu8s_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_L_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_L_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_L_Sf");
    check_field_offset(lv, v2, 1, "BFu8s_L_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu8s_L_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_L_Sf, BFu8s_L_Sf)
//============================================================================



static void Test_BFu8s_S_Sf()
{
  {
    init_simple_test("BFu8s_S_Sf");
    static STRUCT_IF_C BFu8s_S_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8s_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_S_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_S_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_S_Sf");
    check_field_offset(lv, v2, 1, "BFu8s_S_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu8s_S_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_S_Sf, BFu8s_S_Sf)
//============================================================================



static void Test_BFu8s_Sf()
{
  {
    init_simple_test("BFu8s_Sf");
    static STRUCT_IF_C BFu8s_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf");
    check_field_offset(lv, v2, 1, "BFu8s_Sf.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf, BFu8s_Sf)
//============================================================================



static void Test_BFu8s_Sf_BFu15i()
{
  {
    init_simple_test("BFu8s_Sf_BFu15i");
    static STRUCT_IF_C BFu8s_Sf_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(BFu8s_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu15i");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "BFu8s_Sf_BFu15i");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "BFu8s_Sf_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_BFu15i, BFu8s_Sf_BFu15i)
//============================================================================



static void Test_BFu8s_Sf_BFu15ll()
{
  {
    init_simple_test("BFu8s_Sf_BFu15ll");
    static STRUCT_IF_C BFu8s_Sf_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu8s_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu15ll");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "BFu8s_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "BFu8s_Sf_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_BFu15ll, BFu8s_Sf_BFu15ll)
//============================================================================



static void Test_BFu8s_Sf_BFu15s()
{
  {
    init_simple_test("BFu8s_Sf_BFu15s");
    static STRUCT_IF_C BFu8s_Sf_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(BFu8s_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu15s");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "BFu8s_Sf_BFu15s");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "BFu8s_Sf_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_BFu15s, BFu8s_Sf_BFu15s)
//============================================================================



static void Test_BFu8s_Sf_BFu16i()
{
  {
    init_simple_test("BFu8s_Sf_BFu16i");
    static STRUCT_IF_C BFu8s_Sf_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(BFu8s_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu16i");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "BFu8s_Sf_BFu16i");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "BFu8s_Sf_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_BFu16i, BFu8s_Sf_BFu16i)
//============================================================================



static void Test_BFu8s_Sf_BFu16ll()
{
  {
    init_simple_test("BFu8s_Sf_BFu16ll");
    static STRUCT_IF_C BFu8s_Sf_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu8s_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu16ll");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "BFu8s_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "BFu8s_Sf_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_BFu16ll, BFu8s_Sf_BFu16ll)
//============================================================================



static void Test_BFu8s_Sf_BFu16s()
{
  {
    init_simple_test("BFu8s_Sf_BFu16s");
    static STRUCT_IF_C BFu8s_Sf_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(BFu8s_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu16s");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "BFu8s_Sf_BFu16s");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "BFu8s_Sf_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_BFu16s, BFu8s_Sf_BFu16s)
//============================================================================



static void Test_BFu8s_Sf_BFu17i()
{
  {
    init_simple_test("BFu8s_Sf_BFu17i");
    static STRUCT_IF_C BFu8s_Sf_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(BFu8s_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu17i");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 1, 0, 17, 1, "BFu8s_Sf_BFu17i");
    set_bf_and_test(lv, v3, 1, 0, 17, hide_ull(1LL<<16), "BFu8s_Sf_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_BFu17i, BFu8s_Sf_BFu17i)
//============================================================================



static void Test_BFu8s_Sf_BFu17ll()
{
  {
    init_simple_test("BFu8s_Sf_BFu17ll");
    static STRUCT_IF_C BFu8s_Sf_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu8s_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu17ll");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 17, 1, "BFu8s_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 1, 0, 17, hide_ull(1LL<<16), "BFu8s_Sf_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_BFu17ll, BFu8s_Sf_BFu17ll)
//============================================================================



static void Test_BFu8s_Sf_BFu1c()
{
  {
    init_simple_test("BFu8s_Sf_BFu1c");
    static STRUCT_IF_C BFu8s_Sf_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(BFu8s_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu1c");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu8s_Sf_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_BFu1c, BFu8s_Sf_BFu1c)
//============================================================================



static void Test_BFu8s_Sf_BFu1i()
{
  {
    init_simple_test("BFu8s_Sf_BFu1i");
    static STRUCT_IF_C BFu8s_Sf_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(BFu8s_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu1i");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu8s_Sf_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_BFu1i, BFu8s_Sf_BFu1i)
//============================================================================



static void Test_BFu8s_Sf_BFu1ll()
{
  {
    init_simple_test("BFu8s_Sf_BFu1ll");
    static STRUCT_IF_C BFu8s_Sf_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu8s_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu1ll");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu8s_Sf_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_BFu1ll, BFu8s_Sf_BFu1ll)
//============================================================================



static void Test_BFu8s_Sf_BFu1s()
{
  {
    init_simple_test("BFu8s_Sf_BFu1s");
    static STRUCT_IF_C BFu8s_Sf_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(BFu8s_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu1s");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "BFu8s_Sf_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_BFu1s, BFu8s_Sf_BFu1s)
//============================================================================



static void Test_BFu8s_Sf_BFu31i()
{
  {
    init_simple_test("BFu8s_Sf_BFu31i");
    static STRUCT_IF_C BFu8s_Sf_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(BFu8s_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu31i");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 1, 0, 31, 1, "BFu8s_Sf_BFu31i");
    set_bf_and_test(lv, v3, 1, 0, 31, hide_ull(1LL<<30), "BFu8s_Sf_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_BFu31i, BFu8s_Sf_BFu31i)
//============================================================================



static void Test_BFu8s_Sf_BFu31ll()
{
  {
    init_simple_test("BFu8s_Sf_BFu31ll");
    static STRUCT_IF_C BFu8s_Sf_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu8s_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu31ll");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 31, 1, "BFu8s_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 1, 0, 31, hide_ull(1LL<<30), "BFu8s_Sf_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_BFu31ll, BFu8s_Sf_BFu31ll)
//============================================================================



static void Test_BFu8s_Sf_BFu32i()
{
  {
    init_simple_test("BFu8s_Sf_BFu32i");
    static STRUCT_IF_C BFu8s_Sf_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(BFu8s_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu32i");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 1, 0, 32, 1, "BFu8s_Sf_BFu32i");
    set_bf_and_test(lv, v3, 1, 0, 32, hide_ull(1LL<<31), "BFu8s_Sf_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_BFu32i, BFu8s_Sf_BFu32i)
//============================================================================



static void Test_BFu8s_Sf_BFu32ll()
{
  {
    init_simple_test("BFu8s_Sf_BFu32ll");
    static STRUCT_IF_C BFu8s_Sf_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu8s_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu32ll");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 32, 1, "BFu8s_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 1, 0, 32, hide_ull(1LL<<31), "BFu8s_Sf_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_BFu32ll, BFu8s_Sf_BFu32ll)
//============================================================================



static void Test_BFu8s_Sf_BFu33()
{
  {
    init_simple_test("BFu8s_Sf_BFu33");
    static STRUCT_IF_C BFu8s_Sf_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(BFu8s_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu33");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 1, 0, 33, 1, "BFu8s_Sf_BFu33");
    set_bf_and_test(lv, v3, 1, 0, 33, hide_ull(1LL<<32), "BFu8s_Sf_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_BFu33, BFu8s_Sf_BFu33)
//============================================================================



static void Test_BFu8s_Sf_BFu7c()
{
  {
    init_simple_test("BFu8s_Sf_BFu7c");
    static STRUCT_IF_C BFu8s_Sf_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(BFu8s_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu7c");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu8s_Sf_BFu7c");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu8s_Sf_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_BFu7c, BFu8s_Sf_BFu7c)
//============================================================================



static void Test_BFu8s_Sf_BFu7i()
{
  {
    init_simple_test("BFu8s_Sf_BFu7i");
    static STRUCT_IF_C BFu8s_Sf_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(BFu8s_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu7i");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu8s_Sf_BFu7i");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu8s_Sf_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_BFu7i, BFu8s_Sf_BFu7i)
//============================================================================



static void Test_BFu8s_Sf_BFu7ll()
{
  {
    init_simple_test("BFu8s_Sf_BFu7ll");
    static STRUCT_IF_C BFu8s_Sf_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu8s_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu7ll");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu8s_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu8s_Sf_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_BFu7ll, BFu8s_Sf_BFu7ll)
//============================================================================



static void Test_BFu8s_Sf_BFu7s()
{
  {
    init_simple_test("BFu8s_Sf_BFu7s");
    static STRUCT_IF_C BFu8s_Sf_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(BFu8s_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu7s");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "BFu8s_Sf_BFu7s");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "BFu8s_Sf_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_BFu7s, BFu8s_Sf_BFu7s)
//============================================================================



static void Test_BFu8s_Sf_BFu8c()
{
  {
    init_simple_test("BFu8s_Sf_BFu8c");
    static STRUCT_IF_C BFu8s_Sf_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(BFu8s_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu8c");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu8s_Sf_BFu8c");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_BFu8c, BFu8s_Sf_BFu8c)
//============================================================================



static void Test_BFu8s_Sf_BFu8i()
{
  {
    init_simple_test("BFu8s_Sf_BFu8i");
    static STRUCT_IF_C BFu8s_Sf_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(BFu8s_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu8i");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu8s_Sf_BFu8i");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_BFu8i, BFu8s_Sf_BFu8i)
//============================================================================



static void Test_BFu8s_Sf_BFu8ll()
{
  {
    init_simple_test("BFu8s_Sf_BFu8ll");
    static STRUCT_IF_C BFu8s_Sf_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu8s_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu8ll");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu8s_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_BFu8ll, BFu8s_Sf_BFu8ll)
//============================================================================



static void Test_BFu8s_Sf_BFu8s()
{
  {
    init_simple_test("BFu8s_Sf_BFu8s");
    static STRUCT_IF_C BFu8s_Sf_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(BFu8s_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu8s");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "BFu8s_Sf_BFu8s");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_BFu8s, BFu8s_Sf_BFu8s)
//============================================================================



static void Test_BFu8s_Sf_BFu9i()
{
  {
    init_simple_test("BFu8s_Sf_BFu9i");
    static STRUCT_IF_C BFu8s_Sf_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(BFu8s_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu9i");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "BFu8s_Sf_BFu9i");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "BFu8s_Sf_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_BFu9i, BFu8s_Sf_BFu9i)
//============================================================================



static void Test_BFu8s_Sf_BFu9ll()
{
  {
    init_simple_test("BFu8s_Sf_BFu9ll");
    static STRUCT_IF_C BFu8s_Sf_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu8s_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu9ll");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "BFu8s_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "BFu8s_Sf_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_BFu9ll, BFu8s_Sf_BFu9ll)
//============================================================================



static void Test_BFu8s_Sf_BFu9s()
{
  {
    init_simple_test("BFu8s_Sf_BFu9s");
    static STRUCT_IF_C BFu8s_Sf_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(BFu8s_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_BFu9s");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "BFu8s_Sf_BFu9s");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "BFu8s_Sf_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_BFu9s, BFu8s_Sf_BFu9s)
//============================================================================



static void Test_BFu8s_Sf_C()
{
  {
    init_simple_test("BFu8s_Sf_C");
    static STRUCT_IF_C BFu8s_Sf_C lv;
    check2(sizeof(lv), 2, "sizeof(BFu8s_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_C)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_C");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_C");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_C.v2");
    check_field_offset(lv, v3, 1, "BFu8s_Sf_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_C, BFu8s_Sf_C)
//============================================================================



static void Test_BFu8s_Sf_D()
{
  {
    init_simple_test("BFu8s_Sf_D");
    static STRUCT_IF_C BFu8s_Sf_D lv;
    check2(sizeof(lv), 9, "sizeof(BFu8s_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_D)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_D");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_D");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_D.v2");
    check_field_offset(lv, v3, 1, "BFu8s_Sf_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_D, BFu8s_Sf_D)
//============================================================================



static void Test_BFu8s_Sf_F()
{
  {
    init_simple_test("BFu8s_Sf_F");
    static STRUCT_IF_C BFu8s_Sf_F lv;
    check2(sizeof(lv), 5, "sizeof(BFu8s_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_F)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_F");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_F");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_F.v2");
    check_field_offset(lv, v3, 1, "BFu8s_Sf_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_F, BFu8s_Sf_F)
//============================================================================



static void Test_BFu8s_Sf_I()
{
  {
    init_simple_test("BFu8s_Sf_I");
    static STRUCT_IF_C BFu8s_Sf_I lv;
    check2(sizeof(lv), 5, "sizeof(BFu8s_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_I)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_I");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_I");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_I.v2");
    check_field_offset(lv, v3, 1, "BFu8s_Sf_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_I, BFu8s_Sf_I)
//============================================================================



static void Test_BFu8s_Sf_Ip()
{
  {
    init_simple_test("BFu8s_Sf_Ip");
    static STRUCT_IF_C BFu8s_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu8s_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_Ip");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_Ip");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_Ip.v2");
    check_field_offset(lv, v3, 1, "BFu8s_Sf_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_Ip, BFu8s_Sf_Ip)
//============================================================================



static void Test_BFu8s_Sf_L()
{
  {
    init_simple_test("BFu8s_Sf_L");
    static STRUCT_IF_C BFu8s_Sf_L lv;
    check2(sizeof(lv), 9, "sizeof(BFu8s_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_L)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_L");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_L");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_L.v2");
    check_field_offset(lv, v3, 1, "BFu8s_Sf_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_L, BFu8s_Sf_L)
//============================================================================



static void Test_BFu8s_Sf_S()
{
  {
    init_simple_test("BFu8s_Sf_S");
    static STRUCT_IF_C BFu8s_Sf_S lv;
    check2(sizeof(lv), 3, "sizeof(BFu8s_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_S)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_S");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_S");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_S.v2");
    check_field_offset(lv, v3, 1, "BFu8s_Sf_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_S, BFu8s_Sf_S)
//============================================================================



static void Test_BFu8s_Sf_Sf()
{
  {
    init_simple_test("BFu8s_Sf_Sf");
    static STRUCT_IF_C BFu8s_Sf_Sf lv;
    check2(sizeof(lv), 1, "sizeof(BFu8s_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_Sf");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_Sf.v2");
    check_field_offset(lv, v3, 1, "BFu8s_Sf_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_Sf, BFu8s_Sf_Sf)
//============================================================================



static void Test_BFu8s_Sf_Uc()
{
  {
    init_simple_test("BFu8s_Sf_Uc");
    static STRUCT_IF_C BFu8s_Sf_Uc lv;
    check2(sizeof(lv), 2, "sizeof(BFu8s_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_Uc");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_Uc");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_Uc.v2");
    check_field_offset(lv, v3, 1, "BFu8s_Sf_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_Uc, BFu8s_Sf_Uc)
//============================================================================



static void Test_BFu8s_Sf_Ui()
{
  {
    init_simple_test("BFu8s_Sf_Ui");
    static STRUCT_IF_C BFu8s_Sf_Ui lv;
    check2(sizeof(lv), 5, "sizeof(BFu8s_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_Ui");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_Ui");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_Ui.v2");
    check_field_offset(lv, v3, 1, "BFu8s_Sf_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_Ui, BFu8s_Sf_Ui)
//============================================================================



static void Test_BFu8s_Sf_Ul()
{
  {
    init_simple_test("BFu8s_Sf_Ul");
    static STRUCT_IF_C BFu8s_Sf_Ul lv;
    check2(sizeof(lv), 9, "sizeof(BFu8s_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_Ul");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_Ul");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_Ul.v2");
    check_field_offset(lv, v3, 1, "BFu8s_Sf_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_Ul, BFu8s_Sf_Ul)
//============================================================================



static void Test_BFu8s_Sf_Us()
{
  {
    init_simple_test("BFu8s_Sf_Us");
    static STRUCT_IF_C BFu8s_Sf_Us lv;
    check2(sizeof(lv), 3, "sizeof(BFu8s_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_Us)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_Us");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_Us");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_Us.v2");
    check_field_offset(lv, v3, 1, "BFu8s_Sf_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_Us, BFu8s_Sf_Us)
//============================================================================



static void Test_BFu8s_Sf_Vp()
{
  {
    init_simple_test("BFu8s_Sf_Vp");
    static STRUCT_IF_C BFu8s_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu8s_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Sf_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Sf_Vp");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Sf_Vp");
    check_field_offset(lv, v2, 1, "BFu8s_Sf_Vp.v2");
    check_field_offset(lv, v3, 1, "BFu8s_Sf_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Sf_Vp, BFu8s_Sf_Vp)
//============================================================================



static void Test_BFu8s_Uc_Sf()
{
  {
    init_simple_test("BFu8s_Uc_Sf");
    static STRUCT_IF_C BFu8s_Uc_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu8s_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Uc_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Uc_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Uc_Sf");
    check_field_offset(lv, v2, 1, "BFu8s_Uc_Sf.v2");
    check_field_offset(lv, v3, 2, "BFu8s_Uc_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Uc_Sf, BFu8s_Uc_Sf)
//============================================================================



static void Test_BFu8s_Ui_Sf()
{
  {
    init_simple_test("BFu8s_Ui_Sf");
    static STRUCT_IF_C BFu8s_Ui_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu8s_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Ui_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Ui_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Ui_Sf");
    check_field_offset(lv, v2, 1, "BFu8s_Ui_Sf.v2");
    check_field_offset(lv, v3, 5, "BFu8s_Ui_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Ui_Sf, BFu8s_Ui_Sf)
//============================================================================



static void Test_BFu8s_Ul_Sf()
{
  {
    init_simple_test("BFu8s_Ul_Sf");
    static STRUCT_IF_C BFu8s_Ul_Sf lv;
    check2(sizeof(lv), 9, "sizeof(BFu8s_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Ul_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Ul_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Ul_Sf");
    check_field_offset(lv, v2, 1, "BFu8s_Ul_Sf.v2");
    check_field_offset(lv, v3, 9, "BFu8s_Ul_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Ul_Sf, BFu8s_Ul_Sf)
//============================================================================



static void Test_BFu8s_Us_Sf()
{
  {
    init_simple_test("BFu8s_Us_Sf");
    static STRUCT_IF_C BFu8s_Us_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu8s_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Us_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Us_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Us_Sf");
    check_field_offset(lv, v2, 1, "BFu8s_Us_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu8s_Us_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Us_Sf, BFu8s_Us_Sf)
//============================================================================



static void Test_BFu8s_Vp_Sf()
{
  {
    init_simple_test("BFu8s_Vp_Sf");
    static STRUCT_IF_C BFu8s_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu8s_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu8s_Vp_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 8, 1, "BFu8s_Vp_Sf");
    set_bf_and_test(lv, v1, 0, 0, 8, hide_ull(1LL<<7), "BFu8s_Vp_Sf");
    check_field_offset(lv, v2, 1, "BFu8s_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "BFu8s_Vp_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu8s_Vp_Sf, BFu8s_Vp_Sf)
//============================================================================



static void Test_BFu9i_BFu15i_Sf()
{
  {
    init_simple_test("BFu9i_BFu15i_Sf");
    static STRUCT_IF_C BFu9i_BFu15i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9i_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_BFu15i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_BFu15i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_BFu15i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 15, 1, "BFu9i_BFu15i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 15, hide_ull(1LL<<14), "BFu9i_BFu15i_Sf");
    check_field_offset(lv, v3, 3, "BFu9i_BFu15i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_BFu15i_Sf, BFu9i_BFu15i_Sf)
//============================================================================



static void Test_BFu9i_BFu15ll_Sf()
{
  {
    init_simple_test("BFu9i_BFu15ll_Sf");
    static STRUCT_IF_C BFu9i_BFu15ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9i_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_BFu15ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_BFu15ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 15, 1, "BFu9i_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 15, hide_ull(1LL<<14), "BFu9i_BFu15ll_Sf");
    check_field_offset(lv, v3, 3, "BFu9i_BFu15ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_BFu15ll_Sf, BFu9i_BFu15ll_Sf)
//============================================================================



static void Test_BFu9i_BFu15s_Sf()
{
  {
    init_simple_test("BFu9i_BFu15s_Sf");
    static STRUCT_IF_C BFu9i_BFu15s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9i_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_BFu15s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_BFu15s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_BFu15s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 15, 1, "BFu9i_BFu15s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 15, hide_ull(1LL<<14), "BFu9i_BFu15s_Sf");
    check_field_offset(lv, v3, 3, "BFu9i_BFu15s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_BFu15s_Sf, BFu9i_BFu15s_Sf)
//============================================================================



static void Test_BFu9i_BFu16i_Sf()
{
  {
    init_simple_test("BFu9i_BFu16i_Sf");
    static STRUCT_IF_C BFu9i_BFu16i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu9i_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_BFu16i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_BFu16i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_BFu16i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 16, 1, "BFu9i_BFu16i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 16, hide_ull(1LL<<15), "BFu9i_BFu16i_Sf");
    check_field_offset(lv, v3, 4, "BFu9i_BFu16i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_BFu16i_Sf, BFu9i_BFu16i_Sf)
//============================================================================



static void Test_BFu9i_BFu16ll_Sf()
{
  {
    init_simple_test("BFu9i_BFu16ll_Sf");
    static STRUCT_IF_C BFu9i_BFu16ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu9i_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_BFu16ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_BFu16ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 16, 1, "BFu9i_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 16, hide_ull(1LL<<15), "BFu9i_BFu16ll_Sf");
    check_field_offset(lv, v3, 4, "BFu9i_BFu16ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_BFu16ll_Sf, BFu9i_BFu16ll_Sf)
//============================================================================



static void Test_BFu9i_BFu16s_Sf()
{
  {
    init_simple_test("BFu9i_BFu16s_Sf");
    static STRUCT_IF_C BFu9i_BFu16s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu9i_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_BFu16s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_BFu16s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_BFu16s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 16, 1, "BFu9i_BFu16s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 16, hide_ull(1LL<<15), "BFu9i_BFu16s_Sf");
    check_field_offset(lv, v3, 4, "BFu9i_BFu16s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_BFu16s_Sf, BFu9i_BFu16s_Sf)
//============================================================================



static void Test_BFu9i_BFu17i_Sf()
{
  {
    init_simple_test("BFu9i_BFu17i_Sf");
    static STRUCT_IF_C BFu9i_BFu17i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu9i_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_BFu17i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_BFu17i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_BFu17i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 17, 1, "BFu9i_BFu17i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 17, hide_ull(1LL<<16), "BFu9i_BFu17i_Sf");
    check_field_offset(lv, v3, 4, "BFu9i_BFu17i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_BFu17i_Sf, BFu9i_BFu17i_Sf)
//============================================================================



static void Test_BFu9i_BFu17ll_Sf()
{
  {
    init_simple_test("BFu9i_BFu17ll_Sf");
    static STRUCT_IF_C BFu9i_BFu17ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu9i_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_BFu17ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_BFu17ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 17, 1, "BFu9i_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 17, hide_ull(1LL<<16), "BFu9i_BFu17ll_Sf");
    check_field_offset(lv, v3, 4, "BFu9i_BFu17ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_BFu17ll_Sf, BFu9i_BFu17ll_Sf)
//============================================================================



static void Test_BFu9i_BFu1c_Sf()
{
  {
    init_simple_test("BFu9i_BFu1c_Sf");
    static STRUCT_IF_C BFu9i_BFu1c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu9i_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_BFu1c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_BFu1c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_BFu1c_Sf");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "BFu9i_BFu1c_Sf");
    check_field_offset(lv, v3, 2, "BFu9i_BFu1c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_BFu1c_Sf, BFu9i_BFu1c_Sf)
//============================================================================



static void Test_BFu9i_BFu1i_Sf()
{
  {
    init_simple_test("BFu9i_BFu1i_Sf");
    static STRUCT_IF_C BFu9i_BFu1i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu9i_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_BFu1i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_BFu1i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_BFu1i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "BFu9i_BFu1i_Sf");
    check_field_offset(lv, v3, 2, "BFu9i_BFu1i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_BFu1i_Sf, BFu9i_BFu1i_Sf)
//============================================================================



static void Test_BFu9i_BFu1ll_Sf()
{
  {
    init_simple_test("BFu9i_BFu1ll_Sf");
    static STRUCT_IF_C BFu9i_BFu1ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu9i_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_BFu1ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_BFu1ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_BFu1ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "BFu9i_BFu1ll_Sf");
    check_field_offset(lv, v3, 2, "BFu9i_BFu1ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_BFu1ll_Sf, BFu9i_BFu1ll_Sf)
//============================================================================



static void Test_BFu9i_BFu1s_Sf()
{
  {
    init_simple_test("BFu9i_BFu1s_Sf");
    static STRUCT_IF_C BFu9i_BFu1s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu9i_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_BFu1s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_BFu1s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_BFu1s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "BFu9i_BFu1s_Sf");
    check_field_offset(lv, v3, 2, "BFu9i_BFu1s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_BFu1s_Sf, BFu9i_BFu1s_Sf)
//============================================================================



static void Test_BFu9i_BFu31i_Sf()
{
  {
    init_simple_test("BFu9i_BFu31i_Sf");
    static STRUCT_IF_C BFu9i_BFu31i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu9i_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_BFu31i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_BFu31i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_BFu31i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 31, 1, "BFu9i_BFu31i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 31, hide_ull(1LL<<30), "BFu9i_BFu31i_Sf");
    check_field_offset(lv, v3, 5, "BFu9i_BFu31i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_BFu31i_Sf, BFu9i_BFu31i_Sf)
//============================================================================



static void Test_BFu9i_BFu31ll_Sf()
{
  {
    init_simple_test("BFu9i_BFu31ll_Sf");
    static STRUCT_IF_C BFu9i_BFu31ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu9i_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_BFu31ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_BFu31ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 31, 1, "BFu9i_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 31, hide_ull(1LL<<30), "BFu9i_BFu31ll_Sf");
    check_field_offset(lv, v3, 5, "BFu9i_BFu31ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_BFu31ll_Sf, BFu9i_BFu31ll_Sf)
//============================================================================



static void Test_BFu9i_BFu32i_Sf()
{
  {
    init_simple_test("BFu9i_BFu32i_Sf");
    static STRUCT_IF_C BFu9i_BFu32i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu9i_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_BFu32i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_BFu32i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_BFu32i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 32, 1, "BFu9i_BFu32i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 32, hide_ull(1LL<<31), "BFu9i_BFu32i_Sf");
    check_field_offset(lv, v3, 6, "BFu9i_BFu32i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_BFu32i_Sf, BFu9i_BFu32i_Sf)
//============================================================================



static void Test_BFu9i_BFu32ll_Sf()
{
  {
    init_simple_test("BFu9i_BFu32ll_Sf");
    static STRUCT_IF_C BFu9i_BFu32ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu9i_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_BFu32ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_BFu32ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 32, 1, "BFu9i_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 32, hide_ull(1LL<<31), "BFu9i_BFu32ll_Sf");
    check_field_offset(lv, v3, 6, "BFu9i_BFu32ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_BFu32ll_Sf, BFu9i_BFu32ll_Sf)
//============================================================================



static void Test_BFu9i_BFu33_Sf()
{
  {
    init_simple_test("BFu9i_BFu33_Sf");
    static STRUCT_IF_C BFu9i_BFu33_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu9i_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_BFu33_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_BFu33_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_BFu33_Sf");
    set_bf_and_test(lv, v2, 1, 1, 33, 1, "BFu9i_BFu33_Sf");
    set_bf_and_test(lv, v2, 1, 1, 33, hide_ull(1LL<<32), "BFu9i_BFu33_Sf");
    check_field_offset(lv, v3, 6, "BFu9i_BFu33_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_BFu33_Sf, BFu9i_BFu33_Sf)
//============================================================================



static void Test_BFu9i_BFu7c_Sf()
{
  {
    init_simple_test("BFu9i_BFu7c_Sf");
    static STRUCT_IF_C BFu9i_BFu7c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu9i_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_BFu7c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_BFu7c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_BFu7c_Sf");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "BFu9i_BFu7c_Sf");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "BFu9i_BFu7c_Sf");
    check_field_offset(lv, v3, 2, "BFu9i_BFu7c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_BFu7c_Sf, BFu9i_BFu7c_Sf)
//============================================================================



static void Test_BFu9i_BFu7i_Sf()
{
  {
    init_simple_test("BFu9i_BFu7i_Sf");
    static STRUCT_IF_C BFu9i_BFu7i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu9i_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_BFu7i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_BFu7i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_BFu7i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "BFu9i_BFu7i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "BFu9i_BFu7i_Sf");
    check_field_offset(lv, v3, 2, "BFu9i_BFu7i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_BFu7i_Sf, BFu9i_BFu7i_Sf)
//============================================================================



static void Test_BFu9i_BFu7ll_Sf()
{
  {
    init_simple_test("BFu9i_BFu7ll_Sf");
    static STRUCT_IF_C BFu9i_BFu7ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu9i_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_BFu7ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_BFu7ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "BFu9i_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "BFu9i_BFu7ll_Sf");
    check_field_offset(lv, v3, 2, "BFu9i_BFu7ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_BFu7ll_Sf, BFu9i_BFu7ll_Sf)
//============================================================================



static void Test_BFu9i_BFu7s_Sf()
{
  {
    init_simple_test("BFu9i_BFu7s_Sf");
    static STRUCT_IF_C BFu9i_BFu7s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu9i_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_BFu7s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_BFu7s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_BFu7s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "BFu9i_BFu7s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "BFu9i_BFu7s_Sf");
    check_field_offset(lv, v3, 2, "BFu9i_BFu7s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_BFu7s_Sf, BFu9i_BFu7s_Sf)
//============================================================================



static void Test_BFu9i_BFu8c_Sf()
{
  {
    init_simple_test("BFu9i_BFu8c_Sf");
    static STRUCT_IF_C BFu9i_BFu8c_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9i_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_BFu8c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_BFu8c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_BFu8c_Sf");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "BFu9i_BFu8c_Sf");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "BFu9i_BFu8c_Sf");
    check_field_offset(lv, v3, 3, "BFu9i_BFu8c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_BFu8c_Sf, BFu9i_BFu8c_Sf)
//============================================================================



static void Test_BFu9i_BFu8i_Sf()
{
  {
    init_simple_test("BFu9i_BFu8i_Sf");
    static STRUCT_IF_C BFu9i_BFu8i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9i_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_BFu8i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_BFu8i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_BFu8i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "BFu9i_BFu8i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "BFu9i_BFu8i_Sf");
    check_field_offset(lv, v3, 3, "BFu9i_BFu8i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_BFu8i_Sf, BFu9i_BFu8i_Sf)
//============================================================================



static void Test_BFu9i_BFu8ll_Sf()
{
  {
    init_simple_test("BFu9i_BFu8ll_Sf");
    static STRUCT_IF_C BFu9i_BFu8ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9i_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_BFu8ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_BFu8ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "BFu9i_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "BFu9i_BFu8ll_Sf");
    check_field_offset(lv, v3, 3, "BFu9i_BFu8ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_BFu8ll_Sf, BFu9i_BFu8ll_Sf)
//============================================================================



static void Test_BFu9i_BFu8s_Sf()
{
  {
    init_simple_test("BFu9i_BFu8s_Sf");
    static STRUCT_IF_C BFu9i_BFu8s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9i_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_BFu8s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_BFu8s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_BFu8s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "BFu9i_BFu8s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "BFu9i_BFu8s_Sf");
    check_field_offset(lv, v3, 3, "BFu9i_BFu8s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_BFu8s_Sf, BFu9i_BFu8s_Sf)
//============================================================================



static void Test_BFu9i_BFu9i_Sf()
{
  {
    init_simple_test("BFu9i_BFu9i_Sf");
    static STRUCT_IF_C BFu9i_BFu9i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9i_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_BFu9i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_BFu9i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_BFu9i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 9, 1, "BFu9i_BFu9i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 9, hide_ull(1LL<<8), "BFu9i_BFu9i_Sf");
    check_field_offset(lv, v3, 3, "BFu9i_BFu9i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_BFu9i_Sf, BFu9i_BFu9i_Sf)
//============================================================================



static void Test_BFu9i_BFu9ll_Sf()
{
  {
    init_simple_test("BFu9i_BFu9ll_Sf");
    static STRUCT_IF_C BFu9i_BFu9ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9i_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_BFu9ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_BFu9ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 9, 1, "BFu9i_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 9, hide_ull(1LL<<8), "BFu9i_BFu9ll_Sf");
    check_field_offset(lv, v3, 3, "BFu9i_BFu9ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_BFu9ll_Sf, BFu9i_BFu9ll_Sf)
//============================================================================



static void Test_BFu9i_BFu9s_Sf()
{
  {
    init_simple_test("BFu9i_BFu9s_Sf");
    static STRUCT_IF_C BFu9i_BFu9s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9i_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_BFu9s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_BFu9s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_BFu9s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 9, 1, "BFu9i_BFu9s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 9, hide_ull(1LL<<8), "BFu9i_BFu9s_Sf");
    check_field_offset(lv, v3, 3, "BFu9i_BFu9s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_BFu9s_Sf, BFu9i_BFu9s_Sf)
//============================================================================



static void Test_BFu9i_C_Sf()
{
  {
    init_simple_test("BFu9i_C_Sf");
    static STRUCT_IF_C BFu9i_C_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9i_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_C_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_C_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_C_Sf");
    check_field_offset(lv, v2, 2, "BFu9i_C_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu9i_C_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_C_Sf, BFu9i_C_Sf)
//============================================================================



static void Test_BFu9i_D_Sf()
{
  {
    init_simple_test("BFu9i_D_Sf");
    static STRUCT_IF_C BFu9i_D_Sf lv;
    check2(sizeof(lv), 10, "sizeof(BFu9i_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_D_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_D_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_D_Sf");
    check_field_offset(lv, v2, 2, "BFu9i_D_Sf.v2");
    check_field_offset(lv, v3, 10, "BFu9i_D_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_D_Sf, BFu9i_D_Sf)
//============================================================================



static void Test_BFu9i_F_Sf()
{
  {
    init_simple_test("BFu9i_F_Sf");
    static STRUCT_IF_C BFu9i_F_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu9i_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_F_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_F_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_F_Sf");
    check_field_offset(lv, v2, 2, "BFu9i_F_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu9i_F_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_F_Sf, BFu9i_F_Sf)
//============================================================================



static void Test_BFu9i_I_Sf()
{
  {
    init_simple_test("BFu9i_I_Sf");
    static STRUCT_IF_C BFu9i_I_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu9i_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_I_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_I_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_I_Sf");
    check_field_offset(lv, v2, 2, "BFu9i_I_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu9i_I_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_I_Sf, BFu9i_I_Sf)
//============================================================================



static void Test_BFu9i_Ip_Sf()
{
  {
    init_simple_test("BFu9i_Ip_Sf");
    static STRUCT_IF_C BFu9i_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu9i_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Ip_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Ip_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Ip_Sf");
    check_field_offset(lv, v2, 2, "BFu9i_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "BFu9i_Ip_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Ip_Sf, BFu9i_Ip_Sf)
//============================================================================



static void Test_BFu9i_L_Sf()
{
  {
    init_simple_test("BFu9i_L_Sf");
    static STRUCT_IF_C BFu9i_L_Sf lv;
    check2(sizeof(lv), 10, "sizeof(BFu9i_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_L_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_L_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_L_Sf");
    check_field_offset(lv, v2, 2, "BFu9i_L_Sf.v2");
    check_field_offset(lv, v3, 10, "BFu9i_L_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_L_Sf, BFu9i_L_Sf)
//============================================================================



static void Test_BFu9i_S_Sf()
{
  {
    init_simple_test("BFu9i_S_Sf");
    static STRUCT_IF_C BFu9i_S_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu9i_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_S_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_S_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_S_Sf");
    check_field_offset(lv, v2, 2, "BFu9i_S_Sf.v2");
    check_field_offset(lv, v3, 4, "BFu9i_S_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_S_Sf, BFu9i_S_Sf)
//============================================================================



static void Test_BFu9i_Sf()
{
  {
    init_simple_test("BFu9i_Sf");
    static STRUCT_IF_C BFu9i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf");
    check_field_offset(lv, v2, 2, "BFu9i_Sf.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf, BFu9i_Sf)
//============================================================================



static void Test_BFu9i_Sf_BFu15i()
{
  {
    init_simple_test("BFu9i_Sf_BFu15i");
    static STRUCT_IF_C BFu9i_Sf_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(BFu9i_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_BFu15i");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "BFu9i_Sf_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "BFu9i_Sf_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_BFu15i, BFu9i_Sf_BFu15i)
//============================================================================



static void Test_BFu9i_Sf_BFu15ll()
{
  {
    init_simple_test("BFu9i_Sf_BFu15ll");
    static STRUCT_IF_C BFu9i_Sf_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu9i_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_BFu15ll");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "BFu9i_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "BFu9i_Sf_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_BFu15ll, BFu9i_Sf_BFu15ll)
//============================================================================



static void Test_BFu9i_Sf_BFu15s()
{
  {
    init_simple_test("BFu9i_Sf_BFu15s");
    static STRUCT_IF_C BFu9i_Sf_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(BFu9i_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_BFu15s");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "BFu9i_Sf_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "BFu9i_Sf_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_BFu15s, BFu9i_Sf_BFu15s)
//============================================================================



static void Test_BFu9i_Sf_BFu16i()
{
  {
    init_simple_test("BFu9i_Sf_BFu16i");
    static STRUCT_IF_C BFu9i_Sf_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(BFu9i_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_BFu16i");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "BFu9i_Sf_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "BFu9i_Sf_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_BFu16i, BFu9i_Sf_BFu16i)
//============================================================================



static void Test_BFu9i_Sf_BFu16ll()
{
  {
    init_simple_test("BFu9i_Sf_BFu16ll");
    static STRUCT_IF_C BFu9i_Sf_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu9i_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_BFu16ll");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "BFu9i_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "BFu9i_Sf_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_BFu16ll, BFu9i_Sf_BFu16ll)
//============================================================================



static void Test_BFu9i_Sf_BFu16s()
{
  {
    init_simple_test("BFu9i_Sf_BFu16s");
    static STRUCT_IF_C BFu9i_Sf_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(BFu9i_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_BFu16s");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "BFu9i_Sf_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "BFu9i_Sf_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_BFu16s, BFu9i_Sf_BFu16s)
//============================================================================



static void Test_BFu9i_Sf_BFu17i()
{
  {
    init_simple_test("BFu9i_Sf_BFu17i");
    static STRUCT_IF_C BFu9i_Sf_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(BFu9i_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_BFu17i");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "BFu9i_Sf_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "BFu9i_Sf_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_BFu17i, BFu9i_Sf_BFu17i)
//============================================================================



static void Test_BFu9i_Sf_BFu17ll()
{
  {
    init_simple_test("BFu9i_Sf_BFu17ll");
    static STRUCT_IF_C BFu9i_Sf_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu9i_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_BFu17ll");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "BFu9i_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "BFu9i_Sf_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_BFu17ll, BFu9i_Sf_BFu17ll)
//============================================================================



static void Test_BFu9i_Sf_BFu1c()
{
  {
    init_simple_test("BFu9i_Sf_BFu1c");
    static STRUCT_IF_C BFu9i_Sf_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(BFu9i_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_BFu1c");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "BFu9i_Sf_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_BFu1c, BFu9i_Sf_BFu1c)
//============================================================================



static void Test_BFu9i_Sf_BFu1i()
{
  {
    init_simple_test("BFu9i_Sf_BFu1i");
    static STRUCT_IF_C BFu9i_Sf_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(BFu9i_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_BFu1i");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "BFu9i_Sf_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_BFu1i, BFu9i_Sf_BFu1i)
//============================================================================



static void Test_BFu9i_Sf_BFu1ll()
{
  {
    init_simple_test("BFu9i_Sf_BFu1ll");
    static STRUCT_IF_C BFu9i_Sf_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu9i_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_BFu1ll");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "BFu9i_Sf_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_BFu1ll, BFu9i_Sf_BFu1ll)
//============================================================================



static void Test_BFu9i_Sf_BFu1s()
{
  {
    init_simple_test("BFu9i_Sf_BFu1s");
    static STRUCT_IF_C BFu9i_Sf_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(BFu9i_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_BFu1s");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "BFu9i_Sf_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_BFu1s, BFu9i_Sf_BFu1s)
//============================================================================



static void Test_BFu9i_Sf_BFu31i()
{
  {
    init_simple_test("BFu9i_Sf_BFu31i");
    static STRUCT_IF_C BFu9i_Sf_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(BFu9i_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_BFu31i");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "BFu9i_Sf_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "BFu9i_Sf_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_BFu31i, BFu9i_Sf_BFu31i)
//============================================================================



static void Test_BFu9i_Sf_BFu31ll()
{
  {
    init_simple_test("BFu9i_Sf_BFu31ll");
    static STRUCT_IF_C BFu9i_Sf_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu9i_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_BFu31ll");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "BFu9i_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "BFu9i_Sf_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_BFu31ll, BFu9i_Sf_BFu31ll)
//============================================================================



static void Test_BFu9i_Sf_BFu32i()
{
  {
    init_simple_test("BFu9i_Sf_BFu32i");
    static STRUCT_IF_C BFu9i_Sf_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(BFu9i_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_BFu32i");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "BFu9i_Sf_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "BFu9i_Sf_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_BFu32i, BFu9i_Sf_BFu32i)
//============================================================================



static void Test_BFu9i_Sf_BFu32ll()
{
  {
    init_simple_test("BFu9i_Sf_BFu32ll");
    static STRUCT_IF_C BFu9i_Sf_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu9i_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_BFu32ll");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "BFu9i_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "BFu9i_Sf_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_BFu32ll, BFu9i_Sf_BFu32ll)
//============================================================================



static void Test_BFu9i_Sf_BFu33()
{
  {
    init_simple_test("BFu9i_Sf_BFu33");
    static STRUCT_IF_C BFu9i_Sf_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(BFu9i_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_BFu33");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "BFu9i_Sf_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "BFu9i_Sf_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_BFu33, BFu9i_Sf_BFu33)
//============================================================================



static void Test_BFu9i_Sf_BFu7c()
{
  {
    init_simple_test("BFu9i_Sf_BFu7c");
    static STRUCT_IF_C BFu9i_Sf_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(BFu9i_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_BFu7c");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "BFu9i_Sf_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "BFu9i_Sf_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_BFu7c, BFu9i_Sf_BFu7c)
//============================================================================



static void Test_BFu9i_Sf_BFu7i()
{
  {
    init_simple_test("BFu9i_Sf_BFu7i");
    static STRUCT_IF_C BFu9i_Sf_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(BFu9i_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_BFu7i");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "BFu9i_Sf_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "BFu9i_Sf_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_BFu7i, BFu9i_Sf_BFu7i)
//============================================================================



static void Test_BFu9i_Sf_BFu7ll()
{
  {
    init_simple_test("BFu9i_Sf_BFu7ll");
    static STRUCT_IF_C BFu9i_Sf_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu9i_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_BFu7ll");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "BFu9i_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "BFu9i_Sf_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_BFu7ll, BFu9i_Sf_BFu7ll)
//============================================================================



static void Test_BFu9i_Sf_BFu7s()
{
  {
    init_simple_test("BFu9i_Sf_BFu7s");
    static STRUCT_IF_C BFu9i_Sf_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(BFu9i_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_BFu7s");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "BFu9i_Sf_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "BFu9i_Sf_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_BFu7s, BFu9i_Sf_BFu7s)
//============================================================================



static void Test_BFu9i_Sf_BFu8c()
{
  {
    init_simple_test("BFu9i_Sf_BFu8c");
    static STRUCT_IF_C BFu9i_Sf_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(BFu9i_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_BFu8c");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "BFu9i_Sf_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "BFu9i_Sf_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_BFu8c, BFu9i_Sf_BFu8c)
//============================================================================



static void Test_BFu9i_Sf_BFu8i()
{
  {
    init_simple_test("BFu9i_Sf_BFu8i");
    static STRUCT_IF_C BFu9i_Sf_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(BFu9i_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_BFu8i");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "BFu9i_Sf_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "BFu9i_Sf_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_BFu8i, BFu9i_Sf_BFu8i)
//============================================================================



static void Test_BFu9i_Sf_BFu8ll()
{
  {
    init_simple_test("BFu9i_Sf_BFu8ll");
    static STRUCT_IF_C BFu9i_Sf_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu9i_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_BFu8ll");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "BFu9i_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "BFu9i_Sf_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_BFu8ll, BFu9i_Sf_BFu8ll)
//============================================================================



static void Test_BFu9i_Sf_BFu8s()
{
  {
    init_simple_test("BFu9i_Sf_BFu8s");
    static STRUCT_IF_C BFu9i_Sf_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(BFu9i_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_BFu8s");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "BFu9i_Sf_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "BFu9i_Sf_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_BFu8s, BFu9i_Sf_BFu8s)
//============================================================================



static void Test_BFu9i_Sf_BFu9i()
{
  {
    init_simple_test("BFu9i_Sf_BFu9i");
    static STRUCT_IF_C BFu9i_Sf_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(BFu9i_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_BFu9i");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "BFu9i_Sf_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_BFu9i, BFu9i_Sf_BFu9i)
//============================================================================



static void Test_BFu9i_Sf_BFu9ll()
{
  {
    init_simple_test("BFu9i_Sf_BFu9ll");
    static STRUCT_IF_C BFu9i_Sf_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu9i_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_BFu9ll");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "BFu9i_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_BFu9ll, BFu9i_Sf_BFu9ll)
//============================================================================



static void Test_BFu9i_Sf_BFu9s()
{
  {
    init_simple_test("BFu9i_Sf_BFu9s");
    static STRUCT_IF_C BFu9i_Sf_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(BFu9i_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_BFu9s");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "BFu9i_Sf_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_BFu9s, BFu9i_Sf_BFu9s)
//============================================================================



static void Test_BFu9i_Sf_C()
{
  {
    init_simple_test("BFu9i_Sf_C");
    static STRUCT_IF_C BFu9i_Sf_C lv;
    check2(sizeof(lv), 3, "sizeof(BFu9i_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_C)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_C");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_C");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_C.v2");
    check_field_offset(lv, v3, 2, "BFu9i_Sf_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_C, BFu9i_Sf_C)
//============================================================================



static void Test_BFu9i_Sf_D()
{
  {
    init_simple_test("BFu9i_Sf_D");
    static STRUCT_IF_C BFu9i_Sf_D lv;
    check2(sizeof(lv), 10, "sizeof(BFu9i_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_D)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_D");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_D");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_D.v2");
    check_field_offset(lv, v3, 2, "BFu9i_Sf_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_D, BFu9i_Sf_D)
//============================================================================



static void Test_BFu9i_Sf_F()
{
  {
    init_simple_test("BFu9i_Sf_F");
    static STRUCT_IF_C BFu9i_Sf_F lv;
    check2(sizeof(lv), 6, "sizeof(BFu9i_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_F)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_F");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_F");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_F.v2");
    check_field_offset(lv, v3, 2, "BFu9i_Sf_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_F, BFu9i_Sf_F)
//============================================================================



static void Test_BFu9i_Sf_I()
{
  {
    init_simple_test("BFu9i_Sf_I");
    static STRUCT_IF_C BFu9i_Sf_I lv;
    check2(sizeof(lv), 6, "sizeof(BFu9i_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_I)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_I");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_I");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_I.v2");
    check_field_offset(lv, v3, 2, "BFu9i_Sf_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_I, BFu9i_Sf_I)
//============================================================================



static void Test_BFu9i_Sf_Ip()
{
  {
    init_simple_test("BFu9i_Sf_Ip");
    static STRUCT_IF_C BFu9i_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu9i_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_Ip");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_Ip");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_Ip.v2");
    check_field_offset(lv, v3, 2, "BFu9i_Sf_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_Ip, BFu9i_Sf_Ip)
//============================================================================



static void Test_BFu9i_Sf_L()
{
  {
    init_simple_test("BFu9i_Sf_L");
    static STRUCT_IF_C BFu9i_Sf_L lv;
    check2(sizeof(lv), 10, "sizeof(BFu9i_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_L)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_L");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_L");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_L.v2");
    check_field_offset(lv, v3, 2, "BFu9i_Sf_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_L, BFu9i_Sf_L)
//============================================================================



static void Test_BFu9i_Sf_S()
{
  {
    init_simple_test("BFu9i_Sf_S");
    static STRUCT_IF_C BFu9i_Sf_S lv;
    check2(sizeof(lv), 4, "sizeof(BFu9i_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_S)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_S");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_S");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_S.v2");
    check_field_offset(lv, v3, 2, "BFu9i_Sf_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_S, BFu9i_Sf_S)
//============================================================================



static void Test_BFu9i_Sf_Sf()
{
  {
    init_simple_test("BFu9i_Sf_Sf");
    static STRUCT_IF_C BFu9i_Sf_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu9i_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_Sf");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_Sf.v2");
    check_field_offset(lv, v3, 2, "BFu9i_Sf_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_Sf, BFu9i_Sf_Sf)
//============================================================================



static void Test_BFu9i_Sf_Uc()
{
  {
    init_simple_test("BFu9i_Sf_Uc");
    static STRUCT_IF_C BFu9i_Sf_Uc lv;
    check2(sizeof(lv), 3, "sizeof(BFu9i_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_Uc");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_Uc");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_Uc.v2");
    check_field_offset(lv, v3, 2, "BFu9i_Sf_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_Uc, BFu9i_Sf_Uc)
//============================================================================



static void Test_BFu9i_Sf_Ui()
{
  {
    init_simple_test("BFu9i_Sf_Ui");
    static STRUCT_IF_C BFu9i_Sf_Ui lv;
    check2(sizeof(lv), 6, "sizeof(BFu9i_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_Ui");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_Ui");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_Ui.v2");
    check_field_offset(lv, v3, 2, "BFu9i_Sf_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_Ui, BFu9i_Sf_Ui)
//============================================================================



static void Test_BFu9i_Sf_Ul()
{
  {
    init_simple_test("BFu9i_Sf_Ul");
    static STRUCT_IF_C BFu9i_Sf_Ul lv;
    check2(sizeof(lv), 10, "sizeof(BFu9i_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_Ul");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_Ul");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_Ul.v2");
    check_field_offset(lv, v3, 2, "BFu9i_Sf_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_Ul, BFu9i_Sf_Ul)
//============================================================================



static void Test_BFu9i_Sf_Us()
{
  {
    init_simple_test("BFu9i_Sf_Us");
    static STRUCT_IF_C BFu9i_Sf_Us lv;
    check2(sizeof(lv), 4, "sizeof(BFu9i_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_Us)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_Us");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_Us");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_Us.v2");
    check_field_offset(lv, v3, 2, "BFu9i_Sf_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_Us, BFu9i_Sf_Us)
//============================================================================



static void Test_BFu9i_Sf_Vp()
{
  {
    init_simple_test("BFu9i_Sf_Vp");
    static STRUCT_IF_C BFu9i_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu9i_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Sf_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Sf_Vp");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Sf_Vp");
    check_field_offset(lv, v2, 2, "BFu9i_Sf_Vp.v2");
    check_field_offset(lv, v3, 2, "BFu9i_Sf_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Sf_Vp, BFu9i_Sf_Vp)
//============================================================================



static void Test_BFu9i_Uc_Sf()
{
  {
    init_simple_test("BFu9i_Uc_Sf");
    static STRUCT_IF_C BFu9i_Uc_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9i_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Uc_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Uc_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Uc_Sf");
    check_field_offset(lv, v2, 2, "BFu9i_Uc_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu9i_Uc_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Uc_Sf, BFu9i_Uc_Sf)
//============================================================================



static void Test_BFu9i_Ui_Sf()
{
  {
    init_simple_test("BFu9i_Ui_Sf");
    static STRUCT_IF_C BFu9i_Ui_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu9i_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Ui_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Ui_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Ui_Sf");
    check_field_offset(lv, v2, 2, "BFu9i_Ui_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu9i_Ui_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Ui_Sf, BFu9i_Ui_Sf)
//============================================================================



static void Test_BFu9i_Ul_Sf()
{
  {
    init_simple_test("BFu9i_Ul_Sf");
    static STRUCT_IF_C BFu9i_Ul_Sf lv;
    check2(sizeof(lv), 10, "sizeof(BFu9i_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Ul_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Ul_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Ul_Sf");
    check_field_offset(lv, v2, 2, "BFu9i_Ul_Sf.v2");
    check_field_offset(lv, v3, 10, "BFu9i_Ul_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Ul_Sf, BFu9i_Ul_Sf)
//============================================================================



static void Test_BFu9i_Us_Sf()
{
  {
    init_simple_test("BFu9i_Us_Sf");
    static STRUCT_IF_C BFu9i_Us_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu9i_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Us_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Us_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Us_Sf");
    check_field_offset(lv, v2, 2, "BFu9i_Us_Sf.v2");
    check_field_offset(lv, v3, 4, "BFu9i_Us_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Us_Sf, BFu9i_Us_Sf)
//============================================================================



static void Test_BFu9i_Vp_Sf()
{
  {
    init_simple_test("BFu9i_Vp_Sf");
    static STRUCT_IF_C BFu9i_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu9i_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9i_Vp_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9i_Vp_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9i_Vp_Sf");
    check_field_offset(lv, v2, 2, "BFu9i_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "BFu9i_Vp_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9i_Vp_Sf, BFu9i_Vp_Sf)
//============================================================================



static void Test_BFu9ll_BFu15i_Sf()
{
  {
    init_simple_test("BFu9ll_BFu15i_Sf");
    static STRUCT_IF_C BFu9ll_BFu15i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9ll_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_BFu15i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_BFu15i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_BFu15i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 15, 1, "BFu9ll_BFu15i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 15, hide_ull(1LL<<14), "BFu9ll_BFu15i_Sf");
    check_field_offset(lv, v3, 3, "BFu9ll_BFu15i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_BFu15i_Sf, BFu9ll_BFu15i_Sf)
//============================================================================



static void Test_BFu9ll_BFu15ll_Sf()
{
  {
    init_simple_test("BFu9ll_BFu15ll_Sf");
    static STRUCT_IF_C BFu9ll_BFu15ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9ll_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_BFu15ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_BFu15ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 15, 1, "BFu9ll_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 15, hide_ull(1LL<<14), "BFu9ll_BFu15ll_Sf");
    check_field_offset(lv, v3, 3, "BFu9ll_BFu15ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_BFu15ll_Sf, BFu9ll_BFu15ll_Sf)
//============================================================================



static void Test_BFu9ll_BFu15s_Sf()
{
  {
    init_simple_test("BFu9ll_BFu15s_Sf");
    static STRUCT_IF_C BFu9ll_BFu15s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9ll_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_BFu15s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_BFu15s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_BFu15s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 15, 1, "BFu9ll_BFu15s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 15, hide_ull(1LL<<14), "BFu9ll_BFu15s_Sf");
    check_field_offset(lv, v3, 3, "BFu9ll_BFu15s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_BFu15s_Sf, BFu9ll_BFu15s_Sf)
//============================================================================



static void Test_BFu9ll_BFu16i_Sf()
{
  {
    init_simple_test("BFu9ll_BFu16i_Sf");
    static STRUCT_IF_C BFu9ll_BFu16i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu9ll_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_BFu16i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_BFu16i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_BFu16i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 16, 1, "BFu9ll_BFu16i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 16, hide_ull(1LL<<15), "BFu9ll_BFu16i_Sf");
    check_field_offset(lv, v3, 4, "BFu9ll_BFu16i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_BFu16i_Sf, BFu9ll_BFu16i_Sf)
//============================================================================



static void Test_BFu9ll_BFu16ll_Sf()
{
  {
    init_simple_test("BFu9ll_BFu16ll_Sf");
    static STRUCT_IF_C BFu9ll_BFu16ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu9ll_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_BFu16ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_BFu16ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 16, 1, "BFu9ll_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 16, hide_ull(1LL<<15), "BFu9ll_BFu16ll_Sf");
    check_field_offset(lv, v3, 4, "BFu9ll_BFu16ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_BFu16ll_Sf, BFu9ll_BFu16ll_Sf)
//============================================================================



static void Test_BFu9ll_BFu16s_Sf()
{
  {
    init_simple_test("BFu9ll_BFu16s_Sf");
    static STRUCT_IF_C BFu9ll_BFu16s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu9ll_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_BFu16s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_BFu16s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_BFu16s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 16, 1, "BFu9ll_BFu16s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 16, hide_ull(1LL<<15), "BFu9ll_BFu16s_Sf");
    check_field_offset(lv, v3, 4, "BFu9ll_BFu16s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_BFu16s_Sf, BFu9ll_BFu16s_Sf)
//============================================================================



static void Test_BFu9ll_BFu17i_Sf()
{
  {
    init_simple_test("BFu9ll_BFu17i_Sf");
    static STRUCT_IF_C BFu9ll_BFu17i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu9ll_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_BFu17i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_BFu17i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_BFu17i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 17, 1, "BFu9ll_BFu17i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 17, hide_ull(1LL<<16), "BFu9ll_BFu17i_Sf");
    check_field_offset(lv, v3, 4, "BFu9ll_BFu17i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_BFu17i_Sf, BFu9ll_BFu17i_Sf)
//============================================================================



static void Test_BFu9ll_BFu17ll_Sf()
{
  {
    init_simple_test("BFu9ll_BFu17ll_Sf");
    static STRUCT_IF_C BFu9ll_BFu17ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu9ll_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_BFu17ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_BFu17ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 17, 1, "BFu9ll_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 17, hide_ull(1LL<<16), "BFu9ll_BFu17ll_Sf");
    check_field_offset(lv, v3, 4, "BFu9ll_BFu17ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_BFu17ll_Sf, BFu9ll_BFu17ll_Sf)
//============================================================================



static void Test_BFu9ll_BFu1c_Sf()
{
  {
    init_simple_test("BFu9ll_BFu1c_Sf");
    static STRUCT_IF_C BFu9ll_BFu1c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu9ll_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_BFu1c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_BFu1c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_BFu1c_Sf");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "BFu9ll_BFu1c_Sf");
    check_field_offset(lv, v3, 2, "BFu9ll_BFu1c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_BFu1c_Sf, BFu9ll_BFu1c_Sf)
//============================================================================



static void Test_BFu9ll_BFu1i_Sf()
{
  {
    init_simple_test("BFu9ll_BFu1i_Sf");
    static STRUCT_IF_C BFu9ll_BFu1i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu9ll_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_BFu1i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_BFu1i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_BFu1i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "BFu9ll_BFu1i_Sf");
    check_field_offset(lv, v3, 2, "BFu9ll_BFu1i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_BFu1i_Sf, BFu9ll_BFu1i_Sf)
//============================================================================



static void Test_BFu9ll_BFu1ll_Sf()
{
  {
    init_simple_test("BFu9ll_BFu1ll_Sf");
    static STRUCT_IF_C BFu9ll_BFu1ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu9ll_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_BFu1ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_BFu1ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_BFu1ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "BFu9ll_BFu1ll_Sf");
    check_field_offset(lv, v3, 2, "BFu9ll_BFu1ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_BFu1ll_Sf, BFu9ll_BFu1ll_Sf)
//============================================================================



static void Test_BFu9ll_BFu1s_Sf()
{
  {
    init_simple_test("BFu9ll_BFu1s_Sf");
    static STRUCT_IF_C BFu9ll_BFu1s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu9ll_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_BFu1s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_BFu1s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_BFu1s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "BFu9ll_BFu1s_Sf");
    check_field_offset(lv, v3, 2, "BFu9ll_BFu1s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_BFu1s_Sf, BFu9ll_BFu1s_Sf)
//============================================================================



static void Test_BFu9ll_BFu31i_Sf()
{
  {
    init_simple_test("BFu9ll_BFu31i_Sf");
    static STRUCT_IF_C BFu9ll_BFu31i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu9ll_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_BFu31i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_BFu31i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_BFu31i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 31, 1, "BFu9ll_BFu31i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 31, hide_ull(1LL<<30), "BFu9ll_BFu31i_Sf");
    check_field_offset(lv, v3, 5, "BFu9ll_BFu31i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_BFu31i_Sf, BFu9ll_BFu31i_Sf)
//============================================================================



static void Test_BFu9ll_BFu31ll_Sf()
{
  {
    init_simple_test("BFu9ll_BFu31ll_Sf");
    static STRUCT_IF_C BFu9ll_BFu31ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu9ll_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_BFu31ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_BFu31ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 31, 1, "BFu9ll_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 31, hide_ull(1LL<<30), "BFu9ll_BFu31ll_Sf");
    check_field_offset(lv, v3, 5, "BFu9ll_BFu31ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_BFu31ll_Sf, BFu9ll_BFu31ll_Sf)
//============================================================================



static void Test_BFu9ll_BFu32i_Sf()
{
  {
    init_simple_test("BFu9ll_BFu32i_Sf");
    static STRUCT_IF_C BFu9ll_BFu32i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu9ll_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_BFu32i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_BFu32i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_BFu32i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 32, 1, "BFu9ll_BFu32i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 32, hide_ull(1LL<<31), "BFu9ll_BFu32i_Sf");
    check_field_offset(lv, v3, 6, "BFu9ll_BFu32i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_BFu32i_Sf, BFu9ll_BFu32i_Sf)
//============================================================================



static void Test_BFu9ll_BFu32ll_Sf()
{
  {
    init_simple_test("BFu9ll_BFu32ll_Sf");
    static STRUCT_IF_C BFu9ll_BFu32ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu9ll_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_BFu32ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_BFu32ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 32, 1, "BFu9ll_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 32, hide_ull(1LL<<31), "BFu9ll_BFu32ll_Sf");
    check_field_offset(lv, v3, 6, "BFu9ll_BFu32ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_BFu32ll_Sf, BFu9ll_BFu32ll_Sf)
//============================================================================



static void Test_BFu9ll_BFu33_Sf()
{
  {
    init_simple_test("BFu9ll_BFu33_Sf");
    static STRUCT_IF_C BFu9ll_BFu33_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu9ll_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_BFu33_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_BFu33_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_BFu33_Sf");
    set_bf_and_test(lv, v2, 1, 1, 33, 1, "BFu9ll_BFu33_Sf");
    set_bf_and_test(lv, v2, 1, 1, 33, hide_ull(1LL<<32), "BFu9ll_BFu33_Sf");
    check_field_offset(lv, v3, 6, "BFu9ll_BFu33_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_BFu33_Sf, BFu9ll_BFu33_Sf)
//============================================================================



static void Test_BFu9ll_BFu7c_Sf()
{
  {
    init_simple_test("BFu9ll_BFu7c_Sf");
    static STRUCT_IF_C BFu9ll_BFu7c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu9ll_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_BFu7c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_BFu7c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_BFu7c_Sf");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "BFu9ll_BFu7c_Sf");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "BFu9ll_BFu7c_Sf");
    check_field_offset(lv, v3, 2, "BFu9ll_BFu7c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_BFu7c_Sf, BFu9ll_BFu7c_Sf)
//============================================================================



static void Test_BFu9ll_BFu7i_Sf()
{
  {
    init_simple_test("BFu9ll_BFu7i_Sf");
    static STRUCT_IF_C BFu9ll_BFu7i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu9ll_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_BFu7i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_BFu7i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_BFu7i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "BFu9ll_BFu7i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "BFu9ll_BFu7i_Sf");
    check_field_offset(lv, v3, 2, "BFu9ll_BFu7i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_BFu7i_Sf, BFu9ll_BFu7i_Sf)
//============================================================================



static void Test_BFu9ll_BFu7ll_Sf()
{
  {
    init_simple_test("BFu9ll_BFu7ll_Sf");
    static STRUCT_IF_C BFu9ll_BFu7ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu9ll_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_BFu7ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_BFu7ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "BFu9ll_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "BFu9ll_BFu7ll_Sf");
    check_field_offset(lv, v3, 2, "BFu9ll_BFu7ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_BFu7ll_Sf, BFu9ll_BFu7ll_Sf)
//============================================================================



static void Test_BFu9ll_BFu7s_Sf()
{
  {
    init_simple_test("BFu9ll_BFu7s_Sf");
    static STRUCT_IF_C BFu9ll_BFu7s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu9ll_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_BFu7s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_BFu7s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_BFu7s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "BFu9ll_BFu7s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "BFu9ll_BFu7s_Sf");
    check_field_offset(lv, v3, 2, "BFu9ll_BFu7s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_BFu7s_Sf, BFu9ll_BFu7s_Sf)
//============================================================================



static void Test_BFu9ll_BFu8c_Sf()
{
  {
    init_simple_test("BFu9ll_BFu8c_Sf");
    static STRUCT_IF_C BFu9ll_BFu8c_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9ll_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_BFu8c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_BFu8c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_BFu8c_Sf");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "BFu9ll_BFu8c_Sf");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "BFu9ll_BFu8c_Sf");
    check_field_offset(lv, v3, 3, "BFu9ll_BFu8c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_BFu8c_Sf, BFu9ll_BFu8c_Sf)
//============================================================================



static void Test_BFu9ll_BFu8i_Sf()
{
  {
    init_simple_test("BFu9ll_BFu8i_Sf");
    static STRUCT_IF_C BFu9ll_BFu8i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9ll_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_BFu8i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_BFu8i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_BFu8i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "BFu9ll_BFu8i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "BFu9ll_BFu8i_Sf");
    check_field_offset(lv, v3, 3, "BFu9ll_BFu8i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_BFu8i_Sf, BFu9ll_BFu8i_Sf)
//============================================================================



static void Test_BFu9ll_BFu8ll_Sf()
{
  {
    init_simple_test("BFu9ll_BFu8ll_Sf");
    static STRUCT_IF_C BFu9ll_BFu8ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9ll_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_BFu8ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_BFu8ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "BFu9ll_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "BFu9ll_BFu8ll_Sf");
    check_field_offset(lv, v3, 3, "BFu9ll_BFu8ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_BFu8ll_Sf, BFu9ll_BFu8ll_Sf)
//============================================================================



static void Test_BFu9ll_BFu8s_Sf()
{
  {
    init_simple_test("BFu9ll_BFu8s_Sf");
    static STRUCT_IF_C BFu9ll_BFu8s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9ll_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_BFu8s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_BFu8s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_BFu8s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "BFu9ll_BFu8s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "BFu9ll_BFu8s_Sf");
    check_field_offset(lv, v3, 3, "BFu9ll_BFu8s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_BFu8s_Sf, BFu9ll_BFu8s_Sf)
//============================================================================



static void Test_BFu9ll_BFu9i_Sf()
{
  {
    init_simple_test("BFu9ll_BFu9i_Sf");
    static STRUCT_IF_C BFu9ll_BFu9i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9ll_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_BFu9i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_BFu9i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_BFu9i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 9, 1, "BFu9ll_BFu9i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 9, hide_ull(1LL<<8), "BFu9ll_BFu9i_Sf");
    check_field_offset(lv, v3, 3, "BFu9ll_BFu9i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_BFu9i_Sf, BFu9ll_BFu9i_Sf)
//============================================================================



static void Test_BFu9ll_BFu9ll_Sf()
{
  {
    init_simple_test("BFu9ll_BFu9ll_Sf");
    static STRUCT_IF_C BFu9ll_BFu9ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9ll_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_BFu9ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_BFu9ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 9, 1, "BFu9ll_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 9, hide_ull(1LL<<8), "BFu9ll_BFu9ll_Sf");
    check_field_offset(lv, v3, 3, "BFu9ll_BFu9ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_BFu9ll_Sf, BFu9ll_BFu9ll_Sf)
//============================================================================



static void Test_BFu9ll_BFu9s_Sf()
{
  {
    init_simple_test("BFu9ll_BFu9s_Sf");
    static STRUCT_IF_C BFu9ll_BFu9s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9ll_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_BFu9s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_BFu9s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_BFu9s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 9, 1, "BFu9ll_BFu9s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 9, hide_ull(1LL<<8), "BFu9ll_BFu9s_Sf");
    check_field_offset(lv, v3, 3, "BFu9ll_BFu9s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_BFu9s_Sf, BFu9ll_BFu9s_Sf)
//============================================================================



static void Test_BFu9ll_C_Sf()
{
  {
    init_simple_test("BFu9ll_C_Sf");
    static STRUCT_IF_C BFu9ll_C_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9ll_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_C_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_C_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_C_Sf");
    check_field_offset(lv, v2, 2, "BFu9ll_C_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu9ll_C_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_C_Sf, BFu9ll_C_Sf)
//============================================================================



static void Test_BFu9ll_D_Sf()
{
  {
    init_simple_test("BFu9ll_D_Sf");
    static STRUCT_IF_C BFu9ll_D_Sf lv;
    check2(sizeof(lv), 10, "sizeof(BFu9ll_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_D_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_D_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_D_Sf");
    check_field_offset(lv, v2, 2, "BFu9ll_D_Sf.v2");
    check_field_offset(lv, v3, 10, "BFu9ll_D_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_D_Sf, BFu9ll_D_Sf)
//============================================================================



static void Test_BFu9ll_F_Sf()
{
  {
    init_simple_test("BFu9ll_F_Sf");
    static STRUCT_IF_C BFu9ll_F_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu9ll_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_F_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_F_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_F_Sf");
    check_field_offset(lv, v2, 2, "BFu9ll_F_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu9ll_F_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_F_Sf, BFu9ll_F_Sf)
//============================================================================



static void Test_BFu9ll_I_Sf()
{
  {
    init_simple_test("BFu9ll_I_Sf");
    static STRUCT_IF_C BFu9ll_I_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu9ll_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_I_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_I_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_I_Sf");
    check_field_offset(lv, v2, 2, "BFu9ll_I_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu9ll_I_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_I_Sf, BFu9ll_I_Sf)
//============================================================================



static void Test_BFu9ll_Ip_Sf()
{
  {
    init_simple_test("BFu9ll_Ip_Sf");
    static STRUCT_IF_C BFu9ll_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu9ll_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Ip_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Ip_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Ip_Sf");
    check_field_offset(lv, v2, 2, "BFu9ll_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "BFu9ll_Ip_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Ip_Sf, BFu9ll_Ip_Sf)
//============================================================================



static void Test_BFu9ll_L_Sf()
{
  {
    init_simple_test("BFu9ll_L_Sf");
    static STRUCT_IF_C BFu9ll_L_Sf lv;
    check2(sizeof(lv), 10, "sizeof(BFu9ll_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_L_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_L_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_L_Sf");
    check_field_offset(lv, v2, 2, "BFu9ll_L_Sf.v2");
    check_field_offset(lv, v3, 10, "BFu9ll_L_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_L_Sf, BFu9ll_L_Sf)
//============================================================================



static void Test_BFu9ll_S_Sf()
{
  {
    init_simple_test("BFu9ll_S_Sf");
    static STRUCT_IF_C BFu9ll_S_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu9ll_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_S_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_S_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_S_Sf");
    check_field_offset(lv, v2, 2, "BFu9ll_S_Sf.v2");
    check_field_offset(lv, v3, 4, "BFu9ll_S_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_S_Sf, BFu9ll_S_Sf)
//============================================================================



static void Test_BFu9ll_Sf()
{
  {
    init_simple_test("BFu9ll_Sf");
    static STRUCT_IF_C BFu9ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf, BFu9ll_Sf)
//============================================================================



static void Test_BFu9ll_Sf_BFu15i()
{
  {
    init_simple_test("BFu9ll_Sf_BFu15i");
    static STRUCT_IF_C BFu9ll_Sf_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(BFu9ll_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_BFu15i");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "BFu9ll_Sf_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "BFu9ll_Sf_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_BFu15i, BFu9ll_Sf_BFu15i)
//============================================================================



static void Test_BFu9ll_Sf_BFu15ll()
{
  {
    init_simple_test("BFu9ll_Sf_BFu15ll");
    static STRUCT_IF_C BFu9ll_Sf_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu9ll_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_BFu15ll");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "BFu9ll_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "BFu9ll_Sf_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_BFu15ll, BFu9ll_Sf_BFu15ll)
//============================================================================



static void Test_BFu9ll_Sf_BFu15s()
{
  {
    init_simple_test("BFu9ll_Sf_BFu15s");
    static STRUCT_IF_C BFu9ll_Sf_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(BFu9ll_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_BFu15s");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "BFu9ll_Sf_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "BFu9ll_Sf_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_BFu15s, BFu9ll_Sf_BFu15s)
//============================================================================



static void Test_BFu9ll_Sf_BFu16i()
{
  {
    init_simple_test("BFu9ll_Sf_BFu16i");
    static STRUCT_IF_C BFu9ll_Sf_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(BFu9ll_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_BFu16i");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "BFu9ll_Sf_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "BFu9ll_Sf_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_BFu16i, BFu9ll_Sf_BFu16i)
//============================================================================



static void Test_BFu9ll_Sf_BFu16ll()
{
  {
    init_simple_test("BFu9ll_Sf_BFu16ll");
    static STRUCT_IF_C BFu9ll_Sf_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu9ll_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_BFu16ll");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "BFu9ll_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "BFu9ll_Sf_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_BFu16ll, BFu9ll_Sf_BFu16ll)
//============================================================================



static void Test_BFu9ll_Sf_BFu16s()
{
  {
    init_simple_test("BFu9ll_Sf_BFu16s");
    static STRUCT_IF_C BFu9ll_Sf_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(BFu9ll_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_BFu16s");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "BFu9ll_Sf_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "BFu9ll_Sf_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_BFu16s, BFu9ll_Sf_BFu16s)
//============================================================================



static void Test_BFu9ll_Sf_BFu17i()
{
  {
    init_simple_test("BFu9ll_Sf_BFu17i");
    static STRUCT_IF_C BFu9ll_Sf_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(BFu9ll_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_BFu17i");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "BFu9ll_Sf_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "BFu9ll_Sf_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_BFu17i, BFu9ll_Sf_BFu17i)
//============================================================================



static void Test_BFu9ll_Sf_BFu17ll()
{
  {
    init_simple_test("BFu9ll_Sf_BFu17ll");
    static STRUCT_IF_C BFu9ll_Sf_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu9ll_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_BFu17ll");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "BFu9ll_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "BFu9ll_Sf_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_BFu17ll, BFu9ll_Sf_BFu17ll)
//============================================================================



static void Test_BFu9ll_Sf_BFu1c()
{
  {
    init_simple_test("BFu9ll_Sf_BFu1c");
    static STRUCT_IF_C BFu9ll_Sf_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(BFu9ll_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_BFu1c");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "BFu9ll_Sf_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_BFu1c, BFu9ll_Sf_BFu1c)
//============================================================================



static void Test_BFu9ll_Sf_BFu1i()
{
  {
    init_simple_test("BFu9ll_Sf_BFu1i");
    static STRUCT_IF_C BFu9ll_Sf_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(BFu9ll_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_BFu1i");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "BFu9ll_Sf_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_BFu1i, BFu9ll_Sf_BFu1i)
//============================================================================



static void Test_BFu9ll_Sf_BFu1ll()
{
  {
    init_simple_test("BFu9ll_Sf_BFu1ll");
    static STRUCT_IF_C BFu9ll_Sf_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu9ll_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_BFu1ll");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "BFu9ll_Sf_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_BFu1ll, BFu9ll_Sf_BFu1ll)
//============================================================================



static void Test_BFu9ll_Sf_BFu1s()
{
  {
    init_simple_test("BFu9ll_Sf_BFu1s");
    static STRUCT_IF_C BFu9ll_Sf_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(BFu9ll_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_BFu1s");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "BFu9ll_Sf_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_BFu1s, BFu9ll_Sf_BFu1s)
//============================================================================



static void Test_BFu9ll_Sf_BFu31i()
{
  {
    init_simple_test("BFu9ll_Sf_BFu31i");
    static STRUCT_IF_C BFu9ll_Sf_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(BFu9ll_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_BFu31i");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "BFu9ll_Sf_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "BFu9ll_Sf_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_BFu31i, BFu9ll_Sf_BFu31i)
//============================================================================



static void Test_BFu9ll_Sf_BFu31ll()
{
  {
    init_simple_test("BFu9ll_Sf_BFu31ll");
    static STRUCT_IF_C BFu9ll_Sf_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu9ll_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_BFu31ll");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "BFu9ll_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "BFu9ll_Sf_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_BFu31ll, BFu9ll_Sf_BFu31ll)
//============================================================================



static void Test_BFu9ll_Sf_BFu32i()
{
  {
    init_simple_test("BFu9ll_Sf_BFu32i");
    static STRUCT_IF_C BFu9ll_Sf_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(BFu9ll_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_BFu32i");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "BFu9ll_Sf_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "BFu9ll_Sf_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_BFu32i, BFu9ll_Sf_BFu32i)
//============================================================================



static void Test_BFu9ll_Sf_BFu32ll()
{
  {
    init_simple_test("BFu9ll_Sf_BFu32ll");
    static STRUCT_IF_C BFu9ll_Sf_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu9ll_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_BFu32ll");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "BFu9ll_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "BFu9ll_Sf_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_BFu32ll, BFu9ll_Sf_BFu32ll)
//============================================================================



static void Test_BFu9ll_Sf_BFu33()
{
  {
    init_simple_test("BFu9ll_Sf_BFu33");
    static STRUCT_IF_C BFu9ll_Sf_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(BFu9ll_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_BFu33");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "BFu9ll_Sf_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "BFu9ll_Sf_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_BFu33, BFu9ll_Sf_BFu33)
//============================================================================



static void Test_BFu9ll_Sf_BFu7c()
{
  {
    init_simple_test("BFu9ll_Sf_BFu7c");
    static STRUCT_IF_C BFu9ll_Sf_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(BFu9ll_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_BFu7c");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "BFu9ll_Sf_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "BFu9ll_Sf_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_BFu7c, BFu9ll_Sf_BFu7c)
//============================================================================



static void Test_BFu9ll_Sf_BFu7i()
{
  {
    init_simple_test("BFu9ll_Sf_BFu7i");
    static STRUCT_IF_C BFu9ll_Sf_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(BFu9ll_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_BFu7i");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "BFu9ll_Sf_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "BFu9ll_Sf_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_BFu7i, BFu9ll_Sf_BFu7i)
//============================================================================



static void Test_BFu9ll_Sf_BFu7ll()
{
  {
    init_simple_test("BFu9ll_Sf_BFu7ll");
    static STRUCT_IF_C BFu9ll_Sf_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu9ll_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_BFu7ll");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "BFu9ll_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "BFu9ll_Sf_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_BFu7ll, BFu9ll_Sf_BFu7ll)
//============================================================================



static void Test_BFu9ll_Sf_BFu7s()
{
  {
    init_simple_test("BFu9ll_Sf_BFu7s");
    static STRUCT_IF_C BFu9ll_Sf_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(BFu9ll_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_BFu7s");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "BFu9ll_Sf_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "BFu9ll_Sf_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_BFu7s, BFu9ll_Sf_BFu7s)
//============================================================================



static void Test_BFu9ll_Sf_BFu8c()
{
  {
    init_simple_test("BFu9ll_Sf_BFu8c");
    static STRUCT_IF_C BFu9ll_Sf_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(BFu9ll_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_BFu8c");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "BFu9ll_Sf_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "BFu9ll_Sf_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_BFu8c, BFu9ll_Sf_BFu8c)
//============================================================================



static void Test_BFu9ll_Sf_BFu8i()
{
  {
    init_simple_test("BFu9ll_Sf_BFu8i");
    static STRUCT_IF_C BFu9ll_Sf_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(BFu9ll_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_BFu8i");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "BFu9ll_Sf_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "BFu9ll_Sf_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_BFu8i, BFu9ll_Sf_BFu8i)
//============================================================================



static void Test_BFu9ll_Sf_BFu8ll()
{
  {
    init_simple_test("BFu9ll_Sf_BFu8ll");
    static STRUCT_IF_C BFu9ll_Sf_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu9ll_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_BFu8ll");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "BFu9ll_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "BFu9ll_Sf_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_BFu8ll, BFu9ll_Sf_BFu8ll)
//============================================================================



static void Test_BFu9ll_Sf_BFu8s()
{
  {
    init_simple_test("BFu9ll_Sf_BFu8s");
    static STRUCT_IF_C BFu9ll_Sf_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(BFu9ll_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_BFu8s");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "BFu9ll_Sf_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "BFu9ll_Sf_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_BFu8s, BFu9ll_Sf_BFu8s)
//============================================================================



static void Test_BFu9ll_Sf_BFu9i()
{
  {
    init_simple_test("BFu9ll_Sf_BFu9i");
    static STRUCT_IF_C BFu9ll_Sf_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(BFu9ll_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_BFu9i");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "BFu9ll_Sf_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_BFu9i, BFu9ll_Sf_BFu9i)
//============================================================================



static void Test_BFu9ll_Sf_BFu9ll()
{
  {
    init_simple_test("BFu9ll_Sf_BFu9ll");
    static STRUCT_IF_C BFu9ll_Sf_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu9ll_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_BFu9ll");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "BFu9ll_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_BFu9ll, BFu9ll_Sf_BFu9ll)
//============================================================================



static void Test_BFu9ll_Sf_BFu9s()
{
  {
    init_simple_test("BFu9ll_Sf_BFu9s");
    static STRUCT_IF_C BFu9ll_Sf_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(BFu9ll_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_BFu9s");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "BFu9ll_Sf_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_BFu9s, BFu9ll_Sf_BFu9s)
//============================================================================



static void Test_BFu9ll_Sf_C()
{
  {
    init_simple_test("BFu9ll_Sf_C");
    static STRUCT_IF_C BFu9ll_Sf_C lv;
    check2(sizeof(lv), 3, "sizeof(BFu9ll_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_C)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_C");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_C");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_C.v2");
    check_field_offset(lv, v3, 2, "BFu9ll_Sf_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_C, BFu9ll_Sf_C)
//============================================================================



static void Test_BFu9ll_Sf_D()
{
  {
    init_simple_test("BFu9ll_Sf_D");
    static STRUCT_IF_C BFu9ll_Sf_D lv;
    check2(sizeof(lv), 10, "sizeof(BFu9ll_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_D)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_D");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_D");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_D.v2");
    check_field_offset(lv, v3, 2, "BFu9ll_Sf_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_D, BFu9ll_Sf_D)
//============================================================================



static void Test_BFu9ll_Sf_F()
{
  {
    init_simple_test("BFu9ll_Sf_F");
    static STRUCT_IF_C BFu9ll_Sf_F lv;
    check2(sizeof(lv), 6, "sizeof(BFu9ll_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_F)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_F");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_F");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_F.v2");
    check_field_offset(lv, v3, 2, "BFu9ll_Sf_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_F, BFu9ll_Sf_F)
//============================================================================



static void Test_BFu9ll_Sf_I()
{
  {
    init_simple_test("BFu9ll_Sf_I");
    static STRUCT_IF_C BFu9ll_Sf_I lv;
    check2(sizeof(lv), 6, "sizeof(BFu9ll_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_I)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_I");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_I");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_I.v2");
    check_field_offset(lv, v3, 2, "BFu9ll_Sf_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_I, BFu9ll_Sf_I)
//============================================================================



static void Test_BFu9ll_Sf_Ip()
{
  {
    init_simple_test("BFu9ll_Sf_Ip");
    static STRUCT_IF_C BFu9ll_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu9ll_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_Ip");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_Ip");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_Ip.v2");
    check_field_offset(lv, v3, 2, "BFu9ll_Sf_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_Ip, BFu9ll_Sf_Ip)
//============================================================================



static void Test_BFu9ll_Sf_L()
{
  {
    init_simple_test("BFu9ll_Sf_L");
    static STRUCT_IF_C BFu9ll_Sf_L lv;
    check2(sizeof(lv), 10, "sizeof(BFu9ll_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_L)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_L");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_L");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_L.v2");
    check_field_offset(lv, v3, 2, "BFu9ll_Sf_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_L, BFu9ll_Sf_L)
//============================================================================



static void Test_BFu9ll_Sf_S()
{
  {
    init_simple_test("BFu9ll_Sf_S");
    static STRUCT_IF_C BFu9ll_Sf_S lv;
    check2(sizeof(lv), 4, "sizeof(BFu9ll_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_S)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_S");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_S");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_S.v2");
    check_field_offset(lv, v3, 2, "BFu9ll_Sf_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_S, BFu9ll_Sf_S)
//============================================================================



static void Test_BFu9ll_Sf_Sf()
{
  {
    init_simple_test("BFu9ll_Sf_Sf");
    static STRUCT_IF_C BFu9ll_Sf_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu9ll_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_Sf");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_Sf.v2");
    check_field_offset(lv, v3, 2, "BFu9ll_Sf_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_Sf, BFu9ll_Sf_Sf)
//============================================================================



static void Test_BFu9ll_Sf_Uc()
{
  {
    init_simple_test("BFu9ll_Sf_Uc");
    static STRUCT_IF_C BFu9ll_Sf_Uc lv;
    check2(sizeof(lv), 3, "sizeof(BFu9ll_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_Uc");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_Uc");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_Uc.v2");
    check_field_offset(lv, v3, 2, "BFu9ll_Sf_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_Uc, BFu9ll_Sf_Uc)
//============================================================================



static void Test_BFu9ll_Sf_Ui()
{
  {
    init_simple_test("BFu9ll_Sf_Ui");
    static STRUCT_IF_C BFu9ll_Sf_Ui lv;
    check2(sizeof(lv), 6, "sizeof(BFu9ll_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_Ui");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_Ui");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_Ui.v2");
    check_field_offset(lv, v3, 2, "BFu9ll_Sf_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_Ui, BFu9ll_Sf_Ui)
//============================================================================



static void Test_BFu9ll_Sf_Ul()
{
  {
    init_simple_test("BFu9ll_Sf_Ul");
    static STRUCT_IF_C BFu9ll_Sf_Ul lv;
    check2(sizeof(lv), 10, "sizeof(BFu9ll_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_Ul");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_Ul");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_Ul.v2");
    check_field_offset(lv, v3, 2, "BFu9ll_Sf_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_Ul, BFu9ll_Sf_Ul)
//============================================================================



static void Test_BFu9ll_Sf_Us()
{
  {
    init_simple_test("BFu9ll_Sf_Us");
    static STRUCT_IF_C BFu9ll_Sf_Us lv;
    check2(sizeof(lv), 4, "sizeof(BFu9ll_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_Us)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_Us");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_Us");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_Us.v2");
    check_field_offset(lv, v3, 2, "BFu9ll_Sf_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_Us, BFu9ll_Sf_Us)
//============================================================================



static void Test_BFu9ll_Sf_Vp()
{
  {
    init_simple_test("BFu9ll_Sf_Vp");
    static STRUCT_IF_C BFu9ll_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu9ll_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Sf_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Sf_Vp");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Sf_Vp");
    check_field_offset(lv, v2, 2, "BFu9ll_Sf_Vp.v2");
    check_field_offset(lv, v3, 2, "BFu9ll_Sf_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Sf_Vp, BFu9ll_Sf_Vp)
//============================================================================



static void Test_BFu9ll_Uc_Sf()
{
  {
    init_simple_test("BFu9ll_Uc_Sf");
    static STRUCT_IF_C BFu9ll_Uc_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9ll_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Uc_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Uc_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Uc_Sf");
    check_field_offset(lv, v2, 2, "BFu9ll_Uc_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu9ll_Uc_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Uc_Sf, BFu9ll_Uc_Sf)
//============================================================================



static void Test_BFu9ll_Ui_Sf()
{
  {
    init_simple_test("BFu9ll_Ui_Sf");
    static STRUCT_IF_C BFu9ll_Ui_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu9ll_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Ui_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Ui_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Ui_Sf");
    check_field_offset(lv, v2, 2, "BFu9ll_Ui_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu9ll_Ui_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Ui_Sf, BFu9ll_Ui_Sf)
//============================================================================



static void Test_BFu9ll_Ul_Sf()
{
  {
    init_simple_test("BFu9ll_Ul_Sf");
    static STRUCT_IF_C BFu9ll_Ul_Sf lv;
    check2(sizeof(lv), 10, "sizeof(BFu9ll_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Ul_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Ul_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Ul_Sf");
    check_field_offset(lv, v2, 2, "BFu9ll_Ul_Sf.v2");
    check_field_offset(lv, v3, 10, "BFu9ll_Ul_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Ul_Sf, BFu9ll_Ul_Sf)
//============================================================================



static void Test_BFu9ll_Us_Sf()
{
  {
    init_simple_test("BFu9ll_Us_Sf");
    static STRUCT_IF_C BFu9ll_Us_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu9ll_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Us_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Us_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Us_Sf");
    check_field_offset(lv, v2, 2, "BFu9ll_Us_Sf.v2");
    check_field_offset(lv, v3, 4, "BFu9ll_Us_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Us_Sf, BFu9ll_Us_Sf)
//============================================================================



static void Test_BFu9ll_Vp_Sf()
{
  {
    init_simple_test("BFu9ll_Vp_Sf");
    static STRUCT_IF_C BFu9ll_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu9ll_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9ll_Vp_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9ll_Vp_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9ll_Vp_Sf");
    check_field_offset(lv, v2, 2, "BFu9ll_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "BFu9ll_Vp_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9ll_Vp_Sf, BFu9ll_Vp_Sf)
//============================================================================



static void Test_BFu9s_BFu15i_Sf()
{
  {
    init_simple_test("BFu9s_BFu15i_Sf");
    static STRUCT_IF_C BFu9s_BFu15i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu15i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu15i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu15i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 15, 1, "BFu9s_BFu15i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 15, hide_ull(1LL<<14), "BFu9s_BFu15i_Sf");
    check_field_offset(lv, v3, 3, "BFu9s_BFu15i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu15i_Sf, BFu9s_BFu15i_Sf)
//============================================================================



static void Test_BFu9s_BFu15ll_Sf()
{
  {
    init_simple_test("BFu9s_BFu15ll_Sf");
    static STRUCT_IF_C BFu9s_BFu15ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu15ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu15ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 15, 1, "BFu9s_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 15, hide_ull(1LL<<14), "BFu9s_BFu15ll_Sf");
    check_field_offset(lv, v3, 3, "BFu9s_BFu15ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu15ll_Sf, BFu9s_BFu15ll_Sf)
//============================================================================



static void Test_BFu9s_BFu15s_Sf()
{
  {
    init_simple_test("BFu9s_BFu15s_Sf");
    static STRUCT_IF_C BFu9s_BFu15s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu15s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu15s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu15s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 15, 1, "BFu9s_BFu15s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 15, hide_ull(1LL<<14), "BFu9s_BFu15s_Sf");
    check_field_offset(lv, v3, 3, "BFu9s_BFu15s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu15s_Sf, BFu9s_BFu15s_Sf)
//============================================================================



static void Test_BFu9s_BFu16i_Sf()
{
  {
    init_simple_test("BFu9s_BFu16i_Sf");
    static STRUCT_IF_C BFu9s_BFu16i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu16i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu16i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu16i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 16, 1, "BFu9s_BFu16i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 16, hide_ull(1LL<<15), "BFu9s_BFu16i_Sf");
    check_field_offset(lv, v3, 4, "BFu9s_BFu16i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu16i_Sf, BFu9s_BFu16i_Sf)
//============================================================================



static void Test_BFu9s_BFu16ll_Sf()
{
  {
    init_simple_test("BFu9s_BFu16ll_Sf");
    static STRUCT_IF_C BFu9s_BFu16ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu16ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu16ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 16, 1, "BFu9s_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 16, hide_ull(1LL<<15), "BFu9s_BFu16ll_Sf");
    check_field_offset(lv, v3, 4, "BFu9s_BFu16ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu16ll_Sf, BFu9s_BFu16ll_Sf)
//============================================================================



static void Test_BFu9s_BFu16s_Sf()
{
  {
    init_simple_test("BFu9s_BFu16s_Sf");
    static STRUCT_IF_C BFu9s_BFu16s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu16s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu16s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu16s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 16, 1, "BFu9s_BFu16s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 16, hide_ull(1LL<<15), "BFu9s_BFu16s_Sf");
    check_field_offset(lv, v3, 4, "BFu9s_BFu16s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu16s_Sf, BFu9s_BFu16s_Sf)
//============================================================================



static void Test_BFu9s_BFu17i_Sf()
{
  {
    init_simple_test("BFu9s_BFu17i_Sf");
    static STRUCT_IF_C BFu9s_BFu17i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu17i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu17i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu17i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 17, 1, "BFu9s_BFu17i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 17, hide_ull(1LL<<16), "BFu9s_BFu17i_Sf");
    check_field_offset(lv, v3, 4, "BFu9s_BFu17i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu17i_Sf, BFu9s_BFu17i_Sf)
//============================================================================



static void Test_BFu9s_BFu17ll_Sf()
{
  {
    init_simple_test("BFu9s_BFu17ll_Sf");
    static STRUCT_IF_C BFu9s_BFu17ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu17ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu17ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 17, 1, "BFu9s_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 17, hide_ull(1LL<<16), "BFu9s_BFu17ll_Sf");
    check_field_offset(lv, v3, 4, "BFu9s_BFu17ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu17ll_Sf, BFu9s_BFu17ll_Sf)
//============================================================================



static void Test_BFu9s_BFu1c_Sf()
{
  {
    init_simple_test("BFu9s_BFu1c_Sf");
    static STRUCT_IF_C BFu9s_BFu1c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu9s_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu1c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu1c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu1c_Sf");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "BFu9s_BFu1c_Sf");
    check_field_offset(lv, v3, 2, "BFu9s_BFu1c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu1c_Sf, BFu9s_BFu1c_Sf)
//============================================================================



static void Test_BFu9s_BFu1i_Sf()
{
  {
    init_simple_test("BFu9s_BFu1i_Sf");
    static STRUCT_IF_C BFu9s_BFu1i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu9s_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu1i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu1i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu1i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "BFu9s_BFu1i_Sf");
    check_field_offset(lv, v3, 2, "BFu9s_BFu1i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu1i_Sf, BFu9s_BFu1i_Sf)
//============================================================================



static void Test_BFu9s_BFu1ll_Sf()
{
  {
    init_simple_test("BFu9s_BFu1ll_Sf");
    static STRUCT_IF_C BFu9s_BFu1ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu9s_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu1ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu1ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu1ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "BFu9s_BFu1ll_Sf");
    check_field_offset(lv, v3, 2, "BFu9s_BFu1ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu1ll_Sf, BFu9s_BFu1ll_Sf)
//============================================================================



static void Test_BFu9s_BFu1s_Sf()
{
  {
    init_simple_test("BFu9s_BFu1s_Sf");
    static STRUCT_IF_C BFu9s_BFu1s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu9s_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu1s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu1s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu1s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 1, 1, "BFu9s_BFu1s_Sf");
    check_field_offset(lv, v3, 2, "BFu9s_BFu1s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu1s_Sf, BFu9s_BFu1s_Sf)
//============================================================================



static void Test_BFu9s_BFu31i_Sf()
{
  {
    init_simple_test("BFu9s_BFu31i_Sf");
    static STRUCT_IF_C BFu9s_BFu31i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu9s_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu31i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu31i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu31i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 31, 1, "BFu9s_BFu31i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 31, hide_ull(1LL<<30), "BFu9s_BFu31i_Sf");
    check_field_offset(lv, v3, 5, "BFu9s_BFu31i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu31i_Sf, BFu9s_BFu31i_Sf)
//============================================================================



static void Test_BFu9s_BFu31ll_Sf()
{
  {
    init_simple_test("BFu9s_BFu31ll_Sf");
    static STRUCT_IF_C BFu9s_BFu31ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(BFu9s_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu31ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu31ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 31, 1, "BFu9s_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 31, hide_ull(1LL<<30), "BFu9s_BFu31ll_Sf");
    check_field_offset(lv, v3, 5, "BFu9s_BFu31ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu31ll_Sf, BFu9s_BFu31ll_Sf)
//============================================================================



static void Test_BFu9s_BFu32i_Sf()
{
  {
    init_simple_test("BFu9s_BFu32i_Sf");
    static STRUCT_IF_C BFu9s_BFu32i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu9s_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu32i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu32i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu32i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 32, 1, "BFu9s_BFu32i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 32, hide_ull(1LL<<31), "BFu9s_BFu32i_Sf");
    check_field_offset(lv, v3, 6, "BFu9s_BFu32i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu32i_Sf, BFu9s_BFu32i_Sf)
//============================================================================



static void Test_BFu9s_BFu32ll_Sf()
{
  {
    init_simple_test("BFu9s_BFu32ll_Sf");
    static STRUCT_IF_C BFu9s_BFu32ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu9s_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu32ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu32ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 32, 1, "BFu9s_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 32, hide_ull(1LL<<31), "BFu9s_BFu32ll_Sf");
    check_field_offset(lv, v3, 6, "BFu9s_BFu32ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu32ll_Sf, BFu9s_BFu32ll_Sf)
//============================================================================



static void Test_BFu9s_BFu33_Sf()
{
  {
    init_simple_test("BFu9s_BFu33_Sf");
    static STRUCT_IF_C BFu9s_BFu33_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu9s_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu33_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu33_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu33_Sf");
    set_bf_and_test(lv, v2, 1, 1, 33, 1, "BFu9s_BFu33_Sf");
    set_bf_and_test(lv, v2, 1, 1, 33, hide_ull(1LL<<32), "BFu9s_BFu33_Sf");
    check_field_offset(lv, v3, 6, "BFu9s_BFu33_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu33_Sf, BFu9s_BFu33_Sf)
//============================================================================



static void Test_BFu9s_BFu7c_Sf()
{
  {
    init_simple_test("BFu9s_BFu7c_Sf");
    static STRUCT_IF_C BFu9s_BFu7c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu9s_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu7c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu7c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu7c_Sf");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "BFu9s_BFu7c_Sf");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "BFu9s_BFu7c_Sf");
    check_field_offset(lv, v3, 2, "BFu9s_BFu7c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu7c_Sf, BFu9s_BFu7c_Sf)
//============================================================================



static void Test_BFu9s_BFu7i_Sf()
{
  {
    init_simple_test("BFu9s_BFu7i_Sf");
    static STRUCT_IF_C BFu9s_BFu7i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu9s_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu7i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu7i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu7i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "BFu9s_BFu7i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "BFu9s_BFu7i_Sf");
    check_field_offset(lv, v3, 2, "BFu9s_BFu7i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu7i_Sf, BFu9s_BFu7i_Sf)
//============================================================================



static void Test_BFu9s_BFu7ll_Sf()
{
  {
    init_simple_test("BFu9s_BFu7ll_Sf");
    static STRUCT_IF_C BFu9s_BFu7ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu9s_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu7ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu7ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "BFu9s_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "BFu9s_BFu7ll_Sf");
    check_field_offset(lv, v3, 2, "BFu9s_BFu7ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu7ll_Sf, BFu9s_BFu7ll_Sf)
//============================================================================



static void Test_BFu9s_BFu7s_Sf()
{
  {
    init_simple_test("BFu9s_BFu7s_Sf");
    static STRUCT_IF_C BFu9s_BFu7s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu9s_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu7s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu7s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu7s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 7, 1, "BFu9s_BFu7s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 7, hide_ull(1LL<<6), "BFu9s_BFu7s_Sf");
    check_field_offset(lv, v3, 2, "BFu9s_BFu7s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu7s_Sf, BFu9s_BFu7s_Sf)
//============================================================================



static void Test_BFu9s_BFu8c_Sf()
{
  {
    init_simple_test("BFu9s_BFu8c_Sf");
    static STRUCT_IF_C BFu9s_BFu8c_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu8c_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu8c_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu8c_Sf");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "BFu9s_BFu8c_Sf");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "BFu9s_BFu8c_Sf");
    check_field_offset(lv, v3, 3, "BFu9s_BFu8c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu8c_Sf, BFu9s_BFu8c_Sf)
//============================================================================



static void Test_BFu9s_BFu8i_Sf()
{
  {
    init_simple_test("BFu9s_BFu8i_Sf");
    static STRUCT_IF_C BFu9s_BFu8i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu8i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu8i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu8i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "BFu9s_BFu8i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "BFu9s_BFu8i_Sf");
    check_field_offset(lv, v3, 3, "BFu9s_BFu8i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu8i_Sf, BFu9s_BFu8i_Sf)
//============================================================================



static void Test_BFu9s_BFu8ll_Sf()
{
  {
    init_simple_test("BFu9s_BFu8ll_Sf");
    static STRUCT_IF_C BFu9s_BFu8ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu8ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu8ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "BFu9s_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "BFu9s_BFu8ll_Sf");
    check_field_offset(lv, v3, 3, "BFu9s_BFu8ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu8ll_Sf, BFu9s_BFu8ll_Sf)
//============================================================================



static void Test_BFu9s_BFu8s_Sf()
{
  {
    init_simple_test("BFu9s_BFu8s_Sf");
    static STRUCT_IF_C BFu9s_BFu8s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu8s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu8s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu8s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 8, 1, "BFu9s_BFu8s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 8, hide_ull(1LL<<7), "BFu9s_BFu8s_Sf");
    check_field_offset(lv, v3, 3, "BFu9s_BFu8s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu8s_Sf, BFu9s_BFu8s_Sf)
//============================================================================



static void Test_BFu9s_BFu9i_Sf()
{
  {
    init_simple_test("BFu9s_BFu9i_Sf");
    static STRUCT_IF_C BFu9s_BFu9i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu9i_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu9i_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu9i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 9, 1, "BFu9s_BFu9i_Sf");
    set_bf_and_test(lv, v2, 1, 1, 9, hide_ull(1LL<<8), "BFu9s_BFu9i_Sf");
    check_field_offset(lv, v3, 3, "BFu9s_BFu9i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu9i_Sf, BFu9s_BFu9i_Sf)
//============================================================================



static void Test_BFu9s_BFu9ll_Sf()
{
  {
    init_simple_test("BFu9s_BFu9ll_Sf");
    static STRUCT_IF_C BFu9s_BFu9ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu9ll_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu9ll_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 9, 1, "BFu9s_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 1, 1, 9, hide_ull(1LL<<8), "BFu9s_BFu9ll_Sf");
    check_field_offset(lv, v3, 3, "BFu9s_BFu9ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu9ll_Sf, BFu9s_BFu9ll_Sf)
//============================================================================



static void Test_BFu9s_BFu9s_Sf()
{
  {
    init_simple_test("BFu9s_BFu9s_Sf");
    static STRUCT_IF_C BFu9s_BFu9s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_BFu9s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_BFu9s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_BFu9s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 9, 1, "BFu9s_BFu9s_Sf");
    set_bf_and_test(lv, v2, 1, 1, 9, hide_ull(1LL<<8), "BFu9s_BFu9s_Sf");
    check_field_offset(lv, v3, 3, "BFu9s_BFu9s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_BFu9s_Sf, BFu9s_BFu9s_Sf)
//============================================================================



static void Test_BFu9s_C_Sf()
{
  {
    init_simple_test("BFu9s_C_Sf");
    static STRUCT_IF_C BFu9s_C_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_C_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_C_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_C_Sf");
    check_field_offset(lv, v2, 2, "BFu9s_C_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu9s_C_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_C_Sf, BFu9s_C_Sf)
//============================================================================



static void Test_BFu9s_D_Sf()
{
  {
    init_simple_test("BFu9s_D_Sf");
    static STRUCT_IF_C BFu9s_D_Sf lv;
    check2(sizeof(lv), 10, "sizeof(BFu9s_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_D_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_D_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_D_Sf");
    check_field_offset(lv, v2, 2, "BFu9s_D_Sf.v2");
    check_field_offset(lv, v3, 10, "BFu9s_D_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_D_Sf, BFu9s_D_Sf)
//============================================================================



static void Test_BFu9s_F_Sf()
{
  {
    init_simple_test("BFu9s_F_Sf");
    static STRUCT_IF_C BFu9s_F_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu9s_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_F_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_F_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_F_Sf");
    check_field_offset(lv, v2, 2, "BFu9s_F_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu9s_F_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_F_Sf, BFu9s_F_Sf)
//============================================================================



static void Test_BFu9s_I_Sf()
{
  {
    init_simple_test("BFu9s_I_Sf");
    static STRUCT_IF_C BFu9s_I_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu9s_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_I_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_I_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_I_Sf");
    check_field_offset(lv, v2, 2, "BFu9s_I_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu9s_I_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_I_Sf, BFu9s_I_Sf)
//============================================================================



static void Test_BFu9s_Ip_Sf()
{
  {
    init_simple_test("BFu9s_Ip_Sf");
    static STRUCT_IF_C BFu9s_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu9s_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Ip_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Ip_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Ip_Sf");
    check_field_offset(lv, v2, 2, "BFu9s_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "BFu9s_Ip_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Ip_Sf, BFu9s_Ip_Sf)
//============================================================================



static void Test_BFu9s_L_Sf()
{
  {
    init_simple_test("BFu9s_L_Sf");
    static STRUCT_IF_C BFu9s_L_Sf lv;
    check2(sizeof(lv), 10, "sizeof(BFu9s_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_L_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_L_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_L_Sf");
    check_field_offset(lv, v2, 2, "BFu9s_L_Sf.v2");
    check_field_offset(lv, v3, 10, "BFu9s_L_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_L_Sf, BFu9s_L_Sf)
//============================================================================



static void Test_BFu9s_S_Sf()
{
  {
    init_simple_test("BFu9s_S_Sf");
    static STRUCT_IF_C BFu9s_S_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_S_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_S_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_S_Sf");
    check_field_offset(lv, v2, 2, "BFu9s_S_Sf.v2");
    check_field_offset(lv, v3, 4, "BFu9s_S_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_S_Sf, BFu9s_S_Sf)
//============================================================================



static void Test_BFu9s_Sf()
{
  {
    init_simple_test("BFu9s_Sf");
    static STRUCT_IF_C BFu9s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf");
    check_field_offset(lv, v2, 2, "BFu9s_Sf.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf, BFu9s_Sf)
//============================================================================



static void Test_BFu9s_Sf_BFu15i()
{
  {
    init_simple_test("BFu9s_Sf_BFu15i");
    static STRUCT_IF_C BFu9s_Sf_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_BFu15i");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "BFu9s_Sf_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "BFu9s_Sf_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_BFu15i, BFu9s_Sf_BFu15i)
//============================================================================



static void Test_BFu9s_Sf_BFu15ll()
{
  {
    init_simple_test("BFu9s_Sf_BFu15ll");
    static STRUCT_IF_C BFu9s_Sf_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_BFu15ll");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "BFu9s_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "BFu9s_Sf_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_BFu15ll, BFu9s_Sf_BFu15ll)
//============================================================================



static void Test_BFu9s_Sf_BFu15s()
{
  {
    init_simple_test("BFu9s_Sf_BFu15s");
    static STRUCT_IF_C BFu9s_Sf_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_BFu15s");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "BFu9s_Sf_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "BFu9s_Sf_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_BFu15s, BFu9s_Sf_BFu15s)
//============================================================================



static void Test_BFu9s_Sf_BFu16i()
{
  {
    init_simple_test("BFu9s_Sf_BFu16i");
    static STRUCT_IF_C BFu9s_Sf_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_BFu16i");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "BFu9s_Sf_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "BFu9s_Sf_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_BFu16i, BFu9s_Sf_BFu16i)
//============================================================================



static void Test_BFu9s_Sf_BFu16ll()
{
  {
    init_simple_test("BFu9s_Sf_BFu16ll");
    static STRUCT_IF_C BFu9s_Sf_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_BFu16ll");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "BFu9s_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "BFu9s_Sf_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_BFu16ll, BFu9s_Sf_BFu16ll)
//============================================================================



static void Test_BFu9s_Sf_BFu16s()
{
  {
    init_simple_test("BFu9s_Sf_BFu16s");
    static STRUCT_IF_C BFu9s_Sf_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_BFu16s");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "BFu9s_Sf_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "BFu9s_Sf_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_BFu16s, BFu9s_Sf_BFu16s)
//============================================================================



static void Test_BFu9s_Sf_BFu17i()
{
  {
    init_simple_test("BFu9s_Sf_BFu17i");
    static STRUCT_IF_C BFu9s_Sf_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(BFu9s_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_BFu17i");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "BFu9s_Sf_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "BFu9s_Sf_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_BFu17i, BFu9s_Sf_BFu17i)
//============================================================================



static void Test_BFu9s_Sf_BFu17ll()
{
  {
    init_simple_test("BFu9s_Sf_BFu17ll");
    static STRUCT_IF_C BFu9s_Sf_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu9s_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_BFu17ll");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "BFu9s_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "BFu9s_Sf_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_BFu17ll, BFu9s_Sf_BFu17ll)
//============================================================================



static void Test_BFu9s_Sf_BFu1c()
{
  {
    init_simple_test("BFu9s_Sf_BFu1c");
    static STRUCT_IF_C BFu9s_Sf_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_BFu1c");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "BFu9s_Sf_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_BFu1c, BFu9s_Sf_BFu1c)
//============================================================================



static void Test_BFu9s_Sf_BFu1i()
{
  {
    init_simple_test("BFu9s_Sf_BFu1i");
    static STRUCT_IF_C BFu9s_Sf_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_BFu1i");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "BFu9s_Sf_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_BFu1i, BFu9s_Sf_BFu1i)
//============================================================================



static void Test_BFu9s_Sf_BFu1ll()
{
  {
    init_simple_test("BFu9s_Sf_BFu1ll");
    static STRUCT_IF_C BFu9s_Sf_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_BFu1ll");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "BFu9s_Sf_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_BFu1ll, BFu9s_Sf_BFu1ll)
//============================================================================



static void Test_BFu9s_Sf_BFu1s()
{
  {
    init_simple_test("BFu9s_Sf_BFu1s");
    static STRUCT_IF_C BFu9s_Sf_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_BFu1s");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "BFu9s_Sf_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_BFu1s, BFu9s_Sf_BFu1s)
//============================================================================



static void Test_BFu9s_Sf_BFu31i()
{
  {
    init_simple_test("BFu9s_Sf_BFu31i");
    static STRUCT_IF_C BFu9s_Sf_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(BFu9s_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_BFu31i");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "BFu9s_Sf_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "BFu9s_Sf_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_BFu31i, BFu9s_Sf_BFu31i)
//============================================================================



static void Test_BFu9s_Sf_BFu31ll()
{
  {
    init_simple_test("BFu9s_Sf_BFu31ll");
    static STRUCT_IF_C BFu9s_Sf_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu9s_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_BFu31ll");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "BFu9s_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "BFu9s_Sf_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_BFu31ll, BFu9s_Sf_BFu31ll)
//============================================================================



static void Test_BFu9s_Sf_BFu32i()
{
  {
    init_simple_test("BFu9s_Sf_BFu32i");
    static STRUCT_IF_C BFu9s_Sf_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(BFu9s_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_BFu32i");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "BFu9s_Sf_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "BFu9s_Sf_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_BFu32i, BFu9s_Sf_BFu32i)
//============================================================================



static void Test_BFu9s_Sf_BFu32ll()
{
  {
    init_simple_test("BFu9s_Sf_BFu32ll");
    static STRUCT_IF_C BFu9s_Sf_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu9s_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_BFu32ll");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "BFu9s_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "BFu9s_Sf_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_BFu32ll, BFu9s_Sf_BFu32ll)
//============================================================================



static void Test_BFu9s_Sf_BFu33()
{
  {
    init_simple_test("BFu9s_Sf_BFu33");
    static STRUCT_IF_C BFu9s_Sf_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(BFu9s_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_BFu33");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "BFu9s_Sf_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "BFu9s_Sf_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_BFu33, BFu9s_Sf_BFu33)
//============================================================================



static void Test_BFu9s_Sf_BFu7c()
{
  {
    init_simple_test("BFu9s_Sf_BFu7c");
    static STRUCT_IF_C BFu9s_Sf_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_BFu7c");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "BFu9s_Sf_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "BFu9s_Sf_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_BFu7c, BFu9s_Sf_BFu7c)
//============================================================================



static void Test_BFu9s_Sf_BFu7i()
{
  {
    init_simple_test("BFu9s_Sf_BFu7i");
    static STRUCT_IF_C BFu9s_Sf_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_BFu7i");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "BFu9s_Sf_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "BFu9s_Sf_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_BFu7i, BFu9s_Sf_BFu7i)
//============================================================================



static void Test_BFu9s_Sf_BFu7ll()
{
  {
    init_simple_test("BFu9s_Sf_BFu7ll");
    static STRUCT_IF_C BFu9s_Sf_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_BFu7ll");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "BFu9s_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "BFu9s_Sf_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_BFu7ll, BFu9s_Sf_BFu7ll)
//============================================================================



static void Test_BFu9s_Sf_BFu7s()
{
  {
    init_simple_test("BFu9s_Sf_BFu7s");
    static STRUCT_IF_C BFu9s_Sf_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_BFu7s");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "BFu9s_Sf_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "BFu9s_Sf_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_BFu7s, BFu9s_Sf_BFu7s)
//============================================================================



static void Test_BFu9s_Sf_BFu8c()
{
  {
    init_simple_test("BFu9s_Sf_BFu8c");
    static STRUCT_IF_C BFu9s_Sf_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_BFu8c");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "BFu9s_Sf_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "BFu9s_Sf_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_BFu8c, BFu9s_Sf_BFu8c)
//============================================================================



static void Test_BFu9s_Sf_BFu8i()
{
  {
    init_simple_test("BFu9s_Sf_BFu8i");
    static STRUCT_IF_C BFu9s_Sf_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_BFu8i");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "BFu9s_Sf_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "BFu9s_Sf_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_BFu8i, BFu9s_Sf_BFu8i)
//============================================================================



static void Test_BFu9s_Sf_BFu8ll()
{
  {
    init_simple_test("BFu9s_Sf_BFu8ll");
    static STRUCT_IF_C BFu9s_Sf_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_BFu8ll");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "BFu9s_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "BFu9s_Sf_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_BFu8ll, BFu9s_Sf_BFu8ll)
//============================================================================



static void Test_BFu9s_Sf_BFu8s()
{
  {
    init_simple_test("BFu9s_Sf_BFu8s");
    static STRUCT_IF_C BFu9s_Sf_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_BFu8s");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "BFu9s_Sf_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "BFu9s_Sf_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_BFu8s, BFu9s_Sf_BFu8s)
//============================================================================



static void Test_BFu9s_Sf_BFu9i()
{
  {
    init_simple_test("BFu9s_Sf_BFu9i");
    static STRUCT_IF_C BFu9s_Sf_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_BFu9i");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "BFu9s_Sf_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_BFu9i, BFu9s_Sf_BFu9i)
//============================================================================



static void Test_BFu9s_Sf_BFu9ll()
{
  {
    init_simple_test("BFu9s_Sf_BFu9ll");
    static STRUCT_IF_C BFu9s_Sf_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_BFu9ll");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "BFu9s_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_BFu9ll, BFu9s_Sf_BFu9ll)
//============================================================================



static void Test_BFu9s_Sf_BFu9s()
{
  {
    init_simple_test("BFu9s_Sf_BFu9s");
    static STRUCT_IF_C BFu9s_Sf_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_BFu9s");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "BFu9s_Sf_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_BFu9s, BFu9s_Sf_BFu9s)
//============================================================================



static void Test_BFu9s_Sf_C()
{
  {
    init_simple_test("BFu9s_Sf_C");
    static STRUCT_IF_C BFu9s_Sf_C lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_C)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_C");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_C");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_C.v2");
    check_field_offset(lv, v3, 2, "BFu9s_Sf_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_C, BFu9s_Sf_C)
//============================================================================



static void Test_BFu9s_Sf_D()
{
  {
    init_simple_test("BFu9s_Sf_D");
    static STRUCT_IF_C BFu9s_Sf_D lv;
    check2(sizeof(lv), 10, "sizeof(BFu9s_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_D)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_D");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_D");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_D.v2");
    check_field_offset(lv, v3, 2, "BFu9s_Sf_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_D, BFu9s_Sf_D)
//============================================================================



static void Test_BFu9s_Sf_F()
{
  {
    init_simple_test("BFu9s_Sf_F");
    static STRUCT_IF_C BFu9s_Sf_F lv;
    check2(sizeof(lv), 6, "sizeof(BFu9s_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_F)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_F");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_F");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_F.v2");
    check_field_offset(lv, v3, 2, "BFu9s_Sf_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_F, BFu9s_Sf_F)
//============================================================================



static void Test_BFu9s_Sf_I()
{
  {
    init_simple_test("BFu9s_Sf_I");
    static STRUCT_IF_C BFu9s_Sf_I lv;
    check2(sizeof(lv), 6, "sizeof(BFu9s_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_I)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_I");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_I");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_I.v2");
    check_field_offset(lv, v3, 2, "BFu9s_Sf_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_I, BFu9s_Sf_I)
//============================================================================



static void Test_BFu9s_Sf_Ip()
{
  {
    init_simple_test("BFu9s_Sf_Ip");
    static STRUCT_IF_C BFu9s_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu9s_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_Ip");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_Ip");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_Ip.v2");
    check_field_offset(lv, v3, 2, "BFu9s_Sf_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_Ip, BFu9s_Sf_Ip)
//============================================================================



static void Test_BFu9s_Sf_L()
{
  {
    init_simple_test("BFu9s_Sf_L");
    static STRUCT_IF_C BFu9s_Sf_L lv;
    check2(sizeof(lv), 10, "sizeof(BFu9s_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_L)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_L");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_L");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_L.v2");
    check_field_offset(lv, v3, 2, "BFu9s_Sf_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_L, BFu9s_Sf_L)
//============================================================================



static void Test_BFu9s_Sf_S()
{
  {
    init_simple_test("BFu9s_Sf_S");
    static STRUCT_IF_C BFu9s_Sf_S lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_S)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_S");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_S");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_S.v2");
    check_field_offset(lv, v3, 2, "BFu9s_Sf_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_S, BFu9s_Sf_S)
//============================================================================



static void Test_BFu9s_Sf_Sf()
{
  {
    init_simple_test("BFu9s_Sf_Sf");
    static STRUCT_IF_C BFu9s_Sf_Sf lv;
    check2(sizeof(lv), 2, "sizeof(BFu9s_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_Sf");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_Sf.v2");
    check_field_offset(lv, v3, 2, "BFu9s_Sf_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_Sf, BFu9s_Sf_Sf)
//============================================================================



static void Test_BFu9s_Sf_Uc()
{
  {
    init_simple_test("BFu9s_Sf_Uc");
    static STRUCT_IF_C BFu9s_Sf_Uc lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_Uc");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_Uc");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_Uc.v2");
    check_field_offset(lv, v3, 2, "BFu9s_Sf_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_Uc, BFu9s_Sf_Uc)
//============================================================================



static void Test_BFu9s_Sf_Ui()
{
  {
    init_simple_test("BFu9s_Sf_Ui");
    static STRUCT_IF_C BFu9s_Sf_Ui lv;
    check2(sizeof(lv), 6, "sizeof(BFu9s_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_Ui");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_Ui");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_Ui.v2");
    check_field_offset(lv, v3, 2, "BFu9s_Sf_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_Ui, BFu9s_Sf_Ui)
//============================================================================



static void Test_BFu9s_Sf_Ul()
{
  {
    init_simple_test("BFu9s_Sf_Ul");
    static STRUCT_IF_C BFu9s_Sf_Ul lv;
    check2(sizeof(lv), 10, "sizeof(BFu9s_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_Ul");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_Ul");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_Ul.v2");
    check_field_offset(lv, v3, 2, "BFu9s_Sf_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_Ul, BFu9s_Sf_Ul)
//============================================================================



static void Test_BFu9s_Sf_Us()
{
  {
    init_simple_test("BFu9s_Sf_Us");
    static STRUCT_IF_C BFu9s_Sf_Us lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_Us)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_Us");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_Us");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_Us.v2");
    check_field_offset(lv, v3, 2, "BFu9s_Sf_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_Us, BFu9s_Sf_Us)
//============================================================================



static void Test_BFu9s_Sf_Vp()
{
  {
    init_simple_test("BFu9s_Sf_Vp");
    static STRUCT_IF_C BFu9s_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu9s_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Sf_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Sf_Vp");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Sf_Vp");
    check_field_offset(lv, v2, 2, "BFu9s_Sf_Vp.v2");
    check_field_offset(lv, v3, 2, "BFu9s_Sf_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Sf_Vp, BFu9s_Sf_Vp)
//============================================================================



static void Test_BFu9s_Uc_Sf()
{
  {
    init_simple_test("BFu9s_Uc_Sf");
    static STRUCT_IF_C BFu9s_Uc_Sf lv;
    check2(sizeof(lv), 3, "sizeof(BFu9s_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Uc_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Uc_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Uc_Sf");
    check_field_offset(lv, v2, 2, "BFu9s_Uc_Sf.v2");
    check_field_offset(lv, v3, 3, "BFu9s_Uc_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Uc_Sf, BFu9s_Uc_Sf)
//============================================================================



static void Test_BFu9s_Ui_Sf()
{
  {
    init_simple_test("BFu9s_Ui_Sf");
    static STRUCT_IF_C BFu9s_Ui_Sf lv;
    check2(sizeof(lv), 6, "sizeof(BFu9s_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Ui_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Ui_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Ui_Sf");
    check_field_offset(lv, v2, 2, "BFu9s_Ui_Sf.v2");
    check_field_offset(lv, v3, 6, "BFu9s_Ui_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Ui_Sf, BFu9s_Ui_Sf)
//============================================================================



static void Test_BFu9s_Ul_Sf()
{
  {
    init_simple_test("BFu9s_Ul_Sf");
    static STRUCT_IF_C BFu9s_Ul_Sf lv;
    check2(sizeof(lv), 10, "sizeof(BFu9s_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Ul_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Ul_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Ul_Sf");
    check_field_offset(lv, v2, 2, "BFu9s_Ul_Sf.v2");
    check_field_offset(lv, v3, 10, "BFu9s_Ul_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Ul_Sf, BFu9s_Ul_Sf)
//============================================================================



static void Test_BFu9s_Us_Sf()
{
  {
    init_simple_test("BFu9s_Us_Sf");
    static STRUCT_IF_C BFu9s_Us_Sf lv;
    check2(sizeof(lv), 4, "sizeof(BFu9s_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Us_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Us_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Us_Sf");
    check_field_offset(lv, v2, 2, "BFu9s_Us_Sf.v2");
    check_field_offset(lv, v3, 4, "BFu9s_Us_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Us_Sf, BFu9s_Us_Sf)
//============================================================================



static void Test_BFu9s_Vp_Sf()
{
  {
    init_simple_test("BFu9s_Vp_Sf");
    static STRUCT_IF_C BFu9s_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu9s_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(BFu9s_Vp_Sf)");
    set_bf_and_test(lv, v1, 0, 0, 9, 1, "BFu9s_Vp_Sf");
    set_bf_and_test(lv, v1, 0, 0, 9, hide_ull(1LL<<8), "BFu9s_Vp_Sf");
    check_field_offset(lv, v2, 2, "BFu9s_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "BFu9s_Vp_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_BFu9s_Vp_Sf, BFu9s_Vp_Sf)
//============================================================================



static void Test_C_BFu15i_Sf()
{
  {
    init_simple_test("C_BFu15i_Sf");
    static STRUCT_IF_C C_BFu15i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(C_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu15i_Sf)");
    check_field_offset(lv, v1, 0, "C_BFu15i_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "C_BFu15i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "C_BFu15i_Sf");
    check_field_offset(lv, v3, 3, "C_BFu15i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu15i_Sf, C_BFu15i_Sf)
//============================================================================



static void Test_C_BFu15ll_Sf()
{
  {
    init_simple_test("C_BFu15ll_Sf");
    static STRUCT_IF_C C_BFu15ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(C_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu15ll_Sf)");
    check_field_offset(lv, v1, 0, "C_BFu15ll_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "C_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "C_BFu15ll_Sf");
    check_field_offset(lv, v3, 3, "C_BFu15ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu15ll_Sf, C_BFu15ll_Sf)
//============================================================================



static void Test_C_BFu15s_Sf()
{
  {
    init_simple_test("C_BFu15s_Sf");
    static STRUCT_IF_C C_BFu15s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(C_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu15s_Sf)");
    check_field_offset(lv, v1, 0, "C_BFu15s_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "C_BFu15s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "C_BFu15s_Sf");
    check_field_offset(lv, v3, 3, "C_BFu15s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu15s_Sf, C_BFu15s_Sf)
//============================================================================



static void Test_C_BFu16i_Sf()
{
  {
    init_simple_test("C_BFu16i_Sf");
    static STRUCT_IF_C C_BFu16i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(C_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu16i_Sf)");
    check_field_offset(lv, v1, 0, "C_BFu16i_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "C_BFu16i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "C_BFu16i_Sf");
    check_field_offset(lv, v3, 3, "C_BFu16i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu16i_Sf, C_BFu16i_Sf)
//============================================================================



static void Test_C_BFu16ll_Sf()
{
  {
    init_simple_test("C_BFu16ll_Sf");
    static STRUCT_IF_C C_BFu16ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(C_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu16ll_Sf)");
    check_field_offset(lv, v1, 0, "C_BFu16ll_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "C_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "C_BFu16ll_Sf");
    check_field_offset(lv, v3, 3, "C_BFu16ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu16ll_Sf, C_BFu16ll_Sf)
//============================================================================



static void Test_C_BFu16s_Sf()
{
  {
    init_simple_test("C_BFu16s_Sf");
    static STRUCT_IF_C C_BFu16s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(C_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu16s_Sf)");
    check_field_offset(lv, v1, 0, "C_BFu16s_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "C_BFu16s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "C_BFu16s_Sf");
    check_field_offset(lv, v3, 3, "C_BFu16s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu16s_Sf, C_BFu16s_Sf)
//============================================================================



static void Test_C_BFu17i_Sf()
{
  {
    init_simple_test("C_BFu17i_Sf");
    static STRUCT_IF_C C_BFu17i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(C_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu17i_Sf)");
    check_field_offset(lv, v1, 0, "C_BFu17i_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "C_BFu17i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "C_BFu17i_Sf");
    check_field_offset(lv, v3, 4, "C_BFu17i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu17i_Sf, C_BFu17i_Sf)
//============================================================================



static void Test_C_BFu17ll_Sf()
{
  {
    init_simple_test("C_BFu17ll_Sf");
    static STRUCT_IF_C C_BFu17ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(C_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu17ll_Sf)");
    check_field_offset(lv, v1, 0, "C_BFu17ll_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "C_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "C_BFu17ll_Sf");
    check_field_offset(lv, v3, 4, "C_BFu17ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu17ll_Sf, C_BFu17ll_Sf)
//============================================================================



static void Test_C_BFu1c_Sf()
{
  {
    init_simple_test("C_BFu1c_Sf");
    static STRUCT_IF_C C_BFu1c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu1c_Sf)");
    check_field_offset(lv, v1, 0, "C_BFu1c_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "C_BFu1c_Sf");
    check_field_offset(lv, v3, 2, "C_BFu1c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu1c_Sf, C_BFu1c_Sf)
//============================================================================



static void Test_C_BFu1i_Sf()
{
  {
    init_simple_test("C_BFu1i_Sf");
    static STRUCT_IF_C C_BFu1i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu1i_Sf)");
    check_field_offset(lv, v1, 0, "C_BFu1i_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "C_BFu1i_Sf");
    check_field_offset(lv, v3, 2, "C_BFu1i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu1i_Sf, C_BFu1i_Sf)
//============================================================================



static void Test_C_BFu1ll_Sf()
{
  {
    init_simple_test("C_BFu1ll_Sf");
    static STRUCT_IF_C C_BFu1ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu1ll_Sf)");
    check_field_offset(lv, v1, 0, "C_BFu1ll_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "C_BFu1ll_Sf");
    check_field_offset(lv, v3, 2, "C_BFu1ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu1ll_Sf, C_BFu1ll_Sf)
//============================================================================



static void Test_C_BFu1s_Sf()
{
  {
    init_simple_test("C_BFu1s_Sf");
    static STRUCT_IF_C C_BFu1s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu1s_Sf)");
    check_field_offset(lv, v1, 0, "C_BFu1s_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "C_BFu1s_Sf");
    check_field_offset(lv, v3, 2, "C_BFu1s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu1s_Sf, C_BFu1s_Sf)
//============================================================================



static void Test_C_BFu31i_Sf()
{
  {
    init_simple_test("C_BFu31i_Sf");
    static STRUCT_IF_C C_BFu31i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(C_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu31i_Sf)");
    check_field_offset(lv, v1, 0, "C_BFu31i_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "C_BFu31i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "C_BFu31i_Sf");
    check_field_offset(lv, v3, 5, "C_BFu31i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu31i_Sf, C_BFu31i_Sf)
//============================================================================



static void Test_C_BFu31ll_Sf()
{
  {
    init_simple_test("C_BFu31ll_Sf");
    static STRUCT_IF_C C_BFu31ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(C_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu31ll_Sf)");
    check_field_offset(lv, v1, 0, "C_BFu31ll_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "C_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "C_BFu31ll_Sf");
    check_field_offset(lv, v3, 5, "C_BFu31ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu31ll_Sf, C_BFu31ll_Sf)
//============================================================================



static void Test_C_BFu32i_Sf()
{
  {
    init_simple_test("C_BFu32i_Sf");
    static STRUCT_IF_C C_BFu32i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(C_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu32i_Sf)");
    check_field_offset(lv, v1, 0, "C_BFu32i_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "C_BFu32i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "C_BFu32i_Sf");
    check_field_offset(lv, v3, 5, "C_BFu32i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu32i_Sf, C_BFu32i_Sf)
//============================================================================



static void Test_C_BFu32ll_Sf()
{
  {
    init_simple_test("C_BFu32ll_Sf");
    static STRUCT_IF_C C_BFu32ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(C_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu32ll_Sf)");
    check_field_offset(lv, v1, 0, "C_BFu32ll_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "C_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "C_BFu32ll_Sf");
    check_field_offset(lv, v3, 5, "C_BFu32ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu32ll_Sf, C_BFu32ll_Sf)
//============================================================================



static void Test_C_BFu33_Sf()
{
  {
    init_simple_test("C_BFu33_Sf");
    static STRUCT_IF_C C_BFu33_Sf lv;
    check2(sizeof(lv), 6, "sizeof(C_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu33_Sf)");
    check_field_offset(lv, v1, 0, "C_BFu33_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "C_BFu33_Sf");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "C_BFu33_Sf");
    check_field_offset(lv, v3, 6, "C_BFu33_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu33_Sf, C_BFu33_Sf)
//============================================================================



static void Test_C_BFu7c_Sf()
{
  {
    init_simple_test("C_BFu7c_Sf");
    static STRUCT_IF_C C_BFu7c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu7c_Sf)");
    check_field_offset(lv, v1, 0, "C_BFu7c_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "C_BFu7c_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "C_BFu7c_Sf");
    check_field_offset(lv, v3, 2, "C_BFu7c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu7c_Sf, C_BFu7c_Sf)
//============================================================================



static void Test_C_BFu7i_Sf()
{
  {
    init_simple_test("C_BFu7i_Sf");
    static STRUCT_IF_C C_BFu7i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu7i_Sf)");
    check_field_offset(lv, v1, 0, "C_BFu7i_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "C_BFu7i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "C_BFu7i_Sf");
    check_field_offset(lv, v3, 2, "C_BFu7i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu7i_Sf, C_BFu7i_Sf)
//============================================================================



static void Test_C_BFu7ll_Sf()
{
  {
    init_simple_test("C_BFu7ll_Sf");
    static STRUCT_IF_C C_BFu7ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu7ll_Sf)");
    check_field_offset(lv, v1, 0, "C_BFu7ll_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "C_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "C_BFu7ll_Sf");
    check_field_offset(lv, v3, 2, "C_BFu7ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu7ll_Sf, C_BFu7ll_Sf)
//============================================================================



static void Test_C_BFu7s_Sf()
{
  {
    init_simple_test("C_BFu7s_Sf");
    static STRUCT_IF_C C_BFu7s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu7s_Sf)");
    check_field_offset(lv, v1, 0, "C_BFu7s_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "C_BFu7s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "C_BFu7s_Sf");
    check_field_offset(lv, v3, 2, "C_BFu7s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu7s_Sf, C_BFu7s_Sf)
//============================================================================



static void Test_C_BFu8c_Sf()
{
  {
    init_simple_test("C_BFu8c_Sf");
    static STRUCT_IF_C C_BFu8c_Sf lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu8c_Sf)");
    check_field_offset(lv, v1, 0, "C_BFu8c_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "C_BFu8c_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "C_BFu8c_Sf");
    check_field_offset(lv, v3, 2, "C_BFu8c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu8c_Sf, C_BFu8c_Sf)
//============================================================================



static void Test_C_BFu8i_Sf()
{
  {
    init_simple_test("C_BFu8i_Sf");
    static STRUCT_IF_C C_BFu8i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu8i_Sf)");
    check_field_offset(lv, v1, 0, "C_BFu8i_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "C_BFu8i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "C_BFu8i_Sf");
    check_field_offset(lv, v3, 2, "C_BFu8i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu8i_Sf, C_BFu8i_Sf)
//============================================================================



static void Test_C_BFu8ll_Sf()
{
  {
    init_simple_test("C_BFu8ll_Sf");
    static STRUCT_IF_C C_BFu8ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu8ll_Sf)");
    check_field_offset(lv, v1, 0, "C_BFu8ll_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "C_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "C_BFu8ll_Sf");
    check_field_offset(lv, v3, 2, "C_BFu8ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu8ll_Sf, C_BFu8ll_Sf)
//============================================================================



static void Test_C_BFu8s_Sf()
{
  {
    init_simple_test("C_BFu8s_Sf");
    static STRUCT_IF_C C_BFu8s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(C_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu8s_Sf)");
    check_field_offset(lv, v1, 0, "C_BFu8s_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "C_BFu8s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "C_BFu8s_Sf");
    check_field_offset(lv, v3, 2, "C_BFu8s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu8s_Sf, C_BFu8s_Sf)
//============================================================================



static void Test_C_BFu9i_Sf()
{
  {
    init_simple_test("C_BFu9i_Sf");
    static STRUCT_IF_C C_BFu9i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(C_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu9i_Sf)");
    check_field_offset(lv, v1, 0, "C_BFu9i_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "C_BFu9i_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "C_BFu9i_Sf");
    check_field_offset(lv, v3, 3, "C_BFu9i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu9i_Sf, C_BFu9i_Sf)
//============================================================================



static void Test_C_BFu9ll_Sf()
{
  {
    init_simple_test("C_BFu9ll_Sf");
    static STRUCT_IF_C C_BFu9ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(C_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu9ll_Sf)");
    check_field_offset(lv, v1, 0, "C_BFu9ll_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "C_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "C_BFu9ll_Sf");
    check_field_offset(lv, v3, 3, "C_BFu9ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu9ll_Sf, C_BFu9ll_Sf)
//============================================================================



static void Test_C_BFu9s_Sf()
{
  {
    init_simple_test("C_BFu9s_Sf");
    static STRUCT_IF_C C_BFu9s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(C_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_BFu9s_Sf)");
    check_field_offset(lv, v1, 0, "C_BFu9s_Sf.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "C_BFu9s_Sf");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "C_BFu9s_Sf");
    check_field_offset(lv, v3, 3, "C_BFu9s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_BFu9s_Sf, C_BFu9s_Sf)
//============================================================================



static void Test_C_C_Sf()
{
  {
    init_simple_test("C_C_Sf");
    STRUCT_IF_C C_C_Sf lv;
    check2(sizeof(lv), 2, "sizeof(C_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_C_Sf)");
    check_field_offset(lv, v1, 0, "C_C_Sf.v1");
    check_field_offset(lv, v2, 1, "C_C_Sf.v2");
    check_field_offset(lv, v3, 2, "C_C_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_C_Sf, C_C_Sf)
//============================================================================



static void Test_C_D_Sf()
{
  {
    init_simple_test("C_D_Sf");
    STRUCT_IF_C C_D_Sf lv;
    check2(sizeof(lv), 9, "sizeof(C_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_D_Sf)");
    check_field_offset(lv, v1, 0, "C_D_Sf.v1");
    check_field_offset(lv, v2, 1, "C_D_Sf.v2");
    check_field_offset(lv, v3, 9, "C_D_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_D_Sf, C_D_Sf)
//============================================================================



static void Test_C_F_Sf()
{
  {
    init_simple_test("C_F_Sf");
    STRUCT_IF_C C_F_Sf lv;
    check2(sizeof(lv), 5, "sizeof(C_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_F_Sf)");
    check_field_offset(lv, v1, 0, "C_F_Sf.v1");
    check_field_offset(lv, v2, 1, "C_F_Sf.v2");
    check_field_offset(lv, v3, 5, "C_F_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_F_Sf, C_F_Sf)
//============================================================================



static void Test_C_I_Sf()
{
  {
    init_simple_test("C_I_Sf");
    STRUCT_IF_C C_I_Sf lv;
    check2(sizeof(lv), 5, "sizeof(C_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_I_Sf)");
    check_field_offset(lv, v1, 0, "C_I_Sf.v1");
    check_field_offset(lv, v2, 1, "C_I_Sf.v2");
    check_field_offset(lv, v3, 5, "C_I_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_I_Sf, C_I_Sf)
//============================================================================



static void Test_C_Ip_Sf()
{
  {
    init_simple_test("C_Ip_Sf");
    STRUCT_IF_C C_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(C_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_Ip_Sf)");
    check_field_offset(lv, v1, 0, "C_Ip_Sf.v1");
    check_field_offset(lv, v2, 1, "C_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "C_Ip_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Ip_Sf, C_Ip_Sf)
//============================================================================



static void Test_C_L_Sf()
{
  {
    init_simple_test("C_L_Sf");
    STRUCT_IF_C C_L_Sf lv;
    check2(sizeof(lv), 9, "sizeof(C_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_L_Sf)");
    check_field_offset(lv, v1, 0, "C_L_Sf.v1");
    check_field_offset(lv, v2, 1, "C_L_Sf.v2");
    check_field_offset(lv, v3, 9, "C_L_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_L_Sf, C_L_Sf)
//============================================================================



static void Test_C_S_Sf()
{
  {
    init_simple_test("C_S_Sf");
    STRUCT_IF_C C_S_Sf lv;
    check2(sizeof(lv), 3, "sizeof(C_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_S_Sf)");
    check_field_offset(lv, v1, 0, "C_S_Sf.v1");
    check_field_offset(lv, v2, 1, "C_S_Sf.v2");
    check_field_offset(lv, v3, 3, "C_S_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_S_Sf, C_S_Sf)
//============================================================================



static void Test_C_Sf()
{
  {
    init_simple_test("C_Sf");
    STRUCT_IF_C C_Sf lv;
    check2(sizeof(lv), 1, "sizeof(C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf)");
    check_field_offset(lv, v1, 0, "C_Sf.v1");
    check_field_offset(lv, v2, 1, "C_Sf.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf, C_Sf)
//============================================================================



static void Test_C_Sf_BFu15i()
{
  {
    init_simple_test("C_Sf_BFu15i");
    static STRUCT_IF_C C_Sf_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(C_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_BFu15i)");
    check_field_offset(lv, v1, 0, "C_Sf_BFu15i.v1");
    check_field_offset(lv, v2, 1, "C_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "C_Sf_BFu15i");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "C_Sf_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_BFu15i, C_Sf_BFu15i)
//============================================================================



static void Test_C_Sf_BFu15ll()
{
  {
    init_simple_test("C_Sf_BFu15ll");
    static STRUCT_IF_C C_Sf_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(C_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_BFu15ll)");
    check_field_offset(lv, v1, 0, "C_Sf_BFu15ll.v1");
    check_field_offset(lv, v2, 1, "C_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "C_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "C_Sf_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_BFu15ll, C_Sf_BFu15ll)
//============================================================================



static void Test_C_Sf_BFu15s()
{
  {
    init_simple_test("C_Sf_BFu15s");
    static STRUCT_IF_C C_Sf_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(C_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_BFu15s)");
    check_field_offset(lv, v1, 0, "C_Sf_BFu15s.v1");
    check_field_offset(lv, v2, 1, "C_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "C_Sf_BFu15s");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "C_Sf_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_BFu15s, C_Sf_BFu15s)
//============================================================================



static void Test_C_Sf_BFu16i()
{
  {
    init_simple_test("C_Sf_BFu16i");
    static STRUCT_IF_C C_Sf_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(C_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_BFu16i)");
    check_field_offset(lv, v1, 0, "C_Sf_BFu16i.v1");
    check_field_offset(lv, v2, 1, "C_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "C_Sf_BFu16i");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "C_Sf_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_BFu16i, C_Sf_BFu16i)
//============================================================================



static void Test_C_Sf_BFu16ll()
{
  {
    init_simple_test("C_Sf_BFu16ll");
    static STRUCT_IF_C C_Sf_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(C_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_BFu16ll)");
    check_field_offset(lv, v1, 0, "C_Sf_BFu16ll.v1");
    check_field_offset(lv, v2, 1, "C_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "C_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "C_Sf_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_BFu16ll, C_Sf_BFu16ll)
//============================================================================



static void Test_C_Sf_BFu16s()
{
  {
    init_simple_test("C_Sf_BFu16s");
    static STRUCT_IF_C C_Sf_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(C_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_BFu16s)");
    check_field_offset(lv, v1, 0, "C_Sf_BFu16s.v1");
    check_field_offset(lv, v2, 1, "C_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "C_Sf_BFu16s");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "C_Sf_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_BFu16s, C_Sf_BFu16s)
//============================================================================



static void Test_C_Sf_BFu17i()
{
  {
    init_simple_test("C_Sf_BFu17i");
    static STRUCT_IF_C C_Sf_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(C_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_BFu17i)");
    check_field_offset(lv, v1, 0, "C_Sf_BFu17i.v1");
    check_field_offset(lv, v2, 1, "C_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 1, 0, 17, 1, "C_Sf_BFu17i");
    set_bf_and_test(lv, v3, 1, 0, 17, hide_ull(1LL<<16), "C_Sf_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_BFu17i, C_Sf_BFu17i)
//============================================================================



static void Test_C_Sf_BFu17ll()
{
  {
    init_simple_test("C_Sf_BFu17ll");
    static STRUCT_IF_C C_Sf_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(C_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_BFu17ll)");
    check_field_offset(lv, v1, 0, "C_Sf_BFu17ll.v1");
    check_field_offset(lv, v2, 1, "C_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 17, 1, "C_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 1, 0, 17, hide_ull(1LL<<16), "C_Sf_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_BFu17ll, C_Sf_BFu17ll)
//============================================================================



static void Test_C_Sf_BFu1c()
{
  {
    init_simple_test("C_Sf_BFu1c");
    static STRUCT_IF_C C_Sf_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(C_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_BFu1c)");
    check_field_offset(lv, v1, 0, "C_Sf_BFu1c.v1");
    check_field_offset(lv, v2, 1, "C_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "C_Sf_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_BFu1c, C_Sf_BFu1c)
//============================================================================



static void Test_C_Sf_BFu1i()
{
  {
    init_simple_test("C_Sf_BFu1i");
    static STRUCT_IF_C C_Sf_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(C_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_BFu1i)");
    check_field_offset(lv, v1, 0, "C_Sf_BFu1i.v1");
    check_field_offset(lv, v2, 1, "C_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "C_Sf_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_BFu1i, C_Sf_BFu1i)
//============================================================================



static void Test_C_Sf_BFu1ll()
{
  {
    init_simple_test("C_Sf_BFu1ll");
    static STRUCT_IF_C C_Sf_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(C_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_BFu1ll)");
    check_field_offset(lv, v1, 0, "C_Sf_BFu1ll.v1");
    check_field_offset(lv, v2, 1, "C_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "C_Sf_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_BFu1ll, C_Sf_BFu1ll)
//============================================================================



static void Test_C_Sf_BFu1s()
{
  {
    init_simple_test("C_Sf_BFu1s");
    static STRUCT_IF_C C_Sf_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(C_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_BFu1s)");
    check_field_offset(lv, v1, 0, "C_Sf_BFu1s.v1");
    check_field_offset(lv, v2, 1, "C_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "C_Sf_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_BFu1s, C_Sf_BFu1s)
//============================================================================



static void Test_C_Sf_BFu31i()
{
  {
    init_simple_test("C_Sf_BFu31i");
    static STRUCT_IF_C C_Sf_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(C_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_BFu31i)");
    check_field_offset(lv, v1, 0, "C_Sf_BFu31i.v1");
    check_field_offset(lv, v2, 1, "C_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 1, 0, 31, 1, "C_Sf_BFu31i");
    set_bf_and_test(lv, v3, 1, 0, 31, hide_ull(1LL<<30), "C_Sf_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_BFu31i, C_Sf_BFu31i)
//============================================================================



static void Test_C_Sf_BFu31ll()
{
  {
    init_simple_test("C_Sf_BFu31ll");
    static STRUCT_IF_C C_Sf_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(C_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_BFu31ll)");
    check_field_offset(lv, v1, 0, "C_Sf_BFu31ll.v1");
    check_field_offset(lv, v2, 1, "C_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 31, 1, "C_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 1, 0, 31, hide_ull(1LL<<30), "C_Sf_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_BFu31ll, C_Sf_BFu31ll)
//============================================================================



static void Test_C_Sf_BFu32i()
{
  {
    init_simple_test("C_Sf_BFu32i");
    static STRUCT_IF_C C_Sf_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(C_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_BFu32i)");
    check_field_offset(lv, v1, 0, "C_Sf_BFu32i.v1");
    check_field_offset(lv, v2, 1, "C_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 1, 0, 32, 1, "C_Sf_BFu32i");
    set_bf_and_test(lv, v3, 1, 0, 32, hide_ull(1LL<<31), "C_Sf_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_BFu32i, C_Sf_BFu32i)
//============================================================================



static void Test_C_Sf_BFu32ll()
{
  {
    init_simple_test("C_Sf_BFu32ll");
    static STRUCT_IF_C C_Sf_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(C_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_BFu32ll)");
    check_field_offset(lv, v1, 0, "C_Sf_BFu32ll.v1");
    check_field_offset(lv, v2, 1, "C_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 32, 1, "C_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 1, 0, 32, hide_ull(1LL<<31), "C_Sf_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_BFu32ll, C_Sf_BFu32ll)
//============================================================================



static void Test_C_Sf_BFu33()
{
  {
    init_simple_test("C_Sf_BFu33");
    static STRUCT_IF_C C_Sf_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(C_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_BFu33)");
    check_field_offset(lv, v1, 0, "C_Sf_BFu33.v1");
    check_field_offset(lv, v2, 1, "C_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 1, 0, 33, 1, "C_Sf_BFu33");
    set_bf_and_test(lv, v3, 1, 0, 33, hide_ull(1LL<<32), "C_Sf_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_BFu33, C_Sf_BFu33)
//============================================================================



static void Test_C_Sf_BFu7c()
{
  {
    init_simple_test("C_Sf_BFu7c");
    static STRUCT_IF_C C_Sf_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(C_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_BFu7c)");
    check_field_offset(lv, v1, 0, "C_Sf_BFu7c.v1");
    check_field_offset(lv, v2, 1, "C_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "C_Sf_BFu7c");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "C_Sf_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_BFu7c, C_Sf_BFu7c)
//============================================================================



static void Test_C_Sf_BFu7i()
{
  {
    init_simple_test("C_Sf_BFu7i");
    static STRUCT_IF_C C_Sf_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(C_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_BFu7i)");
    check_field_offset(lv, v1, 0, "C_Sf_BFu7i.v1");
    check_field_offset(lv, v2, 1, "C_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "C_Sf_BFu7i");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "C_Sf_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_BFu7i, C_Sf_BFu7i)
//============================================================================



static void Test_C_Sf_BFu7ll()
{
  {
    init_simple_test("C_Sf_BFu7ll");
    static STRUCT_IF_C C_Sf_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(C_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_BFu7ll)");
    check_field_offset(lv, v1, 0, "C_Sf_BFu7ll.v1");
    check_field_offset(lv, v2, 1, "C_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "C_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "C_Sf_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_BFu7ll, C_Sf_BFu7ll)
//============================================================================



static void Test_C_Sf_BFu7s()
{
  {
    init_simple_test("C_Sf_BFu7s");
    static STRUCT_IF_C C_Sf_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(C_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_BFu7s)");
    check_field_offset(lv, v1, 0, "C_Sf_BFu7s.v1");
    check_field_offset(lv, v2, 1, "C_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "C_Sf_BFu7s");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "C_Sf_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_BFu7s, C_Sf_BFu7s)
//============================================================================



static void Test_C_Sf_BFu8c()
{
  {
    init_simple_test("C_Sf_BFu8c");
    static STRUCT_IF_C C_Sf_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(C_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_BFu8c)");
    check_field_offset(lv, v1, 0, "C_Sf_BFu8c.v1");
    check_field_offset(lv, v2, 1, "C_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "C_Sf_BFu8c");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "C_Sf_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_BFu8c, C_Sf_BFu8c)
//============================================================================



static void Test_C_Sf_BFu8i()
{
  {
    init_simple_test("C_Sf_BFu8i");
    static STRUCT_IF_C C_Sf_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(C_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_BFu8i)");
    check_field_offset(lv, v1, 0, "C_Sf_BFu8i.v1");
    check_field_offset(lv, v2, 1, "C_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "C_Sf_BFu8i");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "C_Sf_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_BFu8i, C_Sf_BFu8i)
//============================================================================



static void Test_C_Sf_BFu8ll()
{
  {
    init_simple_test("C_Sf_BFu8ll");
    static STRUCT_IF_C C_Sf_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(C_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_BFu8ll)");
    check_field_offset(lv, v1, 0, "C_Sf_BFu8ll.v1");
    check_field_offset(lv, v2, 1, "C_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "C_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "C_Sf_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_BFu8ll, C_Sf_BFu8ll)
//============================================================================



static void Test_C_Sf_BFu8s()
{
  {
    init_simple_test("C_Sf_BFu8s");
    static STRUCT_IF_C C_Sf_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(C_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_BFu8s)");
    check_field_offset(lv, v1, 0, "C_Sf_BFu8s.v1");
    check_field_offset(lv, v2, 1, "C_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "C_Sf_BFu8s");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "C_Sf_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_BFu8s, C_Sf_BFu8s)
//============================================================================



static void Test_C_Sf_BFu9i()
{
  {
    init_simple_test("C_Sf_BFu9i");
    static STRUCT_IF_C C_Sf_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(C_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_BFu9i)");
    check_field_offset(lv, v1, 0, "C_Sf_BFu9i.v1");
    check_field_offset(lv, v2, 1, "C_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "C_Sf_BFu9i");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "C_Sf_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_BFu9i, C_Sf_BFu9i)
//============================================================================



static void Test_C_Sf_BFu9ll()
{
  {
    init_simple_test("C_Sf_BFu9ll");
    static STRUCT_IF_C C_Sf_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(C_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_BFu9ll)");
    check_field_offset(lv, v1, 0, "C_Sf_BFu9ll.v1");
    check_field_offset(lv, v2, 1, "C_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "C_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "C_Sf_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_BFu9ll, C_Sf_BFu9ll)
//============================================================================



static void Test_C_Sf_BFu9s()
{
  {
    init_simple_test("C_Sf_BFu9s");
    static STRUCT_IF_C C_Sf_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(C_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_BFu9s)");
    check_field_offset(lv, v1, 0, "C_Sf_BFu9s.v1");
    check_field_offset(lv, v2, 1, "C_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "C_Sf_BFu9s");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "C_Sf_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_BFu9s, C_Sf_BFu9s)
//============================================================================



static void Test_C_Sf_C()
{
  {
    init_simple_test("C_Sf_C");
    STRUCT_IF_C C_Sf_C lv;
    check2(sizeof(lv), 2, "sizeof(C_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_C)");
    check_field_offset(lv, v1, 0, "C_Sf_C.v1");
    check_field_offset(lv, v2, 1, "C_Sf_C.v2");
    check_field_offset(lv, v3, 1, "C_Sf_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_C, C_Sf_C)
//============================================================================



static void Test_C_Sf_D()
{
  {
    init_simple_test("C_Sf_D");
    STRUCT_IF_C C_Sf_D lv;
    check2(sizeof(lv), 9, "sizeof(C_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_D)");
    check_field_offset(lv, v1, 0, "C_Sf_D.v1");
    check_field_offset(lv, v2, 1, "C_Sf_D.v2");
    check_field_offset(lv, v3, 1, "C_Sf_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_D, C_Sf_D)
//============================================================================



static void Test_C_Sf_F()
{
  {
    init_simple_test("C_Sf_F");
    STRUCT_IF_C C_Sf_F lv;
    check2(sizeof(lv), 5, "sizeof(C_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_F)");
    check_field_offset(lv, v1, 0, "C_Sf_F.v1");
    check_field_offset(lv, v2, 1, "C_Sf_F.v2");
    check_field_offset(lv, v3, 1, "C_Sf_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_F, C_Sf_F)
//============================================================================



static void Test_C_Sf_I()
{
  {
    init_simple_test("C_Sf_I");
    STRUCT_IF_C C_Sf_I lv;
    check2(sizeof(lv), 5, "sizeof(C_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_I)");
    check_field_offset(lv, v1, 0, "C_Sf_I.v1");
    check_field_offset(lv, v2, 1, "C_Sf_I.v2");
    check_field_offset(lv, v3, 1, "C_Sf_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_I, C_Sf_I)
//============================================================================



static void Test_C_Sf_Ip()
{
  {
    init_simple_test("C_Sf_Ip");
    STRUCT_IF_C C_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(C_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_Ip)");
    check_field_offset(lv, v1, 0, "C_Sf_Ip.v1");
    check_field_offset(lv, v2, 1, "C_Sf_Ip.v2");
    check_field_offset(lv, v3, 1, "C_Sf_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_Ip, C_Sf_Ip)
//============================================================================



static void Test_C_Sf_L()
{
  {
    init_simple_test("C_Sf_L");
    STRUCT_IF_C C_Sf_L lv;
    check2(sizeof(lv), 9, "sizeof(C_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_L)");
    check_field_offset(lv, v1, 0, "C_Sf_L.v1");
    check_field_offset(lv, v2, 1, "C_Sf_L.v2");
    check_field_offset(lv, v3, 1, "C_Sf_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_L, C_Sf_L)
//============================================================================



static void Test_C_Sf_S()
{
  {
    init_simple_test("C_Sf_S");
    STRUCT_IF_C C_Sf_S lv;
    check2(sizeof(lv), 3, "sizeof(C_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_S)");
    check_field_offset(lv, v1, 0, "C_Sf_S.v1");
    check_field_offset(lv, v2, 1, "C_Sf_S.v2");
    check_field_offset(lv, v3, 1, "C_Sf_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_S, C_Sf_S)
//============================================================================



static void Test_C_Sf_Sf()
{
  {
    init_simple_test("C_Sf_Sf");
    STRUCT_IF_C C_Sf_Sf lv;
    check2(sizeof(lv), 1, "sizeof(C_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_Sf)");
    check_field_offset(lv, v1, 0, "C_Sf_Sf.v1");
    check_field_offset(lv, v2, 1, "C_Sf_Sf.v2");
    check_field_offset(lv, v3, 1, "C_Sf_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_Sf, C_Sf_Sf)
//============================================================================



static void Test_C_Sf_Uc()
{
  {
    init_simple_test("C_Sf_Uc");
    STRUCT_IF_C C_Sf_Uc lv;
    check2(sizeof(lv), 2, "sizeof(C_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_Uc)");
    check_field_offset(lv, v1, 0, "C_Sf_Uc.v1");
    check_field_offset(lv, v2, 1, "C_Sf_Uc.v2");
    check_field_offset(lv, v3, 1, "C_Sf_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_Uc, C_Sf_Uc)
//============================================================================



static void Test_C_Sf_Ui()
{
  {
    init_simple_test("C_Sf_Ui");
    STRUCT_IF_C C_Sf_Ui lv;
    check2(sizeof(lv), 5, "sizeof(C_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_Ui)");
    check_field_offset(lv, v1, 0, "C_Sf_Ui.v1");
    check_field_offset(lv, v2, 1, "C_Sf_Ui.v2");
    check_field_offset(lv, v3, 1, "C_Sf_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_Ui, C_Sf_Ui)
//============================================================================



static void Test_C_Sf_Ul()
{
  {
    init_simple_test("C_Sf_Ul");
    STRUCT_IF_C C_Sf_Ul lv;
    check2(sizeof(lv), 9, "sizeof(C_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_Ul)");
    check_field_offset(lv, v1, 0, "C_Sf_Ul.v1");
    check_field_offset(lv, v2, 1, "C_Sf_Ul.v2");
    check_field_offset(lv, v3, 1, "C_Sf_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_Ul, C_Sf_Ul)
//============================================================================



static void Test_C_Sf_Us()
{
  {
    init_simple_test("C_Sf_Us");
    STRUCT_IF_C C_Sf_Us lv;
    check2(sizeof(lv), 3, "sizeof(C_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_Us)");
    check_field_offset(lv, v1, 0, "C_Sf_Us.v1");
    check_field_offset(lv, v2, 1, "C_Sf_Us.v2");
    check_field_offset(lv, v3, 1, "C_Sf_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_Us, C_Sf_Us)
//============================================================================



static void Test_C_Sf_Vp()
{
  {
    init_simple_test("C_Sf_Vp");
    STRUCT_IF_C C_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(C_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(C_Sf_Vp)");
    check_field_offset(lv, v1, 0, "C_Sf_Vp.v1");
    check_field_offset(lv, v2, 1, "C_Sf_Vp.v2");
    check_field_offset(lv, v3, 1, "C_Sf_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Sf_Vp, C_Sf_Vp)
//============================================================================



static void Test_C_Uc_Sf()
{
  {
    init_simple_test("C_Uc_Sf");
    STRUCT_IF_C C_Uc_Sf lv;
    check2(sizeof(lv), 2, "sizeof(C_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_Uc_Sf)");
    check_field_offset(lv, v1, 0, "C_Uc_Sf.v1");
    check_field_offset(lv, v2, 1, "C_Uc_Sf.v2");
    check_field_offset(lv, v3, 2, "C_Uc_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Uc_Sf, C_Uc_Sf)
//============================================================================



static void Test_C_Ui_Sf()
{
  {
    init_simple_test("C_Ui_Sf");
    STRUCT_IF_C C_Ui_Sf lv;
    check2(sizeof(lv), 5, "sizeof(C_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_Ui_Sf)");
    check_field_offset(lv, v1, 0, "C_Ui_Sf.v1");
    check_field_offset(lv, v2, 1, "C_Ui_Sf.v2");
    check_field_offset(lv, v3, 5, "C_Ui_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Ui_Sf, C_Ui_Sf)
//============================================================================



static void Test_C_Ul_Sf()
{
  {
    init_simple_test("C_Ul_Sf");
    STRUCT_IF_C C_Ul_Sf lv;
    check2(sizeof(lv), 9, "sizeof(C_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_Ul_Sf)");
    check_field_offset(lv, v1, 0, "C_Ul_Sf.v1");
    check_field_offset(lv, v2, 1, "C_Ul_Sf.v2");
    check_field_offset(lv, v3, 9, "C_Ul_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Ul_Sf, C_Ul_Sf)
//============================================================================



static void Test_C_Us_Sf()
{
  {
    init_simple_test("C_Us_Sf");
    STRUCT_IF_C C_Us_Sf lv;
    check2(sizeof(lv), 3, "sizeof(C_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_Us_Sf)");
    check_field_offset(lv, v1, 0, "C_Us_Sf.v1");
    check_field_offset(lv, v2, 1, "C_Us_Sf.v2");
    check_field_offset(lv, v3, 3, "C_Us_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Us_Sf, C_Us_Sf)
//============================================================================



static void Test_C_Vp_Sf()
{
  {
    init_simple_test("C_Vp_Sf");
    STRUCT_IF_C C_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(C_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(C_Vp_Sf)");
    check_field_offset(lv, v1, 0, "C_Vp_Sf.v1");
    check_field_offset(lv, v2, 1, "C_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "C_Vp_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_C_Vp_Sf, C_Vp_Sf)
//============================================================================



static void Test_D_BFu15i_Sf()
{
  {
    init_simple_test("D_BFu15i_Sf");
    static STRUCT_IF_C D_BFu15i_Sf lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu15i_Sf)");
    check_field_offset(lv, v1, 0, "D_BFu15i_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "D_BFu15i_Sf");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "D_BFu15i_Sf");
    check_field_offset(lv, v3, 10, "D_BFu15i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu15i_Sf, D_BFu15i_Sf)
//============================================================================



static void Test_D_BFu15ll_Sf()
{
  {
    init_simple_test("D_BFu15ll_Sf");
    static STRUCT_IF_C D_BFu15ll_Sf lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu15ll_Sf)");
    check_field_offset(lv, v1, 0, "D_BFu15ll_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "D_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "D_BFu15ll_Sf");
    check_field_offset(lv, v3, 10, "D_BFu15ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu15ll_Sf, D_BFu15ll_Sf)
//============================================================================



static void Test_D_BFu15s_Sf()
{
  {
    init_simple_test("D_BFu15s_Sf");
    static STRUCT_IF_C D_BFu15s_Sf lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu15s_Sf)");
    check_field_offset(lv, v1, 0, "D_BFu15s_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "D_BFu15s_Sf");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "D_BFu15s_Sf");
    check_field_offset(lv, v3, 10, "D_BFu15s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu15s_Sf, D_BFu15s_Sf)
//============================================================================



static void Test_D_BFu16i_Sf()
{
  {
    init_simple_test("D_BFu16i_Sf");
    static STRUCT_IF_C D_BFu16i_Sf lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu16i_Sf)");
    check_field_offset(lv, v1, 0, "D_BFu16i_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "D_BFu16i_Sf");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "D_BFu16i_Sf");
    check_field_offset(lv, v3, 10, "D_BFu16i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu16i_Sf, D_BFu16i_Sf)
//============================================================================



static void Test_D_BFu16ll_Sf()
{
  {
    init_simple_test("D_BFu16ll_Sf");
    static STRUCT_IF_C D_BFu16ll_Sf lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu16ll_Sf)");
    check_field_offset(lv, v1, 0, "D_BFu16ll_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "D_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "D_BFu16ll_Sf");
    check_field_offset(lv, v3, 10, "D_BFu16ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu16ll_Sf, D_BFu16ll_Sf)
//============================================================================



static void Test_D_BFu16s_Sf()
{
  {
    init_simple_test("D_BFu16s_Sf");
    static STRUCT_IF_C D_BFu16s_Sf lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu16s_Sf)");
    check_field_offset(lv, v1, 0, "D_BFu16s_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "D_BFu16s_Sf");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "D_BFu16s_Sf");
    check_field_offset(lv, v3, 10, "D_BFu16s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu16s_Sf, D_BFu16s_Sf)
//============================================================================



static void Test_D_BFu17i_Sf()
{
  {
    init_simple_test("D_BFu17i_Sf");
    static STRUCT_IF_C D_BFu17i_Sf lv;
    check2(sizeof(lv), 11, "sizeof(D_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu17i_Sf)");
    check_field_offset(lv, v1, 0, "D_BFu17i_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "D_BFu17i_Sf");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "D_BFu17i_Sf");
    check_field_offset(lv, v3, 11, "D_BFu17i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu17i_Sf, D_BFu17i_Sf)
//============================================================================



static void Test_D_BFu17ll_Sf()
{
  {
    init_simple_test("D_BFu17ll_Sf");
    static STRUCT_IF_C D_BFu17ll_Sf lv;
    check2(sizeof(lv), 11, "sizeof(D_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu17ll_Sf)");
    check_field_offset(lv, v1, 0, "D_BFu17ll_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "D_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "D_BFu17ll_Sf");
    check_field_offset(lv, v3, 11, "D_BFu17ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu17ll_Sf, D_BFu17ll_Sf)
//============================================================================



static void Test_D_BFu1c_Sf()
{
  {
    init_simple_test("D_BFu1c_Sf");
    static STRUCT_IF_C D_BFu1c_Sf lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu1c_Sf)");
    check_field_offset(lv, v1, 0, "D_BFu1c_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu1c_Sf");
    check_field_offset(lv, v3, 9, "D_BFu1c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu1c_Sf, D_BFu1c_Sf)
//============================================================================



static void Test_D_BFu1i_Sf()
{
  {
    init_simple_test("D_BFu1i_Sf");
    static STRUCT_IF_C D_BFu1i_Sf lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu1i_Sf)");
    check_field_offset(lv, v1, 0, "D_BFu1i_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu1i_Sf");
    check_field_offset(lv, v3, 9, "D_BFu1i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu1i_Sf, D_BFu1i_Sf)
//============================================================================



static void Test_D_BFu1ll_Sf()
{
  {
    init_simple_test("D_BFu1ll_Sf");
    static STRUCT_IF_C D_BFu1ll_Sf lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu1ll_Sf)");
    check_field_offset(lv, v1, 0, "D_BFu1ll_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu1ll_Sf");
    check_field_offset(lv, v3, 9, "D_BFu1ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu1ll_Sf, D_BFu1ll_Sf)
//============================================================================



static void Test_D_BFu1s_Sf()
{
  {
    init_simple_test("D_BFu1s_Sf");
    static STRUCT_IF_C D_BFu1s_Sf lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu1s_Sf)");
    check_field_offset(lv, v1, 0, "D_BFu1s_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "D_BFu1s_Sf");
    check_field_offset(lv, v3, 9, "D_BFu1s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu1s_Sf, D_BFu1s_Sf)
//============================================================================



static void Test_D_BFu31i_Sf()
{
  {
    init_simple_test("D_BFu31i_Sf");
    static STRUCT_IF_C D_BFu31i_Sf lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu31i_Sf)");
    check_field_offset(lv, v1, 0, "D_BFu31i_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "D_BFu31i_Sf");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "D_BFu31i_Sf");
    check_field_offset(lv, v3, 12, "D_BFu31i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu31i_Sf, D_BFu31i_Sf)
//============================================================================



static void Test_D_BFu31ll_Sf()
{
  {
    init_simple_test("D_BFu31ll_Sf");
    static STRUCT_IF_C D_BFu31ll_Sf lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu31ll_Sf)");
    check_field_offset(lv, v1, 0, "D_BFu31ll_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "D_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "D_BFu31ll_Sf");
    check_field_offset(lv, v3, 12, "D_BFu31ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu31ll_Sf, D_BFu31ll_Sf)
//============================================================================



static void Test_D_BFu32i_Sf()
{
  {
    init_simple_test("D_BFu32i_Sf");
    static STRUCT_IF_C D_BFu32i_Sf lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu32i_Sf)");
    check_field_offset(lv, v1, 0, "D_BFu32i_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "D_BFu32i_Sf");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "D_BFu32i_Sf");
    check_field_offset(lv, v3, 12, "D_BFu32i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu32i_Sf, D_BFu32i_Sf)
//============================================================================



static void Test_D_BFu32ll_Sf()
{
  {
    init_simple_test("D_BFu32ll_Sf");
    static STRUCT_IF_C D_BFu32ll_Sf lv;
    check2(sizeof(lv), 12, "sizeof(D_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu32ll_Sf)");
    check_field_offset(lv, v1, 0, "D_BFu32ll_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "D_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "D_BFu32ll_Sf");
    check_field_offset(lv, v3, 12, "D_BFu32ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu32ll_Sf, D_BFu32ll_Sf)
//============================================================================



static void Test_D_BFu33_Sf()
{
  {
    init_simple_test("D_BFu33_Sf");
    static STRUCT_IF_C D_BFu33_Sf lv;
    check2(sizeof(lv), 13, "sizeof(D_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu33_Sf)");
    check_field_offset(lv, v1, 0, "D_BFu33_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 33, 1, "D_BFu33_Sf");
    set_bf_and_test(lv, v2, 8, 0, 33, hide_ull(1LL<<32), "D_BFu33_Sf");
    check_field_offset(lv, v3, 13, "D_BFu33_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu33_Sf, D_BFu33_Sf)
//============================================================================



static void Test_D_BFu7c_Sf()
{
  {
    init_simple_test("D_BFu7c_Sf");
    static STRUCT_IF_C D_BFu7c_Sf lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu7c_Sf)");
    check_field_offset(lv, v1, 0, "D_BFu7c_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu7c_Sf");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu7c_Sf");
    check_field_offset(lv, v3, 9, "D_BFu7c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu7c_Sf, D_BFu7c_Sf)
//============================================================================



static void Test_D_BFu7i_Sf()
{
  {
    init_simple_test("D_BFu7i_Sf");
    static STRUCT_IF_C D_BFu7i_Sf lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu7i_Sf)");
    check_field_offset(lv, v1, 0, "D_BFu7i_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu7i_Sf");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu7i_Sf");
    check_field_offset(lv, v3, 9, "D_BFu7i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu7i_Sf, D_BFu7i_Sf)
//============================================================================



static void Test_D_BFu7ll_Sf()
{
  {
    init_simple_test("D_BFu7ll_Sf");
    static STRUCT_IF_C D_BFu7ll_Sf lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu7ll_Sf)");
    check_field_offset(lv, v1, 0, "D_BFu7ll_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu7ll_Sf");
    check_field_offset(lv, v3, 9, "D_BFu7ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu7ll_Sf, D_BFu7ll_Sf)
//============================================================================



static void Test_D_BFu7s_Sf()
{
  {
    init_simple_test("D_BFu7s_Sf");
    static STRUCT_IF_C D_BFu7s_Sf lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu7s_Sf)");
    check_field_offset(lv, v1, 0, "D_BFu7s_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "D_BFu7s_Sf");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "D_BFu7s_Sf");
    check_field_offset(lv, v3, 9, "D_BFu7s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu7s_Sf, D_BFu7s_Sf)
//============================================================================



static void Test_D_BFu8c_Sf()
{
  {
    init_simple_test("D_BFu8c_Sf");
    static STRUCT_IF_C D_BFu8c_Sf lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu8c_Sf)");
    check_field_offset(lv, v1, 0, "D_BFu8c_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu8c_Sf");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu8c_Sf");
    check_field_offset(lv, v3, 9, "D_BFu8c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu8c_Sf, D_BFu8c_Sf)
//============================================================================



static void Test_D_BFu8i_Sf()
{
  {
    init_simple_test("D_BFu8i_Sf");
    static STRUCT_IF_C D_BFu8i_Sf lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu8i_Sf)");
    check_field_offset(lv, v1, 0, "D_BFu8i_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu8i_Sf");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu8i_Sf");
    check_field_offset(lv, v3, 9, "D_BFu8i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu8i_Sf, D_BFu8i_Sf)
//============================================================================



static void Test_D_BFu8ll_Sf()
{
  {
    init_simple_test("D_BFu8ll_Sf");
    static STRUCT_IF_C D_BFu8ll_Sf lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu8ll_Sf)");
    check_field_offset(lv, v1, 0, "D_BFu8ll_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu8ll_Sf");
    check_field_offset(lv, v3, 9, "D_BFu8ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu8ll_Sf, D_BFu8ll_Sf)
//============================================================================



static void Test_D_BFu8s_Sf()
{
  {
    init_simple_test("D_BFu8s_Sf");
    static STRUCT_IF_C D_BFu8s_Sf lv;
    check2(sizeof(lv), 9, "sizeof(D_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu8s_Sf)");
    check_field_offset(lv, v1, 0, "D_BFu8s_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "D_BFu8s_Sf");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "D_BFu8s_Sf");
    check_field_offset(lv, v3, 9, "D_BFu8s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu8s_Sf, D_BFu8s_Sf)
//============================================================================



static void Test_D_BFu9i_Sf()
{
  {
    init_simple_test("D_BFu9i_Sf");
    static STRUCT_IF_C D_BFu9i_Sf lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu9i_Sf)");
    check_field_offset(lv, v1, 0, "D_BFu9i_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "D_BFu9i_Sf");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "D_BFu9i_Sf");
    check_field_offset(lv, v3, 10, "D_BFu9i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu9i_Sf, D_BFu9i_Sf)
//============================================================================



static void Test_D_BFu9ll_Sf()
{
  {
    init_simple_test("D_BFu9ll_Sf");
    static STRUCT_IF_C D_BFu9ll_Sf lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu9ll_Sf)");
    check_field_offset(lv, v1, 0, "D_BFu9ll_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "D_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "D_BFu9ll_Sf");
    check_field_offset(lv, v3, 10, "D_BFu9ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu9ll_Sf, D_BFu9ll_Sf)
//============================================================================



static void Test_D_BFu9s_Sf()
{
  {
    init_simple_test("D_BFu9s_Sf");
    static STRUCT_IF_C D_BFu9s_Sf lv;
    check2(sizeof(lv), 10, "sizeof(D_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_BFu9s_Sf)");
    check_field_offset(lv, v1, 0, "D_BFu9s_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "D_BFu9s_Sf");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "D_BFu9s_Sf");
    check_field_offset(lv, v3, 10, "D_BFu9s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_BFu9s_Sf, D_BFu9s_Sf)
//============================================================================



static void Test_D_C_Sf()
{
  {
    init_simple_test("D_C_Sf");
    STRUCT_IF_C D_C_Sf lv;
    check2(sizeof(lv), 9, "sizeof(D_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_C_Sf)");
    check_field_offset(lv, v1, 0, "D_C_Sf.v1");
    check_field_offset(lv, v2, 8, "D_C_Sf.v2");
    check_field_offset(lv, v3, 9, "D_C_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_C_Sf, D_C_Sf)
//============================================================================



static void Test_D_D_Sf()
{
  {
    init_simple_test("D_D_Sf");
    STRUCT_IF_C D_D_Sf lv;
    check2(sizeof(lv), 16, "sizeof(D_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_D_Sf)");
    check_field_offset(lv, v1, 0, "D_D_Sf.v1");
    check_field_offset(lv, v2, 8, "D_D_Sf.v2");
    check_field_offset(lv, v3, 16, "D_D_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_D_Sf, D_D_Sf)
//============================================================================



static void Test_D_F_Sf()
{
  {
    init_simple_test("D_F_Sf");
    STRUCT_IF_C D_F_Sf lv;
    check2(sizeof(lv), 12, "sizeof(D_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_F_Sf)");
    check_field_offset(lv, v1, 0, "D_F_Sf.v1");
    check_field_offset(lv, v2, 8, "D_F_Sf.v2");
    check_field_offset(lv, v3, 12, "D_F_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_F_Sf, D_F_Sf)
//============================================================================



static void Test_D_I_Sf()
{
  {
    init_simple_test("D_I_Sf");
    STRUCT_IF_C D_I_Sf lv;
    check2(sizeof(lv), 12, "sizeof(D_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_I_Sf)");
    check_field_offset(lv, v1, 0, "D_I_Sf.v1");
    check_field_offset(lv, v2, 8, "D_I_Sf.v2");
    check_field_offset(lv, v3, 12, "D_I_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_I_Sf, D_I_Sf)
//============================================================================



static void Test_D_Ip_Sf()
{
  {
    init_simple_test("D_Ip_Sf");
    STRUCT_IF_C D_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_Ip_Sf)");
    check_field_offset(lv, v1, 0, "D_Ip_Sf.v1");
    check_field_offset(lv, v2, 8, "D_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "D_Ip_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Ip_Sf, D_Ip_Sf)
//============================================================================



static void Test_D_L_Sf()
{
  {
    init_simple_test("D_L_Sf");
    STRUCT_IF_C D_L_Sf lv;
    check2(sizeof(lv), 16, "sizeof(D_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_L_Sf)");
    check_field_offset(lv, v1, 0, "D_L_Sf.v1");
    check_field_offset(lv, v2, 8, "D_L_Sf.v2");
    check_field_offset(lv, v3, 16, "D_L_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_L_Sf, D_L_Sf)
//============================================================================



static void Test_D_S_Sf()
{
  {
    init_simple_test("D_S_Sf");
    STRUCT_IF_C D_S_Sf lv;
    check2(sizeof(lv), 10, "sizeof(D_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_S_Sf)");
    check_field_offset(lv, v1, 0, "D_S_Sf.v1");
    check_field_offset(lv, v2, 8, "D_S_Sf.v2");
    check_field_offset(lv, v3, 10, "D_S_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_S_Sf, D_S_Sf)
//============================================================================



static void Test_D_Sf()
{
  {
    init_simple_test("D_Sf");
    STRUCT_IF_C D_Sf lv;
    check2(sizeof(lv), 8, "sizeof(D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf)");
    check_field_offset(lv, v1, 0, "D_Sf.v1");
    check_field_offset(lv, v2, 8, "D_Sf.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf, D_Sf)
//============================================================================



static void Test_D_Sf_BFu15i()
{
  {
    init_simple_test("D_Sf_BFu15i");
    static STRUCT_IF_C D_Sf_BFu15i lv;
    check2(sizeof(lv), 10, "sizeof(D_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_BFu15i)");
    check_field_offset(lv, v1, 0, "D_Sf_BFu15i.v1");
    check_field_offset(lv, v2, 8, "D_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 8, 0, 15, 1, "D_Sf_BFu15i");
    set_bf_and_test(lv, v3, 8, 0, 15, hide_ull(1LL<<14), "D_Sf_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_BFu15i, D_Sf_BFu15i)
//============================================================================



static void Test_D_Sf_BFu15ll()
{
  {
    init_simple_test("D_Sf_BFu15ll");
    static STRUCT_IF_C D_Sf_BFu15ll lv;
    check2(sizeof(lv), 10, "sizeof(D_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_BFu15ll)");
    check_field_offset(lv, v1, 0, "D_Sf_BFu15ll.v1");
    check_field_offset(lv, v2, 8, "D_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 8, 0, 15, 1, "D_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 8, 0, 15, hide_ull(1LL<<14), "D_Sf_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_BFu15ll, D_Sf_BFu15ll)
//============================================================================



static void Test_D_Sf_BFu15s()
{
  {
    init_simple_test("D_Sf_BFu15s");
    static STRUCT_IF_C D_Sf_BFu15s lv;
    check2(sizeof(lv), 10, "sizeof(D_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_BFu15s)");
    check_field_offset(lv, v1, 0, "D_Sf_BFu15s.v1");
    check_field_offset(lv, v2, 8, "D_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 8, 0, 15, 1, "D_Sf_BFu15s");
    set_bf_and_test(lv, v3, 8, 0, 15, hide_ull(1LL<<14), "D_Sf_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_BFu15s, D_Sf_BFu15s)
//============================================================================



static void Test_D_Sf_BFu16i()
{
  {
    init_simple_test("D_Sf_BFu16i");
    static STRUCT_IF_C D_Sf_BFu16i lv;
    check2(sizeof(lv), 10, "sizeof(D_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_BFu16i)");
    check_field_offset(lv, v1, 0, "D_Sf_BFu16i.v1");
    check_field_offset(lv, v2, 8, "D_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 8, 0, 16, 1, "D_Sf_BFu16i");
    set_bf_and_test(lv, v3, 8, 0, 16, hide_ull(1LL<<15), "D_Sf_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_BFu16i, D_Sf_BFu16i)
//============================================================================



static void Test_D_Sf_BFu16ll()
{
  {
    init_simple_test("D_Sf_BFu16ll");
    static STRUCT_IF_C D_Sf_BFu16ll lv;
    check2(sizeof(lv), 10, "sizeof(D_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_BFu16ll)");
    check_field_offset(lv, v1, 0, "D_Sf_BFu16ll.v1");
    check_field_offset(lv, v2, 8, "D_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 8, 0, 16, 1, "D_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 8, 0, 16, hide_ull(1LL<<15), "D_Sf_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_BFu16ll, D_Sf_BFu16ll)
//============================================================================



static void Test_D_Sf_BFu16s()
{
  {
    init_simple_test("D_Sf_BFu16s");
    static STRUCT_IF_C D_Sf_BFu16s lv;
    check2(sizeof(lv), 10, "sizeof(D_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_BFu16s)");
    check_field_offset(lv, v1, 0, "D_Sf_BFu16s.v1");
    check_field_offset(lv, v2, 8, "D_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 8, 0, 16, 1, "D_Sf_BFu16s");
    set_bf_and_test(lv, v3, 8, 0, 16, hide_ull(1LL<<15), "D_Sf_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_BFu16s, D_Sf_BFu16s)
//============================================================================



static void Test_D_Sf_BFu17i()
{
  {
    init_simple_test("D_Sf_BFu17i");
    static STRUCT_IF_C D_Sf_BFu17i lv;
    check2(sizeof(lv), 11, "sizeof(D_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_BFu17i)");
    check_field_offset(lv, v1, 0, "D_Sf_BFu17i.v1");
    check_field_offset(lv, v2, 8, "D_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 8, 0, 17, 1, "D_Sf_BFu17i");
    set_bf_and_test(lv, v3, 8, 0, 17, hide_ull(1LL<<16), "D_Sf_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_BFu17i, D_Sf_BFu17i)
//============================================================================



static void Test_D_Sf_BFu17ll()
{
  {
    init_simple_test("D_Sf_BFu17ll");
    static STRUCT_IF_C D_Sf_BFu17ll lv;
    check2(sizeof(lv), 11, "sizeof(D_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_BFu17ll)");
    check_field_offset(lv, v1, 0, "D_Sf_BFu17ll.v1");
    check_field_offset(lv, v2, 8, "D_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 8, 0, 17, 1, "D_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 8, 0, 17, hide_ull(1LL<<16), "D_Sf_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_BFu17ll, D_Sf_BFu17ll)
//============================================================================



static void Test_D_Sf_BFu1c()
{
  {
    init_simple_test("D_Sf_BFu1c");
    static STRUCT_IF_C D_Sf_BFu1c lv;
    check2(sizeof(lv), 9, "sizeof(D_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_BFu1c)");
    check_field_offset(lv, v1, 0, "D_Sf_BFu1c.v1");
    check_field_offset(lv, v2, 8, "D_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 8, 0, 1, 1, "D_Sf_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_BFu1c, D_Sf_BFu1c)
//============================================================================



static void Test_D_Sf_BFu1i()
{
  {
    init_simple_test("D_Sf_BFu1i");
    static STRUCT_IF_C D_Sf_BFu1i lv;
    check2(sizeof(lv), 9, "sizeof(D_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_BFu1i)");
    check_field_offset(lv, v1, 0, "D_Sf_BFu1i.v1");
    check_field_offset(lv, v2, 8, "D_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 8, 0, 1, 1, "D_Sf_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_BFu1i, D_Sf_BFu1i)
//============================================================================



static void Test_D_Sf_BFu1ll()
{
  {
    init_simple_test("D_Sf_BFu1ll");
    static STRUCT_IF_C D_Sf_BFu1ll lv;
    check2(sizeof(lv), 9, "sizeof(D_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_BFu1ll)");
    check_field_offset(lv, v1, 0, "D_Sf_BFu1ll.v1");
    check_field_offset(lv, v2, 8, "D_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 8, 0, 1, 1, "D_Sf_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_BFu1ll, D_Sf_BFu1ll)
//============================================================================



static void Test_D_Sf_BFu1s()
{
  {
    init_simple_test("D_Sf_BFu1s");
    static STRUCT_IF_C D_Sf_BFu1s lv;
    check2(sizeof(lv), 9, "sizeof(D_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_BFu1s)");
    check_field_offset(lv, v1, 0, "D_Sf_BFu1s.v1");
    check_field_offset(lv, v2, 8, "D_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 8, 0, 1, 1, "D_Sf_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_BFu1s, D_Sf_BFu1s)
//============================================================================



static void Test_D_Sf_BFu31i()
{
  {
    init_simple_test("D_Sf_BFu31i");
    static STRUCT_IF_C D_Sf_BFu31i lv;
    check2(sizeof(lv), 12, "sizeof(D_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_BFu31i)");
    check_field_offset(lv, v1, 0, "D_Sf_BFu31i.v1");
    check_field_offset(lv, v2, 8, "D_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 8, 0, 31, 1, "D_Sf_BFu31i");
    set_bf_and_test(lv, v3, 8, 0, 31, hide_ull(1LL<<30), "D_Sf_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_BFu31i, D_Sf_BFu31i)
//============================================================================



static void Test_D_Sf_BFu31ll()
{
  {
    init_simple_test("D_Sf_BFu31ll");
    static STRUCT_IF_C D_Sf_BFu31ll lv;
    check2(sizeof(lv), 12, "sizeof(D_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_BFu31ll)");
    check_field_offset(lv, v1, 0, "D_Sf_BFu31ll.v1");
    check_field_offset(lv, v2, 8, "D_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 8, 0, 31, 1, "D_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 8, 0, 31, hide_ull(1LL<<30), "D_Sf_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_BFu31ll, D_Sf_BFu31ll)
//============================================================================



static void Test_D_Sf_BFu32i()
{
  {
    init_simple_test("D_Sf_BFu32i");
    static STRUCT_IF_C D_Sf_BFu32i lv;
    check2(sizeof(lv), 12, "sizeof(D_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_BFu32i)");
    check_field_offset(lv, v1, 0, "D_Sf_BFu32i.v1");
    check_field_offset(lv, v2, 8, "D_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 8, 0, 32, 1, "D_Sf_BFu32i");
    set_bf_and_test(lv, v3, 8, 0, 32, hide_ull(1LL<<31), "D_Sf_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_BFu32i, D_Sf_BFu32i)
//============================================================================



static void Test_D_Sf_BFu32ll()
{
  {
    init_simple_test("D_Sf_BFu32ll");
    static STRUCT_IF_C D_Sf_BFu32ll lv;
    check2(sizeof(lv), 12, "sizeof(D_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_BFu32ll)");
    check_field_offset(lv, v1, 0, "D_Sf_BFu32ll.v1");
    check_field_offset(lv, v2, 8, "D_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 8, 0, 32, 1, "D_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 8, 0, 32, hide_ull(1LL<<31), "D_Sf_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_BFu32ll, D_Sf_BFu32ll)
//============================================================================



static void Test_D_Sf_BFu33()
{
  {
    init_simple_test("D_Sf_BFu33");
    static STRUCT_IF_C D_Sf_BFu33 lv;
    check2(sizeof(lv), 13, "sizeof(D_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_BFu33)");
    check_field_offset(lv, v1, 0, "D_Sf_BFu33.v1");
    check_field_offset(lv, v2, 8, "D_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 8, 0, 33, 1, "D_Sf_BFu33");
    set_bf_and_test(lv, v3, 8, 0, 33, hide_ull(1LL<<32), "D_Sf_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_BFu33, D_Sf_BFu33)
//============================================================================



static void Test_D_Sf_BFu7c()
{
  {
    init_simple_test("D_Sf_BFu7c");
    static STRUCT_IF_C D_Sf_BFu7c lv;
    check2(sizeof(lv), 9, "sizeof(D_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_BFu7c)");
    check_field_offset(lv, v1, 0, "D_Sf_BFu7c.v1");
    check_field_offset(lv, v2, 8, "D_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 8, 0, 7, 1, "D_Sf_BFu7c");
    set_bf_and_test(lv, v3, 8, 0, 7, hide_ull(1LL<<6), "D_Sf_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_BFu7c, D_Sf_BFu7c)
//============================================================================



static void Test_D_Sf_BFu7i()
{
  {
    init_simple_test("D_Sf_BFu7i");
    static STRUCT_IF_C D_Sf_BFu7i lv;
    check2(sizeof(lv), 9, "sizeof(D_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_BFu7i)");
    check_field_offset(lv, v1, 0, "D_Sf_BFu7i.v1");
    check_field_offset(lv, v2, 8, "D_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 8, 0, 7, 1, "D_Sf_BFu7i");
    set_bf_and_test(lv, v3, 8, 0, 7, hide_ull(1LL<<6), "D_Sf_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_BFu7i, D_Sf_BFu7i)
//============================================================================



static void Test_D_Sf_BFu7ll()
{
  {
    init_simple_test("D_Sf_BFu7ll");
    static STRUCT_IF_C D_Sf_BFu7ll lv;
    check2(sizeof(lv), 9, "sizeof(D_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_BFu7ll)");
    check_field_offset(lv, v1, 0, "D_Sf_BFu7ll.v1");
    check_field_offset(lv, v2, 8, "D_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 8, 0, 7, 1, "D_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 8, 0, 7, hide_ull(1LL<<6), "D_Sf_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_BFu7ll, D_Sf_BFu7ll)
//============================================================================



static void Test_D_Sf_BFu7s()
{
  {
    init_simple_test("D_Sf_BFu7s");
    static STRUCT_IF_C D_Sf_BFu7s lv;
    check2(sizeof(lv), 9, "sizeof(D_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_BFu7s)");
    check_field_offset(lv, v1, 0, "D_Sf_BFu7s.v1");
    check_field_offset(lv, v2, 8, "D_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 8, 0, 7, 1, "D_Sf_BFu7s");
    set_bf_and_test(lv, v3, 8, 0, 7, hide_ull(1LL<<6), "D_Sf_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_BFu7s, D_Sf_BFu7s)
//============================================================================



static void Test_D_Sf_BFu8c()
{
  {
    init_simple_test("D_Sf_BFu8c");
    static STRUCT_IF_C D_Sf_BFu8c lv;
    check2(sizeof(lv), 9, "sizeof(D_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_BFu8c)");
    check_field_offset(lv, v1, 0, "D_Sf_BFu8c.v1");
    check_field_offset(lv, v2, 8, "D_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 8, 0, 8, 1, "D_Sf_BFu8c");
    set_bf_and_test(lv, v3, 8, 0, 8, hide_ull(1LL<<7), "D_Sf_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_BFu8c, D_Sf_BFu8c)
//============================================================================



static void Test_D_Sf_BFu8i()
{
  {
    init_simple_test("D_Sf_BFu8i");
    static STRUCT_IF_C D_Sf_BFu8i lv;
    check2(sizeof(lv), 9, "sizeof(D_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_BFu8i)");
    check_field_offset(lv, v1, 0, "D_Sf_BFu8i.v1");
    check_field_offset(lv, v2, 8, "D_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 8, 0, 8, 1, "D_Sf_BFu8i");
    set_bf_and_test(lv, v3, 8, 0, 8, hide_ull(1LL<<7), "D_Sf_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_BFu8i, D_Sf_BFu8i)
//============================================================================



static void Test_D_Sf_BFu8ll()
{
  {
    init_simple_test("D_Sf_BFu8ll");
    static STRUCT_IF_C D_Sf_BFu8ll lv;
    check2(sizeof(lv), 9, "sizeof(D_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_BFu8ll)");
    check_field_offset(lv, v1, 0, "D_Sf_BFu8ll.v1");
    check_field_offset(lv, v2, 8, "D_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 8, 0, 8, 1, "D_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 8, 0, 8, hide_ull(1LL<<7), "D_Sf_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_BFu8ll, D_Sf_BFu8ll)
//============================================================================



static void Test_D_Sf_BFu8s()
{
  {
    init_simple_test("D_Sf_BFu8s");
    static STRUCT_IF_C D_Sf_BFu8s lv;
    check2(sizeof(lv), 9, "sizeof(D_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_BFu8s)");
    check_field_offset(lv, v1, 0, "D_Sf_BFu8s.v1");
    check_field_offset(lv, v2, 8, "D_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 8, 0, 8, 1, "D_Sf_BFu8s");
    set_bf_and_test(lv, v3, 8, 0, 8, hide_ull(1LL<<7), "D_Sf_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_BFu8s, D_Sf_BFu8s)
//============================================================================



static void Test_D_Sf_BFu9i()
{
  {
    init_simple_test("D_Sf_BFu9i");
    static STRUCT_IF_C D_Sf_BFu9i lv;
    check2(sizeof(lv), 10, "sizeof(D_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_BFu9i)");
    check_field_offset(lv, v1, 0, "D_Sf_BFu9i.v1");
    check_field_offset(lv, v2, 8, "D_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 8, 0, 9, 1, "D_Sf_BFu9i");
    set_bf_and_test(lv, v3, 8, 0, 9, hide_ull(1LL<<8), "D_Sf_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_BFu9i, D_Sf_BFu9i)
//============================================================================



static void Test_D_Sf_BFu9ll()
{
  {
    init_simple_test("D_Sf_BFu9ll");
    static STRUCT_IF_C D_Sf_BFu9ll lv;
    check2(sizeof(lv), 10, "sizeof(D_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_BFu9ll)");
    check_field_offset(lv, v1, 0, "D_Sf_BFu9ll.v1");
    check_field_offset(lv, v2, 8, "D_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 8, 0, 9, 1, "D_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 8, 0, 9, hide_ull(1LL<<8), "D_Sf_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_BFu9ll, D_Sf_BFu9ll)
//============================================================================



static void Test_D_Sf_BFu9s()
{
  {
    init_simple_test("D_Sf_BFu9s");
    static STRUCT_IF_C D_Sf_BFu9s lv;
    check2(sizeof(lv), 10, "sizeof(D_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_BFu9s)");
    check_field_offset(lv, v1, 0, "D_Sf_BFu9s.v1");
    check_field_offset(lv, v2, 8, "D_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 8, 0, 9, 1, "D_Sf_BFu9s");
    set_bf_and_test(lv, v3, 8, 0, 9, hide_ull(1LL<<8), "D_Sf_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_BFu9s, D_Sf_BFu9s)
//============================================================================



static void Test_D_Sf_C()
{
  {
    init_simple_test("D_Sf_C");
    STRUCT_IF_C D_Sf_C lv;
    check2(sizeof(lv), 9, "sizeof(D_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_C)");
    check_field_offset(lv, v1, 0, "D_Sf_C.v1");
    check_field_offset(lv, v2, 8, "D_Sf_C.v2");
    check_field_offset(lv, v3, 8, "D_Sf_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_C, D_Sf_C)
//============================================================================



static void Test_D_Sf_D()
{
  {
    init_simple_test("D_Sf_D");
    STRUCT_IF_C D_Sf_D lv;
    check2(sizeof(lv), 16, "sizeof(D_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_D)");
    check_field_offset(lv, v1, 0, "D_Sf_D.v1");
    check_field_offset(lv, v2, 8, "D_Sf_D.v2");
    check_field_offset(lv, v3, 8, "D_Sf_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_D, D_Sf_D)
//============================================================================



static void Test_D_Sf_F()
{
  {
    init_simple_test("D_Sf_F");
    STRUCT_IF_C D_Sf_F lv;
    check2(sizeof(lv), 12, "sizeof(D_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_F)");
    check_field_offset(lv, v1, 0, "D_Sf_F.v1");
    check_field_offset(lv, v2, 8, "D_Sf_F.v2");
    check_field_offset(lv, v3, 8, "D_Sf_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_F, D_Sf_F)
//============================================================================



static void Test_D_Sf_I()
{
  {
    init_simple_test("D_Sf_I");
    STRUCT_IF_C D_Sf_I lv;
    check2(sizeof(lv), 12, "sizeof(D_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_I)");
    check_field_offset(lv, v1, 0, "D_Sf_I.v1");
    check_field_offset(lv, v2, 8, "D_Sf_I.v2");
    check_field_offset(lv, v3, 8, "D_Sf_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_I, D_Sf_I)
//============================================================================



static void Test_D_Sf_Ip()
{
  {
    init_simple_test("D_Sf_Ip");
    STRUCT_IF_C D_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_Ip)");
    check_field_offset(lv, v1, 0, "D_Sf_Ip.v1");
    check_field_offset(lv, v2, 8, "D_Sf_Ip.v2");
    check_field_offset(lv, v3, 8, "D_Sf_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_Ip, D_Sf_Ip)
//============================================================================



static void Test_D_Sf_L()
{
  {
    init_simple_test("D_Sf_L");
    STRUCT_IF_C D_Sf_L lv;
    check2(sizeof(lv), 16, "sizeof(D_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_L)");
    check_field_offset(lv, v1, 0, "D_Sf_L.v1");
    check_field_offset(lv, v2, 8, "D_Sf_L.v2");
    check_field_offset(lv, v3, 8, "D_Sf_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_L, D_Sf_L)
//============================================================================



static void Test_D_Sf_S()
{
  {
    init_simple_test("D_Sf_S");
    STRUCT_IF_C D_Sf_S lv;
    check2(sizeof(lv), 10, "sizeof(D_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_S)");
    check_field_offset(lv, v1, 0, "D_Sf_S.v1");
    check_field_offset(lv, v2, 8, "D_Sf_S.v2");
    check_field_offset(lv, v3, 8, "D_Sf_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_S, D_Sf_S)
//============================================================================



static void Test_D_Sf_Sf()
{
  {
    init_simple_test("D_Sf_Sf");
    STRUCT_IF_C D_Sf_Sf lv;
    check2(sizeof(lv), 8, "sizeof(D_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_Sf)");
    check_field_offset(lv, v1, 0, "D_Sf_Sf.v1");
    check_field_offset(lv, v2, 8, "D_Sf_Sf.v2");
    check_field_offset(lv, v3, 8, "D_Sf_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_Sf, D_Sf_Sf)
//============================================================================



static void Test_D_Sf_Uc()
{
  {
    init_simple_test("D_Sf_Uc");
    STRUCT_IF_C D_Sf_Uc lv;
    check2(sizeof(lv), 9, "sizeof(D_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_Uc)");
    check_field_offset(lv, v1, 0, "D_Sf_Uc.v1");
    check_field_offset(lv, v2, 8, "D_Sf_Uc.v2");
    check_field_offset(lv, v3, 8, "D_Sf_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_Uc, D_Sf_Uc)
//============================================================================



static void Test_D_Sf_Ui()
{
  {
    init_simple_test("D_Sf_Ui");
    STRUCT_IF_C D_Sf_Ui lv;
    check2(sizeof(lv), 12, "sizeof(D_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_Ui)");
    check_field_offset(lv, v1, 0, "D_Sf_Ui.v1");
    check_field_offset(lv, v2, 8, "D_Sf_Ui.v2");
    check_field_offset(lv, v3, 8, "D_Sf_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_Ui, D_Sf_Ui)
//============================================================================



static void Test_D_Sf_Ul()
{
  {
    init_simple_test("D_Sf_Ul");
    STRUCT_IF_C D_Sf_Ul lv;
    check2(sizeof(lv), 16, "sizeof(D_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_Ul)");
    check_field_offset(lv, v1, 0, "D_Sf_Ul.v1");
    check_field_offset(lv, v2, 8, "D_Sf_Ul.v2");
    check_field_offset(lv, v3, 8, "D_Sf_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_Ul, D_Sf_Ul)
//============================================================================



static void Test_D_Sf_Us()
{
  {
    init_simple_test("D_Sf_Us");
    STRUCT_IF_C D_Sf_Us lv;
    check2(sizeof(lv), 10, "sizeof(D_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_Us)");
    check_field_offset(lv, v1, 0, "D_Sf_Us.v1");
    check_field_offset(lv, v2, 8, "D_Sf_Us.v2");
    check_field_offset(lv, v3, 8, "D_Sf_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_Us, D_Sf_Us)
//============================================================================



static void Test_D_Sf_Vp()
{
  {
    init_simple_test("D_Sf_Vp");
    STRUCT_IF_C D_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(D_Sf_Vp)");
    check_field_offset(lv, v1, 0, "D_Sf_Vp.v1");
    check_field_offset(lv, v2, 8, "D_Sf_Vp.v2");
    check_field_offset(lv, v3, 8, "D_Sf_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Sf_Vp, D_Sf_Vp)
//============================================================================



static void Test_D_Uc_Sf()
{
  {
    init_simple_test("D_Uc_Sf");
    STRUCT_IF_C D_Uc_Sf lv;
    check2(sizeof(lv), 9, "sizeof(D_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_Uc_Sf)");
    check_field_offset(lv, v1, 0, "D_Uc_Sf.v1");
    check_field_offset(lv, v2, 8, "D_Uc_Sf.v2");
    check_field_offset(lv, v3, 9, "D_Uc_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Uc_Sf, D_Uc_Sf)
//============================================================================



static void Test_D_Ui_Sf()
{
  {
    init_simple_test("D_Ui_Sf");
    STRUCT_IF_C D_Ui_Sf lv;
    check2(sizeof(lv), 12, "sizeof(D_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_Ui_Sf)");
    check_field_offset(lv, v1, 0, "D_Ui_Sf.v1");
    check_field_offset(lv, v2, 8, "D_Ui_Sf.v2");
    check_field_offset(lv, v3, 12, "D_Ui_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Ui_Sf, D_Ui_Sf)
//============================================================================



static void Test_D_Ul_Sf()
{
  {
    init_simple_test("D_Ul_Sf");
    STRUCT_IF_C D_Ul_Sf lv;
    check2(sizeof(lv), 16, "sizeof(D_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_Ul_Sf)");
    check_field_offset(lv, v1, 0, "D_Ul_Sf.v1");
    check_field_offset(lv, v2, 8, "D_Ul_Sf.v2");
    check_field_offset(lv, v3, 16, "D_Ul_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Ul_Sf, D_Ul_Sf)
//============================================================================



static void Test_D_Us_Sf()
{
  {
    init_simple_test("D_Us_Sf");
    STRUCT_IF_C D_Us_Sf lv;
    check2(sizeof(lv), 10, "sizeof(D_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_Us_Sf)");
    check_field_offset(lv, v1, 0, "D_Us_Sf.v1");
    check_field_offset(lv, v2, 8, "D_Us_Sf.v2");
    check_field_offset(lv, v3, 10, "D_Us_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Us_Sf, D_Us_Sf)
//============================================================================



static void Test_D_Vp_Sf()
{
  {
    init_simple_test("D_Vp_Sf");
    STRUCT_IF_C D_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(D_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(D_Vp_Sf)");
    check_field_offset(lv, v1, 0, "D_Vp_Sf.v1");
    check_field_offset(lv, v2, 8, "D_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "D_Vp_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_D_Vp_Sf, D_Vp_Sf)
//============================================================================



static void Test_F_BFu15i_Sf()
{
  {
    init_simple_test("F_BFu15i_Sf");
    static STRUCT_IF_C F_BFu15i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu15i_Sf)");
    check_field_offset(lv, v1, 0, "F_BFu15i_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "F_BFu15i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "F_BFu15i_Sf");
    check_field_offset(lv, v3, 6, "F_BFu15i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu15i_Sf, F_BFu15i_Sf)
//============================================================================



static void Test_F_BFu15ll_Sf()
{
  {
    init_simple_test("F_BFu15ll_Sf");
    static STRUCT_IF_C F_BFu15ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu15ll_Sf)");
    check_field_offset(lv, v1, 0, "F_BFu15ll_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "F_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "F_BFu15ll_Sf");
    check_field_offset(lv, v3, 6, "F_BFu15ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu15ll_Sf, F_BFu15ll_Sf)
//============================================================================



static void Test_F_BFu15s_Sf()
{
  {
    init_simple_test("F_BFu15s_Sf");
    static STRUCT_IF_C F_BFu15s_Sf lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu15s_Sf)");
    check_field_offset(lv, v1, 0, "F_BFu15s_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "F_BFu15s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "F_BFu15s_Sf");
    check_field_offset(lv, v3, 6, "F_BFu15s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu15s_Sf, F_BFu15s_Sf)
//============================================================================



static void Test_F_BFu16i_Sf()
{
  {
    init_simple_test("F_BFu16i_Sf");
    static STRUCT_IF_C F_BFu16i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu16i_Sf)");
    check_field_offset(lv, v1, 0, "F_BFu16i_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "F_BFu16i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "F_BFu16i_Sf");
    check_field_offset(lv, v3, 6, "F_BFu16i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu16i_Sf, F_BFu16i_Sf)
//============================================================================



static void Test_F_BFu16ll_Sf()
{
  {
    init_simple_test("F_BFu16ll_Sf");
    static STRUCT_IF_C F_BFu16ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu16ll_Sf)");
    check_field_offset(lv, v1, 0, "F_BFu16ll_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "F_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "F_BFu16ll_Sf");
    check_field_offset(lv, v3, 6, "F_BFu16ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu16ll_Sf, F_BFu16ll_Sf)
//============================================================================



static void Test_F_BFu16s_Sf()
{
  {
    init_simple_test("F_BFu16s_Sf");
    static STRUCT_IF_C F_BFu16s_Sf lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu16s_Sf)");
    check_field_offset(lv, v1, 0, "F_BFu16s_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "F_BFu16s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "F_BFu16s_Sf");
    check_field_offset(lv, v3, 6, "F_BFu16s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu16s_Sf, F_BFu16s_Sf)
//============================================================================



static void Test_F_BFu17i_Sf()
{
  {
    init_simple_test("F_BFu17i_Sf");
    static STRUCT_IF_C F_BFu17i_Sf lv;
    check2(sizeof(lv), 7, "sizeof(F_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu17i_Sf)");
    check_field_offset(lv, v1, 0, "F_BFu17i_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "F_BFu17i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "F_BFu17i_Sf");
    check_field_offset(lv, v3, 7, "F_BFu17i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu17i_Sf, F_BFu17i_Sf)
//============================================================================



static void Test_F_BFu17ll_Sf()
{
  {
    init_simple_test("F_BFu17ll_Sf");
    static STRUCT_IF_C F_BFu17ll_Sf lv;
    check2(sizeof(lv), 7, "sizeof(F_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu17ll_Sf)");
    check_field_offset(lv, v1, 0, "F_BFu17ll_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "F_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "F_BFu17ll_Sf");
    check_field_offset(lv, v3, 7, "F_BFu17ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu17ll_Sf, F_BFu17ll_Sf)
//============================================================================



static void Test_F_BFu1c_Sf()
{
  {
    init_simple_test("F_BFu1c_Sf");
    static STRUCT_IF_C F_BFu1c_Sf lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu1c_Sf)");
    check_field_offset(lv, v1, 0, "F_BFu1c_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu1c_Sf");
    check_field_offset(lv, v3, 5, "F_BFu1c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu1c_Sf, F_BFu1c_Sf)
//============================================================================



static void Test_F_BFu1i_Sf()
{
  {
    init_simple_test("F_BFu1i_Sf");
    static STRUCT_IF_C F_BFu1i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu1i_Sf)");
    check_field_offset(lv, v1, 0, "F_BFu1i_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu1i_Sf");
    check_field_offset(lv, v3, 5, "F_BFu1i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu1i_Sf, F_BFu1i_Sf)
//============================================================================



static void Test_F_BFu1ll_Sf()
{
  {
    init_simple_test("F_BFu1ll_Sf");
    static STRUCT_IF_C F_BFu1ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu1ll_Sf)");
    check_field_offset(lv, v1, 0, "F_BFu1ll_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu1ll_Sf");
    check_field_offset(lv, v3, 5, "F_BFu1ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu1ll_Sf, F_BFu1ll_Sf)
//============================================================================



static void Test_F_BFu1s_Sf()
{
  {
    init_simple_test("F_BFu1s_Sf");
    static STRUCT_IF_C F_BFu1s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu1s_Sf)");
    check_field_offset(lv, v1, 0, "F_BFu1s_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "F_BFu1s_Sf");
    check_field_offset(lv, v3, 5, "F_BFu1s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu1s_Sf, F_BFu1s_Sf)
//============================================================================



static void Test_F_BFu31i_Sf()
{
  {
    init_simple_test("F_BFu31i_Sf");
    static STRUCT_IF_C F_BFu31i_Sf lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu31i_Sf)");
    check_field_offset(lv, v1, 0, "F_BFu31i_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "F_BFu31i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "F_BFu31i_Sf");
    check_field_offset(lv, v3, 8, "F_BFu31i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu31i_Sf, F_BFu31i_Sf)
//============================================================================



static void Test_F_BFu31ll_Sf()
{
  {
    init_simple_test("F_BFu31ll_Sf");
    static STRUCT_IF_C F_BFu31ll_Sf lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu31ll_Sf)");
    check_field_offset(lv, v1, 0, "F_BFu31ll_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "F_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "F_BFu31ll_Sf");
    check_field_offset(lv, v3, 8, "F_BFu31ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu31ll_Sf, F_BFu31ll_Sf)
//============================================================================



static void Test_F_BFu32i_Sf()
{
  {
    init_simple_test("F_BFu32i_Sf");
    static STRUCT_IF_C F_BFu32i_Sf lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu32i_Sf)");
    check_field_offset(lv, v1, 0, "F_BFu32i_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "F_BFu32i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "F_BFu32i_Sf");
    check_field_offset(lv, v3, 8, "F_BFu32i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu32i_Sf, F_BFu32i_Sf)
//============================================================================



static void Test_F_BFu32ll_Sf()
{
  {
    init_simple_test("F_BFu32ll_Sf");
    static STRUCT_IF_C F_BFu32ll_Sf lv;
    check2(sizeof(lv), 8, "sizeof(F_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu32ll_Sf)");
    check_field_offset(lv, v1, 0, "F_BFu32ll_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "F_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "F_BFu32ll_Sf");
    check_field_offset(lv, v3, 8, "F_BFu32ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu32ll_Sf, F_BFu32ll_Sf)
//============================================================================



static void Test_F_BFu33_Sf()
{
  {
    init_simple_test("F_BFu33_Sf");
    static STRUCT_IF_C F_BFu33_Sf lv;
    check2(sizeof(lv), 9, "sizeof(F_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu33_Sf)");
    check_field_offset(lv, v1, 0, "F_BFu33_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "F_BFu33_Sf");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "F_BFu33_Sf");
    check_field_offset(lv, v3, 9, "F_BFu33_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu33_Sf, F_BFu33_Sf)
//============================================================================



static void Test_F_BFu7c_Sf()
{
  {
    init_simple_test("F_BFu7c_Sf");
    static STRUCT_IF_C F_BFu7c_Sf lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu7c_Sf)");
    check_field_offset(lv, v1, 0, "F_BFu7c_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu7c_Sf");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu7c_Sf");
    check_field_offset(lv, v3, 5, "F_BFu7c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu7c_Sf, F_BFu7c_Sf)
//============================================================================



static void Test_F_BFu7i_Sf()
{
  {
    init_simple_test("F_BFu7i_Sf");
    static STRUCT_IF_C F_BFu7i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu7i_Sf)");
    check_field_offset(lv, v1, 0, "F_BFu7i_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu7i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu7i_Sf");
    check_field_offset(lv, v3, 5, "F_BFu7i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu7i_Sf, F_BFu7i_Sf)
//============================================================================



static void Test_F_BFu7ll_Sf()
{
  {
    init_simple_test("F_BFu7ll_Sf");
    static STRUCT_IF_C F_BFu7ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu7ll_Sf)");
    check_field_offset(lv, v1, 0, "F_BFu7ll_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu7ll_Sf");
    check_field_offset(lv, v3, 5, "F_BFu7ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu7ll_Sf, F_BFu7ll_Sf)
//============================================================================



static void Test_F_BFu7s_Sf()
{
  {
    init_simple_test("F_BFu7s_Sf");
    static STRUCT_IF_C F_BFu7s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu7s_Sf)");
    check_field_offset(lv, v1, 0, "F_BFu7s_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "F_BFu7s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "F_BFu7s_Sf");
    check_field_offset(lv, v3, 5, "F_BFu7s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu7s_Sf, F_BFu7s_Sf)
//============================================================================



static void Test_F_BFu8c_Sf()
{
  {
    init_simple_test("F_BFu8c_Sf");
    static STRUCT_IF_C F_BFu8c_Sf lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu8c_Sf)");
    check_field_offset(lv, v1, 0, "F_BFu8c_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu8c_Sf");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu8c_Sf");
    check_field_offset(lv, v3, 5, "F_BFu8c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu8c_Sf, F_BFu8c_Sf)
//============================================================================



static void Test_F_BFu8i_Sf()
{
  {
    init_simple_test("F_BFu8i_Sf");
    static STRUCT_IF_C F_BFu8i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu8i_Sf)");
    check_field_offset(lv, v1, 0, "F_BFu8i_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu8i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu8i_Sf");
    check_field_offset(lv, v3, 5, "F_BFu8i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu8i_Sf, F_BFu8i_Sf)
//============================================================================



static void Test_F_BFu8ll_Sf()
{
  {
    init_simple_test("F_BFu8ll_Sf");
    static STRUCT_IF_C F_BFu8ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu8ll_Sf)");
    check_field_offset(lv, v1, 0, "F_BFu8ll_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu8ll_Sf");
    check_field_offset(lv, v3, 5, "F_BFu8ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu8ll_Sf, F_BFu8ll_Sf)
//============================================================================



static void Test_F_BFu8s_Sf()
{
  {
    init_simple_test("F_BFu8s_Sf");
    static STRUCT_IF_C F_BFu8s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(F_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu8s_Sf)");
    check_field_offset(lv, v1, 0, "F_BFu8s_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "F_BFu8s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "F_BFu8s_Sf");
    check_field_offset(lv, v3, 5, "F_BFu8s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu8s_Sf, F_BFu8s_Sf)
//============================================================================



static void Test_F_BFu9i_Sf()
{
  {
    init_simple_test("F_BFu9i_Sf");
    static STRUCT_IF_C F_BFu9i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu9i_Sf)");
    check_field_offset(lv, v1, 0, "F_BFu9i_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "F_BFu9i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "F_BFu9i_Sf");
    check_field_offset(lv, v3, 6, "F_BFu9i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu9i_Sf, F_BFu9i_Sf)
//============================================================================



static void Test_F_BFu9ll_Sf()
{
  {
    init_simple_test("F_BFu9ll_Sf");
    static STRUCT_IF_C F_BFu9ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu9ll_Sf)");
    check_field_offset(lv, v1, 0, "F_BFu9ll_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "F_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "F_BFu9ll_Sf");
    check_field_offset(lv, v3, 6, "F_BFu9ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu9ll_Sf, F_BFu9ll_Sf)
//============================================================================



static void Test_F_BFu9s_Sf()
{
  {
    init_simple_test("F_BFu9s_Sf");
    static STRUCT_IF_C F_BFu9s_Sf lv;
    check2(sizeof(lv), 6, "sizeof(F_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_BFu9s_Sf)");
    check_field_offset(lv, v1, 0, "F_BFu9s_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "F_BFu9s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "F_BFu9s_Sf");
    check_field_offset(lv, v3, 6, "F_BFu9s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_BFu9s_Sf, F_BFu9s_Sf)
//============================================================================



static void Test_F_C_Sf()
{
  {
    init_simple_test("F_C_Sf");
    STRUCT_IF_C F_C_Sf lv;
    check2(sizeof(lv), 5, "sizeof(F_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_C_Sf)");
    check_field_offset(lv, v1, 0, "F_C_Sf.v1");
    check_field_offset(lv, v2, 4, "F_C_Sf.v2");
    check_field_offset(lv, v3, 5, "F_C_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_C_Sf, F_C_Sf)
//============================================================================



static void Test_F_D_Sf()
{
  {
    init_simple_test("F_D_Sf");
    STRUCT_IF_C F_D_Sf lv;
    check2(sizeof(lv), 12, "sizeof(F_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_D_Sf)");
    check_field_offset(lv, v1, 0, "F_D_Sf.v1");
    check_field_offset(lv, v2, 4, "F_D_Sf.v2");
    check_field_offset(lv, v3, 12, "F_D_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_D_Sf, F_D_Sf)
//============================================================================



static void Test_F_F_Sf()
{
  {
    init_simple_test("F_F_Sf");
    STRUCT_IF_C F_F_Sf lv;
    check2(sizeof(lv), 8, "sizeof(F_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_F_Sf)");
    check_field_offset(lv, v1, 0, "F_F_Sf.v1");
    check_field_offset(lv, v2, 4, "F_F_Sf.v2");
    check_field_offset(lv, v3, 8, "F_F_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_F_Sf, F_F_Sf)
//============================================================================



static void Test_F_I_Sf()
{
  {
    init_simple_test("F_I_Sf");
    STRUCT_IF_C F_I_Sf lv;
    check2(sizeof(lv), 8, "sizeof(F_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_I_Sf)");
    check_field_offset(lv, v1, 0, "F_I_Sf.v1");
    check_field_offset(lv, v2, 4, "F_I_Sf.v2");
    check_field_offset(lv, v3, 8, "F_I_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_I_Sf, F_I_Sf)
//============================================================================



static void Test_F_Ip_Sf()
{
  {
    init_simple_test("F_Ip_Sf");
    STRUCT_IF_C F_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(F_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_Ip_Sf)");
    check_field_offset(lv, v1, 0, "F_Ip_Sf.v1");
    check_field_offset(lv, v2, 4, "F_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "F_Ip_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Ip_Sf, F_Ip_Sf)
//============================================================================



static void Test_F_L_Sf()
{
  {
    init_simple_test("F_L_Sf");
    STRUCT_IF_C F_L_Sf lv;
    check2(sizeof(lv), 12, "sizeof(F_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_L_Sf)");
    check_field_offset(lv, v1, 0, "F_L_Sf.v1");
    check_field_offset(lv, v2, 4, "F_L_Sf.v2");
    check_field_offset(lv, v3, 12, "F_L_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_L_Sf, F_L_Sf)
//============================================================================



static void Test_F_S_Sf()
{
  {
    init_simple_test("F_S_Sf");
    STRUCT_IF_C F_S_Sf lv;
    check2(sizeof(lv), 6, "sizeof(F_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_S_Sf)");
    check_field_offset(lv, v1, 0, "F_S_Sf.v1");
    check_field_offset(lv, v2, 4, "F_S_Sf.v2");
    check_field_offset(lv, v3, 6, "F_S_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_S_Sf, F_S_Sf)
//============================================================================



static void Test_F_Sf()
{
  {
    init_simple_test("F_Sf");
    STRUCT_IF_C F_Sf lv;
    check2(sizeof(lv), 4, "sizeof(F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf)");
    check_field_offset(lv, v1, 0, "F_Sf.v1");
    check_field_offset(lv, v2, 4, "F_Sf.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf, F_Sf)
//============================================================================



static void Test_F_Sf_BFu15i()
{
  {
    init_simple_test("F_Sf_BFu15i");
    static STRUCT_IF_C F_Sf_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(F_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_BFu15i)");
    check_field_offset(lv, v1, 0, "F_Sf_BFu15i.v1");
    check_field_offset(lv, v2, 4, "F_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "F_Sf_BFu15i");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "F_Sf_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_BFu15i, F_Sf_BFu15i)
//============================================================================



static void Test_F_Sf_BFu15ll()
{
  {
    init_simple_test("F_Sf_BFu15ll");
    static STRUCT_IF_C F_Sf_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(F_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_BFu15ll)");
    check_field_offset(lv, v1, 0, "F_Sf_BFu15ll.v1");
    check_field_offset(lv, v2, 4, "F_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "F_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "F_Sf_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_BFu15ll, F_Sf_BFu15ll)
//============================================================================



static void Test_F_Sf_BFu15s()
{
  {
    init_simple_test("F_Sf_BFu15s");
    static STRUCT_IF_C F_Sf_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(F_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_BFu15s)");
    check_field_offset(lv, v1, 0, "F_Sf_BFu15s.v1");
    check_field_offset(lv, v2, 4, "F_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "F_Sf_BFu15s");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "F_Sf_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_BFu15s, F_Sf_BFu15s)
//============================================================================



static void Test_F_Sf_BFu16i()
{
  {
    init_simple_test("F_Sf_BFu16i");
    static STRUCT_IF_C F_Sf_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(F_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_BFu16i)");
    check_field_offset(lv, v1, 0, "F_Sf_BFu16i.v1");
    check_field_offset(lv, v2, 4, "F_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "F_Sf_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "F_Sf_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_BFu16i, F_Sf_BFu16i)
//============================================================================



static void Test_F_Sf_BFu16ll()
{
  {
    init_simple_test("F_Sf_BFu16ll");
    static STRUCT_IF_C F_Sf_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(F_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_BFu16ll)");
    check_field_offset(lv, v1, 0, "F_Sf_BFu16ll.v1");
    check_field_offset(lv, v2, 4, "F_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "F_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "F_Sf_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_BFu16ll, F_Sf_BFu16ll)
//============================================================================



static void Test_F_Sf_BFu16s()
{
  {
    init_simple_test("F_Sf_BFu16s");
    static STRUCT_IF_C F_Sf_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(F_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_BFu16s)");
    check_field_offset(lv, v1, 0, "F_Sf_BFu16s.v1");
    check_field_offset(lv, v2, 4, "F_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "F_Sf_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "F_Sf_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_BFu16s, F_Sf_BFu16s)
//============================================================================



static void Test_F_Sf_BFu17i()
{
  {
    init_simple_test("F_Sf_BFu17i");
    static STRUCT_IF_C F_Sf_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(F_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_BFu17i)");
    check_field_offset(lv, v1, 0, "F_Sf_BFu17i.v1");
    check_field_offset(lv, v2, 4, "F_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 4, 0, 17, 1, "F_Sf_BFu17i");
    set_bf_and_test(lv, v3, 4, 0, 17, hide_ull(1LL<<16), "F_Sf_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_BFu17i, F_Sf_BFu17i)
//============================================================================



static void Test_F_Sf_BFu17ll()
{
  {
    init_simple_test("F_Sf_BFu17ll");
    static STRUCT_IF_C F_Sf_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(F_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_BFu17ll)");
    check_field_offset(lv, v1, 0, "F_Sf_BFu17ll.v1");
    check_field_offset(lv, v2, 4, "F_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 17, 1, "F_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 4, 0, 17, hide_ull(1LL<<16), "F_Sf_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_BFu17ll, F_Sf_BFu17ll)
//============================================================================



static void Test_F_Sf_BFu1c()
{
  {
    init_simple_test("F_Sf_BFu1c");
    static STRUCT_IF_C F_Sf_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(F_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_BFu1c)");
    check_field_offset(lv, v1, 0, "F_Sf_BFu1c.v1");
    check_field_offset(lv, v2, 4, "F_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "F_Sf_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_BFu1c, F_Sf_BFu1c)
//============================================================================



static void Test_F_Sf_BFu1i()
{
  {
    init_simple_test("F_Sf_BFu1i");
    static STRUCT_IF_C F_Sf_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(F_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_BFu1i)");
    check_field_offset(lv, v1, 0, "F_Sf_BFu1i.v1");
    check_field_offset(lv, v2, 4, "F_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "F_Sf_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_BFu1i, F_Sf_BFu1i)
//============================================================================



static void Test_F_Sf_BFu1ll()
{
  {
    init_simple_test("F_Sf_BFu1ll");
    static STRUCT_IF_C F_Sf_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(F_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_BFu1ll)");
    check_field_offset(lv, v1, 0, "F_Sf_BFu1ll.v1");
    check_field_offset(lv, v2, 4, "F_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "F_Sf_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_BFu1ll, F_Sf_BFu1ll)
//============================================================================



static void Test_F_Sf_BFu1s()
{
  {
    init_simple_test("F_Sf_BFu1s");
    static STRUCT_IF_C F_Sf_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(F_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_BFu1s)");
    check_field_offset(lv, v1, 0, "F_Sf_BFu1s.v1");
    check_field_offset(lv, v2, 4, "F_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "F_Sf_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_BFu1s, F_Sf_BFu1s)
//============================================================================



static void Test_F_Sf_BFu31i()
{
  {
    init_simple_test("F_Sf_BFu31i");
    static STRUCT_IF_C F_Sf_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(F_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_BFu31i)");
    check_field_offset(lv, v1, 0, "F_Sf_BFu31i.v1");
    check_field_offset(lv, v2, 4, "F_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 4, 0, 31, 1, "F_Sf_BFu31i");
    set_bf_and_test(lv, v3, 4, 0, 31, hide_ull(1LL<<30), "F_Sf_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_BFu31i, F_Sf_BFu31i)
//============================================================================



static void Test_F_Sf_BFu31ll()
{
  {
    init_simple_test("F_Sf_BFu31ll");
    static STRUCT_IF_C F_Sf_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(F_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_BFu31ll)");
    check_field_offset(lv, v1, 0, "F_Sf_BFu31ll.v1");
    check_field_offset(lv, v2, 4, "F_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 31, 1, "F_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 4, 0, 31, hide_ull(1LL<<30), "F_Sf_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_BFu31ll, F_Sf_BFu31ll)
//============================================================================



static void Test_F_Sf_BFu32i()
{
  {
    init_simple_test("F_Sf_BFu32i");
    static STRUCT_IF_C F_Sf_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(F_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_BFu32i)");
    check_field_offset(lv, v1, 0, "F_Sf_BFu32i.v1");
    check_field_offset(lv, v2, 4, "F_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 4, 0, 32, 1, "F_Sf_BFu32i");
    set_bf_and_test(lv, v3, 4, 0, 32, hide_ull(1LL<<31), "F_Sf_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_BFu32i, F_Sf_BFu32i)
//============================================================================



static void Test_F_Sf_BFu32ll()
{
  {
    init_simple_test("F_Sf_BFu32ll");
    static STRUCT_IF_C F_Sf_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(F_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_BFu32ll)");
    check_field_offset(lv, v1, 0, "F_Sf_BFu32ll.v1");
    check_field_offset(lv, v2, 4, "F_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 32, 1, "F_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 4, 0, 32, hide_ull(1LL<<31), "F_Sf_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_BFu32ll, F_Sf_BFu32ll)
//============================================================================



static void Test_F_Sf_BFu33()
{
  {
    init_simple_test("F_Sf_BFu33");
    static STRUCT_IF_C F_Sf_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(F_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_BFu33)");
    check_field_offset(lv, v1, 0, "F_Sf_BFu33.v1");
    check_field_offset(lv, v2, 4, "F_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 4, 0, 33, 1, "F_Sf_BFu33");
    set_bf_and_test(lv, v3, 4, 0, 33, hide_ull(1LL<<32), "F_Sf_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_BFu33, F_Sf_BFu33)
//============================================================================



static void Test_F_Sf_BFu7c()
{
  {
    init_simple_test("F_Sf_BFu7c");
    static STRUCT_IF_C F_Sf_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(F_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_BFu7c)");
    check_field_offset(lv, v1, 0, "F_Sf_BFu7c.v1");
    check_field_offset(lv, v2, 4, "F_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "F_Sf_BFu7c");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "F_Sf_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_BFu7c, F_Sf_BFu7c)
//============================================================================



static void Test_F_Sf_BFu7i()
{
  {
    init_simple_test("F_Sf_BFu7i");
    static STRUCT_IF_C F_Sf_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(F_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_BFu7i)");
    check_field_offset(lv, v1, 0, "F_Sf_BFu7i.v1");
    check_field_offset(lv, v2, 4, "F_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "F_Sf_BFu7i");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "F_Sf_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_BFu7i, F_Sf_BFu7i)
//============================================================================



static void Test_F_Sf_BFu7ll()
{
  {
    init_simple_test("F_Sf_BFu7ll");
    static STRUCT_IF_C F_Sf_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(F_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_BFu7ll)");
    check_field_offset(lv, v1, 0, "F_Sf_BFu7ll.v1");
    check_field_offset(lv, v2, 4, "F_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "F_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "F_Sf_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_BFu7ll, F_Sf_BFu7ll)
//============================================================================



static void Test_F_Sf_BFu7s()
{
  {
    init_simple_test("F_Sf_BFu7s");
    static STRUCT_IF_C F_Sf_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(F_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_BFu7s)");
    check_field_offset(lv, v1, 0, "F_Sf_BFu7s.v1");
    check_field_offset(lv, v2, 4, "F_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "F_Sf_BFu7s");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "F_Sf_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_BFu7s, F_Sf_BFu7s)
//============================================================================



static void Test_F_Sf_BFu8c()
{
  {
    init_simple_test("F_Sf_BFu8c");
    static STRUCT_IF_C F_Sf_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(F_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_BFu8c)");
    check_field_offset(lv, v1, 0, "F_Sf_BFu8c.v1");
    check_field_offset(lv, v2, 4, "F_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "F_Sf_BFu8c");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "F_Sf_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_BFu8c, F_Sf_BFu8c)
//============================================================================



static void Test_F_Sf_BFu8i()
{
  {
    init_simple_test("F_Sf_BFu8i");
    static STRUCT_IF_C F_Sf_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(F_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_BFu8i)");
    check_field_offset(lv, v1, 0, "F_Sf_BFu8i.v1");
    check_field_offset(lv, v2, 4, "F_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "F_Sf_BFu8i");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "F_Sf_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_BFu8i, F_Sf_BFu8i)
//============================================================================



static void Test_F_Sf_BFu8ll()
{
  {
    init_simple_test("F_Sf_BFu8ll");
    static STRUCT_IF_C F_Sf_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(F_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_BFu8ll)");
    check_field_offset(lv, v1, 0, "F_Sf_BFu8ll.v1");
    check_field_offset(lv, v2, 4, "F_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "F_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "F_Sf_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_BFu8ll, F_Sf_BFu8ll)
//============================================================================



static void Test_F_Sf_BFu8s()
{
  {
    init_simple_test("F_Sf_BFu8s");
    static STRUCT_IF_C F_Sf_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(F_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_BFu8s)");
    check_field_offset(lv, v1, 0, "F_Sf_BFu8s.v1");
    check_field_offset(lv, v2, 4, "F_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "F_Sf_BFu8s");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "F_Sf_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_BFu8s, F_Sf_BFu8s)
//============================================================================



static void Test_F_Sf_BFu9i()
{
  {
    init_simple_test("F_Sf_BFu9i");
    static STRUCT_IF_C F_Sf_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(F_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_BFu9i)");
    check_field_offset(lv, v1, 0, "F_Sf_BFu9i.v1");
    check_field_offset(lv, v2, 4, "F_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "F_Sf_BFu9i");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "F_Sf_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_BFu9i, F_Sf_BFu9i)
//============================================================================



static void Test_F_Sf_BFu9ll()
{
  {
    init_simple_test("F_Sf_BFu9ll");
    static STRUCT_IF_C F_Sf_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(F_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_BFu9ll)");
    check_field_offset(lv, v1, 0, "F_Sf_BFu9ll.v1");
    check_field_offset(lv, v2, 4, "F_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "F_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "F_Sf_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_BFu9ll, F_Sf_BFu9ll)
//============================================================================



static void Test_F_Sf_BFu9s()
{
  {
    init_simple_test("F_Sf_BFu9s");
    static STRUCT_IF_C F_Sf_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(F_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_BFu9s)");
    check_field_offset(lv, v1, 0, "F_Sf_BFu9s.v1");
    check_field_offset(lv, v2, 4, "F_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "F_Sf_BFu9s");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "F_Sf_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_BFu9s, F_Sf_BFu9s)
//============================================================================



static void Test_F_Sf_C()
{
  {
    init_simple_test("F_Sf_C");
    STRUCT_IF_C F_Sf_C lv;
    check2(sizeof(lv), 5, "sizeof(F_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_C)");
    check_field_offset(lv, v1, 0, "F_Sf_C.v1");
    check_field_offset(lv, v2, 4, "F_Sf_C.v2");
    check_field_offset(lv, v3, 4, "F_Sf_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_C, F_Sf_C)
//============================================================================



static void Test_F_Sf_D()
{
  {
    init_simple_test("F_Sf_D");
    STRUCT_IF_C F_Sf_D lv;
    check2(sizeof(lv), 12, "sizeof(F_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_D)");
    check_field_offset(lv, v1, 0, "F_Sf_D.v1");
    check_field_offset(lv, v2, 4, "F_Sf_D.v2");
    check_field_offset(lv, v3, 4, "F_Sf_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_D, F_Sf_D)
//============================================================================



static void Test_F_Sf_F()
{
  {
    init_simple_test("F_Sf_F");
    STRUCT_IF_C F_Sf_F lv;
    check2(sizeof(lv), 8, "sizeof(F_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_F)");
    check_field_offset(lv, v1, 0, "F_Sf_F.v1");
    check_field_offset(lv, v2, 4, "F_Sf_F.v2");
    check_field_offset(lv, v3, 4, "F_Sf_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_F, F_Sf_F)
//============================================================================



static void Test_F_Sf_I()
{
  {
    init_simple_test("F_Sf_I");
    STRUCT_IF_C F_Sf_I lv;
    check2(sizeof(lv), 8, "sizeof(F_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_I)");
    check_field_offset(lv, v1, 0, "F_Sf_I.v1");
    check_field_offset(lv, v2, 4, "F_Sf_I.v2");
    check_field_offset(lv, v3, 4, "F_Sf_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_I, F_Sf_I)
//============================================================================



static void Test_F_Sf_Ip()
{
  {
    init_simple_test("F_Sf_Ip");
    STRUCT_IF_C F_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(F_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_Ip)");
    check_field_offset(lv, v1, 0, "F_Sf_Ip.v1");
    check_field_offset(lv, v2, 4, "F_Sf_Ip.v2");
    check_field_offset(lv, v3, 4, "F_Sf_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_Ip, F_Sf_Ip)
//============================================================================



static void Test_F_Sf_L()
{
  {
    init_simple_test("F_Sf_L");
    STRUCT_IF_C F_Sf_L lv;
    check2(sizeof(lv), 12, "sizeof(F_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_L)");
    check_field_offset(lv, v1, 0, "F_Sf_L.v1");
    check_field_offset(lv, v2, 4, "F_Sf_L.v2");
    check_field_offset(lv, v3, 4, "F_Sf_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_L, F_Sf_L)
//============================================================================



static void Test_F_Sf_S()
{
  {
    init_simple_test("F_Sf_S");
    STRUCT_IF_C F_Sf_S lv;
    check2(sizeof(lv), 6, "sizeof(F_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_S)");
    check_field_offset(lv, v1, 0, "F_Sf_S.v1");
    check_field_offset(lv, v2, 4, "F_Sf_S.v2");
    check_field_offset(lv, v3, 4, "F_Sf_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_S, F_Sf_S)
//============================================================================



static void Test_F_Sf_Sf()
{
  {
    init_simple_test("F_Sf_Sf");
    STRUCT_IF_C F_Sf_Sf lv;
    check2(sizeof(lv), 4, "sizeof(F_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_Sf)");
    check_field_offset(lv, v1, 0, "F_Sf_Sf.v1");
    check_field_offset(lv, v2, 4, "F_Sf_Sf.v2");
    check_field_offset(lv, v3, 4, "F_Sf_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_Sf, F_Sf_Sf)
//============================================================================



static void Test_F_Sf_Uc()
{
  {
    init_simple_test("F_Sf_Uc");
    STRUCT_IF_C F_Sf_Uc lv;
    check2(sizeof(lv), 5, "sizeof(F_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_Uc)");
    check_field_offset(lv, v1, 0, "F_Sf_Uc.v1");
    check_field_offset(lv, v2, 4, "F_Sf_Uc.v2");
    check_field_offset(lv, v3, 4, "F_Sf_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_Uc, F_Sf_Uc)
//============================================================================



static void Test_F_Sf_Ui()
{
  {
    init_simple_test("F_Sf_Ui");
    STRUCT_IF_C F_Sf_Ui lv;
    check2(sizeof(lv), 8, "sizeof(F_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_Ui)");
    check_field_offset(lv, v1, 0, "F_Sf_Ui.v1");
    check_field_offset(lv, v2, 4, "F_Sf_Ui.v2");
    check_field_offset(lv, v3, 4, "F_Sf_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_Ui, F_Sf_Ui)
//============================================================================



static void Test_F_Sf_Ul()
{
  {
    init_simple_test("F_Sf_Ul");
    STRUCT_IF_C F_Sf_Ul lv;
    check2(sizeof(lv), 12, "sizeof(F_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_Ul)");
    check_field_offset(lv, v1, 0, "F_Sf_Ul.v1");
    check_field_offset(lv, v2, 4, "F_Sf_Ul.v2");
    check_field_offset(lv, v3, 4, "F_Sf_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_Ul, F_Sf_Ul)
//============================================================================



static void Test_F_Sf_Us()
{
  {
    init_simple_test("F_Sf_Us");
    STRUCT_IF_C F_Sf_Us lv;
    check2(sizeof(lv), 6, "sizeof(F_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_Us)");
    check_field_offset(lv, v1, 0, "F_Sf_Us.v1");
    check_field_offset(lv, v2, 4, "F_Sf_Us.v2");
    check_field_offset(lv, v3, 4, "F_Sf_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_Us, F_Sf_Us)
//============================================================================



static void Test_F_Sf_Vp()
{
  {
    init_simple_test("F_Sf_Vp");
    STRUCT_IF_C F_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(F_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(F_Sf_Vp)");
    check_field_offset(lv, v1, 0, "F_Sf_Vp.v1");
    check_field_offset(lv, v2, 4, "F_Sf_Vp.v2");
    check_field_offset(lv, v3, 4, "F_Sf_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Sf_Vp, F_Sf_Vp)
//============================================================================



static void Test_F_Uc_Sf()
{
  {
    init_simple_test("F_Uc_Sf");
    STRUCT_IF_C F_Uc_Sf lv;
    check2(sizeof(lv), 5, "sizeof(F_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_Uc_Sf)");
    check_field_offset(lv, v1, 0, "F_Uc_Sf.v1");
    check_field_offset(lv, v2, 4, "F_Uc_Sf.v2");
    check_field_offset(lv, v3, 5, "F_Uc_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Uc_Sf, F_Uc_Sf)
//============================================================================



static void Test_F_Ui_Sf()
{
  {
    init_simple_test("F_Ui_Sf");
    STRUCT_IF_C F_Ui_Sf lv;
    check2(sizeof(lv), 8, "sizeof(F_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_Ui_Sf)");
    check_field_offset(lv, v1, 0, "F_Ui_Sf.v1");
    check_field_offset(lv, v2, 4, "F_Ui_Sf.v2");
    check_field_offset(lv, v3, 8, "F_Ui_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Ui_Sf, F_Ui_Sf)
//============================================================================



static void Test_F_Ul_Sf()
{
  {
    init_simple_test("F_Ul_Sf");
    STRUCT_IF_C F_Ul_Sf lv;
    check2(sizeof(lv), 12, "sizeof(F_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_Ul_Sf)");
    check_field_offset(lv, v1, 0, "F_Ul_Sf.v1");
    check_field_offset(lv, v2, 4, "F_Ul_Sf.v2");
    check_field_offset(lv, v3, 12, "F_Ul_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Ul_Sf, F_Ul_Sf)
//============================================================================



static void Test_F_Us_Sf()
{
  {
    init_simple_test("F_Us_Sf");
    STRUCT_IF_C F_Us_Sf lv;
    check2(sizeof(lv), 6, "sizeof(F_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_Us_Sf)");
    check_field_offset(lv, v1, 0, "F_Us_Sf.v1");
    check_field_offset(lv, v2, 4, "F_Us_Sf.v2");
    check_field_offset(lv, v3, 6, "F_Us_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Us_Sf, F_Us_Sf)
//============================================================================



static void Test_F_Vp_Sf()
{
  {
    init_simple_test("F_Vp_Sf");
    STRUCT_IF_C F_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(F_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(F_Vp_Sf)");
    check_field_offset(lv, v1, 0, "F_Vp_Sf.v1");
    check_field_offset(lv, v2, 4, "F_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "F_Vp_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_F_Vp_Sf, F_Vp_Sf)
//============================================================================



static void Test_I_BFu15i_Sf()
{
  {
    init_simple_test("I_BFu15i_Sf");
    static STRUCT_IF_C I_BFu15i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu15i_Sf)");
    check_field_offset(lv, v1, 0, "I_BFu15i_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "I_BFu15i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "I_BFu15i_Sf");
    check_field_offset(lv, v3, 6, "I_BFu15i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu15i_Sf, I_BFu15i_Sf)
//============================================================================



static void Test_I_BFu15ll_Sf()
{
  {
    init_simple_test("I_BFu15ll_Sf");
    static STRUCT_IF_C I_BFu15ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu15ll_Sf)");
    check_field_offset(lv, v1, 0, "I_BFu15ll_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "I_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "I_BFu15ll_Sf");
    check_field_offset(lv, v3, 6, "I_BFu15ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu15ll_Sf, I_BFu15ll_Sf)
//============================================================================



static void Test_I_BFu15s_Sf()
{
  {
    init_simple_test("I_BFu15s_Sf");
    static STRUCT_IF_C I_BFu15s_Sf lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu15s_Sf)");
    check_field_offset(lv, v1, 0, "I_BFu15s_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "I_BFu15s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "I_BFu15s_Sf");
    check_field_offset(lv, v3, 6, "I_BFu15s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu15s_Sf, I_BFu15s_Sf)
//============================================================================



static void Test_I_BFu16i_Sf()
{
  {
    init_simple_test("I_BFu16i_Sf");
    static STRUCT_IF_C I_BFu16i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu16i_Sf)");
    check_field_offset(lv, v1, 0, "I_BFu16i_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "I_BFu16i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "I_BFu16i_Sf");
    check_field_offset(lv, v3, 6, "I_BFu16i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu16i_Sf, I_BFu16i_Sf)
//============================================================================



static void Test_I_BFu16ll_Sf()
{
  {
    init_simple_test("I_BFu16ll_Sf");
    static STRUCT_IF_C I_BFu16ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu16ll_Sf)");
    check_field_offset(lv, v1, 0, "I_BFu16ll_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "I_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "I_BFu16ll_Sf");
    check_field_offset(lv, v3, 6, "I_BFu16ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu16ll_Sf, I_BFu16ll_Sf)
//============================================================================



static void Test_I_BFu16s_Sf()
{
  {
    init_simple_test("I_BFu16s_Sf");
    static STRUCT_IF_C I_BFu16s_Sf lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu16s_Sf)");
    check_field_offset(lv, v1, 0, "I_BFu16s_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "I_BFu16s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "I_BFu16s_Sf");
    check_field_offset(lv, v3, 6, "I_BFu16s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu16s_Sf, I_BFu16s_Sf)
//============================================================================



static void Test_I_BFu17i_Sf()
{
  {
    init_simple_test("I_BFu17i_Sf");
    static STRUCT_IF_C I_BFu17i_Sf lv;
    check2(sizeof(lv), 7, "sizeof(I_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu17i_Sf)");
    check_field_offset(lv, v1, 0, "I_BFu17i_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "I_BFu17i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "I_BFu17i_Sf");
    check_field_offset(lv, v3, 7, "I_BFu17i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu17i_Sf, I_BFu17i_Sf)
//============================================================================



static void Test_I_BFu17ll_Sf()
{
  {
    init_simple_test("I_BFu17ll_Sf");
    static STRUCT_IF_C I_BFu17ll_Sf lv;
    check2(sizeof(lv), 7, "sizeof(I_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu17ll_Sf)");
    check_field_offset(lv, v1, 0, "I_BFu17ll_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "I_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "I_BFu17ll_Sf");
    check_field_offset(lv, v3, 7, "I_BFu17ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu17ll_Sf, I_BFu17ll_Sf)
//============================================================================



static void Test_I_BFu1c_Sf()
{
  {
    init_simple_test("I_BFu1c_Sf");
    static STRUCT_IF_C I_BFu1c_Sf lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu1c_Sf)");
    check_field_offset(lv, v1, 0, "I_BFu1c_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu1c_Sf");
    check_field_offset(lv, v3, 5, "I_BFu1c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu1c_Sf, I_BFu1c_Sf)
//============================================================================



static void Test_I_BFu1i_Sf()
{
  {
    init_simple_test("I_BFu1i_Sf");
    static STRUCT_IF_C I_BFu1i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu1i_Sf)");
    check_field_offset(lv, v1, 0, "I_BFu1i_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu1i_Sf");
    check_field_offset(lv, v3, 5, "I_BFu1i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu1i_Sf, I_BFu1i_Sf)
//============================================================================



static void Test_I_BFu1ll_Sf()
{
  {
    init_simple_test("I_BFu1ll_Sf");
    static STRUCT_IF_C I_BFu1ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu1ll_Sf)");
    check_field_offset(lv, v1, 0, "I_BFu1ll_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu1ll_Sf");
    check_field_offset(lv, v3, 5, "I_BFu1ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu1ll_Sf, I_BFu1ll_Sf)
//============================================================================



static void Test_I_BFu1s_Sf()
{
  {
    init_simple_test("I_BFu1s_Sf");
    static STRUCT_IF_C I_BFu1s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu1s_Sf)");
    check_field_offset(lv, v1, 0, "I_BFu1s_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "I_BFu1s_Sf");
    check_field_offset(lv, v3, 5, "I_BFu1s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu1s_Sf, I_BFu1s_Sf)
//============================================================================



static void Test_I_BFu31i_Sf()
{
  {
    init_simple_test("I_BFu31i_Sf");
    static STRUCT_IF_C I_BFu31i_Sf lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu31i_Sf)");
    check_field_offset(lv, v1, 0, "I_BFu31i_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "I_BFu31i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "I_BFu31i_Sf");
    check_field_offset(lv, v3, 8, "I_BFu31i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu31i_Sf, I_BFu31i_Sf)
//============================================================================



static void Test_I_BFu31ll_Sf()
{
  {
    init_simple_test("I_BFu31ll_Sf");
    static STRUCT_IF_C I_BFu31ll_Sf lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu31ll_Sf)");
    check_field_offset(lv, v1, 0, "I_BFu31ll_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "I_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "I_BFu31ll_Sf");
    check_field_offset(lv, v3, 8, "I_BFu31ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu31ll_Sf, I_BFu31ll_Sf)
//============================================================================



static void Test_I_BFu32i_Sf()
{
  {
    init_simple_test("I_BFu32i_Sf");
    static STRUCT_IF_C I_BFu32i_Sf lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu32i_Sf)");
    check_field_offset(lv, v1, 0, "I_BFu32i_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "I_BFu32i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "I_BFu32i_Sf");
    check_field_offset(lv, v3, 8, "I_BFu32i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu32i_Sf, I_BFu32i_Sf)
//============================================================================



static void Test_I_BFu32ll_Sf()
{
  {
    init_simple_test("I_BFu32ll_Sf");
    static STRUCT_IF_C I_BFu32ll_Sf lv;
    check2(sizeof(lv), 8, "sizeof(I_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu32ll_Sf)");
    check_field_offset(lv, v1, 0, "I_BFu32ll_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "I_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "I_BFu32ll_Sf");
    check_field_offset(lv, v3, 8, "I_BFu32ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu32ll_Sf, I_BFu32ll_Sf)
//============================================================================



static void Test_I_BFu33_Sf()
{
  {
    init_simple_test("I_BFu33_Sf");
    static STRUCT_IF_C I_BFu33_Sf lv;
    check2(sizeof(lv), 9, "sizeof(I_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu33_Sf)");
    check_field_offset(lv, v1, 0, "I_BFu33_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "I_BFu33_Sf");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "I_BFu33_Sf");
    check_field_offset(lv, v3, 9, "I_BFu33_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu33_Sf, I_BFu33_Sf)
//============================================================================



static void Test_I_BFu7c_Sf()
{
  {
    init_simple_test("I_BFu7c_Sf");
    static STRUCT_IF_C I_BFu7c_Sf lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu7c_Sf)");
    check_field_offset(lv, v1, 0, "I_BFu7c_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu7c_Sf");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu7c_Sf");
    check_field_offset(lv, v3, 5, "I_BFu7c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu7c_Sf, I_BFu7c_Sf)
//============================================================================



static void Test_I_BFu7i_Sf()
{
  {
    init_simple_test("I_BFu7i_Sf");
    static STRUCT_IF_C I_BFu7i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu7i_Sf)");
    check_field_offset(lv, v1, 0, "I_BFu7i_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu7i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu7i_Sf");
    check_field_offset(lv, v3, 5, "I_BFu7i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu7i_Sf, I_BFu7i_Sf)
//============================================================================



static void Test_I_BFu7ll_Sf()
{
  {
    init_simple_test("I_BFu7ll_Sf");
    static STRUCT_IF_C I_BFu7ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu7ll_Sf)");
    check_field_offset(lv, v1, 0, "I_BFu7ll_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu7ll_Sf");
    check_field_offset(lv, v3, 5, "I_BFu7ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu7ll_Sf, I_BFu7ll_Sf)
//============================================================================



static void Test_I_BFu7s_Sf()
{
  {
    init_simple_test("I_BFu7s_Sf");
    static STRUCT_IF_C I_BFu7s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu7s_Sf)");
    check_field_offset(lv, v1, 0, "I_BFu7s_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "I_BFu7s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "I_BFu7s_Sf");
    check_field_offset(lv, v3, 5, "I_BFu7s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu7s_Sf, I_BFu7s_Sf)
//============================================================================



static void Test_I_BFu8c_Sf()
{
  {
    init_simple_test("I_BFu8c_Sf");
    static STRUCT_IF_C I_BFu8c_Sf lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu8c_Sf)");
    check_field_offset(lv, v1, 0, "I_BFu8c_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu8c_Sf");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu8c_Sf");
    check_field_offset(lv, v3, 5, "I_BFu8c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu8c_Sf, I_BFu8c_Sf)
//============================================================================



static void Test_I_BFu8i_Sf()
{
  {
    init_simple_test("I_BFu8i_Sf");
    static STRUCT_IF_C I_BFu8i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu8i_Sf)");
    check_field_offset(lv, v1, 0, "I_BFu8i_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu8i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu8i_Sf");
    check_field_offset(lv, v3, 5, "I_BFu8i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu8i_Sf, I_BFu8i_Sf)
//============================================================================



static void Test_I_BFu8ll_Sf()
{
  {
    init_simple_test("I_BFu8ll_Sf");
    static STRUCT_IF_C I_BFu8ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu8ll_Sf)");
    check_field_offset(lv, v1, 0, "I_BFu8ll_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu8ll_Sf");
    check_field_offset(lv, v3, 5, "I_BFu8ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu8ll_Sf, I_BFu8ll_Sf)
//============================================================================



static void Test_I_BFu8s_Sf()
{
  {
    init_simple_test("I_BFu8s_Sf");
    static STRUCT_IF_C I_BFu8s_Sf lv;
    check2(sizeof(lv), 5, "sizeof(I_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu8s_Sf)");
    check_field_offset(lv, v1, 0, "I_BFu8s_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "I_BFu8s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "I_BFu8s_Sf");
    check_field_offset(lv, v3, 5, "I_BFu8s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu8s_Sf, I_BFu8s_Sf)
//============================================================================



static void Test_I_BFu9i_Sf()
{
  {
    init_simple_test("I_BFu9i_Sf");
    static STRUCT_IF_C I_BFu9i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu9i_Sf)");
    check_field_offset(lv, v1, 0, "I_BFu9i_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "I_BFu9i_Sf");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "I_BFu9i_Sf");
    check_field_offset(lv, v3, 6, "I_BFu9i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu9i_Sf, I_BFu9i_Sf)
//============================================================================



static void Test_I_BFu9ll_Sf()
{
  {
    init_simple_test("I_BFu9ll_Sf");
    static STRUCT_IF_C I_BFu9ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu9ll_Sf)");
    check_field_offset(lv, v1, 0, "I_BFu9ll_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "I_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "I_BFu9ll_Sf");
    check_field_offset(lv, v3, 6, "I_BFu9ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu9ll_Sf, I_BFu9ll_Sf)
//============================================================================



static void Test_I_BFu9s_Sf()
{
  {
    init_simple_test("I_BFu9s_Sf");
    static STRUCT_IF_C I_BFu9s_Sf lv;
    check2(sizeof(lv), 6, "sizeof(I_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_BFu9s_Sf)");
    check_field_offset(lv, v1, 0, "I_BFu9s_Sf.v1");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "I_BFu9s_Sf");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "I_BFu9s_Sf");
    check_field_offset(lv, v3, 6, "I_BFu9s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_BFu9s_Sf, I_BFu9s_Sf)
//============================================================================



static void Test_I_C_Sf()
{
  {
    init_simple_test("I_C_Sf");
    STRUCT_IF_C I_C_Sf lv;
    check2(sizeof(lv), 5, "sizeof(I_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_C_Sf)");
    check_field_offset(lv, v1, 0, "I_C_Sf.v1");
    check_field_offset(lv, v2, 4, "I_C_Sf.v2");
    check_field_offset(lv, v3, 5, "I_C_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_C_Sf, I_C_Sf)
//============================================================================



static void Test_I_D_Sf()
{
  {
    init_simple_test("I_D_Sf");
    STRUCT_IF_C I_D_Sf lv;
    check2(sizeof(lv), 12, "sizeof(I_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_D_Sf)");
    check_field_offset(lv, v1, 0, "I_D_Sf.v1");
    check_field_offset(lv, v2, 4, "I_D_Sf.v2");
    check_field_offset(lv, v3, 12, "I_D_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_D_Sf, I_D_Sf)
//============================================================================



static void Test_I_F_Sf()
{
  {
    init_simple_test("I_F_Sf");
    STRUCT_IF_C I_F_Sf lv;
    check2(sizeof(lv), 8, "sizeof(I_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_F_Sf)");
    check_field_offset(lv, v1, 0, "I_F_Sf.v1");
    check_field_offset(lv, v2, 4, "I_F_Sf.v2");
    check_field_offset(lv, v3, 8, "I_F_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_F_Sf, I_F_Sf)
//============================================================================



static void Test_I_I_Sf()
{
  {
    init_simple_test("I_I_Sf");
    STRUCT_IF_C I_I_Sf lv;
    check2(sizeof(lv), 8, "sizeof(I_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_I_Sf)");
    check_field_offset(lv, v1, 0, "I_I_Sf.v1");
    check_field_offset(lv, v2, 4, "I_I_Sf.v2");
    check_field_offset(lv, v3, 8, "I_I_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_I_Sf, I_I_Sf)
//============================================================================



static void Test_I_Ip_Sf()
{
  {
    init_simple_test("I_Ip_Sf");
    STRUCT_IF_C I_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(I_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_Ip_Sf)");
    check_field_offset(lv, v1, 0, "I_Ip_Sf.v1");
    check_field_offset(lv, v2, 4, "I_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "I_Ip_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Ip_Sf, I_Ip_Sf)
//============================================================================



static void Test_I_L_Sf()
{
  {
    init_simple_test("I_L_Sf");
    STRUCT_IF_C I_L_Sf lv;
    check2(sizeof(lv), 12, "sizeof(I_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_L_Sf)");
    check_field_offset(lv, v1, 0, "I_L_Sf.v1");
    check_field_offset(lv, v2, 4, "I_L_Sf.v2");
    check_field_offset(lv, v3, 12, "I_L_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_L_Sf, I_L_Sf)
//============================================================================



static void Test_I_S_Sf()
{
  {
    init_simple_test("I_S_Sf");
    STRUCT_IF_C I_S_Sf lv;
    check2(sizeof(lv), 6, "sizeof(I_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_S_Sf)");
    check_field_offset(lv, v1, 0, "I_S_Sf.v1");
    check_field_offset(lv, v2, 4, "I_S_Sf.v2");
    check_field_offset(lv, v3, 6, "I_S_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_S_Sf, I_S_Sf)
//============================================================================



static void Test_I_Sf()
{
  {
    init_simple_test("I_Sf");
    STRUCT_IF_C I_Sf lv;
    check2(sizeof(lv), 4, "sizeof(I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf)");
    check_field_offset(lv, v1, 0, "I_Sf.v1");
    check_field_offset(lv, v2, 4, "I_Sf.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf, I_Sf)
//============================================================================



static void Test_I_Sf_BFu15i()
{
  {
    init_simple_test("I_Sf_BFu15i");
    static STRUCT_IF_C I_Sf_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(I_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_BFu15i)");
    check_field_offset(lv, v1, 0, "I_Sf_BFu15i.v1");
    check_field_offset(lv, v2, 4, "I_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "I_Sf_BFu15i");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "I_Sf_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_BFu15i, I_Sf_BFu15i)
//============================================================================



static void Test_I_Sf_BFu15ll()
{
  {
    init_simple_test("I_Sf_BFu15ll");
    static STRUCT_IF_C I_Sf_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(I_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_BFu15ll)");
    check_field_offset(lv, v1, 0, "I_Sf_BFu15ll.v1");
    check_field_offset(lv, v2, 4, "I_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "I_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "I_Sf_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_BFu15ll, I_Sf_BFu15ll)
//============================================================================



static void Test_I_Sf_BFu15s()
{
  {
    init_simple_test("I_Sf_BFu15s");
    static STRUCT_IF_C I_Sf_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(I_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_BFu15s)");
    check_field_offset(lv, v1, 0, "I_Sf_BFu15s.v1");
    check_field_offset(lv, v2, 4, "I_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "I_Sf_BFu15s");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "I_Sf_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_BFu15s, I_Sf_BFu15s)
//============================================================================



static void Test_I_Sf_BFu16i()
{
  {
    init_simple_test("I_Sf_BFu16i");
    static STRUCT_IF_C I_Sf_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(I_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_BFu16i)");
    check_field_offset(lv, v1, 0, "I_Sf_BFu16i.v1");
    check_field_offset(lv, v2, 4, "I_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "I_Sf_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "I_Sf_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_BFu16i, I_Sf_BFu16i)
//============================================================================



static void Test_I_Sf_BFu16ll()
{
  {
    init_simple_test("I_Sf_BFu16ll");
    static STRUCT_IF_C I_Sf_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(I_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_BFu16ll)");
    check_field_offset(lv, v1, 0, "I_Sf_BFu16ll.v1");
    check_field_offset(lv, v2, 4, "I_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "I_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "I_Sf_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_BFu16ll, I_Sf_BFu16ll)
//============================================================================



static void Test_I_Sf_BFu16s()
{
  {
    init_simple_test("I_Sf_BFu16s");
    static STRUCT_IF_C I_Sf_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(I_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_BFu16s)");
    check_field_offset(lv, v1, 0, "I_Sf_BFu16s.v1");
    check_field_offset(lv, v2, 4, "I_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "I_Sf_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "I_Sf_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_BFu16s, I_Sf_BFu16s)
//============================================================================



static void Test_I_Sf_BFu17i()
{
  {
    init_simple_test("I_Sf_BFu17i");
    static STRUCT_IF_C I_Sf_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(I_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_BFu17i)");
    check_field_offset(lv, v1, 0, "I_Sf_BFu17i.v1");
    check_field_offset(lv, v2, 4, "I_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 4, 0, 17, 1, "I_Sf_BFu17i");
    set_bf_and_test(lv, v3, 4, 0, 17, hide_ull(1LL<<16), "I_Sf_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_BFu17i, I_Sf_BFu17i)
//============================================================================



static void Test_I_Sf_BFu17ll()
{
  {
    init_simple_test("I_Sf_BFu17ll");
    static STRUCT_IF_C I_Sf_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(I_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_BFu17ll)");
    check_field_offset(lv, v1, 0, "I_Sf_BFu17ll.v1");
    check_field_offset(lv, v2, 4, "I_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 17, 1, "I_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 4, 0, 17, hide_ull(1LL<<16), "I_Sf_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_BFu17ll, I_Sf_BFu17ll)
//============================================================================



static void Test_I_Sf_BFu1c()
{
  {
    init_simple_test("I_Sf_BFu1c");
    static STRUCT_IF_C I_Sf_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(I_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_BFu1c)");
    check_field_offset(lv, v1, 0, "I_Sf_BFu1c.v1");
    check_field_offset(lv, v2, 4, "I_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "I_Sf_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_BFu1c, I_Sf_BFu1c)
//============================================================================



static void Test_I_Sf_BFu1i()
{
  {
    init_simple_test("I_Sf_BFu1i");
    static STRUCT_IF_C I_Sf_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(I_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_BFu1i)");
    check_field_offset(lv, v1, 0, "I_Sf_BFu1i.v1");
    check_field_offset(lv, v2, 4, "I_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "I_Sf_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_BFu1i, I_Sf_BFu1i)
//============================================================================



static void Test_I_Sf_BFu1ll()
{
  {
    init_simple_test("I_Sf_BFu1ll");
    static STRUCT_IF_C I_Sf_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(I_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_BFu1ll)");
    check_field_offset(lv, v1, 0, "I_Sf_BFu1ll.v1");
    check_field_offset(lv, v2, 4, "I_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "I_Sf_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_BFu1ll, I_Sf_BFu1ll)
//============================================================================



static void Test_I_Sf_BFu1s()
{
  {
    init_simple_test("I_Sf_BFu1s");
    static STRUCT_IF_C I_Sf_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(I_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_BFu1s)");
    check_field_offset(lv, v1, 0, "I_Sf_BFu1s.v1");
    check_field_offset(lv, v2, 4, "I_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "I_Sf_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_BFu1s, I_Sf_BFu1s)
//============================================================================



static void Test_I_Sf_BFu31i()
{
  {
    init_simple_test("I_Sf_BFu31i");
    static STRUCT_IF_C I_Sf_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(I_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_BFu31i)");
    check_field_offset(lv, v1, 0, "I_Sf_BFu31i.v1");
    check_field_offset(lv, v2, 4, "I_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 4, 0, 31, 1, "I_Sf_BFu31i");
    set_bf_and_test(lv, v3, 4, 0, 31, hide_ull(1LL<<30), "I_Sf_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_BFu31i, I_Sf_BFu31i)
//============================================================================



static void Test_I_Sf_BFu31ll()
{
  {
    init_simple_test("I_Sf_BFu31ll");
    static STRUCT_IF_C I_Sf_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(I_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_BFu31ll)");
    check_field_offset(lv, v1, 0, "I_Sf_BFu31ll.v1");
    check_field_offset(lv, v2, 4, "I_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 31, 1, "I_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 4, 0, 31, hide_ull(1LL<<30), "I_Sf_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_BFu31ll, I_Sf_BFu31ll)
//============================================================================



static void Test_I_Sf_BFu32i()
{
  {
    init_simple_test("I_Sf_BFu32i");
    static STRUCT_IF_C I_Sf_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(I_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_BFu32i)");
    check_field_offset(lv, v1, 0, "I_Sf_BFu32i.v1");
    check_field_offset(lv, v2, 4, "I_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 4, 0, 32, 1, "I_Sf_BFu32i");
    set_bf_and_test(lv, v3, 4, 0, 32, hide_ull(1LL<<31), "I_Sf_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_BFu32i, I_Sf_BFu32i)
//============================================================================



static void Test_I_Sf_BFu32ll()
{
  {
    init_simple_test("I_Sf_BFu32ll");
    static STRUCT_IF_C I_Sf_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(I_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_BFu32ll)");
    check_field_offset(lv, v1, 0, "I_Sf_BFu32ll.v1");
    check_field_offset(lv, v2, 4, "I_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 32, 1, "I_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 4, 0, 32, hide_ull(1LL<<31), "I_Sf_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_BFu32ll, I_Sf_BFu32ll)
//============================================================================



static void Test_I_Sf_BFu33()
{
  {
    init_simple_test("I_Sf_BFu33");
    static STRUCT_IF_C I_Sf_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(I_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_BFu33)");
    check_field_offset(lv, v1, 0, "I_Sf_BFu33.v1");
    check_field_offset(lv, v2, 4, "I_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 4, 0, 33, 1, "I_Sf_BFu33");
    set_bf_and_test(lv, v3, 4, 0, 33, hide_ull(1LL<<32), "I_Sf_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_BFu33, I_Sf_BFu33)
//============================================================================



static void Test_I_Sf_BFu7c()
{
  {
    init_simple_test("I_Sf_BFu7c");
    static STRUCT_IF_C I_Sf_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(I_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_BFu7c)");
    check_field_offset(lv, v1, 0, "I_Sf_BFu7c.v1");
    check_field_offset(lv, v2, 4, "I_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "I_Sf_BFu7c");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "I_Sf_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_BFu7c, I_Sf_BFu7c)
//============================================================================



static void Test_I_Sf_BFu7i()
{
  {
    init_simple_test("I_Sf_BFu7i");
    static STRUCT_IF_C I_Sf_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(I_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_BFu7i)");
    check_field_offset(lv, v1, 0, "I_Sf_BFu7i.v1");
    check_field_offset(lv, v2, 4, "I_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "I_Sf_BFu7i");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "I_Sf_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_BFu7i, I_Sf_BFu7i)
//============================================================================



static void Test_I_Sf_BFu7ll()
{
  {
    init_simple_test("I_Sf_BFu7ll");
    static STRUCT_IF_C I_Sf_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(I_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_BFu7ll)");
    check_field_offset(lv, v1, 0, "I_Sf_BFu7ll.v1");
    check_field_offset(lv, v2, 4, "I_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "I_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "I_Sf_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_BFu7ll, I_Sf_BFu7ll)
//============================================================================



static void Test_I_Sf_BFu7s()
{
  {
    init_simple_test("I_Sf_BFu7s");
    static STRUCT_IF_C I_Sf_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(I_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_BFu7s)");
    check_field_offset(lv, v1, 0, "I_Sf_BFu7s.v1");
    check_field_offset(lv, v2, 4, "I_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "I_Sf_BFu7s");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "I_Sf_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_BFu7s, I_Sf_BFu7s)
//============================================================================



static void Test_I_Sf_BFu8c()
{
  {
    init_simple_test("I_Sf_BFu8c");
    static STRUCT_IF_C I_Sf_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(I_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_BFu8c)");
    check_field_offset(lv, v1, 0, "I_Sf_BFu8c.v1");
    check_field_offset(lv, v2, 4, "I_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "I_Sf_BFu8c");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "I_Sf_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_BFu8c, I_Sf_BFu8c)
//============================================================================



static void Test_I_Sf_BFu8i()
{
  {
    init_simple_test("I_Sf_BFu8i");
    static STRUCT_IF_C I_Sf_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(I_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_BFu8i)");
    check_field_offset(lv, v1, 0, "I_Sf_BFu8i.v1");
    check_field_offset(lv, v2, 4, "I_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "I_Sf_BFu8i");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "I_Sf_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_BFu8i, I_Sf_BFu8i)
//============================================================================



static void Test_I_Sf_BFu8ll()
{
  {
    init_simple_test("I_Sf_BFu8ll");
    static STRUCT_IF_C I_Sf_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(I_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_BFu8ll)");
    check_field_offset(lv, v1, 0, "I_Sf_BFu8ll.v1");
    check_field_offset(lv, v2, 4, "I_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "I_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "I_Sf_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_BFu8ll, I_Sf_BFu8ll)
//============================================================================



static void Test_I_Sf_BFu8s()
{
  {
    init_simple_test("I_Sf_BFu8s");
    static STRUCT_IF_C I_Sf_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(I_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_BFu8s)");
    check_field_offset(lv, v1, 0, "I_Sf_BFu8s.v1");
    check_field_offset(lv, v2, 4, "I_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "I_Sf_BFu8s");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "I_Sf_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_BFu8s, I_Sf_BFu8s)
//============================================================================



static void Test_I_Sf_BFu9i()
{
  {
    init_simple_test("I_Sf_BFu9i");
    static STRUCT_IF_C I_Sf_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(I_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_BFu9i)");
    check_field_offset(lv, v1, 0, "I_Sf_BFu9i.v1");
    check_field_offset(lv, v2, 4, "I_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "I_Sf_BFu9i");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "I_Sf_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_BFu9i, I_Sf_BFu9i)
//============================================================================



static void Test_I_Sf_BFu9ll()
{
  {
    init_simple_test("I_Sf_BFu9ll");
    static STRUCT_IF_C I_Sf_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(I_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_BFu9ll)");
    check_field_offset(lv, v1, 0, "I_Sf_BFu9ll.v1");
    check_field_offset(lv, v2, 4, "I_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "I_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "I_Sf_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_BFu9ll, I_Sf_BFu9ll)
//============================================================================



static void Test_I_Sf_BFu9s()
{
  {
    init_simple_test("I_Sf_BFu9s");
    static STRUCT_IF_C I_Sf_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(I_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_BFu9s)");
    check_field_offset(lv, v1, 0, "I_Sf_BFu9s.v1");
    check_field_offset(lv, v2, 4, "I_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "I_Sf_BFu9s");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "I_Sf_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_BFu9s, I_Sf_BFu9s)
//============================================================================



static void Test_I_Sf_C()
{
  {
    init_simple_test("I_Sf_C");
    STRUCT_IF_C I_Sf_C lv;
    check2(sizeof(lv), 5, "sizeof(I_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_C)");
    check_field_offset(lv, v1, 0, "I_Sf_C.v1");
    check_field_offset(lv, v2, 4, "I_Sf_C.v2");
    check_field_offset(lv, v3, 4, "I_Sf_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_C, I_Sf_C)
//============================================================================



static void Test_I_Sf_D()
{
  {
    init_simple_test("I_Sf_D");
    STRUCT_IF_C I_Sf_D lv;
    check2(sizeof(lv), 12, "sizeof(I_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_D)");
    check_field_offset(lv, v1, 0, "I_Sf_D.v1");
    check_field_offset(lv, v2, 4, "I_Sf_D.v2");
    check_field_offset(lv, v3, 4, "I_Sf_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_D, I_Sf_D)
//============================================================================



static void Test_I_Sf_F()
{
  {
    init_simple_test("I_Sf_F");
    STRUCT_IF_C I_Sf_F lv;
    check2(sizeof(lv), 8, "sizeof(I_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_F)");
    check_field_offset(lv, v1, 0, "I_Sf_F.v1");
    check_field_offset(lv, v2, 4, "I_Sf_F.v2");
    check_field_offset(lv, v3, 4, "I_Sf_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_F, I_Sf_F)
//============================================================================



static void Test_I_Sf_I()
{
  {
    init_simple_test("I_Sf_I");
    STRUCT_IF_C I_Sf_I lv;
    check2(sizeof(lv), 8, "sizeof(I_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_I)");
    check_field_offset(lv, v1, 0, "I_Sf_I.v1");
    check_field_offset(lv, v2, 4, "I_Sf_I.v2");
    check_field_offset(lv, v3, 4, "I_Sf_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_I, I_Sf_I)
//============================================================================



static void Test_I_Sf_Ip()
{
  {
    init_simple_test("I_Sf_Ip");
    STRUCT_IF_C I_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(I_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_Ip)");
    check_field_offset(lv, v1, 0, "I_Sf_Ip.v1");
    check_field_offset(lv, v2, 4, "I_Sf_Ip.v2");
    check_field_offset(lv, v3, 4, "I_Sf_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_Ip, I_Sf_Ip)
//============================================================================



static void Test_I_Sf_L()
{
  {
    init_simple_test("I_Sf_L");
    STRUCT_IF_C I_Sf_L lv;
    check2(sizeof(lv), 12, "sizeof(I_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_L)");
    check_field_offset(lv, v1, 0, "I_Sf_L.v1");
    check_field_offset(lv, v2, 4, "I_Sf_L.v2");
    check_field_offset(lv, v3, 4, "I_Sf_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_L, I_Sf_L)
//============================================================================



static void Test_I_Sf_S()
{
  {
    init_simple_test("I_Sf_S");
    STRUCT_IF_C I_Sf_S lv;
    check2(sizeof(lv), 6, "sizeof(I_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_S)");
    check_field_offset(lv, v1, 0, "I_Sf_S.v1");
    check_field_offset(lv, v2, 4, "I_Sf_S.v2");
    check_field_offset(lv, v3, 4, "I_Sf_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_S, I_Sf_S)
//============================================================================



static void Test_I_Sf_Sf()
{
  {
    init_simple_test("I_Sf_Sf");
    STRUCT_IF_C I_Sf_Sf lv;
    check2(sizeof(lv), 4, "sizeof(I_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_Sf)");
    check_field_offset(lv, v1, 0, "I_Sf_Sf.v1");
    check_field_offset(lv, v2, 4, "I_Sf_Sf.v2");
    check_field_offset(lv, v3, 4, "I_Sf_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_Sf, I_Sf_Sf)
//============================================================================



static void Test_I_Sf_Uc()
{
  {
    init_simple_test("I_Sf_Uc");
    STRUCT_IF_C I_Sf_Uc lv;
    check2(sizeof(lv), 5, "sizeof(I_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_Uc)");
    check_field_offset(lv, v1, 0, "I_Sf_Uc.v1");
    check_field_offset(lv, v2, 4, "I_Sf_Uc.v2");
    check_field_offset(lv, v3, 4, "I_Sf_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_Uc, I_Sf_Uc)
//============================================================================



static void Test_I_Sf_Ui()
{
  {
    init_simple_test("I_Sf_Ui");
    STRUCT_IF_C I_Sf_Ui lv;
    check2(sizeof(lv), 8, "sizeof(I_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_Ui)");
    check_field_offset(lv, v1, 0, "I_Sf_Ui.v1");
    check_field_offset(lv, v2, 4, "I_Sf_Ui.v2");
    check_field_offset(lv, v3, 4, "I_Sf_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_Ui, I_Sf_Ui)
//============================================================================



static void Test_I_Sf_Ul()
{
  {
    init_simple_test("I_Sf_Ul");
    STRUCT_IF_C I_Sf_Ul lv;
    check2(sizeof(lv), 12, "sizeof(I_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_Ul)");
    check_field_offset(lv, v1, 0, "I_Sf_Ul.v1");
    check_field_offset(lv, v2, 4, "I_Sf_Ul.v2");
    check_field_offset(lv, v3, 4, "I_Sf_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_Ul, I_Sf_Ul)
//============================================================================



static void Test_I_Sf_Us()
{
  {
    init_simple_test("I_Sf_Us");
    STRUCT_IF_C I_Sf_Us lv;
    check2(sizeof(lv), 6, "sizeof(I_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_Us)");
    check_field_offset(lv, v1, 0, "I_Sf_Us.v1");
    check_field_offset(lv, v2, 4, "I_Sf_Us.v2");
    check_field_offset(lv, v3, 4, "I_Sf_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_Us, I_Sf_Us)
//============================================================================



static void Test_I_Sf_Vp()
{
  {
    init_simple_test("I_Sf_Vp");
    STRUCT_IF_C I_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(I_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(I_Sf_Vp)");
    check_field_offset(lv, v1, 0, "I_Sf_Vp.v1");
    check_field_offset(lv, v2, 4, "I_Sf_Vp.v2");
    check_field_offset(lv, v3, 4, "I_Sf_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Sf_Vp, I_Sf_Vp)
//============================================================================



static void Test_I_Uc_Sf()
{
  {
    init_simple_test("I_Uc_Sf");
    STRUCT_IF_C I_Uc_Sf lv;
    check2(sizeof(lv), 5, "sizeof(I_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_Uc_Sf)");
    check_field_offset(lv, v1, 0, "I_Uc_Sf.v1");
    check_field_offset(lv, v2, 4, "I_Uc_Sf.v2");
    check_field_offset(lv, v3, 5, "I_Uc_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Uc_Sf, I_Uc_Sf)
//============================================================================



static void Test_I_Ui_Sf()
{
  {
    init_simple_test("I_Ui_Sf");
    STRUCT_IF_C I_Ui_Sf lv;
    check2(sizeof(lv), 8, "sizeof(I_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_Ui_Sf)");
    check_field_offset(lv, v1, 0, "I_Ui_Sf.v1");
    check_field_offset(lv, v2, 4, "I_Ui_Sf.v2");
    check_field_offset(lv, v3, 8, "I_Ui_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Ui_Sf, I_Ui_Sf)
//============================================================================



static void Test_I_Ul_Sf()
{
  {
    init_simple_test("I_Ul_Sf");
    STRUCT_IF_C I_Ul_Sf lv;
    check2(sizeof(lv), 12, "sizeof(I_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_Ul_Sf)");
    check_field_offset(lv, v1, 0, "I_Ul_Sf.v1");
    check_field_offset(lv, v2, 4, "I_Ul_Sf.v2");
    check_field_offset(lv, v3, 12, "I_Ul_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Ul_Sf, I_Ul_Sf)
//============================================================================



static void Test_I_Us_Sf()
{
  {
    init_simple_test("I_Us_Sf");
    STRUCT_IF_C I_Us_Sf lv;
    check2(sizeof(lv), 6, "sizeof(I_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_Us_Sf)");
    check_field_offset(lv, v1, 0, "I_Us_Sf.v1");
    check_field_offset(lv, v2, 4, "I_Us_Sf.v2");
    check_field_offset(lv, v3, 6, "I_Us_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Us_Sf, I_Us_Sf)
//============================================================================



static void Test_I_Vp_Sf()
{
  {
    init_simple_test("I_Vp_Sf");
    STRUCT_IF_C I_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(I_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(I_Vp_Sf)");
    check_field_offset(lv, v1, 0, "I_Vp_Sf.v1");
    check_field_offset(lv, v2, 4, "I_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "I_Vp_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_I_Vp_Sf, I_Vp_Sf)
//============================================================================



static void Test_Ip_BFu15i_Sf()
{
  {
    init_simple_test("Ip_BFu15i_Sf");
    static STRUCT_IF_C Ip_BFu15i_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu15i_Sf)");
    check_field_offset(lv, v1, 0, "Ip_BFu15i_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Ip_BFu15i_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ip_BFu15i_Sf");
    check_field_offset(lv, v3, ABISELECT(10,6), "Ip_BFu15i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu15i_Sf, Ip_BFu15i_Sf)
//============================================================================



static void Test_Ip_BFu15ll_Sf()
{
  {
    init_simple_test("Ip_BFu15ll_Sf");
    static STRUCT_IF_C Ip_BFu15ll_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu15ll_Sf)");
    check_field_offset(lv, v1, 0, "Ip_BFu15ll_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Ip_BFu15ll_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ip_BFu15ll_Sf");
    check_field_offset(lv, v3, ABISELECT(10,6), "Ip_BFu15ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu15ll_Sf, Ip_BFu15ll_Sf)
//============================================================================



static void Test_Ip_BFu15s_Sf()
{
  {
    init_simple_test("Ip_BFu15s_Sf");
    static STRUCT_IF_C Ip_BFu15s_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu15s_Sf)");
    check_field_offset(lv, v1, 0, "Ip_BFu15s_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "Ip_BFu15s_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ip_BFu15s_Sf");
    check_field_offset(lv, v3, ABISELECT(10,6), "Ip_BFu15s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu15s_Sf, Ip_BFu15s_Sf)
//============================================================================



static void Test_Ip_BFu16i_Sf()
{
  {
    init_simple_test("Ip_BFu16i_Sf");
    static STRUCT_IF_C Ip_BFu16i_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu16i_Sf)");
    check_field_offset(lv, v1, 0, "Ip_BFu16i_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Ip_BFu16i_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ip_BFu16i_Sf");
    check_field_offset(lv, v3, ABISELECT(10,6), "Ip_BFu16i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu16i_Sf, Ip_BFu16i_Sf)
//============================================================================



static void Test_Ip_BFu16ll_Sf()
{
  {
    init_simple_test("Ip_BFu16ll_Sf");
    static STRUCT_IF_C Ip_BFu16ll_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu16ll_Sf)");
    check_field_offset(lv, v1, 0, "Ip_BFu16ll_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Ip_BFu16ll_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ip_BFu16ll_Sf");
    check_field_offset(lv, v3, ABISELECT(10,6), "Ip_BFu16ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu16ll_Sf, Ip_BFu16ll_Sf)
//============================================================================



static void Test_Ip_BFu16s_Sf()
{
  {
    init_simple_test("Ip_BFu16s_Sf");
    static STRUCT_IF_C Ip_BFu16s_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu16s_Sf)");
    check_field_offset(lv, v1, 0, "Ip_BFu16s_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "Ip_BFu16s_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ip_BFu16s_Sf");
    check_field_offset(lv, v3, ABISELECT(10,6), "Ip_BFu16s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu16s_Sf, Ip_BFu16s_Sf)
//============================================================================



static void Test_Ip_BFu17i_Sf()
{
  {
    init_simple_test("Ip_BFu17i_Sf");
    static STRUCT_IF_C Ip_BFu17i_Sf lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(Ip_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu17i_Sf)");
    check_field_offset(lv, v1, 0, "Ip_BFu17i_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "Ip_BFu17i_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "Ip_BFu17i_Sf");
    check_field_offset(lv, v3, ABISELECT(11,7), "Ip_BFu17i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu17i_Sf, Ip_BFu17i_Sf)
//============================================================================



static void Test_Ip_BFu17ll_Sf()
{
  {
    init_simple_test("Ip_BFu17ll_Sf");
    static STRUCT_IF_C Ip_BFu17ll_Sf lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(Ip_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu17ll_Sf)");
    check_field_offset(lv, v1, 0, "Ip_BFu17ll_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "Ip_BFu17ll_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "Ip_BFu17ll_Sf");
    check_field_offset(lv, v3, ABISELECT(11,7), "Ip_BFu17ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu17ll_Sf, Ip_BFu17ll_Sf)
//============================================================================



static void Test_Ip_BFu1c_Sf()
{
  {
    init_simple_test("Ip_BFu1c_Sf");
    static STRUCT_IF_C Ip_BFu1c_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu1c_Sf)");
    check_field_offset(lv, v1, 0, "Ip_BFu1c_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu1c_Sf");
    check_field_offset(lv, v3, ABISELECT(9,5), "Ip_BFu1c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu1c_Sf, Ip_BFu1c_Sf)
//============================================================================



static void Test_Ip_BFu1i_Sf()
{
  {
    init_simple_test("Ip_BFu1i_Sf");
    static STRUCT_IF_C Ip_BFu1i_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu1i_Sf)");
    check_field_offset(lv, v1, 0, "Ip_BFu1i_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu1i_Sf");
    check_field_offset(lv, v3, ABISELECT(9,5), "Ip_BFu1i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu1i_Sf, Ip_BFu1i_Sf)
//============================================================================



static void Test_Ip_BFu1ll_Sf()
{
  {
    init_simple_test("Ip_BFu1ll_Sf");
    static STRUCT_IF_C Ip_BFu1ll_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu1ll_Sf)");
    check_field_offset(lv, v1, 0, "Ip_BFu1ll_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu1ll_Sf");
    check_field_offset(lv, v3, ABISELECT(9,5), "Ip_BFu1ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu1ll_Sf, Ip_BFu1ll_Sf)
//============================================================================



static void Test_Ip_BFu1s_Sf()
{
  {
    init_simple_test("Ip_BFu1s_Sf");
    static STRUCT_IF_C Ip_BFu1s_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu1s_Sf)");
    check_field_offset(lv, v1, 0, "Ip_BFu1s_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "Ip_BFu1s_Sf");
    check_field_offset(lv, v3, ABISELECT(9,5), "Ip_BFu1s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu1s_Sf, Ip_BFu1s_Sf)
//============================================================================



static void Test_Ip_BFu31i_Sf()
{
  {
    init_simple_test("Ip_BFu31i_Sf");
    static STRUCT_IF_C Ip_BFu31i_Sf lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu31i_Sf)");
    check_field_offset(lv, v1, 0, "Ip_BFu31i_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "Ip_BFu31i_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "Ip_BFu31i_Sf");
    check_field_offset(lv, v3, ABISELECT(12,8), "Ip_BFu31i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu31i_Sf, Ip_BFu31i_Sf)
//============================================================================



static void Test_Ip_BFu31ll_Sf()
{
  {
    init_simple_test("Ip_BFu31ll_Sf");
    static STRUCT_IF_C Ip_BFu31ll_Sf lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu31ll_Sf)");
    check_field_offset(lv, v1, 0, "Ip_BFu31ll_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "Ip_BFu31ll_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "Ip_BFu31ll_Sf");
    check_field_offset(lv, v3, ABISELECT(12,8), "Ip_BFu31ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu31ll_Sf, Ip_BFu31ll_Sf)
//============================================================================



static void Test_Ip_BFu32i_Sf()
{
  {
    init_simple_test("Ip_BFu32i_Sf");
    static STRUCT_IF_C Ip_BFu32i_Sf lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu32i_Sf)");
    check_field_offset(lv, v1, 0, "Ip_BFu32i_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "Ip_BFu32i_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "Ip_BFu32i_Sf");
    check_field_offset(lv, v3, ABISELECT(12,8), "Ip_BFu32i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu32i_Sf, Ip_BFu32i_Sf)
//============================================================================



static void Test_Ip_BFu32ll_Sf()
{
  {
    init_simple_test("Ip_BFu32ll_Sf");
    static STRUCT_IF_C Ip_BFu32ll_Sf lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu32ll_Sf)");
    check_field_offset(lv, v1, 0, "Ip_BFu32ll_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "Ip_BFu32ll_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "Ip_BFu32ll_Sf");
    check_field_offset(lv, v3, ABISELECT(12,8), "Ip_BFu32ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu32ll_Sf, Ip_BFu32ll_Sf)
//============================================================================



static void Test_Ip_BFu33_Sf()
{
  {
    init_simple_test("Ip_BFu33_Sf");
    static STRUCT_IF_C Ip_BFu33_Sf lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(Ip_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu33_Sf)");
    check_field_offset(lv, v1, 0, "Ip_BFu33_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, 1, "Ip_BFu33_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, hide_ull(1LL<<32), "Ip_BFu33_Sf");
    check_field_offset(lv, v3, ABISELECT(13,9), "Ip_BFu33_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu33_Sf, Ip_BFu33_Sf)
//============================================================================



static void Test_Ip_BFu7c_Sf()
{
  {
    init_simple_test("Ip_BFu7c_Sf");
    static STRUCT_IF_C Ip_BFu7c_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu7c_Sf)");
    check_field_offset(lv, v1, 0, "Ip_BFu7c_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu7c_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu7c_Sf");
    check_field_offset(lv, v3, ABISELECT(9,5), "Ip_BFu7c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu7c_Sf, Ip_BFu7c_Sf)
//============================================================================



static void Test_Ip_BFu7i_Sf()
{
  {
    init_simple_test("Ip_BFu7i_Sf");
    static STRUCT_IF_C Ip_BFu7i_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu7i_Sf)");
    check_field_offset(lv, v1, 0, "Ip_BFu7i_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu7i_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu7i_Sf");
    check_field_offset(lv, v3, ABISELECT(9,5), "Ip_BFu7i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu7i_Sf, Ip_BFu7i_Sf)
//============================================================================



static void Test_Ip_BFu7ll_Sf()
{
  {
    init_simple_test("Ip_BFu7ll_Sf");
    static STRUCT_IF_C Ip_BFu7ll_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu7ll_Sf)");
    check_field_offset(lv, v1, 0, "Ip_BFu7ll_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu7ll_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu7ll_Sf");
    check_field_offset(lv, v3, ABISELECT(9,5), "Ip_BFu7ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu7ll_Sf, Ip_BFu7ll_Sf)
//============================================================================



static void Test_Ip_BFu7s_Sf()
{
  {
    init_simple_test("Ip_BFu7s_Sf");
    static STRUCT_IF_C Ip_BFu7s_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu7s_Sf)");
    check_field_offset(lv, v1, 0, "Ip_BFu7s_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "Ip_BFu7s_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_BFu7s_Sf");
    check_field_offset(lv, v3, ABISELECT(9,5), "Ip_BFu7s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu7s_Sf, Ip_BFu7s_Sf)
//============================================================================



static void Test_Ip_BFu8c_Sf()
{
  {
    init_simple_test("Ip_BFu8c_Sf");
    static STRUCT_IF_C Ip_BFu8c_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu8c_Sf)");
    check_field_offset(lv, v1, 0, "Ip_BFu8c_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu8c_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu8c_Sf");
    check_field_offset(lv, v3, ABISELECT(9,5), "Ip_BFu8c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu8c_Sf, Ip_BFu8c_Sf)
//============================================================================



static void Test_Ip_BFu8i_Sf()
{
  {
    init_simple_test("Ip_BFu8i_Sf");
    static STRUCT_IF_C Ip_BFu8i_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu8i_Sf)");
    check_field_offset(lv, v1, 0, "Ip_BFu8i_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu8i_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu8i_Sf");
    check_field_offset(lv, v3, ABISELECT(9,5), "Ip_BFu8i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu8i_Sf, Ip_BFu8i_Sf)
//============================================================================



static void Test_Ip_BFu8ll_Sf()
{
  {
    init_simple_test("Ip_BFu8ll_Sf");
    static STRUCT_IF_C Ip_BFu8ll_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu8ll_Sf)");
    check_field_offset(lv, v1, 0, "Ip_BFu8ll_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu8ll_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu8ll_Sf");
    check_field_offset(lv, v3, ABISELECT(9,5), "Ip_BFu8ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu8ll_Sf, Ip_BFu8ll_Sf)
//============================================================================



static void Test_Ip_BFu8s_Sf()
{
  {
    init_simple_test("Ip_BFu8s_Sf");
    static STRUCT_IF_C Ip_BFu8s_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu8s_Sf)");
    check_field_offset(lv, v1, 0, "Ip_BFu8s_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "Ip_BFu8s_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_BFu8s_Sf");
    check_field_offset(lv, v3, ABISELECT(9,5), "Ip_BFu8s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu8s_Sf, Ip_BFu8s_Sf)
//============================================================================



static void Test_Ip_BFu9i_Sf()
{
  {
    init_simple_test("Ip_BFu9i_Sf");
    static STRUCT_IF_C Ip_BFu9i_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu9i_Sf)");
    check_field_offset(lv, v1, 0, "Ip_BFu9i_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Ip_BFu9i_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ip_BFu9i_Sf");
    check_field_offset(lv, v3, ABISELECT(10,6), "Ip_BFu9i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu9i_Sf, Ip_BFu9i_Sf)
//============================================================================



static void Test_Ip_BFu9ll_Sf()
{
  {
    init_simple_test("Ip_BFu9ll_Sf");
    static STRUCT_IF_C Ip_BFu9ll_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu9ll_Sf)");
    check_field_offset(lv, v1, 0, "Ip_BFu9ll_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Ip_BFu9ll_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ip_BFu9ll_Sf");
    check_field_offset(lv, v3, ABISELECT(10,6), "Ip_BFu9ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu9ll_Sf, Ip_BFu9ll_Sf)
//============================================================================



static void Test_Ip_BFu9s_Sf()
{
  {
    init_simple_test("Ip_BFu9s_Sf");
    static STRUCT_IF_C Ip_BFu9s_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_BFu9s_Sf)");
    check_field_offset(lv, v1, 0, "Ip_BFu9s_Sf.v1");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "Ip_BFu9s_Sf");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ip_BFu9s_Sf");
    check_field_offset(lv, v3, ABISELECT(10,6), "Ip_BFu9s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_BFu9s_Sf, Ip_BFu9s_Sf)
//============================================================================



static void Test_Ip_C_Sf()
{
  {
    init_simple_test("Ip_C_Sf");
    STRUCT_IF_C Ip_C_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_C_Sf)");
    check_field_offset(lv, v1, 0, "Ip_C_Sf.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_C_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "Ip_C_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_C_Sf, Ip_C_Sf)
//============================================================================



static void Test_Ip_D_Sf()
{
  {
    init_simple_test("Ip_D_Sf");
    STRUCT_IF_C Ip_D_Sf lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_D_Sf)");
    check_field_offset(lv, v1, 0, "Ip_D_Sf.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_D_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "Ip_D_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_D_Sf, Ip_D_Sf)
//============================================================================



static void Test_Ip_F_Sf()
{
  {
    init_simple_test("Ip_F_Sf");
    STRUCT_IF_C Ip_F_Sf lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_F_Sf)");
    check_field_offset(lv, v1, 0, "Ip_F_Sf.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_F_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "Ip_F_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_F_Sf, Ip_F_Sf)
//============================================================================



static void Test_Ip_I_Sf()
{
  {
    init_simple_test("Ip_I_Sf");
    STRUCT_IF_C Ip_I_Sf lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_I_Sf)");
    check_field_offset(lv, v1, 0, "Ip_I_Sf.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_I_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "Ip_I_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_I_Sf, Ip_I_Sf)
//============================================================================



static void Test_Ip_Ip_Sf()
{
  {
    init_simple_test("Ip_Ip_Sf");
    STRUCT_IF_C Ip_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Ip_Sf)");
    check_field_offset(lv, v1, 0, "Ip_Ip_Sf.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(16,8), "Ip_Ip_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Ip_Sf, Ip_Ip_Sf)
//============================================================================



static void Test_Ip_L_Sf()
{
  {
    init_simple_test("Ip_L_Sf");
    STRUCT_IF_C Ip_L_Sf lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_L_Sf)");
    check_field_offset(lv, v1, 0, "Ip_L_Sf.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_L_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "Ip_L_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_L_Sf, Ip_L_Sf)
//============================================================================



static void Test_Ip_S_Sf()
{
  {
    init_simple_test("Ip_S_Sf");
    STRUCT_IF_C Ip_S_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_S_Sf)");
    check_field_offset(lv, v1, 0, "Ip_S_Sf.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_S_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "Ip_S_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_S_Sf, Ip_S_Sf)
//============================================================================



static void Test_Ip_Sf()
{
  {
    init_simple_test("Ip_Sf");
    STRUCT_IF_C Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf)");
    check_field_offset(lv, v1, 0, "Ip_Sf.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf, Ip_Sf)
//============================================================================



static void Test_Ip_Sf_BFu15i()
{
  {
    init_simple_test("Ip_Sf_BFu15i");
    static STRUCT_IF_C Ip_Sf_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_BFu15i)");
    check_field_offset(lv, v1, 0, "Ip_Sf_BFu15i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 15, 1, "Ip_Sf_BFu15i");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ip_Sf_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_BFu15i, Ip_Sf_BFu15i)
//============================================================================



static void Test_Ip_Sf_BFu15ll()
{
  {
    init_simple_test("Ip_Sf_BFu15ll");
    static STRUCT_IF_C Ip_Sf_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_BFu15ll)");
    check_field_offset(lv, v1, 0, "Ip_Sf_BFu15ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 15, 1, "Ip_Sf_BFu15ll");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ip_Sf_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_BFu15ll, Ip_Sf_BFu15ll)
//============================================================================



static void Test_Ip_Sf_BFu15s()
{
  {
    init_simple_test("Ip_Sf_BFu15s");
    static STRUCT_IF_C Ip_Sf_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_BFu15s)");
    check_field_offset(lv, v1, 0, "Ip_Sf_BFu15s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 15, 1, "Ip_Sf_BFu15s");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "Ip_Sf_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_BFu15s, Ip_Sf_BFu15s)
//============================================================================



static void Test_Ip_Sf_BFu16i()
{
  {
    init_simple_test("Ip_Sf_BFu16i");
    static STRUCT_IF_C Ip_Sf_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_BFu16i)");
    check_field_offset(lv, v1, 0, "Ip_Sf_BFu16i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 16, 1, "Ip_Sf_BFu16i");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ip_Sf_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_BFu16i, Ip_Sf_BFu16i)
//============================================================================



static void Test_Ip_Sf_BFu16ll()
{
  {
    init_simple_test("Ip_Sf_BFu16ll");
    static STRUCT_IF_C Ip_Sf_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_BFu16ll)");
    check_field_offset(lv, v1, 0, "Ip_Sf_BFu16ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 16, 1, "Ip_Sf_BFu16ll");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ip_Sf_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_BFu16ll, Ip_Sf_BFu16ll)
//============================================================================



static void Test_Ip_Sf_BFu16s()
{
  {
    init_simple_test("Ip_Sf_BFu16s");
    static STRUCT_IF_C Ip_Sf_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_BFu16s)");
    check_field_offset(lv, v1, 0, "Ip_Sf_BFu16s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 16, 1, "Ip_Sf_BFu16s");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "Ip_Sf_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_BFu16s, Ip_Sf_BFu16s)
//============================================================================



static void Test_Ip_Sf_BFu17i()
{
  {
    init_simple_test("Ip_Sf_BFu17i");
    static STRUCT_IF_C Ip_Sf_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(Ip_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_BFu17i)");
    check_field_offset(lv, v1, 0, "Ip_Sf_BFu17i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 17, 1, "Ip_Sf_BFu17i");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "Ip_Sf_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_BFu17i, Ip_Sf_BFu17i)
//============================================================================



static void Test_Ip_Sf_BFu17ll()
{
  {
    init_simple_test("Ip_Sf_BFu17ll");
    static STRUCT_IF_C Ip_Sf_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(Ip_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_BFu17ll)");
    check_field_offset(lv, v1, 0, "Ip_Sf_BFu17ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 17, 1, "Ip_Sf_BFu17ll");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "Ip_Sf_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_BFu17ll, Ip_Sf_BFu17ll)
//============================================================================



static void Test_Ip_Sf_BFu1c()
{
  {
    init_simple_test("Ip_Sf_BFu1c");
    static STRUCT_IF_C Ip_Sf_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_BFu1c)");
    check_field_offset(lv, v1, 0, "Ip_Sf_BFu1c.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 1, 1, "Ip_Sf_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_BFu1c, Ip_Sf_BFu1c)
//============================================================================



static void Test_Ip_Sf_BFu1i()
{
  {
    init_simple_test("Ip_Sf_BFu1i");
    static STRUCT_IF_C Ip_Sf_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_BFu1i)");
    check_field_offset(lv, v1, 0, "Ip_Sf_BFu1i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 1, 1, "Ip_Sf_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_BFu1i, Ip_Sf_BFu1i)
//============================================================================



static void Test_Ip_Sf_BFu1ll()
{
  {
    init_simple_test("Ip_Sf_BFu1ll");
    static STRUCT_IF_C Ip_Sf_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_BFu1ll)");
    check_field_offset(lv, v1, 0, "Ip_Sf_BFu1ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 1, 1, "Ip_Sf_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_BFu1ll, Ip_Sf_BFu1ll)
//============================================================================



static void Test_Ip_Sf_BFu1s()
{
  {
    init_simple_test("Ip_Sf_BFu1s");
    static STRUCT_IF_C Ip_Sf_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_BFu1s)");
    check_field_offset(lv, v1, 0, "Ip_Sf_BFu1s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 1, 1, "Ip_Sf_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_BFu1s, Ip_Sf_BFu1s)
//============================================================================



static void Test_Ip_Sf_BFu31i()
{
  {
    init_simple_test("Ip_Sf_BFu31i");
    static STRUCT_IF_C Ip_Sf_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_BFu31i)");
    check_field_offset(lv, v1, 0, "Ip_Sf_BFu31i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 31, 1, "Ip_Sf_BFu31i");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "Ip_Sf_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_BFu31i, Ip_Sf_BFu31i)
//============================================================================



static void Test_Ip_Sf_BFu31ll()
{
  {
    init_simple_test("Ip_Sf_BFu31ll");
    static STRUCT_IF_C Ip_Sf_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_BFu31ll)");
    check_field_offset(lv, v1, 0, "Ip_Sf_BFu31ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 31, 1, "Ip_Sf_BFu31ll");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "Ip_Sf_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_BFu31ll, Ip_Sf_BFu31ll)
//============================================================================



static void Test_Ip_Sf_BFu32i()
{
  {
    init_simple_test("Ip_Sf_BFu32i");
    static STRUCT_IF_C Ip_Sf_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_BFu32i)");
    check_field_offset(lv, v1, 0, "Ip_Sf_BFu32i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 32, 1, "Ip_Sf_BFu32i");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "Ip_Sf_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_BFu32i, Ip_Sf_BFu32i)
//============================================================================



static void Test_Ip_Sf_BFu32ll()
{
  {
    init_simple_test("Ip_Sf_BFu32ll");
    static STRUCT_IF_C Ip_Sf_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_BFu32ll)");
    check_field_offset(lv, v1, 0, "Ip_Sf_BFu32ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 32, 1, "Ip_Sf_BFu32ll");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "Ip_Sf_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_BFu32ll, Ip_Sf_BFu32ll)
//============================================================================



static void Test_Ip_Sf_BFu33()
{
  {
    init_simple_test("Ip_Sf_BFu33");
    static STRUCT_IF_C Ip_Sf_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(Ip_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_BFu33)");
    check_field_offset(lv, v1, 0, "Ip_Sf_BFu33.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 33, 1, "Ip_Sf_BFu33");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 33, hide_ull(1LL<<32), "Ip_Sf_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_BFu33, Ip_Sf_BFu33)
//============================================================================



static void Test_Ip_Sf_BFu7c()
{
  {
    init_simple_test("Ip_Sf_BFu7c");
    static STRUCT_IF_C Ip_Sf_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_BFu7c)");
    check_field_offset(lv, v1, 0, "Ip_Sf_BFu7c.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 7, 1, "Ip_Sf_BFu7c");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_Sf_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_BFu7c, Ip_Sf_BFu7c)
//============================================================================



static void Test_Ip_Sf_BFu7i()
{
  {
    init_simple_test("Ip_Sf_BFu7i");
    static STRUCT_IF_C Ip_Sf_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_BFu7i)");
    check_field_offset(lv, v1, 0, "Ip_Sf_BFu7i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 7, 1, "Ip_Sf_BFu7i");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_Sf_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_BFu7i, Ip_Sf_BFu7i)
//============================================================================



static void Test_Ip_Sf_BFu7ll()
{
  {
    init_simple_test("Ip_Sf_BFu7ll");
    static STRUCT_IF_C Ip_Sf_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_BFu7ll)");
    check_field_offset(lv, v1, 0, "Ip_Sf_BFu7ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 7, 1, "Ip_Sf_BFu7ll");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_Sf_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_BFu7ll, Ip_Sf_BFu7ll)
//============================================================================



static void Test_Ip_Sf_BFu7s()
{
  {
    init_simple_test("Ip_Sf_BFu7s");
    static STRUCT_IF_C Ip_Sf_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_BFu7s)");
    check_field_offset(lv, v1, 0, "Ip_Sf_BFu7s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 7, 1, "Ip_Sf_BFu7s");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "Ip_Sf_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_BFu7s, Ip_Sf_BFu7s)
//============================================================================



static void Test_Ip_Sf_BFu8c()
{
  {
    init_simple_test("Ip_Sf_BFu8c");
    static STRUCT_IF_C Ip_Sf_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_BFu8c)");
    check_field_offset(lv, v1, 0, "Ip_Sf_BFu8c.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 8, 1, "Ip_Sf_BFu8c");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_Sf_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_BFu8c, Ip_Sf_BFu8c)
//============================================================================



static void Test_Ip_Sf_BFu8i()
{
  {
    init_simple_test("Ip_Sf_BFu8i");
    static STRUCT_IF_C Ip_Sf_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_BFu8i)");
    check_field_offset(lv, v1, 0, "Ip_Sf_BFu8i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 8, 1, "Ip_Sf_BFu8i");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_Sf_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_BFu8i, Ip_Sf_BFu8i)
//============================================================================



static void Test_Ip_Sf_BFu8ll()
{
  {
    init_simple_test("Ip_Sf_BFu8ll");
    static STRUCT_IF_C Ip_Sf_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_BFu8ll)");
    check_field_offset(lv, v1, 0, "Ip_Sf_BFu8ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 8, 1, "Ip_Sf_BFu8ll");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_Sf_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_BFu8ll, Ip_Sf_BFu8ll)
//============================================================================



static void Test_Ip_Sf_BFu8s()
{
  {
    init_simple_test("Ip_Sf_BFu8s");
    static STRUCT_IF_C Ip_Sf_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_BFu8s)");
    check_field_offset(lv, v1, 0, "Ip_Sf_BFu8s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 8, 1, "Ip_Sf_BFu8s");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "Ip_Sf_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_BFu8s, Ip_Sf_BFu8s)
//============================================================================



static void Test_Ip_Sf_BFu9i()
{
  {
    init_simple_test("Ip_Sf_BFu9i");
    static STRUCT_IF_C Ip_Sf_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_BFu9i)");
    check_field_offset(lv, v1, 0, "Ip_Sf_BFu9i.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 9, 1, "Ip_Sf_BFu9i");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ip_Sf_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_BFu9i, Ip_Sf_BFu9i)
//============================================================================



static void Test_Ip_Sf_BFu9ll()
{
  {
    init_simple_test("Ip_Sf_BFu9ll");
    static STRUCT_IF_C Ip_Sf_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_BFu9ll)");
    check_field_offset(lv, v1, 0, "Ip_Sf_BFu9ll.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 9, 1, "Ip_Sf_BFu9ll");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ip_Sf_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_BFu9ll, Ip_Sf_BFu9ll)
//============================================================================



static void Test_Ip_Sf_BFu9s()
{
  {
    init_simple_test("Ip_Sf_BFu9s");
    static STRUCT_IF_C Ip_Sf_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_BFu9s)");
    check_field_offset(lv, v1, 0, "Ip_Sf_BFu9s.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 9, 1, "Ip_Sf_BFu9s");
    set_bf_and_test(lv, v3, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "Ip_Sf_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_BFu9s, Ip_Sf_BFu9s)
//============================================================================



static void Test_Ip_Sf_C()
{
  {
    init_simple_test("Ip_Sf_C");
    STRUCT_IF_C Ip_Sf_C lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_C)");
    check_field_offset(lv, v1, 0, "Ip_Sf_C.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_C.v2");
    check_field_offset(lv, v3, ABISELECT(8,4), "Ip_Sf_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_C, Ip_Sf_C)
//============================================================================



static void Test_Ip_Sf_D()
{
  {
    init_simple_test("Ip_Sf_D");
    STRUCT_IF_C Ip_Sf_D lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_D)");
    check_field_offset(lv, v1, 0, "Ip_Sf_D.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_D.v2");
    check_field_offset(lv, v3, ABISELECT(8,4), "Ip_Sf_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_D, Ip_Sf_D)
//============================================================================



static void Test_Ip_Sf_F()
{
  {
    init_simple_test("Ip_Sf_F");
    STRUCT_IF_C Ip_Sf_F lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_F)");
    check_field_offset(lv, v1, 0, "Ip_Sf_F.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_F.v2");
    check_field_offset(lv, v3, ABISELECT(8,4), "Ip_Sf_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_F, Ip_Sf_F)
//============================================================================



static void Test_Ip_Sf_I()
{
  {
    init_simple_test("Ip_Sf_I");
    STRUCT_IF_C Ip_Sf_I lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_I)");
    check_field_offset(lv, v1, 0, "Ip_Sf_I.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_I.v2");
    check_field_offset(lv, v3, ABISELECT(8,4), "Ip_Sf_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_I, Ip_Sf_I)
//============================================================================



static void Test_Ip_Sf_Ip()
{
  {
    init_simple_test("Ip_Sf_Ip");
    STRUCT_IF_C Ip_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_Ip)");
    check_field_offset(lv, v1, 0, "Ip_Sf_Ip.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_Ip.v2");
    check_field_offset(lv, v3, ABISELECT(8,4), "Ip_Sf_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_Ip, Ip_Sf_Ip)
//============================================================================



static void Test_Ip_Sf_L()
{
  {
    init_simple_test("Ip_Sf_L");
    STRUCT_IF_C Ip_Sf_L lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_L)");
    check_field_offset(lv, v1, 0, "Ip_Sf_L.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_L.v2");
    check_field_offset(lv, v3, ABISELECT(8,4), "Ip_Sf_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_L, Ip_Sf_L)
//============================================================================



static void Test_Ip_Sf_S()
{
  {
    init_simple_test("Ip_Sf_S");
    STRUCT_IF_C Ip_Sf_S lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_S)");
    check_field_offset(lv, v1, 0, "Ip_Sf_S.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_S.v2");
    check_field_offset(lv, v3, ABISELECT(8,4), "Ip_Sf_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_S, Ip_Sf_S)
//============================================================================



static void Test_Ip_Sf_Sf()
{
  {
    init_simple_test("Ip_Sf_Sf");
    STRUCT_IF_C Ip_Sf_Sf lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(Ip_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_Sf)");
    check_field_offset(lv, v1, 0, "Ip_Sf_Sf.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(8,4), "Ip_Sf_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_Sf, Ip_Sf_Sf)
//============================================================================



static void Test_Ip_Sf_Uc()
{
  {
    init_simple_test("Ip_Sf_Uc");
    STRUCT_IF_C Ip_Sf_Uc lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_Uc)");
    check_field_offset(lv, v1, 0, "Ip_Sf_Uc.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_Uc.v2");
    check_field_offset(lv, v3, ABISELECT(8,4), "Ip_Sf_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_Uc, Ip_Sf_Uc)
//============================================================================



static void Test_Ip_Sf_Ui()
{
  {
    init_simple_test("Ip_Sf_Ui");
    STRUCT_IF_C Ip_Sf_Ui lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_Ui)");
    check_field_offset(lv, v1, 0, "Ip_Sf_Ui.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_Ui.v2");
    check_field_offset(lv, v3, ABISELECT(8,4), "Ip_Sf_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_Ui, Ip_Sf_Ui)
//============================================================================



static void Test_Ip_Sf_Ul()
{
  {
    init_simple_test("Ip_Sf_Ul");
    STRUCT_IF_C Ip_Sf_Ul lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_Ul)");
    check_field_offset(lv, v1, 0, "Ip_Sf_Ul.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_Ul.v2");
    check_field_offset(lv, v3, ABISELECT(8,4), "Ip_Sf_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_Ul, Ip_Sf_Ul)
//============================================================================



static void Test_Ip_Sf_Us()
{
  {
    init_simple_test("Ip_Sf_Us");
    STRUCT_IF_C Ip_Sf_Us lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_Us)");
    check_field_offset(lv, v1, 0, "Ip_Sf_Us.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_Us.v2");
    check_field_offset(lv, v3, ABISELECT(8,4), "Ip_Sf_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_Us, Ip_Sf_Us)
//============================================================================



static void Test_Ip_Sf_Vp()
{
  {
    init_simple_test("Ip_Sf_Vp");
    STRUCT_IF_C Ip_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Sf_Vp)");
    check_field_offset(lv, v1, 0, "Ip_Sf_Vp.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Sf_Vp.v2");
    check_field_offset(lv, v3, ABISELECT(8,4), "Ip_Sf_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Sf_Vp, Ip_Sf_Vp)
//============================================================================



static void Test_Ip_Uc_Sf()
{
  {
    init_simple_test("Ip_Uc_Sf");
    STRUCT_IF_C Ip_Uc_Sf lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Ip_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Uc_Sf)");
    check_field_offset(lv, v1, 0, "Ip_Uc_Sf.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Uc_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(9,5), "Ip_Uc_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Uc_Sf, Ip_Uc_Sf)
//============================================================================



static void Test_Ip_Ui_Sf()
{
  {
    init_simple_test("Ip_Ui_Sf");
    STRUCT_IF_C Ip_Ui_Sf lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Ip_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Ui_Sf)");
    check_field_offset(lv, v1, 0, "Ip_Ui_Sf.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Ui_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(12,8), "Ip_Ui_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Ui_Sf, Ip_Ui_Sf)
//============================================================================



static void Test_Ip_Ul_Sf()
{
  {
    init_simple_test("Ip_Ul_Sf");
    STRUCT_IF_C Ip_Ul_Sf lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(Ip_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Ul_Sf)");
    check_field_offset(lv, v1, 0, "Ip_Ul_Sf.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Ul_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "Ip_Ul_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Ul_Sf, Ip_Ul_Sf)
//============================================================================



static void Test_Ip_Us_Sf()
{
  {
    init_simple_test("Ip_Us_Sf");
    STRUCT_IF_C Ip_Us_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Ip_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Us_Sf)");
    check_field_offset(lv, v1, 0, "Ip_Us_Sf.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Us_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "Ip_Us_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Us_Sf, Ip_Us_Sf)
//============================================================================



static void Test_Ip_Vp_Sf()
{
  {
    init_simple_test("Ip_Vp_Sf");
    STRUCT_IF_C Ip_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(Ip_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Ip_Vp_Sf)");
    check_field_offset(lv, v1, 0, "Ip_Vp_Sf.v1");
    check_field_offset(lv, v2, ABISELECT(8,4), "Ip_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(16,8), "Ip_Vp_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Ip_Vp_Sf, Ip_Vp_Sf)
//============================================================================



static void Test_L_BFu15i_Sf()
{
  {
    init_simple_test("L_BFu15i_Sf");
    static STRUCT_IF_C L_BFu15i_Sf lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu15i_Sf)");
    check_field_offset(lv, v1, 0, "L_BFu15i_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "L_BFu15i_Sf");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "L_BFu15i_Sf");
    check_field_offset(lv, v3, 10, "L_BFu15i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu15i_Sf, L_BFu15i_Sf)
//============================================================================



static void Test_L_BFu15ll_Sf()
{
  {
    init_simple_test("L_BFu15ll_Sf");
    static STRUCT_IF_C L_BFu15ll_Sf lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu15ll_Sf)");
    check_field_offset(lv, v1, 0, "L_BFu15ll_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "L_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "L_BFu15ll_Sf");
    check_field_offset(lv, v3, 10, "L_BFu15ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu15ll_Sf, L_BFu15ll_Sf)
//============================================================================



static void Test_L_BFu15s_Sf()
{
  {
    init_simple_test("L_BFu15s_Sf");
    static STRUCT_IF_C L_BFu15s_Sf lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu15s_Sf)");
    check_field_offset(lv, v1, 0, "L_BFu15s_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 15, 1, "L_BFu15s_Sf");
    set_bf_and_test(lv, v2, 8, 0, 15, hide_ull(1LL<<14), "L_BFu15s_Sf");
    check_field_offset(lv, v3, 10, "L_BFu15s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu15s_Sf, L_BFu15s_Sf)
//============================================================================



static void Test_L_BFu16i_Sf()
{
  {
    init_simple_test("L_BFu16i_Sf");
    static STRUCT_IF_C L_BFu16i_Sf lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu16i_Sf)");
    check_field_offset(lv, v1, 0, "L_BFu16i_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "L_BFu16i_Sf");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "L_BFu16i_Sf");
    check_field_offset(lv, v3, 10, "L_BFu16i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu16i_Sf, L_BFu16i_Sf)
//============================================================================



static void Test_L_BFu16ll_Sf()
{
  {
    init_simple_test("L_BFu16ll_Sf");
    static STRUCT_IF_C L_BFu16ll_Sf lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu16ll_Sf)");
    check_field_offset(lv, v1, 0, "L_BFu16ll_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "L_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "L_BFu16ll_Sf");
    check_field_offset(lv, v3, 10, "L_BFu16ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu16ll_Sf, L_BFu16ll_Sf)
//============================================================================



static void Test_L_BFu16s_Sf()
{
  {
    init_simple_test("L_BFu16s_Sf");
    static STRUCT_IF_C L_BFu16s_Sf lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu16s_Sf)");
    check_field_offset(lv, v1, 0, "L_BFu16s_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 16, 1, "L_BFu16s_Sf");
    set_bf_and_test(lv, v2, 8, 0, 16, hide_ull(1LL<<15), "L_BFu16s_Sf");
    check_field_offset(lv, v3, 10, "L_BFu16s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu16s_Sf, L_BFu16s_Sf)
//============================================================================



static void Test_L_BFu17i_Sf()
{
  {
    init_simple_test("L_BFu17i_Sf");
    static STRUCT_IF_C L_BFu17i_Sf lv;
    check2(sizeof(lv), 11, "sizeof(L_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu17i_Sf)");
    check_field_offset(lv, v1, 0, "L_BFu17i_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "L_BFu17i_Sf");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "L_BFu17i_Sf");
    check_field_offset(lv, v3, 11, "L_BFu17i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu17i_Sf, L_BFu17i_Sf)
//============================================================================



static void Test_L_BFu17ll_Sf()
{
  {
    init_simple_test("L_BFu17ll_Sf");
    static STRUCT_IF_C L_BFu17ll_Sf lv;
    check2(sizeof(lv), 11, "sizeof(L_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu17ll_Sf)");
    check_field_offset(lv, v1, 0, "L_BFu17ll_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 17, 1, "L_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 8, 0, 17, hide_ull(1LL<<16), "L_BFu17ll_Sf");
    check_field_offset(lv, v3, 11, "L_BFu17ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu17ll_Sf, L_BFu17ll_Sf)
//============================================================================



static void Test_L_BFu1c_Sf()
{
  {
    init_simple_test("L_BFu1c_Sf");
    static STRUCT_IF_C L_BFu1c_Sf lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu1c_Sf)");
    check_field_offset(lv, v1, 0, "L_BFu1c_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu1c_Sf");
    check_field_offset(lv, v3, 9, "L_BFu1c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu1c_Sf, L_BFu1c_Sf)
//============================================================================



static void Test_L_BFu1i_Sf()
{
  {
    init_simple_test("L_BFu1i_Sf");
    static STRUCT_IF_C L_BFu1i_Sf lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu1i_Sf)");
    check_field_offset(lv, v1, 0, "L_BFu1i_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu1i_Sf");
    check_field_offset(lv, v3, 9, "L_BFu1i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu1i_Sf, L_BFu1i_Sf)
//============================================================================



static void Test_L_BFu1ll_Sf()
{
  {
    init_simple_test("L_BFu1ll_Sf");
    static STRUCT_IF_C L_BFu1ll_Sf lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu1ll_Sf)");
    check_field_offset(lv, v1, 0, "L_BFu1ll_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu1ll_Sf");
    check_field_offset(lv, v3, 9, "L_BFu1ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu1ll_Sf, L_BFu1ll_Sf)
//============================================================================



static void Test_L_BFu1s_Sf()
{
  {
    init_simple_test("L_BFu1s_Sf");
    static STRUCT_IF_C L_BFu1s_Sf lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu1s_Sf)");
    check_field_offset(lv, v1, 0, "L_BFu1s_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 1, 1, "L_BFu1s_Sf");
    check_field_offset(lv, v3, 9, "L_BFu1s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu1s_Sf, L_BFu1s_Sf)
//============================================================================



static void Test_L_BFu31i_Sf()
{
  {
    init_simple_test("L_BFu31i_Sf");
    static STRUCT_IF_C L_BFu31i_Sf lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu31i_Sf)");
    check_field_offset(lv, v1, 0, "L_BFu31i_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "L_BFu31i_Sf");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "L_BFu31i_Sf");
    check_field_offset(lv, v3, 12, "L_BFu31i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu31i_Sf, L_BFu31i_Sf)
//============================================================================



static void Test_L_BFu31ll_Sf()
{
  {
    init_simple_test("L_BFu31ll_Sf");
    static STRUCT_IF_C L_BFu31ll_Sf lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu31ll_Sf)");
    check_field_offset(lv, v1, 0, "L_BFu31ll_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 31, 1, "L_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 8, 0, 31, hide_ull(1LL<<30), "L_BFu31ll_Sf");
    check_field_offset(lv, v3, 12, "L_BFu31ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu31ll_Sf, L_BFu31ll_Sf)
//============================================================================



static void Test_L_BFu32i_Sf()
{
  {
    init_simple_test("L_BFu32i_Sf");
    static STRUCT_IF_C L_BFu32i_Sf lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu32i_Sf)");
    check_field_offset(lv, v1, 0, "L_BFu32i_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "L_BFu32i_Sf");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "L_BFu32i_Sf");
    check_field_offset(lv, v3, 12, "L_BFu32i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu32i_Sf, L_BFu32i_Sf)
//============================================================================



static void Test_L_BFu32ll_Sf()
{
  {
    init_simple_test("L_BFu32ll_Sf");
    static STRUCT_IF_C L_BFu32ll_Sf lv;
    check2(sizeof(lv), 12, "sizeof(L_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu32ll_Sf)");
    check_field_offset(lv, v1, 0, "L_BFu32ll_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 32, 1, "L_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 8, 0, 32, hide_ull(1LL<<31), "L_BFu32ll_Sf");
    check_field_offset(lv, v3, 12, "L_BFu32ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu32ll_Sf, L_BFu32ll_Sf)
//============================================================================



static void Test_L_BFu33_Sf()
{
  {
    init_simple_test("L_BFu33_Sf");
    static STRUCT_IF_C L_BFu33_Sf lv;
    check2(sizeof(lv), 13, "sizeof(L_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu33_Sf)");
    check_field_offset(lv, v1, 0, "L_BFu33_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 33, 1, "L_BFu33_Sf");
    set_bf_and_test(lv, v2, 8, 0, 33, hide_ull(1LL<<32), "L_BFu33_Sf");
    check_field_offset(lv, v3, 13, "L_BFu33_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu33_Sf, L_BFu33_Sf)
//============================================================================



static void Test_L_BFu7c_Sf()
{
  {
    init_simple_test("L_BFu7c_Sf");
    static STRUCT_IF_C L_BFu7c_Sf lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu7c_Sf)");
    check_field_offset(lv, v1, 0, "L_BFu7c_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu7c_Sf");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu7c_Sf");
    check_field_offset(lv, v3, 9, "L_BFu7c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu7c_Sf, L_BFu7c_Sf)
//============================================================================



static void Test_L_BFu7i_Sf()
{
  {
    init_simple_test("L_BFu7i_Sf");
    static STRUCT_IF_C L_BFu7i_Sf lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu7i_Sf)");
    check_field_offset(lv, v1, 0, "L_BFu7i_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu7i_Sf");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu7i_Sf");
    check_field_offset(lv, v3, 9, "L_BFu7i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu7i_Sf, L_BFu7i_Sf)
//============================================================================



static void Test_L_BFu7ll_Sf()
{
  {
    init_simple_test("L_BFu7ll_Sf");
    static STRUCT_IF_C L_BFu7ll_Sf lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu7ll_Sf)");
    check_field_offset(lv, v1, 0, "L_BFu7ll_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu7ll_Sf");
    check_field_offset(lv, v3, 9, "L_BFu7ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu7ll_Sf, L_BFu7ll_Sf)
//============================================================================



static void Test_L_BFu7s_Sf()
{
  {
    init_simple_test("L_BFu7s_Sf");
    static STRUCT_IF_C L_BFu7s_Sf lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu7s_Sf)");
    check_field_offset(lv, v1, 0, "L_BFu7s_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 7, 1, "L_BFu7s_Sf");
    set_bf_and_test(lv, v2, 8, 0, 7, hide_ull(1LL<<6), "L_BFu7s_Sf");
    check_field_offset(lv, v3, 9, "L_BFu7s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu7s_Sf, L_BFu7s_Sf)
//============================================================================



static void Test_L_BFu8c_Sf()
{
  {
    init_simple_test("L_BFu8c_Sf");
    static STRUCT_IF_C L_BFu8c_Sf lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu8c_Sf)");
    check_field_offset(lv, v1, 0, "L_BFu8c_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu8c_Sf");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu8c_Sf");
    check_field_offset(lv, v3, 9, "L_BFu8c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu8c_Sf, L_BFu8c_Sf)
//============================================================================



static void Test_L_BFu8i_Sf()
{
  {
    init_simple_test("L_BFu8i_Sf");
    static STRUCT_IF_C L_BFu8i_Sf lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu8i_Sf)");
    check_field_offset(lv, v1, 0, "L_BFu8i_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu8i_Sf");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu8i_Sf");
    check_field_offset(lv, v3, 9, "L_BFu8i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu8i_Sf, L_BFu8i_Sf)
//============================================================================



static void Test_L_BFu8ll_Sf()
{
  {
    init_simple_test("L_BFu8ll_Sf");
    static STRUCT_IF_C L_BFu8ll_Sf lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu8ll_Sf)");
    check_field_offset(lv, v1, 0, "L_BFu8ll_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu8ll_Sf");
    check_field_offset(lv, v3, 9, "L_BFu8ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu8ll_Sf, L_BFu8ll_Sf)
//============================================================================



static void Test_L_BFu8s_Sf()
{
  {
    init_simple_test("L_BFu8s_Sf");
    static STRUCT_IF_C L_BFu8s_Sf lv;
    check2(sizeof(lv), 9, "sizeof(L_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu8s_Sf)");
    check_field_offset(lv, v1, 0, "L_BFu8s_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 8, 1, "L_BFu8s_Sf");
    set_bf_and_test(lv, v2, 8, 0, 8, hide_ull(1LL<<7), "L_BFu8s_Sf");
    check_field_offset(lv, v3, 9, "L_BFu8s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu8s_Sf, L_BFu8s_Sf)
//============================================================================



static void Test_L_BFu9i_Sf()
{
  {
    init_simple_test("L_BFu9i_Sf");
    static STRUCT_IF_C L_BFu9i_Sf lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu9i_Sf)");
    check_field_offset(lv, v1, 0, "L_BFu9i_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "L_BFu9i_Sf");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "L_BFu9i_Sf");
    check_field_offset(lv, v3, 10, "L_BFu9i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu9i_Sf, L_BFu9i_Sf)
//============================================================================



static void Test_L_BFu9ll_Sf()
{
  {
    init_simple_test("L_BFu9ll_Sf");
    static STRUCT_IF_C L_BFu9ll_Sf lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu9ll_Sf)");
    check_field_offset(lv, v1, 0, "L_BFu9ll_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "L_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "L_BFu9ll_Sf");
    check_field_offset(lv, v3, 10, "L_BFu9ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu9ll_Sf, L_BFu9ll_Sf)
//============================================================================



static void Test_L_BFu9s_Sf()
{
  {
    init_simple_test("L_BFu9s_Sf");
    static STRUCT_IF_C L_BFu9s_Sf lv;
    check2(sizeof(lv), 10, "sizeof(L_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_BFu9s_Sf)");
    check_field_offset(lv, v1, 0, "L_BFu9s_Sf.v1");
    set_bf_and_test(lv, v2, 8, 0, 9, 1, "L_BFu9s_Sf");
    set_bf_and_test(lv, v2, 8, 0, 9, hide_ull(1LL<<8), "L_BFu9s_Sf");
    check_field_offset(lv, v3, 10, "L_BFu9s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_BFu9s_Sf, L_BFu9s_Sf)
//============================================================================



static void Test_L_C_Sf()
{
  {
    init_simple_test("L_C_Sf");
    STRUCT_IF_C L_C_Sf lv;
    check2(sizeof(lv), 9, "sizeof(L_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_C_Sf)");
    check_field_offset(lv, v1, 0, "L_C_Sf.v1");
    check_field_offset(lv, v2, 8, "L_C_Sf.v2");
    check_field_offset(lv, v3, 9, "L_C_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_C_Sf, L_C_Sf)
//============================================================================



static void Test_L_D_Sf()
{
  {
    init_simple_test("L_D_Sf");
    STRUCT_IF_C L_D_Sf lv;
    check2(sizeof(lv), 16, "sizeof(L_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_D_Sf)");
    check_field_offset(lv, v1, 0, "L_D_Sf.v1");
    check_field_offset(lv, v2, 8, "L_D_Sf.v2");
    check_field_offset(lv, v3, 16, "L_D_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_D_Sf, L_D_Sf)
//============================================================================



static void Test_L_F_Sf()
{
  {
    init_simple_test("L_F_Sf");
    STRUCT_IF_C L_F_Sf lv;
    check2(sizeof(lv), 12, "sizeof(L_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_F_Sf)");
    check_field_offset(lv, v1, 0, "L_F_Sf.v1");
    check_field_offset(lv, v2, 8, "L_F_Sf.v2");
    check_field_offset(lv, v3, 12, "L_F_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_F_Sf, L_F_Sf)
//============================================================================



static void Test_L_I_Sf()
{
  {
    init_simple_test("L_I_Sf");
    STRUCT_IF_C L_I_Sf lv;
    check2(sizeof(lv), 12, "sizeof(L_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_I_Sf)");
    check_field_offset(lv, v1, 0, "L_I_Sf.v1");
    check_field_offset(lv, v2, 8, "L_I_Sf.v2");
    check_field_offset(lv, v3, 12, "L_I_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_I_Sf, L_I_Sf)
//============================================================================



static void Test_L_Ip_Sf()
{
  {
    init_simple_test("L_Ip_Sf");
    STRUCT_IF_C L_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_Ip_Sf)");
    check_field_offset(lv, v1, 0, "L_Ip_Sf.v1");
    check_field_offset(lv, v2, 8, "L_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "L_Ip_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Ip_Sf, L_Ip_Sf)
//============================================================================



static void Test_L_L_Sf()
{
  {
    init_simple_test("L_L_Sf");
    STRUCT_IF_C L_L_Sf lv;
    check2(sizeof(lv), 16, "sizeof(L_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_L_Sf)");
    check_field_offset(lv, v1, 0, "L_L_Sf.v1");
    check_field_offset(lv, v2, 8, "L_L_Sf.v2");
    check_field_offset(lv, v3, 16, "L_L_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_L_Sf, L_L_Sf)
//============================================================================



static void Test_L_S_Sf()
{
  {
    init_simple_test("L_S_Sf");
    STRUCT_IF_C L_S_Sf lv;
    check2(sizeof(lv), 10, "sizeof(L_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_S_Sf)");
    check_field_offset(lv, v1, 0, "L_S_Sf.v1");
    check_field_offset(lv, v2, 8, "L_S_Sf.v2");
    check_field_offset(lv, v3, 10, "L_S_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_S_Sf, L_S_Sf)
//============================================================================



static void Test_L_Sf()
{
  {
    init_simple_test("L_Sf");
    STRUCT_IF_C L_Sf lv;
    check2(sizeof(lv), 8, "sizeof(L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf)");
    check_field_offset(lv, v1, 0, "L_Sf.v1");
    check_field_offset(lv, v2, 8, "L_Sf.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf, L_Sf)
//============================================================================



static void Test_L_Sf_BFu15i()
{
  {
    init_simple_test("L_Sf_BFu15i");
    static STRUCT_IF_C L_Sf_BFu15i lv;
    check2(sizeof(lv), 10, "sizeof(L_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_BFu15i)");
    check_field_offset(lv, v1, 0, "L_Sf_BFu15i.v1");
    check_field_offset(lv, v2, 8, "L_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 8, 0, 15, 1, "L_Sf_BFu15i");
    set_bf_and_test(lv, v3, 8, 0, 15, hide_ull(1LL<<14), "L_Sf_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_BFu15i, L_Sf_BFu15i)
//============================================================================



static void Test_L_Sf_BFu15ll()
{
  {
    init_simple_test("L_Sf_BFu15ll");
    static STRUCT_IF_C L_Sf_BFu15ll lv;
    check2(sizeof(lv), 10, "sizeof(L_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_BFu15ll)");
    check_field_offset(lv, v1, 0, "L_Sf_BFu15ll.v1");
    check_field_offset(lv, v2, 8, "L_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 8, 0, 15, 1, "L_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 8, 0, 15, hide_ull(1LL<<14), "L_Sf_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_BFu15ll, L_Sf_BFu15ll)
//============================================================================



static void Test_L_Sf_BFu15s()
{
  {
    init_simple_test("L_Sf_BFu15s");
    static STRUCT_IF_C L_Sf_BFu15s lv;
    check2(sizeof(lv), 10, "sizeof(L_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_BFu15s)");
    check_field_offset(lv, v1, 0, "L_Sf_BFu15s.v1");
    check_field_offset(lv, v2, 8, "L_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 8, 0, 15, 1, "L_Sf_BFu15s");
    set_bf_and_test(lv, v3, 8, 0, 15, hide_ull(1LL<<14), "L_Sf_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_BFu15s, L_Sf_BFu15s)
//============================================================================



static void Test_L_Sf_BFu16i()
{
  {
    init_simple_test("L_Sf_BFu16i");
    static STRUCT_IF_C L_Sf_BFu16i lv;
    check2(sizeof(lv), 10, "sizeof(L_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_BFu16i)");
    check_field_offset(lv, v1, 0, "L_Sf_BFu16i.v1");
    check_field_offset(lv, v2, 8, "L_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 8, 0, 16, 1, "L_Sf_BFu16i");
    set_bf_and_test(lv, v3, 8, 0, 16, hide_ull(1LL<<15), "L_Sf_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_BFu16i, L_Sf_BFu16i)
//============================================================================



static void Test_L_Sf_BFu16ll()
{
  {
    init_simple_test("L_Sf_BFu16ll");
    static STRUCT_IF_C L_Sf_BFu16ll lv;
    check2(sizeof(lv), 10, "sizeof(L_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_BFu16ll)");
    check_field_offset(lv, v1, 0, "L_Sf_BFu16ll.v1");
    check_field_offset(lv, v2, 8, "L_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 8, 0, 16, 1, "L_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 8, 0, 16, hide_ull(1LL<<15), "L_Sf_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_BFu16ll, L_Sf_BFu16ll)
//============================================================================



static void Test_L_Sf_BFu16s()
{
  {
    init_simple_test("L_Sf_BFu16s");
    static STRUCT_IF_C L_Sf_BFu16s lv;
    check2(sizeof(lv), 10, "sizeof(L_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_BFu16s)");
    check_field_offset(lv, v1, 0, "L_Sf_BFu16s.v1");
    check_field_offset(lv, v2, 8, "L_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 8, 0, 16, 1, "L_Sf_BFu16s");
    set_bf_and_test(lv, v3, 8, 0, 16, hide_ull(1LL<<15), "L_Sf_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_BFu16s, L_Sf_BFu16s)
//============================================================================



static void Test_L_Sf_BFu17i()
{
  {
    init_simple_test("L_Sf_BFu17i");
    static STRUCT_IF_C L_Sf_BFu17i lv;
    check2(sizeof(lv), 11, "sizeof(L_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_BFu17i)");
    check_field_offset(lv, v1, 0, "L_Sf_BFu17i.v1");
    check_field_offset(lv, v2, 8, "L_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 8, 0, 17, 1, "L_Sf_BFu17i");
    set_bf_and_test(lv, v3, 8, 0, 17, hide_ull(1LL<<16), "L_Sf_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_BFu17i, L_Sf_BFu17i)
//============================================================================



static void Test_L_Sf_BFu17ll()
{
  {
    init_simple_test("L_Sf_BFu17ll");
    static STRUCT_IF_C L_Sf_BFu17ll lv;
    check2(sizeof(lv), 11, "sizeof(L_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_BFu17ll)");
    check_field_offset(lv, v1, 0, "L_Sf_BFu17ll.v1");
    check_field_offset(lv, v2, 8, "L_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 8, 0, 17, 1, "L_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 8, 0, 17, hide_ull(1LL<<16), "L_Sf_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_BFu17ll, L_Sf_BFu17ll)
//============================================================================



static void Test_L_Sf_BFu1c()
{
  {
    init_simple_test("L_Sf_BFu1c");
    static STRUCT_IF_C L_Sf_BFu1c lv;
    check2(sizeof(lv), 9, "sizeof(L_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_BFu1c)");
    check_field_offset(lv, v1, 0, "L_Sf_BFu1c.v1");
    check_field_offset(lv, v2, 8, "L_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 8, 0, 1, 1, "L_Sf_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_BFu1c, L_Sf_BFu1c)
//============================================================================



static void Test_L_Sf_BFu1i()
{
  {
    init_simple_test("L_Sf_BFu1i");
    static STRUCT_IF_C L_Sf_BFu1i lv;
    check2(sizeof(lv), 9, "sizeof(L_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_BFu1i)");
    check_field_offset(lv, v1, 0, "L_Sf_BFu1i.v1");
    check_field_offset(lv, v2, 8, "L_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 8, 0, 1, 1, "L_Sf_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_BFu1i, L_Sf_BFu1i)
//============================================================================



static void Test_L_Sf_BFu1ll()
{
  {
    init_simple_test("L_Sf_BFu1ll");
    static STRUCT_IF_C L_Sf_BFu1ll lv;
    check2(sizeof(lv), 9, "sizeof(L_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_BFu1ll)");
    check_field_offset(lv, v1, 0, "L_Sf_BFu1ll.v1");
    check_field_offset(lv, v2, 8, "L_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 8, 0, 1, 1, "L_Sf_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_BFu1ll, L_Sf_BFu1ll)
//============================================================================



static void Test_L_Sf_BFu1s()
{
  {
    init_simple_test("L_Sf_BFu1s");
    static STRUCT_IF_C L_Sf_BFu1s lv;
    check2(sizeof(lv), 9, "sizeof(L_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_BFu1s)");
    check_field_offset(lv, v1, 0, "L_Sf_BFu1s.v1");
    check_field_offset(lv, v2, 8, "L_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 8, 0, 1, 1, "L_Sf_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_BFu1s, L_Sf_BFu1s)
//============================================================================



static void Test_L_Sf_BFu31i()
{
  {
    init_simple_test("L_Sf_BFu31i");
    static STRUCT_IF_C L_Sf_BFu31i lv;
    check2(sizeof(lv), 12, "sizeof(L_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_BFu31i)");
    check_field_offset(lv, v1, 0, "L_Sf_BFu31i.v1");
    check_field_offset(lv, v2, 8, "L_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 8, 0, 31, 1, "L_Sf_BFu31i");
    set_bf_and_test(lv, v3, 8, 0, 31, hide_ull(1LL<<30), "L_Sf_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_BFu31i, L_Sf_BFu31i)
//============================================================================



static void Test_L_Sf_BFu31ll()
{
  {
    init_simple_test("L_Sf_BFu31ll");
    static STRUCT_IF_C L_Sf_BFu31ll lv;
    check2(sizeof(lv), 12, "sizeof(L_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_BFu31ll)");
    check_field_offset(lv, v1, 0, "L_Sf_BFu31ll.v1");
    check_field_offset(lv, v2, 8, "L_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 8, 0, 31, 1, "L_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 8, 0, 31, hide_ull(1LL<<30), "L_Sf_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_BFu31ll, L_Sf_BFu31ll)
//============================================================================



static void Test_L_Sf_BFu32i()
{
  {
    init_simple_test("L_Sf_BFu32i");
    static STRUCT_IF_C L_Sf_BFu32i lv;
    check2(sizeof(lv), 12, "sizeof(L_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_BFu32i)");
    check_field_offset(lv, v1, 0, "L_Sf_BFu32i.v1");
    check_field_offset(lv, v2, 8, "L_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 8, 0, 32, 1, "L_Sf_BFu32i");
    set_bf_and_test(lv, v3, 8, 0, 32, hide_ull(1LL<<31), "L_Sf_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_BFu32i, L_Sf_BFu32i)
//============================================================================



static void Test_L_Sf_BFu32ll()
{
  {
    init_simple_test("L_Sf_BFu32ll");
    static STRUCT_IF_C L_Sf_BFu32ll lv;
    check2(sizeof(lv), 12, "sizeof(L_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_BFu32ll)");
    check_field_offset(lv, v1, 0, "L_Sf_BFu32ll.v1");
    check_field_offset(lv, v2, 8, "L_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 8, 0, 32, 1, "L_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 8, 0, 32, hide_ull(1LL<<31), "L_Sf_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_BFu32ll, L_Sf_BFu32ll)
//============================================================================



static void Test_L_Sf_BFu33()
{
  {
    init_simple_test("L_Sf_BFu33");
    static STRUCT_IF_C L_Sf_BFu33 lv;
    check2(sizeof(lv), 13, "sizeof(L_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_BFu33)");
    check_field_offset(lv, v1, 0, "L_Sf_BFu33.v1");
    check_field_offset(lv, v2, 8, "L_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 8, 0, 33, 1, "L_Sf_BFu33");
    set_bf_and_test(lv, v3, 8, 0, 33, hide_ull(1LL<<32), "L_Sf_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_BFu33, L_Sf_BFu33)
//============================================================================



static void Test_L_Sf_BFu7c()
{
  {
    init_simple_test("L_Sf_BFu7c");
    static STRUCT_IF_C L_Sf_BFu7c lv;
    check2(sizeof(lv), 9, "sizeof(L_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_BFu7c)");
    check_field_offset(lv, v1, 0, "L_Sf_BFu7c.v1");
    check_field_offset(lv, v2, 8, "L_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 8, 0, 7, 1, "L_Sf_BFu7c");
    set_bf_and_test(lv, v3, 8, 0, 7, hide_ull(1LL<<6), "L_Sf_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_BFu7c, L_Sf_BFu7c)
//============================================================================



static void Test_L_Sf_BFu7i()
{
  {
    init_simple_test("L_Sf_BFu7i");
    static STRUCT_IF_C L_Sf_BFu7i lv;
    check2(sizeof(lv), 9, "sizeof(L_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_BFu7i)");
    check_field_offset(lv, v1, 0, "L_Sf_BFu7i.v1");
    check_field_offset(lv, v2, 8, "L_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 8, 0, 7, 1, "L_Sf_BFu7i");
    set_bf_and_test(lv, v3, 8, 0, 7, hide_ull(1LL<<6), "L_Sf_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_BFu7i, L_Sf_BFu7i)
//============================================================================



static void Test_L_Sf_BFu7ll()
{
  {
    init_simple_test("L_Sf_BFu7ll");
    static STRUCT_IF_C L_Sf_BFu7ll lv;
    check2(sizeof(lv), 9, "sizeof(L_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_BFu7ll)");
    check_field_offset(lv, v1, 0, "L_Sf_BFu7ll.v1");
    check_field_offset(lv, v2, 8, "L_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 8, 0, 7, 1, "L_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 8, 0, 7, hide_ull(1LL<<6), "L_Sf_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_BFu7ll, L_Sf_BFu7ll)
//============================================================================



static void Test_L_Sf_BFu7s()
{
  {
    init_simple_test("L_Sf_BFu7s");
    static STRUCT_IF_C L_Sf_BFu7s lv;
    check2(sizeof(lv), 9, "sizeof(L_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_BFu7s)");
    check_field_offset(lv, v1, 0, "L_Sf_BFu7s.v1");
    check_field_offset(lv, v2, 8, "L_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 8, 0, 7, 1, "L_Sf_BFu7s");
    set_bf_and_test(lv, v3, 8, 0, 7, hide_ull(1LL<<6), "L_Sf_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_BFu7s, L_Sf_BFu7s)
//============================================================================



static void Test_L_Sf_BFu8c()
{
  {
    init_simple_test("L_Sf_BFu8c");
    static STRUCT_IF_C L_Sf_BFu8c lv;
    check2(sizeof(lv), 9, "sizeof(L_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_BFu8c)");
    check_field_offset(lv, v1, 0, "L_Sf_BFu8c.v1");
    check_field_offset(lv, v2, 8, "L_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 8, 0, 8, 1, "L_Sf_BFu8c");
    set_bf_and_test(lv, v3, 8, 0, 8, hide_ull(1LL<<7), "L_Sf_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_BFu8c, L_Sf_BFu8c)
//============================================================================



static void Test_L_Sf_BFu8i()
{
  {
    init_simple_test("L_Sf_BFu8i");
    static STRUCT_IF_C L_Sf_BFu8i lv;
    check2(sizeof(lv), 9, "sizeof(L_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_BFu8i)");
    check_field_offset(lv, v1, 0, "L_Sf_BFu8i.v1");
    check_field_offset(lv, v2, 8, "L_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 8, 0, 8, 1, "L_Sf_BFu8i");
    set_bf_and_test(lv, v3, 8, 0, 8, hide_ull(1LL<<7), "L_Sf_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_BFu8i, L_Sf_BFu8i)
//============================================================================



static void Test_L_Sf_BFu8ll()
{
  {
    init_simple_test("L_Sf_BFu8ll");
    static STRUCT_IF_C L_Sf_BFu8ll lv;
    check2(sizeof(lv), 9, "sizeof(L_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_BFu8ll)");
    check_field_offset(lv, v1, 0, "L_Sf_BFu8ll.v1");
    check_field_offset(lv, v2, 8, "L_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 8, 0, 8, 1, "L_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 8, 0, 8, hide_ull(1LL<<7), "L_Sf_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_BFu8ll, L_Sf_BFu8ll)
//============================================================================



static void Test_L_Sf_BFu8s()
{
  {
    init_simple_test("L_Sf_BFu8s");
    static STRUCT_IF_C L_Sf_BFu8s lv;
    check2(sizeof(lv), 9, "sizeof(L_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_BFu8s)");
    check_field_offset(lv, v1, 0, "L_Sf_BFu8s.v1");
    check_field_offset(lv, v2, 8, "L_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 8, 0, 8, 1, "L_Sf_BFu8s");
    set_bf_and_test(lv, v3, 8, 0, 8, hide_ull(1LL<<7), "L_Sf_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_BFu8s, L_Sf_BFu8s)
//============================================================================



static void Test_L_Sf_BFu9i()
{
  {
    init_simple_test("L_Sf_BFu9i");
    static STRUCT_IF_C L_Sf_BFu9i lv;
    check2(sizeof(lv), 10, "sizeof(L_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_BFu9i)");
    check_field_offset(lv, v1, 0, "L_Sf_BFu9i.v1");
    check_field_offset(lv, v2, 8, "L_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 8, 0, 9, 1, "L_Sf_BFu9i");
    set_bf_and_test(lv, v3, 8, 0, 9, hide_ull(1LL<<8), "L_Sf_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_BFu9i, L_Sf_BFu9i)
//============================================================================



static void Test_L_Sf_BFu9ll()
{
  {
    init_simple_test("L_Sf_BFu9ll");
    static STRUCT_IF_C L_Sf_BFu9ll lv;
    check2(sizeof(lv), 10, "sizeof(L_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_BFu9ll)");
    check_field_offset(lv, v1, 0, "L_Sf_BFu9ll.v1");
    check_field_offset(lv, v2, 8, "L_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 8, 0, 9, 1, "L_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 8, 0, 9, hide_ull(1LL<<8), "L_Sf_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_BFu9ll, L_Sf_BFu9ll)
//============================================================================



static void Test_L_Sf_BFu9s()
{
  {
    init_simple_test("L_Sf_BFu9s");
    static STRUCT_IF_C L_Sf_BFu9s lv;
    check2(sizeof(lv), 10, "sizeof(L_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_BFu9s)");
    check_field_offset(lv, v1, 0, "L_Sf_BFu9s.v1");
    check_field_offset(lv, v2, 8, "L_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 8, 0, 9, 1, "L_Sf_BFu9s");
    set_bf_and_test(lv, v3, 8, 0, 9, hide_ull(1LL<<8), "L_Sf_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_BFu9s, L_Sf_BFu9s)
//============================================================================



static void Test_L_Sf_C()
{
  {
    init_simple_test("L_Sf_C");
    STRUCT_IF_C L_Sf_C lv;
    check2(sizeof(lv), 9, "sizeof(L_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_C)");
    check_field_offset(lv, v1, 0, "L_Sf_C.v1");
    check_field_offset(lv, v2, 8, "L_Sf_C.v2");
    check_field_offset(lv, v3, 8, "L_Sf_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_C, L_Sf_C)
//============================================================================



static void Test_L_Sf_D()
{
  {
    init_simple_test("L_Sf_D");
    STRUCT_IF_C L_Sf_D lv;
    check2(sizeof(lv), 16, "sizeof(L_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_D)");
    check_field_offset(lv, v1, 0, "L_Sf_D.v1");
    check_field_offset(lv, v2, 8, "L_Sf_D.v2");
    check_field_offset(lv, v3, 8, "L_Sf_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_D, L_Sf_D)
//============================================================================



static void Test_L_Sf_F()
{
  {
    init_simple_test("L_Sf_F");
    STRUCT_IF_C L_Sf_F lv;
    check2(sizeof(lv), 12, "sizeof(L_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_F)");
    check_field_offset(lv, v1, 0, "L_Sf_F.v1");
    check_field_offset(lv, v2, 8, "L_Sf_F.v2");
    check_field_offset(lv, v3, 8, "L_Sf_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_F, L_Sf_F)
//============================================================================



static void Test_L_Sf_I()
{
  {
    init_simple_test("L_Sf_I");
    STRUCT_IF_C L_Sf_I lv;
    check2(sizeof(lv), 12, "sizeof(L_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_I)");
    check_field_offset(lv, v1, 0, "L_Sf_I.v1");
    check_field_offset(lv, v2, 8, "L_Sf_I.v2");
    check_field_offset(lv, v3, 8, "L_Sf_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_I, L_Sf_I)
//============================================================================



static void Test_L_Sf_Ip()
{
  {
    init_simple_test("L_Sf_Ip");
    STRUCT_IF_C L_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_Ip)");
    check_field_offset(lv, v1, 0, "L_Sf_Ip.v1");
    check_field_offset(lv, v2, 8, "L_Sf_Ip.v2");
    check_field_offset(lv, v3, 8, "L_Sf_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_Ip, L_Sf_Ip)
//============================================================================



static void Test_L_Sf_L()
{
  {
    init_simple_test("L_Sf_L");
    STRUCT_IF_C L_Sf_L lv;
    check2(sizeof(lv), 16, "sizeof(L_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_L)");
    check_field_offset(lv, v1, 0, "L_Sf_L.v1");
    check_field_offset(lv, v2, 8, "L_Sf_L.v2");
    check_field_offset(lv, v3, 8, "L_Sf_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_L, L_Sf_L)
//============================================================================



static void Test_L_Sf_S()
{
  {
    init_simple_test("L_Sf_S");
    STRUCT_IF_C L_Sf_S lv;
    check2(sizeof(lv), 10, "sizeof(L_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_S)");
    check_field_offset(lv, v1, 0, "L_Sf_S.v1");
    check_field_offset(lv, v2, 8, "L_Sf_S.v2");
    check_field_offset(lv, v3, 8, "L_Sf_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_S, L_Sf_S)
//============================================================================



static void Test_L_Sf_Sf()
{
  {
    init_simple_test("L_Sf_Sf");
    STRUCT_IF_C L_Sf_Sf lv;
    check2(sizeof(lv), 8, "sizeof(L_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_Sf)");
    check_field_offset(lv, v1, 0, "L_Sf_Sf.v1");
    check_field_offset(lv, v2, 8, "L_Sf_Sf.v2");
    check_field_offset(lv, v3, 8, "L_Sf_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_Sf, L_Sf_Sf)
//============================================================================



static void Test_L_Sf_Uc()
{
  {
    init_simple_test("L_Sf_Uc");
    STRUCT_IF_C L_Sf_Uc lv;
    check2(sizeof(lv), 9, "sizeof(L_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_Uc)");
    check_field_offset(lv, v1, 0, "L_Sf_Uc.v1");
    check_field_offset(lv, v2, 8, "L_Sf_Uc.v2");
    check_field_offset(lv, v3, 8, "L_Sf_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_Uc, L_Sf_Uc)
//============================================================================



static void Test_L_Sf_Ui()
{
  {
    init_simple_test("L_Sf_Ui");
    STRUCT_IF_C L_Sf_Ui lv;
    check2(sizeof(lv), 12, "sizeof(L_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_Ui)");
    check_field_offset(lv, v1, 0, "L_Sf_Ui.v1");
    check_field_offset(lv, v2, 8, "L_Sf_Ui.v2");
    check_field_offset(lv, v3, 8, "L_Sf_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_Ui, L_Sf_Ui)
//============================================================================



static void Test_L_Sf_Ul()
{
  {
    init_simple_test("L_Sf_Ul");
    STRUCT_IF_C L_Sf_Ul lv;
    check2(sizeof(lv), 16, "sizeof(L_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_Ul)");
    check_field_offset(lv, v1, 0, "L_Sf_Ul.v1");
    check_field_offset(lv, v2, 8, "L_Sf_Ul.v2");
    check_field_offset(lv, v3, 8, "L_Sf_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_Ul, L_Sf_Ul)
//============================================================================



static void Test_L_Sf_Us()
{
  {
    init_simple_test("L_Sf_Us");
    STRUCT_IF_C L_Sf_Us lv;
    check2(sizeof(lv), 10, "sizeof(L_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_Us)");
    check_field_offset(lv, v1, 0, "L_Sf_Us.v1");
    check_field_offset(lv, v2, 8, "L_Sf_Us.v2");
    check_field_offset(lv, v3, 8, "L_Sf_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_Us, L_Sf_Us)
//============================================================================



static void Test_L_Sf_Vp()
{
  {
    init_simple_test("L_Sf_Vp");
    STRUCT_IF_C L_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(L_Sf_Vp)");
    check_field_offset(lv, v1, 0, "L_Sf_Vp.v1");
    check_field_offset(lv, v2, 8, "L_Sf_Vp.v2");
    check_field_offset(lv, v3, 8, "L_Sf_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Sf_Vp, L_Sf_Vp)
//============================================================================



static void Test_L_Uc_Sf()
{
  {
    init_simple_test("L_Uc_Sf");
    STRUCT_IF_C L_Uc_Sf lv;
    check2(sizeof(lv), 9, "sizeof(L_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_Uc_Sf)");
    check_field_offset(lv, v1, 0, "L_Uc_Sf.v1");
    check_field_offset(lv, v2, 8, "L_Uc_Sf.v2");
    check_field_offset(lv, v3, 9, "L_Uc_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Uc_Sf, L_Uc_Sf)
//============================================================================



static void Test_L_Ui_Sf()
{
  {
    init_simple_test("L_Ui_Sf");
    STRUCT_IF_C L_Ui_Sf lv;
    check2(sizeof(lv), 12, "sizeof(L_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_Ui_Sf)");
    check_field_offset(lv, v1, 0, "L_Ui_Sf.v1");
    check_field_offset(lv, v2, 8, "L_Ui_Sf.v2");
    check_field_offset(lv, v3, 12, "L_Ui_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Ui_Sf, L_Ui_Sf)
//============================================================================



static void Test_L_Ul_Sf()
{
  {
    init_simple_test("L_Ul_Sf");
    STRUCT_IF_C L_Ul_Sf lv;
    check2(sizeof(lv), 16, "sizeof(L_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_Ul_Sf)");
    check_field_offset(lv, v1, 0, "L_Ul_Sf.v1");
    check_field_offset(lv, v2, 8, "L_Ul_Sf.v2");
    check_field_offset(lv, v3, 16, "L_Ul_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Ul_Sf, L_Ul_Sf)
//============================================================================



static void Test_L_Us_Sf()
{
  {
    init_simple_test("L_Us_Sf");
    STRUCT_IF_C L_Us_Sf lv;
    check2(sizeof(lv), 10, "sizeof(L_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_Us_Sf)");
    check_field_offset(lv, v1, 0, "L_Us_Sf.v1");
    check_field_offset(lv, v2, 8, "L_Us_Sf.v2");
    check_field_offset(lv, v3, 10, "L_Us_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Us_Sf, L_Us_Sf)
//============================================================================



static void Test_L_Vp_Sf()
{
  {
    init_simple_test("L_Vp_Sf");
    STRUCT_IF_C L_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(L_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(L_Vp_Sf)");
    check_field_offset(lv, v1, 0, "L_Vp_Sf.v1");
    check_field_offset(lv, v2, 8, "L_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "L_Vp_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_L_Vp_Sf, L_Vp_Sf)
//============================================================================



static void Test_S_BFu15i_Sf()
{
  {
    init_simple_test("S_BFu15i_Sf");
    static STRUCT_IF_C S_BFu15i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu15i_Sf)");
    check_field_offset(lv, v1, 0, "S_BFu15i_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "S_BFu15i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "S_BFu15i_Sf");
    check_field_offset(lv, v3, 4, "S_BFu15i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu15i_Sf, S_BFu15i_Sf)
//============================================================================



static void Test_S_BFu15ll_Sf()
{
  {
    init_simple_test("S_BFu15ll_Sf");
    static STRUCT_IF_C S_BFu15ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu15ll_Sf)");
    check_field_offset(lv, v1, 0, "S_BFu15ll_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "S_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "S_BFu15ll_Sf");
    check_field_offset(lv, v3, 4, "S_BFu15ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu15ll_Sf, S_BFu15ll_Sf)
//============================================================================



static void Test_S_BFu15s_Sf()
{
  {
    init_simple_test("S_BFu15s_Sf");
    static STRUCT_IF_C S_BFu15s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu15s_Sf)");
    check_field_offset(lv, v1, 0, "S_BFu15s_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "S_BFu15s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "S_BFu15s_Sf");
    check_field_offset(lv, v3, 4, "S_BFu15s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu15s_Sf, S_BFu15s_Sf)
//============================================================================



static void Test_S_BFu16i_Sf()
{
  {
    init_simple_test("S_BFu16i_Sf");
    static STRUCT_IF_C S_BFu16i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu16i_Sf)");
    check_field_offset(lv, v1, 0, "S_BFu16i_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "S_BFu16i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "S_BFu16i_Sf");
    check_field_offset(lv, v3, 4, "S_BFu16i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu16i_Sf, S_BFu16i_Sf)
//============================================================================



static void Test_S_BFu16ll_Sf()
{
  {
    init_simple_test("S_BFu16ll_Sf");
    static STRUCT_IF_C S_BFu16ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu16ll_Sf)");
    check_field_offset(lv, v1, 0, "S_BFu16ll_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "S_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "S_BFu16ll_Sf");
    check_field_offset(lv, v3, 4, "S_BFu16ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu16ll_Sf, S_BFu16ll_Sf)
//============================================================================



static void Test_S_BFu16s_Sf()
{
  {
    init_simple_test("S_BFu16s_Sf");
    static STRUCT_IF_C S_BFu16s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu16s_Sf)");
    check_field_offset(lv, v1, 0, "S_BFu16s_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "S_BFu16s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "S_BFu16s_Sf");
    check_field_offset(lv, v3, 4, "S_BFu16s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu16s_Sf, S_BFu16s_Sf)
//============================================================================



static void Test_S_BFu17i_Sf()
{
  {
    init_simple_test("S_BFu17i_Sf");
    static STRUCT_IF_C S_BFu17i_Sf lv;
    check2(sizeof(lv), 5, "sizeof(S_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu17i_Sf)");
    check_field_offset(lv, v1, 0, "S_BFu17i_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "S_BFu17i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "S_BFu17i_Sf");
    check_field_offset(lv, v3, 5, "S_BFu17i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu17i_Sf, S_BFu17i_Sf)
//============================================================================



static void Test_S_BFu17ll_Sf()
{
  {
    init_simple_test("S_BFu17ll_Sf");
    static STRUCT_IF_C S_BFu17ll_Sf lv;
    check2(sizeof(lv), 5, "sizeof(S_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu17ll_Sf)");
    check_field_offset(lv, v1, 0, "S_BFu17ll_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "S_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "S_BFu17ll_Sf");
    check_field_offset(lv, v3, 5, "S_BFu17ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu17ll_Sf, S_BFu17ll_Sf)
//============================================================================



static void Test_S_BFu1c_Sf()
{
  {
    init_simple_test("S_BFu1c_Sf");
    static STRUCT_IF_C S_BFu1c_Sf lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu1c_Sf)");
    check_field_offset(lv, v1, 0, "S_BFu1c_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "S_BFu1c_Sf");
    check_field_offset(lv, v3, 3, "S_BFu1c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu1c_Sf, S_BFu1c_Sf)
//============================================================================



static void Test_S_BFu1i_Sf()
{
  {
    init_simple_test("S_BFu1i_Sf");
    static STRUCT_IF_C S_BFu1i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu1i_Sf)");
    check_field_offset(lv, v1, 0, "S_BFu1i_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "S_BFu1i_Sf");
    check_field_offset(lv, v3, 3, "S_BFu1i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu1i_Sf, S_BFu1i_Sf)
//============================================================================



static void Test_S_BFu1ll_Sf()
{
  {
    init_simple_test("S_BFu1ll_Sf");
    static STRUCT_IF_C S_BFu1ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu1ll_Sf)");
    check_field_offset(lv, v1, 0, "S_BFu1ll_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "S_BFu1ll_Sf");
    check_field_offset(lv, v3, 3, "S_BFu1ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu1ll_Sf, S_BFu1ll_Sf)
//============================================================================



static void Test_S_BFu1s_Sf()
{
  {
    init_simple_test("S_BFu1s_Sf");
    static STRUCT_IF_C S_BFu1s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu1s_Sf)");
    check_field_offset(lv, v1, 0, "S_BFu1s_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "S_BFu1s_Sf");
    check_field_offset(lv, v3, 3, "S_BFu1s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu1s_Sf, S_BFu1s_Sf)
//============================================================================



static void Test_S_BFu31i_Sf()
{
  {
    init_simple_test("S_BFu31i_Sf");
    static STRUCT_IF_C S_BFu31i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(S_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu31i_Sf)");
    check_field_offset(lv, v1, 0, "S_BFu31i_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "S_BFu31i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "S_BFu31i_Sf");
    check_field_offset(lv, v3, 6, "S_BFu31i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu31i_Sf, S_BFu31i_Sf)
//============================================================================



static void Test_S_BFu31ll_Sf()
{
  {
    init_simple_test("S_BFu31ll_Sf");
    static STRUCT_IF_C S_BFu31ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(S_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu31ll_Sf)");
    check_field_offset(lv, v1, 0, "S_BFu31ll_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "S_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "S_BFu31ll_Sf");
    check_field_offset(lv, v3, 6, "S_BFu31ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu31ll_Sf, S_BFu31ll_Sf)
//============================================================================



static void Test_S_BFu32i_Sf()
{
  {
    init_simple_test("S_BFu32i_Sf");
    static STRUCT_IF_C S_BFu32i_Sf lv;
    check2(sizeof(lv), 6, "sizeof(S_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu32i_Sf)");
    check_field_offset(lv, v1, 0, "S_BFu32i_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "S_BFu32i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "S_BFu32i_Sf");
    check_field_offset(lv, v3, 6, "S_BFu32i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu32i_Sf, S_BFu32i_Sf)
//============================================================================



static void Test_S_BFu32ll_Sf()
{
  {
    init_simple_test("S_BFu32ll_Sf");
    static STRUCT_IF_C S_BFu32ll_Sf lv;
    check2(sizeof(lv), 6, "sizeof(S_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu32ll_Sf)");
    check_field_offset(lv, v1, 0, "S_BFu32ll_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "S_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "S_BFu32ll_Sf");
    check_field_offset(lv, v3, 6, "S_BFu32ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu32ll_Sf, S_BFu32ll_Sf)
//============================================================================



static void Test_S_BFu33_Sf()
{
  {
    init_simple_test("S_BFu33_Sf");
    static STRUCT_IF_C S_BFu33_Sf lv;
    check2(sizeof(lv), 7, "sizeof(S_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu33_Sf)");
    check_field_offset(lv, v1, 0, "S_BFu33_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "S_BFu33_Sf");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "S_BFu33_Sf");
    check_field_offset(lv, v3, 7, "S_BFu33_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu33_Sf, S_BFu33_Sf)
//============================================================================



static void Test_S_BFu7c_Sf()
{
  {
    init_simple_test("S_BFu7c_Sf");
    static STRUCT_IF_C S_BFu7c_Sf lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu7c_Sf)");
    check_field_offset(lv, v1, 0, "S_BFu7c_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "S_BFu7c_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "S_BFu7c_Sf");
    check_field_offset(lv, v3, 3, "S_BFu7c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu7c_Sf, S_BFu7c_Sf)
//============================================================================



static void Test_S_BFu7i_Sf()
{
  {
    init_simple_test("S_BFu7i_Sf");
    static STRUCT_IF_C S_BFu7i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu7i_Sf)");
    check_field_offset(lv, v1, 0, "S_BFu7i_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "S_BFu7i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "S_BFu7i_Sf");
    check_field_offset(lv, v3, 3, "S_BFu7i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu7i_Sf, S_BFu7i_Sf)
//============================================================================



static void Test_S_BFu7ll_Sf()
{
  {
    init_simple_test("S_BFu7ll_Sf");
    static STRUCT_IF_C S_BFu7ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu7ll_Sf)");
    check_field_offset(lv, v1, 0, "S_BFu7ll_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "S_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "S_BFu7ll_Sf");
    check_field_offset(lv, v3, 3, "S_BFu7ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu7ll_Sf, S_BFu7ll_Sf)
//============================================================================



static void Test_S_BFu7s_Sf()
{
  {
    init_simple_test("S_BFu7s_Sf");
    static STRUCT_IF_C S_BFu7s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu7s_Sf)");
    check_field_offset(lv, v1, 0, "S_BFu7s_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "S_BFu7s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "S_BFu7s_Sf");
    check_field_offset(lv, v3, 3, "S_BFu7s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu7s_Sf, S_BFu7s_Sf)
//============================================================================



static void Test_S_BFu8c_Sf()
{
  {
    init_simple_test("S_BFu8c_Sf");
    static STRUCT_IF_C S_BFu8c_Sf lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu8c_Sf)");
    check_field_offset(lv, v1, 0, "S_BFu8c_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "S_BFu8c_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "S_BFu8c_Sf");
    check_field_offset(lv, v3, 3, "S_BFu8c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu8c_Sf, S_BFu8c_Sf)
//============================================================================



static void Test_S_BFu8i_Sf()
{
  {
    init_simple_test("S_BFu8i_Sf");
    static STRUCT_IF_C S_BFu8i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu8i_Sf)");
    check_field_offset(lv, v1, 0, "S_BFu8i_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "S_BFu8i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "S_BFu8i_Sf");
    check_field_offset(lv, v3, 3, "S_BFu8i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu8i_Sf, S_BFu8i_Sf)
//============================================================================



static void Test_S_BFu8ll_Sf()
{
  {
    init_simple_test("S_BFu8ll_Sf");
    static STRUCT_IF_C S_BFu8ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu8ll_Sf)");
    check_field_offset(lv, v1, 0, "S_BFu8ll_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "S_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "S_BFu8ll_Sf");
    check_field_offset(lv, v3, 3, "S_BFu8ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu8ll_Sf, S_BFu8ll_Sf)
//============================================================================



static void Test_S_BFu8s_Sf()
{
  {
    init_simple_test("S_BFu8s_Sf");
    static STRUCT_IF_C S_BFu8s_Sf lv;
    check2(sizeof(lv), 3, "sizeof(S_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu8s_Sf)");
    check_field_offset(lv, v1, 0, "S_BFu8s_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "S_BFu8s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "S_BFu8s_Sf");
    check_field_offset(lv, v3, 3, "S_BFu8s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu8s_Sf, S_BFu8s_Sf)
//============================================================================



static void Test_S_BFu9i_Sf()
{
  {
    init_simple_test("S_BFu9i_Sf");
    static STRUCT_IF_C S_BFu9i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu9i_Sf)");
    check_field_offset(lv, v1, 0, "S_BFu9i_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "S_BFu9i_Sf");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "S_BFu9i_Sf");
    check_field_offset(lv, v3, 4, "S_BFu9i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu9i_Sf, S_BFu9i_Sf)
//============================================================================



static void Test_S_BFu9ll_Sf()
{
  {
    init_simple_test("S_BFu9ll_Sf");
    static STRUCT_IF_C S_BFu9ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu9ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu9ll_Sf)");
    check_field_offset(lv, v1, 0, "S_BFu9ll_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "S_BFu9ll_Sf");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "S_BFu9ll_Sf");
    check_field_offset(lv, v3, 4, "S_BFu9ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu9ll_Sf, S_BFu9ll_Sf)
//============================================================================



static void Test_S_BFu9s_Sf()
{
  {
    init_simple_test("S_BFu9s_Sf");
    static STRUCT_IF_C S_BFu9s_Sf lv;
    check2(sizeof(lv), 4, "sizeof(S_BFu9s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_BFu9s_Sf)");
    check_field_offset(lv, v1, 0, "S_BFu9s_Sf.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "S_BFu9s_Sf");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "S_BFu9s_Sf");
    check_field_offset(lv, v3, 4, "S_BFu9s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_BFu9s_Sf, S_BFu9s_Sf)
//============================================================================



static void Test_S_C_Sf()
{
  {
    init_simple_test("S_C_Sf");
    STRUCT_IF_C S_C_Sf lv;
    check2(sizeof(lv), 3, "sizeof(S_C_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_C_Sf)");
    check_field_offset(lv, v1, 0, "S_C_Sf.v1");
    check_field_offset(lv, v2, 2, "S_C_Sf.v2");
    check_field_offset(lv, v3, 3, "S_C_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_C_Sf, S_C_Sf)
//============================================================================



static void Test_S_D_Sf()
{
  {
    init_simple_test("S_D_Sf");
    STRUCT_IF_C S_D_Sf lv;
    check2(sizeof(lv), 10, "sizeof(S_D_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_D_Sf)");
    check_field_offset(lv, v1, 0, "S_D_Sf.v1");
    check_field_offset(lv, v2, 2, "S_D_Sf.v2");
    check_field_offset(lv, v3, 10, "S_D_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_D_Sf, S_D_Sf)
//============================================================================



static void Test_S_F_Sf()
{
  {
    init_simple_test("S_F_Sf");
    STRUCT_IF_C S_F_Sf lv;
    check2(sizeof(lv), 6, "sizeof(S_F_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_F_Sf)");
    check_field_offset(lv, v1, 0, "S_F_Sf.v1");
    check_field_offset(lv, v2, 2, "S_F_Sf.v2");
    check_field_offset(lv, v3, 6, "S_F_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_F_Sf, S_F_Sf)
//============================================================================



static void Test_S_I_Sf()
{
  {
    init_simple_test("S_I_Sf");
    STRUCT_IF_C S_I_Sf lv;
    check2(sizeof(lv), 6, "sizeof(S_I_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_I_Sf)");
    check_field_offset(lv, v1, 0, "S_I_Sf.v1");
    check_field_offset(lv, v2, 2, "S_I_Sf.v2");
    check_field_offset(lv, v3, 6, "S_I_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_I_Sf, S_I_Sf)
//============================================================================



static void Test_S_Ip_Sf()
{
  {
    init_simple_test("S_Ip_Sf");
    STRUCT_IF_C S_Ip_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(S_Ip_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_Ip_Sf)");
    check_field_offset(lv, v1, 0, "S_Ip_Sf.v1");
    check_field_offset(lv, v2, 2, "S_Ip_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "S_Ip_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Ip_Sf, S_Ip_Sf)
//============================================================================



static void Test_S_L_Sf()
{
  {
    init_simple_test("S_L_Sf");
    STRUCT_IF_C S_L_Sf lv;
    check2(sizeof(lv), 10, "sizeof(S_L_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_L_Sf)");
    check_field_offset(lv, v1, 0, "S_L_Sf.v1");
    check_field_offset(lv, v2, 2, "S_L_Sf.v2");
    check_field_offset(lv, v3, 10, "S_L_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_L_Sf, S_L_Sf)
//============================================================================



static void Test_S_S_Sf()
{
  {
    init_simple_test("S_S_Sf");
    STRUCT_IF_C S_S_Sf lv;
    check2(sizeof(lv), 4, "sizeof(S_S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_S_Sf)");
    check_field_offset(lv, v1, 0, "S_S_Sf.v1");
    check_field_offset(lv, v2, 2, "S_S_Sf.v2");
    check_field_offset(lv, v3, 4, "S_S_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_S_Sf, S_S_Sf)
//============================================================================



static void Test_S_Sf()
{
  {
    init_simple_test("S_Sf");
    STRUCT_IF_C S_Sf lv;
    check2(sizeof(lv), 2, "sizeof(S_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf)");
    check_field_offset(lv, v1, 0, "S_Sf.v1");
    check_field_offset(lv, v2, 2, "S_Sf.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf, S_Sf)
//============================================================================



static void Test_S_Sf_BFu15i()
{
  {
    init_simple_test("S_Sf_BFu15i");
    static STRUCT_IF_C S_Sf_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(S_Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_BFu15i)");
    check_field_offset(lv, v1, 0, "S_Sf_BFu15i.v1");
    check_field_offset(lv, v2, 2, "S_Sf_BFu15i.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "S_Sf_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "S_Sf_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_BFu15i, S_Sf_BFu15i)
//============================================================================



static void Test_S_Sf_BFu15ll()
{
  {
    init_simple_test("S_Sf_BFu15ll");
    static STRUCT_IF_C S_Sf_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(S_Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_BFu15ll)");
    check_field_offset(lv, v1, 0, "S_Sf_BFu15ll.v1");
    check_field_offset(lv, v2, 2, "S_Sf_BFu15ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "S_Sf_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "S_Sf_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_BFu15ll, S_Sf_BFu15ll)
//============================================================================



static void Test_S_Sf_BFu15s()
{
  {
    init_simple_test("S_Sf_BFu15s");
    static STRUCT_IF_C S_Sf_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(S_Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_BFu15s)");
    check_field_offset(lv, v1, 0, "S_Sf_BFu15s.v1");
    check_field_offset(lv, v2, 2, "S_Sf_BFu15s.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "S_Sf_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "S_Sf_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_BFu15s, S_Sf_BFu15s)
//============================================================================



static void Test_S_Sf_BFu16i()
{
  {
    init_simple_test("S_Sf_BFu16i");
    static STRUCT_IF_C S_Sf_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(S_Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_BFu16i)");
    check_field_offset(lv, v1, 0, "S_Sf_BFu16i.v1");
    check_field_offset(lv, v2, 2, "S_Sf_BFu16i.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "S_Sf_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "S_Sf_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_BFu16i, S_Sf_BFu16i)
//============================================================================



static void Test_S_Sf_BFu16ll()
{
  {
    init_simple_test("S_Sf_BFu16ll");
    static STRUCT_IF_C S_Sf_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(S_Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_BFu16ll)");
    check_field_offset(lv, v1, 0, "S_Sf_BFu16ll.v1");
    check_field_offset(lv, v2, 2, "S_Sf_BFu16ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "S_Sf_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "S_Sf_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_BFu16ll, S_Sf_BFu16ll)
//============================================================================



static void Test_S_Sf_BFu16s()
{
  {
    init_simple_test("S_Sf_BFu16s");
    static STRUCT_IF_C S_Sf_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(S_Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_BFu16s)");
    check_field_offset(lv, v1, 0, "S_Sf_BFu16s.v1");
    check_field_offset(lv, v2, 2, "S_Sf_BFu16s.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "S_Sf_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "S_Sf_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_BFu16s, S_Sf_BFu16s)
//============================================================================



static void Test_S_Sf_BFu17i()
{
  {
    init_simple_test("S_Sf_BFu17i");
    static STRUCT_IF_C S_Sf_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(S_Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_BFu17i)");
    check_field_offset(lv, v1, 0, "S_Sf_BFu17i.v1");
    check_field_offset(lv, v2, 2, "S_Sf_BFu17i.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "S_Sf_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "S_Sf_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_BFu17i, S_Sf_BFu17i)
//============================================================================



static void Test_S_Sf_BFu17ll()
{
  {
    init_simple_test("S_Sf_BFu17ll");
    static STRUCT_IF_C S_Sf_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(S_Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_BFu17ll)");
    check_field_offset(lv, v1, 0, "S_Sf_BFu17ll.v1");
    check_field_offset(lv, v2, 2, "S_Sf_BFu17ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "S_Sf_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "S_Sf_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_BFu17ll, S_Sf_BFu17ll)
//============================================================================



static void Test_S_Sf_BFu1c()
{
  {
    init_simple_test("S_Sf_BFu1c");
    static STRUCT_IF_C S_Sf_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(S_Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_BFu1c)");
    check_field_offset(lv, v1, 0, "S_Sf_BFu1c.v1");
    check_field_offset(lv, v2, 2, "S_Sf_BFu1c.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "S_Sf_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_BFu1c, S_Sf_BFu1c)
//============================================================================



static void Test_S_Sf_BFu1i()
{
  {
    init_simple_test("S_Sf_BFu1i");
    static STRUCT_IF_C S_Sf_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(S_Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_BFu1i)");
    check_field_offset(lv, v1, 0, "S_Sf_BFu1i.v1");
    check_field_offset(lv, v2, 2, "S_Sf_BFu1i.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "S_Sf_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_BFu1i, S_Sf_BFu1i)
//============================================================================



static void Test_S_Sf_BFu1ll()
{
  {
    init_simple_test("S_Sf_BFu1ll");
    static STRUCT_IF_C S_Sf_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(S_Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_BFu1ll)");
    check_field_offset(lv, v1, 0, "S_Sf_BFu1ll.v1");
    check_field_offset(lv, v2, 2, "S_Sf_BFu1ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "S_Sf_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_BFu1ll, S_Sf_BFu1ll)
//============================================================================



static void Test_S_Sf_BFu1s()
{
  {
    init_simple_test("S_Sf_BFu1s");
    static STRUCT_IF_C S_Sf_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(S_Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_BFu1s)");
    check_field_offset(lv, v1, 0, "S_Sf_BFu1s.v1");
    check_field_offset(lv, v2, 2, "S_Sf_BFu1s.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "S_Sf_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_BFu1s, S_Sf_BFu1s)
//============================================================================



static void Test_S_Sf_BFu31i()
{
  {
    init_simple_test("S_Sf_BFu31i");
    static STRUCT_IF_C S_Sf_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(S_Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_BFu31i)");
    check_field_offset(lv, v1, 0, "S_Sf_BFu31i.v1");
    check_field_offset(lv, v2, 2, "S_Sf_BFu31i.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "S_Sf_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "S_Sf_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_BFu31i, S_Sf_BFu31i)
//============================================================================



static void Test_S_Sf_BFu31ll()
{
  {
    init_simple_test("S_Sf_BFu31ll");
    static STRUCT_IF_C S_Sf_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(S_Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_BFu31ll)");
    check_field_offset(lv, v1, 0, "S_Sf_BFu31ll.v1");
    check_field_offset(lv, v2, 2, "S_Sf_BFu31ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "S_Sf_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "S_Sf_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_BFu31ll, S_Sf_BFu31ll)
//============================================================================



static void Test_S_Sf_BFu32i()
{
  {
    init_simple_test("S_Sf_BFu32i");
    static STRUCT_IF_C S_Sf_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(S_Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_BFu32i)");
    check_field_offset(lv, v1, 0, "S_Sf_BFu32i.v1");
    check_field_offset(lv, v2, 2, "S_Sf_BFu32i.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "S_Sf_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "S_Sf_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_BFu32i, S_Sf_BFu32i)
//============================================================================



static void Test_S_Sf_BFu32ll()
{
  {
    init_simple_test("S_Sf_BFu32ll");
    static STRUCT_IF_C S_Sf_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(S_Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_BFu32ll)");
    check_field_offset(lv, v1, 0, "S_Sf_BFu32ll.v1");
    check_field_offset(lv, v2, 2, "S_Sf_BFu32ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "S_Sf_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "S_Sf_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_BFu32ll, S_Sf_BFu32ll)
//============================================================================



static void Test_S_Sf_BFu33()
{
  {
    init_simple_test("S_Sf_BFu33");
    static STRUCT_IF_C S_Sf_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(S_Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_BFu33)");
    check_field_offset(lv, v1, 0, "S_Sf_BFu33.v1");
    check_field_offset(lv, v2, 2, "S_Sf_BFu33.v2");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "S_Sf_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "S_Sf_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_BFu33, S_Sf_BFu33)
//============================================================================



static void Test_S_Sf_BFu7c()
{
  {
    init_simple_test("S_Sf_BFu7c");
    static STRUCT_IF_C S_Sf_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(S_Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_BFu7c)");
    check_field_offset(lv, v1, 0, "S_Sf_BFu7c.v1");
    check_field_offset(lv, v2, 2, "S_Sf_BFu7c.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "S_Sf_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "S_Sf_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_BFu7c, S_Sf_BFu7c)
//============================================================================



static void Test_S_Sf_BFu7i()
{
  {
    init_simple_test("S_Sf_BFu7i");
    static STRUCT_IF_C S_Sf_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(S_Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_BFu7i)");
    check_field_offset(lv, v1, 0, "S_Sf_BFu7i.v1");
    check_field_offset(lv, v2, 2, "S_Sf_BFu7i.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "S_Sf_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "S_Sf_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_BFu7i, S_Sf_BFu7i)
//============================================================================



static void Test_S_Sf_BFu7ll()
{
  {
    init_simple_test("S_Sf_BFu7ll");
    static STRUCT_IF_C S_Sf_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(S_Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_BFu7ll)");
    check_field_offset(lv, v1, 0, "S_Sf_BFu7ll.v1");
    check_field_offset(lv, v2, 2, "S_Sf_BFu7ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "S_Sf_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "S_Sf_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_BFu7ll, S_Sf_BFu7ll)
//============================================================================



static void Test_S_Sf_BFu7s()
{
  {
    init_simple_test("S_Sf_BFu7s");
    static STRUCT_IF_C S_Sf_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(S_Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_BFu7s)");
    check_field_offset(lv, v1, 0, "S_Sf_BFu7s.v1");
    check_field_offset(lv, v2, 2, "S_Sf_BFu7s.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "S_Sf_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "S_Sf_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_BFu7s, S_Sf_BFu7s)
//============================================================================



static void Test_S_Sf_BFu8c()
{
  {
    init_simple_test("S_Sf_BFu8c");
    static STRUCT_IF_C S_Sf_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(S_Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_BFu8c)");
    check_field_offset(lv, v1, 0, "S_Sf_BFu8c.v1");
    check_field_offset(lv, v2, 2, "S_Sf_BFu8c.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "S_Sf_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "S_Sf_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_BFu8c, S_Sf_BFu8c)
//============================================================================



static void Test_S_Sf_BFu8i()
{
  {
    init_simple_test("S_Sf_BFu8i");
    static STRUCT_IF_C S_Sf_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(S_Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_BFu8i)");
    check_field_offset(lv, v1, 0, "S_Sf_BFu8i.v1");
    check_field_offset(lv, v2, 2, "S_Sf_BFu8i.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "S_Sf_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "S_Sf_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_BFu8i, S_Sf_BFu8i)
//============================================================================



static void Test_S_Sf_BFu8ll()
{
  {
    init_simple_test("S_Sf_BFu8ll");
    static STRUCT_IF_C S_Sf_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(S_Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_BFu8ll)");
    check_field_offset(lv, v1, 0, "S_Sf_BFu8ll.v1");
    check_field_offset(lv, v2, 2, "S_Sf_BFu8ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "S_Sf_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "S_Sf_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_BFu8ll, S_Sf_BFu8ll)
//============================================================================



static void Test_S_Sf_BFu8s()
{
  {
    init_simple_test("S_Sf_BFu8s");
    static STRUCT_IF_C S_Sf_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(S_Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_BFu8s)");
    check_field_offset(lv, v1, 0, "S_Sf_BFu8s.v1");
    check_field_offset(lv, v2, 2, "S_Sf_BFu8s.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "S_Sf_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "S_Sf_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_BFu8s, S_Sf_BFu8s)
//============================================================================



static void Test_S_Sf_BFu9i()
{
  {
    init_simple_test("S_Sf_BFu9i");
    static STRUCT_IF_C S_Sf_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(S_Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_BFu9i)");
    check_field_offset(lv, v1, 0, "S_Sf_BFu9i.v1");
    check_field_offset(lv, v2, 2, "S_Sf_BFu9i.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "S_Sf_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "S_Sf_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_BFu9i, S_Sf_BFu9i)
//============================================================================



static void Test_S_Sf_BFu9ll()
{
  {
    init_simple_test("S_Sf_BFu9ll");
    static STRUCT_IF_C S_Sf_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(S_Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_BFu9ll)");
    check_field_offset(lv, v1, 0, "S_Sf_BFu9ll.v1");
    check_field_offset(lv, v2, 2, "S_Sf_BFu9ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "S_Sf_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "S_Sf_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_BFu9ll, S_Sf_BFu9ll)
//============================================================================



static void Test_S_Sf_BFu9s()
{
  {
    init_simple_test("S_Sf_BFu9s");
    static STRUCT_IF_C S_Sf_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(S_Sf_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_BFu9s)");
    check_field_offset(lv, v1, 0, "S_Sf_BFu9s.v1");
    check_field_offset(lv, v2, 2, "S_Sf_BFu9s.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "S_Sf_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "S_Sf_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_BFu9s, S_Sf_BFu9s)
//============================================================================



static void Test_S_Sf_C()
{
  {
    init_simple_test("S_Sf_C");
    STRUCT_IF_C S_Sf_C lv;
    check2(sizeof(lv), 3, "sizeof(S_Sf_C)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_C)");
    check_field_offset(lv, v1, 0, "S_Sf_C.v1");
    check_field_offset(lv, v2, 2, "S_Sf_C.v2");
    check_field_offset(lv, v3, 2, "S_Sf_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_C, S_Sf_C)
//============================================================================



static void Test_S_Sf_D()
{
  {
    init_simple_test("S_Sf_D");
    STRUCT_IF_C S_Sf_D lv;
    check2(sizeof(lv), 10, "sizeof(S_Sf_D)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_D)");
    check_field_offset(lv, v1, 0, "S_Sf_D.v1");
    check_field_offset(lv, v2, 2, "S_Sf_D.v2");
    check_field_offset(lv, v3, 2, "S_Sf_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_D, S_Sf_D)
//============================================================================



static void Test_S_Sf_F()
{
  {
    init_simple_test("S_Sf_F");
    STRUCT_IF_C S_Sf_F lv;
    check2(sizeof(lv), 6, "sizeof(S_Sf_F)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_F)");
    check_field_offset(lv, v1, 0, "S_Sf_F.v1");
    check_field_offset(lv, v2, 2, "S_Sf_F.v2");
    check_field_offset(lv, v3, 2, "S_Sf_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_F, S_Sf_F)
//============================================================================



static void Test_S_Sf_I()
{
  {
    init_simple_test("S_Sf_I");
    STRUCT_IF_C S_Sf_I lv;
    check2(sizeof(lv), 6, "sizeof(S_Sf_I)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_I)");
    check_field_offset(lv, v1, 0, "S_Sf_I.v1");
    check_field_offset(lv, v2, 2, "S_Sf_I.v2");
    check_field_offset(lv, v3, 2, "S_Sf_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_I, S_Sf_I)
//============================================================================



static void Test_S_Sf_Ip()
{
  {
    init_simple_test("S_Sf_Ip");
    STRUCT_IF_C S_Sf_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(S_Sf_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_Ip)");
    check_field_offset(lv, v1, 0, "S_Sf_Ip.v1");
    check_field_offset(lv, v2, 2, "S_Sf_Ip.v2");
    check_field_offset(lv, v3, 2, "S_Sf_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_Ip, S_Sf_Ip)
//============================================================================



static void Test_S_Sf_L()
{
  {
    init_simple_test("S_Sf_L");
    STRUCT_IF_C S_Sf_L lv;
    check2(sizeof(lv), 10, "sizeof(S_Sf_L)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_L)");
    check_field_offset(lv, v1, 0, "S_Sf_L.v1");
    check_field_offset(lv, v2, 2, "S_Sf_L.v2");
    check_field_offset(lv, v3, 2, "S_Sf_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_L, S_Sf_L)
//============================================================================



static void Test_S_Sf_S()
{
  {
    init_simple_test("S_Sf_S");
    STRUCT_IF_C S_Sf_S lv;
    check2(sizeof(lv), 4, "sizeof(S_Sf_S)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_S)");
    check_field_offset(lv, v1, 0, "S_Sf_S.v1");
    check_field_offset(lv, v2, 2, "S_Sf_S.v2");
    check_field_offset(lv, v3, 2, "S_Sf_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_S, S_Sf_S)
//============================================================================



static void Test_S_Sf_Sf()
{
  {
    init_simple_test("S_Sf_Sf");
    STRUCT_IF_C S_Sf_Sf lv;
    check2(sizeof(lv), 2, "sizeof(S_Sf_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_Sf)");
    check_field_offset(lv, v1, 0, "S_Sf_Sf.v1");
    check_field_offset(lv, v2, 2, "S_Sf_Sf.v2");
    check_field_offset(lv, v3, 2, "S_Sf_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_Sf, S_Sf_Sf)
//============================================================================



static void Test_S_Sf_Uc()
{
  {
    init_simple_test("S_Sf_Uc");
    STRUCT_IF_C S_Sf_Uc lv;
    check2(sizeof(lv), 3, "sizeof(S_Sf_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_Uc)");
    check_field_offset(lv, v1, 0, "S_Sf_Uc.v1");
    check_field_offset(lv, v2, 2, "S_Sf_Uc.v2");
    check_field_offset(lv, v3, 2, "S_Sf_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_Uc, S_Sf_Uc)
//============================================================================



static void Test_S_Sf_Ui()
{
  {
    init_simple_test("S_Sf_Ui");
    STRUCT_IF_C S_Sf_Ui lv;
    check2(sizeof(lv), 6, "sizeof(S_Sf_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_Ui)");
    check_field_offset(lv, v1, 0, "S_Sf_Ui.v1");
    check_field_offset(lv, v2, 2, "S_Sf_Ui.v2");
    check_field_offset(lv, v3, 2, "S_Sf_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_Ui, S_Sf_Ui)
//============================================================================



static void Test_S_Sf_Ul()
{
  {
    init_simple_test("S_Sf_Ul");
    STRUCT_IF_C S_Sf_Ul lv;
    check2(sizeof(lv), 10, "sizeof(S_Sf_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_Ul)");
    check_field_offset(lv, v1, 0, "S_Sf_Ul.v1");
    check_field_offset(lv, v2, 2, "S_Sf_Ul.v2");
    check_field_offset(lv, v3, 2, "S_Sf_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_Ul, S_Sf_Ul)
//============================================================================



static void Test_S_Sf_Us()
{
  {
    init_simple_test("S_Sf_Us");
    STRUCT_IF_C S_Sf_Us lv;
    check2(sizeof(lv), 4, "sizeof(S_Sf_Us)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_Us)");
    check_field_offset(lv, v1, 0, "S_Sf_Us.v1");
    check_field_offset(lv, v2, 2, "S_Sf_Us.v2");
    check_field_offset(lv, v3, 2, "S_Sf_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_Us, S_Sf_Us)
//============================================================================



static void Test_S_Sf_Vp()
{
  {
    init_simple_test("S_Sf_Vp");
    STRUCT_IF_C S_Sf_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(S_Sf_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(S_Sf_Vp)");
    check_field_offset(lv, v1, 0, "S_Sf_Vp.v1");
    check_field_offset(lv, v2, 2, "S_Sf_Vp.v2");
    check_field_offset(lv, v3, 2, "S_Sf_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Sf_Vp, S_Sf_Vp)
//============================================================================



static void Test_S_Uc_Sf()
{
  {
    init_simple_test("S_Uc_Sf");
    STRUCT_IF_C S_Uc_Sf lv;
    check2(sizeof(lv), 3, "sizeof(S_Uc_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_Uc_Sf)");
    check_field_offset(lv, v1, 0, "S_Uc_Sf.v1");
    check_field_offset(lv, v2, 2, "S_Uc_Sf.v2");
    check_field_offset(lv, v3, 3, "S_Uc_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Uc_Sf, S_Uc_Sf)
//============================================================================



static void Test_S_Ui_Sf()
{
  {
    init_simple_test("S_Ui_Sf");
    STRUCT_IF_C S_Ui_Sf lv;
    check2(sizeof(lv), 6, "sizeof(S_Ui_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_Ui_Sf)");
    check_field_offset(lv, v1, 0, "S_Ui_Sf.v1");
    check_field_offset(lv, v2, 2, "S_Ui_Sf.v2");
    check_field_offset(lv, v3, 6, "S_Ui_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Ui_Sf, S_Ui_Sf)
//============================================================================



static void Test_S_Ul_Sf()
{
  {
    init_simple_test("S_Ul_Sf");
    STRUCT_IF_C S_Ul_Sf lv;
    check2(sizeof(lv), 10, "sizeof(S_Ul_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_Ul_Sf)");
    check_field_offset(lv, v1, 0, "S_Ul_Sf.v1");
    check_field_offset(lv, v2, 2, "S_Ul_Sf.v2");
    check_field_offset(lv, v3, 10, "S_Ul_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Ul_Sf, S_Ul_Sf)
//============================================================================



static void Test_S_Us_Sf()
{
  {
    init_simple_test("S_Us_Sf");
    STRUCT_IF_C S_Us_Sf lv;
    check2(sizeof(lv), 4, "sizeof(S_Us_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_Us_Sf)");
    check_field_offset(lv, v1, 0, "S_Us_Sf.v1");
    check_field_offset(lv, v2, 2, "S_Us_Sf.v2");
    check_field_offset(lv, v3, 4, "S_Us_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Us_Sf, S_Us_Sf)
//============================================================================



static void Test_S_Vp_Sf()
{
  {
    init_simple_test("S_Vp_Sf");
    STRUCT_IF_C S_Vp_Sf lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(S_Vp_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(S_Vp_Sf)");
    check_field_offset(lv, v1, 0, "S_Vp_Sf.v1");
    check_field_offset(lv, v2, 2, "S_Vp_Sf.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "S_Vp_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_S_Vp_Sf, S_Vp_Sf)
//============================================================================



static void Test_Sf()
{
  {
    init_simple_test("Sf");
    STRUCT_IF_C Sf lv;
    check2(sizeof(lv), 0, "sizeof(Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Sf)");
    check_field_offset(lv, v1, 0, "Sf.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf, Sf)
//============================================================================



static void Test_Sf_BFu15i()
{
  {
    init_simple_test("Sf_BFu15i");
    static STRUCT_IF_C Sf_BFu15i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i, Sf_BFu15i)
//============================================================================



static void Test_Sf_BFu15i_BFu15i()
{
  {
    init_simple_test("Sf_BFu15i_BFu15i");
    static STRUCT_IF_C Sf_BFu15i_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_BFu15i)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_BFu15i.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "Sf_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "Sf_BFu15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_BFu15i, Sf_BFu15i_BFu15i)
//============================================================================



static void Test_Sf_BFu15i_BFu15ll()
{
  {
    init_simple_test("Sf_BFu15i_BFu15ll");
    static STRUCT_IF_C Sf_BFu15i_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_BFu15ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "Sf_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "Sf_BFu15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_BFu15ll, Sf_BFu15i_BFu15ll)
//============================================================================



static void Test_Sf_BFu15i_BFu15s()
{
  {
    init_simple_test("Sf_BFu15i_BFu15s");
    static STRUCT_IF_C Sf_BFu15i_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_BFu15s)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_BFu15s.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "Sf_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "Sf_BFu15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_BFu15s, Sf_BFu15i_BFu15s)
//============================================================================



static void Test_Sf_BFu15i_BFu16i()
{
  {
    init_simple_test("Sf_BFu15i_BFu16i");
    static STRUCT_IF_C Sf_BFu15i_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu15i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_BFu16i)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_BFu16i.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_BFu16i");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_BFu16i");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "Sf_BFu15i_BFu16i");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "Sf_BFu15i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_BFu16i, Sf_BFu15i_BFu16i)
//============================================================================



static void Test_Sf_BFu15i_BFu16ll()
{
  {
    init_simple_test("Sf_BFu15i_BFu16ll");
    static STRUCT_IF_C Sf_BFu15i_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu15i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_BFu16ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_BFu16ll");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_BFu16ll");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "Sf_BFu15i_BFu16ll");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "Sf_BFu15i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_BFu16ll, Sf_BFu15i_BFu16ll)
//============================================================================



static void Test_Sf_BFu15i_BFu16s()
{
  {
    init_simple_test("Sf_BFu15i_BFu16s");
    static STRUCT_IF_C Sf_BFu15i_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu15i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_BFu16s)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_BFu16s.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_BFu16s");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_BFu16s");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "Sf_BFu15i_BFu16s");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "Sf_BFu15i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_BFu16s, Sf_BFu15i_BFu16s)
//============================================================================



static void Test_Sf_BFu15i_BFu17i()
{
  {
    init_simple_test("Sf_BFu15i_BFu17i");
    static STRUCT_IF_C Sf_BFu15i_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu15i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_BFu17i)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_BFu17i.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_BFu17i");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_BFu17i");
    set_bf_and_test(lv, v3, 1, 7, 17, 1, "Sf_BFu15i_BFu17i");
    set_bf_and_test(lv, v3, 1, 7, 17, hide_ull(1LL<<16), "Sf_BFu15i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_BFu17i, Sf_BFu15i_BFu17i)
//============================================================================



static void Test_Sf_BFu15i_BFu17ll()
{
  {
    init_simple_test("Sf_BFu15i_BFu17ll");
    static STRUCT_IF_C Sf_BFu15i_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu15i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_BFu17ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_BFu17ll");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_BFu17ll");
    set_bf_and_test(lv, v3, 1, 7, 17, 1, "Sf_BFu15i_BFu17ll");
    set_bf_and_test(lv, v3, 1, 7, 17, hide_ull(1LL<<16), "Sf_BFu15i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_BFu17ll, Sf_BFu15i_BFu17ll)
//============================================================================



static void Test_Sf_BFu15i_BFu1c()
{
  {
    init_simple_test("Sf_BFu15i_BFu1c");
    static STRUCT_IF_C Sf_BFu15i_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu15i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_BFu1c)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_BFu1c.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_BFu1c");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_BFu1c");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "Sf_BFu15i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_BFu1c, Sf_BFu15i_BFu1c)
//============================================================================



static void Test_Sf_BFu15i_BFu1i()
{
  {
    init_simple_test("Sf_BFu15i_BFu1i");
    static STRUCT_IF_C Sf_BFu15i_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu15i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_BFu1i)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_BFu1i.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_BFu1i");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_BFu1i");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "Sf_BFu15i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_BFu1i, Sf_BFu15i_BFu1i)
//============================================================================



static void Test_Sf_BFu15i_BFu1ll()
{
  {
    init_simple_test("Sf_BFu15i_BFu1ll");
    static STRUCT_IF_C Sf_BFu15i_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu15i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_BFu1ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_BFu1ll");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "Sf_BFu15i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_BFu1ll, Sf_BFu15i_BFu1ll)
//============================================================================



static void Test_Sf_BFu15i_BFu1s()
{
  {
    init_simple_test("Sf_BFu15i_BFu1s");
    static STRUCT_IF_C Sf_BFu15i_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu15i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_BFu1s)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_BFu1s.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_BFu1s");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_BFu1s");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "Sf_BFu15i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_BFu1s, Sf_BFu15i_BFu1s)
//============================================================================



static void Test_Sf_BFu15i_BFu31i()
{
  {
    init_simple_test("Sf_BFu15i_BFu31i");
    static STRUCT_IF_C Sf_BFu15i_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu15i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_BFu31i)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_BFu31i.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_BFu31i");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_BFu31i");
    set_bf_and_test(lv, v3, 1, 7, 31, 1, "Sf_BFu15i_BFu31i");
    set_bf_and_test(lv, v3, 1, 7, 31, hide_ull(1LL<<30), "Sf_BFu15i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_BFu31i, Sf_BFu15i_BFu31i)
//============================================================================



static void Test_Sf_BFu15i_BFu31ll()
{
  {
    init_simple_test("Sf_BFu15i_BFu31ll");
    static STRUCT_IF_C Sf_BFu15i_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu15i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_BFu31ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_BFu31ll");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_BFu31ll");
    set_bf_and_test(lv, v3, 1, 7, 31, 1, "Sf_BFu15i_BFu31ll");
    set_bf_and_test(lv, v3, 1, 7, 31, hide_ull(1LL<<30), "Sf_BFu15i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_BFu31ll, Sf_BFu15i_BFu31ll)
//============================================================================



static void Test_Sf_BFu15i_BFu32i()
{
  {
    init_simple_test("Sf_BFu15i_BFu32i");
    static STRUCT_IF_C Sf_BFu15i_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu15i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_BFu32i)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_BFu32i.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_BFu32i");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_BFu32i");
    set_bf_and_test(lv, v3, 1, 7, 32, 1, "Sf_BFu15i_BFu32i");
    set_bf_and_test(lv, v3, 1, 7, 32, hide_ull(1LL<<31), "Sf_BFu15i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_BFu32i, Sf_BFu15i_BFu32i)
//============================================================================



static void Test_Sf_BFu15i_BFu32ll()
{
  {
    init_simple_test("Sf_BFu15i_BFu32ll");
    static STRUCT_IF_C Sf_BFu15i_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu15i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_BFu32ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_BFu32ll");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_BFu32ll");
    set_bf_and_test(lv, v3, 1, 7, 32, 1, "Sf_BFu15i_BFu32ll");
    set_bf_and_test(lv, v3, 1, 7, 32, hide_ull(1LL<<31), "Sf_BFu15i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_BFu32ll, Sf_BFu15i_BFu32ll)
//============================================================================



static void Test_Sf_BFu15i_BFu33()
{
  {
    init_simple_test("Sf_BFu15i_BFu33");
    static STRUCT_IF_C Sf_BFu15i_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu15i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_BFu33)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_BFu33.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_BFu33");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_BFu33");
    set_bf_and_test(lv, v3, 1, 7, 33, 1, "Sf_BFu15i_BFu33");
    set_bf_and_test(lv, v3, 1, 7, 33, hide_ull(1LL<<32), "Sf_BFu15i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_BFu33, Sf_BFu15i_BFu33)
//============================================================================



static void Test_Sf_BFu15i_BFu7c()
{
  {
    init_simple_test("Sf_BFu15i_BFu7c");
    static STRUCT_IF_C Sf_BFu15i_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_BFu7c)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_BFu7c.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_BFu7c");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_BFu7c");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "Sf_BFu15i_BFu7c");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "Sf_BFu15i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_BFu7c, Sf_BFu15i_BFu7c)
//============================================================================



static void Test_Sf_BFu15i_BFu7i()
{
  {
    init_simple_test("Sf_BFu15i_BFu7i");
    static STRUCT_IF_C Sf_BFu15i_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_BFu7i)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_BFu7i.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_BFu7i");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_BFu7i");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "Sf_BFu15i_BFu7i");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "Sf_BFu15i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_BFu7i, Sf_BFu15i_BFu7i)
//============================================================================



static void Test_Sf_BFu15i_BFu7ll()
{
  {
    init_simple_test("Sf_BFu15i_BFu7ll");
    static STRUCT_IF_C Sf_BFu15i_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_BFu7ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_BFu7ll");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_BFu7ll");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "Sf_BFu15i_BFu7ll");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "Sf_BFu15i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_BFu7ll, Sf_BFu15i_BFu7ll)
//============================================================================



static void Test_Sf_BFu15i_BFu7s()
{
  {
    init_simple_test("Sf_BFu15i_BFu7s");
    static STRUCT_IF_C Sf_BFu15i_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_BFu7s)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_BFu7s.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_BFu7s");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_BFu7s");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "Sf_BFu15i_BFu7s");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "Sf_BFu15i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_BFu7s, Sf_BFu15i_BFu7s)
//============================================================================



static void Test_Sf_BFu15i_BFu8c()
{
  {
    init_simple_test("Sf_BFu15i_BFu8c");
    static STRUCT_IF_C Sf_BFu15i_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_BFu8c)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_BFu8c.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_BFu8c");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_BFu8c");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "Sf_BFu15i_BFu8c");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "Sf_BFu15i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_BFu8c, Sf_BFu15i_BFu8c)
//============================================================================



static void Test_Sf_BFu15i_BFu8i()
{
  {
    init_simple_test("Sf_BFu15i_BFu8i");
    static STRUCT_IF_C Sf_BFu15i_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_BFu8i)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_BFu8i.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_BFu8i");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_BFu8i");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "Sf_BFu15i_BFu8i");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "Sf_BFu15i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_BFu8i, Sf_BFu15i_BFu8i)
//============================================================================



static void Test_Sf_BFu15i_BFu8ll()
{
  {
    init_simple_test("Sf_BFu15i_BFu8ll");
    static STRUCT_IF_C Sf_BFu15i_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_BFu8ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_BFu8ll");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_BFu8ll");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "Sf_BFu15i_BFu8ll");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "Sf_BFu15i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_BFu8ll, Sf_BFu15i_BFu8ll)
//============================================================================



static void Test_Sf_BFu15i_BFu8s()
{
  {
    init_simple_test("Sf_BFu15i_BFu8s");
    static STRUCT_IF_C Sf_BFu15i_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_BFu8s)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_BFu8s.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_BFu8s");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_BFu8s");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "Sf_BFu15i_BFu8s");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "Sf_BFu15i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_BFu8s, Sf_BFu15i_BFu8s)
//============================================================================



static void Test_Sf_BFu15i_BFu9i()
{
  {
    init_simple_test("Sf_BFu15i_BFu9i");
    static STRUCT_IF_C Sf_BFu15i_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_BFu9i)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_BFu9i.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_BFu9i");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_BFu9i");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "Sf_BFu15i_BFu9i");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "Sf_BFu15i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_BFu9i, Sf_BFu15i_BFu9i)
//============================================================================



static void Test_Sf_BFu15i_BFu9ll()
{
  {
    init_simple_test("Sf_BFu15i_BFu9ll");
    static STRUCT_IF_C Sf_BFu15i_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_BFu9ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_BFu9ll");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_BFu9ll");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "Sf_BFu15i_BFu9ll");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "Sf_BFu15i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_BFu9ll, Sf_BFu15i_BFu9ll)
//============================================================================



static void Test_Sf_BFu15i_BFu9s()
{
  {
    init_simple_test("Sf_BFu15i_BFu9s");
    static STRUCT_IF_C Sf_BFu15i_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_BFu9s)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_BFu9s.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_BFu9s");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_BFu9s");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "Sf_BFu15i_BFu9s");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "Sf_BFu15i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_BFu9s, Sf_BFu15i_BFu9s)
//============================================================================



static void Test_Sf_BFu15i_C()
{
  {
    init_simple_test("Sf_BFu15i_C");
    static STRUCT_IF_C Sf_BFu15i_C lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15i_C)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_C)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_C.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_C");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_C");
    check_field_offset(lv, v3, 2, "Sf_BFu15i_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_C, Sf_BFu15i_C)
//============================================================================



static void Test_Sf_BFu15i_D()
{
  {
    init_simple_test("Sf_BFu15i_D");
    static STRUCT_IF_C Sf_BFu15i_D lv;
    check2(sizeof(lv), 10, "sizeof(Sf_BFu15i_D)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_D)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_D.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_D");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_D");
    check_field_offset(lv, v3, 2, "Sf_BFu15i_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_D, Sf_BFu15i_D)
//============================================================================



static void Test_Sf_BFu15i_F()
{
  {
    init_simple_test("Sf_BFu15i_F");
    static STRUCT_IF_C Sf_BFu15i_F lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu15i_F)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_F)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_F.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_F");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_F");
    check_field_offset(lv, v3, 2, "Sf_BFu15i_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_F, Sf_BFu15i_F)
//============================================================================



static void Test_Sf_BFu15i_I()
{
  {
    init_simple_test("Sf_BFu15i_I");
    static STRUCT_IF_C Sf_BFu15i_I lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu15i_I)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_I)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_I.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_I");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_I");
    check_field_offset(lv, v3, 2, "Sf_BFu15i_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_I, Sf_BFu15i_I)
//============================================================================



static void Test_Sf_BFu15i_Ip()
{
  {
    init_simple_test("Sf_BFu15i_Ip");
    static STRUCT_IF_C Sf_BFu15i_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Sf_BFu15i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_Ip)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_Ip.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_Ip");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_Ip");
    check_field_offset(lv, v3, 2, "Sf_BFu15i_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_Ip, Sf_BFu15i_Ip)
//============================================================================



static void Test_Sf_BFu15i_L()
{
  {
    init_simple_test("Sf_BFu15i_L");
    static STRUCT_IF_C Sf_BFu15i_L lv;
    check2(sizeof(lv), 10, "sizeof(Sf_BFu15i_L)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_L)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_L.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_L");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_L");
    check_field_offset(lv, v3, 2, "Sf_BFu15i_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_L, Sf_BFu15i_L)
//============================================================================



static void Test_Sf_BFu15i_S()
{
  {
    init_simple_test("Sf_BFu15i_S");
    static STRUCT_IF_C Sf_BFu15i_S lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu15i_S)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_S)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_S.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_S");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_S");
    check_field_offset(lv, v3, 2, "Sf_BFu15i_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_S, Sf_BFu15i_S)
//============================================================================



static void Test_Sf_BFu15i_Sf()
{
  {
    init_simple_test("Sf_BFu15i_Sf");
    static STRUCT_IF_C Sf_BFu15i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu15i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_Sf)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_Sf.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_Sf");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_Sf");
    check_field_offset(lv, v3, 2, "Sf_BFu15i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_Sf, Sf_BFu15i_Sf)
//============================================================================



static void Test_Sf_BFu15i_Uc()
{
  {
    init_simple_test("Sf_BFu15i_Uc");
    static STRUCT_IF_C Sf_BFu15i_Uc lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_Uc)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_Uc.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_Uc");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_Uc");
    check_field_offset(lv, v3, 2, "Sf_BFu15i_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_Uc, Sf_BFu15i_Uc)
//============================================================================



static void Test_Sf_BFu15i_Ui()
{
  {
    init_simple_test("Sf_BFu15i_Ui");
    static STRUCT_IF_C Sf_BFu15i_Ui lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu15i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_Ui)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_Ui.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_Ui");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_Ui");
    check_field_offset(lv, v3, 2, "Sf_BFu15i_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_Ui, Sf_BFu15i_Ui)
//============================================================================



static void Test_Sf_BFu15i_Ul()
{
  {
    init_simple_test("Sf_BFu15i_Ul");
    static STRUCT_IF_C Sf_BFu15i_Ul lv;
    check2(sizeof(lv), 10, "sizeof(Sf_BFu15i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_Ul)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_Ul.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_Ul");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_Ul");
    check_field_offset(lv, v3, 2, "Sf_BFu15i_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_Ul, Sf_BFu15i_Ul)
//============================================================================



static void Test_Sf_BFu15i_Us()
{
  {
    init_simple_test("Sf_BFu15i_Us");
    static STRUCT_IF_C Sf_BFu15i_Us lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu15i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_Us)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_Us.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_Us");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_Us");
    check_field_offset(lv, v3, 2, "Sf_BFu15i_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_Us, Sf_BFu15i_Us)
//============================================================================



static void Test_Sf_BFu15i_Vp()
{
  {
    init_simple_test("Sf_BFu15i_Vp");
    static STRUCT_IF_C Sf_BFu15i_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Sf_BFu15i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15i_Vp)");
    check_field_offset(lv, v1, 0, "Sf_BFu15i_Vp.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15i_Vp");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15i_Vp");
    check_field_offset(lv, v3, 2, "Sf_BFu15i_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15i_Vp, Sf_BFu15i_Vp)
//============================================================================



static void Test_Sf_BFu15ll()
{
  {
    init_simple_test("Sf_BFu15ll");
    static STRUCT_IF_C Sf_BFu15ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll, Sf_BFu15ll)
//============================================================================



static void Test_Sf_BFu15ll_BFu15i()
{
  {
    init_simple_test("Sf_BFu15ll_BFu15i");
    static STRUCT_IF_C Sf_BFu15ll_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_BFu15i)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "Sf_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "Sf_BFu15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_BFu15i, Sf_BFu15ll_BFu15i)
//============================================================================



static void Test_Sf_BFu15ll_BFu15ll()
{
  {
    init_simple_test("Sf_BFu15ll_BFu15ll");
    static STRUCT_IF_C Sf_BFu15ll_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "Sf_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "Sf_BFu15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_BFu15ll, Sf_BFu15ll_BFu15ll)
//============================================================================



static void Test_Sf_BFu15ll_BFu15s()
{
  {
    init_simple_test("Sf_BFu15ll_BFu15s");
    static STRUCT_IF_C Sf_BFu15ll_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_BFu15s)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "Sf_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "Sf_BFu15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_BFu15s, Sf_BFu15ll_BFu15s)
//============================================================================



static void Test_Sf_BFu15ll_BFu16i()
{
  {
    init_simple_test("Sf_BFu15ll_BFu16i");
    static STRUCT_IF_C Sf_BFu15ll_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu15ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_BFu16i)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_BFu16i");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_BFu16i");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "Sf_BFu15ll_BFu16i");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "Sf_BFu15ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_BFu16i, Sf_BFu15ll_BFu16i)
//============================================================================



static void Test_Sf_BFu15ll_BFu16ll()
{
  {
    init_simple_test("Sf_BFu15ll_BFu16ll");
    static STRUCT_IF_C Sf_BFu15ll_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu15ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_BFu16ll");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_BFu16ll");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "Sf_BFu15ll_BFu16ll");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "Sf_BFu15ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_BFu16ll, Sf_BFu15ll_BFu16ll)
//============================================================================



static void Test_Sf_BFu15ll_BFu16s()
{
  {
    init_simple_test("Sf_BFu15ll_BFu16s");
    static STRUCT_IF_C Sf_BFu15ll_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu15ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_BFu16s)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_BFu16s");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_BFu16s");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "Sf_BFu15ll_BFu16s");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "Sf_BFu15ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_BFu16s, Sf_BFu15ll_BFu16s)
//============================================================================



static void Test_Sf_BFu15ll_BFu17i()
{
  {
    init_simple_test("Sf_BFu15ll_BFu17i");
    static STRUCT_IF_C Sf_BFu15ll_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu15ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_BFu17i)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_BFu17i");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_BFu17i");
    set_bf_and_test(lv, v3, 1, 7, 17, 1, "Sf_BFu15ll_BFu17i");
    set_bf_and_test(lv, v3, 1, 7, 17, hide_ull(1LL<<16), "Sf_BFu15ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_BFu17i, Sf_BFu15ll_BFu17i)
//============================================================================



static void Test_Sf_BFu15ll_BFu17ll()
{
  {
    init_simple_test("Sf_BFu15ll_BFu17ll");
    static STRUCT_IF_C Sf_BFu15ll_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu15ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_BFu17ll");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_BFu17ll");
    set_bf_and_test(lv, v3, 1, 7, 17, 1, "Sf_BFu15ll_BFu17ll");
    set_bf_and_test(lv, v3, 1, 7, 17, hide_ull(1LL<<16), "Sf_BFu15ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_BFu17ll, Sf_BFu15ll_BFu17ll)
//============================================================================



static void Test_Sf_BFu15ll_BFu1c()
{
  {
    init_simple_test("Sf_BFu15ll_BFu1c");
    static STRUCT_IF_C Sf_BFu15ll_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu15ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_BFu1c)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_BFu1c");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "Sf_BFu15ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_BFu1c, Sf_BFu15ll_BFu1c)
//============================================================================



static void Test_Sf_BFu15ll_BFu1i()
{
  {
    init_simple_test("Sf_BFu15ll_BFu1i");
    static STRUCT_IF_C Sf_BFu15ll_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu15ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_BFu1i)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_BFu1i");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "Sf_BFu15ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_BFu1i, Sf_BFu15ll_BFu1i)
//============================================================================



static void Test_Sf_BFu15ll_BFu1ll()
{
  {
    init_simple_test("Sf_BFu15ll_BFu1ll");
    static STRUCT_IF_C Sf_BFu15ll_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu15ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_BFu1ll");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "Sf_BFu15ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_BFu1ll, Sf_BFu15ll_BFu1ll)
//============================================================================



static void Test_Sf_BFu15ll_BFu1s()
{
  {
    init_simple_test("Sf_BFu15ll_BFu1s");
    static STRUCT_IF_C Sf_BFu15ll_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu15ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_BFu1s)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_BFu1s");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "Sf_BFu15ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_BFu1s, Sf_BFu15ll_BFu1s)
//============================================================================



static void Test_Sf_BFu15ll_BFu31i()
{
  {
    init_simple_test("Sf_BFu15ll_BFu31i");
    static STRUCT_IF_C Sf_BFu15ll_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu15ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_BFu31i)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_BFu31i");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_BFu31i");
    set_bf_and_test(lv, v3, 1, 7, 31, 1, "Sf_BFu15ll_BFu31i");
    set_bf_and_test(lv, v3, 1, 7, 31, hide_ull(1LL<<30), "Sf_BFu15ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_BFu31i, Sf_BFu15ll_BFu31i)
//============================================================================



static void Test_Sf_BFu15ll_BFu31ll()
{
  {
    init_simple_test("Sf_BFu15ll_BFu31ll");
    static STRUCT_IF_C Sf_BFu15ll_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu15ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_BFu31ll");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_BFu31ll");
    set_bf_and_test(lv, v3, 1, 7, 31, 1, "Sf_BFu15ll_BFu31ll");
    set_bf_and_test(lv, v3, 1, 7, 31, hide_ull(1LL<<30), "Sf_BFu15ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_BFu31ll, Sf_BFu15ll_BFu31ll)
//============================================================================



static void Test_Sf_BFu15ll_BFu32i()
{
  {
    init_simple_test("Sf_BFu15ll_BFu32i");
    static STRUCT_IF_C Sf_BFu15ll_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu15ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_BFu32i)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_BFu32i");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_BFu32i");
    set_bf_and_test(lv, v3, 1, 7, 32, 1, "Sf_BFu15ll_BFu32i");
    set_bf_and_test(lv, v3, 1, 7, 32, hide_ull(1LL<<31), "Sf_BFu15ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_BFu32i, Sf_BFu15ll_BFu32i)
//============================================================================



static void Test_Sf_BFu15ll_BFu32ll()
{
  {
    init_simple_test("Sf_BFu15ll_BFu32ll");
    static STRUCT_IF_C Sf_BFu15ll_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu15ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_BFu32ll");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_BFu32ll");
    set_bf_and_test(lv, v3, 1, 7, 32, 1, "Sf_BFu15ll_BFu32ll");
    set_bf_and_test(lv, v3, 1, 7, 32, hide_ull(1LL<<31), "Sf_BFu15ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_BFu32ll, Sf_BFu15ll_BFu32ll)
//============================================================================



static void Test_Sf_BFu15ll_BFu33()
{
  {
    init_simple_test("Sf_BFu15ll_BFu33");
    static STRUCT_IF_C Sf_BFu15ll_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu15ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_BFu33)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_BFu33.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_BFu33");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_BFu33");
    set_bf_and_test(lv, v3, 1, 7, 33, 1, "Sf_BFu15ll_BFu33");
    set_bf_and_test(lv, v3, 1, 7, 33, hide_ull(1LL<<32), "Sf_BFu15ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_BFu33, Sf_BFu15ll_BFu33)
//============================================================================



static void Test_Sf_BFu15ll_BFu7c()
{
  {
    init_simple_test("Sf_BFu15ll_BFu7c");
    static STRUCT_IF_C Sf_BFu15ll_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_BFu7c)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_BFu7c");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_BFu7c");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "Sf_BFu15ll_BFu7c");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "Sf_BFu15ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_BFu7c, Sf_BFu15ll_BFu7c)
//============================================================================



static void Test_Sf_BFu15ll_BFu7i()
{
  {
    init_simple_test("Sf_BFu15ll_BFu7i");
    static STRUCT_IF_C Sf_BFu15ll_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_BFu7i)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_BFu7i");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_BFu7i");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "Sf_BFu15ll_BFu7i");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "Sf_BFu15ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_BFu7i, Sf_BFu15ll_BFu7i)
//============================================================================



static void Test_Sf_BFu15ll_BFu7ll()
{
  {
    init_simple_test("Sf_BFu15ll_BFu7ll");
    static STRUCT_IF_C Sf_BFu15ll_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_BFu7ll");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_BFu7ll");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "Sf_BFu15ll_BFu7ll");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "Sf_BFu15ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_BFu7ll, Sf_BFu15ll_BFu7ll)
//============================================================================



static void Test_Sf_BFu15ll_BFu7s()
{
  {
    init_simple_test("Sf_BFu15ll_BFu7s");
    static STRUCT_IF_C Sf_BFu15ll_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_BFu7s)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_BFu7s");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_BFu7s");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "Sf_BFu15ll_BFu7s");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "Sf_BFu15ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_BFu7s, Sf_BFu15ll_BFu7s)
//============================================================================



static void Test_Sf_BFu15ll_BFu8c()
{
  {
    init_simple_test("Sf_BFu15ll_BFu8c");
    static STRUCT_IF_C Sf_BFu15ll_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_BFu8c)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_BFu8c");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_BFu8c");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "Sf_BFu15ll_BFu8c");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "Sf_BFu15ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_BFu8c, Sf_BFu15ll_BFu8c)
//============================================================================



static void Test_Sf_BFu15ll_BFu8i()
{
  {
    init_simple_test("Sf_BFu15ll_BFu8i");
    static STRUCT_IF_C Sf_BFu15ll_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_BFu8i)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_BFu8i");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_BFu8i");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "Sf_BFu15ll_BFu8i");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "Sf_BFu15ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_BFu8i, Sf_BFu15ll_BFu8i)
//============================================================================



static void Test_Sf_BFu15ll_BFu8ll()
{
  {
    init_simple_test("Sf_BFu15ll_BFu8ll");
    static STRUCT_IF_C Sf_BFu15ll_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_BFu8ll");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_BFu8ll");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "Sf_BFu15ll_BFu8ll");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "Sf_BFu15ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_BFu8ll, Sf_BFu15ll_BFu8ll)
//============================================================================



static void Test_Sf_BFu15ll_BFu8s()
{
  {
    init_simple_test("Sf_BFu15ll_BFu8s");
    static STRUCT_IF_C Sf_BFu15ll_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_BFu8s)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_BFu8s");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_BFu8s");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "Sf_BFu15ll_BFu8s");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "Sf_BFu15ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_BFu8s, Sf_BFu15ll_BFu8s)
//============================================================================



static void Test_Sf_BFu15ll_BFu9i()
{
  {
    init_simple_test("Sf_BFu15ll_BFu9i");
    static STRUCT_IF_C Sf_BFu15ll_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_BFu9i)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_BFu9i");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_BFu9i");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "Sf_BFu15ll_BFu9i");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "Sf_BFu15ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_BFu9i, Sf_BFu15ll_BFu9i)
//============================================================================



static void Test_Sf_BFu15ll_BFu9ll()
{
  {
    init_simple_test("Sf_BFu15ll_BFu9ll");
    static STRUCT_IF_C Sf_BFu15ll_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_BFu9ll");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_BFu9ll");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "Sf_BFu15ll_BFu9ll");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "Sf_BFu15ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_BFu9ll, Sf_BFu15ll_BFu9ll)
//============================================================================



static void Test_Sf_BFu15ll_BFu9s()
{
  {
    init_simple_test("Sf_BFu15ll_BFu9s");
    static STRUCT_IF_C Sf_BFu15ll_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_BFu9s)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_BFu9s");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_BFu9s");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "Sf_BFu15ll_BFu9s");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "Sf_BFu15ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_BFu9s, Sf_BFu15ll_BFu9s)
//============================================================================



static void Test_Sf_BFu15ll_C()
{
  {
    init_simple_test("Sf_BFu15ll_C");
    static STRUCT_IF_C Sf_BFu15ll_C lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_C)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_C.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_C");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_C");
    check_field_offset(lv, v3, 2, "Sf_BFu15ll_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_C, Sf_BFu15ll_C)
//============================================================================



static void Test_Sf_BFu15ll_D()
{
  {
    init_simple_test("Sf_BFu15ll_D");
    static STRUCT_IF_C Sf_BFu15ll_D lv;
    check2(sizeof(lv), 10, "sizeof(Sf_BFu15ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_D)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_D.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_D");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_D");
    check_field_offset(lv, v3, 2, "Sf_BFu15ll_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_D, Sf_BFu15ll_D)
//============================================================================



static void Test_Sf_BFu15ll_F()
{
  {
    init_simple_test("Sf_BFu15ll_F");
    static STRUCT_IF_C Sf_BFu15ll_F lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu15ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_F)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_F.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_F");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_F");
    check_field_offset(lv, v3, 2, "Sf_BFu15ll_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_F, Sf_BFu15ll_F)
//============================================================================



static void Test_Sf_BFu15ll_I()
{
  {
    init_simple_test("Sf_BFu15ll_I");
    static STRUCT_IF_C Sf_BFu15ll_I lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu15ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_I)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_I.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_I");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_I");
    check_field_offset(lv, v3, 2, "Sf_BFu15ll_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_I, Sf_BFu15ll_I)
//============================================================================



static void Test_Sf_BFu15ll_Ip()
{
  {
    init_simple_test("Sf_BFu15ll_Ip");
    static STRUCT_IF_C Sf_BFu15ll_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Sf_BFu15ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_Ip)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_Ip.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_Ip");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_Ip");
    check_field_offset(lv, v3, 2, "Sf_BFu15ll_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_Ip, Sf_BFu15ll_Ip)
//============================================================================



static void Test_Sf_BFu15ll_L()
{
  {
    init_simple_test("Sf_BFu15ll_L");
    static STRUCT_IF_C Sf_BFu15ll_L lv;
    check2(sizeof(lv), 10, "sizeof(Sf_BFu15ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_L)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_L.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_L");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_L");
    check_field_offset(lv, v3, 2, "Sf_BFu15ll_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_L, Sf_BFu15ll_L)
//============================================================================



static void Test_Sf_BFu15ll_S()
{
  {
    init_simple_test("Sf_BFu15ll_S");
    static STRUCT_IF_C Sf_BFu15ll_S lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu15ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_S)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_S.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_S");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_S");
    check_field_offset(lv, v3, 2, "Sf_BFu15ll_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_S, Sf_BFu15ll_S)
//============================================================================



static void Test_Sf_BFu15ll_Sf()
{
  {
    init_simple_test("Sf_BFu15ll_Sf");
    static STRUCT_IF_C Sf_BFu15ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu15ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_Sf)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_Sf.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_Sf");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_Sf");
    check_field_offset(lv, v3, 2, "Sf_BFu15ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_Sf, Sf_BFu15ll_Sf)
//============================================================================



static void Test_Sf_BFu15ll_Uc()
{
  {
    init_simple_test("Sf_BFu15ll_Uc");
    static STRUCT_IF_C Sf_BFu15ll_Uc lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_Uc)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_Uc.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_Uc");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_Uc");
    check_field_offset(lv, v3, 2, "Sf_BFu15ll_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_Uc, Sf_BFu15ll_Uc)
//============================================================================



static void Test_Sf_BFu15ll_Ui()
{
  {
    init_simple_test("Sf_BFu15ll_Ui");
    static STRUCT_IF_C Sf_BFu15ll_Ui lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu15ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_Ui)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_Ui.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_Ui");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_Ui");
    check_field_offset(lv, v3, 2, "Sf_BFu15ll_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_Ui, Sf_BFu15ll_Ui)
//============================================================================



static void Test_Sf_BFu15ll_Ul()
{
  {
    init_simple_test("Sf_BFu15ll_Ul");
    static STRUCT_IF_C Sf_BFu15ll_Ul lv;
    check2(sizeof(lv), 10, "sizeof(Sf_BFu15ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_Ul)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_Ul.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_Ul");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_Ul");
    check_field_offset(lv, v3, 2, "Sf_BFu15ll_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_Ul, Sf_BFu15ll_Ul)
//============================================================================



static void Test_Sf_BFu15ll_Us()
{
  {
    init_simple_test("Sf_BFu15ll_Us");
    static STRUCT_IF_C Sf_BFu15ll_Us lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu15ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_Us)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_Us.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_Us");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_Us");
    check_field_offset(lv, v3, 2, "Sf_BFu15ll_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_Us, Sf_BFu15ll_Us)
//============================================================================



static void Test_Sf_BFu15ll_Vp()
{
  {
    init_simple_test("Sf_BFu15ll_Vp");
    static STRUCT_IF_C Sf_BFu15ll_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Sf_BFu15ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15ll_Vp)");
    check_field_offset(lv, v1, 0, "Sf_BFu15ll_Vp.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15ll_Vp");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15ll_Vp");
    check_field_offset(lv, v3, 2, "Sf_BFu15ll_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15ll_Vp, Sf_BFu15ll_Vp)
//============================================================================



static void Test_Sf_BFu15s()
{
  {
    init_simple_test("Sf_BFu15s");
    static STRUCT_IF_C Sf_BFu15s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s, Sf_BFu15s)
//============================================================================



static void Test_Sf_BFu15s_BFu15i()
{
  {
    init_simple_test("Sf_BFu15s_BFu15i");
    static STRUCT_IF_C Sf_BFu15s_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_BFu15i)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_BFu15i.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "Sf_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "Sf_BFu15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_BFu15i, Sf_BFu15s_BFu15i)
//============================================================================



static void Test_Sf_BFu15s_BFu15ll()
{
  {
    init_simple_test("Sf_BFu15s_BFu15ll");
    static STRUCT_IF_C Sf_BFu15s_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_BFu15ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_BFu15ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "Sf_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "Sf_BFu15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_BFu15ll, Sf_BFu15s_BFu15ll)
//============================================================================



static void Test_Sf_BFu15s_BFu15s()
{
  {
    init_simple_test("Sf_BFu15s_BFu15s");
    static STRUCT_IF_C Sf_BFu15s_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_BFu15s)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_BFu15s.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "Sf_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "Sf_BFu15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_BFu15s, Sf_BFu15s_BFu15s)
//============================================================================



static void Test_Sf_BFu15s_BFu16i()
{
  {
    init_simple_test("Sf_BFu15s_BFu16i");
    static STRUCT_IF_C Sf_BFu15s_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu15s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_BFu16i)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_BFu16i.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_BFu16i");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_BFu16i");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "Sf_BFu15s_BFu16i");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "Sf_BFu15s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_BFu16i, Sf_BFu15s_BFu16i)
//============================================================================



static void Test_Sf_BFu15s_BFu16ll()
{
  {
    init_simple_test("Sf_BFu15s_BFu16ll");
    static STRUCT_IF_C Sf_BFu15s_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu15s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_BFu16ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_BFu16ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_BFu16ll");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_BFu16ll");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "Sf_BFu15s_BFu16ll");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "Sf_BFu15s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_BFu16ll, Sf_BFu15s_BFu16ll)
//============================================================================



static void Test_Sf_BFu15s_BFu16s()
{
  {
    init_simple_test("Sf_BFu15s_BFu16s");
    static STRUCT_IF_C Sf_BFu15s_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu15s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_BFu16s)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_BFu16s.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_BFu16s");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_BFu16s");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "Sf_BFu15s_BFu16s");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "Sf_BFu15s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_BFu16s, Sf_BFu15s_BFu16s)
//============================================================================



static void Test_Sf_BFu15s_BFu17i()
{
  {
    init_simple_test("Sf_BFu15s_BFu17i");
    static STRUCT_IF_C Sf_BFu15s_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu15s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_BFu17i)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_BFu17i.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_BFu17i");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_BFu17i");
    set_bf_and_test(lv, v3, 1, 7, 17, 1, "Sf_BFu15s_BFu17i");
    set_bf_and_test(lv, v3, 1, 7, 17, hide_ull(1LL<<16), "Sf_BFu15s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_BFu17i, Sf_BFu15s_BFu17i)
//============================================================================



static void Test_Sf_BFu15s_BFu17ll()
{
  {
    init_simple_test("Sf_BFu15s_BFu17ll");
    static STRUCT_IF_C Sf_BFu15s_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu15s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_BFu17ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_BFu17ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_BFu17ll");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_BFu17ll");
    set_bf_and_test(lv, v3, 1, 7, 17, 1, "Sf_BFu15s_BFu17ll");
    set_bf_and_test(lv, v3, 1, 7, 17, hide_ull(1LL<<16), "Sf_BFu15s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_BFu17ll, Sf_BFu15s_BFu17ll)
//============================================================================



static void Test_Sf_BFu15s_BFu1c()
{
  {
    init_simple_test("Sf_BFu15s_BFu1c");
    static STRUCT_IF_C Sf_BFu15s_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu15s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_BFu1c)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_BFu1c.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_BFu1c");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_BFu1c");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "Sf_BFu15s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_BFu1c, Sf_BFu15s_BFu1c)
//============================================================================



static void Test_Sf_BFu15s_BFu1i()
{
  {
    init_simple_test("Sf_BFu15s_BFu1i");
    static STRUCT_IF_C Sf_BFu15s_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu15s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_BFu1i)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_BFu1i.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_BFu1i");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_BFu1i");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "Sf_BFu15s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_BFu1i, Sf_BFu15s_BFu1i)
//============================================================================



static void Test_Sf_BFu15s_BFu1ll()
{
  {
    init_simple_test("Sf_BFu15s_BFu1ll");
    static STRUCT_IF_C Sf_BFu15s_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu15s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_BFu1ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_BFu1ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_BFu1ll");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "Sf_BFu15s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_BFu1ll, Sf_BFu15s_BFu1ll)
//============================================================================



static void Test_Sf_BFu15s_BFu1s()
{
  {
    init_simple_test("Sf_BFu15s_BFu1s");
    static STRUCT_IF_C Sf_BFu15s_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu15s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_BFu1s)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_BFu1s.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_BFu1s");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_BFu1s");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "Sf_BFu15s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_BFu1s, Sf_BFu15s_BFu1s)
//============================================================================



static void Test_Sf_BFu15s_BFu31i()
{
  {
    init_simple_test("Sf_BFu15s_BFu31i");
    static STRUCT_IF_C Sf_BFu15s_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu15s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_BFu31i)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_BFu31i.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_BFu31i");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_BFu31i");
    set_bf_and_test(lv, v3, 1, 7, 31, 1, "Sf_BFu15s_BFu31i");
    set_bf_and_test(lv, v3, 1, 7, 31, hide_ull(1LL<<30), "Sf_BFu15s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_BFu31i, Sf_BFu15s_BFu31i)
//============================================================================



static void Test_Sf_BFu15s_BFu31ll()
{
  {
    init_simple_test("Sf_BFu15s_BFu31ll");
    static STRUCT_IF_C Sf_BFu15s_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu15s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_BFu31ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_BFu31ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_BFu31ll");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_BFu31ll");
    set_bf_and_test(lv, v3, 1, 7, 31, 1, "Sf_BFu15s_BFu31ll");
    set_bf_and_test(lv, v3, 1, 7, 31, hide_ull(1LL<<30), "Sf_BFu15s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_BFu31ll, Sf_BFu15s_BFu31ll)
//============================================================================



static void Test_Sf_BFu15s_BFu32i()
{
  {
    init_simple_test("Sf_BFu15s_BFu32i");
    static STRUCT_IF_C Sf_BFu15s_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu15s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_BFu32i)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_BFu32i.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_BFu32i");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_BFu32i");
    set_bf_and_test(lv, v3, 1, 7, 32, 1, "Sf_BFu15s_BFu32i");
    set_bf_and_test(lv, v3, 1, 7, 32, hide_ull(1LL<<31), "Sf_BFu15s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_BFu32i, Sf_BFu15s_BFu32i)
//============================================================================



static void Test_Sf_BFu15s_BFu32ll()
{
  {
    init_simple_test("Sf_BFu15s_BFu32ll");
    static STRUCT_IF_C Sf_BFu15s_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu15s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_BFu32ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_BFu32ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_BFu32ll");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_BFu32ll");
    set_bf_and_test(lv, v3, 1, 7, 32, 1, "Sf_BFu15s_BFu32ll");
    set_bf_and_test(lv, v3, 1, 7, 32, hide_ull(1LL<<31), "Sf_BFu15s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_BFu32ll, Sf_BFu15s_BFu32ll)
//============================================================================



static void Test_Sf_BFu15s_BFu33()
{
  {
    init_simple_test("Sf_BFu15s_BFu33");
    static STRUCT_IF_C Sf_BFu15s_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu15s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_BFu33)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_BFu33.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_BFu33");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_BFu33");
    set_bf_and_test(lv, v3, 1, 7, 33, 1, "Sf_BFu15s_BFu33");
    set_bf_and_test(lv, v3, 1, 7, 33, hide_ull(1LL<<32), "Sf_BFu15s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_BFu33, Sf_BFu15s_BFu33)
//============================================================================



static void Test_Sf_BFu15s_BFu7c()
{
  {
    init_simple_test("Sf_BFu15s_BFu7c");
    static STRUCT_IF_C Sf_BFu15s_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_BFu7c)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_BFu7c.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_BFu7c");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_BFu7c");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "Sf_BFu15s_BFu7c");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "Sf_BFu15s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_BFu7c, Sf_BFu15s_BFu7c)
//============================================================================



static void Test_Sf_BFu15s_BFu7i()
{
  {
    init_simple_test("Sf_BFu15s_BFu7i");
    static STRUCT_IF_C Sf_BFu15s_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_BFu7i)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_BFu7i.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_BFu7i");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_BFu7i");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "Sf_BFu15s_BFu7i");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "Sf_BFu15s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_BFu7i, Sf_BFu15s_BFu7i)
//============================================================================



static void Test_Sf_BFu15s_BFu7ll()
{
  {
    init_simple_test("Sf_BFu15s_BFu7ll");
    static STRUCT_IF_C Sf_BFu15s_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_BFu7ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_BFu7ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_BFu7ll");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_BFu7ll");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "Sf_BFu15s_BFu7ll");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "Sf_BFu15s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_BFu7ll, Sf_BFu15s_BFu7ll)
//============================================================================



static void Test_Sf_BFu15s_BFu7s()
{
  {
    init_simple_test("Sf_BFu15s_BFu7s");
    static STRUCT_IF_C Sf_BFu15s_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_BFu7s)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_BFu7s.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_BFu7s");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_BFu7s");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "Sf_BFu15s_BFu7s");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "Sf_BFu15s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_BFu7s, Sf_BFu15s_BFu7s)
//============================================================================



static void Test_Sf_BFu15s_BFu8c()
{
  {
    init_simple_test("Sf_BFu15s_BFu8c");
    static STRUCT_IF_C Sf_BFu15s_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_BFu8c)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_BFu8c.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_BFu8c");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_BFu8c");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "Sf_BFu15s_BFu8c");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "Sf_BFu15s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_BFu8c, Sf_BFu15s_BFu8c)
//============================================================================



static void Test_Sf_BFu15s_BFu8i()
{
  {
    init_simple_test("Sf_BFu15s_BFu8i");
    static STRUCT_IF_C Sf_BFu15s_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_BFu8i)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_BFu8i.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_BFu8i");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_BFu8i");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "Sf_BFu15s_BFu8i");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "Sf_BFu15s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_BFu8i, Sf_BFu15s_BFu8i)
//============================================================================



static void Test_Sf_BFu15s_BFu8ll()
{
  {
    init_simple_test("Sf_BFu15s_BFu8ll");
    static STRUCT_IF_C Sf_BFu15s_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_BFu8ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_BFu8ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_BFu8ll");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_BFu8ll");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "Sf_BFu15s_BFu8ll");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "Sf_BFu15s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_BFu8ll, Sf_BFu15s_BFu8ll)
//============================================================================



static void Test_Sf_BFu15s_BFu8s()
{
  {
    init_simple_test("Sf_BFu15s_BFu8s");
    static STRUCT_IF_C Sf_BFu15s_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_BFu8s)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_BFu8s.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_BFu8s");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_BFu8s");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "Sf_BFu15s_BFu8s");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "Sf_BFu15s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_BFu8s, Sf_BFu15s_BFu8s)
//============================================================================



static void Test_Sf_BFu15s_BFu9i()
{
  {
    init_simple_test("Sf_BFu15s_BFu9i");
    static STRUCT_IF_C Sf_BFu15s_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_BFu9i)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_BFu9i.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_BFu9i");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_BFu9i");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "Sf_BFu15s_BFu9i");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "Sf_BFu15s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_BFu9i, Sf_BFu15s_BFu9i)
//============================================================================



static void Test_Sf_BFu15s_BFu9ll()
{
  {
    init_simple_test("Sf_BFu15s_BFu9ll");
    static STRUCT_IF_C Sf_BFu15s_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_BFu9ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_BFu9ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_BFu9ll");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_BFu9ll");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "Sf_BFu15s_BFu9ll");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "Sf_BFu15s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_BFu9ll, Sf_BFu15s_BFu9ll)
//============================================================================



static void Test_Sf_BFu15s_BFu9s()
{
  {
    init_simple_test("Sf_BFu15s_BFu9s");
    static STRUCT_IF_C Sf_BFu15s_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_BFu9s)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_BFu9s.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_BFu9s");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_BFu9s");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "Sf_BFu15s_BFu9s");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "Sf_BFu15s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_BFu9s, Sf_BFu15s_BFu9s)
//============================================================================



static void Test_Sf_BFu15s_C()
{
  {
    init_simple_test("Sf_BFu15s_C");
    static STRUCT_IF_C Sf_BFu15s_C lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15s_C)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_C)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_C.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_C");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_C");
    check_field_offset(lv, v3, 2, "Sf_BFu15s_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_C, Sf_BFu15s_C)
//============================================================================



static void Test_Sf_BFu15s_D()
{
  {
    init_simple_test("Sf_BFu15s_D");
    static STRUCT_IF_C Sf_BFu15s_D lv;
    check2(sizeof(lv), 10, "sizeof(Sf_BFu15s_D)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_D)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_D.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_D");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_D");
    check_field_offset(lv, v3, 2, "Sf_BFu15s_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_D, Sf_BFu15s_D)
//============================================================================



static void Test_Sf_BFu15s_F()
{
  {
    init_simple_test("Sf_BFu15s_F");
    static STRUCT_IF_C Sf_BFu15s_F lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu15s_F)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_F)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_F.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_F");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_F");
    check_field_offset(lv, v3, 2, "Sf_BFu15s_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_F, Sf_BFu15s_F)
//============================================================================



static void Test_Sf_BFu15s_I()
{
  {
    init_simple_test("Sf_BFu15s_I");
    static STRUCT_IF_C Sf_BFu15s_I lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu15s_I)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_I)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_I.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_I");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_I");
    check_field_offset(lv, v3, 2, "Sf_BFu15s_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_I, Sf_BFu15s_I)
//============================================================================



static void Test_Sf_BFu15s_Ip()
{
  {
    init_simple_test("Sf_BFu15s_Ip");
    static STRUCT_IF_C Sf_BFu15s_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Sf_BFu15s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_Ip)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_Ip.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_Ip");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_Ip");
    check_field_offset(lv, v3, 2, "Sf_BFu15s_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_Ip, Sf_BFu15s_Ip)
//============================================================================



static void Test_Sf_BFu15s_L()
{
  {
    init_simple_test("Sf_BFu15s_L");
    static STRUCT_IF_C Sf_BFu15s_L lv;
    check2(sizeof(lv), 10, "sizeof(Sf_BFu15s_L)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_L)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_L.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_L");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_L");
    check_field_offset(lv, v3, 2, "Sf_BFu15s_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_L, Sf_BFu15s_L)
//============================================================================



static void Test_Sf_BFu15s_S()
{
  {
    init_simple_test("Sf_BFu15s_S");
    static STRUCT_IF_C Sf_BFu15s_S lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu15s_S)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_S)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_S.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_S");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_S");
    check_field_offset(lv, v3, 2, "Sf_BFu15s_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_S, Sf_BFu15s_S)
//============================================================================



static void Test_Sf_BFu15s_Sf()
{
  {
    init_simple_test("Sf_BFu15s_Sf");
    static STRUCT_IF_C Sf_BFu15s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu15s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_Sf)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_Sf.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_Sf");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_Sf");
    check_field_offset(lv, v3, 2, "Sf_BFu15s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_Sf, Sf_BFu15s_Sf)
//============================================================================



static void Test_Sf_BFu15s_Uc()
{
  {
    init_simple_test("Sf_BFu15s_Uc");
    static STRUCT_IF_C Sf_BFu15s_Uc lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu15s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_Uc)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_Uc.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_Uc");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_Uc");
    check_field_offset(lv, v3, 2, "Sf_BFu15s_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_Uc, Sf_BFu15s_Uc)
//============================================================================



static void Test_Sf_BFu15s_Ui()
{
  {
    init_simple_test("Sf_BFu15s_Ui");
    static STRUCT_IF_C Sf_BFu15s_Ui lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu15s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_Ui)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_Ui.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_Ui");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_Ui");
    check_field_offset(lv, v3, 2, "Sf_BFu15s_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_Ui, Sf_BFu15s_Ui)
//============================================================================



static void Test_Sf_BFu15s_Ul()
{
  {
    init_simple_test("Sf_BFu15s_Ul");
    static STRUCT_IF_C Sf_BFu15s_Ul lv;
    check2(sizeof(lv), 10, "sizeof(Sf_BFu15s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_Ul)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_Ul.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_Ul");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_Ul");
    check_field_offset(lv, v3, 2, "Sf_BFu15s_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_Ul, Sf_BFu15s_Ul)
//============================================================================



static void Test_Sf_BFu15s_Us()
{
  {
    init_simple_test("Sf_BFu15s_Us");
    static STRUCT_IF_C Sf_BFu15s_Us lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu15s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_Us)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_Us.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_Us");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_Us");
    check_field_offset(lv, v3, 2, "Sf_BFu15s_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_Us, Sf_BFu15s_Us)
//============================================================================



static void Test_Sf_BFu15s_Vp()
{
  {
    init_simple_test("Sf_BFu15s_Vp");
    static STRUCT_IF_C Sf_BFu15s_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Sf_BFu15s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu15s_Vp)");
    check_field_offset(lv, v1, 0, "Sf_BFu15s_Vp.v1");
    set_bf_and_test(lv, v2, 0, 0, 15, 1, "Sf_BFu15s_Vp");
    set_bf_and_test(lv, v2, 0, 0, 15, hide_ull(1LL<<14), "Sf_BFu15s_Vp");
    check_field_offset(lv, v3, 2, "Sf_BFu15s_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu15s_Vp, Sf_BFu15s_Vp)
//============================================================================



static void Test_Sf_BFu16i()
{
  {
    init_simple_test("Sf_BFu16i");
    static STRUCT_IF_C Sf_BFu16i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i, Sf_BFu16i)
//============================================================================



static void Test_Sf_BFu16i_BFu15i()
{
  {
    init_simple_test("Sf_BFu16i_BFu15i");
    static STRUCT_IF_C Sf_BFu16i_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_BFu15i)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_BFu15i.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_BFu15i");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "Sf_BFu16i_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "Sf_BFu16i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_BFu15i, Sf_BFu16i_BFu15i)
//============================================================================



static void Test_Sf_BFu16i_BFu15ll()
{
  {
    init_simple_test("Sf_BFu16i_BFu15ll");
    static STRUCT_IF_C Sf_BFu16i_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_BFu15ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_BFu15ll");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "Sf_BFu16i_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "Sf_BFu16i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_BFu15ll, Sf_BFu16i_BFu15ll)
//============================================================================



static void Test_Sf_BFu16i_BFu15s()
{
  {
    init_simple_test("Sf_BFu16i_BFu15s");
    static STRUCT_IF_C Sf_BFu16i_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_BFu15s)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_BFu15s.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_BFu15s");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "Sf_BFu16i_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "Sf_BFu16i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_BFu15s, Sf_BFu16i_BFu15s)
//============================================================================



static void Test_Sf_BFu16i_BFu16i()
{
  {
    init_simple_test("Sf_BFu16i_BFu16i");
    static STRUCT_IF_C Sf_BFu16i_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_BFu16i)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_BFu16i.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "Sf_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_BFu16i, Sf_BFu16i_BFu16i)
//============================================================================



static void Test_Sf_BFu16i_BFu16ll()
{
  {
    init_simple_test("Sf_BFu16i_BFu16ll");
    static STRUCT_IF_C Sf_BFu16i_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_BFu16ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "Sf_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_BFu16ll, Sf_BFu16i_BFu16ll)
//============================================================================



static void Test_Sf_BFu16i_BFu16s()
{
  {
    init_simple_test("Sf_BFu16i_BFu16s");
    static STRUCT_IF_C Sf_BFu16i_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_BFu16s)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_BFu16s.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "Sf_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_BFu16s, Sf_BFu16i_BFu16s)
//============================================================================



static void Test_Sf_BFu16i_BFu17i()
{
  {
    init_simple_test("Sf_BFu16i_BFu17i");
    static STRUCT_IF_C Sf_BFu16i_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu16i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_BFu17i)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_BFu17i.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_BFu17i");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "Sf_BFu16i_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "Sf_BFu16i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_BFu17i, Sf_BFu16i_BFu17i)
//============================================================================



static void Test_Sf_BFu16i_BFu17ll()
{
  {
    init_simple_test("Sf_BFu16i_BFu17ll");
    static STRUCT_IF_C Sf_BFu16i_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu16i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_BFu17ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_BFu17ll");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "Sf_BFu16i_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "Sf_BFu16i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_BFu17ll, Sf_BFu16i_BFu17ll)
//============================================================================



static void Test_Sf_BFu16i_BFu1c()
{
  {
    init_simple_test("Sf_BFu16i_BFu1c");
    static STRUCT_IF_C Sf_BFu16i_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_BFu1c)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_BFu1c.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_BFu1c");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_BFu1c");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "Sf_BFu16i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_BFu1c, Sf_BFu16i_BFu1c)
//============================================================================



static void Test_Sf_BFu16i_BFu1i()
{
  {
    init_simple_test("Sf_BFu16i_BFu1i");
    static STRUCT_IF_C Sf_BFu16i_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_BFu1i)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_BFu1i.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_BFu1i");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_BFu1i");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "Sf_BFu16i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_BFu1i, Sf_BFu16i_BFu1i)
//============================================================================



static void Test_Sf_BFu16i_BFu1ll()
{
  {
    init_simple_test("Sf_BFu16i_BFu1ll");
    static STRUCT_IF_C Sf_BFu16i_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_BFu1ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_BFu1ll");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "Sf_BFu16i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_BFu1ll, Sf_BFu16i_BFu1ll)
//============================================================================



static void Test_Sf_BFu16i_BFu1s()
{
  {
    init_simple_test("Sf_BFu16i_BFu1s");
    static STRUCT_IF_C Sf_BFu16i_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_BFu1s)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_BFu1s.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_BFu1s");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_BFu1s");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "Sf_BFu16i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_BFu1s, Sf_BFu16i_BFu1s)
//============================================================================



static void Test_Sf_BFu16i_BFu31i()
{
  {
    init_simple_test("Sf_BFu16i_BFu31i");
    static STRUCT_IF_C Sf_BFu16i_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu16i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_BFu31i)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_BFu31i.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_BFu31i");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "Sf_BFu16i_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "Sf_BFu16i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_BFu31i, Sf_BFu16i_BFu31i)
//============================================================================



static void Test_Sf_BFu16i_BFu31ll()
{
  {
    init_simple_test("Sf_BFu16i_BFu31ll");
    static STRUCT_IF_C Sf_BFu16i_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu16i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_BFu31ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_BFu31ll");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "Sf_BFu16i_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "Sf_BFu16i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_BFu31ll, Sf_BFu16i_BFu31ll)
//============================================================================



static void Test_Sf_BFu16i_BFu32i()
{
  {
    init_simple_test("Sf_BFu16i_BFu32i");
    static STRUCT_IF_C Sf_BFu16i_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu16i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_BFu32i)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_BFu32i.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_BFu32i");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "Sf_BFu16i_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "Sf_BFu16i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_BFu32i, Sf_BFu16i_BFu32i)
//============================================================================



static void Test_Sf_BFu16i_BFu32ll()
{
  {
    init_simple_test("Sf_BFu16i_BFu32ll");
    static STRUCT_IF_C Sf_BFu16i_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu16i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_BFu32ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_BFu32ll");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "Sf_BFu16i_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "Sf_BFu16i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_BFu32ll, Sf_BFu16i_BFu32ll)
//============================================================================



static void Test_Sf_BFu16i_BFu33()
{
  {
    init_simple_test("Sf_BFu16i_BFu33");
    static STRUCT_IF_C Sf_BFu16i_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(Sf_BFu16i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_BFu33)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_BFu33.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_BFu33");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "Sf_BFu16i_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "Sf_BFu16i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_BFu33, Sf_BFu16i_BFu33)
//============================================================================



static void Test_Sf_BFu16i_BFu7c()
{
  {
    init_simple_test("Sf_BFu16i_BFu7c");
    static STRUCT_IF_C Sf_BFu16i_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_BFu7c)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_BFu7c.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_BFu7c");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "Sf_BFu16i_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "Sf_BFu16i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_BFu7c, Sf_BFu16i_BFu7c)
//============================================================================



static void Test_Sf_BFu16i_BFu7i()
{
  {
    init_simple_test("Sf_BFu16i_BFu7i");
    static STRUCT_IF_C Sf_BFu16i_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_BFu7i)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_BFu7i.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_BFu7i");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "Sf_BFu16i_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "Sf_BFu16i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_BFu7i, Sf_BFu16i_BFu7i)
//============================================================================



static void Test_Sf_BFu16i_BFu7ll()
{
  {
    init_simple_test("Sf_BFu16i_BFu7ll");
    static STRUCT_IF_C Sf_BFu16i_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_BFu7ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_BFu7ll");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "Sf_BFu16i_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "Sf_BFu16i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_BFu7ll, Sf_BFu16i_BFu7ll)
//============================================================================



static void Test_Sf_BFu16i_BFu7s()
{
  {
    init_simple_test("Sf_BFu16i_BFu7s");
    static STRUCT_IF_C Sf_BFu16i_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_BFu7s)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_BFu7s.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_BFu7s");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "Sf_BFu16i_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "Sf_BFu16i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_BFu7s, Sf_BFu16i_BFu7s)
//============================================================================



static void Test_Sf_BFu16i_BFu8c()
{
  {
    init_simple_test("Sf_BFu16i_BFu8c");
    static STRUCT_IF_C Sf_BFu16i_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_BFu8c)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_BFu8c.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_BFu8c");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "Sf_BFu16i_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "Sf_BFu16i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_BFu8c, Sf_BFu16i_BFu8c)
//============================================================================



static void Test_Sf_BFu16i_BFu8i()
{
  {
    init_simple_test("Sf_BFu16i_BFu8i");
    static STRUCT_IF_C Sf_BFu16i_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_BFu8i)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_BFu8i.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_BFu8i");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "Sf_BFu16i_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "Sf_BFu16i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_BFu8i, Sf_BFu16i_BFu8i)
//============================================================================



static void Test_Sf_BFu16i_BFu8ll()
{
  {
    init_simple_test("Sf_BFu16i_BFu8ll");
    static STRUCT_IF_C Sf_BFu16i_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_BFu8ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_BFu8ll");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "Sf_BFu16i_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "Sf_BFu16i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_BFu8ll, Sf_BFu16i_BFu8ll)
//============================================================================



static void Test_Sf_BFu16i_BFu8s()
{
  {
    init_simple_test("Sf_BFu16i_BFu8s");
    static STRUCT_IF_C Sf_BFu16i_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_BFu8s)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_BFu8s.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_BFu8s");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "Sf_BFu16i_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "Sf_BFu16i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_BFu8s, Sf_BFu16i_BFu8s)
//============================================================================



static void Test_Sf_BFu16i_BFu9i()
{
  {
    init_simple_test("Sf_BFu16i_BFu9i");
    static STRUCT_IF_C Sf_BFu16i_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_BFu9i)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_BFu9i.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_BFu9i");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "Sf_BFu16i_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "Sf_BFu16i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_BFu9i, Sf_BFu16i_BFu9i)
//============================================================================



static void Test_Sf_BFu16i_BFu9ll()
{
  {
    init_simple_test("Sf_BFu16i_BFu9ll");
    static STRUCT_IF_C Sf_BFu16i_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_BFu9ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_BFu9ll");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "Sf_BFu16i_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "Sf_BFu16i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_BFu9ll, Sf_BFu16i_BFu9ll)
//============================================================================



static void Test_Sf_BFu16i_BFu9s()
{
  {
    init_simple_test("Sf_BFu16i_BFu9s");
    static STRUCT_IF_C Sf_BFu16i_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_BFu9s)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_BFu9s.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_BFu9s");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "Sf_BFu16i_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "Sf_BFu16i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_BFu9s, Sf_BFu16i_BFu9s)
//============================================================================



static void Test_Sf_BFu16i_C()
{
  {
    init_simple_test("Sf_BFu16i_C");
    static STRUCT_IF_C Sf_BFu16i_C lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16i_C)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_C)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_C.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_C");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_C");
    check_field_offset(lv, v3, 2, "Sf_BFu16i_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_C, Sf_BFu16i_C)
//============================================================================



static void Test_Sf_BFu16i_D()
{
  {
    init_simple_test("Sf_BFu16i_D");
    static STRUCT_IF_C Sf_BFu16i_D lv;
    check2(sizeof(lv), 10, "sizeof(Sf_BFu16i_D)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_D)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_D.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_D");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_D");
    check_field_offset(lv, v3, 2, "Sf_BFu16i_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_D, Sf_BFu16i_D)
//============================================================================



static void Test_Sf_BFu16i_F()
{
  {
    init_simple_test("Sf_BFu16i_F");
    static STRUCT_IF_C Sf_BFu16i_F lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu16i_F)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_F)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_F.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_F");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_F");
    check_field_offset(lv, v3, 2, "Sf_BFu16i_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_F, Sf_BFu16i_F)
//============================================================================



static void Test_Sf_BFu16i_I()
{
  {
    init_simple_test("Sf_BFu16i_I");
    static STRUCT_IF_C Sf_BFu16i_I lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu16i_I)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_I)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_I.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_I");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_I");
    check_field_offset(lv, v3, 2, "Sf_BFu16i_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_I, Sf_BFu16i_I)
//============================================================================



static void Test_Sf_BFu16i_Ip()
{
  {
    init_simple_test("Sf_BFu16i_Ip");
    static STRUCT_IF_C Sf_BFu16i_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Sf_BFu16i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_Ip)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_Ip.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_Ip");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_Ip");
    check_field_offset(lv, v3, 2, "Sf_BFu16i_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_Ip, Sf_BFu16i_Ip)
//============================================================================



static void Test_Sf_BFu16i_L()
{
  {
    init_simple_test("Sf_BFu16i_L");
    static STRUCT_IF_C Sf_BFu16i_L lv;
    check2(sizeof(lv), 10, "sizeof(Sf_BFu16i_L)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_L)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_L.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_L");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_L");
    check_field_offset(lv, v3, 2, "Sf_BFu16i_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_L, Sf_BFu16i_L)
//============================================================================



static void Test_Sf_BFu16i_S()
{
  {
    init_simple_test("Sf_BFu16i_S");
    static STRUCT_IF_C Sf_BFu16i_S lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16i_S)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_S)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_S.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_S");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_S");
    check_field_offset(lv, v3, 2, "Sf_BFu16i_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_S, Sf_BFu16i_S)
//============================================================================



static void Test_Sf_BFu16i_Sf()
{
  {
    init_simple_test("Sf_BFu16i_Sf");
    static STRUCT_IF_C Sf_BFu16i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu16i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_Sf)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_Sf.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_Sf");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_Sf");
    check_field_offset(lv, v3, 2, "Sf_BFu16i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_Sf, Sf_BFu16i_Sf)
//============================================================================



static void Test_Sf_BFu16i_Uc()
{
  {
    init_simple_test("Sf_BFu16i_Uc");
    static STRUCT_IF_C Sf_BFu16i_Uc lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_Uc)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_Uc.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_Uc");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_Uc");
    check_field_offset(lv, v3, 2, "Sf_BFu16i_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_Uc, Sf_BFu16i_Uc)
//============================================================================



static void Test_Sf_BFu16i_Ui()
{
  {
    init_simple_test("Sf_BFu16i_Ui");
    static STRUCT_IF_C Sf_BFu16i_Ui lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu16i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_Ui)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_Ui.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_Ui");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_Ui");
    check_field_offset(lv, v3, 2, "Sf_BFu16i_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_Ui, Sf_BFu16i_Ui)
//============================================================================



static void Test_Sf_BFu16i_Ul()
{
  {
    init_simple_test("Sf_BFu16i_Ul");
    static STRUCT_IF_C Sf_BFu16i_Ul lv;
    check2(sizeof(lv), 10, "sizeof(Sf_BFu16i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_Ul)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_Ul.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_Ul");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_Ul");
    check_field_offset(lv, v3, 2, "Sf_BFu16i_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_Ul, Sf_BFu16i_Ul)
//============================================================================



static void Test_Sf_BFu16i_Us()
{
  {
    init_simple_test("Sf_BFu16i_Us");
    static STRUCT_IF_C Sf_BFu16i_Us lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_Us)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_Us.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_Us");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_Us");
    check_field_offset(lv, v3, 2, "Sf_BFu16i_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_Us, Sf_BFu16i_Us)
//============================================================================



static void Test_Sf_BFu16i_Vp()
{
  {
    init_simple_test("Sf_BFu16i_Vp");
    static STRUCT_IF_C Sf_BFu16i_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Sf_BFu16i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16i_Vp)");
    check_field_offset(lv, v1, 0, "Sf_BFu16i_Vp.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16i_Vp");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16i_Vp");
    check_field_offset(lv, v3, 2, "Sf_BFu16i_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16i_Vp, Sf_BFu16i_Vp)
//============================================================================



static void Test_Sf_BFu16ll()
{
  {
    init_simple_test("Sf_BFu16ll");
    static STRUCT_IF_C Sf_BFu16ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll, Sf_BFu16ll)
//============================================================================



static void Test_Sf_BFu16ll_BFu15i()
{
  {
    init_simple_test("Sf_BFu16ll_BFu15i");
    static STRUCT_IF_C Sf_BFu16ll_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_BFu15i)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_BFu15i");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "Sf_BFu16ll_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "Sf_BFu16ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_BFu15i, Sf_BFu16ll_BFu15i)
//============================================================================



static void Test_Sf_BFu16ll_BFu15ll()
{
  {
    init_simple_test("Sf_BFu16ll_BFu15ll");
    static STRUCT_IF_C Sf_BFu16ll_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_BFu15ll");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "Sf_BFu16ll_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "Sf_BFu16ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_BFu15ll, Sf_BFu16ll_BFu15ll)
//============================================================================



static void Test_Sf_BFu16ll_BFu15s()
{
  {
    init_simple_test("Sf_BFu16ll_BFu15s");
    static STRUCT_IF_C Sf_BFu16ll_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_BFu15s)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_BFu15s");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "Sf_BFu16ll_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "Sf_BFu16ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_BFu15s, Sf_BFu16ll_BFu15s)
//============================================================================



static void Test_Sf_BFu16ll_BFu16i()
{
  {
    init_simple_test("Sf_BFu16ll_BFu16i");
    static STRUCT_IF_C Sf_BFu16ll_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_BFu16i)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "Sf_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_BFu16i, Sf_BFu16ll_BFu16i)
//============================================================================



static void Test_Sf_BFu16ll_BFu16ll()
{
  {
    init_simple_test("Sf_BFu16ll_BFu16ll");
    static STRUCT_IF_C Sf_BFu16ll_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "Sf_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_BFu16ll, Sf_BFu16ll_BFu16ll)
//============================================================================



static void Test_Sf_BFu16ll_BFu16s()
{
  {
    init_simple_test("Sf_BFu16ll_BFu16s");
    static STRUCT_IF_C Sf_BFu16ll_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_BFu16s)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "Sf_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_BFu16s, Sf_BFu16ll_BFu16s)
//============================================================================



static void Test_Sf_BFu16ll_BFu17i()
{
  {
    init_simple_test("Sf_BFu16ll_BFu17i");
    static STRUCT_IF_C Sf_BFu16ll_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu16ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_BFu17i)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_BFu17i");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "Sf_BFu16ll_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "Sf_BFu16ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_BFu17i, Sf_BFu16ll_BFu17i)
//============================================================================



static void Test_Sf_BFu16ll_BFu17ll()
{
  {
    init_simple_test("Sf_BFu16ll_BFu17ll");
    static STRUCT_IF_C Sf_BFu16ll_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu16ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_BFu17ll");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "Sf_BFu16ll_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "Sf_BFu16ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_BFu17ll, Sf_BFu16ll_BFu17ll)
//============================================================================



static void Test_Sf_BFu16ll_BFu1c()
{
  {
    init_simple_test("Sf_BFu16ll_BFu1c");
    static STRUCT_IF_C Sf_BFu16ll_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_BFu1c)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_BFu1c");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "Sf_BFu16ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_BFu1c, Sf_BFu16ll_BFu1c)
//============================================================================



static void Test_Sf_BFu16ll_BFu1i()
{
  {
    init_simple_test("Sf_BFu16ll_BFu1i");
    static STRUCT_IF_C Sf_BFu16ll_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_BFu1i)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_BFu1i");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "Sf_BFu16ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_BFu1i, Sf_BFu16ll_BFu1i)
//============================================================================



static void Test_Sf_BFu16ll_BFu1ll()
{
  {
    init_simple_test("Sf_BFu16ll_BFu1ll");
    static STRUCT_IF_C Sf_BFu16ll_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_BFu1ll");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "Sf_BFu16ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_BFu1ll, Sf_BFu16ll_BFu1ll)
//============================================================================



static void Test_Sf_BFu16ll_BFu1s()
{
  {
    init_simple_test("Sf_BFu16ll_BFu1s");
    static STRUCT_IF_C Sf_BFu16ll_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_BFu1s)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_BFu1s");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "Sf_BFu16ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_BFu1s, Sf_BFu16ll_BFu1s)
//============================================================================



static void Test_Sf_BFu16ll_BFu31i()
{
  {
    init_simple_test("Sf_BFu16ll_BFu31i");
    static STRUCT_IF_C Sf_BFu16ll_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu16ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_BFu31i)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_BFu31i");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "Sf_BFu16ll_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "Sf_BFu16ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_BFu31i, Sf_BFu16ll_BFu31i)
//============================================================================



static void Test_Sf_BFu16ll_BFu31ll()
{
  {
    init_simple_test("Sf_BFu16ll_BFu31ll");
    static STRUCT_IF_C Sf_BFu16ll_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu16ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_BFu31ll");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "Sf_BFu16ll_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "Sf_BFu16ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_BFu31ll, Sf_BFu16ll_BFu31ll)
//============================================================================



static void Test_Sf_BFu16ll_BFu32i()
{
  {
    init_simple_test("Sf_BFu16ll_BFu32i");
    static STRUCT_IF_C Sf_BFu16ll_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu16ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_BFu32i)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_BFu32i");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "Sf_BFu16ll_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "Sf_BFu16ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_BFu32i, Sf_BFu16ll_BFu32i)
//============================================================================



static void Test_Sf_BFu16ll_BFu32ll()
{
  {
    init_simple_test("Sf_BFu16ll_BFu32ll");
    static STRUCT_IF_C Sf_BFu16ll_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu16ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_BFu32ll");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "Sf_BFu16ll_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "Sf_BFu16ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_BFu32ll, Sf_BFu16ll_BFu32ll)
//============================================================================



static void Test_Sf_BFu16ll_BFu33()
{
  {
    init_simple_test("Sf_BFu16ll_BFu33");
    static STRUCT_IF_C Sf_BFu16ll_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(Sf_BFu16ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_BFu33)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_BFu33.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_BFu33");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "Sf_BFu16ll_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "Sf_BFu16ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_BFu33, Sf_BFu16ll_BFu33)
//============================================================================



static void Test_Sf_BFu16ll_BFu7c()
{
  {
    init_simple_test("Sf_BFu16ll_BFu7c");
    static STRUCT_IF_C Sf_BFu16ll_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_BFu7c)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_BFu7c");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "Sf_BFu16ll_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "Sf_BFu16ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_BFu7c, Sf_BFu16ll_BFu7c)
//============================================================================



static void Test_Sf_BFu16ll_BFu7i()
{
  {
    init_simple_test("Sf_BFu16ll_BFu7i");
    static STRUCT_IF_C Sf_BFu16ll_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_BFu7i)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_BFu7i");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "Sf_BFu16ll_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "Sf_BFu16ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_BFu7i, Sf_BFu16ll_BFu7i)
//============================================================================



static void Test_Sf_BFu16ll_BFu7ll()
{
  {
    init_simple_test("Sf_BFu16ll_BFu7ll");
    static STRUCT_IF_C Sf_BFu16ll_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_BFu7ll");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "Sf_BFu16ll_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "Sf_BFu16ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_BFu7ll, Sf_BFu16ll_BFu7ll)
//============================================================================



static void Test_Sf_BFu16ll_BFu7s()
{
  {
    init_simple_test("Sf_BFu16ll_BFu7s");
    static STRUCT_IF_C Sf_BFu16ll_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_BFu7s)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_BFu7s");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "Sf_BFu16ll_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "Sf_BFu16ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_BFu7s, Sf_BFu16ll_BFu7s)
//============================================================================



static void Test_Sf_BFu16ll_BFu8c()
{
  {
    init_simple_test("Sf_BFu16ll_BFu8c");
    static STRUCT_IF_C Sf_BFu16ll_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_BFu8c)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_BFu8c");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "Sf_BFu16ll_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "Sf_BFu16ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_BFu8c, Sf_BFu16ll_BFu8c)
//============================================================================



static void Test_Sf_BFu16ll_BFu8i()
{
  {
    init_simple_test("Sf_BFu16ll_BFu8i");
    static STRUCT_IF_C Sf_BFu16ll_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_BFu8i)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_BFu8i");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "Sf_BFu16ll_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "Sf_BFu16ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_BFu8i, Sf_BFu16ll_BFu8i)
//============================================================================



static void Test_Sf_BFu16ll_BFu8ll()
{
  {
    init_simple_test("Sf_BFu16ll_BFu8ll");
    static STRUCT_IF_C Sf_BFu16ll_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_BFu8ll");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "Sf_BFu16ll_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "Sf_BFu16ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_BFu8ll, Sf_BFu16ll_BFu8ll)
//============================================================================



static void Test_Sf_BFu16ll_BFu8s()
{
  {
    init_simple_test("Sf_BFu16ll_BFu8s");
    static STRUCT_IF_C Sf_BFu16ll_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_BFu8s)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_BFu8s");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "Sf_BFu16ll_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "Sf_BFu16ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_BFu8s, Sf_BFu16ll_BFu8s)
//============================================================================



static void Test_Sf_BFu16ll_BFu9i()
{
  {
    init_simple_test("Sf_BFu16ll_BFu9i");
    static STRUCT_IF_C Sf_BFu16ll_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_BFu9i)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_BFu9i");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "Sf_BFu16ll_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "Sf_BFu16ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_BFu9i, Sf_BFu16ll_BFu9i)
//============================================================================



static void Test_Sf_BFu16ll_BFu9ll()
{
  {
    init_simple_test("Sf_BFu16ll_BFu9ll");
    static STRUCT_IF_C Sf_BFu16ll_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_BFu9ll");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "Sf_BFu16ll_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "Sf_BFu16ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_BFu9ll, Sf_BFu16ll_BFu9ll)
//============================================================================



static void Test_Sf_BFu16ll_BFu9s()
{
  {
    init_simple_test("Sf_BFu16ll_BFu9s");
    static STRUCT_IF_C Sf_BFu16ll_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_BFu9s)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_BFu9s");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "Sf_BFu16ll_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "Sf_BFu16ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_BFu9s, Sf_BFu16ll_BFu9s)
//============================================================================



static void Test_Sf_BFu16ll_C()
{
  {
    init_simple_test("Sf_BFu16ll_C");
    static STRUCT_IF_C Sf_BFu16ll_C lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_C)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_C.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_C");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_C");
    check_field_offset(lv, v3, 2, "Sf_BFu16ll_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_C, Sf_BFu16ll_C)
//============================================================================



static void Test_Sf_BFu16ll_D()
{
  {
    init_simple_test("Sf_BFu16ll_D");
    static STRUCT_IF_C Sf_BFu16ll_D lv;
    check2(sizeof(lv), 10, "sizeof(Sf_BFu16ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_D)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_D.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_D");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_D");
    check_field_offset(lv, v3, 2, "Sf_BFu16ll_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_D, Sf_BFu16ll_D)
//============================================================================



static void Test_Sf_BFu16ll_F()
{
  {
    init_simple_test("Sf_BFu16ll_F");
    static STRUCT_IF_C Sf_BFu16ll_F lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu16ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_F)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_F.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_F");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_F");
    check_field_offset(lv, v3, 2, "Sf_BFu16ll_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_F, Sf_BFu16ll_F)
//============================================================================



static void Test_Sf_BFu16ll_I()
{
  {
    init_simple_test("Sf_BFu16ll_I");
    static STRUCT_IF_C Sf_BFu16ll_I lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu16ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_I)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_I.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_I");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_I");
    check_field_offset(lv, v3, 2, "Sf_BFu16ll_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_I, Sf_BFu16ll_I)
//============================================================================



static void Test_Sf_BFu16ll_Ip()
{
  {
    init_simple_test("Sf_BFu16ll_Ip");
    static STRUCT_IF_C Sf_BFu16ll_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Sf_BFu16ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_Ip)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_Ip.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_Ip");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_Ip");
    check_field_offset(lv, v3, 2, "Sf_BFu16ll_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_Ip, Sf_BFu16ll_Ip)
//============================================================================



static void Test_Sf_BFu16ll_L()
{
  {
    init_simple_test("Sf_BFu16ll_L");
    static STRUCT_IF_C Sf_BFu16ll_L lv;
    check2(sizeof(lv), 10, "sizeof(Sf_BFu16ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_L)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_L.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_L");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_L");
    check_field_offset(lv, v3, 2, "Sf_BFu16ll_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_L, Sf_BFu16ll_L)
//============================================================================



static void Test_Sf_BFu16ll_S()
{
  {
    init_simple_test("Sf_BFu16ll_S");
    static STRUCT_IF_C Sf_BFu16ll_S lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_S)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_S.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_S");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_S");
    check_field_offset(lv, v3, 2, "Sf_BFu16ll_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_S, Sf_BFu16ll_S)
//============================================================================



static void Test_Sf_BFu16ll_Sf()
{
  {
    init_simple_test("Sf_BFu16ll_Sf");
    static STRUCT_IF_C Sf_BFu16ll_Sf lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu16ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_Sf)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_Sf.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_Sf");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_Sf");
    check_field_offset(lv, v3, 2, "Sf_BFu16ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_Sf, Sf_BFu16ll_Sf)
//============================================================================



static void Test_Sf_BFu16ll_Uc()
{
  {
    init_simple_test("Sf_BFu16ll_Uc");
    static STRUCT_IF_C Sf_BFu16ll_Uc lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_Uc)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_Uc.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_Uc");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_Uc");
    check_field_offset(lv, v3, 2, "Sf_BFu16ll_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_Uc, Sf_BFu16ll_Uc)
//============================================================================



static void Test_Sf_BFu16ll_Ui()
{
  {
    init_simple_test("Sf_BFu16ll_Ui");
    static STRUCT_IF_C Sf_BFu16ll_Ui lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu16ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_Ui)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_Ui.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_Ui");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_Ui");
    check_field_offset(lv, v3, 2, "Sf_BFu16ll_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_Ui, Sf_BFu16ll_Ui)
//============================================================================



static void Test_Sf_BFu16ll_Ul()
{
  {
    init_simple_test("Sf_BFu16ll_Ul");
    static STRUCT_IF_C Sf_BFu16ll_Ul lv;
    check2(sizeof(lv), 10, "sizeof(Sf_BFu16ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_Ul)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_Ul.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_Ul");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_Ul");
    check_field_offset(lv, v3, 2, "Sf_BFu16ll_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_Ul, Sf_BFu16ll_Ul)
//============================================================================



static void Test_Sf_BFu16ll_Us()
{
  {
    init_simple_test("Sf_BFu16ll_Us");
    static STRUCT_IF_C Sf_BFu16ll_Us lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_Us)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_Us.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_Us");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_Us");
    check_field_offset(lv, v3, 2, "Sf_BFu16ll_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_Us, Sf_BFu16ll_Us)
//============================================================================



static void Test_Sf_BFu16ll_Vp()
{
  {
    init_simple_test("Sf_BFu16ll_Vp");
    static STRUCT_IF_C Sf_BFu16ll_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Sf_BFu16ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16ll_Vp)");
    check_field_offset(lv, v1, 0, "Sf_BFu16ll_Vp.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16ll_Vp");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16ll_Vp");
    check_field_offset(lv, v3, 2, "Sf_BFu16ll_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16ll_Vp, Sf_BFu16ll_Vp)
//============================================================================



static void Test_Sf_BFu16s()
{
  {
    init_simple_test("Sf_BFu16s");
    static STRUCT_IF_C Sf_BFu16s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s, Sf_BFu16s)
//============================================================================



static void Test_Sf_BFu16s_BFu15i()
{
  {
    init_simple_test("Sf_BFu16s_BFu15i");
    static STRUCT_IF_C Sf_BFu16s_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_BFu15i)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_BFu15i.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_BFu15i");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "Sf_BFu16s_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "Sf_BFu16s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_BFu15i, Sf_BFu16s_BFu15i)
//============================================================================



static void Test_Sf_BFu16s_BFu15ll()
{
  {
    init_simple_test("Sf_BFu16s_BFu15ll");
    static STRUCT_IF_C Sf_BFu16s_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_BFu15ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_BFu15ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_BFu15ll");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "Sf_BFu16s_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "Sf_BFu16s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_BFu15ll, Sf_BFu16s_BFu15ll)
//============================================================================



static void Test_Sf_BFu16s_BFu15s()
{
  {
    init_simple_test("Sf_BFu16s_BFu15s");
    static STRUCT_IF_C Sf_BFu16s_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_BFu15s)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_BFu15s.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_BFu15s");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "Sf_BFu16s_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "Sf_BFu16s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_BFu15s, Sf_BFu16s_BFu15s)
//============================================================================



static void Test_Sf_BFu16s_BFu16i()
{
  {
    init_simple_test("Sf_BFu16s_BFu16i");
    static STRUCT_IF_C Sf_BFu16s_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_BFu16i)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_BFu16i.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "Sf_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_BFu16i, Sf_BFu16s_BFu16i)
//============================================================================



static void Test_Sf_BFu16s_BFu16ll()
{
  {
    init_simple_test("Sf_BFu16s_BFu16ll");
    static STRUCT_IF_C Sf_BFu16s_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_BFu16ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_BFu16ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "Sf_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_BFu16ll, Sf_BFu16s_BFu16ll)
//============================================================================



static void Test_Sf_BFu16s_BFu16s()
{
  {
    init_simple_test("Sf_BFu16s_BFu16s");
    static STRUCT_IF_C Sf_BFu16s_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_BFu16s)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_BFu16s.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "Sf_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_BFu16s, Sf_BFu16s_BFu16s)
//============================================================================



static void Test_Sf_BFu16s_BFu17i()
{
  {
    init_simple_test("Sf_BFu16s_BFu17i");
    static STRUCT_IF_C Sf_BFu16s_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu16s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_BFu17i)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_BFu17i.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_BFu17i");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "Sf_BFu16s_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "Sf_BFu16s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_BFu17i, Sf_BFu16s_BFu17i)
//============================================================================



static void Test_Sf_BFu16s_BFu17ll()
{
  {
    init_simple_test("Sf_BFu16s_BFu17ll");
    static STRUCT_IF_C Sf_BFu16s_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu16s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_BFu17ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_BFu17ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_BFu17ll");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "Sf_BFu16s_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "Sf_BFu16s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_BFu17ll, Sf_BFu16s_BFu17ll)
//============================================================================



static void Test_Sf_BFu16s_BFu1c()
{
  {
    init_simple_test("Sf_BFu16s_BFu1c");
    static STRUCT_IF_C Sf_BFu16s_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_BFu1c)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_BFu1c.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_BFu1c");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_BFu1c");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "Sf_BFu16s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_BFu1c, Sf_BFu16s_BFu1c)
//============================================================================



static void Test_Sf_BFu16s_BFu1i()
{
  {
    init_simple_test("Sf_BFu16s_BFu1i");
    static STRUCT_IF_C Sf_BFu16s_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_BFu1i)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_BFu1i.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_BFu1i");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_BFu1i");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "Sf_BFu16s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_BFu1i, Sf_BFu16s_BFu1i)
//============================================================================



static void Test_Sf_BFu16s_BFu1ll()
{
  {
    init_simple_test("Sf_BFu16s_BFu1ll");
    static STRUCT_IF_C Sf_BFu16s_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_BFu1ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_BFu1ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_BFu1ll");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "Sf_BFu16s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_BFu1ll, Sf_BFu16s_BFu1ll)
//============================================================================



static void Test_Sf_BFu16s_BFu1s()
{
  {
    init_simple_test("Sf_BFu16s_BFu1s");
    static STRUCT_IF_C Sf_BFu16s_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_BFu1s)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_BFu1s.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_BFu1s");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_BFu1s");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "Sf_BFu16s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_BFu1s, Sf_BFu16s_BFu1s)
//============================================================================



static void Test_Sf_BFu16s_BFu31i()
{
  {
    init_simple_test("Sf_BFu16s_BFu31i");
    static STRUCT_IF_C Sf_BFu16s_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu16s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_BFu31i)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_BFu31i.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_BFu31i");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "Sf_BFu16s_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "Sf_BFu16s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_BFu31i, Sf_BFu16s_BFu31i)
//============================================================================



static void Test_Sf_BFu16s_BFu31ll()
{
  {
    init_simple_test("Sf_BFu16s_BFu31ll");
    static STRUCT_IF_C Sf_BFu16s_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu16s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_BFu31ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_BFu31ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_BFu31ll");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "Sf_BFu16s_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "Sf_BFu16s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_BFu31ll, Sf_BFu16s_BFu31ll)
//============================================================================



static void Test_Sf_BFu16s_BFu32i()
{
  {
    init_simple_test("Sf_BFu16s_BFu32i");
    static STRUCT_IF_C Sf_BFu16s_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu16s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_BFu32i)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_BFu32i.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_BFu32i");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "Sf_BFu16s_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "Sf_BFu16s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_BFu32i, Sf_BFu16s_BFu32i)
//============================================================================



static void Test_Sf_BFu16s_BFu32ll()
{
  {
    init_simple_test("Sf_BFu16s_BFu32ll");
    static STRUCT_IF_C Sf_BFu16s_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu16s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_BFu32ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_BFu32ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_BFu32ll");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "Sf_BFu16s_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "Sf_BFu16s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_BFu32ll, Sf_BFu16s_BFu32ll)
//============================================================================



static void Test_Sf_BFu16s_BFu33()
{
  {
    init_simple_test("Sf_BFu16s_BFu33");
    static STRUCT_IF_C Sf_BFu16s_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(Sf_BFu16s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_BFu33)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_BFu33.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_BFu33");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "Sf_BFu16s_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "Sf_BFu16s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_BFu33, Sf_BFu16s_BFu33)
//============================================================================



static void Test_Sf_BFu16s_BFu7c()
{
  {
    init_simple_test("Sf_BFu16s_BFu7c");
    static STRUCT_IF_C Sf_BFu16s_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_BFu7c)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_BFu7c.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_BFu7c");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "Sf_BFu16s_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "Sf_BFu16s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_BFu7c, Sf_BFu16s_BFu7c)
//============================================================================



static void Test_Sf_BFu16s_BFu7i()
{
  {
    init_simple_test("Sf_BFu16s_BFu7i");
    static STRUCT_IF_C Sf_BFu16s_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_BFu7i)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_BFu7i.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_BFu7i");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "Sf_BFu16s_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "Sf_BFu16s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_BFu7i, Sf_BFu16s_BFu7i)
//============================================================================



static void Test_Sf_BFu16s_BFu7ll()
{
  {
    init_simple_test("Sf_BFu16s_BFu7ll");
    static STRUCT_IF_C Sf_BFu16s_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_BFu7ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_BFu7ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_BFu7ll");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "Sf_BFu16s_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "Sf_BFu16s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_BFu7ll, Sf_BFu16s_BFu7ll)
//============================================================================



static void Test_Sf_BFu16s_BFu7s()
{
  {
    init_simple_test("Sf_BFu16s_BFu7s");
    static STRUCT_IF_C Sf_BFu16s_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_BFu7s)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_BFu7s.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_BFu7s");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "Sf_BFu16s_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "Sf_BFu16s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_BFu7s, Sf_BFu16s_BFu7s)
//============================================================================



static void Test_Sf_BFu16s_BFu8c()
{
  {
    init_simple_test("Sf_BFu16s_BFu8c");
    static STRUCT_IF_C Sf_BFu16s_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_BFu8c)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_BFu8c.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_BFu8c");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "Sf_BFu16s_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "Sf_BFu16s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_BFu8c, Sf_BFu16s_BFu8c)
//============================================================================



static void Test_Sf_BFu16s_BFu8i()
{
  {
    init_simple_test("Sf_BFu16s_BFu8i");
    static STRUCT_IF_C Sf_BFu16s_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_BFu8i)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_BFu8i.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_BFu8i");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "Sf_BFu16s_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "Sf_BFu16s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_BFu8i, Sf_BFu16s_BFu8i)
//============================================================================



static void Test_Sf_BFu16s_BFu8ll()
{
  {
    init_simple_test("Sf_BFu16s_BFu8ll");
    static STRUCT_IF_C Sf_BFu16s_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_BFu8ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_BFu8ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_BFu8ll");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "Sf_BFu16s_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "Sf_BFu16s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_BFu8ll, Sf_BFu16s_BFu8ll)
//============================================================================



static void Test_Sf_BFu16s_BFu8s()
{
  {
    init_simple_test("Sf_BFu16s_BFu8s");
    static STRUCT_IF_C Sf_BFu16s_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_BFu8s)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_BFu8s.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_BFu8s");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "Sf_BFu16s_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "Sf_BFu16s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_BFu8s, Sf_BFu16s_BFu8s)
//============================================================================



static void Test_Sf_BFu16s_BFu9i()
{
  {
    init_simple_test("Sf_BFu16s_BFu9i");
    static STRUCT_IF_C Sf_BFu16s_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_BFu9i)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_BFu9i.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_BFu9i");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "Sf_BFu16s_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "Sf_BFu16s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_BFu9i, Sf_BFu16s_BFu9i)
//============================================================================



static void Test_Sf_BFu16s_BFu9ll()
{
  {
    init_simple_test("Sf_BFu16s_BFu9ll");
    static STRUCT_IF_C Sf_BFu16s_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_BFu9ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_BFu9ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_BFu9ll");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "Sf_BFu16s_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "Sf_BFu16s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_BFu9ll, Sf_BFu16s_BFu9ll)
//============================================================================



static void Test_Sf_BFu16s_BFu9s()
{
  {
    init_simple_test("Sf_BFu16s_BFu9s");
    static STRUCT_IF_C Sf_BFu16s_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_BFu9s)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_BFu9s.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_BFu9s");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "Sf_BFu16s_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "Sf_BFu16s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_BFu9s, Sf_BFu16s_BFu9s)
//============================================================================



static void Test_Sf_BFu16s_C()
{
  {
    init_simple_test("Sf_BFu16s_C");
    static STRUCT_IF_C Sf_BFu16s_C lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16s_C)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_C)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_C.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_C");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_C");
    check_field_offset(lv, v3, 2, "Sf_BFu16s_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_C, Sf_BFu16s_C)
//============================================================================



static void Test_Sf_BFu16s_D()
{
  {
    init_simple_test("Sf_BFu16s_D");
    static STRUCT_IF_C Sf_BFu16s_D lv;
    check2(sizeof(lv), 10, "sizeof(Sf_BFu16s_D)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_D)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_D.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_D");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_D");
    check_field_offset(lv, v3, 2, "Sf_BFu16s_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_D, Sf_BFu16s_D)
//============================================================================



static void Test_Sf_BFu16s_F()
{
  {
    init_simple_test("Sf_BFu16s_F");
    static STRUCT_IF_C Sf_BFu16s_F lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu16s_F)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_F)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_F.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_F");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_F");
    check_field_offset(lv, v3, 2, "Sf_BFu16s_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_F, Sf_BFu16s_F)
//============================================================================



static void Test_Sf_BFu16s_I()
{
  {
    init_simple_test("Sf_BFu16s_I");
    static STRUCT_IF_C Sf_BFu16s_I lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu16s_I)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_I)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_I.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_I");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_I");
    check_field_offset(lv, v3, 2, "Sf_BFu16s_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_I, Sf_BFu16s_I)
//============================================================================



static void Test_Sf_BFu16s_Ip()
{
  {
    init_simple_test("Sf_BFu16s_Ip");
    static STRUCT_IF_C Sf_BFu16s_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Sf_BFu16s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_Ip)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_Ip.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_Ip");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_Ip");
    check_field_offset(lv, v3, 2, "Sf_BFu16s_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_Ip, Sf_BFu16s_Ip)
//============================================================================



static void Test_Sf_BFu16s_L()
{
  {
    init_simple_test("Sf_BFu16s_L");
    static STRUCT_IF_C Sf_BFu16s_L lv;
    check2(sizeof(lv), 10, "sizeof(Sf_BFu16s_L)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_L)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_L.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_L");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_L");
    check_field_offset(lv, v3, 2, "Sf_BFu16s_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_L, Sf_BFu16s_L)
//============================================================================



static void Test_Sf_BFu16s_S()
{
  {
    init_simple_test("Sf_BFu16s_S");
    static STRUCT_IF_C Sf_BFu16s_S lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16s_S)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_S)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_S.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_S");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_S");
    check_field_offset(lv, v3, 2, "Sf_BFu16s_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_S, Sf_BFu16s_S)
//============================================================================



static void Test_Sf_BFu16s_Sf()
{
  {
    init_simple_test("Sf_BFu16s_Sf");
    static STRUCT_IF_C Sf_BFu16s_Sf lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu16s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_Sf)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_Sf.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_Sf");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_Sf");
    check_field_offset(lv, v3, 2, "Sf_BFu16s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_Sf, Sf_BFu16s_Sf)
//============================================================================



static void Test_Sf_BFu16s_Uc()
{
  {
    init_simple_test("Sf_BFu16s_Uc");
    static STRUCT_IF_C Sf_BFu16s_Uc lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu16s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_Uc)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_Uc.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_Uc");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_Uc");
    check_field_offset(lv, v3, 2, "Sf_BFu16s_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_Uc, Sf_BFu16s_Uc)
//============================================================================



static void Test_Sf_BFu16s_Ui()
{
  {
    init_simple_test("Sf_BFu16s_Ui");
    static STRUCT_IF_C Sf_BFu16s_Ui lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu16s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_Ui)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_Ui.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_Ui");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_Ui");
    check_field_offset(lv, v3, 2, "Sf_BFu16s_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_Ui, Sf_BFu16s_Ui)
//============================================================================



static void Test_Sf_BFu16s_Ul()
{
  {
    init_simple_test("Sf_BFu16s_Ul");
    static STRUCT_IF_C Sf_BFu16s_Ul lv;
    check2(sizeof(lv), 10, "sizeof(Sf_BFu16s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_Ul)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_Ul.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_Ul");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_Ul");
    check_field_offset(lv, v3, 2, "Sf_BFu16s_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_Ul, Sf_BFu16s_Ul)
//============================================================================



static void Test_Sf_BFu16s_Us()
{
  {
    init_simple_test("Sf_BFu16s_Us");
    static STRUCT_IF_C Sf_BFu16s_Us lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu16s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_Us)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_Us.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_Us");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_Us");
    check_field_offset(lv, v3, 2, "Sf_BFu16s_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_Us, Sf_BFu16s_Us)
//============================================================================



static void Test_Sf_BFu16s_Vp()
{
  {
    init_simple_test("Sf_BFu16s_Vp");
    static STRUCT_IF_C Sf_BFu16s_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Sf_BFu16s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu16s_Vp)");
    check_field_offset(lv, v1, 0, "Sf_BFu16s_Vp.v1");
    set_bf_and_test(lv, v2, 0, 0, 16, 1, "Sf_BFu16s_Vp");
    set_bf_and_test(lv, v2, 0, 0, 16, hide_ull(1LL<<15), "Sf_BFu16s_Vp");
    check_field_offset(lv, v3, 2, "Sf_BFu16s_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu16s_Vp, Sf_BFu16s_Vp)
//============================================================================



static void Test_Sf_BFu17i()
{
  {
    init_simple_test("Sf_BFu17i");
    static STRUCT_IF_C Sf_BFu17i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i, Sf_BFu17i)
//============================================================================



static void Test_Sf_BFu17i_BFu15i()
{
  {
    init_simple_test("Sf_BFu17i_BFu15i");
    static STRUCT_IF_C Sf_BFu17i_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu17i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_BFu15i)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_BFu15i.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_BFu15i");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_BFu15i");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "Sf_BFu17i_BFu15i");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "Sf_BFu17i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_BFu15i, Sf_BFu17i_BFu15i)
//============================================================================



static void Test_Sf_BFu17i_BFu15ll()
{
  {
    init_simple_test("Sf_BFu17i_BFu15ll");
    static STRUCT_IF_C Sf_BFu17i_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu17i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_BFu15ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_BFu15ll");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_BFu15ll");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "Sf_BFu17i_BFu15ll");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "Sf_BFu17i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_BFu15ll, Sf_BFu17i_BFu15ll)
//============================================================================



static void Test_Sf_BFu17i_BFu15s()
{
  {
    init_simple_test("Sf_BFu17i_BFu15s");
    static STRUCT_IF_C Sf_BFu17i_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu17i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_BFu15s)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_BFu15s.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_BFu15s");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_BFu15s");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "Sf_BFu17i_BFu15s");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "Sf_BFu17i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_BFu15s, Sf_BFu17i_BFu15s)
//============================================================================



static void Test_Sf_BFu17i_BFu16i()
{
  {
    init_simple_test("Sf_BFu17i_BFu16i");
    static STRUCT_IF_C Sf_BFu17i_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu17i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_BFu16i)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_BFu16i.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_BFu16i");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_BFu16i");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "Sf_BFu17i_BFu16i");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "Sf_BFu17i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_BFu16i, Sf_BFu17i_BFu16i)
//============================================================================



static void Test_Sf_BFu17i_BFu16ll()
{
  {
    init_simple_test("Sf_BFu17i_BFu16ll");
    static STRUCT_IF_C Sf_BFu17i_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu17i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_BFu16ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_BFu16ll");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_BFu16ll");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "Sf_BFu17i_BFu16ll");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "Sf_BFu17i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_BFu16ll, Sf_BFu17i_BFu16ll)
//============================================================================



static void Test_Sf_BFu17i_BFu16s()
{
  {
    init_simple_test("Sf_BFu17i_BFu16s");
    static STRUCT_IF_C Sf_BFu17i_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu17i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_BFu16s)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_BFu16s.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_BFu16s");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_BFu16s");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "Sf_BFu17i_BFu16s");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "Sf_BFu17i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_BFu16s, Sf_BFu17i_BFu16s)
//============================================================================



static void Test_Sf_BFu17i_BFu17i()
{
  {
    init_simple_test("Sf_BFu17i_BFu17i");
    static STRUCT_IF_C Sf_BFu17i_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu17i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_BFu17i)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_BFu17i.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_BFu17i");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_BFu17i");
    set_bf_and_test(lv, v3, 2, 1, 17, 1, "Sf_BFu17i_BFu17i");
    set_bf_and_test(lv, v3, 2, 1, 17, hide_ull(1LL<<16), "Sf_BFu17i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_BFu17i, Sf_BFu17i_BFu17i)
//============================================================================



static void Test_Sf_BFu17i_BFu17ll()
{
  {
    init_simple_test("Sf_BFu17i_BFu17ll");
    static STRUCT_IF_C Sf_BFu17i_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu17i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_BFu17ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_BFu17ll");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_BFu17ll");
    set_bf_and_test(lv, v3, 2, 1, 17, 1, "Sf_BFu17i_BFu17ll");
    set_bf_and_test(lv, v3, 2, 1, 17, hide_ull(1LL<<16), "Sf_BFu17i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_BFu17ll, Sf_BFu17i_BFu17ll)
//============================================================================



static void Test_Sf_BFu17i_BFu1c()
{
  {
    init_simple_test("Sf_BFu17i_BFu1c");
    static STRUCT_IF_C Sf_BFu17i_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu17i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_BFu1c)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_BFu1c.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_BFu1c");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_BFu1c");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "Sf_BFu17i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_BFu1c, Sf_BFu17i_BFu1c)
//============================================================================



static void Test_Sf_BFu17i_BFu1i()
{
  {
    init_simple_test("Sf_BFu17i_BFu1i");
    static STRUCT_IF_C Sf_BFu17i_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu17i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_BFu1i)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_BFu1i.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_BFu1i");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_BFu1i");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "Sf_BFu17i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_BFu1i, Sf_BFu17i_BFu1i)
//============================================================================



static void Test_Sf_BFu17i_BFu1ll()
{
  {
    init_simple_test("Sf_BFu17i_BFu1ll");
    static STRUCT_IF_C Sf_BFu17i_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu17i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_BFu1ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_BFu1ll");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "Sf_BFu17i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_BFu1ll, Sf_BFu17i_BFu1ll)
//============================================================================



static void Test_Sf_BFu17i_BFu1s()
{
  {
    init_simple_test("Sf_BFu17i_BFu1s");
    static STRUCT_IF_C Sf_BFu17i_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu17i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_BFu1s)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_BFu1s.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_BFu1s");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_BFu1s");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "Sf_BFu17i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_BFu1s, Sf_BFu17i_BFu1s)
//============================================================================



static void Test_Sf_BFu17i_BFu31i()
{
  {
    init_simple_test("Sf_BFu17i_BFu31i");
    static STRUCT_IF_C Sf_BFu17i_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu17i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_BFu31i)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_BFu31i.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_BFu31i");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_BFu31i");
    set_bf_and_test(lv, v3, 2, 1, 31, 1, "Sf_BFu17i_BFu31i");
    set_bf_and_test(lv, v3, 2, 1, 31, hide_ull(1LL<<30), "Sf_BFu17i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_BFu31i, Sf_BFu17i_BFu31i)
//============================================================================



static void Test_Sf_BFu17i_BFu31ll()
{
  {
    init_simple_test("Sf_BFu17i_BFu31ll");
    static STRUCT_IF_C Sf_BFu17i_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu17i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_BFu31ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_BFu31ll");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_BFu31ll");
    set_bf_and_test(lv, v3, 2, 1, 31, 1, "Sf_BFu17i_BFu31ll");
    set_bf_and_test(lv, v3, 2, 1, 31, hide_ull(1LL<<30), "Sf_BFu17i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_BFu31ll, Sf_BFu17i_BFu31ll)
//============================================================================



static void Test_Sf_BFu17i_BFu32i()
{
  {
    init_simple_test("Sf_BFu17i_BFu32i");
    static STRUCT_IF_C Sf_BFu17i_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(Sf_BFu17i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_BFu32i)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_BFu32i.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_BFu32i");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_BFu32i");
    set_bf_and_test(lv, v3, 2, 1, 32, 1, "Sf_BFu17i_BFu32i");
    set_bf_and_test(lv, v3, 2, 1, 32, hide_ull(1LL<<31), "Sf_BFu17i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_BFu32i, Sf_BFu17i_BFu32i)
//============================================================================



static void Test_Sf_BFu17i_BFu32ll()
{
  {
    init_simple_test("Sf_BFu17i_BFu32ll");
    static STRUCT_IF_C Sf_BFu17i_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(Sf_BFu17i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_BFu32ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_BFu32ll");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_BFu32ll");
    set_bf_and_test(lv, v3, 2, 1, 32, 1, "Sf_BFu17i_BFu32ll");
    set_bf_and_test(lv, v3, 2, 1, 32, hide_ull(1LL<<31), "Sf_BFu17i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_BFu32ll, Sf_BFu17i_BFu32ll)
//============================================================================



static void Test_Sf_BFu17i_BFu33()
{
  {
    init_simple_test("Sf_BFu17i_BFu33");
    static STRUCT_IF_C Sf_BFu17i_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(Sf_BFu17i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_BFu33)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_BFu33.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_BFu33");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_BFu33");
    set_bf_and_test(lv, v3, 2, 1, 33, 1, "Sf_BFu17i_BFu33");
    set_bf_and_test(lv, v3, 2, 1, 33, hide_ull(1LL<<32), "Sf_BFu17i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_BFu33, Sf_BFu17i_BFu33)
//============================================================================



static void Test_Sf_BFu17i_BFu7c()
{
  {
    init_simple_test("Sf_BFu17i_BFu7c");
    static STRUCT_IF_C Sf_BFu17i_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu17i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_BFu7c)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_BFu7c.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_BFu7c");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_BFu7c");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "Sf_BFu17i_BFu7c");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "Sf_BFu17i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_BFu7c, Sf_BFu17i_BFu7c)
//============================================================================



static void Test_Sf_BFu17i_BFu7i()
{
  {
    init_simple_test("Sf_BFu17i_BFu7i");
    static STRUCT_IF_C Sf_BFu17i_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu17i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_BFu7i)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_BFu7i.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_BFu7i");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_BFu7i");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "Sf_BFu17i_BFu7i");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "Sf_BFu17i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_BFu7i, Sf_BFu17i_BFu7i)
//============================================================================



static void Test_Sf_BFu17i_BFu7ll()
{
  {
    init_simple_test("Sf_BFu17i_BFu7ll");
    static STRUCT_IF_C Sf_BFu17i_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu17i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_BFu7ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_BFu7ll");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_BFu7ll");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "Sf_BFu17i_BFu7ll");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "Sf_BFu17i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_BFu7ll, Sf_BFu17i_BFu7ll)
//============================================================================



static void Test_Sf_BFu17i_BFu7s()
{
  {
    init_simple_test("Sf_BFu17i_BFu7s");
    static STRUCT_IF_C Sf_BFu17i_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu17i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_BFu7s)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_BFu7s.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_BFu7s");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_BFu7s");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "Sf_BFu17i_BFu7s");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "Sf_BFu17i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_BFu7s, Sf_BFu17i_BFu7s)
//============================================================================



static void Test_Sf_BFu17i_BFu8c()
{
  {
    init_simple_test("Sf_BFu17i_BFu8c");
    static STRUCT_IF_C Sf_BFu17i_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu17i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_BFu8c)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_BFu8c.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_BFu8c");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_BFu8c");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "Sf_BFu17i_BFu8c");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "Sf_BFu17i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_BFu8c, Sf_BFu17i_BFu8c)
//============================================================================



static void Test_Sf_BFu17i_BFu8i()
{
  {
    init_simple_test("Sf_BFu17i_BFu8i");
    static STRUCT_IF_C Sf_BFu17i_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu17i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_BFu8i)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_BFu8i.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_BFu8i");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_BFu8i");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "Sf_BFu17i_BFu8i");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "Sf_BFu17i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_BFu8i, Sf_BFu17i_BFu8i)
//============================================================================



static void Test_Sf_BFu17i_BFu8ll()
{
  {
    init_simple_test("Sf_BFu17i_BFu8ll");
    static STRUCT_IF_C Sf_BFu17i_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu17i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_BFu8ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_BFu8ll");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_BFu8ll");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "Sf_BFu17i_BFu8ll");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "Sf_BFu17i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_BFu8ll, Sf_BFu17i_BFu8ll)
//============================================================================



static void Test_Sf_BFu17i_BFu8s()
{
  {
    init_simple_test("Sf_BFu17i_BFu8s");
    static STRUCT_IF_C Sf_BFu17i_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu17i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_BFu8s)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_BFu8s.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_BFu8s");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_BFu8s");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "Sf_BFu17i_BFu8s");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "Sf_BFu17i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_BFu8s, Sf_BFu17i_BFu8s)
//============================================================================



static void Test_Sf_BFu17i_BFu9i()
{
  {
    init_simple_test("Sf_BFu17i_BFu9i");
    static STRUCT_IF_C Sf_BFu17i_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu17i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_BFu9i)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_BFu9i.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_BFu9i");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_BFu9i");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "Sf_BFu17i_BFu9i");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "Sf_BFu17i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_BFu9i, Sf_BFu17i_BFu9i)
//============================================================================



static void Test_Sf_BFu17i_BFu9ll()
{
  {
    init_simple_test("Sf_BFu17i_BFu9ll");
    static STRUCT_IF_C Sf_BFu17i_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu17i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_BFu9ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_BFu9ll");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_BFu9ll");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "Sf_BFu17i_BFu9ll");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "Sf_BFu17i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_BFu9ll, Sf_BFu17i_BFu9ll)
//============================================================================



static void Test_Sf_BFu17i_BFu9s()
{
  {
    init_simple_test("Sf_BFu17i_BFu9s");
    static STRUCT_IF_C Sf_BFu17i_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu17i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_BFu9s)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_BFu9s.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_BFu9s");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_BFu9s");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "Sf_BFu17i_BFu9s");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "Sf_BFu17i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_BFu9s, Sf_BFu17i_BFu9s)
//============================================================================



static void Test_Sf_BFu17i_C()
{
  {
    init_simple_test("Sf_BFu17i_C");
    static STRUCT_IF_C Sf_BFu17i_C lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu17i_C)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_C)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_C.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_C");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_C");
    check_field_offset(lv, v3, 3, "Sf_BFu17i_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_C, Sf_BFu17i_C)
//============================================================================



static void Test_Sf_BFu17i_D()
{
  {
    init_simple_test("Sf_BFu17i_D");
    static STRUCT_IF_C Sf_BFu17i_D lv;
    check2(sizeof(lv), 11, "sizeof(Sf_BFu17i_D)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_D)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_D.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_D");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_D");
    check_field_offset(lv, v3, 3, "Sf_BFu17i_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_D, Sf_BFu17i_D)
//============================================================================



static void Test_Sf_BFu17i_F()
{
  {
    init_simple_test("Sf_BFu17i_F");
    static STRUCT_IF_C Sf_BFu17i_F lv;
    check2(sizeof(lv), 7, "sizeof(Sf_BFu17i_F)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_F)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_F.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_F");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_F");
    check_field_offset(lv, v3, 3, "Sf_BFu17i_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_F, Sf_BFu17i_F)
//============================================================================



static void Test_Sf_BFu17i_I()
{
  {
    init_simple_test("Sf_BFu17i_I");
    static STRUCT_IF_C Sf_BFu17i_I lv;
    check2(sizeof(lv), 7, "sizeof(Sf_BFu17i_I)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_I)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_I.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_I");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_I");
    check_field_offset(lv, v3, 3, "Sf_BFu17i_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_I, Sf_BFu17i_I)
//============================================================================



static void Test_Sf_BFu17i_Ip()
{
  {
    init_simple_test("Sf_BFu17i_Ip");
    static STRUCT_IF_C Sf_BFu17i_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(Sf_BFu17i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_Ip)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_Ip.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_Ip");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_Ip");
    check_field_offset(lv, v3, 3, "Sf_BFu17i_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_Ip, Sf_BFu17i_Ip)
//============================================================================



static void Test_Sf_BFu17i_L()
{
  {
    init_simple_test("Sf_BFu17i_L");
    static STRUCT_IF_C Sf_BFu17i_L lv;
    check2(sizeof(lv), 11, "sizeof(Sf_BFu17i_L)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_L)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_L.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_L");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_L");
    check_field_offset(lv, v3, 3, "Sf_BFu17i_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_L, Sf_BFu17i_L)
//============================================================================



static void Test_Sf_BFu17i_S()
{
  {
    init_simple_test("Sf_BFu17i_S");
    static STRUCT_IF_C Sf_BFu17i_S lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu17i_S)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_S)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_S.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_S");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_S");
    check_field_offset(lv, v3, 3, "Sf_BFu17i_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_S, Sf_BFu17i_S)
//============================================================================



static void Test_Sf_BFu17i_Sf()
{
  {
    init_simple_test("Sf_BFu17i_Sf");
    static STRUCT_IF_C Sf_BFu17i_Sf lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu17i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_Sf)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_Sf.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_Sf");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_Sf");
    check_field_offset(lv, v3, 3, "Sf_BFu17i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_Sf, Sf_BFu17i_Sf)
//============================================================================



static void Test_Sf_BFu17i_Uc()
{
  {
    init_simple_test("Sf_BFu17i_Uc");
    static STRUCT_IF_C Sf_BFu17i_Uc lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu17i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_Uc)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_Uc.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_Uc");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_Uc");
    check_field_offset(lv, v3, 3, "Sf_BFu17i_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_Uc, Sf_BFu17i_Uc)
//============================================================================



static void Test_Sf_BFu17i_Ui()
{
  {
    init_simple_test("Sf_BFu17i_Ui");
    static STRUCT_IF_C Sf_BFu17i_Ui lv;
    check2(sizeof(lv), 7, "sizeof(Sf_BFu17i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_Ui)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_Ui.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_Ui");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_Ui");
    check_field_offset(lv, v3, 3, "Sf_BFu17i_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_Ui, Sf_BFu17i_Ui)
//============================================================================



static void Test_Sf_BFu17i_Ul()
{
  {
    init_simple_test("Sf_BFu17i_Ul");
    static STRUCT_IF_C Sf_BFu17i_Ul lv;
    check2(sizeof(lv), 11, "sizeof(Sf_BFu17i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_Ul)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_Ul.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_Ul");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_Ul");
    check_field_offset(lv, v3, 3, "Sf_BFu17i_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_Ul, Sf_BFu17i_Ul)
//============================================================================



static void Test_Sf_BFu17i_Us()
{
  {
    init_simple_test("Sf_BFu17i_Us");
    static STRUCT_IF_C Sf_BFu17i_Us lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu17i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_Us)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_Us.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_Us");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_Us");
    check_field_offset(lv, v3, 3, "Sf_BFu17i_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_Us, Sf_BFu17i_Us)
//============================================================================



static void Test_Sf_BFu17i_Vp()
{
  {
    init_simple_test("Sf_BFu17i_Vp");
    static STRUCT_IF_C Sf_BFu17i_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(Sf_BFu17i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17i_Vp)");
    check_field_offset(lv, v1, 0, "Sf_BFu17i_Vp.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17i_Vp");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17i_Vp");
    check_field_offset(lv, v3, 3, "Sf_BFu17i_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17i_Vp, Sf_BFu17i_Vp)
//============================================================================



static void Test_Sf_BFu17ll()
{
  {
    init_simple_test("Sf_BFu17ll");
    static STRUCT_IF_C Sf_BFu17ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll, Sf_BFu17ll)
//============================================================================



static void Test_Sf_BFu17ll_BFu15i()
{
  {
    init_simple_test("Sf_BFu17ll_BFu15i");
    static STRUCT_IF_C Sf_BFu17ll_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu17ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_BFu15i)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_BFu15i");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_BFu15i");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "Sf_BFu17ll_BFu15i");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "Sf_BFu17ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_BFu15i, Sf_BFu17ll_BFu15i)
//============================================================================



static void Test_Sf_BFu17ll_BFu15ll()
{
  {
    init_simple_test("Sf_BFu17ll_BFu15ll");
    static STRUCT_IF_C Sf_BFu17ll_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu17ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_BFu15ll");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_BFu15ll");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "Sf_BFu17ll_BFu15ll");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "Sf_BFu17ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_BFu15ll, Sf_BFu17ll_BFu15ll)
//============================================================================



static void Test_Sf_BFu17ll_BFu15s()
{
  {
    init_simple_test("Sf_BFu17ll_BFu15s");
    static STRUCT_IF_C Sf_BFu17ll_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu17ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_BFu15s)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_BFu15s");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_BFu15s");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "Sf_BFu17ll_BFu15s");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "Sf_BFu17ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_BFu15s, Sf_BFu17ll_BFu15s)
//============================================================================



static void Test_Sf_BFu17ll_BFu16i()
{
  {
    init_simple_test("Sf_BFu17ll_BFu16i");
    static STRUCT_IF_C Sf_BFu17ll_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu17ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_BFu16i)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_BFu16i");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_BFu16i");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "Sf_BFu17ll_BFu16i");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "Sf_BFu17ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_BFu16i, Sf_BFu17ll_BFu16i)
//============================================================================



static void Test_Sf_BFu17ll_BFu16ll()
{
  {
    init_simple_test("Sf_BFu17ll_BFu16ll");
    static STRUCT_IF_C Sf_BFu17ll_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu17ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_BFu16ll");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_BFu16ll");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "Sf_BFu17ll_BFu16ll");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "Sf_BFu17ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_BFu16ll, Sf_BFu17ll_BFu16ll)
//============================================================================



static void Test_Sf_BFu17ll_BFu16s()
{
  {
    init_simple_test("Sf_BFu17ll_BFu16s");
    static STRUCT_IF_C Sf_BFu17ll_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu17ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_BFu16s)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_BFu16s");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_BFu16s");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "Sf_BFu17ll_BFu16s");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "Sf_BFu17ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_BFu16s, Sf_BFu17ll_BFu16s)
//============================================================================



static void Test_Sf_BFu17ll_BFu17i()
{
  {
    init_simple_test("Sf_BFu17ll_BFu17i");
    static STRUCT_IF_C Sf_BFu17ll_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu17ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_BFu17i)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_BFu17i");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_BFu17i");
    set_bf_and_test(lv, v3, 2, 1, 17, 1, "Sf_BFu17ll_BFu17i");
    set_bf_and_test(lv, v3, 2, 1, 17, hide_ull(1LL<<16), "Sf_BFu17ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_BFu17i, Sf_BFu17ll_BFu17i)
//============================================================================



static void Test_Sf_BFu17ll_BFu17ll()
{
  {
    init_simple_test("Sf_BFu17ll_BFu17ll");
    static STRUCT_IF_C Sf_BFu17ll_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu17ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v3, 2, 1, 17, 1, "Sf_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v3, 2, 1, 17, hide_ull(1LL<<16), "Sf_BFu17ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_BFu17ll, Sf_BFu17ll_BFu17ll)
//============================================================================



static void Test_Sf_BFu17ll_BFu1c()
{
  {
    init_simple_test("Sf_BFu17ll_BFu1c");
    static STRUCT_IF_C Sf_BFu17ll_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu17ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_BFu1c)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_BFu1c");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "Sf_BFu17ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_BFu1c, Sf_BFu17ll_BFu1c)
//============================================================================



static void Test_Sf_BFu17ll_BFu1i()
{
  {
    init_simple_test("Sf_BFu17ll_BFu1i");
    static STRUCT_IF_C Sf_BFu17ll_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu17ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_BFu1i)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_BFu1i");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "Sf_BFu17ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_BFu1i, Sf_BFu17ll_BFu1i)
//============================================================================



static void Test_Sf_BFu17ll_BFu1ll()
{
  {
    init_simple_test("Sf_BFu17ll_BFu1ll");
    static STRUCT_IF_C Sf_BFu17ll_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu17ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_BFu1ll");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "Sf_BFu17ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_BFu1ll, Sf_BFu17ll_BFu1ll)
//============================================================================



static void Test_Sf_BFu17ll_BFu1s()
{
  {
    init_simple_test("Sf_BFu17ll_BFu1s");
    static STRUCT_IF_C Sf_BFu17ll_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu17ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_BFu1s)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_BFu1s");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "Sf_BFu17ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_BFu1s, Sf_BFu17ll_BFu1s)
//============================================================================



static void Test_Sf_BFu17ll_BFu31i()
{
  {
    init_simple_test("Sf_BFu17ll_BFu31i");
    static STRUCT_IF_C Sf_BFu17ll_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu17ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_BFu31i)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_BFu31i");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_BFu31i");
    set_bf_and_test(lv, v3, 2, 1, 31, 1, "Sf_BFu17ll_BFu31i");
    set_bf_and_test(lv, v3, 2, 1, 31, hide_ull(1LL<<30), "Sf_BFu17ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_BFu31i, Sf_BFu17ll_BFu31i)
//============================================================================



static void Test_Sf_BFu17ll_BFu31ll()
{
  {
    init_simple_test("Sf_BFu17ll_BFu31ll");
    static STRUCT_IF_C Sf_BFu17ll_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu17ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_BFu31ll");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_BFu31ll");
    set_bf_and_test(lv, v3, 2, 1, 31, 1, "Sf_BFu17ll_BFu31ll");
    set_bf_and_test(lv, v3, 2, 1, 31, hide_ull(1LL<<30), "Sf_BFu17ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_BFu31ll, Sf_BFu17ll_BFu31ll)
//============================================================================



static void Test_Sf_BFu17ll_BFu32i()
{
  {
    init_simple_test("Sf_BFu17ll_BFu32i");
    static STRUCT_IF_C Sf_BFu17ll_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(Sf_BFu17ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_BFu32i)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_BFu32i");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_BFu32i");
    set_bf_and_test(lv, v3, 2, 1, 32, 1, "Sf_BFu17ll_BFu32i");
    set_bf_and_test(lv, v3, 2, 1, 32, hide_ull(1LL<<31), "Sf_BFu17ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_BFu32i, Sf_BFu17ll_BFu32i)
//============================================================================



static void Test_Sf_BFu17ll_BFu32ll()
{
  {
    init_simple_test("Sf_BFu17ll_BFu32ll");
    static STRUCT_IF_C Sf_BFu17ll_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(Sf_BFu17ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_BFu32ll");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_BFu32ll");
    set_bf_and_test(lv, v3, 2, 1, 32, 1, "Sf_BFu17ll_BFu32ll");
    set_bf_and_test(lv, v3, 2, 1, 32, hide_ull(1LL<<31), "Sf_BFu17ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_BFu32ll, Sf_BFu17ll_BFu32ll)
//============================================================================



static void Test_Sf_BFu17ll_BFu33()
{
  {
    init_simple_test("Sf_BFu17ll_BFu33");
    static STRUCT_IF_C Sf_BFu17ll_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(Sf_BFu17ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_BFu33)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_BFu33.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_BFu33");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_BFu33");
    set_bf_and_test(lv, v3, 2, 1, 33, 1, "Sf_BFu17ll_BFu33");
    set_bf_and_test(lv, v3, 2, 1, 33, hide_ull(1LL<<32), "Sf_BFu17ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_BFu33, Sf_BFu17ll_BFu33)
//============================================================================



static void Test_Sf_BFu17ll_BFu7c()
{
  {
    init_simple_test("Sf_BFu17ll_BFu7c");
    static STRUCT_IF_C Sf_BFu17ll_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu17ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_BFu7c)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_BFu7c");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_BFu7c");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "Sf_BFu17ll_BFu7c");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "Sf_BFu17ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_BFu7c, Sf_BFu17ll_BFu7c)
//============================================================================



static void Test_Sf_BFu17ll_BFu7i()
{
  {
    init_simple_test("Sf_BFu17ll_BFu7i");
    static STRUCT_IF_C Sf_BFu17ll_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu17ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_BFu7i)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_BFu7i");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_BFu7i");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "Sf_BFu17ll_BFu7i");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "Sf_BFu17ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_BFu7i, Sf_BFu17ll_BFu7i)
//============================================================================



static void Test_Sf_BFu17ll_BFu7ll()
{
  {
    init_simple_test("Sf_BFu17ll_BFu7ll");
    static STRUCT_IF_C Sf_BFu17ll_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu17ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_BFu7ll");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_BFu7ll");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "Sf_BFu17ll_BFu7ll");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "Sf_BFu17ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_BFu7ll, Sf_BFu17ll_BFu7ll)
//============================================================================



static void Test_Sf_BFu17ll_BFu7s()
{
  {
    init_simple_test("Sf_BFu17ll_BFu7s");
    static STRUCT_IF_C Sf_BFu17ll_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu17ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_BFu7s)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_BFu7s");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_BFu7s");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "Sf_BFu17ll_BFu7s");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "Sf_BFu17ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_BFu7s, Sf_BFu17ll_BFu7s)
//============================================================================



static void Test_Sf_BFu17ll_BFu8c()
{
  {
    init_simple_test("Sf_BFu17ll_BFu8c");
    static STRUCT_IF_C Sf_BFu17ll_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu17ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_BFu8c)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_BFu8c");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_BFu8c");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "Sf_BFu17ll_BFu8c");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "Sf_BFu17ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_BFu8c, Sf_BFu17ll_BFu8c)
//============================================================================



static void Test_Sf_BFu17ll_BFu8i()
{
  {
    init_simple_test("Sf_BFu17ll_BFu8i");
    static STRUCT_IF_C Sf_BFu17ll_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu17ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_BFu8i)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_BFu8i");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_BFu8i");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "Sf_BFu17ll_BFu8i");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "Sf_BFu17ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_BFu8i, Sf_BFu17ll_BFu8i)
//============================================================================



static void Test_Sf_BFu17ll_BFu8ll()
{
  {
    init_simple_test("Sf_BFu17ll_BFu8ll");
    static STRUCT_IF_C Sf_BFu17ll_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu17ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_BFu8ll");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_BFu8ll");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "Sf_BFu17ll_BFu8ll");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "Sf_BFu17ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_BFu8ll, Sf_BFu17ll_BFu8ll)
//============================================================================



static void Test_Sf_BFu17ll_BFu8s()
{
  {
    init_simple_test("Sf_BFu17ll_BFu8s");
    static STRUCT_IF_C Sf_BFu17ll_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu17ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_BFu8s)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_BFu8s");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_BFu8s");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "Sf_BFu17ll_BFu8s");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "Sf_BFu17ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_BFu8s, Sf_BFu17ll_BFu8s)
//============================================================================



static void Test_Sf_BFu17ll_BFu9i()
{
  {
    init_simple_test("Sf_BFu17ll_BFu9i");
    static STRUCT_IF_C Sf_BFu17ll_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu17ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_BFu9i)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_BFu9i");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_BFu9i");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "Sf_BFu17ll_BFu9i");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "Sf_BFu17ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_BFu9i, Sf_BFu17ll_BFu9i)
//============================================================================



static void Test_Sf_BFu17ll_BFu9ll()
{
  {
    init_simple_test("Sf_BFu17ll_BFu9ll");
    static STRUCT_IF_C Sf_BFu17ll_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu17ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_BFu9ll");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_BFu9ll");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "Sf_BFu17ll_BFu9ll");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "Sf_BFu17ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_BFu9ll, Sf_BFu17ll_BFu9ll)
//============================================================================



static void Test_Sf_BFu17ll_BFu9s()
{
  {
    init_simple_test("Sf_BFu17ll_BFu9s");
    static STRUCT_IF_C Sf_BFu17ll_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu17ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_BFu9s)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_BFu9s");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_BFu9s");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "Sf_BFu17ll_BFu9s");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "Sf_BFu17ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_BFu9s, Sf_BFu17ll_BFu9s)
//============================================================================



static void Test_Sf_BFu17ll_C()
{
  {
    init_simple_test("Sf_BFu17ll_C");
    static STRUCT_IF_C Sf_BFu17ll_C lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu17ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_C)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_C.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_C");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_C");
    check_field_offset(lv, v3, 3, "Sf_BFu17ll_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_C, Sf_BFu17ll_C)
//============================================================================



static void Test_Sf_BFu17ll_D()
{
  {
    init_simple_test("Sf_BFu17ll_D");
    static STRUCT_IF_C Sf_BFu17ll_D lv;
    check2(sizeof(lv), 11, "sizeof(Sf_BFu17ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_D)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_D.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_D");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_D");
    check_field_offset(lv, v3, 3, "Sf_BFu17ll_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_D, Sf_BFu17ll_D)
//============================================================================



static void Test_Sf_BFu17ll_F()
{
  {
    init_simple_test("Sf_BFu17ll_F");
    static STRUCT_IF_C Sf_BFu17ll_F lv;
    check2(sizeof(lv), 7, "sizeof(Sf_BFu17ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_F)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_F.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_F");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_F");
    check_field_offset(lv, v3, 3, "Sf_BFu17ll_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_F, Sf_BFu17ll_F)
//============================================================================



static void Test_Sf_BFu17ll_I()
{
  {
    init_simple_test("Sf_BFu17ll_I");
    static STRUCT_IF_C Sf_BFu17ll_I lv;
    check2(sizeof(lv), 7, "sizeof(Sf_BFu17ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_I)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_I.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_I");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_I");
    check_field_offset(lv, v3, 3, "Sf_BFu17ll_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_I, Sf_BFu17ll_I)
//============================================================================



static void Test_Sf_BFu17ll_Ip()
{
  {
    init_simple_test("Sf_BFu17ll_Ip");
    static STRUCT_IF_C Sf_BFu17ll_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(Sf_BFu17ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_Ip)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_Ip.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_Ip");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_Ip");
    check_field_offset(lv, v3, 3, "Sf_BFu17ll_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_Ip, Sf_BFu17ll_Ip)
//============================================================================



static void Test_Sf_BFu17ll_L()
{
  {
    init_simple_test("Sf_BFu17ll_L");
    static STRUCT_IF_C Sf_BFu17ll_L lv;
    check2(sizeof(lv), 11, "sizeof(Sf_BFu17ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_L)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_L.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_L");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_L");
    check_field_offset(lv, v3, 3, "Sf_BFu17ll_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_L, Sf_BFu17ll_L)
//============================================================================



static void Test_Sf_BFu17ll_S()
{
  {
    init_simple_test("Sf_BFu17ll_S");
    static STRUCT_IF_C Sf_BFu17ll_S lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu17ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_S)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_S.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_S");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_S");
    check_field_offset(lv, v3, 3, "Sf_BFu17ll_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_S, Sf_BFu17ll_S)
//============================================================================



static void Test_Sf_BFu17ll_Sf()
{
  {
    init_simple_test("Sf_BFu17ll_Sf");
    static STRUCT_IF_C Sf_BFu17ll_Sf lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu17ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_Sf)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_Sf.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_Sf");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_Sf");
    check_field_offset(lv, v3, 3, "Sf_BFu17ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_Sf, Sf_BFu17ll_Sf)
//============================================================================



static void Test_Sf_BFu17ll_Uc()
{
  {
    init_simple_test("Sf_BFu17ll_Uc");
    static STRUCT_IF_C Sf_BFu17ll_Uc lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu17ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_Uc)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_Uc.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_Uc");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_Uc");
    check_field_offset(lv, v3, 3, "Sf_BFu17ll_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_Uc, Sf_BFu17ll_Uc)
//============================================================================



static void Test_Sf_BFu17ll_Ui()
{
  {
    init_simple_test("Sf_BFu17ll_Ui");
    static STRUCT_IF_C Sf_BFu17ll_Ui lv;
    check2(sizeof(lv), 7, "sizeof(Sf_BFu17ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_Ui)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_Ui.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_Ui");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_Ui");
    check_field_offset(lv, v3, 3, "Sf_BFu17ll_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_Ui, Sf_BFu17ll_Ui)
//============================================================================



static void Test_Sf_BFu17ll_Ul()
{
  {
    init_simple_test("Sf_BFu17ll_Ul");
    static STRUCT_IF_C Sf_BFu17ll_Ul lv;
    check2(sizeof(lv), 11, "sizeof(Sf_BFu17ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_Ul)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_Ul.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_Ul");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_Ul");
    check_field_offset(lv, v3, 3, "Sf_BFu17ll_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_Ul, Sf_BFu17ll_Ul)
//============================================================================



static void Test_Sf_BFu17ll_Us()
{
  {
    init_simple_test("Sf_BFu17ll_Us");
    static STRUCT_IF_C Sf_BFu17ll_Us lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu17ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_Us)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_Us.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_Us");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_Us");
    check_field_offset(lv, v3, 3, "Sf_BFu17ll_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_Us, Sf_BFu17ll_Us)
//============================================================================



static void Test_Sf_BFu17ll_Vp()
{
  {
    init_simple_test("Sf_BFu17ll_Vp");
    static STRUCT_IF_C Sf_BFu17ll_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(Sf_BFu17ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu17ll_Vp)");
    check_field_offset(lv, v1, 0, "Sf_BFu17ll_Vp.v1");
    set_bf_and_test(lv, v2, 0, 0, 17, 1, "Sf_BFu17ll_Vp");
    set_bf_and_test(lv, v2, 0, 0, 17, hide_ull(1LL<<16), "Sf_BFu17ll_Vp");
    check_field_offset(lv, v3, 3, "Sf_BFu17ll_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu17ll_Vp, Sf_BFu17ll_Vp)
//============================================================================



static void Test_Sf_BFu1c()
{
  {
    init_simple_test("Sf_BFu1c");
    static STRUCT_IF_C Sf_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c, Sf_BFu1c)
//============================================================================



static void Test_Sf_BFu1c_BFu15i()
{
  {
    init_simple_test("Sf_BFu1c_BFu15i");
    static STRUCT_IF_C Sf_BFu1c_BFu15i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_BFu15i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_BFu15i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_BFu15i");
    set_bf_and_test(lv, v3, 0, 1, 15, 1, "Sf_BFu1c_BFu15i");
    set_bf_and_test(lv, v3, 0, 1, 15, hide_ull(1LL<<14), "Sf_BFu1c_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_BFu15i, Sf_BFu1c_BFu15i)
//============================================================================



static void Test_Sf_BFu1c_BFu15ll()
{
  {
    init_simple_test("Sf_BFu1c_BFu15ll");
    static STRUCT_IF_C Sf_BFu1c_BFu15ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_BFu15ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_BFu15ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_BFu15ll");
    set_bf_and_test(lv, v3, 0, 1, 15, 1, "Sf_BFu1c_BFu15ll");
    set_bf_and_test(lv, v3, 0, 1, 15, hide_ull(1LL<<14), "Sf_BFu1c_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_BFu15ll, Sf_BFu1c_BFu15ll)
//============================================================================



static void Test_Sf_BFu1c_BFu15s()
{
  {
    init_simple_test("Sf_BFu1c_BFu15s");
    static STRUCT_IF_C Sf_BFu1c_BFu15s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_BFu15s)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_BFu15s.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_BFu15s");
    set_bf_and_test(lv, v3, 0, 1, 15, 1, "Sf_BFu1c_BFu15s");
    set_bf_and_test(lv, v3, 0, 1, 15, hide_ull(1LL<<14), "Sf_BFu1c_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_BFu15s, Sf_BFu1c_BFu15s)
//============================================================================



static void Test_Sf_BFu1c_BFu16i()
{
  {
    init_simple_test("Sf_BFu1c_BFu16i");
    static STRUCT_IF_C Sf_BFu1c_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu1c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_BFu16i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_BFu16i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_BFu16i");
    set_bf_and_test(lv, v3, 0, 1, 16, 1, "Sf_BFu1c_BFu16i");
    set_bf_and_test(lv, v3, 0, 1, 16, hide_ull(1LL<<15), "Sf_BFu1c_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_BFu16i, Sf_BFu1c_BFu16i)
//============================================================================



static void Test_Sf_BFu1c_BFu16ll()
{
  {
    init_simple_test("Sf_BFu1c_BFu16ll");
    static STRUCT_IF_C Sf_BFu1c_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu1c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_BFu16ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_BFu16ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_BFu16ll");
    set_bf_and_test(lv, v3, 0, 1, 16, 1, "Sf_BFu1c_BFu16ll");
    set_bf_and_test(lv, v3, 0, 1, 16, hide_ull(1LL<<15), "Sf_BFu1c_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_BFu16ll, Sf_BFu1c_BFu16ll)
//============================================================================



static void Test_Sf_BFu1c_BFu16s()
{
  {
    init_simple_test("Sf_BFu1c_BFu16s");
    static STRUCT_IF_C Sf_BFu1c_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu1c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_BFu16s)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_BFu16s.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_BFu16s");
    set_bf_and_test(lv, v3, 0, 1, 16, 1, "Sf_BFu1c_BFu16s");
    set_bf_and_test(lv, v3, 0, 1, 16, hide_ull(1LL<<15), "Sf_BFu1c_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_BFu16s, Sf_BFu1c_BFu16s)
//============================================================================



static void Test_Sf_BFu1c_BFu17i()
{
  {
    init_simple_test("Sf_BFu1c_BFu17i");
    static STRUCT_IF_C Sf_BFu1c_BFu17i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu1c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_BFu17i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_BFu17i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_BFu17i");
    set_bf_and_test(lv, v3, 0, 1, 17, 1, "Sf_BFu1c_BFu17i");
    set_bf_and_test(lv, v3, 0, 1, 17, hide_ull(1LL<<16), "Sf_BFu1c_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_BFu17i, Sf_BFu1c_BFu17i)
//============================================================================



static void Test_Sf_BFu1c_BFu17ll()
{
  {
    init_simple_test("Sf_BFu1c_BFu17ll");
    static STRUCT_IF_C Sf_BFu1c_BFu17ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu1c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_BFu17ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_BFu17ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_BFu17ll");
    set_bf_and_test(lv, v3, 0, 1, 17, 1, "Sf_BFu1c_BFu17ll");
    set_bf_and_test(lv, v3, 0, 1, 17, hide_ull(1LL<<16), "Sf_BFu1c_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_BFu17ll, Sf_BFu1c_BFu17ll)
//============================================================================



static void Test_Sf_BFu1c_BFu1c()
{
  {
    init_simple_test("Sf_BFu1c_BFu1c");
    static STRUCT_IF_C Sf_BFu1c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_BFu1c)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_BFu1c.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_BFu1c");
    set_bf_and_test(lv, v3, 0, 1, 1, 1, "Sf_BFu1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_BFu1c, Sf_BFu1c_BFu1c)
//============================================================================



static void Test_Sf_BFu1c_BFu1i()
{
  {
    init_simple_test("Sf_BFu1c_BFu1i");
    static STRUCT_IF_C Sf_BFu1c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_BFu1i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_BFu1i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_BFu1i");
    set_bf_and_test(lv, v3, 0, 1, 1, 1, "Sf_BFu1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_BFu1i, Sf_BFu1c_BFu1i)
//============================================================================



static void Test_Sf_BFu1c_BFu1ll()
{
  {
    init_simple_test("Sf_BFu1c_BFu1ll");
    static STRUCT_IF_C Sf_BFu1c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_BFu1ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_BFu1ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 1, 1, 1, "Sf_BFu1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_BFu1ll, Sf_BFu1c_BFu1ll)
//============================================================================



static void Test_Sf_BFu1c_BFu1s()
{
  {
    init_simple_test("Sf_BFu1c_BFu1s");
    static STRUCT_IF_C Sf_BFu1c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_BFu1s)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_BFu1s.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_BFu1s");
    set_bf_and_test(lv, v3, 0, 1, 1, 1, "Sf_BFu1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_BFu1s, Sf_BFu1c_BFu1s)
//============================================================================



static void Test_Sf_BFu1c_BFu31i()
{
  {
    init_simple_test("Sf_BFu1c_BFu31i");
    static STRUCT_IF_C Sf_BFu1c_BFu31i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu1c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_BFu31i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_BFu31i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_BFu31i");
    set_bf_and_test(lv, v3, 0, 1, 31, 1, "Sf_BFu1c_BFu31i");
    set_bf_and_test(lv, v3, 0, 1, 31, hide_ull(1LL<<30), "Sf_BFu1c_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_BFu31i, Sf_BFu1c_BFu31i)
//============================================================================



static void Test_Sf_BFu1c_BFu31ll()
{
  {
    init_simple_test("Sf_BFu1c_BFu31ll");
    static STRUCT_IF_C Sf_BFu1c_BFu31ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu1c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_BFu31ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_BFu31ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_BFu31ll");
    set_bf_and_test(lv, v3, 0, 1, 31, 1, "Sf_BFu1c_BFu31ll");
    set_bf_and_test(lv, v3, 0, 1, 31, hide_ull(1LL<<30), "Sf_BFu1c_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_BFu31ll, Sf_BFu1c_BFu31ll)
//============================================================================



static void Test_Sf_BFu1c_BFu32i()
{
  {
    init_simple_test("Sf_BFu1c_BFu32i");
    static STRUCT_IF_C Sf_BFu1c_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu1c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_BFu32i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_BFu32i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_BFu32i");
    set_bf_and_test(lv, v3, 0, 1, 32, 1, "Sf_BFu1c_BFu32i");
    set_bf_and_test(lv, v3, 0, 1, 32, hide_ull(1LL<<31), "Sf_BFu1c_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_BFu32i, Sf_BFu1c_BFu32i)
//============================================================================



static void Test_Sf_BFu1c_BFu32ll()
{
  {
    init_simple_test("Sf_BFu1c_BFu32ll");
    static STRUCT_IF_C Sf_BFu1c_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu1c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_BFu32ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_BFu32ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_BFu32ll");
    set_bf_and_test(lv, v3, 0, 1, 32, 1, "Sf_BFu1c_BFu32ll");
    set_bf_and_test(lv, v3, 0, 1, 32, hide_ull(1LL<<31), "Sf_BFu1c_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_BFu32ll, Sf_BFu1c_BFu32ll)
//============================================================================



static void Test_Sf_BFu1c_BFu33()
{
  {
    init_simple_test("Sf_BFu1c_BFu33");
    static STRUCT_IF_C Sf_BFu1c_BFu33 lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu1c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_BFu33)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_BFu33.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_BFu33");
    set_bf_and_test(lv, v3, 0, 1, 33, 1, "Sf_BFu1c_BFu33");
    set_bf_and_test(lv, v3, 0, 1, 33, hide_ull(1LL<<32), "Sf_BFu1c_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_BFu33, Sf_BFu1c_BFu33)
//============================================================================



static void Test_Sf_BFu1c_BFu7c()
{
  {
    init_simple_test("Sf_BFu1c_BFu7c");
    static STRUCT_IF_C Sf_BFu1c_BFu7c lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_BFu7c)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_BFu7c.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_BFu7c");
    set_bf_and_test(lv, v3, 0, 1, 7, 1, "Sf_BFu1c_BFu7c");
    set_bf_and_test(lv, v3, 0, 1, 7, hide_ull(1LL<<6), "Sf_BFu1c_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_BFu7c, Sf_BFu1c_BFu7c)
//============================================================================



static void Test_Sf_BFu1c_BFu7i()
{
  {
    init_simple_test("Sf_BFu1c_BFu7i");
    static STRUCT_IF_C Sf_BFu1c_BFu7i lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_BFu7i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_BFu7i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_BFu7i");
    set_bf_and_test(lv, v3, 0, 1, 7, 1, "Sf_BFu1c_BFu7i");
    set_bf_and_test(lv, v3, 0, 1, 7, hide_ull(1LL<<6), "Sf_BFu1c_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_BFu7i, Sf_BFu1c_BFu7i)
//============================================================================



static void Test_Sf_BFu1c_BFu7ll()
{
  {
    init_simple_test("Sf_BFu1c_BFu7ll");
    static STRUCT_IF_C Sf_BFu1c_BFu7ll lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_BFu7ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_BFu7ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_BFu7ll");
    set_bf_and_test(lv, v3, 0, 1, 7, 1, "Sf_BFu1c_BFu7ll");
    set_bf_and_test(lv, v3, 0, 1, 7, hide_ull(1LL<<6), "Sf_BFu1c_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_BFu7ll, Sf_BFu1c_BFu7ll)
//============================================================================



static void Test_Sf_BFu1c_BFu7s()
{
  {
    init_simple_test("Sf_BFu1c_BFu7s");
    static STRUCT_IF_C Sf_BFu1c_BFu7s lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_BFu7s)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_BFu7s.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_BFu7s");
    set_bf_and_test(lv, v3, 0, 1, 7, 1, "Sf_BFu1c_BFu7s");
    set_bf_and_test(lv, v3, 0, 1, 7, hide_ull(1LL<<6), "Sf_BFu1c_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_BFu7s, Sf_BFu1c_BFu7s)
//============================================================================



static void Test_Sf_BFu1c_BFu8c()
{
  {
    init_simple_test("Sf_BFu1c_BFu8c");
    static STRUCT_IF_C Sf_BFu1c_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_BFu8c)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_BFu8c.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_BFu8c");
    set_bf_and_test(lv, v3, 0, 1, 8, 1, "Sf_BFu1c_BFu8c");
    set_bf_and_test(lv, v3, 0, 1, 8, hide_ull(1LL<<7), "Sf_BFu1c_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_BFu8c, Sf_BFu1c_BFu8c)
//============================================================================



static void Test_Sf_BFu1c_BFu8i()
{
  {
    init_simple_test("Sf_BFu1c_BFu8i");
    static STRUCT_IF_C Sf_BFu1c_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_BFu8i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_BFu8i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_BFu8i");
    set_bf_and_test(lv, v3, 0, 1, 8, 1, "Sf_BFu1c_BFu8i");
    set_bf_and_test(lv, v3, 0, 1, 8, hide_ull(1LL<<7), "Sf_BFu1c_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_BFu8i, Sf_BFu1c_BFu8i)
//============================================================================



static void Test_Sf_BFu1c_BFu8ll()
{
  {
    init_simple_test("Sf_BFu1c_BFu8ll");
    static STRUCT_IF_C Sf_BFu1c_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_BFu8ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_BFu8ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_BFu8ll");
    set_bf_and_test(lv, v3, 0, 1, 8, 1, "Sf_BFu1c_BFu8ll");
    set_bf_and_test(lv, v3, 0, 1, 8, hide_ull(1LL<<7), "Sf_BFu1c_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_BFu8ll, Sf_BFu1c_BFu8ll)
//============================================================================



static void Test_Sf_BFu1c_BFu8s()
{
  {
    init_simple_test("Sf_BFu1c_BFu8s");
    static STRUCT_IF_C Sf_BFu1c_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_BFu8s)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_BFu8s.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_BFu8s");
    set_bf_and_test(lv, v3, 0, 1, 8, 1, "Sf_BFu1c_BFu8s");
    set_bf_and_test(lv, v3, 0, 1, 8, hide_ull(1LL<<7), "Sf_BFu1c_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_BFu8s, Sf_BFu1c_BFu8s)
//============================================================================



static void Test_Sf_BFu1c_BFu9i()
{
  {
    init_simple_test("Sf_BFu1c_BFu9i");
    static STRUCT_IF_C Sf_BFu1c_BFu9i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_BFu9i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_BFu9i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_BFu9i");
    set_bf_and_test(lv, v3, 0, 1, 9, 1, "Sf_BFu1c_BFu9i");
    set_bf_and_test(lv, v3, 0, 1, 9, hide_ull(1LL<<8), "Sf_BFu1c_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_BFu9i, Sf_BFu1c_BFu9i)
//============================================================================



static void Test_Sf_BFu1c_BFu9ll()
{
  {
    init_simple_test("Sf_BFu1c_BFu9ll");
    static STRUCT_IF_C Sf_BFu1c_BFu9ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_BFu9ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_BFu9ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_BFu9ll");
    set_bf_and_test(lv, v3, 0, 1, 9, 1, "Sf_BFu1c_BFu9ll");
    set_bf_and_test(lv, v3, 0, 1, 9, hide_ull(1LL<<8), "Sf_BFu1c_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_BFu9ll, Sf_BFu1c_BFu9ll)
//============================================================================



static void Test_Sf_BFu1c_BFu9s()
{
  {
    init_simple_test("Sf_BFu1c_BFu9s");
    static STRUCT_IF_C Sf_BFu1c_BFu9s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_BFu9s)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_BFu9s.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_BFu9s");
    set_bf_and_test(lv, v3, 0, 1, 9, 1, "Sf_BFu1c_BFu9s");
    set_bf_and_test(lv, v3, 0, 1, 9, hide_ull(1LL<<8), "Sf_BFu1c_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_BFu9s, Sf_BFu1c_BFu9s)
//============================================================================



static void Test_Sf_BFu1c_C()
{
  {
    init_simple_test("Sf_BFu1c_C");
    static STRUCT_IF_C Sf_BFu1c_C lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1c_C)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_C)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_C.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_C");
    check_field_offset(lv, v3, 1, "Sf_BFu1c_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_C, Sf_BFu1c_C)
//============================================================================



static void Test_Sf_BFu1c_D()
{
  {
    init_simple_test("Sf_BFu1c_D");
    static STRUCT_IF_C Sf_BFu1c_D lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu1c_D)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_D)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_D.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_D");
    check_field_offset(lv, v3, 1, "Sf_BFu1c_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_D, Sf_BFu1c_D)
//============================================================================



static void Test_Sf_BFu1c_F()
{
  {
    init_simple_test("Sf_BFu1c_F");
    static STRUCT_IF_C Sf_BFu1c_F lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu1c_F)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_F)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_F.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_F");
    check_field_offset(lv, v3, 1, "Sf_BFu1c_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_F, Sf_BFu1c_F)
//============================================================================



static void Test_Sf_BFu1c_I()
{
  {
    init_simple_test("Sf_BFu1c_I");
    static STRUCT_IF_C Sf_BFu1c_I lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu1c_I)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_I)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_I.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_I");
    check_field_offset(lv, v3, 1, "Sf_BFu1c_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_I, Sf_BFu1c_I)
//============================================================================



static void Test_Sf_BFu1c_Ip()
{
  {
    init_simple_test("Sf_BFu1c_Ip");
    static STRUCT_IF_C Sf_BFu1c_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Sf_BFu1c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_Ip)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_Ip.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_Ip");
    check_field_offset(lv, v3, 1, "Sf_BFu1c_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_Ip, Sf_BFu1c_Ip)
//============================================================================



static void Test_Sf_BFu1c_L()
{
  {
    init_simple_test("Sf_BFu1c_L");
    static STRUCT_IF_C Sf_BFu1c_L lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu1c_L)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_L)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_L.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_L");
    check_field_offset(lv, v3, 1, "Sf_BFu1c_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_L, Sf_BFu1c_L)
//============================================================================



static void Test_Sf_BFu1c_S()
{
  {
    init_simple_test("Sf_BFu1c_S");
    static STRUCT_IF_C Sf_BFu1c_S lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu1c_S)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_S)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_S.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_S");
    check_field_offset(lv, v3, 1, "Sf_BFu1c_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_S, Sf_BFu1c_S)
//============================================================================



static void Test_Sf_BFu1c_Sf()
{
  {
    init_simple_test("Sf_BFu1c_Sf");
    static STRUCT_IF_C Sf_BFu1c_Sf lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_Sf)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_Sf.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_Sf");
    check_field_offset(lv, v3, 1, "Sf_BFu1c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_Sf, Sf_BFu1c_Sf)
//============================================================================



static void Test_Sf_BFu1c_Uc()
{
  {
    init_simple_test("Sf_BFu1c_Uc");
    static STRUCT_IF_C Sf_BFu1c_Uc lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_Uc)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_Uc.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_Uc");
    check_field_offset(lv, v3, 1, "Sf_BFu1c_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_Uc, Sf_BFu1c_Uc)
//============================================================================



static void Test_Sf_BFu1c_Ui()
{
  {
    init_simple_test("Sf_BFu1c_Ui");
    static STRUCT_IF_C Sf_BFu1c_Ui lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu1c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_Ui)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_Ui.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_Ui");
    check_field_offset(lv, v3, 1, "Sf_BFu1c_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_Ui, Sf_BFu1c_Ui)
//============================================================================



static void Test_Sf_BFu1c_Ul()
{
  {
    init_simple_test("Sf_BFu1c_Ul");
    static STRUCT_IF_C Sf_BFu1c_Ul lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu1c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_Ul)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_Ul.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_Ul");
    check_field_offset(lv, v3, 1, "Sf_BFu1c_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_Ul, Sf_BFu1c_Ul)
//============================================================================



static void Test_Sf_BFu1c_Us()
{
  {
    init_simple_test("Sf_BFu1c_Us");
    static STRUCT_IF_C Sf_BFu1c_Us lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu1c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_Us)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_Us.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_Us");
    check_field_offset(lv, v3, 1, "Sf_BFu1c_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_Us, Sf_BFu1c_Us)
//============================================================================



static void Test_Sf_BFu1c_Vp()
{
  {
    init_simple_test("Sf_BFu1c_Vp");
    static STRUCT_IF_C Sf_BFu1c_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Sf_BFu1c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1c_Vp)");
    check_field_offset(lv, v1, 0, "Sf_BFu1c_Vp.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1c_Vp");
    check_field_offset(lv, v3, 1, "Sf_BFu1c_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1c_Vp, Sf_BFu1c_Vp)
//============================================================================



static void Test_Sf_BFu1i()
{
  {
    init_simple_test("Sf_BFu1i");
    static STRUCT_IF_C Sf_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i, Sf_BFu1i)
//============================================================================



static void Test_Sf_BFu1i_BFu15i()
{
  {
    init_simple_test("Sf_BFu1i_BFu15i");
    static STRUCT_IF_C Sf_BFu1i_BFu15i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_BFu15i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_BFu15i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_BFu15i");
    set_bf_and_test(lv, v3, 0, 1, 15, 1, "Sf_BFu1i_BFu15i");
    set_bf_and_test(lv, v3, 0, 1, 15, hide_ull(1LL<<14), "Sf_BFu1i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_BFu15i, Sf_BFu1i_BFu15i)
//============================================================================



static void Test_Sf_BFu1i_BFu15ll()
{
  {
    init_simple_test("Sf_BFu1i_BFu15ll");
    static STRUCT_IF_C Sf_BFu1i_BFu15ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_BFu15ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_BFu15ll");
    set_bf_and_test(lv, v3, 0, 1, 15, 1, "Sf_BFu1i_BFu15ll");
    set_bf_and_test(lv, v3, 0, 1, 15, hide_ull(1LL<<14), "Sf_BFu1i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_BFu15ll, Sf_BFu1i_BFu15ll)
//============================================================================



static void Test_Sf_BFu1i_BFu15s()
{
  {
    init_simple_test("Sf_BFu1i_BFu15s");
    static STRUCT_IF_C Sf_BFu1i_BFu15s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_BFu15s)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_BFu15s.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_BFu15s");
    set_bf_and_test(lv, v3, 0, 1, 15, 1, "Sf_BFu1i_BFu15s");
    set_bf_and_test(lv, v3, 0, 1, 15, hide_ull(1LL<<14), "Sf_BFu1i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_BFu15s, Sf_BFu1i_BFu15s)
//============================================================================



static void Test_Sf_BFu1i_BFu16i()
{
  {
    init_simple_test("Sf_BFu1i_BFu16i");
    static STRUCT_IF_C Sf_BFu1i_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu1i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_BFu16i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_BFu16i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_BFu16i");
    set_bf_and_test(lv, v3, 0, 1, 16, 1, "Sf_BFu1i_BFu16i");
    set_bf_and_test(lv, v3, 0, 1, 16, hide_ull(1LL<<15), "Sf_BFu1i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_BFu16i, Sf_BFu1i_BFu16i)
//============================================================================



static void Test_Sf_BFu1i_BFu16ll()
{
  {
    init_simple_test("Sf_BFu1i_BFu16ll");
    static STRUCT_IF_C Sf_BFu1i_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu1i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_BFu16ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_BFu16ll");
    set_bf_and_test(lv, v3, 0, 1, 16, 1, "Sf_BFu1i_BFu16ll");
    set_bf_and_test(lv, v3, 0, 1, 16, hide_ull(1LL<<15), "Sf_BFu1i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_BFu16ll, Sf_BFu1i_BFu16ll)
//============================================================================



static void Test_Sf_BFu1i_BFu16s()
{
  {
    init_simple_test("Sf_BFu1i_BFu16s");
    static STRUCT_IF_C Sf_BFu1i_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu1i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_BFu16s)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_BFu16s.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_BFu16s");
    set_bf_and_test(lv, v3, 0, 1, 16, 1, "Sf_BFu1i_BFu16s");
    set_bf_and_test(lv, v3, 0, 1, 16, hide_ull(1LL<<15), "Sf_BFu1i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_BFu16s, Sf_BFu1i_BFu16s)
//============================================================================



static void Test_Sf_BFu1i_BFu17i()
{
  {
    init_simple_test("Sf_BFu1i_BFu17i");
    static STRUCT_IF_C Sf_BFu1i_BFu17i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu1i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_BFu17i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_BFu17i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_BFu17i");
    set_bf_and_test(lv, v3, 0, 1, 17, 1, "Sf_BFu1i_BFu17i");
    set_bf_and_test(lv, v3, 0, 1, 17, hide_ull(1LL<<16), "Sf_BFu1i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_BFu17i, Sf_BFu1i_BFu17i)
//============================================================================



static void Test_Sf_BFu1i_BFu17ll()
{
  {
    init_simple_test("Sf_BFu1i_BFu17ll");
    static STRUCT_IF_C Sf_BFu1i_BFu17ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu1i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_BFu17ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_BFu17ll");
    set_bf_and_test(lv, v3, 0, 1, 17, 1, "Sf_BFu1i_BFu17ll");
    set_bf_and_test(lv, v3, 0, 1, 17, hide_ull(1LL<<16), "Sf_BFu1i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_BFu17ll, Sf_BFu1i_BFu17ll)
//============================================================================



static void Test_Sf_BFu1i_BFu1c()
{
  {
    init_simple_test("Sf_BFu1i_BFu1c");
    static STRUCT_IF_C Sf_BFu1i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_BFu1c)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_BFu1c.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_BFu1c");
    set_bf_and_test(lv, v3, 0, 1, 1, 1, "Sf_BFu1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_BFu1c, Sf_BFu1i_BFu1c)
//============================================================================



static void Test_Sf_BFu1i_BFu1i()
{
  {
    init_simple_test("Sf_BFu1i_BFu1i");
    static STRUCT_IF_C Sf_BFu1i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_BFu1i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_BFu1i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_BFu1i");
    set_bf_and_test(lv, v3, 0, 1, 1, 1, "Sf_BFu1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_BFu1i, Sf_BFu1i_BFu1i)
//============================================================================



static void Test_Sf_BFu1i_BFu1ll()
{
  {
    init_simple_test("Sf_BFu1i_BFu1ll");
    static STRUCT_IF_C Sf_BFu1i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_BFu1ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 1, 1, 1, "Sf_BFu1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_BFu1ll, Sf_BFu1i_BFu1ll)
//============================================================================



static void Test_Sf_BFu1i_BFu1s()
{
  {
    init_simple_test("Sf_BFu1i_BFu1s");
    static STRUCT_IF_C Sf_BFu1i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_BFu1s)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_BFu1s.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_BFu1s");
    set_bf_and_test(lv, v3, 0, 1, 1, 1, "Sf_BFu1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_BFu1s, Sf_BFu1i_BFu1s)
//============================================================================



static void Test_Sf_BFu1i_BFu31i()
{
  {
    init_simple_test("Sf_BFu1i_BFu31i");
    static STRUCT_IF_C Sf_BFu1i_BFu31i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu1i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_BFu31i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_BFu31i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_BFu31i");
    set_bf_and_test(lv, v3, 0, 1, 31, 1, "Sf_BFu1i_BFu31i");
    set_bf_and_test(lv, v3, 0, 1, 31, hide_ull(1LL<<30), "Sf_BFu1i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_BFu31i, Sf_BFu1i_BFu31i)
//============================================================================



static void Test_Sf_BFu1i_BFu31ll()
{
  {
    init_simple_test("Sf_BFu1i_BFu31ll");
    static STRUCT_IF_C Sf_BFu1i_BFu31ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu1i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_BFu31ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_BFu31ll");
    set_bf_and_test(lv, v3, 0, 1, 31, 1, "Sf_BFu1i_BFu31ll");
    set_bf_and_test(lv, v3, 0, 1, 31, hide_ull(1LL<<30), "Sf_BFu1i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_BFu31ll, Sf_BFu1i_BFu31ll)
//============================================================================



static void Test_Sf_BFu1i_BFu32i()
{
  {
    init_simple_test("Sf_BFu1i_BFu32i");
    static STRUCT_IF_C Sf_BFu1i_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu1i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_BFu32i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_BFu32i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_BFu32i");
    set_bf_and_test(lv, v3, 0, 1, 32, 1, "Sf_BFu1i_BFu32i");
    set_bf_and_test(lv, v3, 0, 1, 32, hide_ull(1LL<<31), "Sf_BFu1i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_BFu32i, Sf_BFu1i_BFu32i)
//============================================================================



static void Test_Sf_BFu1i_BFu32ll()
{
  {
    init_simple_test("Sf_BFu1i_BFu32ll");
    static STRUCT_IF_C Sf_BFu1i_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu1i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_BFu32ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_BFu32ll");
    set_bf_and_test(lv, v3, 0, 1, 32, 1, "Sf_BFu1i_BFu32ll");
    set_bf_and_test(lv, v3, 0, 1, 32, hide_ull(1LL<<31), "Sf_BFu1i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_BFu32ll, Sf_BFu1i_BFu32ll)
//============================================================================



static void Test_Sf_BFu1i_BFu33()
{
  {
    init_simple_test("Sf_BFu1i_BFu33");
    static STRUCT_IF_C Sf_BFu1i_BFu33 lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu1i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_BFu33)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_BFu33.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_BFu33");
    set_bf_and_test(lv, v3, 0, 1, 33, 1, "Sf_BFu1i_BFu33");
    set_bf_and_test(lv, v3, 0, 1, 33, hide_ull(1LL<<32), "Sf_BFu1i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_BFu33, Sf_BFu1i_BFu33)
//============================================================================



static void Test_Sf_BFu1i_BFu7c()
{
  {
    init_simple_test("Sf_BFu1i_BFu7c");
    static STRUCT_IF_C Sf_BFu1i_BFu7c lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_BFu7c)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_BFu7c.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_BFu7c");
    set_bf_and_test(lv, v3, 0, 1, 7, 1, "Sf_BFu1i_BFu7c");
    set_bf_and_test(lv, v3, 0, 1, 7, hide_ull(1LL<<6), "Sf_BFu1i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_BFu7c, Sf_BFu1i_BFu7c)
//============================================================================



static void Test_Sf_BFu1i_BFu7i()
{
  {
    init_simple_test("Sf_BFu1i_BFu7i");
    static STRUCT_IF_C Sf_BFu1i_BFu7i lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_BFu7i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_BFu7i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_BFu7i");
    set_bf_and_test(lv, v3, 0, 1, 7, 1, "Sf_BFu1i_BFu7i");
    set_bf_and_test(lv, v3, 0, 1, 7, hide_ull(1LL<<6), "Sf_BFu1i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_BFu7i, Sf_BFu1i_BFu7i)
//============================================================================



static void Test_Sf_BFu1i_BFu7ll()
{
  {
    init_simple_test("Sf_BFu1i_BFu7ll");
    static STRUCT_IF_C Sf_BFu1i_BFu7ll lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_BFu7ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_BFu7ll");
    set_bf_and_test(lv, v3, 0, 1, 7, 1, "Sf_BFu1i_BFu7ll");
    set_bf_and_test(lv, v3, 0, 1, 7, hide_ull(1LL<<6), "Sf_BFu1i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_BFu7ll, Sf_BFu1i_BFu7ll)
//============================================================================



static void Test_Sf_BFu1i_BFu7s()
{
  {
    init_simple_test("Sf_BFu1i_BFu7s");
    static STRUCT_IF_C Sf_BFu1i_BFu7s lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_BFu7s)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_BFu7s.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_BFu7s");
    set_bf_and_test(lv, v3, 0, 1, 7, 1, "Sf_BFu1i_BFu7s");
    set_bf_and_test(lv, v3, 0, 1, 7, hide_ull(1LL<<6), "Sf_BFu1i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_BFu7s, Sf_BFu1i_BFu7s)
//============================================================================



static void Test_Sf_BFu1i_BFu8c()
{
  {
    init_simple_test("Sf_BFu1i_BFu8c");
    static STRUCT_IF_C Sf_BFu1i_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_BFu8c)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_BFu8c.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_BFu8c");
    set_bf_and_test(lv, v3, 0, 1, 8, 1, "Sf_BFu1i_BFu8c");
    set_bf_and_test(lv, v3, 0, 1, 8, hide_ull(1LL<<7), "Sf_BFu1i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_BFu8c, Sf_BFu1i_BFu8c)
//============================================================================



static void Test_Sf_BFu1i_BFu8i()
{
  {
    init_simple_test("Sf_BFu1i_BFu8i");
    static STRUCT_IF_C Sf_BFu1i_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_BFu8i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_BFu8i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_BFu8i");
    set_bf_and_test(lv, v3, 0, 1, 8, 1, "Sf_BFu1i_BFu8i");
    set_bf_and_test(lv, v3, 0, 1, 8, hide_ull(1LL<<7), "Sf_BFu1i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_BFu8i, Sf_BFu1i_BFu8i)
//============================================================================



static void Test_Sf_BFu1i_BFu8ll()
{
  {
    init_simple_test("Sf_BFu1i_BFu8ll");
    static STRUCT_IF_C Sf_BFu1i_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_BFu8ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_BFu8ll");
    set_bf_and_test(lv, v3, 0, 1, 8, 1, "Sf_BFu1i_BFu8ll");
    set_bf_and_test(lv, v3, 0, 1, 8, hide_ull(1LL<<7), "Sf_BFu1i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_BFu8ll, Sf_BFu1i_BFu8ll)
//============================================================================



static void Test_Sf_BFu1i_BFu8s()
{
  {
    init_simple_test("Sf_BFu1i_BFu8s");
    static STRUCT_IF_C Sf_BFu1i_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_BFu8s)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_BFu8s.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_BFu8s");
    set_bf_and_test(lv, v3, 0, 1, 8, 1, "Sf_BFu1i_BFu8s");
    set_bf_and_test(lv, v3, 0, 1, 8, hide_ull(1LL<<7), "Sf_BFu1i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_BFu8s, Sf_BFu1i_BFu8s)
//============================================================================



static void Test_Sf_BFu1i_BFu9i()
{
  {
    init_simple_test("Sf_BFu1i_BFu9i");
    static STRUCT_IF_C Sf_BFu1i_BFu9i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_BFu9i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_BFu9i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_BFu9i");
    set_bf_and_test(lv, v3, 0, 1, 9, 1, "Sf_BFu1i_BFu9i");
    set_bf_and_test(lv, v3, 0, 1, 9, hide_ull(1LL<<8), "Sf_BFu1i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_BFu9i, Sf_BFu1i_BFu9i)
//============================================================================



static void Test_Sf_BFu1i_BFu9ll()
{
  {
    init_simple_test("Sf_BFu1i_BFu9ll");
    static STRUCT_IF_C Sf_BFu1i_BFu9ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_BFu9ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_BFu9ll");
    set_bf_and_test(lv, v3, 0, 1, 9, 1, "Sf_BFu1i_BFu9ll");
    set_bf_and_test(lv, v3, 0, 1, 9, hide_ull(1LL<<8), "Sf_BFu1i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_BFu9ll, Sf_BFu1i_BFu9ll)
//============================================================================



static void Test_Sf_BFu1i_BFu9s()
{
  {
    init_simple_test("Sf_BFu1i_BFu9s");
    static STRUCT_IF_C Sf_BFu1i_BFu9s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_BFu9s)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_BFu9s.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_BFu9s");
    set_bf_and_test(lv, v3, 0, 1, 9, 1, "Sf_BFu1i_BFu9s");
    set_bf_and_test(lv, v3, 0, 1, 9, hide_ull(1LL<<8), "Sf_BFu1i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_BFu9s, Sf_BFu1i_BFu9s)
//============================================================================



static void Test_Sf_BFu1i_C()
{
  {
    init_simple_test("Sf_BFu1i_C");
    static STRUCT_IF_C Sf_BFu1i_C lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1i_C)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_C)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_C.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_C");
    check_field_offset(lv, v3, 1, "Sf_BFu1i_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_C, Sf_BFu1i_C)
//============================================================================



static void Test_Sf_BFu1i_D()
{
  {
    init_simple_test("Sf_BFu1i_D");
    static STRUCT_IF_C Sf_BFu1i_D lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu1i_D)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_D)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_D.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_D");
    check_field_offset(lv, v3, 1, "Sf_BFu1i_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_D, Sf_BFu1i_D)
//============================================================================



static void Test_Sf_BFu1i_F()
{
  {
    init_simple_test("Sf_BFu1i_F");
    static STRUCT_IF_C Sf_BFu1i_F lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu1i_F)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_F)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_F.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_F");
    check_field_offset(lv, v3, 1, "Sf_BFu1i_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_F, Sf_BFu1i_F)
//============================================================================



static void Test_Sf_BFu1i_I()
{
  {
    init_simple_test("Sf_BFu1i_I");
    static STRUCT_IF_C Sf_BFu1i_I lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu1i_I)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_I)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_I.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_I");
    check_field_offset(lv, v3, 1, "Sf_BFu1i_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_I, Sf_BFu1i_I)
//============================================================================



static void Test_Sf_BFu1i_Ip()
{
  {
    init_simple_test("Sf_BFu1i_Ip");
    static STRUCT_IF_C Sf_BFu1i_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Sf_BFu1i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_Ip)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_Ip.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_Ip");
    check_field_offset(lv, v3, 1, "Sf_BFu1i_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_Ip, Sf_BFu1i_Ip)
//============================================================================



static void Test_Sf_BFu1i_L()
{
  {
    init_simple_test("Sf_BFu1i_L");
    static STRUCT_IF_C Sf_BFu1i_L lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu1i_L)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_L)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_L.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_L");
    check_field_offset(lv, v3, 1, "Sf_BFu1i_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_L, Sf_BFu1i_L)
//============================================================================



static void Test_Sf_BFu1i_S()
{
  {
    init_simple_test("Sf_BFu1i_S");
    static STRUCT_IF_C Sf_BFu1i_S lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu1i_S)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_S)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_S.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_S");
    check_field_offset(lv, v3, 1, "Sf_BFu1i_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_S, Sf_BFu1i_S)
//============================================================================



static void Test_Sf_BFu1i_Sf()
{
  {
    init_simple_test("Sf_BFu1i_Sf");
    static STRUCT_IF_C Sf_BFu1i_Sf lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_Sf)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_Sf.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_Sf");
    check_field_offset(lv, v3, 1, "Sf_BFu1i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_Sf, Sf_BFu1i_Sf)
//============================================================================



static void Test_Sf_BFu1i_Uc()
{
  {
    init_simple_test("Sf_BFu1i_Uc");
    static STRUCT_IF_C Sf_BFu1i_Uc lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_Uc)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_Uc.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_Uc");
    check_field_offset(lv, v3, 1, "Sf_BFu1i_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_Uc, Sf_BFu1i_Uc)
//============================================================================



static void Test_Sf_BFu1i_Ui()
{
  {
    init_simple_test("Sf_BFu1i_Ui");
    static STRUCT_IF_C Sf_BFu1i_Ui lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu1i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_Ui)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_Ui.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_Ui");
    check_field_offset(lv, v3, 1, "Sf_BFu1i_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_Ui, Sf_BFu1i_Ui)
//============================================================================



static void Test_Sf_BFu1i_Ul()
{
  {
    init_simple_test("Sf_BFu1i_Ul");
    static STRUCT_IF_C Sf_BFu1i_Ul lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu1i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_Ul)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_Ul.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_Ul");
    check_field_offset(lv, v3, 1, "Sf_BFu1i_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_Ul, Sf_BFu1i_Ul)
//============================================================================



static void Test_Sf_BFu1i_Us()
{
  {
    init_simple_test("Sf_BFu1i_Us");
    static STRUCT_IF_C Sf_BFu1i_Us lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu1i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_Us)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_Us.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_Us");
    check_field_offset(lv, v3, 1, "Sf_BFu1i_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_Us, Sf_BFu1i_Us)
//============================================================================



static void Test_Sf_BFu1i_Vp()
{
  {
    init_simple_test("Sf_BFu1i_Vp");
    static STRUCT_IF_C Sf_BFu1i_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Sf_BFu1i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1i_Vp)");
    check_field_offset(lv, v1, 0, "Sf_BFu1i_Vp.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1i_Vp");
    check_field_offset(lv, v3, 1, "Sf_BFu1i_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1i_Vp, Sf_BFu1i_Vp)
//============================================================================



static void Test_Sf_BFu1ll()
{
  {
    init_simple_test("Sf_BFu1ll");
    static STRUCT_IF_C Sf_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll, Sf_BFu1ll)
//============================================================================



static void Test_Sf_BFu1ll_BFu15i()
{
  {
    init_simple_test("Sf_BFu1ll_BFu15i");
    static STRUCT_IF_C Sf_BFu1ll_BFu15i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_BFu15i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_BFu15i");
    set_bf_and_test(lv, v3, 0, 1, 15, 1, "Sf_BFu1ll_BFu15i");
    set_bf_and_test(lv, v3, 0, 1, 15, hide_ull(1LL<<14), "Sf_BFu1ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_BFu15i, Sf_BFu1ll_BFu15i)
//============================================================================



static void Test_Sf_BFu1ll_BFu15ll()
{
  {
    init_simple_test("Sf_BFu1ll_BFu15ll");
    static STRUCT_IF_C Sf_BFu1ll_BFu15ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_BFu15ll");
    set_bf_and_test(lv, v3, 0, 1, 15, 1, "Sf_BFu1ll_BFu15ll");
    set_bf_and_test(lv, v3, 0, 1, 15, hide_ull(1LL<<14), "Sf_BFu1ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_BFu15ll, Sf_BFu1ll_BFu15ll)
//============================================================================



static void Test_Sf_BFu1ll_BFu15s()
{
  {
    init_simple_test("Sf_BFu1ll_BFu15s");
    static STRUCT_IF_C Sf_BFu1ll_BFu15s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_BFu15s)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_BFu15s");
    set_bf_and_test(lv, v3, 0, 1, 15, 1, "Sf_BFu1ll_BFu15s");
    set_bf_and_test(lv, v3, 0, 1, 15, hide_ull(1LL<<14), "Sf_BFu1ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_BFu15s, Sf_BFu1ll_BFu15s)
//============================================================================



static void Test_Sf_BFu1ll_BFu16i()
{
  {
    init_simple_test("Sf_BFu1ll_BFu16i");
    static STRUCT_IF_C Sf_BFu1ll_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu1ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_BFu16i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_BFu16i");
    set_bf_and_test(lv, v3, 0, 1, 16, 1, "Sf_BFu1ll_BFu16i");
    set_bf_and_test(lv, v3, 0, 1, 16, hide_ull(1LL<<15), "Sf_BFu1ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_BFu16i, Sf_BFu1ll_BFu16i)
//============================================================================



static void Test_Sf_BFu1ll_BFu16ll()
{
  {
    init_simple_test("Sf_BFu1ll_BFu16ll");
    static STRUCT_IF_C Sf_BFu1ll_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu1ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_BFu16ll");
    set_bf_and_test(lv, v3, 0, 1, 16, 1, "Sf_BFu1ll_BFu16ll");
    set_bf_and_test(lv, v3, 0, 1, 16, hide_ull(1LL<<15), "Sf_BFu1ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_BFu16ll, Sf_BFu1ll_BFu16ll)
//============================================================================



static void Test_Sf_BFu1ll_BFu16s()
{
  {
    init_simple_test("Sf_BFu1ll_BFu16s");
    static STRUCT_IF_C Sf_BFu1ll_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu1ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_BFu16s)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_BFu16s");
    set_bf_and_test(lv, v3, 0, 1, 16, 1, "Sf_BFu1ll_BFu16s");
    set_bf_and_test(lv, v3, 0, 1, 16, hide_ull(1LL<<15), "Sf_BFu1ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_BFu16s, Sf_BFu1ll_BFu16s)
//============================================================================



static void Test_Sf_BFu1ll_BFu17i()
{
  {
    init_simple_test("Sf_BFu1ll_BFu17i");
    static STRUCT_IF_C Sf_BFu1ll_BFu17i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu1ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_BFu17i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_BFu17i");
    set_bf_and_test(lv, v3, 0, 1, 17, 1, "Sf_BFu1ll_BFu17i");
    set_bf_and_test(lv, v3, 0, 1, 17, hide_ull(1LL<<16), "Sf_BFu1ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_BFu17i, Sf_BFu1ll_BFu17i)
//============================================================================



static void Test_Sf_BFu1ll_BFu17ll()
{
  {
    init_simple_test("Sf_BFu1ll_BFu17ll");
    static STRUCT_IF_C Sf_BFu1ll_BFu17ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu1ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_BFu17ll");
    set_bf_and_test(lv, v3, 0, 1, 17, 1, "Sf_BFu1ll_BFu17ll");
    set_bf_and_test(lv, v3, 0, 1, 17, hide_ull(1LL<<16), "Sf_BFu1ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_BFu17ll, Sf_BFu1ll_BFu17ll)
//============================================================================



static void Test_Sf_BFu1ll_BFu1c()
{
  {
    init_simple_test("Sf_BFu1ll_BFu1c");
    static STRUCT_IF_C Sf_BFu1ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_BFu1c)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 1, 1, 1, "Sf_BFu1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_BFu1c, Sf_BFu1ll_BFu1c)
//============================================================================



static void Test_Sf_BFu1ll_BFu1i()
{
  {
    init_simple_test("Sf_BFu1ll_BFu1i");
    static STRUCT_IF_C Sf_BFu1ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_BFu1i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 1, 1, 1, "Sf_BFu1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_BFu1i, Sf_BFu1ll_BFu1i)
//============================================================================



static void Test_Sf_BFu1ll_BFu1ll()
{
  {
    init_simple_test("Sf_BFu1ll_BFu1ll");
    static STRUCT_IF_C Sf_BFu1ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 1, 1, 1, "Sf_BFu1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_BFu1ll, Sf_BFu1ll_BFu1ll)
//============================================================================



static void Test_Sf_BFu1ll_BFu1s()
{
  {
    init_simple_test("Sf_BFu1ll_BFu1s");
    static STRUCT_IF_C Sf_BFu1ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_BFu1s)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 1, 1, 1, "Sf_BFu1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_BFu1s, Sf_BFu1ll_BFu1s)
//============================================================================



static void Test_Sf_BFu1ll_BFu31i()
{
  {
    init_simple_test("Sf_BFu1ll_BFu31i");
    static STRUCT_IF_C Sf_BFu1ll_BFu31i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu1ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_BFu31i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_BFu31i");
    set_bf_and_test(lv, v3, 0, 1, 31, 1, "Sf_BFu1ll_BFu31i");
    set_bf_and_test(lv, v3, 0, 1, 31, hide_ull(1LL<<30), "Sf_BFu1ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_BFu31i, Sf_BFu1ll_BFu31i)
//============================================================================



static void Test_Sf_BFu1ll_BFu31ll()
{
  {
    init_simple_test("Sf_BFu1ll_BFu31ll");
    static STRUCT_IF_C Sf_BFu1ll_BFu31ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu1ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_BFu31ll");
    set_bf_and_test(lv, v3, 0, 1, 31, 1, "Sf_BFu1ll_BFu31ll");
    set_bf_and_test(lv, v3, 0, 1, 31, hide_ull(1LL<<30), "Sf_BFu1ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_BFu31ll, Sf_BFu1ll_BFu31ll)
//============================================================================



static void Test_Sf_BFu1ll_BFu32i()
{
  {
    init_simple_test("Sf_BFu1ll_BFu32i");
    static STRUCT_IF_C Sf_BFu1ll_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu1ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_BFu32i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_BFu32i");
    set_bf_and_test(lv, v3, 0, 1, 32, 1, "Sf_BFu1ll_BFu32i");
    set_bf_and_test(lv, v3, 0, 1, 32, hide_ull(1LL<<31), "Sf_BFu1ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_BFu32i, Sf_BFu1ll_BFu32i)
//============================================================================



static void Test_Sf_BFu1ll_BFu32ll()
{
  {
    init_simple_test("Sf_BFu1ll_BFu32ll");
    static STRUCT_IF_C Sf_BFu1ll_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu1ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_BFu32ll");
    set_bf_and_test(lv, v3, 0, 1, 32, 1, "Sf_BFu1ll_BFu32ll");
    set_bf_and_test(lv, v3, 0, 1, 32, hide_ull(1LL<<31), "Sf_BFu1ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_BFu32ll, Sf_BFu1ll_BFu32ll)
//============================================================================



static void Test_Sf_BFu1ll_BFu33()
{
  {
    init_simple_test("Sf_BFu1ll_BFu33");
    static STRUCT_IF_C Sf_BFu1ll_BFu33 lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu1ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_BFu33)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_BFu33.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_BFu33");
    set_bf_and_test(lv, v3, 0, 1, 33, 1, "Sf_BFu1ll_BFu33");
    set_bf_and_test(lv, v3, 0, 1, 33, hide_ull(1LL<<32), "Sf_BFu1ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_BFu33, Sf_BFu1ll_BFu33)
//============================================================================



static void Test_Sf_BFu1ll_BFu7c()
{
  {
    init_simple_test("Sf_BFu1ll_BFu7c");
    static STRUCT_IF_C Sf_BFu1ll_BFu7c lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_BFu7c)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_BFu7c");
    set_bf_and_test(lv, v3, 0, 1, 7, 1, "Sf_BFu1ll_BFu7c");
    set_bf_and_test(lv, v3, 0, 1, 7, hide_ull(1LL<<6), "Sf_BFu1ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_BFu7c, Sf_BFu1ll_BFu7c)
//============================================================================



static void Test_Sf_BFu1ll_BFu7i()
{
  {
    init_simple_test("Sf_BFu1ll_BFu7i");
    static STRUCT_IF_C Sf_BFu1ll_BFu7i lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_BFu7i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_BFu7i");
    set_bf_and_test(lv, v3, 0, 1, 7, 1, "Sf_BFu1ll_BFu7i");
    set_bf_and_test(lv, v3, 0, 1, 7, hide_ull(1LL<<6), "Sf_BFu1ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_BFu7i, Sf_BFu1ll_BFu7i)
//============================================================================



static void Test_Sf_BFu1ll_BFu7ll()
{
  {
    init_simple_test("Sf_BFu1ll_BFu7ll");
    static STRUCT_IF_C Sf_BFu1ll_BFu7ll lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_BFu7ll");
    set_bf_and_test(lv, v3, 0, 1, 7, 1, "Sf_BFu1ll_BFu7ll");
    set_bf_and_test(lv, v3, 0, 1, 7, hide_ull(1LL<<6), "Sf_BFu1ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_BFu7ll, Sf_BFu1ll_BFu7ll)
//============================================================================



static void Test_Sf_BFu1ll_BFu7s()
{
  {
    init_simple_test("Sf_BFu1ll_BFu7s");
    static STRUCT_IF_C Sf_BFu1ll_BFu7s lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_BFu7s)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_BFu7s");
    set_bf_and_test(lv, v3, 0, 1, 7, 1, "Sf_BFu1ll_BFu7s");
    set_bf_and_test(lv, v3, 0, 1, 7, hide_ull(1LL<<6), "Sf_BFu1ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_BFu7s, Sf_BFu1ll_BFu7s)
//============================================================================



static void Test_Sf_BFu1ll_BFu8c()
{
  {
    init_simple_test("Sf_BFu1ll_BFu8c");
    static STRUCT_IF_C Sf_BFu1ll_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_BFu8c)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_BFu8c");
    set_bf_and_test(lv, v3, 0, 1, 8, 1, "Sf_BFu1ll_BFu8c");
    set_bf_and_test(lv, v3, 0, 1, 8, hide_ull(1LL<<7), "Sf_BFu1ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_BFu8c, Sf_BFu1ll_BFu8c)
//============================================================================



static void Test_Sf_BFu1ll_BFu8i()
{
  {
    init_simple_test("Sf_BFu1ll_BFu8i");
    static STRUCT_IF_C Sf_BFu1ll_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_BFu8i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_BFu8i");
    set_bf_and_test(lv, v3, 0, 1, 8, 1, "Sf_BFu1ll_BFu8i");
    set_bf_and_test(lv, v3, 0, 1, 8, hide_ull(1LL<<7), "Sf_BFu1ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_BFu8i, Sf_BFu1ll_BFu8i)
//============================================================================



static void Test_Sf_BFu1ll_BFu8ll()
{
  {
    init_simple_test("Sf_BFu1ll_BFu8ll");
    static STRUCT_IF_C Sf_BFu1ll_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_BFu8ll");
    set_bf_and_test(lv, v3, 0, 1, 8, 1, "Sf_BFu1ll_BFu8ll");
    set_bf_and_test(lv, v3, 0, 1, 8, hide_ull(1LL<<7), "Sf_BFu1ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_BFu8ll, Sf_BFu1ll_BFu8ll)
//============================================================================



static void Test_Sf_BFu1ll_BFu8s()
{
  {
    init_simple_test("Sf_BFu1ll_BFu8s");
    static STRUCT_IF_C Sf_BFu1ll_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_BFu8s)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_BFu8s");
    set_bf_and_test(lv, v3, 0, 1, 8, 1, "Sf_BFu1ll_BFu8s");
    set_bf_and_test(lv, v3, 0, 1, 8, hide_ull(1LL<<7), "Sf_BFu1ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_BFu8s, Sf_BFu1ll_BFu8s)
//============================================================================



static void Test_Sf_BFu1ll_BFu9i()
{
  {
    init_simple_test("Sf_BFu1ll_BFu9i");
    static STRUCT_IF_C Sf_BFu1ll_BFu9i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_BFu9i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_BFu9i");
    set_bf_and_test(lv, v3, 0, 1, 9, 1, "Sf_BFu1ll_BFu9i");
    set_bf_and_test(lv, v3, 0, 1, 9, hide_ull(1LL<<8), "Sf_BFu1ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_BFu9i, Sf_BFu1ll_BFu9i)
//============================================================================



static void Test_Sf_BFu1ll_BFu9ll()
{
  {
    init_simple_test("Sf_BFu1ll_BFu9ll");
    static STRUCT_IF_C Sf_BFu1ll_BFu9ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_BFu9ll");
    set_bf_and_test(lv, v3, 0, 1, 9, 1, "Sf_BFu1ll_BFu9ll");
    set_bf_and_test(lv, v3, 0, 1, 9, hide_ull(1LL<<8), "Sf_BFu1ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_BFu9ll, Sf_BFu1ll_BFu9ll)
//============================================================================



static void Test_Sf_BFu1ll_BFu9s()
{
  {
    init_simple_test("Sf_BFu1ll_BFu9s");
    static STRUCT_IF_C Sf_BFu1ll_BFu9s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_BFu9s)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_BFu9s");
    set_bf_and_test(lv, v3, 0, 1, 9, 1, "Sf_BFu1ll_BFu9s");
    set_bf_and_test(lv, v3, 0, 1, 9, hide_ull(1LL<<8), "Sf_BFu1ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_BFu9s, Sf_BFu1ll_BFu9s)
//============================================================================



static void Test_Sf_BFu1ll_C()
{
  {
    init_simple_test("Sf_BFu1ll_C");
    static STRUCT_IF_C Sf_BFu1ll_C lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_C)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_C.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_C");
    check_field_offset(lv, v3, 1, "Sf_BFu1ll_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_C, Sf_BFu1ll_C)
//============================================================================



static void Test_Sf_BFu1ll_D()
{
  {
    init_simple_test("Sf_BFu1ll_D");
    static STRUCT_IF_C Sf_BFu1ll_D lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu1ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_D)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_D.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_D");
    check_field_offset(lv, v3, 1, "Sf_BFu1ll_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_D, Sf_BFu1ll_D)
//============================================================================



static void Test_Sf_BFu1ll_F()
{
  {
    init_simple_test("Sf_BFu1ll_F");
    static STRUCT_IF_C Sf_BFu1ll_F lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu1ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_F)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_F.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_F");
    check_field_offset(lv, v3, 1, "Sf_BFu1ll_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_F, Sf_BFu1ll_F)
//============================================================================



static void Test_Sf_BFu1ll_I()
{
  {
    init_simple_test("Sf_BFu1ll_I");
    static STRUCT_IF_C Sf_BFu1ll_I lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu1ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_I)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_I.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_I");
    check_field_offset(lv, v3, 1, "Sf_BFu1ll_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_I, Sf_BFu1ll_I)
//============================================================================



static void Test_Sf_BFu1ll_Ip()
{
  {
    init_simple_test("Sf_BFu1ll_Ip");
    static STRUCT_IF_C Sf_BFu1ll_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Sf_BFu1ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_Ip)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_Ip.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_Ip");
    check_field_offset(lv, v3, 1, "Sf_BFu1ll_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_Ip, Sf_BFu1ll_Ip)
//============================================================================



static void Test_Sf_BFu1ll_L()
{
  {
    init_simple_test("Sf_BFu1ll_L");
    static STRUCT_IF_C Sf_BFu1ll_L lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu1ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_L)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_L.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_L");
    check_field_offset(lv, v3, 1, "Sf_BFu1ll_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_L, Sf_BFu1ll_L)
//============================================================================



static void Test_Sf_BFu1ll_S()
{
  {
    init_simple_test("Sf_BFu1ll_S");
    static STRUCT_IF_C Sf_BFu1ll_S lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu1ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_S)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_S.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_S");
    check_field_offset(lv, v3, 1, "Sf_BFu1ll_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_S, Sf_BFu1ll_S)
//============================================================================



static void Test_Sf_BFu1ll_Sf()
{
  {
    init_simple_test("Sf_BFu1ll_Sf");
    static STRUCT_IF_C Sf_BFu1ll_Sf lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_Sf)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_Sf.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_Sf");
    check_field_offset(lv, v3, 1, "Sf_BFu1ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_Sf, Sf_BFu1ll_Sf)
//============================================================================



static void Test_Sf_BFu1ll_Uc()
{
  {
    init_simple_test("Sf_BFu1ll_Uc");
    static STRUCT_IF_C Sf_BFu1ll_Uc lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_Uc)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_Uc.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_Uc");
    check_field_offset(lv, v3, 1, "Sf_BFu1ll_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_Uc, Sf_BFu1ll_Uc)
//============================================================================



static void Test_Sf_BFu1ll_Ui()
{
  {
    init_simple_test("Sf_BFu1ll_Ui");
    static STRUCT_IF_C Sf_BFu1ll_Ui lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu1ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_Ui)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_Ui.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_Ui");
    check_field_offset(lv, v3, 1, "Sf_BFu1ll_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_Ui, Sf_BFu1ll_Ui)
//============================================================================



static void Test_Sf_BFu1ll_Ul()
{
  {
    init_simple_test("Sf_BFu1ll_Ul");
    static STRUCT_IF_C Sf_BFu1ll_Ul lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu1ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_Ul)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_Ul.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_Ul");
    check_field_offset(lv, v3, 1, "Sf_BFu1ll_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_Ul, Sf_BFu1ll_Ul)
//============================================================================



static void Test_Sf_BFu1ll_Us()
{
  {
    init_simple_test("Sf_BFu1ll_Us");
    static STRUCT_IF_C Sf_BFu1ll_Us lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu1ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_Us)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_Us.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_Us");
    check_field_offset(lv, v3, 1, "Sf_BFu1ll_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_Us, Sf_BFu1ll_Us)
//============================================================================



static void Test_Sf_BFu1ll_Vp()
{
  {
    init_simple_test("Sf_BFu1ll_Vp");
    static STRUCT_IF_C Sf_BFu1ll_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Sf_BFu1ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1ll_Vp)");
    check_field_offset(lv, v1, 0, "Sf_BFu1ll_Vp.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1ll_Vp");
    check_field_offset(lv, v3, 1, "Sf_BFu1ll_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1ll_Vp, Sf_BFu1ll_Vp)
//============================================================================



static void Test_Sf_BFu1s()
{
  {
    init_simple_test("Sf_BFu1s");
    static STRUCT_IF_C Sf_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s, Sf_BFu1s)
//============================================================================



static void Test_Sf_BFu1s_BFu15i()
{
  {
    init_simple_test("Sf_BFu1s_BFu15i");
    static STRUCT_IF_C Sf_BFu1s_BFu15i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_BFu15i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_BFu15i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_BFu15i");
    set_bf_and_test(lv, v3, 0, 1, 15, 1, "Sf_BFu1s_BFu15i");
    set_bf_and_test(lv, v3, 0, 1, 15, hide_ull(1LL<<14), "Sf_BFu1s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_BFu15i, Sf_BFu1s_BFu15i)
//============================================================================



static void Test_Sf_BFu1s_BFu15ll()
{
  {
    init_simple_test("Sf_BFu1s_BFu15ll");
    static STRUCT_IF_C Sf_BFu1s_BFu15ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_BFu15ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_BFu15ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_BFu15ll");
    set_bf_and_test(lv, v3, 0, 1, 15, 1, "Sf_BFu1s_BFu15ll");
    set_bf_and_test(lv, v3, 0, 1, 15, hide_ull(1LL<<14), "Sf_BFu1s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_BFu15ll, Sf_BFu1s_BFu15ll)
//============================================================================



static void Test_Sf_BFu1s_BFu15s()
{
  {
    init_simple_test("Sf_BFu1s_BFu15s");
    static STRUCT_IF_C Sf_BFu1s_BFu15s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_BFu15s)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_BFu15s.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_BFu15s");
    set_bf_and_test(lv, v3, 0, 1, 15, 1, "Sf_BFu1s_BFu15s");
    set_bf_and_test(lv, v3, 0, 1, 15, hide_ull(1LL<<14), "Sf_BFu1s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_BFu15s, Sf_BFu1s_BFu15s)
//============================================================================



static void Test_Sf_BFu1s_BFu16i()
{
  {
    init_simple_test("Sf_BFu1s_BFu16i");
    static STRUCT_IF_C Sf_BFu1s_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu1s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_BFu16i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_BFu16i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_BFu16i");
    set_bf_and_test(lv, v3, 0, 1, 16, 1, "Sf_BFu1s_BFu16i");
    set_bf_and_test(lv, v3, 0, 1, 16, hide_ull(1LL<<15), "Sf_BFu1s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_BFu16i, Sf_BFu1s_BFu16i)
//============================================================================



static void Test_Sf_BFu1s_BFu16ll()
{
  {
    init_simple_test("Sf_BFu1s_BFu16ll");
    static STRUCT_IF_C Sf_BFu1s_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu1s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_BFu16ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_BFu16ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_BFu16ll");
    set_bf_and_test(lv, v3, 0, 1, 16, 1, "Sf_BFu1s_BFu16ll");
    set_bf_and_test(lv, v3, 0, 1, 16, hide_ull(1LL<<15), "Sf_BFu1s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_BFu16ll, Sf_BFu1s_BFu16ll)
//============================================================================



static void Test_Sf_BFu1s_BFu16s()
{
  {
    init_simple_test("Sf_BFu1s_BFu16s");
    static STRUCT_IF_C Sf_BFu1s_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu1s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_BFu16s)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_BFu16s.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_BFu16s");
    set_bf_and_test(lv, v3, 0, 1, 16, 1, "Sf_BFu1s_BFu16s");
    set_bf_and_test(lv, v3, 0, 1, 16, hide_ull(1LL<<15), "Sf_BFu1s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_BFu16s, Sf_BFu1s_BFu16s)
//============================================================================



static void Test_Sf_BFu1s_BFu17i()
{
  {
    init_simple_test("Sf_BFu1s_BFu17i");
    static STRUCT_IF_C Sf_BFu1s_BFu17i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu1s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_BFu17i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_BFu17i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_BFu17i");
    set_bf_and_test(lv, v3, 0, 1, 17, 1, "Sf_BFu1s_BFu17i");
    set_bf_and_test(lv, v3, 0, 1, 17, hide_ull(1LL<<16), "Sf_BFu1s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_BFu17i, Sf_BFu1s_BFu17i)
//============================================================================



static void Test_Sf_BFu1s_BFu17ll()
{
  {
    init_simple_test("Sf_BFu1s_BFu17ll");
    static STRUCT_IF_C Sf_BFu1s_BFu17ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu1s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_BFu17ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_BFu17ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_BFu17ll");
    set_bf_and_test(lv, v3, 0, 1, 17, 1, "Sf_BFu1s_BFu17ll");
    set_bf_and_test(lv, v3, 0, 1, 17, hide_ull(1LL<<16), "Sf_BFu1s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_BFu17ll, Sf_BFu1s_BFu17ll)
//============================================================================



static void Test_Sf_BFu1s_BFu1c()
{
  {
    init_simple_test("Sf_BFu1s_BFu1c");
    static STRUCT_IF_C Sf_BFu1s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_BFu1c)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_BFu1c.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_BFu1c");
    set_bf_and_test(lv, v3, 0, 1, 1, 1, "Sf_BFu1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_BFu1c, Sf_BFu1s_BFu1c)
//============================================================================



static void Test_Sf_BFu1s_BFu1i()
{
  {
    init_simple_test("Sf_BFu1s_BFu1i");
    static STRUCT_IF_C Sf_BFu1s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_BFu1i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_BFu1i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_BFu1i");
    set_bf_and_test(lv, v3, 0, 1, 1, 1, "Sf_BFu1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_BFu1i, Sf_BFu1s_BFu1i)
//============================================================================



static void Test_Sf_BFu1s_BFu1ll()
{
  {
    init_simple_test("Sf_BFu1s_BFu1ll");
    static STRUCT_IF_C Sf_BFu1s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_BFu1ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_BFu1ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 1, 1, 1, "Sf_BFu1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_BFu1ll, Sf_BFu1s_BFu1ll)
//============================================================================



static void Test_Sf_BFu1s_BFu1s()
{
  {
    init_simple_test("Sf_BFu1s_BFu1s");
    static STRUCT_IF_C Sf_BFu1s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_BFu1s)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_BFu1s.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_BFu1s");
    set_bf_and_test(lv, v3, 0, 1, 1, 1, "Sf_BFu1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_BFu1s, Sf_BFu1s_BFu1s)
//============================================================================



static void Test_Sf_BFu1s_BFu31i()
{
  {
    init_simple_test("Sf_BFu1s_BFu31i");
    static STRUCT_IF_C Sf_BFu1s_BFu31i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu1s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_BFu31i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_BFu31i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_BFu31i");
    set_bf_and_test(lv, v3, 0, 1, 31, 1, "Sf_BFu1s_BFu31i");
    set_bf_and_test(lv, v3, 0, 1, 31, hide_ull(1LL<<30), "Sf_BFu1s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_BFu31i, Sf_BFu1s_BFu31i)
//============================================================================



static void Test_Sf_BFu1s_BFu31ll()
{
  {
    init_simple_test("Sf_BFu1s_BFu31ll");
    static STRUCT_IF_C Sf_BFu1s_BFu31ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu1s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_BFu31ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_BFu31ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_BFu31ll");
    set_bf_and_test(lv, v3, 0, 1, 31, 1, "Sf_BFu1s_BFu31ll");
    set_bf_and_test(lv, v3, 0, 1, 31, hide_ull(1LL<<30), "Sf_BFu1s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_BFu31ll, Sf_BFu1s_BFu31ll)
//============================================================================



static void Test_Sf_BFu1s_BFu32i()
{
  {
    init_simple_test("Sf_BFu1s_BFu32i");
    static STRUCT_IF_C Sf_BFu1s_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu1s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_BFu32i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_BFu32i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_BFu32i");
    set_bf_and_test(lv, v3, 0, 1, 32, 1, "Sf_BFu1s_BFu32i");
    set_bf_and_test(lv, v3, 0, 1, 32, hide_ull(1LL<<31), "Sf_BFu1s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_BFu32i, Sf_BFu1s_BFu32i)
//============================================================================



static void Test_Sf_BFu1s_BFu32ll()
{
  {
    init_simple_test("Sf_BFu1s_BFu32ll");
    static STRUCT_IF_C Sf_BFu1s_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu1s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_BFu32ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_BFu32ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_BFu32ll");
    set_bf_and_test(lv, v3, 0, 1, 32, 1, "Sf_BFu1s_BFu32ll");
    set_bf_and_test(lv, v3, 0, 1, 32, hide_ull(1LL<<31), "Sf_BFu1s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_BFu32ll, Sf_BFu1s_BFu32ll)
//============================================================================



static void Test_Sf_BFu1s_BFu33()
{
  {
    init_simple_test("Sf_BFu1s_BFu33");
    static STRUCT_IF_C Sf_BFu1s_BFu33 lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu1s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_BFu33)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_BFu33.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_BFu33");
    set_bf_and_test(lv, v3, 0, 1, 33, 1, "Sf_BFu1s_BFu33");
    set_bf_and_test(lv, v3, 0, 1, 33, hide_ull(1LL<<32), "Sf_BFu1s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_BFu33, Sf_BFu1s_BFu33)
//============================================================================



static void Test_Sf_BFu1s_BFu7c()
{
  {
    init_simple_test("Sf_BFu1s_BFu7c");
    static STRUCT_IF_C Sf_BFu1s_BFu7c lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_BFu7c)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_BFu7c.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_BFu7c");
    set_bf_and_test(lv, v3, 0, 1, 7, 1, "Sf_BFu1s_BFu7c");
    set_bf_and_test(lv, v3, 0, 1, 7, hide_ull(1LL<<6), "Sf_BFu1s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_BFu7c, Sf_BFu1s_BFu7c)
//============================================================================



static void Test_Sf_BFu1s_BFu7i()
{
  {
    init_simple_test("Sf_BFu1s_BFu7i");
    static STRUCT_IF_C Sf_BFu1s_BFu7i lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_BFu7i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_BFu7i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_BFu7i");
    set_bf_and_test(lv, v3, 0, 1, 7, 1, "Sf_BFu1s_BFu7i");
    set_bf_and_test(lv, v3, 0, 1, 7, hide_ull(1LL<<6), "Sf_BFu1s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_BFu7i, Sf_BFu1s_BFu7i)
//============================================================================



static void Test_Sf_BFu1s_BFu7ll()
{
  {
    init_simple_test("Sf_BFu1s_BFu7ll");
    static STRUCT_IF_C Sf_BFu1s_BFu7ll lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_BFu7ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_BFu7ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_BFu7ll");
    set_bf_and_test(lv, v3, 0, 1, 7, 1, "Sf_BFu1s_BFu7ll");
    set_bf_and_test(lv, v3, 0, 1, 7, hide_ull(1LL<<6), "Sf_BFu1s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_BFu7ll, Sf_BFu1s_BFu7ll)
//============================================================================



static void Test_Sf_BFu1s_BFu7s()
{
  {
    init_simple_test("Sf_BFu1s_BFu7s");
    static STRUCT_IF_C Sf_BFu1s_BFu7s lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_BFu7s)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_BFu7s.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_BFu7s");
    set_bf_and_test(lv, v3, 0, 1, 7, 1, "Sf_BFu1s_BFu7s");
    set_bf_and_test(lv, v3, 0, 1, 7, hide_ull(1LL<<6), "Sf_BFu1s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_BFu7s, Sf_BFu1s_BFu7s)
//============================================================================



static void Test_Sf_BFu1s_BFu8c()
{
  {
    init_simple_test("Sf_BFu1s_BFu8c");
    static STRUCT_IF_C Sf_BFu1s_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_BFu8c)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_BFu8c.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_BFu8c");
    set_bf_and_test(lv, v3, 0, 1, 8, 1, "Sf_BFu1s_BFu8c");
    set_bf_and_test(lv, v3, 0, 1, 8, hide_ull(1LL<<7), "Sf_BFu1s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_BFu8c, Sf_BFu1s_BFu8c)
//============================================================================



static void Test_Sf_BFu1s_BFu8i()
{
  {
    init_simple_test("Sf_BFu1s_BFu8i");
    static STRUCT_IF_C Sf_BFu1s_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_BFu8i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_BFu8i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_BFu8i");
    set_bf_and_test(lv, v3, 0, 1, 8, 1, "Sf_BFu1s_BFu8i");
    set_bf_and_test(lv, v3, 0, 1, 8, hide_ull(1LL<<7), "Sf_BFu1s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_BFu8i, Sf_BFu1s_BFu8i)
//============================================================================



static void Test_Sf_BFu1s_BFu8ll()
{
  {
    init_simple_test("Sf_BFu1s_BFu8ll");
    static STRUCT_IF_C Sf_BFu1s_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_BFu8ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_BFu8ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_BFu8ll");
    set_bf_and_test(lv, v3, 0, 1, 8, 1, "Sf_BFu1s_BFu8ll");
    set_bf_and_test(lv, v3, 0, 1, 8, hide_ull(1LL<<7), "Sf_BFu1s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_BFu8ll, Sf_BFu1s_BFu8ll)
//============================================================================



static void Test_Sf_BFu1s_BFu8s()
{
  {
    init_simple_test("Sf_BFu1s_BFu8s");
    static STRUCT_IF_C Sf_BFu1s_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_BFu8s)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_BFu8s.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_BFu8s");
    set_bf_and_test(lv, v3, 0, 1, 8, 1, "Sf_BFu1s_BFu8s");
    set_bf_and_test(lv, v3, 0, 1, 8, hide_ull(1LL<<7), "Sf_BFu1s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_BFu8s, Sf_BFu1s_BFu8s)
//============================================================================



static void Test_Sf_BFu1s_BFu9i()
{
  {
    init_simple_test("Sf_BFu1s_BFu9i");
    static STRUCT_IF_C Sf_BFu1s_BFu9i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_BFu9i)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_BFu9i.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_BFu9i");
    set_bf_and_test(lv, v3, 0, 1, 9, 1, "Sf_BFu1s_BFu9i");
    set_bf_and_test(lv, v3, 0, 1, 9, hide_ull(1LL<<8), "Sf_BFu1s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_BFu9i, Sf_BFu1s_BFu9i)
//============================================================================



static void Test_Sf_BFu1s_BFu9ll()
{
  {
    init_simple_test("Sf_BFu1s_BFu9ll");
    static STRUCT_IF_C Sf_BFu1s_BFu9ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_BFu9ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_BFu9ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_BFu9ll");
    set_bf_and_test(lv, v3, 0, 1, 9, 1, "Sf_BFu1s_BFu9ll");
    set_bf_and_test(lv, v3, 0, 1, 9, hide_ull(1LL<<8), "Sf_BFu1s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_BFu9ll, Sf_BFu1s_BFu9ll)
//============================================================================



static void Test_Sf_BFu1s_BFu9s()
{
  {
    init_simple_test("Sf_BFu1s_BFu9s");
    static STRUCT_IF_C Sf_BFu1s_BFu9s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_BFu9s)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_BFu9s.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_BFu9s");
    set_bf_and_test(lv, v3, 0, 1, 9, 1, "Sf_BFu1s_BFu9s");
    set_bf_and_test(lv, v3, 0, 1, 9, hide_ull(1LL<<8), "Sf_BFu1s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_BFu9s, Sf_BFu1s_BFu9s)
//============================================================================



static void Test_Sf_BFu1s_C()
{
  {
    init_simple_test("Sf_BFu1s_C");
    static STRUCT_IF_C Sf_BFu1s_C lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1s_C)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_C)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_C.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_C");
    check_field_offset(lv, v3, 1, "Sf_BFu1s_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_C, Sf_BFu1s_C)
//============================================================================



static void Test_Sf_BFu1s_D()
{
  {
    init_simple_test("Sf_BFu1s_D");
    static STRUCT_IF_C Sf_BFu1s_D lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu1s_D)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_D)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_D.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_D");
    check_field_offset(lv, v3, 1, "Sf_BFu1s_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_D, Sf_BFu1s_D)
//============================================================================



static void Test_Sf_BFu1s_F()
{
  {
    init_simple_test("Sf_BFu1s_F");
    static STRUCT_IF_C Sf_BFu1s_F lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu1s_F)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_F)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_F.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_F");
    check_field_offset(lv, v3, 1, "Sf_BFu1s_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_F, Sf_BFu1s_F)
//============================================================================



static void Test_Sf_BFu1s_I()
{
  {
    init_simple_test("Sf_BFu1s_I");
    static STRUCT_IF_C Sf_BFu1s_I lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu1s_I)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_I)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_I.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_I");
    check_field_offset(lv, v3, 1, "Sf_BFu1s_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_I, Sf_BFu1s_I)
//============================================================================



static void Test_Sf_BFu1s_Ip()
{
  {
    init_simple_test("Sf_BFu1s_Ip");
    static STRUCT_IF_C Sf_BFu1s_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Sf_BFu1s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_Ip)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_Ip.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_Ip");
    check_field_offset(lv, v3, 1, "Sf_BFu1s_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_Ip, Sf_BFu1s_Ip)
//============================================================================



static void Test_Sf_BFu1s_L()
{
  {
    init_simple_test("Sf_BFu1s_L");
    static STRUCT_IF_C Sf_BFu1s_L lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu1s_L)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_L)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_L.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_L");
    check_field_offset(lv, v3, 1, "Sf_BFu1s_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_L, Sf_BFu1s_L)
//============================================================================



static void Test_Sf_BFu1s_S()
{
  {
    init_simple_test("Sf_BFu1s_S");
    static STRUCT_IF_C Sf_BFu1s_S lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu1s_S)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_S)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_S.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_S");
    check_field_offset(lv, v3, 1, "Sf_BFu1s_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_S, Sf_BFu1s_S)
//============================================================================



static void Test_Sf_BFu1s_Sf()
{
  {
    init_simple_test("Sf_BFu1s_Sf");
    static STRUCT_IF_C Sf_BFu1s_Sf lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu1s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_Sf)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_Sf.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_Sf");
    check_field_offset(lv, v3, 1, "Sf_BFu1s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_Sf, Sf_BFu1s_Sf)
//============================================================================



static void Test_Sf_BFu1s_Uc()
{
  {
    init_simple_test("Sf_BFu1s_Uc");
    static STRUCT_IF_C Sf_BFu1s_Uc lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu1s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_Uc)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_Uc.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_Uc");
    check_field_offset(lv, v3, 1, "Sf_BFu1s_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_Uc, Sf_BFu1s_Uc)
//============================================================================



static void Test_Sf_BFu1s_Ui()
{
  {
    init_simple_test("Sf_BFu1s_Ui");
    static STRUCT_IF_C Sf_BFu1s_Ui lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu1s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_Ui)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_Ui.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_Ui");
    check_field_offset(lv, v3, 1, "Sf_BFu1s_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_Ui, Sf_BFu1s_Ui)
//============================================================================



static void Test_Sf_BFu1s_Ul()
{
  {
    init_simple_test("Sf_BFu1s_Ul");
    static STRUCT_IF_C Sf_BFu1s_Ul lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu1s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_Ul)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_Ul.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_Ul");
    check_field_offset(lv, v3, 1, "Sf_BFu1s_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_Ul, Sf_BFu1s_Ul)
//============================================================================



static void Test_Sf_BFu1s_Us()
{
  {
    init_simple_test("Sf_BFu1s_Us");
    static STRUCT_IF_C Sf_BFu1s_Us lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu1s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_Us)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_Us.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_Us");
    check_field_offset(lv, v3, 1, "Sf_BFu1s_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_Us, Sf_BFu1s_Us)
//============================================================================



static void Test_Sf_BFu1s_Vp()
{
  {
    init_simple_test("Sf_BFu1s_Vp");
    static STRUCT_IF_C Sf_BFu1s_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Sf_BFu1s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu1s_Vp)");
    check_field_offset(lv, v1, 0, "Sf_BFu1s_Vp.v1");
    set_bf_and_test(lv, v2, 0, 0, 1, 1, "Sf_BFu1s_Vp");
    check_field_offset(lv, v3, 1, "Sf_BFu1s_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu1s_Vp, Sf_BFu1s_Vp)
//============================================================================



static void Test_Sf_BFu31i()
{
  {
    init_simple_test("Sf_BFu31i");
    static STRUCT_IF_C Sf_BFu31i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i, Sf_BFu31i)
//============================================================================



static void Test_Sf_BFu31i_BFu15i()
{
  {
    init_simple_test("Sf_BFu31i_BFu15i");
    static STRUCT_IF_C Sf_BFu31i_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu31i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_BFu15i)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_BFu15i.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_BFu15i");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_BFu15i");
    set_bf_and_test(lv, v3, 3, 7, 15, 1, "Sf_BFu31i_BFu15i");
    set_bf_and_test(lv, v3, 3, 7, 15, hide_ull(1LL<<14), "Sf_BFu31i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_BFu15i, Sf_BFu31i_BFu15i)
//============================================================================



static void Test_Sf_BFu31i_BFu15ll()
{
  {
    init_simple_test("Sf_BFu31i_BFu15ll");
    static STRUCT_IF_C Sf_BFu31i_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu31i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_BFu15ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_BFu15ll");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 7, 15, 1, "Sf_BFu31i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 7, 15, hide_ull(1LL<<14), "Sf_BFu31i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_BFu15ll, Sf_BFu31i_BFu15ll)
//============================================================================



static void Test_Sf_BFu31i_BFu15s()
{
  {
    init_simple_test("Sf_BFu31i_BFu15s");
    static STRUCT_IF_C Sf_BFu31i_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu31i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_BFu15s)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_BFu15s.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_BFu15s");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_BFu15s");
    set_bf_and_test(lv, v3, 3, 7, 15, 1, "Sf_BFu31i_BFu15s");
    set_bf_and_test(lv, v3, 3, 7, 15, hide_ull(1LL<<14), "Sf_BFu31i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_BFu15s, Sf_BFu31i_BFu15s)
//============================================================================



static void Test_Sf_BFu31i_BFu16i()
{
  {
    init_simple_test("Sf_BFu31i_BFu16i");
    static STRUCT_IF_C Sf_BFu31i_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu31i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_BFu16i)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_BFu16i.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_BFu16i");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_BFu16i");
    set_bf_and_test(lv, v3, 3, 7, 16, 1, "Sf_BFu31i_BFu16i");
    set_bf_and_test(lv, v3, 3, 7, 16, hide_ull(1LL<<15), "Sf_BFu31i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_BFu16i, Sf_BFu31i_BFu16i)
//============================================================================



static void Test_Sf_BFu31i_BFu16ll()
{
  {
    init_simple_test("Sf_BFu31i_BFu16ll");
    static STRUCT_IF_C Sf_BFu31i_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu31i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_BFu16ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_BFu16ll");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_BFu16ll");
    set_bf_and_test(lv, v3, 3, 7, 16, 1, "Sf_BFu31i_BFu16ll");
    set_bf_and_test(lv, v3, 3, 7, 16, hide_ull(1LL<<15), "Sf_BFu31i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_BFu16ll, Sf_BFu31i_BFu16ll)
//============================================================================



static void Test_Sf_BFu31i_BFu16s()
{
  {
    init_simple_test("Sf_BFu31i_BFu16s");
    static STRUCT_IF_C Sf_BFu31i_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu31i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_BFu16s)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_BFu16s.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_BFu16s");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_BFu16s");
    set_bf_and_test(lv, v3, 3, 7, 16, 1, "Sf_BFu31i_BFu16s");
    set_bf_and_test(lv, v3, 3, 7, 16, hide_ull(1LL<<15), "Sf_BFu31i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_BFu16s, Sf_BFu31i_BFu16s)
//============================================================================



static void Test_Sf_BFu31i_BFu17i()
{
  {
    init_simple_test("Sf_BFu31i_BFu17i");
    static STRUCT_IF_C Sf_BFu31i_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu31i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_BFu17i)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_BFu17i.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_BFu17i");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_BFu17i");
    set_bf_and_test(lv, v3, 3, 7, 17, 1, "Sf_BFu31i_BFu17i");
    set_bf_and_test(lv, v3, 3, 7, 17, hide_ull(1LL<<16), "Sf_BFu31i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_BFu17i, Sf_BFu31i_BFu17i)
//============================================================================



static void Test_Sf_BFu31i_BFu17ll()
{
  {
    init_simple_test("Sf_BFu31i_BFu17ll");
    static STRUCT_IF_C Sf_BFu31i_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu31i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_BFu17ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_BFu17ll");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_BFu17ll");
    set_bf_and_test(lv, v3, 3, 7, 17, 1, "Sf_BFu31i_BFu17ll");
    set_bf_and_test(lv, v3, 3, 7, 17, hide_ull(1LL<<16), "Sf_BFu31i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_BFu17ll, Sf_BFu31i_BFu17ll)
//============================================================================



static void Test_Sf_BFu31i_BFu1c()
{
  {
    init_simple_test("Sf_BFu31i_BFu1c");
    static STRUCT_IF_C Sf_BFu31i_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu31i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_BFu1c)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_BFu1c.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_BFu1c");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_BFu1c");
    set_bf_and_test(lv, v3, 3, 7, 1, 1, "Sf_BFu31i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_BFu1c, Sf_BFu31i_BFu1c)
//============================================================================



static void Test_Sf_BFu31i_BFu1i()
{
  {
    init_simple_test("Sf_BFu31i_BFu1i");
    static STRUCT_IF_C Sf_BFu31i_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu31i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_BFu1i)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_BFu1i.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_BFu1i");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_BFu1i");
    set_bf_and_test(lv, v3, 3, 7, 1, 1, "Sf_BFu31i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_BFu1i, Sf_BFu31i_BFu1i)
//============================================================================



static void Test_Sf_BFu31i_BFu1ll()
{
  {
    init_simple_test("Sf_BFu31i_BFu1ll");
    static STRUCT_IF_C Sf_BFu31i_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu31i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_BFu1ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_BFu1ll");
    set_bf_and_test(lv, v3, 3, 7, 1, 1, "Sf_BFu31i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_BFu1ll, Sf_BFu31i_BFu1ll)
//============================================================================



static void Test_Sf_BFu31i_BFu1s()
{
  {
    init_simple_test("Sf_BFu31i_BFu1s");
    static STRUCT_IF_C Sf_BFu31i_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu31i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_BFu1s)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_BFu1s.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_BFu1s");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_BFu1s");
    set_bf_and_test(lv, v3, 3, 7, 1, 1, "Sf_BFu31i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_BFu1s, Sf_BFu31i_BFu1s)
//============================================================================



static void Test_Sf_BFu31i_BFu31i()
{
  {
    init_simple_test("Sf_BFu31i_BFu31i");
    static STRUCT_IF_C Sf_BFu31i_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu31i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_BFu31i)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_BFu31i.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_BFu31i");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_BFu31i");
    set_bf_and_test(lv, v3, 3, 7, 31, 1, "Sf_BFu31i_BFu31i");
    set_bf_and_test(lv, v3, 3, 7, 31, hide_ull(1LL<<30), "Sf_BFu31i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_BFu31i, Sf_BFu31i_BFu31i)
//============================================================================



static void Test_Sf_BFu31i_BFu31ll()
{
  {
    init_simple_test("Sf_BFu31i_BFu31ll");
    static STRUCT_IF_C Sf_BFu31i_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu31i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_BFu31ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_BFu31ll");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_BFu31ll");
    set_bf_and_test(lv, v3, 3, 7, 31, 1, "Sf_BFu31i_BFu31ll");
    set_bf_and_test(lv, v3, 3, 7, 31, hide_ull(1LL<<30), "Sf_BFu31i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_BFu31ll, Sf_BFu31i_BFu31ll)
//============================================================================



static void Test_Sf_BFu31i_BFu32i()
{
  {
    init_simple_test("Sf_BFu31i_BFu32i");
    static STRUCT_IF_C Sf_BFu31i_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu31i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_BFu32i)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_BFu32i.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_BFu32i");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_BFu32i");
    set_bf_and_test(lv, v3, 3, 7, 32, 1, "Sf_BFu31i_BFu32i");
    set_bf_and_test(lv, v3, 3, 7, 32, hide_ull(1LL<<31), "Sf_BFu31i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_BFu32i, Sf_BFu31i_BFu32i)
//============================================================================



static void Test_Sf_BFu31i_BFu32ll()
{
  {
    init_simple_test("Sf_BFu31i_BFu32ll");
    static STRUCT_IF_C Sf_BFu31i_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu31i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_BFu32ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_BFu32ll");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_BFu32ll");
    set_bf_and_test(lv, v3, 3, 7, 32, 1, "Sf_BFu31i_BFu32ll");
    set_bf_and_test(lv, v3, 3, 7, 32, hide_ull(1LL<<31), "Sf_BFu31i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_BFu32ll, Sf_BFu31i_BFu32ll)
//============================================================================



static void Test_Sf_BFu31i_BFu33()
{
  {
    init_simple_test("Sf_BFu31i_BFu33");
    static STRUCT_IF_C Sf_BFu31i_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu31i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_BFu33)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_BFu33.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_BFu33");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_BFu33");
    set_bf_and_test(lv, v3, 3, 7, 33, 1, "Sf_BFu31i_BFu33");
    set_bf_and_test(lv, v3, 3, 7, 33, hide_ull(1LL<<32), "Sf_BFu31i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_BFu33, Sf_BFu31i_BFu33)
//============================================================================



static void Test_Sf_BFu31i_BFu7c()
{
  {
    init_simple_test("Sf_BFu31i_BFu7c");
    static STRUCT_IF_C Sf_BFu31i_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu31i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_BFu7c)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_BFu7c.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_BFu7c");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_BFu7c");
    set_bf_and_test(lv, v3, 3, 7, 7, 1, "Sf_BFu31i_BFu7c");
    set_bf_and_test(lv, v3, 3, 7, 7, hide_ull(1LL<<6), "Sf_BFu31i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_BFu7c, Sf_BFu31i_BFu7c)
//============================================================================



static void Test_Sf_BFu31i_BFu7i()
{
  {
    init_simple_test("Sf_BFu31i_BFu7i");
    static STRUCT_IF_C Sf_BFu31i_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu31i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_BFu7i)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_BFu7i.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_BFu7i");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_BFu7i");
    set_bf_and_test(lv, v3, 3, 7, 7, 1, "Sf_BFu31i_BFu7i");
    set_bf_and_test(lv, v3, 3, 7, 7, hide_ull(1LL<<6), "Sf_BFu31i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_BFu7i, Sf_BFu31i_BFu7i)
//============================================================================



static void Test_Sf_BFu31i_BFu7ll()
{
  {
    init_simple_test("Sf_BFu31i_BFu7ll");
    static STRUCT_IF_C Sf_BFu31i_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu31i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_BFu7ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_BFu7ll");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_BFu7ll");
    set_bf_and_test(lv, v3, 3, 7, 7, 1, "Sf_BFu31i_BFu7ll");
    set_bf_and_test(lv, v3, 3, 7, 7, hide_ull(1LL<<6), "Sf_BFu31i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_BFu7ll, Sf_BFu31i_BFu7ll)
//============================================================================



static void Test_Sf_BFu31i_BFu7s()
{
  {
    init_simple_test("Sf_BFu31i_BFu7s");
    static STRUCT_IF_C Sf_BFu31i_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu31i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_BFu7s)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_BFu7s.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_BFu7s");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_BFu7s");
    set_bf_and_test(lv, v3, 3, 7, 7, 1, "Sf_BFu31i_BFu7s");
    set_bf_and_test(lv, v3, 3, 7, 7, hide_ull(1LL<<6), "Sf_BFu31i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_BFu7s, Sf_BFu31i_BFu7s)
//============================================================================



static void Test_Sf_BFu31i_BFu8c()
{
  {
    init_simple_test("Sf_BFu31i_BFu8c");
    static STRUCT_IF_C Sf_BFu31i_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu31i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_BFu8c)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_BFu8c.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_BFu8c");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_BFu8c");
    set_bf_and_test(lv, v3, 3, 7, 8, 1, "Sf_BFu31i_BFu8c");
    set_bf_and_test(lv, v3, 3, 7, 8, hide_ull(1LL<<7), "Sf_BFu31i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_BFu8c, Sf_BFu31i_BFu8c)
//============================================================================



static void Test_Sf_BFu31i_BFu8i()
{
  {
    init_simple_test("Sf_BFu31i_BFu8i");
    static STRUCT_IF_C Sf_BFu31i_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu31i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_BFu8i)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_BFu8i.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_BFu8i");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_BFu8i");
    set_bf_and_test(lv, v3, 3, 7, 8, 1, "Sf_BFu31i_BFu8i");
    set_bf_and_test(lv, v3, 3, 7, 8, hide_ull(1LL<<7), "Sf_BFu31i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_BFu8i, Sf_BFu31i_BFu8i)
//============================================================================



static void Test_Sf_BFu31i_BFu8ll()
{
  {
    init_simple_test("Sf_BFu31i_BFu8ll");
    static STRUCT_IF_C Sf_BFu31i_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu31i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_BFu8ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_BFu8ll");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_BFu8ll");
    set_bf_and_test(lv, v3, 3, 7, 8, 1, "Sf_BFu31i_BFu8ll");
    set_bf_and_test(lv, v3, 3, 7, 8, hide_ull(1LL<<7), "Sf_BFu31i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_BFu8ll, Sf_BFu31i_BFu8ll)
//============================================================================



static void Test_Sf_BFu31i_BFu8s()
{
  {
    init_simple_test("Sf_BFu31i_BFu8s");
    static STRUCT_IF_C Sf_BFu31i_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu31i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_BFu8s)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_BFu8s.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_BFu8s");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_BFu8s");
    set_bf_and_test(lv, v3, 3, 7, 8, 1, "Sf_BFu31i_BFu8s");
    set_bf_and_test(lv, v3, 3, 7, 8, hide_ull(1LL<<7), "Sf_BFu31i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_BFu8s, Sf_BFu31i_BFu8s)
//============================================================================



static void Test_Sf_BFu31i_BFu9i()
{
  {
    init_simple_test("Sf_BFu31i_BFu9i");
    static STRUCT_IF_C Sf_BFu31i_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu31i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_BFu9i)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_BFu9i.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_BFu9i");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_BFu9i");
    set_bf_and_test(lv, v3, 3, 7, 9, 1, "Sf_BFu31i_BFu9i");
    set_bf_and_test(lv, v3, 3, 7, 9, hide_ull(1LL<<8), "Sf_BFu31i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_BFu9i, Sf_BFu31i_BFu9i)
//============================================================================



static void Test_Sf_BFu31i_BFu9ll()
{
  {
    init_simple_test("Sf_BFu31i_BFu9ll");
    static STRUCT_IF_C Sf_BFu31i_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu31i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_BFu9ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_BFu9ll");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_BFu9ll");
    set_bf_and_test(lv, v3, 3, 7, 9, 1, "Sf_BFu31i_BFu9ll");
    set_bf_and_test(lv, v3, 3, 7, 9, hide_ull(1LL<<8), "Sf_BFu31i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_BFu9ll, Sf_BFu31i_BFu9ll)
//============================================================================



static void Test_Sf_BFu31i_BFu9s()
{
  {
    init_simple_test("Sf_BFu31i_BFu9s");
    static STRUCT_IF_C Sf_BFu31i_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu31i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_BFu9s)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_BFu9s.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_BFu9s");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_BFu9s");
    set_bf_and_test(lv, v3, 3, 7, 9, 1, "Sf_BFu31i_BFu9s");
    set_bf_and_test(lv, v3, 3, 7, 9, hide_ull(1LL<<8), "Sf_BFu31i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_BFu9s, Sf_BFu31i_BFu9s)
//============================================================================



static void Test_Sf_BFu31i_C()
{
  {
    init_simple_test("Sf_BFu31i_C");
    static STRUCT_IF_C Sf_BFu31i_C lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu31i_C)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_C)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_C.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_C");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_C");
    check_field_offset(lv, v3, 4, "Sf_BFu31i_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_C, Sf_BFu31i_C)
//============================================================================



static void Test_Sf_BFu31i_D()
{
  {
    init_simple_test("Sf_BFu31i_D");
    static STRUCT_IF_C Sf_BFu31i_D lv;
    check2(sizeof(lv), 12, "sizeof(Sf_BFu31i_D)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_D)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_D.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_D");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_D");
    check_field_offset(lv, v3, 4, "Sf_BFu31i_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_D, Sf_BFu31i_D)
//============================================================================



static void Test_Sf_BFu31i_F()
{
  {
    init_simple_test("Sf_BFu31i_F");
    static STRUCT_IF_C Sf_BFu31i_F lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu31i_F)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_F)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_F.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_F");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_F");
    check_field_offset(lv, v3, 4, "Sf_BFu31i_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_F, Sf_BFu31i_F)
//============================================================================



static void Test_Sf_BFu31i_I()
{
  {
    init_simple_test("Sf_BFu31i_I");
    static STRUCT_IF_C Sf_BFu31i_I lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu31i_I)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_I)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_I.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_I");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_I");
    check_field_offset(lv, v3, 4, "Sf_BFu31i_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_I, Sf_BFu31i_I)
//============================================================================



static void Test_Sf_BFu31i_Ip()
{
  {
    init_simple_test("Sf_BFu31i_Ip");
    static STRUCT_IF_C Sf_BFu31i_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Sf_BFu31i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_Ip)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_Ip.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_Ip");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_Ip");
    check_field_offset(lv, v3, 4, "Sf_BFu31i_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_Ip, Sf_BFu31i_Ip)
//============================================================================



static void Test_Sf_BFu31i_L()
{
  {
    init_simple_test("Sf_BFu31i_L");
    static STRUCT_IF_C Sf_BFu31i_L lv;
    check2(sizeof(lv), 12, "sizeof(Sf_BFu31i_L)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_L)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_L.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_L");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_L");
    check_field_offset(lv, v3, 4, "Sf_BFu31i_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_L, Sf_BFu31i_L)
//============================================================================



static void Test_Sf_BFu31i_S()
{
  {
    init_simple_test("Sf_BFu31i_S");
    static STRUCT_IF_C Sf_BFu31i_S lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu31i_S)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_S)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_S.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_S");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_S");
    check_field_offset(lv, v3, 4, "Sf_BFu31i_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_S, Sf_BFu31i_S)
//============================================================================



static void Test_Sf_BFu31i_Sf()
{
  {
    init_simple_test("Sf_BFu31i_Sf");
    static STRUCT_IF_C Sf_BFu31i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu31i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_Sf)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_Sf.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_Sf");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_Sf");
    check_field_offset(lv, v3, 4, "Sf_BFu31i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_Sf, Sf_BFu31i_Sf)
//============================================================================



static void Test_Sf_BFu31i_Uc()
{
  {
    init_simple_test("Sf_BFu31i_Uc");
    static STRUCT_IF_C Sf_BFu31i_Uc lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu31i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_Uc)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_Uc.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_Uc");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_Uc");
    check_field_offset(lv, v3, 4, "Sf_BFu31i_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_Uc, Sf_BFu31i_Uc)
//============================================================================



static void Test_Sf_BFu31i_Ui()
{
  {
    init_simple_test("Sf_BFu31i_Ui");
    static STRUCT_IF_C Sf_BFu31i_Ui lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu31i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_Ui)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_Ui.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_Ui");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_Ui");
    check_field_offset(lv, v3, 4, "Sf_BFu31i_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_Ui, Sf_BFu31i_Ui)
//============================================================================



static void Test_Sf_BFu31i_Ul()
{
  {
    init_simple_test("Sf_BFu31i_Ul");
    static STRUCT_IF_C Sf_BFu31i_Ul lv;
    check2(sizeof(lv), 12, "sizeof(Sf_BFu31i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_Ul)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_Ul.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_Ul");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_Ul");
    check_field_offset(lv, v3, 4, "Sf_BFu31i_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_Ul, Sf_BFu31i_Ul)
//============================================================================



static void Test_Sf_BFu31i_Us()
{
  {
    init_simple_test("Sf_BFu31i_Us");
    static STRUCT_IF_C Sf_BFu31i_Us lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu31i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_Us)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_Us.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_Us");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_Us");
    check_field_offset(lv, v3, 4, "Sf_BFu31i_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_Us, Sf_BFu31i_Us)
//============================================================================



static void Test_Sf_BFu31i_Vp()
{
  {
    init_simple_test("Sf_BFu31i_Vp");
    static STRUCT_IF_C Sf_BFu31i_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Sf_BFu31i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31i_Vp)");
    check_field_offset(lv, v1, 0, "Sf_BFu31i_Vp.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31i_Vp");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31i_Vp");
    check_field_offset(lv, v3, 4, "Sf_BFu31i_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31i_Vp, Sf_BFu31i_Vp)
//============================================================================



static void Test_Sf_BFu31ll()
{
  {
    init_simple_test("Sf_BFu31ll");
    static STRUCT_IF_C Sf_BFu31ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll, Sf_BFu31ll)
//============================================================================



static void Test_Sf_BFu31ll_BFu15i()
{
  {
    init_simple_test("Sf_BFu31ll_BFu15i");
    static STRUCT_IF_C Sf_BFu31ll_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu31ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_BFu15i)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_BFu15i");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 7, 15, 1, "Sf_BFu31ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 7, 15, hide_ull(1LL<<14), "Sf_BFu31ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_BFu15i, Sf_BFu31ll_BFu15i)
//============================================================================



static void Test_Sf_BFu31ll_BFu15ll()
{
  {
    init_simple_test("Sf_BFu31ll_BFu15ll");
    static STRUCT_IF_C Sf_BFu31ll_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu31ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_BFu15ll");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 7, 15, 1, "Sf_BFu31ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 7, 15, hide_ull(1LL<<14), "Sf_BFu31ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_BFu15ll, Sf_BFu31ll_BFu15ll)
//============================================================================



static void Test_Sf_BFu31ll_BFu15s()
{
  {
    init_simple_test("Sf_BFu31ll_BFu15s");
    static STRUCT_IF_C Sf_BFu31ll_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu31ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_BFu15s)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_BFu15s");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 7, 15, 1, "Sf_BFu31ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 7, 15, hide_ull(1LL<<14), "Sf_BFu31ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_BFu15s, Sf_BFu31ll_BFu15s)
//============================================================================



static void Test_Sf_BFu31ll_BFu16i()
{
  {
    init_simple_test("Sf_BFu31ll_BFu16i");
    static STRUCT_IF_C Sf_BFu31ll_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu31ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_BFu16i)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_BFu16i");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_BFu16i");
    set_bf_and_test(lv, v3, 3, 7, 16, 1, "Sf_BFu31ll_BFu16i");
    set_bf_and_test(lv, v3, 3, 7, 16, hide_ull(1LL<<15), "Sf_BFu31ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_BFu16i, Sf_BFu31ll_BFu16i)
//============================================================================



static void Test_Sf_BFu31ll_BFu16ll()
{
  {
    init_simple_test("Sf_BFu31ll_BFu16ll");
    static STRUCT_IF_C Sf_BFu31ll_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu31ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_BFu16ll");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_BFu16ll");
    set_bf_and_test(lv, v3, 3, 7, 16, 1, "Sf_BFu31ll_BFu16ll");
    set_bf_and_test(lv, v3, 3, 7, 16, hide_ull(1LL<<15), "Sf_BFu31ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_BFu16ll, Sf_BFu31ll_BFu16ll)
//============================================================================



static void Test_Sf_BFu31ll_BFu16s()
{
  {
    init_simple_test("Sf_BFu31ll_BFu16s");
    static STRUCT_IF_C Sf_BFu31ll_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu31ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_BFu16s)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_BFu16s");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_BFu16s");
    set_bf_and_test(lv, v3, 3, 7, 16, 1, "Sf_BFu31ll_BFu16s");
    set_bf_and_test(lv, v3, 3, 7, 16, hide_ull(1LL<<15), "Sf_BFu31ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_BFu16s, Sf_BFu31ll_BFu16s)
//============================================================================



static void Test_Sf_BFu31ll_BFu17i()
{
  {
    init_simple_test("Sf_BFu31ll_BFu17i");
    static STRUCT_IF_C Sf_BFu31ll_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu31ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_BFu17i)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_BFu17i");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_BFu17i");
    set_bf_and_test(lv, v3, 3, 7, 17, 1, "Sf_BFu31ll_BFu17i");
    set_bf_and_test(lv, v3, 3, 7, 17, hide_ull(1LL<<16), "Sf_BFu31ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_BFu17i, Sf_BFu31ll_BFu17i)
//============================================================================



static void Test_Sf_BFu31ll_BFu17ll()
{
  {
    init_simple_test("Sf_BFu31ll_BFu17ll");
    static STRUCT_IF_C Sf_BFu31ll_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu31ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_BFu17ll");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_BFu17ll");
    set_bf_and_test(lv, v3, 3, 7, 17, 1, "Sf_BFu31ll_BFu17ll");
    set_bf_and_test(lv, v3, 3, 7, 17, hide_ull(1LL<<16), "Sf_BFu31ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_BFu17ll, Sf_BFu31ll_BFu17ll)
//============================================================================



static void Test_Sf_BFu31ll_BFu1c()
{
  {
    init_simple_test("Sf_BFu31ll_BFu1c");
    static STRUCT_IF_C Sf_BFu31ll_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu31ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_BFu1c)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_BFu1c");
    set_bf_and_test(lv, v3, 3, 7, 1, 1, "Sf_BFu31ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_BFu1c, Sf_BFu31ll_BFu1c)
//============================================================================



static void Test_Sf_BFu31ll_BFu1i()
{
  {
    init_simple_test("Sf_BFu31ll_BFu1i");
    static STRUCT_IF_C Sf_BFu31ll_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu31ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_BFu1i)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_BFu1i");
    set_bf_and_test(lv, v3, 3, 7, 1, 1, "Sf_BFu31ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_BFu1i, Sf_BFu31ll_BFu1i)
//============================================================================



static void Test_Sf_BFu31ll_BFu1ll()
{
  {
    init_simple_test("Sf_BFu31ll_BFu1ll");
    static STRUCT_IF_C Sf_BFu31ll_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu31ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_BFu1ll");
    set_bf_and_test(lv, v3, 3, 7, 1, 1, "Sf_BFu31ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_BFu1ll, Sf_BFu31ll_BFu1ll)
//============================================================================



static void Test_Sf_BFu31ll_BFu1s()
{
  {
    init_simple_test("Sf_BFu31ll_BFu1s");
    static STRUCT_IF_C Sf_BFu31ll_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu31ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_BFu1s)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_BFu1s");
    set_bf_and_test(lv, v3, 3, 7, 1, 1, "Sf_BFu31ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_BFu1s, Sf_BFu31ll_BFu1s)
//============================================================================



static void Test_Sf_BFu31ll_BFu31i()
{
  {
    init_simple_test("Sf_BFu31ll_BFu31i");
    static STRUCT_IF_C Sf_BFu31ll_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu31ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_BFu31i)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_BFu31i");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_BFu31i");
    set_bf_and_test(lv, v3, 3, 7, 31, 1, "Sf_BFu31ll_BFu31i");
    set_bf_and_test(lv, v3, 3, 7, 31, hide_ull(1LL<<30), "Sf_BFu31ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_BFu31i, Sf_BFu31ll_BFu31i)
//============================================================================



static void Test_Sf_BFu31ll_BFu31ll()
{
  {
    init_simple_test("Sf_BFu31ll_BFu31ll");
    static STRUCT_IF_C Sf_BFu31ll_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu31ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_BFu31ll");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_BFu31ll");
    set_bf_and_test(lv, v3, 3, 7, 31, 1, "Sf_BFu31ll_BFu31ll");
    set_bf_and_test(lv, v3, 3, 7, 31, hide_ull(1LL<<30), "Sf_BFu31ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_BFu31ll, Sf_BFu31ll_BFu31ll)
//============================================================================



static void Test_Sf_BFu31ll_BFu32i()
{
  {
    init_simple_test("Sf_BFu31ll_BFu32i");
    static STRUCT_IF_C Sf_BFu31ll_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu31ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_BFu32i)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_BFu32i");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_BFu32i");
    set_bf_and_test(lv, v3, 3, 7, 32, 1, "Sf_BFu31ll_BFu32i");
    set_bf_and_test(lv, v3, 3, 7, 32, hide_ull(1LL<<31), "Sf_BFu31ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_BFu32i, Sf_BFu31ll_BFu32i)
//============================================================================



static void Test_Sf_BFu31ll_BFu32ll()
{
  {
    init_simple_test("Sf_BFu31ll_BFu32ll");
    static STRUCT_IF_C Sf_BFu31ll_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu31ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_BFu32ll");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_BFu32ll");
    set_bf_and_test(lv, v3, 3, 7, 32, 1, "Sf_BFu31ll_BFu32ll");
    set_bf_and_test(lv, v3, 3, 7, 32, hide_ull(1LL<<31), "Sf_BFu31ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_BFu32ll, Sf_BFu31ll_BFu32ll)
//============================================================================



static void Test_Sf_BFu31ll_BFu33()
{
  {
    init_simple_test("Sf_BFu31ll_BFu33");
    static STRUCT_IF_C Sf_BFu31ll_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu31ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_BFu33)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_BFu33.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_BFu33");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_BFu33");
    set_bf_and_test(lv, v3, 3, 7, 33, 1, "Sf_BFu31ll_BFu33");
    set_bf_and_test(lv, v3, 3, 7, 33, hide_ull(1LL<<32), "Sf_BFu31ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_BFu33, Sf_BFu31ll_BFu33)
//============================================================================



static void Test_Sf_BFu31ll_BFu7c()
{
  {
    init_simple_test("Sf_BFu31ll_BFu7c");
    static STRUCT_IF_C Sf_BFu31ll_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu31ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_BFu7c)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_BFu7c");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_BFu7c");
    set_bf_and_test(lv, v3, 3, 7, 7, 1, "Sf_BFu31ll_BFu7c");
    set_bf_and_test(lv, v3, 3, 7, 7, hide_ull(1LL<<6), "Sf_BFu31ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_BFu7c, Sf_BFu31ll_BFu7c)
//============================================================================



static void Test_Sf_BFu31ll_BFu7i()
{
  {
    init_simple_test("Sf_BFu31ll_BFu7i");
    static STRUCT_IF_C Sf_BFu31ll_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu31ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_BFu7i)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_BFu7i");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_BFu7i");
    set_bf_and_test(lv, v3, 3, 7, 7, 1, "Sf_BFu31ll_BFu7i");
    set_bf_and_test(lv, v3, 3, 7, 7, hide_ull(1LL<<6), "Sf_BFu31ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_BFu7i, Sf_BFu31ll_BFu7i)
//============================================================================



static void Test_Sf_BFu31ll_BFu7ll()
{
  {
    init_simple_test("Sf_BFu31ll_BFu7ll");
    static STRUCT_IF_C Sf_BFu31ll_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu31ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_BFu7ll");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_BFu7ll");
    set_bf_and_test(lv, v3, 3, 7, 7, 1, "Sf_BFu31ll_BFu7ll");
    set_bf_and_test(lv, v3, 3, 7, 7, hide_ull(1LL<<6), "Sf_BFu31ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_BFu7ll, Sf_BFu31ll_BFu7ll)
//============================================================================



static void Test_Sf_BFu31ll_BFu7s()
{
  {
    init_simple_test("Sf_BFu31ll_BFu7s");
    static STRUCT_IF_C Sf_BFu31ll_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu31ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_BFu7s)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_BFu7s");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_BFu7s");
    set_bf_and_test(lv, v3, 3, 7, 7, 1, "Sf_BFu31ll_BFu7s");
    set_bf_and_test(lv, v3, 3, 7, 7, hide_ull(1LL<<6), "Sf_BFu31ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_BFu7s, Sf_BFu31ll_BFu7s)
//============================================================================



static void Test_Sf_BFu31ll_BFu8c()
{
  {
    init_simple_test("Sf_BFu31ll_BFu8c");
    static STRUCT_IF_C Sf_BFu31ll_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu31ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_BFu8c)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_BFu8c");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_BFu8c");
    set_bf_and_test(lv, v3, 3, 7, 8, 1, "Sf_BFu31ll_BFu8c");
    set_bf_and_test(lv, v3, 3, 7, 8, hide_ull(1LL<<7), "Sf_BFu31ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_BFu8c, Sf_BFu31ll_BFu8c)
//============================================================================



static void Test_Sf_BFu31ll_BFu8i()
{
  {
    init_simple_test("Sf_BFu31ll_BFu8i");
    static STRUCT_IF_C Sf_BFu31ll_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu31ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_BFu8i)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_BFu8i");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_BFu8i");
    set_bf_and_test(lv, v3, 3, 7, 8, 1, "Sf_BFu31ll_BFu8i");
    set_bf_and_test(lv, v3, 3, 7, 8, hide_ull(1LL<<7), "Sf_BFu31ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_BFu8i, Sf_BFu31ll_BFu8i)
//============================================================================



static void Test_Sf_BFu31ll_BFu8ll()
{
  {
    init_simple_test("Sf_BFu31ll_BFu8ll");
    static STRUCT_IF_C Sf_BFu31ll_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu31ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_BFu8ll");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_BFu8ll");
    set_bf_and_test(lv, v3, 3, 7, 8, 1, "Sf_BFu31ll_BFu8ll");
    set_bf_and_test(lv, v3, 3, 7, 8, hide_ull(1LL<<7), "Sf_BFu31ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_BFu8ll, Sf_BFu31ll_BFu8ll)
//============================================================================



static void Test_Sf_BFu31ll_BFu8s()
{
  {
    init_simple_test("Sf_BFu31ll_BFu8s");
    static STRUCT_IF_C Sf_BFu31ll_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu31ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_BFu8s)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_BFu8s");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_BFu8s");
    set_bf_and_test(lv, v3, 3, 7, 8, 1, "Sf_BFu31ll_BFu8s");
    set_bf_and_test(lv, v3, 3, 7, 8, hide_ull(1LL<<7), "Sf_BFu31ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_BFu8s, Sf_BFu31ll_BFu8s)
//============================================================================



static void Test_Sf_BFu31ll_BFu9i()
{
  {
    init_simple_test("Sf_BFu31ll_BFu9i");
    static STRUCT_IF_C Sf_BFu31ll_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu31ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_BFu9i)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_BFu9i");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_BFu9i");
    set_bf_and_test(lv, v3, 3, 7, 9, 1, "Sf_BFu31ll_BFu9i");
    set_bf_and_test(lv, v3, 3, 7, 9, hide_ull(1LL<<8), "Sf_BFu31ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_BFu9i, Sf_BFu31ll_BFu9i)
//============================================================================



static void Test_Sf_BFu31ll_BFu9ll()
{
  {
    init_simple_test("Sf_BFu31ll_BFu9ll");
    static STRUCT_IF_C Sf_BFu31ll_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu31ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_BFu9ll");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_BFu9ll");
    set_bf_and_test(lv, v3, 3, 7, 9, 1, "Sf_BFu31ll_BFu9ll");
    set_bf_and_test(lv, v3, 3, 7, 9, hide_ull(1LL<<8), "Sf_BFu31ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_BFu9ll, Sf_BFu31ll_BFu9ll)
//============================================================================



static void Test_Sf_BFu31ll_BFu9s()
{
  {
    init_simple_test("Sf_BFu31ll_BFu9s");
    static STRUCT_IF_C Sf_BFu31ll_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu31ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_BFu9s)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_BFu9s");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_BFu9s");
    set_bf_and_test(lv, v3, 3, 7, 9, 1, "Sf_BFu31ll_BFu9s");
    set_bf_and_test(lv, v3, 3, 7, 9, hide_ull(1LL<<8), "Sf_BFu31ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_BFu9s, Sf_BFu31ll_BFu9s)
//============================================================================



static void Test_Sf_BFu31ll_C()
{
  {
    init_simple_test("Sf_BFu31ll_C");
    static STRUCT_IF_C Sf_BFu31ll_C lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu31ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_C)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_C.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_C");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_C");
    check_field_offset(lv, v3, 4, "Sf_BFu31ll_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_C, Sf_BFu31ll_C)
//============================================================================



static void Test_Sf_BFu31ll_D()
{
  {
    init_simple_test("Sf_BFu31ll_D");
    static STRUCT_IF_C Sf_BFu31ll_D lv;
    check2(sizeof(lv), 12, "sizeof(Sf_BFu31ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_D)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_D.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_D");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_D");
    check_field_offset(lv, v3, 4, "Sf_BFu31ll_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_D, Sf_BFu31ll_D)
//============================================================================



static void Test_Sf_BFu31ll_F()
{
  {
    init_simple_test("Sf_BFu31ll_F");
    static STRUCT_IF_C Sf_BFu31ll_F lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu31ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_F)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_F.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_F");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_F");
    check_field_offset(lv, v3, 4, "Sf_BFu31ll_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_F, Sf_BFu31ll_F)
//============================================================================



static void Test_Sf_BFu31ll_I()
{
  {
    init_simple_test("Sf_BFu31ll_I");
    static STRUCT_IF_C Sf_BFu31ll_I lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu31ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_I)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_I.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_I");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_I");
    check_field_offset(lv, v3, 4, "Sf_BFu31ll_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_I, Sf_BFu31ll_I)
//============================================================================



static void Test_Sf_BFu31ll_Ip()
{
  {
    init_simple_test("Sf_BFu31ll_Ip");
    static STRUCT_IF_C Sf_BFu31ll_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Sf_BFu31ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_Ip)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_Ip.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_Ip");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_Ip");
    check_field_offset(lv, v3, 4, "Sf_BFu31ll_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_Ip, Sf_BFu31ll_Ip)
//============================================================================



static void Test_Sf_BFu31ll_L()
{
  {
    init_simple_test("Sf_BFu31ll_L");
    static STRUCT_IF_C Sf_BFu31ll_L lv;
    check2(sizeof(lv), 12, "sizeof(Sf_BFu31ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_L)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_L.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_L");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_L");
    check_field_offset(lv, v3, 4, "Sf_BFu31ll_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_L, Sf_BFu31ll_L)
//============================================================================



static void Test_Sf_BFu31ll_S()
{
  {
    init_simple_test("Sf_BFu31ll_S");
    static STRUCT_IF_C Sf_BFu31ll_S lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu31ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_S)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_S.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_S");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_S");
    check_field_offset(lv, v3, 4, "Sf_BFu31ll_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_S, Sf_BFu31ll_S)
//============================================================================



static void Test_Sf_BFu31ll_Sf()
{
  {
    init_simple_test("Sf_BFu31ll_Sf");
    static STRUCT_IF_C Sf_BFu31ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu31ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_Sf)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_Sf.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_Sf");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_Sf");
    check_field_offset(lv, v3, 4, "Sf_BFu31ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_Sf, Sf_BFu31ll_Sf)
//============================================================================



static void Test_Sf_BFu31ll_Uc()
{
  {
    init_simple_test("Sf_BFu31ll_Uc");
    static STRUCT_IF_C Sf_BFu31ll_Uc lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu31ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_Uc)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_Uc.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_Uc");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_Uc");
    check_field_offset(lv, v3, 4, "Sf_BFu31ll_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_Uc, Sf_BFu31ll_Uc)
//============================================================================



static void Test_Sf_BFu31ll_Ui()
{
  {
    init_simple_test("Sf_BFu31ll_Ui");
    static STRUCT_IF_C Sf_BFu31ll_Ui lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu31ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_Ui)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_Ui.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_Ui");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_Ui");
    check_field_offset(lv, v3, 4, "Sf_BFu31ll_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_Ui, Sf_BFu31ll_Ui)
//============================================================================



static void Test_Sf_BFu31ll_Ul()
{
  {
    init_simple_test("Sf_BFu31ll_Ul");
    static STRUCT_IF_C Sf_BFu31ll_Ul lv;
    check2(sizeof(lv), 12, "sizeof(Sf_BFu31ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_Ul)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_Ul.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_Ul");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_Ul");
    check_field_offset(lv, v3, 4, "Sf_BFu31ll_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_Ul, Sf_BFu31ll_Ul)
//============================================================================



static void Test_Sf_BFu31ll_Us()
{
  {
    init_simple_test("Sf_BFu31ll_Us");
    static STRUCT_IF_C Sf_BFu31ll_Us lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu31ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_Us)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_Us.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_Us");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_Us");
    check_field_offset(lv, v3, 4, "Sf_BFu31ll_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_Us, Sf_BFu31ll_Us)
//============================================================================



static void Test_Sf_BFu31ll_Vp()
{
  {
    init_simple_test("Sf_BFu31ll_Vp");
    static STRUCT_IF_C Sf_BFu31ll_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Sf_BFu31ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu31ll_Vp)");
    check_field_offset(lv, v1, 0, "Sf_BFu31ll_Vp.v1");
    set_bf_and_test(lv, v2, 0, 0, 31, 1, "Sf_BFu31ll_Vp");
    set_bf_and_test(lv, v2, 0, 0, 31, hide_ull(1LL<<30), "Sf_BFu31ll_Vp");
    check_field_offset(lv, v3, 4, "Sf_BFu31ll_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu31ll_Vp, Sf_BFu31ll_Vp)
//============================================================================



static void Test_Sf_BFu32i()
{
  {
    init_simple_test("Sf_BFu32i");
    static STRUCT_IF_C Sf_BFu32i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i, Sf_BFu32i)
//============================================================================



static void Test_Sf_BFu32i_BFu15i()
{
  {
    init_simple_test("Sf_BFu32i_BFu15i");
    static STRUCT_IF_C Sf_BFu32i_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu32i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_BFu15i)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_BFu15i.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_BFu15i");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_BFu15i");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "Sf_BFu32i_BFu15i");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "Sf_BFu32i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_BFu15i, Sf_BFu32i_BFu15i)
//============================================================================



static void Test_Sf_BFu32i_BFu15ll()
{
  {
    init_simple_test("Sf_BFu32i_BFu15ll");
    static STRUCT_IF_C Sf_BFu32i_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu32i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_BFu15ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_BFu15ll");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_BFu15ll");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "Sf_BFu32i_BFu15ll");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "Sf_BFu32i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_BFu15ll, Sf_BFu32i_BFu15ll)
//============================================================================



static void Test_Sf_BFu32i_BFu15s()
{
  {
    init_simple_test("Sf_BFu32i_BFu15s");
    static STRUCT_IF_C Sf_BFu32i_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu32i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_BFu15s)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_BFu15s.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_BFu15s");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_BFu15s");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "Sf_BFu32i_BFu15s");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "Sf_BFu32i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_BFu15s, Sf_BFu32i_BFu15s)
//============================================================================



static void Test_Sf_BFu32i_BFu16i()
{
  {
    init_simple_test("Sf_BFu32i_BFu16i");
    static STRUCT_IF_C Sf_BFu32i_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu32i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_BFu16i)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_BFu16i.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_BFu16i");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "Sf_BFu32i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "Sf_BFu32i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_BFu16i, Sf_BFu32i_BFu16i)
//============================================================================



static void Test_Sf_BFu32i_BFu16ll()
{
  {
    init_simple_test("Sf_BFu32i_BFu16ll");
    static STRUCT_IF_C Sf_BFu32i_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu32i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_BFu16ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_BFu16ll");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "Sf_BFu32i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "Sf_BFu32i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_BFu16ll, Sf_BFu32i_BFu16ll)
//============================================================================



static void Test_Sf_BFu32i_BFu16s()
{
  {
    init_simple_test("Sf_BFu32i_BFu16s");
    static STRUCT_IF_C Sf_BFu32i_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu32i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_BFu16s)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_BFu16s.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_BFu16s");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "Sf_BFu32i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "Sf_BFu32i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_BFu16s, Sf_BFu32i_BFu16s)
//============================================================================



static void Test_Sf_BFu32i_BFu17i()
{
  {
    init_simple_test("Sf_BFu32i_BFu17i");
    static STRUCT_IF_C Sf_BFu32i_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(Sf_BFu32i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_BFu17i)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_BFu17i.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_BFu17i");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_BFu17i");
    set_bf_and_test(lv, v3, 4, 0, 17, 1, "Sf_BFu32i_BFu17i");
    set_bf_and_test(lv, v3, 4, 0, 17, hide_ull(1LL<<16), "Sf_BFu32i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_BFu17i, Sf_BFu32i_BFu17i)
//============================================================================



static void Test_Sf_BFu32i_BFu17ll()
{
  {
    init_simple_test("Sf_BFu32i_BFu17ll");
    static STRUCT_IF_C Sf_BFu32i_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(Sf_BFu32i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_BFu17ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_BFu17ll");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 0, 17, 1, "Sf_BFu32i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 0, 17, hide_ull(1LL<<16), "Sf_BFu32i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_BFu17ll, Sf_BFu32i_BFu17ll)
//============================================================================



static void Test_Sf_BFu32i_BFu1c()
{
  {
    init_simple_test("Sf_BFu32i_BFu1c");
    static STRUCT_IF_C Sf_BFu32i_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu32i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_BFu1c)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_BFu1c.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_BFu1c");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_BFu1c");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "Sf_BFu32i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_BFu1c, Sf_BFu32i_BFu1c)
//============================================================================



static void Test_Sf_BFu32i_BFu1i()
{
  {
    init_simple_test("Sf_BFu32i_BFu1i");
    static STRUCT_IF_C Sf_BFu32i_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu32i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_BFu1i)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_BFu1i.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_BFu1i");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_BFu1i");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "Sf_BFu32i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_BFu1i, Sf_BFu32i_BFu1i)
//============================================================================



static void Test_Sf_BFu32i_BFu1ll()
{
  {
    init_simple_test("Sf_BFu32i_BFu1ll");
    static STRUCT_IF_C Sf_BFu32i_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu32i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_BFu1ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_BFu1ll");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "Sf_BFu32i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_BFu1ll, Sf_BFu32i_BFu1ll)
//============================================================================



static void Test_Sf_BFu32i_BFu1s()
{
  {
    init_simple_test("Sf_BFu32i_BFu1s");
    static STRUCT_IF_C Sf_BFu32i_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu32i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_BFu1s)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_BFu1s.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_BFu1s");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_BFu1s");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "Sf_BFu32i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_BFu1s, Sf_BFu32i_BFu1s)
//============================================================================



static void Test_Sf_BFu32i_BFu31i()
{
  {
    init_simple_test("Sf_BFu32i_BFu31i");
    static STRUCT_IF_C Sf_BFu32i_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu32i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_BFu31i)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_BFu31i.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_BFu31i");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_BFu31i");
    set_bf_and_test(lv, v3, 4, 0, 31, 1, "Sf_BFu32i_BFu31i");
    set_bf_and_test(lv, v3, 4, 0, 31, hide_ull(1LL<<30), "Sf_BFu32i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_BFu31i, Sf_BFu32i_BFu31i)
//============================================================================



static void Test_Sf_BFu32i_BFu31ll()
{
  {
    init_simple_test("Sf_BFu32i_BFu31ll");
    static STRUCT_IF_C Sf_BFu32i_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu32i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_BFu31ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_BFu31ll");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_BFu31ll");
    set_bf_and_test(lv, v3, 4, 0, 31, 1, "Sf_BFu32i_BFu31ll");
    set_bf_and_test(lv, v3, 4, 0, 31, hide_ull(1LL<<30), "Sf_BFu32i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_BFu31ll, Sf_BFu32i_BFu31ll)
//============================================================================



static void Test_Sf_BFu32i_BFu32i()
{
  {
    init_simple_test("Sf_BFu32i_BFu32i");
    static STRUCT_IF_C Sf_BFu32i_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu32i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_BFu32i)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_BFu32i.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_BFu32i");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_BFu32i");
    set_bf_and_test(lv, v3, 4, 0, 32, 1, "Sf_BFu32i_BFu32i");
    set_bf_and_test(lv, v3, 4, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_BFu32i, Sf_BFu32i_BFu32i)
//============================================================================



static void Test_Sf_BFu32i_BFu32ll()
{
  {
    init_simple_test("Sf_BFu32i_BFu32ll");
    static STRUCT_IF_C Sf_BFu32i_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu32i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_BFu32ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_BFu32ll");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_BFu32ll");
    set_bf_and_test(lv, v3, 4, 0, 32, 1, "Sf_BFu32i_BFu32ll");
    set_bf_and_test(lv, v3, 4, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_BFu32ll, Sf_BFu32i_BFu32ll)
//============================================================================



static void Test_Sf_BFu32i_BFu33()
{
  {
    init_simple_test("Sf_BFu32i_BFu33");
    static STRUCT_IF_C Sf_BFu32i_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu32i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_BFu33)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_BFu33.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_BFu33");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_BFu33");
    set_bf_and_test(lv, v3, 4, 0, 33, 1, "Sf_BFu32i_BFu33");
    set_bf_and_test(lv, v3, 4, 0, 33, hide_ull(1LL<<32), "Sf_BFu32i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_BFu33, Sf_BFu32i_BFu33)
//============================================================================



static void Test_Sf_BFu32i_BFu7c()
{
  {
    init_simple_test("Sf_BFu32i_BFu7c");
    static STRUCT_IF_C Sf_BFu32i_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu32i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_BFu7c)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_BFu7c.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_BFu7c");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_BFu7c");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "Sf_BFu32i_BFu7c");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "Sf_BFu32i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_BFu7c, Sf_BFu32i_BFu7c)
//============================================================================



static void Test_Sf_BFu32i_BFu7i()
{
  {
    init_simple_test("Sf_BFu32i_BFu7i");
    static STRUCT_IF_C Sf_BFu32i_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu32i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_BFu7i)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_BFu7i.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_BFu7i");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_BFu7i");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "Sf_BFu32i_BFu7i");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "Sf_BFu32i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_BFu7i, Sf_BFu32i_BFu7i)
//============================================================================



static void Test_Sf_BFu32i_BFu7ll()
{
  {
    init_simple_test("Sf_BFu32i_BFu7ll");
    static STRUCT_IF_C Sf_BFu32i_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu32i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_BFu7ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_BFu7ll");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_BFu7ll");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "Sf_BFu32i_BFu7ll");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "Sf_BFu32i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_BFu7ll, Sf_BFu32i_BFu7ll)
//============================================================================



static void Test_Sf_BFu32i_BFu7s()
{
  {
    init_simple_test("Sf_BFu32i_BFu7s");
    static STRUCT_IF_C Sf_BFu32i_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu32i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_BFu7s)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_BFu7s.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_BFu7s");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_BFu7s");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "Sf_BFu32i_BFu7s");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "Sf_BFu32i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_BFu7s, Sf_BFu32i_BFu7s)
//============================================================================



static void Test_Sf_BFu32i_BFu8c()
{
  {
    init_simple_test("Sf_BFu32i_BFu8c");
    static STRUCT_IF_C Sf_BFu32i_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu32i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_BFu8c)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_BFu8c.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_BFu8c");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_BFu8c");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "Sf_BFu32i_BFu8c");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "Sf_BFu32i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_BFu8c, Sf_BFu32i_BFu8c)
//============================================================================



static void Test_Sf_BFu32i_BFu8i()
{
  {
    init_simple_test("Sf_BFu32i_BFu8i");
    static STRUCT_IF_C Sf_BFu32i_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu32i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_BFu8i)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_BFu8i.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_BFu8i");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_BFu8i");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "Sf_BFu32i_BFu8i");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "Sf_BFu32i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_BFu8i, Sf_BFu32i_BFu8i)
//============================================================================



static void Test_Sf_BFu32i_BFu8ll()
{
  {
    init_simple_test("Sf_BFu32i_BFu8ll");
    static STRUCT_IF_C Sf_BFu32i_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu32i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_BFu8ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_BFu8ll");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_BFu8ll");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "Sf_BFu32i_BFu8ll");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "Sf_BFu32i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_BFu8ll, Sf_BFu32i_BFu8ll)
//============================================================================



static void Test_Sf_BFu32i_BFu8s()
{
  {
    init_simple_test("Sf_BFu32i_BFu8s");
    static STRUCT_IF_C Sf_BFu32i_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu32i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_BFu8s)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_BFu8s.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_BFu8s");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_BFu8s");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "Sf_BFu32i_BFu8s");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "Sf_BFu32i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_BFu8s, Sf_BFu32i_BFu8s)
//============================================================================



static void Test_Sf_BFu32i_BFu9i()
{
  {
    init_simple_test("Sf_BFu32i_BFu9i");
    static STRUCT_IF_C Sf_BFu32i_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu32i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_BFu9i)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_BFu9i.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_BFu9i");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_BFu9i");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "Sf_BFu32i_BFu9i");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "Sf_BFu32i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_BFu9i, Sf_BFu32i_BFu9i)
//============================================================================



static void Test_Sf_BFu32i_BFu9ll()
{
  {
    init_simple_test("Sf_BFu32i_BFu9ll");
    static STRUCT_IF_C Sf_BFu32i_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu32i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_BFu9ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_BFu9ll");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_BFu9ll");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "Sf_BFu32i_BFu9ll");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "Sf_BFu32i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_BFu9ll, Sf_BFu32i_BFu9ll)
//============================================================================



static void Test_Sf_BFu32i_BFu9s()
{
  {
    init_simple_test("Sf_BFu32i_BFu9s");
    static STRUCT_IF_C Sf_BFu32i_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu32i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_BFu9s)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_BFu9s.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_BFu9s");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_BFu9s");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "Sf_BFu32i_BFu9s");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "Sf_BFu32i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_BFu9s, Sf_BFu32i_BFu9s)
//============================================================================



static void Test_Sf_BFu32i_C()
{
  {
    init_simple_test("Sf_BFu32i_C");
    static STRUCT_IF_C Sf_BFu32i_C lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu32i_C)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_C)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_C.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_C");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_C");
    check_field_offset(lv, v3, 4, "Sf_BFu32i_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_C, Sf_BFu32i_C)
//============================================================================



static void Test_Sf_BFu32i_D()
{
  {
    init_simple_test("Sf_BFu32i_D");
    static STRUCT_IF_C Sf_BFu32i_D lv;
    check2(sizeof(lv), 12, "sizeof(Sf_BFu32i_D)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_D)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_D.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_D");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_D");
    check_field_offset(lv, v3, 4, "Sf_BFu32i_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_D, Sf_BFu32i_D)
//============================================================================



static void Test_Sf_BFu32i_F()
{
  {
    init_simple_test("Sf_BFu32i_F");
    static STRUCT_IF_C Sf_BFu32i_F lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu32i_F)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_F)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_F.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_F");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_F");
    check_field_offset(lv, v3, 4, "Sf_BFu32i_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_F, Sf_BFu32i_F)
//============================================================================



static void Test_Sf_BFu32i_I()
{
  {
    init_simple_test("Sf_BFu32i_I");
    static STRUCT_IF_C Sf_BFu32i_I lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu32i_I)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_I)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_I.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_I");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_I");
    check_field_offset(lv, v3, 4, "Sf_BFu32i_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_I, Sf_BFu32i_I)
//============================================================================



static void Test_Sf_BFu32i_Ip()
{
  {
    init_simple_test("Sf_BFu32i_Ip");
    static STRUCT_IF_C Sf_BFu32i_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Sf_BFu32i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_Ip)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_Ip.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_Ip");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_Ip");
    check_field_offset(lv, v3, 4, "Sf_BFu32i_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_Ip, Sf_BFu32i_Ip)
//============================================================================



static void Test_Sf_BFu32i_L()
{
  {
    init_simple_test("Sf_BFu32i_L");
    static STRUCT_IF_C Sf_BFu32i_L lv;
    check2(sizeof(lv), 12, "sizeof(Sf_BFu32i_L)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_L)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_L.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_L");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_L");
    check_field_offset(lv, v3, 4, "Sf_BFu32i_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_L, Sf_BFu32i_L)
//============================================================================



static void Test_Sf_BFu32i_S()
{
  {
    init_simple_test("Sf_BFu32i_S");
    static STRUCT_IF_C Sf_BFu32i_S lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu32i_S)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_S)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_S.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_S");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_S");
    check_field_offset(lv, v3, 4, "Sf_BFu32i_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_S, Sf_BFu32i_S)
//============================================================================



static void Test_Sf_BFu32i_Sf()
{
  {
    init_simple_test("Sf_BFu32i_Sf");
    static STRUCT_IF_C Sf_BFu32i_Sf lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu32i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_Sf)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_Sf.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_Sf");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_Sf");
    check_field_offset(lv, v3, 4, "Sf_BFu32i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_Sf, Sf_BFu32i_Sf)
//============================================================================



static void Test_Sf_BFu32i_Uc()
{
  {
    init_simple_test("Sf_BFu32i_Uc");
    static STRUCT_IF_C Sf_BFu32i_Uc lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu32i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_Uc)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_Uc.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_Uc");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_Uc");
    check_field_offset(lv, v3, 4, "Sf_BFu32i_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_Uc, Sf_BFu32i_Uc)
//============================================================================



static void Test_Sf_BFu32i_Ui()
{
  {
    init_simple_test("Sf_BFu32i_Ui");
    static STRUCT_IF_C Sf_BFu32i_Ui lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu32i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_Ui)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_Ui.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_Ui");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_Ui");
    check_field_offset(lv, v3, 4, "Sf_BFu32i_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_Ui, Sf_BFu32i_Ui)
//============================================================================



static void Test_Sf_BFu32i_Ul()
{
  {
    init_simple_test("Sf_BFu32i_Ul");
    static STRUCT_IF_C Sf_BFu32i_Ul lv;
    check2(sizeof(lv), 12, "sizeof(Sf_BFu32i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_Ul)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_Ul.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_Ul");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_Ul");
    check_field_offset(lv, v3, 4, "Sf_BFu32i_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_Ul, Sf_BFu32i_Ul)
//============================================================================



static void Test_Sf_BFu32i_Us()
{
  {
    init_simple_test("Sf_BFu32i_Us");
    static STRUCT_IF_C Sf_BFu32i_Us lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu32i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_Us)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_Us.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_Us");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_Us");
    check_field_offset(lv, v3, 4, "Sf_BFu32i_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_Us, Sf_BFu32i_Us)
//============================================================================



static void Test_Sf_BFu32i_Vp()
{
  {
    init_simple_test("Sf_BFu32i_Vp");
    static STRUCT_IF_C Sf_BFu32i_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Sf_BFu32i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32i_Vp)");
    check_field_offset(lv, v1, 0, "Sf_BFu32i_Vp.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32i_Vp");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32i_Vp");
    check_field_offset(lv, v3, 4, "Sf_BFu32i_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32i_Vp, Sf_BFu32i_Vp)
//============================================================================



static void Test_Sf_BFu32ll()
{
  {
    init_simple_test("Sf_BFu32ll");
    static STRUCT_IF_C Sf_BFu32ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll, Sf_BFu32ll)
//============================================================================



static void Test_Sf_BFu32ll_BFu15i()
{
  {
    init_simple_test("Sf_BFu32ll_BFu15i");
    static STRUCT_IF_C Sf_BFu32ll_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu32ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_BFu15i)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_BFu15i");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_BFu15i");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "Sf_BFu32ll_BFu15i");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "Sf_BFu32ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_BFu15i, Sf_BFu32ll_BFu15i)
//============================================================================



static void Test_Sf_BFu32ll_BFu15ll()
{
  {
    init_simple_test("Sf_BFu32ll_BFu15ll");
    static STRUCT_IF_C Sf_BFu32ll_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu32ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_BFu15ll");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_BFu15ll");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "Sf_BFu32ll_BFu15ll");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "Sf_BFu32ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_BFu15ll, Sf_BFu32ll_BFu15ll)
//============================================================================



static void Test_Sf_BFu32ll_BFu15s()
{
  {
    init_simple_test("Sf_BFu32ll_BFu15s");
    static STRUCT_IF_C Sf_BFu32ll_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu32ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_BFu15s)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_BFu15s");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_BFu15s");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "Sf_BFu32ll_BFu15s");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "Sf_BFu32ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_BFu15s, Sf_BFu32ll_BFu15s)
//============================================================================



static void Test_Sf_BFu32ll_BFu16i()
{
  {
    init_simple_test("Sf_BFu32ll_BFu16i");
    static STRUCT_IF_C Sf_BFu32ll_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu32ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_BFu16i)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_BFu16i");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "Sf_BFu32ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "Sf_BFu32ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_BFu16i, Sf_BFu32ll_BFu16i)
//============================================================================



static void Test_Sf_BFu32ll_BFu16ll()
{
  {
    init_simple_test("Sf_BFu32ll_BFu16ll");
    static STRUCT_IF_C Sf_BFu32ll_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu32ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_BFu16ll");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "Sf_BFu32ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "Sf_BFu32ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_BFu16ll, Sf_BFu32ll_BFu16ll)
//============================================================================



static void Test_Sf_BFu32ll_BFu16s()
{
  {
    init_simple_test("Sf_BFu32ll_BFu16s");
    static STRUCT_IF_C Sf_BFu32ll_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu32ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_BFu16s)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_BFu16s");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "Sf_BFu32ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "Sf_BFu32ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_BFu16s, Sf_BFu32ll_BFu16s)
//============================================================================



static void Test_Sf_BFu32ll_BFu17i()
{
  {
    init_simple_test("Sf_BFu32ll_BFu17i");
    static STRUCT_IF_C Sf_BFu32ll_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(Sf_BFu32ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_BFu17i)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_BFu17i");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 0, 17, 1, "Sf_BFu32ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 0, 17, hide_ull(1LL<<16), "Sf_BFu32ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_BFu17i, Sf_BFu32ll_BFu17i)
//============================================================================



static void Test_Sf_BFu32ll_BFu17ll()
{
  {
    init_simple_test("Sf_BFu32ll_BFu17ll");
    static STRUCT_IF_C Sf_BFu32ll_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(Sf_BFu32ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_BFu17ll");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 0, 17, 1, "Sf_BFu32ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 0, 17, hide_ull(1LL<<16), "Sf_BFu32ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_BFu17ll, Sf_BFu32ll_BFu17ll)
//============================================================================



static void Test_Sf_BFu32ll_BFu1c()
{
  {
    init_simple_test("Sf_BFu32ll_BFu1c");
    static STRUCT_IF_C Sf_BFu32ll_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu32ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_BFu1c)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_BFu1c");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "Sf_BFu32ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_BFu1c, Sf_BFu32ll_BFu1c)
//============================================================================



static void Test_Sf_BFu32ll_BFu1i()
{
  {
    init_simple_test("Sf_BFu32ll_BFu1i");
    static STRUCT_IF_C Sf_BFu32ll_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu32ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_BFu1i)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_BFu1i");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "Sf_BFu32ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_BFu1i, Sf_BFu32ll_BFu1i)
//============================================================================



static void Test_Sf_BFu32ll_BFu1ll()
{
  {
    init_simple_test("Sf_BFu32ll_BFu1ll");
    static STRUCT_IF_C Sf_BFu32ll_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu32ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_BFu1ll");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "Sf_BFu32ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_BFu1ll, Sf_BFu32ll_BFu1ll)
//============================================================================



static void Test_Sf_BFu32ll_BFu1s()
{
  {
    init_simple_test("Sf_BFu32ll_BFu1s");
    static STRUCT_IF_C Sf_BFu32ll_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu32ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_BFu1s)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_BFu1s");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "Sf_BFu32ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_BFu1s, Sf_BFu32ll_BFu1s)
//============================================================================



static void Test_Sf_BFu32ll_BFu31i()
{
  {
    init_simple_test("Sf_BFu32ll_BFu31i");
    static STRUCT_IF_C Sf_BFu32ll_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu32ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_BFu31i)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_BFu31i");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_BFu31i");
    set_bf_and_test(lv, v3, 4, 0, 31, 1, "Sf_BFu32ll_BFu31i");
    set_bf_and_test(lv, v3, 4, 0, 31, hide_ull(1LL<<30), "Sf_BFu32ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_BFu31i, Sf_BFu32ll_BFu31i)
//============================================================================



static void Test_Sf_BFu32ll_BFu31ll()
{
  {
    init_simple_test("Sf_BFu32ll_BFu31ll");
    static STRUCT_IF_C Sf_BFu32ll_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu32ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_BFu31ll");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_BFu31ll");
    set_bf_and_test(lv, v3, 4, 0, 31, 1, "Sf_BFu32ll_BFu31ll");
    set_bf_and_test(lv, v3, 4, 0, 31, hide_ull(1LL<<30), "Sf_BFu32ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_BFu31ll, Sf_BFu32ll_BFu31ll)
//============================================================================



static void Test_Sf_BFu32ll_BFu32i()
{
  {
    init_simple_test("Sf_BFu32ll_BFu32i");
    static STRUCT_IF_C Sf_BFu32ll_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu32ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_BFu32i)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_BFu32i");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_BFu32i");
    set_bf_and_test(lv, v3, 4, 0, 32, 1, "Sf_BFu32ll_BFu32i");
    set_bf_and_test(lv, v3, 4, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_BFu32i, Sf_BFu32ll_BFu32i)
//============================================================================



static void Test_Sf_BFu32ll_BFu32ll()
{
  {
    init_simple_test("Sf_BFu32ll_BFu32ll");
    static STRUCT_IF_C Sf_BFu32ll_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu32ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_BFu32ll");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_BFu32ll");
    set_bf_and_test(lv, v3, 4, 0, 32, 1, "Sf_BFu32ll_BFu32ll");
    set_bf_and_test(lv, v3, 4, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_BFu32ll, Sf_BFu32ll_BFu32ll)
//============================================================================



static void Test_Sf_BFu32ll_BFu33()
{
  {
    init_simple_test("Sf_BFu32ll_BFu33");
    static STRUCT_IF_C Sf_BFu32ll_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu32ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_BFu33)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_BFu33.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_BFu33");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_BFu33");
    set_bf_and_test(lv, v3, 4, 0, 33, 1, "Sf_BFu32ll_BFu33");
    set_bf_and_test(lv, v3, 4, 0, 33, hide_ull(1LL<<32), "Sf_BFu32ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_BFu33, Sf_BFu32ll_BFu33)
//============================================================================



static void Test_Sf_BFu32ll_BFu7c()
{
  {
    init_simple_test("Sf_BFu32ll_BFu7c");
    static STRUCT_IF_C Sf_BFu32ll_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu32ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_BFu7c)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_BFu7c");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_BFu7c");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "Sf_BFu32ll_BFu7c");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "Sf_BFu32ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_BFu7c, Sf_BFu32ll_BFu7c)
//============================================================================



static void Test_Sf_BFu32ll_BFu7i()
{
  {
    init_simple_test("Sf_BFu32ll_BFu7i");
    static STRUCT_IF_C Sf_BFu32ll_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu32ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_BFu7i)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_BFu7i");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_BFu7i");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "Sf_BFu32ll_BFu7i");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "Sf_BFu32ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_BFu7i, Sf_BFu32ll_BFu7i)
//============================================================================



static void Test_Sf_BFu32ll_BFu7ll()
{
  {
    init_simple_test("Sf_BFu32ll_BFu7ll");
    static STRUCT_IF_C Sf_BFu32ll_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu32ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_BFu7ll");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_BFu7ll");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "Sf_BFu32ll_BFu7ll");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "Sf_BFu32ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_BFu7ll, Sf_BFu32ll_BFu7ll)
//============================================================================



static void Test_Sf_BFu32ll_BFu7s()
{
  {
    init_simple_test("Sf_BFu32ll_BFu7s");
    static STRUCT_IF_C Sf_BFu32ll_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu32ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_BFu7s)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_BFu7s");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_BFu7s");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "Sf_BFu32ll_BFu7s");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "Sf_BFu32ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_BFu7s, Sf_BFu32ll_BFu7s)
//============================================================================



static void Test_Sf_BFu32ll_BFu8c()
{
  {
    init_simple_test("Sf_BFu32ll_BFu8c");
    static STRUCT_IF_C Sf_BFu32ll_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu32ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_BFu8c)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_BFu8c");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_BFu8c");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "Sf_BFu32ll_BFu8c");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "Sf_BFu32ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_BFu8c, Sf_BFu32ll_BFu8c)
//============================================================================



static void Test_Sf_BFu32ll_BFu8i()
{
  {
    init_simple_test("Sf_BFu32ll_BFu8i");
    static STRUCT_IF_C Sf_BFu32ll_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu32ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_BFu8i)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_BFu8i");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_BFu8i");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "Sf_BFu32ll_BFu8i");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "Sf_BFu32ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_BFu8i, Sf_BFu32ll_BFu8i)
//============================================================================



static void Test_Sf_BFu32ll_BFu8ll()
{
  {
    init_simple_test("Sf_BFu32ll_BFu8ll");
    static STRUCT_IF_C Sf_BFu32ll_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu32ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_BFu8ll");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_BFu8ll");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "Sf_BFu32ll_BFu8ll");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "Sf_BFu32ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_BFu8ll, Sf_BFu32ll_BFu8ll)
//============================================================================



static void Test_Sf_BFu32ll_BFu8s()
{
  {
    init_simple_test("Sf_BFu32ll_BFu8s");
    static STRUCT_IF_C Sf_BFu32ll_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu32ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_BFu8s)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_BFu8s");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_BFu8s");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "Sf_BFu32ll_BFu8s");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "Sf_BFu32ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_BFu8s, Sf_BFu32ll_BFu8s)
//============================================================================



static void Test_Sf_BFu32ll_BFu9i()
{
  {
    init_simple_test("Sf_BFu32ll_BFu9i");
    static STRUCT_IF_C Sf_BFu32ll_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu32ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_BFu9i)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_BFu9i");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_BFu9i");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "Sf_BFu32ll_BFu9i");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "Sf_BFu32ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_BFu9i, Sf_BFu32ll_BFu9i)
//============================================================================



static void Test_Sf_BFu32ll_BFu9ll()
{
  {
    init_simple_test("Sf_BFu32ll_BFu9ll");
    static STRUCT_IF_C Sf_BFu32ll_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu32ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_BFu9ll");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_BFu9ll");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "Sf_BFu32ll_BFu9ll");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "Sf_BFu32ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_BFu9ll, Sf_BFu32ll_BFu9ll)
//============================================================================



static void Test_Sf_BFu32ll_BFu9s()
{
  {
    init_simple_test("Sf_BFu32ll_BFu9s");
    static STRUCT_IF_C Sf_BFu32ll_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu32ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_BFu9s)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_BFu9s");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_BFu9s");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "Sf_BFu32ll_BFu9s");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "Sf_BFu32ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_BFu9s, Sf_BFu32ll_BFu9s)
//============================================================================



static void Test_Sf_BFu32ll_C()
{
  {
    init_simple_test("Sf_BFu32ll_C");
    static STRUCT_IF_C Sf_BFu32ll_C lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu32ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_C)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_C.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_C");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_C");
    check_field_offset(lv, v3, 4, "Sf_BFu32ll_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_C, Sf_BFu32ll_C)
//============================================================================



static void Test_Sf_BFu32ll_D()
{
  {
    init_simple_test("Sf_BFu32ll_D");
    static STRUCT_IF_C Sf_BFu32ll_D lv;
    check2(sizeof(lv), 12, "sizeof(Sf_BFu32ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_D)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_D.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_D");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_D");
    check_field_offset(lv, v3, 4, "Sf_BFu32ll_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_D, Sf_BFu32ll_D)
//============================================================================



static void Test_Sf_BFu32ll_F()
{
  {
    init_simple_test("Sf_BFu32ll_F");
    static STRUCT_IF_C Sf_BFu32ll_F lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu32ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_F)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_F.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_F");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_F");
    check_field_offset(lv, v3, 4, "Sf_BFu32ll_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_F, Sf_BFu32ll_F)
//============================================================================



static void Test_Sf_BFu32ll_I()
{
  {
    init_simple_test("Sf_BFu32ll_I");
    static STRUCT_IF_C Sf_BFu32ll_I lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu32ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_I)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_I.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_I");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_I");
    check_field_offset(lv, v3, 4, "Sf_BFu32ll_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_I, Sf_BFu32ll_I)
//============================================================================



static void Test_Sf_BFu32ll_Ip()
{
  {
    init_simple_test("Sf_BFu32ll_Ip");
    static STRUCT_IF_C Sf_BFu32ll_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Sf_BFu32ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_Ip)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_Ip.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_Ip");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_Ip");
    check_field_offset(lv, v3, 4, "Sf_BFu32ll_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_Ip, Sf_BFu32ll_Ip)
//============================================================================



static void Test_Sf_BFu32ll_L()
{
  {
    init_simple_test("Sf_BFu32ll_L");
    static STRUCT_IF_C Sf_BFu32ll_L lv;
    check2(sizeof(lv), 12, "sizeof(Sf_BFu32ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_L)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_L.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_L");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_L");
    check_field_offset(lv, v3, 4, "Sf_BFu32ll_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_L, Sf_BFu32ll_L)
//============================================================================



static void Test_Sf_BFu32ll_S()
{
  {
    init_simple_test("Sf_BFu32ll_S");
    static STRUCT_IF_C Sf_BFu32ll_S lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu32ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_S)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_S.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_S");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_S");
    check_field_offset(lv, v3, 4, "Sf_BFu32ll_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_S, Sf_BFu32ll_S)
//============================================================================



static void Test_Sf_BFu32ll_Sf()
{
  {
    init_simple_test("Sf_BFu32ll_Sf");
    static STRUCT_IF_C Sf_BFu32ll_Sf lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu32ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_Sf)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_Sf.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_Sf");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_Sf");
    check_field_offset(lv, v3, 4, "Sf_BFu32ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_Sf, Sf_BFu32ll_Sf)
//============================================================================



static void Test_Sf_BFu32ll_Uc()
{
  {
    init_simple_test("Sf_BFu32ll_Uc");
    static STRUCT_IF_C Sf_BFu32ll_Uc lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu32ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_Uc)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_Uc.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_Uc");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_Uc");
    check_field_offset(lv, v3, 4, "Sf_BFu32ll_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_Uc, Sf_BFu32ll_Uc)
//============================================================================



static void Test_Sf_BFu32ll_Ui()
{
  {
    init_simple_test("Sf_BFu32ll_Ui");
    static STRUCT_IF_C Sf_BFu32ll_Ui lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu32ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_Ui)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_Ui.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_Ui");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_Ui");
    check_field_offset(lv, v3, 4, "Sf_BFu32ll_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_Ui, Sf_BFu32ll_Ui)
//============================================================================



static void Test_Sf_BFu32ll_Ul()
{
  {
    init_simple_test("Sf_BFu32ll_Ul");
    static STRUCT_IF_C Sf_BFu32ll_Ul lv;
    check2(sizeof(lv), 12, "sizeof(Sf_BFu32ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_Ul)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_Ul.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_Ul");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_Ul");
    check_field_offset(lv, v3, 4, "Sf_BFu32ll_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_Ul, Sf_BFu32ll_Ul)
//============================================================================



static void Test_Sf_BFu32ll_Us()
{
  {
    init_simple_test("Sf_BFu32ll_Us");
    static STRUCT_IF_C Sf_BFu32ll_Us lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu32ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_Us)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_Us.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_Us");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_Us");
    check_field_offset(lv, v3, 4, "Sf_BFu32ll_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_Us, Sf_BFu32ll_Us)
//============================================================================



static void Test_Sf_BFu32ll_Vp()
{
  {
    init_simple_test("Sf_BFu32ll_Vp");
    static STRUCT_IF_C Sf_BFu32ll_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(Sf_BFu32ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu32ll_Vp)");
    check_field_offset(lv, v1, 0, "Sf_BFu32ll_Vp.v1");
    set_bf_and_test(lv, v2, 0, 0, 32, 1, "Sf_BFu32ll_Vp");
    set_bf_and_test(lv, v2, 0, 0, 32, hide_ull(1LL<<31), "Sf_BFu32ll_Vp");
    check_field_offset(lv, v3, 4, "Sf_BFu32ll_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu32ll_Vp, Sf_BFu32ll_Vp)
//============================================================================



static void Test_Sf_BFu33()
{
  {
    init_simple_test("Sf_BFu33");
    static STRUCT_IF_C Sf_BFu33 lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33)");
    check_field_offset(lv, v1, 0, "Sf_BFu33.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33, Sf_BFu33)
//============================================================================



static void Test_Sf_BFu33_BFu15i()
{
  {
    init_simple_test("Sf_BFu33_BFu15i");
    static STRUCT_IF_C Sf_BFu33_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu33_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_BFu15i)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_BFu15i.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_BFu15i");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_BFu15i");
    set_bf_and_test(lv, v3, 4, 1, 15, 1, "Sf_BFu33_BFu15i");
    set_bf_and_test(lv, v3, 4, 1, 15, hide_ull(1LL<<14), "Sf_BFu33_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_BFu15i, Sf_BFu33_BFu15i)
//============================================================================



static void Test_Sf_BFu33_BFu15ll()
{
  {
    init_simple_test("Sf_BFu33_BFu15ll");
    static STRUCT_IF_C Sf_BFu33_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu33_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_BFu15ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_BFu15ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_BFu15ll");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_BFu15ll");
    set_bf_and_test(lv, v3, 4, 1, 15, 1, "Sf_BFu33_BFu15ll");
    set_bf_and_test(lv, v3, 4, 1, 15, hide_ull(1LL<<14), "Sf_BFu33_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_BFu15ll, Sf_BFu33_BFu15ll)
//============================================================================



static void Test_Sf_BFu33_BFu15s()
{
  {
    init_simple_test("Sf_BFu33_BFu15s");
    static STRUCT_IF_C Sf_BFu33_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu33_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_BFu15s)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_BFu15s.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_BFu15s");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_BFu15s");
    set_bf_and_test(lv, v3, 4, 1, 15, 1, "Sf_BFu33_BFu15s");
    set_bf_and_test(lv, v3, 4, 1, 15, hide_ull(1LL<<14), "Sf_BFu33_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_BFu15s, Sf_BFu33_BFu15s)
//============================================================================



static void Test_Sf_BFu33_BFu16i()
{
  {
    init_simple_test("Sf_BFu33_BFu16i");
    static STRUCT_IF_C Sf_BFu33_BFu16i lv;
    check2(sizeof(lv), 7, "sizeof(Sf_BFu33_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_BFu16i)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_BFu16i.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_BFu16i");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_BFu16i");
    set_bf_and_test(lv, v3, 4, 1, 16, 1, "Sf_BFu33_BFu16i");
    set_bf_and_test(lv, v3, 4, 1, 16, hide_ull(1LL<<15), "Sf_BFu33_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_BFu16i, Sf_BFu33_BFu16i)
//============================================================================



static void Test_Sf_BFu33_BFu16ll()
{
  {
    init_simple_test("Sf_BFu33_BFu16ll");
    static STRUCT_IF_C Sf_BFu33_BFu16ll lv;
    check2(sizeof(lv), 7, "sizeof(Sf_BFu33_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_BFu16ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_BFu16ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_BFu16ll");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_BFu16ll");
    set_bf_and_test(lv, v3, 4, 1, 16, 1, "Sf_BFu33_BFu16ll");
    set_bf_and_test(lv, v3, 4, 1, 16, hide_ull(1LL<<15), "Sf_BFu33_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_BFu16ll, Sf_BFu33_BFu16ll)
//============================================================================



static void Test_Sf_BFu33_BFu16s()
{
  {
    init_simple_test("Sf_BFu33_BFu16s");
    static STRUCT_IF_C Sf_BFu33_BFu16s lv;
    check2(sizeof(lv), 7, "sizeof(Sf_BFu33_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_BFu16s)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_BFu16s.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_BFu16s");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_BFu16s");
    set_bf_and_test(lv, v3, 4, 1, 16, 1, "Sf_BFu33_BFu16s");
    set_bf_and_test(lv, v3, 4, 1, 16, hide_ull(1LL<<15), "Sf_BFu33_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_BFu16s, Sf_BFu33_BFu16s)
//============================================================================



static void Test_Sf_BFu33_BFu17i()
{
  {
    init_simple_test("Sf_BFu33_BFu17i");
    static STRUCT_IF_C Sf_BFu33_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(Sf_BFu33_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_BFu17i)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_BFu17i.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_BFu17i");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_BFu17i");
    set_bf_and_test(lv, v3, 4, 1, 17, 1, "Sf_BFu33_BFu17i");
    set_bf_and_test(lv, v3, 4, 1, 17, hide_ull(1LL<<16), "Sf_BFu33_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_BFu17i, Sf_BFu33_BFu17i)
//============================================================================



static void Test_Sf_BFu33_BFu17ll()
{
  {
    init_simple_test("Sf_BFu33_BFu17ll");
    static STRUCT_IF_C Sf_BFu33_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(Sf_BFu33_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_BFu17ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_BFu17ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_BFu17ll");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_BFu17ll");
    set_bf_and_test(lv, v3, 4, 1, 17, 1, "Sf_BFu33_BFu17ll");
    set_bf_and_test(lv, v3, 4, 1, 17, hide_ull(1LL<<16), "Sf_BFu33_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_BFu17ll, Sf_BFu33_BFu17ll)
//============================================================================



static void Test_Sf_BFu33_BFu1c()
{
  {
    init_simple_test("Sf_BFu33_BFu1c");
    static STRUCT_IF_C Sf_BFu33_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu33_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_BFu1c)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_BFu1c.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_BFu1c");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_BFu1c");
    set_bf_and_test(lv, v3, 4, 1, 1, 1, "Sf_BFu33_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_BFu1c, Sf_BFu33_BFu1c)
//============================================================================



static void Test_Sf_BFu33_BFu1i()
{
  {
    init_simple_test("Sf_BFu33_BFu1i");
    static STRUCT_IF_C Sf_BFu33_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu33_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_BFu1i)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_BFu1i.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_BFu1i");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_BFu1i");
    set_bf_and_test(lv, v3, 4, 1, 1, 1, "Sf_BFu33_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_BFu1i, Sf_BFu33_BFu1i)
//============================================================================



static void Test_Sf_BFu33_BFu1ll()
{
  {
    init_simple_test("Sf_BFu33_BFu1ll");
    static STRUCT_IF_C Sf_BFu33_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu33_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_BFu1ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_BFu1ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_BFu1ll");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_BFu1ll");
    set_bf_and_test(lv, v3, 4, 1, 1, 1, "Sf_BFu33_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_BFu1ll, Sf_BFu33_BFu1ll)
//============================================================================



static void Test_Sf_BFu33_BFu1s()
{
  {
    init_simple_test("Sf_BFu33_BFu1s");
    static STRUCT_IF_C Sf_BFu33_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu33_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_BFu1s)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_BFu1s.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_BFu1s");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_BFu1s");
    set_bf_and_test(lv, v3, 4, 1, 1, 1, "Sf_BFu33_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_BFu1s, Sf_BFu33_BFu1s)
//============================================================================



static void Test_Sf_BFu33_BFu31i()
{
  {
    init_simple_test("Sf_BFu33_BFu31i");
    static STRUCT_IF_C Sf_BFu33_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu33_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_BFu31i)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_BFu31i.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_BFu31i");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_BFu31i");
    set_bf_and_test(lv, v3, 4, 1, 31, 1, "Sf_BFu33_BFu31i");
    set_bf_and_test(lv, v3, 4, 1, 31, hide_ull(1LL<<30), "Sf_BFu33_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_BFu31i, Sf_BFu33_BFu31i)
//============================================================================



static void Test_Sf_BFu33_BFu31ll()
{
  {
    init_simple_test("Sf_BFu33_BFu31ll");
    static STRUCT_IF_C Sf_BFu33_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(Sf_BFu33_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_BFu31ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_BFu31ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_BFu31ll");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_BFu31ll");
    set_bf_and_test(lv, v3, 4, 1, 31, 1, "Sf_BFu33_BFu31ll");
    set_bf_and_test(lv, v3, 4, 1, 31, hide_ull(1LL<<30), "Sf_BFu33_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_BFu31ll, Sf_BFu33_BFu31ll)
//============================================================================



static void Test_Sf_BFu33_BFu32i()
{
  {
    init_simple_test("Sf_BFu33_BFu32i");
    static STRUCT_IF_C Sf_BFu33_BFu32i lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu33_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_BFu32i)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_BFu32i.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_BFu32i");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_BFu32i");
    set_bf_and_test(lv, v3, 4, 1, 32, 1, "Sf_BFu33_BFu32i");
    set_bf_and_test(lv, v3, 4, 1, 32, hide_ull(1LL<<31), "Sf_BFu33_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_BFu32i, Sf_BFu33_BFu32i)
//============================================================================



static void Test_Sf_BFu33_BFu32ll()
{
  {
    init_simple_test("Sf_BFu33_BFu32ll");
    static STRUCT_IF_C Sf_BFu33_BFu32ll lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu33_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_BFu32ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_BFu32ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_BFu32ll");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_BFu32ll");
    set_bf_and_test(lv, v3, 4, 1, 32, 1, "Sf_BFu33_BFu32ll");
    set_bf_and_test(lv, v3, 4, 1, 32, hide_ull(1LL<<31), "Sf_BFu33_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_BFu32ll, Sf_BFu33_BFu32ll)
//============================================================================



static void Test_Sf_BFu33_BFu33()
{
  {
    init_simple_test("Sf_BFu33_BFu33");
    static STRUCT_IF_C Sf_BFu33_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu33_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_BFu33)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_BFu33.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_BFu33");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_BFu33");
    set_bf_and_test(lv, v3, 4, 1, 33, 1, "Sf_BFu33_BFu33");
    set_bf_and_test(lv, v3, 4, 1, 33, hide_ull(1LL<<32), "Sf_BFu33_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_BFu33, Sf_BFu33_BFu33)
//============================================================================



static void Test_Sf_BFu33_BFu7c()
{
  {
    init_simple_test("Sf_BFu33_BFu7c");
    static STRUCT_IF_C Sf_BFu33_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu33_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_BFu7c)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_BFu7c.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_BFu7c");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_BFu7c");
    set_bf_and_test(lv, v3, 4, 1, 7, 1, "Sf_BFu33_BFu7c");
    set_bf_and_test(lv, v3, 4, 1, 7, hide_ull(1LL<<6), "Sf_BFu33_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_BFu7c, Sf_BFu33_BFu7c)
//============================================================================



static void Test_Sf_BFu33_BFu7i()
{
  {
    init_simple_test("Sf_BFu33_BFu7i");
    static STRUCT_IF_C Sf_BFu33_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu33_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_BFu7i)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_BFu7i.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_BFu7i");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_BFu7i");
    set_bf_and_test(lv, v3, 4, 1, 7, 1, "Sf_BFu33_BFu7i");
    set_bf_and_test(lv, v3, 4, 1, 7, hide_ull(1LL<<6), "Sf_BFu33_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_BFu7i, Sf_BFu33_BFu7i)
//============================================================================



static void Test_Sf_BFu33_BFu7ll()
{
  {
    init_simple_test("Sf_BFu33_BFu7ll");
    static STRUCT_IF_C Sf_BFu33_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu33_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_BFu7ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_BFu7ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_BFu7ll");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_BFu7ll");
    set_bf_and_test(lv, v3, 4, 1, 7, 1, "Sf_BFu33_BFu7ll");
    set_bf_and_test(lv, v3, 4, 1, 7, hide_ull(1LL<<6), "Sf_BFu33_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_BFu7ll, Sf_BFu33_BFu7ll)
//============================================================================



static void Test_Sf_BFu33_BFu7s()
{
  {
    init_simple_test("Sf_BFu33_BFu7s");
    static STRUCT_IF_C Sf_BFu33_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu33_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_BFu7s)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_BFu7s.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_BFu7s");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_BFu7s");
    set_bf_and_test(lv, v3, 4, 1, 7, 1, "Sf_BFu33_BFu7s");
    set_bf_and_test(lv, v3, 4, 1, 7, hide_ull(1LL<<6), "Sf_BFu33_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_BFu7s, Sf_BFu33_BFu7s)
//============================================================================



static void Test_Sf_BFu33_BFu8c()
{
  {
    init_simple_test("Sf_BFu33_BFu8c");
    static STRUCT_IF_C Sf_BFu33_BFu8c lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu33_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_BFu8c)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_BFu8c.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_BFu8c");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_BFu8c");
    set_bf_and_test(lv, v3, 4, 1, 8, 1, "Sf_BFu33_BFu8c");
    set_bf_and_test(lv, v3, 4, 1, 8, hide_ull(1LL<<7), "Sf_BFu33_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_BFu8c, Sf_BFu33_BFu8c)
//============================================================================



static void Test_Sf_BFu33_BFu8i()
{
  {
    init_simple_test("Sf_BFu33_BFu8i");
    static STRUCT_IF_C Sf_BFu33_BFu8i lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu33_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_BFu8i)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_BFu8i.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_BFu8i");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_BFu8i");
    set_bf_and_test(lv, v3, 4, 1, 8, 1, "Sf_BFu33_BFu8i");
    set_bf_and_test(lv, v3, 4, 1, 8, hide_ull(1LL<<7), "Sf_BFu33_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_BFu8i, Sf_BFu33_BFu8i)
//============================================================================



static void Test_Sf_BFu33_BFu8ll()
{
  {
    init_simple_test("Sf_BFu33_BFu8ll");
    static STRUCT_IF_C Sf_BFu33_BFu8ll lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu33_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_BFu8ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_BFu8ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_BFu8ll");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_BFu8ll");
    set_bf_and_test(lv, v3, 4, 1, 8, 1, "Sf_BFu33_BFu8ll");
    set_bf_and_test(lv, v3, 4, 1, 8, hide_ull(1LL<<7), "Sf_BFu33_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_BFu8ll, Sf_BFu33_BFu8ll)
//============================================================================



static void Test_Sf_BFu33_BFu8s()
{
  {
    init_simple_test("Sf_BFu33_BFu8s");
    static STRUCT_IF_C Sf_BFu33_BFu8s lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu33_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_BFu8s)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_BFu8s.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_BFu8s");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_BFu8s");
    set_bf_and_test(lv, v3, 4, 1, 8, 1, "Sf_BFu33_BFu8s");
    set_bf_and_test(lv, v3, 4, 1, 8, hide_ull(1LL<<7), "Sf_BFu33_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_BFu8s, Sf_BFu33_BFu8s)
//============================================================================



static void Test_Sf_BFu33_BFu9i()
{
  {
    init_simple_test("Sf_BFu33_BFu9i");
    static STRUCT_IF_C Sf_BFu33_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu33_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_BFu9i)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_BFu9i.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_BFu9i");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_BFu9i");
    set_bf_and_test(lv, v3, 4, 1, 9, 1, "Sf_BFu33_BFu9i");
    set_bf_and_test(lv, v3, 4, 1, 9, hide_ull(1LL<<8), "Sf_BFu33_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_BFu9i, Sf_BFu33_BFu9i)
//============================================================================



static void Test_Sf_BFu33_BFu9ll()
{
  {
    init_simple_test("Sf_BFu33_BFu9ll");
    static STRUCT_IF_C Sf_BFu33_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu33_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_BFu9ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_BFu9ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_BFu9ll");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_BFu9ll");
    set_bf_and_test(lv, v3, 4, 1, 9, 1, "Sf_BFu33_BFu9ll");
    set_bf_and_test(lv, v3, 4, 1, 9, hide_ull(1LL<<8), "Sf_BFu33_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_BFu9ll, Sf_BFu33_BFu9ll)
//============================================================================



static void Test_Sf_BFu33_BFu9s()
{
  {
    init_simple_test("Sf_BFu33_BFu9s");
    static STRUCT_IF_C Sf_BFu33_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu33_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_BFu9s)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_BFu9s.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_BFu9s");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_BFu9s");
    set_bf_and_test(lv, v3, 4, 1, 9, 1, "Sf_BFu33_BFu9s");
    set_bf_and_test(lv, v3, 4, 1, 9, hide_ull(1LL<<8), "Sf_BFu33_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_BFu9s, Sf_BFu33_BFu9s)
//============================================================================



static void Test_Sf_BFu33_C()
{
  {
    init_simple_test("Sf_BFu33_C");
    static STRUCT_IF_C Sf_BFu33_C lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu33_C)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_C)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_C.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_C");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_C");
    check_field_offset(lv, v3, 5, "Sf_BFu33_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_C, Sf_BFu33_C)
//============================================================================



static void Test_Sf_BFu33_D()
{
  {
    init_simple_test("Sf_BFu33_D");
    static STRUCT_IF_C Sf_BFu33_D lv;
    check2(sizeof(lv), 13, "sizeof(Sf_BFu33_D)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_D)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_D.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_D");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_D");
    check_field_offset(lv, v3, 5, "Sf_BFu33_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_D, Sf_BFu33_D)
//============================================================================



static void Test_Sf_BFu33_F()
{
  {
    init_simple_test("Sf_BFu33_F");
    static STRUCT_IF_C Sf_BFu33_F lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu33_F)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_F)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_F.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_F");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_F");
    check_field_offset(lv, v3, 5, "Sf_BFu33_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_F, Sf_BFu33_F)
//============================================================================



static void Test_Sf_BFu33_I()
{
  {
    init_simple_test("Sf_BFu33_I");
    static STRUCT_IF_C Sf_BFu33_I lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu33_I)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_I)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_I.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_I");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_I");
    check_field_offset(lv, v3, 5, "Sf_BFu33_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_I, Sf_BFu33_I)
//============================================================================



static void Test_Sf_BFu33_Ip()
{
  {
    init_simple_test("Sf_BFu33_Ip");
    static STRUCT_IF_C Sf_BFu33_Ip lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(Sf_BFu33_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_Ip)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_Ip.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_Ip");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_Ip");
    check_field_offset(lv, v3, 5, "Sf_BFu33_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_Ip, Sf_BFu33_Ip)
//============================================================================



static void Test_Sf_BFu33_L()
{
  {
    init_simple_test("Sf_BFu33_L");
    static STRUCT_IF_C Sf_BFu33_L lv;
    check2(sizeof(lv), 13, "sizeof(Sf_BFu33_L)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_L)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_L.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_L");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_L");
    check_field_offset(lv, v3, 5, "Sf_BFu33_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_L, Sf_BFu33_L)
//============================================================================



static void Test_Sf_BFu33_S()
{
  {
    init_simple_test("Sf_BFu33_S");
    static STRUCT_IF_C Sf_BFu33_S lv;
    check2(sizeof(lv), 7, "sizeof(Sf_BFu33_S)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_S)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_S.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_S");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_S");
    check_field_offset(lv, v3, 5, "Sf_BFu33_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_S, Sf_BFu33_S)
//============================================================================



static void Test_Sf_BFu33_Sf()
{
  {
    init_simple_test("Sf_BFu33_Sf");
    static STRUCT_IF_C Sf_BFu33_Sf lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu33_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_Sf)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_Sf.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_Sf");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_Sf");
    check_field_offset(lv, v3, 5, "Sf_BFu33_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_Sf, Sf_BFu33_Sf)
//============================================================================



static void Test_Sf_BFu33_Uc()
{
  {
    init_simple_test("Sf_BFu33_Uc");
    static STRUCT_IF_C Sf_BFu33_Uc lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu33_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_Uc)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_Uc.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_Uc");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_Uc");
    check_field_offset(lv, v3, 5, "Sf_BFu33_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_Uc, Sf_BFu33_Uc)
//============================================================================



static void Test_Sf_BFu33_Ui()
{
  {
    init_simple_test("Sf_BFu33_Ui");
    static STRUCT_IF_C Sf_BFu33_Ui lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu33_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_Ui)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_Ui.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_Ui");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_Ui");
    check_field_offset(lv, v3, 5, "Sf_BFu33_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_Ui, Sf_BFu33_Ui)
//============================================================================



static void Test_Sf_BFu33_Ul()
{
  {
    init_simple_test("Sf_BFu33_Ul");
    static STRUCT_IF_C Sf_BFu33_Ul lv;
    check2(sizeof(lv), 13, "sizeof(Sf_BFu33_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_Ul)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_Ul.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_Ul");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_Ul");
    check_field_offset(lv, v3, 5, "Sf_BFu33_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_Ul, Sf_BFu33_Ul)
//============================================================================



static void Test_Sf_BFu33_Us()
{
  {
    init_simple_test("Sf_BFu33_Us");
    static STRUCT_IF_C Sf_BFu33_Us lv;
    check2(sizeof(lv), 7, "sizeof(Sf_BFu33_Us)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_Us)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_Us.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_Us");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_Us");
    check_field_offset(lv, v3, 5, "Sf_BFu33_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_Us, Sf_BFu33_Us)
//============================================================================



static void Test_Sf_BFu33_Vp()
{
  {
    init_simple_test("Sf_BFu33_Vp");
    static STRUCT_IF_C Sf_BFu33_Vp lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(Sf_BFu33_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu33_Vp)");
    check_field_offset(lv, v1, 0, "Sf_BFu33_Vp.v1");
    set_bf_and_test(lv, v2, 0, 0, 33, 1, "Sf_BFu33_Vp");
    set_bf_and_test(lv, v2, 0, 0, 33, hide_ull(1LL<<32), "Sf_BFu33_Vp");
    check_field_offset(lv, v3, 5, "Sf_BFu33_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu33_Vp, Sf_BFu33_Vp)
//============================================================================



static void Test_Sf_BFu7c()
{
  {
    init_simple_test("Sf_BFu7c");
    static STRUCT_IF_C Sf_BFu7c lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c, Sf_BFu7c)
//============================================================================



static void Test_Sf_BFu7c_BFu15i()
{
  {
    init_simple_test("Sf_BFu7c_BFu15i");
    static STRUCT_IF_C Sf_BFu7c_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_BFu15i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_BFu15i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_BFu15i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu15i");
    set_bf_and_test(lv, v3, 0, 7, 15, 1, "Sf_BFu7c_BFu15i");
    set_bf_and_test(lv, v3, 0, 7, 15, hide_ull(1LL<<14), "Sf_BFu7c_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_BFu15i, Sf_BFu7c_BFu15i)
//============================================================================



static void Test_Sf_BFu7c_BFu15ll()
{
  {
    init_simple_test("Sf_BFu7c_BFu15ll");
    static STRUCT_IF_C Sf_BFu7c_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_BFu15ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_BFu15ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_BFu15ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu15ll");
    set_bf_and_test(lv, v3, 0, 7, 15, 1, "Sf_BFu7c_BFu15ll");
    set_bf_and_test(lv, v3, 0, 7, 15, hide_ull(1LL<<14), "Sf_BFu7c_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_BFu15ll, Sf_BFu7c_BFu15ll)
//============================================================================



static void Test_Sf_BFu7c_BFu15s()
{
  {
    init_simple_test("Sf_BFu7c_BFu15s");
    static STRUCT_IF_C Sf_BFu7c_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_BFu15s)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_BFu15s.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_BFu15s");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu15s");
    set_bf_and_test(lv, v3, 0, 7, 15, 1, "Sf_BFu7c_BFu15s");
    set_bf_and_test(lv, v3, 0, 7, 15, hide_ull(1LL<<14), "Sf_BFu7c_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_BFu15s, Sf_BFu7c_BFu15s)
//============================================================================



static void Test_Sf_BFu7c_BFu16i()
{
  {
    init_simple_test("Sf_BFu7c_BFu16i");
    static STRUCT_IF_C Sf_BFu7c_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_BFu16i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_BFu16i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_BFu16i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu16i");
    set_bf_and_test(lv, v3, 0, 7, 16, 1, "Sf_BFu7c_BFu16i");
    set_bf_and_test(lv, v3, 0, 7, 16, hide_ull(1LL<<15), "Sf_BFu7c_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_BFu16i, Sf_BFu7c_BFu16i)
//============================================================================



static void Test_Sf_BFu7c_BFu16ll()
{
  {
    init_simple_test("Sf_BFu7c_BFu16ll");
    static STRUCT_IF_C Sf_BFu7c_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_BFu16ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_BFu16ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_BFu16ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu16ll");
    set_bf_and_test(lv, v3, 0, 7, 16, 1, "Sf_BFu7c_BFu16ll");
    set_bf_and_test(lv, v3, 0, 7, 16, hide_ull(1LL<<15), "Sf_BFu7c_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_BFu16ll, Sf_BFu7c_BFu16ll)
//============================================================================



static void Test_Sf_BFu7c_BFu16s()
{
  {
    init_simple_test("Sf_BFu7c_BFu16s");
    static STRUCT_IF_C Sf_BFu7c_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_BFu16s)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_BFu16s.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_BFu16s");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu16s");
    set_bf_and_test(lv, v3, 0, 7, 16, 1, "Sf_BFu7c_BFu16s");
    set_bf_and_test(lv, v3, 0, 7, 16, hide_ull(1LL<<15), "Sf_BFu7c_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_BFu16s, Sf_BFu7c_BFu16s)
//============================================================================



static void Test_Sf_BFu7c_BFu17i()
{
  {
    init_simple_test("Sf_BFu7c_BFu17i");
    static STRUCT_IF_C Sf_BFu7c_BFu17i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_BFu17i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_BFu17i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_BFu17i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu17i");
    set_bf_and_test(lv, v3, 0, 7, 17, 1, "Sf_BFu7c_BFu17i");
    set_bf_and_test(lv, v3, 0, 7, 17, hide_ull(1LL<<16), "Sf_BFu7c_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_BFu17i, Sf_BFu7c_BFu17i)
//============================================================================



static void Test_Sf_BFu7c_BFu17ll()
{
  {
    init_simple_test("Sf_BFu7c_BFu17ll");
    static STRUCT_IF_C Sf_BFu7c_BFu17ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_BFu17ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_BFu17ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_BFu17ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu17ll");
    set_bf_and_test(lv, v3, 0, 7, 17, 1, "Sf_BFu7c_BFu17ll");
    set_bf_and_test(lv, v3, 0, 7, 17, hide_ull(1LL<<16), "Sf_BFu7c_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_BFu17ll, Sf_BFu7c_BFu17ll)
//============================================================================



static void Test_Sf_BFu7c_BFu1c()
{
  {
    init_simple_test("Sf_BFu7c_BFu1c");
    static STRUCT_IF_C Sf_BFu7c_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu7c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_BFu1c)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_BFu1c.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_BFu1c");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu1c");
    set_bf_and_test(lv, v3, 0, 7, 1, 1, "Sf_BFu7c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_BFu1c, Sf_BFu7c_BFu1c)
//============================================================================



static void Test_Sf_BFu7c_BFu1i()
{
  {
    init_simple_test("Sf_BFu7c_BFu1i");
    static STRUCT_IF_C Sf_BFu7c_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu7c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_BFu1i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_BFu1i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_BFu1i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu1i");
    set_bf_and_test(lv, v3, 0, 7, 1, 1, "Sf_BFu7c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_BFu1i, Sf_BFu7c_BFu1i)
//============================================================================



static void Test_Sf_BFu7c_BFu1ll()
{
  {
    init_simple_test("Sf_BFu7c_BFu1ll");
    static STRUCT_IF_C Sf_BFu7c_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu7c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_BFu1ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_BFu1ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu1ll");
    set_bf_and_test(lv, v3, 0, 7, 1, 1, "Sf_BFu7c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_BFu1ll, Sf_BFu7c_BFu1ll)
//============================================================================



static void Test_Sf_BFu7c_BFu1s()
{
  {
    init_simple_test("Sf_BFu7c_BFu1s");
    static STRUCT_IF_C Sf_BFu7c_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu7c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_BFu1s)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_BFu1s.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_BFu1s");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu1s");
    set_bf_and_test(lv, v3, 0, 7, 1, 1, "Sf_BFu7c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_BFu1s, Sf_BFu7c_BFu1s)
//============================================================================



static void Test_Sf_BFu7c_BFu31i()
{
  {
    init_simple_test("Sf_BFu7c_BFu31i");
    static STRUCT_IF_C Sf_BFu7c_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_BFu31i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_BFu31i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_BFu31i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu31i");
    set_bf_and_test(lv, v3, 0, 7, 31, 1, "Sf_BFu7c_BFu31i");
    set_bf_and_test(lv, v3, 0, 7, 31, hide_ull(1LL<<30), "Sf_BFu7c_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_BFu31i, Sf_BFu7c_BFu31i)
//============================================================================



static void Test_Sf_BFu7c_BFu31ll()
{
  {
    init_simple_test("Sf_BFu7c_BFu31ll");
    static STRUCT_IF_C Sf_BFu7c_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_BFu31ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_BFu31ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_BFu31ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu31ll");
    set_bf_and_test(lv, v3, 0, 7, 31, 1, "Sf_BFu7c_BFu31ll");
    set_bf_and_test(lv, v3, 0, 7, 31, hide_ull(1LL<<30), "Sf_BFu7c_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_BFu31ll, Sf_BFu7c_BFu31ll)
//============================================================================



static void Test_Sf_BFu7c_BFu32i()
{
  {
    init_simple_test("Sf_BFu7c_BFu32i");
    static STRUCT_IF_C Sf_BFu7c_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_BFu32i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_BFu32i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_BFu32i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu32i");
    set_bf_and_test(lv, v3, 0, 7, 32, 1, "Sf_BFu7c_BFu32i");
    set_bf_and_test(lv, v3, 0, 7, 32, hide_ull(1LL<<31), "Sf_BFu7c_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_BFu32i, Sf_BFu7c_BFu32i)
//============================================================================



static void Test_Sf_BFu7c_BFu32ll()
{
  {
    init_simple_test("Sf_BFu7c_BFu32ll");
    static STRUCT_IF_C Sf_BFu7c_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_BFu32ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_BFu32ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_BFu32ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu32ll");
    set_bf_and_test(lv, v3, 0, 7, 32, 1, "Sf_BFu7c_BFu32ll");
    set_bf_and_test(lv, v3, 0, 7, 32, hide_ull(1LL<<31), "Sf_BFu7c_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_BFu32ll, Sf_BFu7c_BFu32ll)
//============================================================================



static void Test_Sf_BFu7c_BFu33()
{
  {
    init_simple_test("Sf_BFu7c_BFu33");
    static STRUCT_IF_C Sf_BFu7c_BFu33 lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_BFu33)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_BFu33.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_BFu33");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu33");
    set_bf_and_test(lv, v3, 0, 7, 33, 1, "Sf_BFu7c_BFu33");
    set_bf_and_test(lv, v3, 0, 7, 33, hide_ull(1LL<<32), "Sf_BFu7c_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_BFu33, Sf_BFu7c_BFu33)
//============================================================================



static void Test_Sf_BFu7c_BFu7c()
{
  {
    init_simple_test("Sf_BFu7c_BFu7c");
    static STRUCT_IF_C Sf_BFu7c_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_BFu7c)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_BFu7c.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_BFu7c");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu7c");
    set_bf_and_test(lv, v3, 0, 7, 7, 1, "Sf_BFu7c_BFu7c");
    set_bf_and_test(lv, v3, 0, 7, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_BFu7c, Sf_BFu7c_BFu7c)
//============================================================================



static void Test_Sf_BFu7c_BFu7i()
{
  {
    init_simple_test("Sf_BFu7c_BFu7i");
    static STRUCT_IF_C Sf_BFu7c_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_BFu7i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_BFu7i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_BFu7i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu7i");
    set_bf_and_test(lv, v3, 0, 7, 7, 1, "Sf_BFu7c_BFu7i");
    set_bf_and_test(lv, v3, 0, 7, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_BFu7i, Sf_BFu7c_BFu7i)
//============================================================================



static void Test_Sf_BFu7c_BFu7ll()
{
  {
    init_simple_test("Sf_BFu7c_BFu7ll");
    static STRUCT_IF_C Sf_BFu7c_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_BFu7ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_BFu7ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_BFu7ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu7ll");
    set_bf_and_test(lv, v3, 0, 7, 7, 1, "Sf_BFu7c_BFu7ll");
    set_bf_and_test(lv, v3, 0, 7, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_BFu7ll, Sf_BFu7c_BFu7ll)
//============================================================================



static void Test_Sf_BFu7c_BFu7s()
{
  {
    init_simple_test("Sf_BFu7c_BFu7s");
    static STRUCT_IF_C Sf_BFu7c_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_BFu7s)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_BFu7s.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_BFu7s");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu7s");
    set_bf_and_test(lv, v3, 0, 7, 7, 1, "Sf_BFu7c_BFu7s");
    set_bf_and_test(lv, v3, 0, 7, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_BFu7s, Sf_BFu7c_BFu7s)
//============================================================================



static void Test_Sf_BFu7c_BFu8c()
{
  {
    init_simple_test("Sf_BFu7c_BFu8c");
    static STRUCT_IF_C Sf_BFu7c_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_BFu8c)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_BFu8c.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_BFu8c");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu8c");
    set_bf_and_test(lv, v3, 0, 7, 8, 1, "Sf_BFu7c_BFu8c");
    set_bf_and_test(lv, v3, 0, 7, 8, hide_ull(1LL<<7), "Sf_BFu7c_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_BFu8c, Sf_BFu7c_BFu8c)
//============================================================================



static void Test_Sf_BFu7c_BFu8i()
{
  {
    init_simple_test("Sf_BFu7c_BFu8i");
    static STRUCT_IF_C Sf_BFu7c_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_BFu8i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_BFu8i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_BFu8i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu8i");
    set_bf_and_test(lv, v3, 0, 7, 8, 1, "Sf_BFu7c_BFu8i");
    set_bf_and_test(lv, v3, 0, 7, 8, hide_ull(1LL<<7), "Sf_BFu7c_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_BFu8i, Sf_BFu7c_BFu8i)
//============================================================================



static void Test_Sf_BFu7c_BFu8ll()
{
  {
    init_simple_test("Sf_BFu7c_BFu8ll");
    static STRUCT_IF_C Sf_BFu7c_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_BFu8ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_BFu8ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_BFu8ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu8ll");
    set_bf_and_test(lv, v3, 0, 7, 8, 1, "Sf_BFu7c_BFu8ll");
    set_bf_and_test(lv, v3, 0, 7, 8, hide_ull(1LL<<7), "Sf_BFu7c_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_BFu8ll, Sf_BFu7c_BFu8ll)
//============================================================================



static void Test_Sf_BFu7c_BFu8s()
{
  {
    init_simple_test("Sf_BFu7c_BFu8s");
    static STRUCT_IF_C Sf_BFu7c_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_BFu8s)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_BFu8s.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_BFu8s");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu8s");
    set_bf_and_test(lv, v3, 0, 7, 8, 1, "Sf_BFu7c_BFu8s");
    set_bf_and_test(lv, v3, 0, 7, 8, hide_ull(1LL<<7), "Sf_BFu7c_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_BFu8s, Sf_BFu7c_BFu8s)
//============================================================================



static void Test_Sf_BFu7c_BFu9i()
{
  {
    init_simple_test("Sf_BFu7c_BFu9i");
    static STRUCT_IF_C Sf_BFu7c_BFu9i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_BFu9i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_BFu9i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_BFu9i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu9i");
    set_bf_and_test(lv, v3, 0, 7, 9, 1, "Sf_BFu7c_BFu9i");
    set_bf_and_test(lv, v3, 0, 7, 9, hide_ull(1LL<<8), "Sf_BFu7c_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_BFu9i, Sf_BFu7c_BFu9i)
//============================================================================



static void Test_Sf_BFu7c_BFu9ll()
{
  {
    init_simple_test("Sf_BFu7c_BFu9ll");
    static STRUCT_IF_C Sf_BFu7c_BFu9ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_BFu9ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_BFu9ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_BFu9ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu9ll");
    set_bf_and_test(lv, v3, 0, 7, 9, 1, "Sf_BFu7c_BFu9ll");
    set_bf_and_test(lv, v3, 0, 7, 9, hide_ull(1LL<<8), "Sf_BFu7c_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_BFu9ll, Sf_BFu7c_BFu9ll)
//============================================================================



static void Test_Sf_BFu7c_BFu9s()
{
  {
    init_simple_test("Sf_BFu7c_BFu9s");
    static STRUCT_IF_C Sf_BFu7c_BFu9s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_BFu9s)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_BFu9s.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_BFu9s");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_BFu9s");
    set_bf_and_test(lv, v3, 0, 7, 9, 1, "Sf_BFu7c_BFu9s");
    set_bf_and_test(lv, v3, 0, 7, 9, hide_ull(1LL<<8), "Sf_BFu7c_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_BFu9s, Sf_BFu7c_BFu9s)
//============================================================================



static void Test_Sf_BFu7c_C()
{
  {
    init_simple_test("Sf_BFu7c_C");
    static STRUCT_IF_C Sf_BFu7c_C lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7c_C)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_C)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_C.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_C");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_C");
    check_field_offset(lv, v3, 1, "Sf_BFu7c_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_C, Sf_BFu7c_C)
//============================================================================



static void Test_Sf_BFu7c_D()
{
  {
    init_simple_test("Sf_BFu7c_D");
    static STRUCT_IF_C Sf_BFu7c_D lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu7c_D)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_D)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_D.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_D");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_D");
    check_field_offset(lv, v3, 1, "Sf_BFu7c_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_D, Sf_BFu7c_D)
//============================================================================



static void Test_Sf_BFu7c_F()
{
  {
    init_simple_test("Sf_BFu7c_F");
    static STRUCT_IF_C Sf_BFu7c_F lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7c_F)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_F)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_F.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_F");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_F");
    check_field_offset(lv, v3, 1, "Sf_BFu7c_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_F, Sf_BFu7c_F)
//============================================================================



static void Test_Sf_BFu7c_I()
{
  {
    init_simple_test("Sf_BFu7c_I");
    static STRUCT_IF_C Sf_BFu7c_I lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7c_I)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_I)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_I.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_I");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_I");
    check_field_offset(lv, v3, 1, "Sf_BFu7c_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_I, Sf_BFu7c_I)
//============================================================================



static void Test_Sf_BFu7c_Ip()
{
  {
    init_simple_test("Sf_BFu7c_Ip");
    static STRUCT_IF_C Sf_BFu7c_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Sf_BFu7c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_Ip)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_Ip.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_Ip");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_Ip");
    check_field_offset(lv, v3, 1, "Sf_BFu7c_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_Ip, Sf_BFu7c_Ip)
//============================================================================



static void Test_Sf_BFu7c_L()
{
  {
    init_simple_test("Sf_BFu7c_L");
    static STRUCT_IF_C Sf_BFu7c_L lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu7c_L)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_L)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_L.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_L");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_L");
    check_field_offset(lv, v3, 1, "Sf_BFu7c_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_L, Sf_BFu7c_L)
//============================================================================



static void Test_Sf_BFu7c_S()
{
  {
    init_simple_test("Sf_BFu7c_S");
    static STRUCT_IF_C Sf_BFu7c_S lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7c_S)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_S)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_S.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_S");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_S");
    check_field_offset(lv, v3, 1, "Sf_BFu7c_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_S, Sf_BFu7c_S)
//============================================================================



static void Test_Sf_BFu7c_Sf()
{
  {
    init_simple_test("Sf_BFu7c_Sf");
    static STRUCT_IF_C Sf_BFu7c_Sf lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu7c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_Sf)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_Sf.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_Sf");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_Sf");
    check_field_offset(lv, v3, 1, "Sf_BFu7c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_Sf, Sf_BFu7c_Sf)
//============================================================================



static void Test_Sf_BFu7c_Uc()
{
  {
    init_simple_test("Sf_BFu7c_Uc");
    static STRUCT_IF_C Sf_BFu7c_Uc lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_Uc)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_Uc.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_Uc");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_Uc");
    check_field_offset(lv, v3, 1, "Sf_BFu7c_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_Uc, Sf_BFu7c_Uc)
//============================================================================



static void Test_Sf_BFu7c_Ui()
{
  {
    init_simple_test("Sf_BFu7c_Ui");
    static STRUCT_IF_C Sf_BFu7c_Ui lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_Ui)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_Ui.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_Ui");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_Ui");
    check_field_offset(lv, v3, 1, "Sf_BFu7c_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_Ui, Sf_BFu7c_Ui)
//============================================================================



static void Test_Sf_BFu7c_Ul()
{
  {
    init_simple_test("Sf_BFu7c_Ul");
    static STRUCT_IF_C Sf_BFu7c_Ul lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu7c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_Ul)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_Ul.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_Ul");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_Ul");
    check_field_offset(lv, v3, 1, "Sf_BFu7c_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_Ul, Sf_BFu7c_Ul)
//============================================================================



static void Test_Sf_BFu7c_Us()
{
  {
    init_simple_test("Sf_BFu7c_Us");
    static STRUCT_IF_C Sf_BFu7c_Us lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_Us)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_Us.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_Us");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_Us");
    check_field_offset(lv, v3, 1, "Sf_BFu7c_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_Us, Sf_BFu7c_Us)
//============================================================================



static void Test_Sf_BFu7c_Vp()
{
  {
    init_simple_test("Sf_BFu7c_Vp");
    static STRUCT_IF_C Sf_BFu7c_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Sf_BFu7c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7c_Vp)");
    check_field_offset(lv, v1, 0, "Sf_BFu7c_Vp.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7c_Vp");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7c_Vp");
    check_field_offset(lv, v3, 1, "Sf_BFu7c_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7c_Vp, Sf_BFu7c_Vp)
//============================================================================



static void Test_Sf_BFu7i()
{
  {
    init_simple_test("Sf_BFu7i");
    static STRUCT_IF_C Sf_BFu7i lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i, Sf_BFu7i)
//============================================================================



static void Test_Sf_BFu7i_BFu15i()
{
  {
    init_simple_test("Sf_BFu7i_BFu15i");
    static STRUCT_IF_C Sf_BFu7i_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_BFu15i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_BFu15i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_BFu15i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu15i");
    set_bf_and_test(lv, v3, 0, 7, 15, 1, "Sf_BFu7i_BFu15i");
    set_bf_and_test(lv, v3, 0, 7, 15, hide_ull(1LL<<14), "Sf_BFu7i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_BFu15i, Sf_BFu7i_BFu15i)
//============================================================================



static void Test_Sf_BFu7i_BFu15ll()
{
  {
    init_simple_test("Sf_BFu7i_BFu15ll");
    static STRUCT_IF_C Sf_BFu7i_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_BFu15ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_BFu15ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu15ll");
    set_bf_and_test(lv, v3, 0, 7, 15, 1, "Sf_BFu7i_BFu15ll");
    set_bf_and_test(lv, v3, 0, 7, 15, hide_ull(1LL<<14), "Sf_BFu7i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_BFu15ll, Sf_BFu7i_BFu15ll)
//============================================================================



static void Test_Sf_BFu7i_BFu15s()
{
  {
    init_simple_test("Sf_BFu7i_BFu15s");
    static STRUCT_IF_C Sf_BFu7i_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_BFu15s)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_BFu15s.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_BFu15s");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu15s");
    set_bf_and_test(lv, v3, 0, 7, 15, 1, "Sf_BFu7i_BFu15s");
    set_bf_and_test(lv, v3, 0, 7, 15, hide_ull(1LL<<14), "Sf_BFu7i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_BFu15s, Sf_BFu7i_BFu15s)
//============================================================================



static void Test_Sf_BFu7i_BFu16i()
{
  {
    init_simple_test("Sf_BFu7i_BFu16i");
    static STRUCT_IF_C Sf_BFu7i_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_BFu16i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_BFu16i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_BFu16i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu16i");
    set_bf_and_test(lv, v3, 0, 7, 16, 1, "Sf_BFu7i_BFu16i");
    set_bf_and_test(lv, v3, 0, 7, 16, hide_ull(1LL<<15), "Sf_BFu7i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_BFu16i, Sf_BFu7i_BFu16i)
//============================================================================



static void Test_Sf_BFu7i_BFu16ll()
{
  {
    init_simple_test("Sf_BFu7i_BFu16ll");
    static STRUCT_IF_C Sf_BFu7i_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_BFu16ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_BFu16ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu16ll");
    set_bf_and_test(lv, v3, 0, 7, 16, 1, "Sf_BFu7i_BFu16ll");
    set_bf_and_test(lv, v3, 0, 7, 16, hide_ull(1LL<<15), "Sf_BFu7i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_BFu16ll, Sf_BFu7i_BFu16ll)
//============================================================================



static void Test_Sf_BFu7i_BFu16s()
{
  {
    init_simple_test("Sf_BFu7i_BFu16s");
    static STRUCT_IF_C Sf_BFu7i_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_BFu16s)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_BFu16s.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_BFu16s");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu16s");
    set_bf_and_test(lv, v3, 0, 7, 16, 1, "Sf_BFu7i_BFu16s");
    set_bf_and_test(lv, v3, 0, 7, 16, hide_ull(1LL<<15), "Sf_BFu7i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_BFu16s, Sf_BFu7i_BFu16s)
//============================================================================



static void Test_Sf_BFu7i_BFu17i()
{
  {
    init_simple_test("Sf_BFu7i_BFu17i");
    static STRUCT_IF_C Sf_BFu7i_BFu17i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_BFu17i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_BFu17i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_BFu17i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu17i");
    set_bf_and_test(lv, v3, 0, 7, 17, 1, "Sf_BFu7i_BFu17i");
    set_bf_and_test(lv, v3, 0, 7, 17, hide_ull(1LL<<16), "Sf_BFu7i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_BFu17i, Sf_BFu7i_BFu17i)
//============================================================================



static void Test_Sf_BFu7i_BFu17ll()
{
  {
    init_simple_test("Sf_BFu7i_BFu17ll");
    static STRUCT_IF_C Sf_BFu7i_BFu17ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_BFu17ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_BFu17ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu17ll");
    set_bf_and_test(lv, v3, 0, 7, 17, 1, "Sf_BFu7i_BFu17ll");
    set_bf_and_test(lv, v3, 0, 7, 17, hide_ull(1LL<<16), "Sf_BFu7i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_BFu17ll, Sf_BFu7i_BFu17ll)
//============================================================================



static void Test_Sf_BFu7i_BFu1c()
{
  {
    init_simple_test("Sf_BFu7i_BFu1c");
    static STRUCT_IF_C Sf_BFu7i_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu7i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_BFu1c)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_BFu1c.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_BFu1c");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu1c");
    set_bf_and_test(lv, v3, 0, 7, 1, 1, "Sf_BFu7i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_BFu1c, Sf_BFu7i_BFu1c)
//============================================================================



static void Test_Sf_BFu7i_BFu1i()
{
  {
    init_simple_test("Sf_BFu7i_BFu1i");
    static STRUCT_IF_C Sf_BFu7i_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu7i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_BFu1i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_BFu1i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_BFu1i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu1i");
    set_bf_and_test(lv, v3, 0, 7, 1, 1, "Sf_BFu7i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_BFu1i, Sf_BFu7i_BFu1i)
//============================================================================



static void Test_Sf_BFu7i_BFu1ll()
{
  {
    init_simple_test("Sf_BFu7i_BFu1ll");
    static STRUCT_IF_C Sf_BFu7i_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu7i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_BFu1ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu1ll");
    set_bf_and_test(lv, v3, 0, 7, 1, 1, "Sf_BFu7i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_BFu1ll, Sf_BFu7i_BFu1ll)
//============================================================================



static void Test_Sf_BFu7i_BFu1s()
{
  {
    init_simple_test("Sf_BFu7i_BFu1s");
    static STRUCT_IF_C Sf_BFu7i_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu7i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_BFu1s)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_BFu1s.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_BFu1s");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu1s");
    set_bf_and_test(lv, v3, 0, 7, 1, 1, "Sf_BFu7i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_BFu1s, Sf_BFu7i_BFu1s)
//============================================================================



static void Test_Sf_BFu7i_BFu31i()
{
  {
    init_simple_test("Sf_BFu7i_BFu31i");
    static STRUCT_IF_C Sf_BFu7i_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_BFu31i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_BFu31i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_BFu31i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu31i");
    set_bf_and_test(lv, v3, 0, 7, 31, 1, "Sf_BFu7i_BFu31i");
    set_bf_and_test(lv, v3, 0, 7, 31, hide_ull(1LL<<30), "Sf_BFu7i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_BFu31i, Sf_BFu7i_BFu31i)
//============================================================================



static void Test_Sf_BFu7i_BFu31ll()
{
  {
    init_simple_test("Sf_BFu7i_BFu31ll");
    static STRUCT_IF_C Sf_BFu7i_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_BFu31ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_BFu31ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu31ll");
    set_bf_and_test(lv, v3, 0, 7, 31, 1, "Sf_BFu7i_BFu31ll");
    set_bf_and_test(lv, v3, 0, 7, 31, hide_ull(1LL<<30), "Sf_BFu7i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_BFu31ll, Sf_BFu7i_BFu31ll)
//============================================================================



static void Test_Sf_BFu7i_BFu32i()
{
  {
    init_simple_test("Sf_BFu7i_BFu32i");
    static STRUCT_IF_C Sf_BFu7i_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_BFu32i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_BFu32i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_BFu32i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu32i");
    set_bf_and_test(lv, v3, 0, 7, 32, 1, "Sf_BFu7i_BFu32i");
    set_bf_and_test(lv, v3, 0, 7, 32, hide_ull(1LL<<31), "Sf_BFu7i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_BFu32i, Sf_BFu7i_BFu32i)
//============================================================================



static void Test_Sf_BFu7i_BFu32ll()
{
  {
    init_simple_test("Sf_BFu7i_BFu32ll");
    static STRUCT_IF_C Sf_BFu7i_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_BFu32ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_BFu32ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu32ll");
    set_bf_and_test(lv, v3, 0, 7, 32, 1, "Sf_BFu7i_BFu32ll");
    set_bf_and_test(lv, v3, 0, 7, 32, hide_ull(1LL<<31), "Sf_BFu7i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_BFu32ll, Sf_BFu7i_BFu32ll)
//============================================================================



static void Test_Sf_BFu7i_BFu33()
{
  {
    init_simple_test("Sf_BFu7i_BFu33");
    static STRUCT_IF_C Sf_BFu7i_BFu33 lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_BFu33)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_BFu33.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_BFu33");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu33");
    set_bf_and_test(lv, v3, 0, 7, 33, 1, "Sf_BFu7i_BFu33");
    set_bf_and_test(lv, v3, 0, 7, 33, hide_ull(1LL<<32), "Sf_BFu7i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_BFu33, Sf_BFu7i_BFu33)
//============================================================================



static void Test_Sf_BFu7i_BFu7c()
{
  {
    init_simple_test("Sf_BFu7i_BFu7c");
    static STRUCT_IF_C Sf_BFu7i_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_BFu7c)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_BFu7c.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_BFu7c");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu7c");
    set_bf_and_test(lv, v3, 0, 7, 7, 1, "Sf_BFu7i_BFu7c");
    set_bf_and_test(lv, v3, 0, 7, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_BFu7c, Sf_BFu7i_BFu7c)
//============================================================================



static void Test_Sf_BFu7i_BFu7i()
{
  {
    init_simple_test("Sf_BFu7i_BFu7i");
    static STRUCT_IF_C Sf_BFu7i_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_BFu7i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_BFu7i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_BFu7i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu7i");
    set_bf_and_test(lv, v3, 0, 7, 7, 1, "Sf_BFu7i_BFu7i");
    set_bf_and_test(lv, v3, 0, 7, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_BFu7i, Sf_BFu7i_BFu7i)
//============================================================================



static void Test_Sf_BFu7i_BFu7ll()
{
  {
    init_simple_test("Sf_BFu7i_BFu7ll");
    static STRUCT_IF_C Sf_BFu7i_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_BFu7ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_BFu7ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu7ll");
    set_bf_and_test(lv, v3, 0, 7, 7, 1, "Sf_BFu7i_BFu7ll");
    set_bf_and_test(lv, v3, 0, 7, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_BFu7ll, Sf_BFu7i_BFu7ll)
//============================================================================



static void Test_Sf_BFu7i_BFu7s()
{
  {
    init_simple_test("Sf_BFu7i_BFu7s");
    static STRUCT_IF_C Sf_BFu7i_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_BFu7s)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_BFu7s.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_BFu7s");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu7s");
    set_bf_and_test(lv, v3, 0, 7, 7, 1, "Sf_BFu7i_BFu7s");
    set_bf_and_test(lv, v3, 0, 7, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_BFu7s, Sf_BFu7i_BFu7s)
//============================================================================



static void Test_Sf_BFu7i_BFu8c()
{
  {
    init_simple_test("Sf_BFu7i_BFu8c");
    static STRUCT_IF_C Sf_BFu7i_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_BFu8c)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_BFu8c.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_BFu8c");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu8c");
    set_bf_and_test(lv, v3, 0, 7, 8, 1, "Sf_BFu7i_BFu8c");
    set_bf_and_test(lv, v3, 0, 7, 8, hide_ull(1LL<<7), "Sf_BFu7i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_BFu8c, Sf_BFu7i_BFu8c)
//============================================================================



static void Test_Sf_BFu7i_BFu8i()
{
  {
    init_simple_test("Sf_BFu7i_BFu8i");
    static STRUCT_IF_C Sf_BFu7i_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_BFu8i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_BFu8i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_BFu8i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu8i");
    set_bf_and_test(lv, v3, 0, 7, 8, 1, "Sf_BFu7i_BFu8i");
    set_bf_and_test(lv, v3, 0, 7, 8, hide_ull(1LL<<7), "Sf_BFu7i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_BFu8i, Sf_BFu7i_BFu8i)
//============================================================================



static void Test_Sf_BFu7i_BFu8ll()
{
  {
    init_simple_test("Sf_BFu7i_BFu8ll");
    static STRUCT_IF_C Sf_BFu7i_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_BFu8ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_BFu8ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu8ll");
    set_bf_and_test(lv, v3, 0, 7, 8, 1, "Sf_BFu7i_BFu8ll");
    set_bf_and_test(lv, v3, 0, 7, 8, hide_ull(1LL<<7), "Sf_BFu7i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_BFu8ll, Sf_BFu7i_BFu8ll)
//============================================================================



static void Test_Sf_BFu7i_BFu8s()
{
  {
    init_simple_test("Sf_BFu7i_BFu8s");
    static STRUCT_IF_C Sf_BFu7i_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_BFu8s)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_BFu8s.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_BFu8s");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu8s");
    set_bf_and_test(lv, v3, 0, 7, 8, 1, "Sf_BFu7i_BFu8s");
    set_bf_and_test(lv, v3, 0, 7, 8, hide_ull(1LL<<7), "Sf_BFu7i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_BFu8s, Sf_BFu7i_BFu8s)
//============================================================================



static void Test_Sf_BFu7i_BFu9i()
{
  {
    init_simple_test("Sf_BFu7i_BFu9i");
    static STRUCT_IF_C Sf_BFu7i_BFu9i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_BFu9i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_BFu9i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_BFu9i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu9i");
    set_bf_and_test(lv, v3, 0, 7, 9, 1, "Sf_BFu7i_BFu9i");
    set_bf_and_test(lv, v3, 0, 7, 9, hide_ull(1LL<<8), "Sf_BFu7i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_BFu9i, Sf_BFu7i_BFu9i)
//============================================================================



static void Test_Sf_BFu7i_BFu9ll()
{
  {
    init_simple_test("Sf_BFu7i_BFu9ll");
    static STRUCT_IF_C Sf_BFu7i_BFu9ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_BFu9ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_BFu9ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu9ll");
    set_bf_and_test(lv, v3, 0, 7, 9, 1, "Sf_BFu7i_BFu9ll");
    set_bf_and_test(lv, v3, 0, 7, 9, hide_ull(1LL<<8), "Sf_BFu7i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_BFu9ll, Sf_BFu7i_BFu9ll)
//============================================================================



static void Test_Sf_BFu7i_BFu9s()
{
  {
    init_simple_test("Sf_BFu7i_BFu9s");
    static STRUCT_IF_C Sf_BFu7i_BFu9s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_BFu9s)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_BFu9s.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_BFu9s");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_BFu9s");
    set_bf_and_test(lv, v3, 0, 7, 9, 1, "Sf_BFu7i_BFu9s");
    set_bf_and_test(lv, v3, 0, 7, 9, hide_ull(1LL<<8), "Sf_BFu7i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_BFu9s, Sf_BFu7i_BFu9s)
//============================================================================



static void Test_Sf_BFu7i_C()
{
  {
    init_simple_test("Sf_BFu7i_C");
    static STRUCT_IF_C Sf_BFu7i_C lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7i_C)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_C)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_C.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_C");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_C");
    check_field_offset(lv, v3, 1, "Sf_BFu7i_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_C, Sf_BFu7i_C)
//============================================================================



static void Test_Sf_BFu7i_D()
{
  {
    init_simple_test("Sf_BFu7i_D");
    static STRUCT_IF_C Sf_BFu7i_D lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu7i_D)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_D)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_D.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_D");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_D");
    check_field_offset(lv, v3, 1, "Sf_BFu7i_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_D, Sf_BFu7i_D)
//============================================================================



static void Test_Sf_BFu7i_F()
{
  {
    init_simple_test("Sf_BFu7i_F");
    static STRUCT_IF_C Sf_BFu7i_F lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7i_F)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_F)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_F.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_F");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_F");
    check_field_offset(lv, v3, 1, "Sf_BFu7i_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_F, Sf_BFu7i_F)
//============================================================================



static void Test_Sf_BFu7i_I()
{
  {
    init_simple_test("Sf_BFu7i_I");
    static STRUCT_IF_C Sf_BFu7i_I lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7i_I)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_I)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_I.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_I");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_I");
    check_field_offset(lv, v3, 1, "Sf_BFu7i_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_I, Sf_BFu7i_I)
//============================================================================



static void Test_Sf_BFu7i_Ip()
{
  {
    init_simple_test("Sf_BFu7i_Ip");
    static STRUCT_IF_C Sf_BFu7i_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Sf_BFu7i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_Ip)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_Ip.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_Ip");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_Ip");
    check_field_offset(lv, v3, 1, "Sf_BFu7i_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_Ip, Sf_BFu7i_Ip)
//============================================================================



static void Test_Sf_BFu7i_L()
{
  {
    init_simple_test("Sf_BFu7i_L");
    static STRUCT_IF_C Sf_BFu7i_L lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu7i_L)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_L)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_L.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_L");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_L");
    check_field_offset(lv, v3, 1, "Sf_BFu7i_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_L, Sf_BFu7i_L)
//============================================================================



static void Test_Sf_BFu7i_S()
{
  {
    init_simple_test("Sf_BFu7i_S");
    static STRUCT_IF_C Sf_BFu7i_S lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7i_S)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_S)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_S.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_S");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_S");
    check_field_offset(lv, v3, 1, "Sf_BFu7i_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_S, Sf_BFu7i_S)
//============================================================================



static void Test_Sf_BFu7i_Sf()
{
  {
    init_simple_test("Sf_BFu7i_Sf");
    static STRUCT_IF_C Sf_BFu7i_Sf lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu7i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_Sf)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_Sf.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_Sf");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_Sf");
    check_field_offset(lv, v3, 1, "Sf_BFu7i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_Sf, Sf_BFu7i_Sf)
//============================================================================



static void Test_Sf_BFu7i_Uc()
{
  {
    init_simple_test("Sf_BFu7i_Uc");
    static STRUCT_IF_C Sf_BFu7i_Uc lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_Uc)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_Uc.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_Uc");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_Uc");
    check_field_offset(lv, v3, 1, "Sf_BFu7i_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_Uc, Sf_BFu7i_Uc)
//============================================================================



static void Test_Sf_BFu7i_Ui()
{
  {
    init_simple_test("Sf_BFu7i_Ui");
    static STRUCT_IF_C Sf_BFu7i_Ui lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_Ui)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_Ui.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_Ui");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_Ui");
    check_field_offset(lv, v3, 1, "Sf_BFu7i_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_Ui, Sf_BFu7i_Ui)
//============================================================================



static void Test_Sf_BFu7i_Ul()
{
  {
    init_simple_test("Sf_BFu7i_Ul");
    static STRUCT_IF_C Sf_BFu7i_Ul lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu7i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_Ul)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_Ul.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_Ul");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_Ul");
    check_field_offset(lv, v3, 1, "Sf_BFu7i_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_Ul, Sf_BFu7i_Ul)
//============================================================================



static void Test_Sf_BFu7i_Us()
{
  {
    init_simple_test("Sf_BFu7i_Us");
    static STRUCT_IF_C Sf_BFu7i_Us lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_Us)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_Us.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_Us");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_Us");
    check_field_offset(lv, v3, 1, "Sf_BFu7i_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_Us, Sf_BFu7i_Us)
//============================================================================



static void Test_Sf_BFu7i_Vp()
{
  {
    init_simple_test("Sf_BFu7i_Vp");
    static STRUCT_IF_C Sf_BFu7i_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Sf_BFu7i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7i_Vp)");
    check_field_offset(lv, v1, 0, "Sf_BFu7i_Vp.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7i_Vp");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7i_Vp");
    check_field_offset(lv, v3, 1, "Sf_BFu7i_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7i_Vp, Sf_BFu7i_Vp)
//============================================================================



static void Test_Sf_BFu7ll()
{
  {
    init_simple_test("Sf_BFu7ll");
    static STRUCT_IF_C Sf_BFu7ll lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll, Sf_BFu7ll)
//============================================================================



static void Test_Sf_BFu7ll_BFu15i()
{
  {
    init_simple_test("Sf_BFu7ll_BFu15i");
    static STRUCT_IF_C Sf_BFu7ll_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_BFu15i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_BFu15i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu15i");
    set_bf_and_test(lv, v3, 0, 7, 15, 1, "Sf_BFu7ll_BFu15i");
    set_bf_and_test(lv, v3, 0, 7, 15, hide_ull(1LL<<14), "Sf_BFu7ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_BFu15i, Sf_BFu7ll_BFu15i)
//============================================================================



static void Test_Sf_BFu7ll_BFu15ll()
{
  {
    init_simple_test("Sf_BFu7ll_BFu15ll");
    static STRUCT_IF_C Sf_BFu7ll_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_BFu15ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu15ll");
    set_bf_and_test(lv, v3, 0, 7, 15, 1, "Sf_BFu7ll_BFu15ll");
    set_bf_and_test(lv, v3, 0, 7, 15, hide_ull(1LL<<14), "Sf_BFu7ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_BFu15ll, Sf_BFu7ll_BFu15ll)
//============================================================================



static void Test_Sf_BFu7ll_BFu15s()
{
  {
    init_simple_test("Sf_BFu7ll_BFu15s");
    static STRUCT_IF_C Sf_BFu7ll_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_BFu15s)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_BFu15s");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu15s");
    set_bf_and_test(lv, v3, 0, 7, 15, 1, "Sf_BFu7ll_BFu15s");
    set_bf_and_test(lv, v3, 0, 7, 15, hide_ull(1LL<<14), "Sf_BFu7ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_BFu15s, Sf_BFu7ll_BFu15s)
//============================================================================



static void Test_Sf_BFu7ll_BFu16i()
{
  {
    init_simple_test("Sf_BFu7ll_BFu16i");
    static STRUCT_IF_C Sf_BFu7ll_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_BFu16i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_BFu16i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu16i");
    set_bf_and_test(lv, v3, 0, 7, 16, 1, "Sf_BFu7ll_BFu16i");
    set_bf_and_test(lv, v3, 0, 7, 16, hide_ull(1LL<<15), "Sf_BFu7ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_BFu16i, Sf_BFu7ll_BFu16i)
//============================================================================



static void Test_Sf_BFu7ll_BFu16ll()
{
  {
    init_simple_test("Sf_BFu7ll_BFu16ll");
    static STRUCT_IF_C Sf_BFu7ll_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_BFu16ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu16ll");
    set_bf_and_test(lv, v3, 0, 7, 16, 1, "Sf_BFu7ll_BFu16ll");
    set_bf_and_test(lv, v3, 0, 7, 16, hide_ull(1LL<<15), "Sf_BFu7ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_BFu16ll, Sf_BFu7ll_BFu16ll)
//============================================================================



static void Test_Sf_BFu7ll_BFu16s()
{
  {
    init_simple_test("Sf_BFu7ll_BFu16s");
    static STRUCT_IF_C Sf_BFu7ll_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_BFu16s)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_BFu16s");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu16s");
    set_bf_and_test(lv, v3, 0, 7, 16, 1, "Sf_BFu7ll_BFu16s");
    set_bf_and_test(lv, v3, 0, 7, 16, hide_ull(1LL<<15), "Sf_BFu7ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_BFu16s, Sf_BFu7ll_BFu16s)
//============================================================================



static void Test_Sf_BFu7ll_BFu17i()
{
  {
    init_simple_test("Sf_BFu7ll_BFu17i");
    static STRUCT_IF_C Sf_BFu7ll_BFu17i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_BFu17i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_BFu17i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu17i");
    set_bf_and_test(lv, v3, 0, 7, 17, 1, "Sf_BFu7ll_BFu17i");
    set_bf_and_test(lv, v3, 0, 7, 17, hide_ull(1LL<<16), "Sf_BFu7ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_BFu17i, Sf_BFu7ll_BFu17i)
//============================================================================



static void Test_Sf_BFu7ll_BFu17ll()
{
  {
    init_simple_test("Sf_BFu7ll_BFu17ll");
    static STRUCT_IF_C Sf_BFu7ll_BFu17ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_BFu17ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu17ll");
    set_bf_and_test(lv, v3, 0, 7, 17, 1, "Sf_BFu7ll_BFu17ll");
    set_bf_and_test(lv, v3, 0, 7, 17, hide_ull(1LL<<16), "Sf_BFu7ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_BFu17ll, Sf_BFu7ll_BFu17ll)
//============================================================================



static void Test_Sf_BFu7ll_BFu1c()
{
  {
    init_simple_test("Sf_BFu7ll_BFu1c");
    static STRUCT_IF_C Sf_BFu7ll_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu7ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_BFu1c)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu1c");
    set_bf_and_test(lv, v3, 0, 7, 1, 1, "Sf_BFu7ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_BFu1c, Sf_BFu7ll_BFu1c)
//============================================================================



static void Test_Sf_BFu7ll_BFu1i()
{
  {
    init_simple_test("Sf_BFu7ll_BFu1i");
    static STRUCT_IF_C Sf_BFu7ll_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu7ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_BFu1i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu1i");
    set_bf_and_test(lv, v3, 0, 7, 1, 1, "Sf_BFu7ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_BFu1i, Sf_BFu7ll_BFu1i)
//============================================================================



static void Test_Sf_BFu7ll_BFu1ll()
{
  {
    init_simple_test("Sf_BFu7ll_BFu1ll");
    static STRUCT_IF_C Sf_BFu7ll_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu7ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu1ll");
    set_bf_and_test(lv, v3, 0, 7, 1, 1, "Sf_BFu7ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_BFu1ll, Sf_BFu7ll_BFu1ll)
//============================================================================



static void Test_Sf_BFu7ll_BFu1s()
{
  {
    init_simple_test("Sf_BFu7ll_BFu1s");
    static STRUCT_IF_C Sf_BFu7ll_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu7ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_BFu1s)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu1s");
    set_bf_and_test(lv, v3, 0, 7, 1, 1, "Sf_BFu7ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_BFu1s, Sf_BFu7ll_BFu1s)
//============================================================================



static void Test_Sf_BFu7ll_BFu31i()
{
  {
    init_simple_test("Sf_BFu7ll_BFu31i");
    static STRUCT_IF_C Sf_BFu7ll_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_BFu31i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_BFu31i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu31i");
    set_bf_and_test(lv, v3, 0, 7, 31, 1, "Sf_BFu7ll_BFu31i");
    set_bf_and_test(lv, v3, 0, 7, 31, hide_ull(1LL<<30), "Sf_BFu7ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_BFu31i, Sf_BFu7ll_BFu31i)
//============================================================================



static void Test_Sf_BFu7ll_BFu31ll()
{
  {
    init_simple_test("Sf_BFu7ll_BFu31ll");
    static STRUCT_IF_C Sf_BFu7ll_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_BFu31ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu31ll");
    set_bf_and_test(lv, v3, 0, 7, 31, 1, "Sf_BFu7ll_BFu31ll");
    set_bf_and_test(lv, v3, 0, 7, 31, hide_ull(1LL<<30), "Sf_BFu7ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_BFu31ll, Sf_BFu7ll_BFu31ll)
//============================================================================



static void Test_Sf_BFu7ll_BFu32i()
{
  {
    init_simple_test("Sf_BFu7ll_BFu32i");
    static STRUCT_IF_C Sf_BFu7ll_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_BFu32i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_BFu32i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu32i");
    set_bf_and_test(lv, v3, 0, 7, 32, 1, "Sf_BFu7ll_BFu32i");
    set_bf_and_test(lv, v3, 0, 7, 32, hide_ull(1LL<<31), "Sf_BFu7ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_BFu32i, Sf_BFu7ll_BFu32i)
//============================================================================



static void Test_Sf_BFu7ll_BFu32ll()
{
  {
    init_simple_test("Sf_BFu7ll_BFu32ll");
    static STRUCT_IF_C Sf_BFu7ll_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_BFu32ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu32ll");
    set_bf_and_test(lv, v3, 0, 7, 32, 1, "Sf_BFu7ll_BFu32ll");
    set_bf_and_test(lv, v3, 0, 7, 32, hide_ull(1LL<<31), "Sf_BFu7ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_BFu32ll, Sf_BFu7ll_BFu32ll)
//============================================================================



static void Test_Sf_BFu7ll_BFu33()
{
  {
    init_simple_test("Sf_BFu7ll_BFu33");
    static STRUCT_IF_C Sf_BFu7ll_BFu33 lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_BFu33)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_BFu33.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_BFu33");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu33");
    set_bf_and_test(lv, v3, 0, 7, 33, 1, "Sf_BFu7ll_BFu33");
    set_bf_and_test(lv, v3, 0, 7, 33, hide_ull(1LL<<32), "Sf_BFu7ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_BFu33, Sf_BFu7ll_BFu33)
//============================================================================



static void Test_Sf_BFu7ll_BFu7c()
{
  {
    init_simple_test("Sf_BFu7ll_BFu7c");
    static STRUCT_IF_C Sf_BFu7ll_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_BFu7c)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_BFu7c");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu7c");
    set_bf_and_test(lv, v3, 0, 7, 7, 1, "Sf_BFu7ll_BFu7c");
    set_bf_and_test(lv, v3, 0, 7, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_BFu7c, Sf_BFu7ll_BFu7c)
//============================================================================



static void Test_Sf_BFu7ll_BFu7i()
{
  {
    init_simple_test("Sf_BFu7ll_BFu7i");
    static STRUCT_IF_C Sf_BFu7ll_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_BFu7i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_BFu7i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu7i");
    set_bf_and_test(lv, v3, 0, 7, 7, 1, "Sf_BFu7ll_BFu7i");
    set_bf_and_test(lv, v3, 0, 7, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_BFu7i, Sf_BFu7ll_BFu7i)
//============================================================================



static void Test_Sf_BFu7ll_BFu7ll()
{
  {
    init_simple_test("Sf_BFu7ll_BFu7ll");
    static STRUCT_IF_C Sf_BFu7ll_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_BFu7ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu7ll");
    set_bf_and_test(lv, v3, 0, 7, 7, 1, "Sf_BFu7ll_BFu7ll");
    set_bf_and_test(lv, v3, 0, 7, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_BFu7ll, Sf_BFu7ll_BFu7ll)
//============================================================================



static void Test_Sf_BFu7ll_BFu7s()
{
  {
    init_simple_test("Sf_BFu7ll_BFu7s");
    static STRUCT_IF_C Sf_BFu7ll_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_BFu7s)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_BFu7s");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu7s");
    set_bf_and_test(lv, v3, 0, 7, 7, 1, "Sf_BFu7ll_BFu7s");
    set_bf_and_test(lv, v3, 0, 7, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_BFu7s, Sf_BFu7ll_BFu7s)
//============================================================================



static void Test_Sf_BFu7ll_BFu8c()
{
  {
    init_simple_test("Sf_BFu7ll_BFu8c");
    static STRUCT_IF_C Sf_BFu7ll_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_BFu8c)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_BFu8c");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu8c");
    set_bf_and_test(lv, v3, 0, 7, 8, 1, "Sf_BFu7ll_BFu8c");
    set_bf_and_test(lv, v3, 0, 7, 8, hide_ull(1LL<<7), "Sf_BFu7ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_BFu8c, Sf_BFu7ll_BFu8c)
//============================================================================



static void Test_Sf_BFu7ll_BFu8i()
{
  {
    init_simple_test("Sf_BFu7ll_BFu8i");
    static STRUCT_IF_C Sf_BFu7ll_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_BFu8i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_BFu8i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu8i");
    set_bf_and_test(lv, v3, 0, 7, 8, 1, "Sf_BFu7ll_BFu8i");
    set_bf_and_test(lv, v3, 0, 7, 8, hide_ull(1LL<<7), "Sf_BFu7ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_BFu8i, Sf_BFu7ll_BFu8i)
//============================================================================



static void Test_Sf_BFu7ll_BFu8ll()
{
  {
    init_simple_test("Sf_BFu7ll_BFu8ll");
    static STRUCT_IF_C Sf_BFu7ll_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_BFu8ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu8ll");
    set_bf_and_test(lv, v3, 0, 7, 8, 1, "Sf_BFu7ll_BFu8ll");
    set_bf_and_test(lv, v3, 0, 7, 8, hide_ull(1LL<<7), "Sf_BFu7ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_BFu8ll, Sf_BFu7ll_BFu8ll)
//============================================================================



static void Test_Sf_BFu7ll_BFu8s()
{
  {
    init_simple_test("Sf_BFu7ll_BFu8s");
    static STRUCT_IF_C Sf_BFu7ll_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_BFu8s)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_BFu8s");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu8s");
    set_bf_and_test(lv, v3, 0, 7, 8, 1, "Sf_BFu7ll_BFu8s");
    set_bf_and_test(lv, v3, 0, 7, 8, hide_ull(1LL<<7), "Sf_BFu7ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_BFu8s, Sf_BFu7ll_BFu8s)
//============================================================================



static void Test_Sf_BFu7ll_BFu9i()
{
  {
    init_simple_test("Sf_BFu7ll_BFu9i");
    static STRUCT_IF_C Sf_BFu7ll_BFu9i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_BFu9i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_BFu9i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu9i");
    set_bf_and_test(lv, v3, 0, 7, 9, 1, "Sf_BFu7ll_BFu9i");
    set_bf_and_test(lv, v3, 0, 7, 9, hide_ull(1LL<<8), "Sf_BFu7ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_BFu9i, Sf_BFu7ll_BFu9i)
//============================================================================



static void Test_Sf_BFu7ll_BFu9ll()
{
  {
    init_simple_test("Sf_BFu7ll_BFu9ll");
    static STRUCT_IF_C Sf_BFu7ll_BFu9ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_BFu9ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu9ll");
    set_bf_and_test(lv, v3, 0, 7, 9, 1, "Sf_BFu7ll_BFu9ll");
    set_bf_and_test(lv, v3, 0, 7, 9, hide_ull(1LL<<8), "Sf_BFu7ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_BFu9ll, Sf_BFu7ll_BFu9ll)
//============================================================================



static void Test_Sf_BFu7ll_BFu9s()
{
  {
    init_simple_test("Sf_BFu7ll_BFu9s");
    static STRUCT_IF_C Sf_BFu7ll_BFu9s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_BFu9s)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_BFu9s");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_BFu9s");
    set_bf_and_test(lv, v3, 0, 7, 9, 1, "Sf_BFu7ll_BFu9s");
    set_bf_and_test(lv, v3, 0, 7, 9, hide_ull(1LL<<8), "Sf_BFu7ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_BFu9s, Sf_BFu7ll_BFu9s)
//============================================================================



static void Test_Sf_BFu7ll_C()
{
  {
    init_simple_test("Sf_BFu7ll_C");
    static STRUCT_IF_C Sf_BFu7ll_C lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_C)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_C.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_C");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_C");
    check_field_offset(lv, v3, 1, "Sf_BFu7ll_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_C, Sf_BFu7ll_C)
//============================================================================



static void Test_Sf_BFu7ll_D()
{
  {
    init_simple_test("Sf_BFu7ll_D");
    static STRUCT_IF_C Sf_BFu7ll_D lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu7ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_D)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_D.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_D");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_D");
    check_field_offset(lv, v3, 1, "Sf_BFu7ll_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_D, Sf_BFu7ll_D)
//============================================================================



static void Test_Sf_BFu7ll_F()
{
  {
    init_simple_test("Sf_BFu7ll_F");
    static STRUCT_IF_C Sf_BFu7ll_F lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_F)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_F.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_F");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_F");
    check_field_offset(lv, v3, 1, "Sf_BFu7ll_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_F, Sf_BFu7ll_F)
//============================================================================



static void Test_Sf_BFu7ll_I()
{
  {
    init_simple_test("Sf_BFu7ll_I");
    static STRUCT_IF_C Sf_BFu7ll_I lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_I)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_I.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_I");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_I");
    check_field_offset(lv, v3, 1, "Sf_BFu7ll_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_I, Sf_BFu7ll_I)
//============================================================================



static void Test_Sf_BFu7ll_Ip()
{
  {
    init_simple_test("Sf_BFu7ll_Ip");
    static STRUCT_IF_C Sf_BFu7ll_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Sf_BFu7ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_Ip)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_Ip.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_Ip");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_Ip");
    check_field_offset(lv, v3, 1, "Sf_BFu7ll_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_Ip, Sf_BFu7ll_Ip)
//============================================================================



static void Test_Sf_BFu7ll_L()
{
  {
    init_simple_test("Sf_BFu7ll_L");
    static STRUCT_IF_C Sf_BFu7ll_L lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu7ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_L)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_L.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_L");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_L");
    check_field_offset(lv, v3, 1, "Sf_BFu7ll_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_L, Sf_BFu7ll_L)
//============================================================================



static void Test_Sf_BFu7ll_S()
{
  {
    init_simple_test("Sf_BFu7ll_S");
    static STRUCT_IF_C Sf_BFu7ll_S lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_S)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_S.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_S");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_S");
    check_field_offset(lv, v3, 1, "Sf_BFu7ll_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_S, Sf_BFu7ll_S)
//============================================================================



static void Test_Sf_BFu7ll_Sf()
{
  {
    init_simple_test("Sf_BFu7ll_Sf");
    static STRUCT_IF_C Sf_BFu7ll_Sf lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu7ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_Sf)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_Sf.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_Sf");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_Sf");
    check_field_offset(lv, v3, 1, "Sf_BFu7ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_Sf, Sf_BFu7ll_Sf)
//============================================================================



static void Test_Sf_BFu7ll_Uc()
{
  {
    init_simple_test("Sf_BFu7ll_Uc");
    static STRUCT_IF_C Sf_BFu7ll_Uc lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_Uc)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_Uc.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_Uc");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_Uc");
    check_field_offset(lv, v3, 1, "Sf_BFu7ll_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_Uc, Sf_BFu7ll_Uc)
//============================================================================



static void Test_Sf_BFu7ll_Ui()
{
  {
    init_simple_test("Sf_BFu7ll_Ui");
    static STRUCT_IF_C Sf_BFu7ll_Ui lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_Ui)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_Ui.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_Ui");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_Ui");
    check_field_offset(lv, v3, 1, "Sf_BFu7ll_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_Ui, Sf_BFu7ll_Ui)
//============================================================================



static void Test_Sf_BFu7ll_Ul()
{
  {
    init_simple_test("Sf_BFu7ll_Ul");
    static STRUCT_IF_C Sf_BFu7ll_Ul lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu7ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_Ul)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_Ul.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_Ul");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_Ul");
    check_field_offset(lv, v3, 1, "Sf_BFu7ll_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_Ul, Sf_BFu7ll_Ul)
//============================================================================



static void Test_Sf_BFu7ll_Us()
{
  {
    init_simple_test("Sf_BFu7ll_Us");
    static STRUCT_IF_C Sf_BFu7ll_Us lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_Us)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_Us.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_Us");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_Us");
    check_field_offset(lv, v3, 1, "Sf_BFu7ll_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_Us, Sf_BFu7ll_Us)
//============================================================================



static void Test_Sf_BFu7ll_Vp()
{
  {
    init_simple_test("Sf_BFu7ll_Vp");
    static STRUCT_IF_C Sf_BFu7ll_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Sf_BFu7ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7ll_Vp)");
    check_field_offset(lv, v1, 0, "Sf_BFu7ll_Vp.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7ll_Vp");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7ll_Vp");
    check_field_offset(lv, v3, 1, "Sf_BFu7ll_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7ll_Vp, Sf_BFu7ll_Vp)
//============================================================================



static void Test_Sf_BFu7s()
{
  {
    init_simple_test("Sf_BFu7s");
    static STRUCT_IF_C Sf_BFu7s lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s, Sf_BFu7s)
//============================================================================



static void Test_Sf_BFu7s_BFu15i()
{
  {
    init_simple_test("Sf_BFu7s_BFu15i");
    static STRUCT_IF_C Sf_BFu7s_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_BFu15i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_BFu15i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_BFu15i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu15i");
    set_bf_and_test(lv, v3, 0, 7, 15, 1, "Sf_BFu7s_BFu15i");
    set_bf_and_test(lv, v3, 0, 7, 15, hide_ull(1LL<<14), "Sf_BFu7s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_BFu15i, Sf_BFu7s_BFu15i)
//============================================================================



static void Test_Sf_BFu7s_BFu15ll()
{
  {
    init_simple_test("Sf_BFu7s_BFu15ll");
    static STRUCT_IF_C Sf_BFu7s_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_BFu15ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_BFu15ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_BFu15ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu15ll");
    set_bf_and_test(lv, v3, 0, 7, 15, 1, "Sf_BFu7s_BFu15ll");
    set_bf_and_test(lv, v3, 0, 7, 15, hide_ull(1LL<<14), "Sf_BFu7s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_BFu15ll, Sf_BFu7s_BFu15ll)
//============================================================================



static void Test_Sf_BFu7s_BFu15s()
{
  {
    init_simple_test("Sf_BFu7s_BFu15s");
    static STRUCT_IF_C Sf_BFu7s_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_BFu15s)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_BFu15s.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_BFu15s");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu15s");
    set_bf_and_test(lv, v3, 0, 7, 15, 1, "Sf_BFu7s_BFu15s");
    set_bf_and_test(lv, v3, 0, 7, 15, hide_ull(1LL<<14), "Sf_BFu7s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_BFu15s, Sf_BFu7s_BFu15s)
//============================================================================



static void Test_Sf_BFu7s_BFu16i()
{
  {
    init_simple_test("Sf_BFu7s_BFu16i");
    static STRUCT_IF_C Sf_BFu7s_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_BFu16i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_BFu16i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_BFu16i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu16i");
    set_bf_and_test(lv, v3, 0, 7, 16, 1, "Sf_BFu7s_BFu16i");
    set_bf_and_test(lv, v3, 0, 7, 16, hide_ull(1LL<<15), "Sf_BFu7s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_BFu16i, Sf_BFu7s_BFu16i)
//============================================================================



static void Test_Sf_BFu7s_BFu16ll()
{
  {
    init_simple_test("Sf_BFu7s_BFu16ll");
    static STRUCT_IF_C Sf_BFu7s_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_BFu16ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_BFu16ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_BFu16ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu16ll");
    set_bf_and_test(lv, v3, 0, 7, 16, 1, "Sf_BFu7s_BFu16ll");
    set_bf_and_test(lv, v3, 0, 7, 16, hide_ull(1LL<<15), "Sf_BFu7s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_BFu16ll, Sf_BFu7s_BFu16ll)
//============================================================================



static void Test_Sf_BFu7s_BFu16s()
{
  {
    init_simple_test("Sf_BFu7s_BFu16s");
    static STRUCT_IF_C Sf_BFu7s_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_BFu16s)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_BFu16s.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_BFu16s");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu16s");
    set_bf_and_test(lv, v3, 0, 7, 16, 1, "Sf_BFu7s_BFu16s");
    set_bf_and_test(lv, v3, 0, 7, 16, hide_ull(1LL<<15), "Sf_BFu7s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_BFu16s, Sf_BFu7s_BFu16s)
//============================================================================



static void Test_Sf_BFu7s_BFu17i()
{
  {
    init_simple_test("Sf_BFu7s_BFu17i");
    static STRUCT_IF_C Sf_BFu7s_BFu17i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_BFu17i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_BFu17i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_BFu17i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu17i");
    set_bf_and_test(lv, v3, 0, 7, 17, 1, "Sf_BFu7s_BFu17i");
    set_bf_and_test(lv, v3, 0, 7, 17, hide_ull(1LL<<16), "Sf_BFu7s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_BFu17i, Sf_BFu7s_BFu17i)
//============================================================================



static void Test_Sf_BFu7s_BFu17ll()
{
  {
    init_simple_test("Sf_BFu7s_BFu17ll");
    static STRUCT_IF_C Sf_BFu7s_BFu17ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_BFu17ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_BFu17ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_BFu17ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu17ll");
    set_bf_and_test(lv, v3, 0, 7, 17, 1, "Sf_BFu7s_BFu17ll");
    set_bf_and_test(lv, v3, 0, 7, 17, hide_ull(1LL<<16), "Sf_BFu7s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_BFu17ll, Sf_BFu7s_BFu17ll)
//============================================================================



static void Test_Sf_BFu7s_BFu1c()
{
  {
    init_simple_test("Sf_BFu7s_BFu1c");
    static STRUCT_IF_C Sf_BFu7s_BFu1c lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu7s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_BFu1c)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_BFu1c.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_BFu1c");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu1c");
    set_bf_and_test(lv, v3, 0, 7, 1, 1, "Sf_BFu7s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_BFu1c, Sf_BFu7s_BFu1c)
//============================================================================



static void Test_Sf_BFu7s_BFu1i()
{
  {
    init_simple_test("Sf_BFu7s_BFu1i");
    static STRUCT_IF_C Sf_BFu7s_BFu1i lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu7s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_BFu1i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_BFu1i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_BFu1i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu1i");
    set_bf_and_test(lv, v3, 0, 7, 1, 1, "Sf_BFu7s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_BFu1i, Sf_BFu7s_BFu1i)
//============================================================================



static void Test_Sf_BFu7s_BFu1ll()
{
  {
    init_simple_test("Sf_BFu7s_BFu1ll");
    static STRUCT_IF_C Sf_BFu7s_BFu1ll lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu7s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_BFu1ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_BFu1ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu1ll");
    set_bf_and_test(lv, v3, 0, 7, 1, 1, "Sf_BFu7s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_BFu1ll, Sf_BFu7s_BFu1ll)
//============================================================================



static void Test_Sf_BFu7s_BFu1s()
{
  {
    init_simple_test("Sf_BFu7s_BFu1s");
    static STRUCT_IF_C Sf_BFu7s_BFu1s lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu7s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_BFu1s)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_BFu1s.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_BFu1s");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu1s");
    set_bf_and_test(lv, v3, 0, 7, 1, 1, "Sf_BFu7s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_BFu1s, Sf_BFu7s_BFu1s)
//============================================================================



static void Test_Sf_BFu7s_BFu31i()
{
  {
    init_simple_test("Sf_BFu7s_BFu31i");
    static STRUCT_IF_C Sf_BFu7s_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_BFu31i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_BFu31i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_BFu31i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu31i");
    set_bf_and_test(lv, v3, 0, 7, 31, 1, "Sf_BFu7s_BFu31i");
    set_bf_and_test(lv, v3, 0, 7, 31, hide_ull(1LL<<30), "Sf_BFu7s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_BFu31i, Sf_BFu7s_BFu31i)
//============================================================================



static void Test_Sf_BFu7s_BFu31ll()
{
  {
    init_simple_test("Sf_BFu7s_BFu31ll");
    static STRUCT_IF_C Sf_BFu7s_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_BFu31ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_BFu31ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_BFu31ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu31ll");
    set_bf_and_test(lv, v3, 0, 7, 31, 1, "Sf_BFu7s_BFu31ll");
    set_bf_and_test(lv, v3, 0, 7, 31, hide_ull(1LL<<30), "Sf_BFu7s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_BFu31ll, Sf_BFu7s_BFu31ll)
//============================================================================



static void Test_Sf_BFu7s_BFu32i()
{
  {
    init_simple_test("Sf_BFu7s_BFu32i");
    static STRUCT_IF_C Sf_BFu7s_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_BFu32i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_BFu32i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_BFu32i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu32i");
    set_bf_and_test(lv, v3, 0, 7, 32, 1, "Sf_BFu7s_BFu32i");
    set_bf_and_test(lv, v3, 0, 7, 32, hide_ull(1LL<<31), "Sf_BFu7s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_BFu32i, Sf_BFu7s_BFu32i)
//============================================================================



static void Test_Sf_BFu7s_BFu32ll()
{
  {
    init_simple_test("Sf_BFu7s_BFu32ll");
    static STRUCT_IF_C Sf_BFu7s_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_BFu32ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_BFu32ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_BFu32ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu32ll");
    set_bf_and_test(lv, v3, 0, 7, 32, 1, "Sf_BFu7s_BFu32ll");
    set_bf_and_test(lv, v3, 0, 7, 32, hide_ull(1LL<<31), "Sf_BFu7s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_BFu32ll, Sf_BFu7s_BFu32ll)
//============================================================================



static void Test_Sf_BFu7s_BFu33()
{
  {
    init_simple_test("Sf_BFu7s_BFu33");
    static STRUCT_IF_C Sf_BFu7s_BFu33 lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_BFu33)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_BFu33.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_BFu33");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu33");
    set_bf_and_test(lv, v3, 0, 7, 33, 1, "Sf_BFu7s_BFu33");
    set_bf_and_test(lv, v3, 0, 7, 33, hide_ull(1LL<<32), "Sf_BFu7s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_BFu33, Sf_BFu7s_BFu33)
//============================================================================



static void Test_Sf_BFu7s_BFu7c()
{
  {
    init_simple_test("Sf_BFu7s_BFu7c");
    static STRUCT_IF_C Sf_BFu7s_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_BFu7c)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_BFu7c.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_BFu7c");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu7c");
    set_bf_and_test(lv, v3, 0, 7, 7, 1, "Sf_BFu7s_BFu7c");
    set_bf_and_test(lv, v3, 0, 7, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_BFu7c, Sf_BFu7s_BFu7c)
//============================================================================



static void Test_Sf_BFu7s_BFu7i()
{
  {
    init_simple_test("Sf_BFu7s_BFu7i");
    static STRUCT_IF_C Sf_BFu7s_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_BFu7i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_BFu7i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_BFu7i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu7i");
    set_bf_and_test(lv, v3, 0, 7, 7, 1, "Sf_BFu7s_BFu7i");
    set_bf_and_test(lv, v3, 0, 7, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_BFu7i, Sf_BFu7s_BFu7i)
//============================================================================



static void Test_Sf_BFu7s_BFu7ll()
{
  {
    init_simple_test("Sf_BFu7s_BFu7ll");
    static STRUCT_IF_C Sf_BFu7s_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_BFu7ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_BFu7ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_BFu7ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu7ll");
    set_bf_and_test(lv, v3, 0, 7, 7, 1, "Sf_BFu7s_BFu7ll");
    set_bf_and_test(lv, v3, 0, 7, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_BFu7ll, Sf_BFu7s_BFu7ll)
//============================================================================



static void Test_Sf_BFu7s_BFu7s()
{
  {
    init_simple_test("Sf_BFu7s_BFu7s");
    static STRUCT_IF_C Sf_BFu7s_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_BFu7s)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_BFu7s.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_BFu7s");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu7s");
    set_bf_and_test(lv, v3, 0, 7, 7, 1, "Sf_BFu7s_BFu7s");
    set_bf_and_test(lv, v3, 0, 7, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_BFu7s, Sf_BFu7s_BFu7s)
//============================================================================



static void Test_Sf_BFu7s_BFu8c()
{
  {
    init_simple_test("Sf_BFu7s_BFu8c");
    static STRUCT_IF_C Sf_BFu7s_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_BFu8c)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_BFu8c.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_BFu8c");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu8c");
    set_bf_and_test(lv, v3, 0, 7, 8, 1, "Sf_BFu7s_BFu8c");
    set_bf_and_test(lv, v3, 0, 7, 8, hide_ull(1LL<<7), "Sf_BFu7s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_BFu8c, Sf_BFu7s_BFu8c)
//============================================================================



static void Test_Sf_BFu7s_BFu8i()
{
  {
    init_simple_test("Sf_BFu7s_BFu8i");
    static STRUCT_IF_C Sf_BFu7s_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_BFu8i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_BFu8i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_BFu8i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu8i");
    set_bf_and_test(lv, v3, 0, 7, 8, 1, "Sf_BFu7s_BFu8i");
    set_bf_and_test(lv, v3, 0, 7, 8, hide_ull(1LL<<7), "Sf_BFu7s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_BFu8i, Sf_BFu7s_BFu8i)
//============================================================================



static void Test_Sf_BFu7s_BFu8ll()
{
  {
    init_simple_test("Sf_BFu7s_BFu8ll");
    static STRUCT_IF_C Sf_BFu7s_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_BFu8ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_BFu8ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_BFu8ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu8ll");
    set_bf_and_test(lv, v3, 0, 7, 8, 1, "Sf_BFu7s_BFu8ll");
    set_bf_and_test(lv, v3, 0, 7, 8, hide_ull(1LL<<7), "Sf_BFu7s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_BFu8ll, Sf_BFu7s_BFu8ll)
//============================================================================



static void Test_Sf_BFu7s_BFu8s()
{
  {
    init_simple_test("Sf_BFu7s_BFu8s");
    static STRUCT_IF_C Sf_BFu7s_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_BFu8s)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_BFu8s.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_BFu8s");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu8s");
    set_bf_and_test(lv, v3, 0, 7, 8, 1, "Sf_BFu7s_BFu8s");
    set_bf_and_test(lv, v3, 0, 7, 8, hide_ull(1LL<<7), "Sf_BFu7s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_BFu8s, Sf_BFu7s_BFu8s)
//============================================================================



static void Test_Sf_BFu7s_BFu9i()
{
  {
    init_simple_test("Sf_BFu7s_BFu9i");
    static STRUCT_IF_C Sf_BFu7s_BFu9i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_BFu9i)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_BFu9i.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_BFu9i");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu9i");
    set_bf_and_test(lv, v3, 0, 7, 9, 1, "Sf_BFu7s_BFu9i");
    set_bf_and_test(lv, v3, 0, 7, 9, hide_ull(1LL<<8), "Sf_BFu7s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_BFu9i, Sf_BFu7s_BFu9i)
//============================================================================



static void Test_Sf_BFu7s_BFu9ll()
{
  {
    init_simple_test("Sf_BFu7s_BFu9ll");
    static STRUCT_IF_C Sf_BFu7s_BFu9ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_BFu9ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_BFu9ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_BFu9ll");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu9ll");
    set_bf_and_test(lv, v3, 0, 7, 9, 1, "Sf_BFu7s_BFu9ll");
    set_bf_and_test(lv, v3, 0, 7, 9, hide_ull(1LL<<8), "Sf_BFu7s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_BFu9ll, Sf_BFu7s_BFu9ll)
//============================================================================



static void Test_Sf_BFu7s_BFu9s()
{
  {
    init_simple_test("Sf_BFu7s_BFu9s");
    static STRUCT_IF_C Sf_BFu7s_BFu9s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_BFu9s)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_BFu9s.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_BFu9s");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_BFu9s");
    set_bf_and_test(lv, v3, 0, 7, 9, 1, "Sf_BFu7s_BFu9s");
    set_bf_and_test(lv, v3, 0, 7, 9, hide_ull(1LL<<8), "Sf_BFu7s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_BFu9s, Sf_BFu7s_BFu9s)
//============================================================================



static void Test_Sf_BFu7s_C()
{
  {
    init_simple_test("Sf_BFu7s_C");
    static STRUCT_IF_C Sf_BFu7s_C lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7s_C)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_C)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_C.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_C");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_C");
    check_field_offset(lv, v3, 1, "Sf_BFu7s_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_C, Sf_BFu7s_C)
//============================================================================



static void Test_Sf_BFu7s_D()
{
  {
    init_simple_test("Sf_BFu7s_D");
    static STRUCT_IF_C Sf_BFu7s_D lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu7s_D)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_D)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_D.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_D");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_D");
    check_field_offset(lv, v3, 1, "Sf_BFu7s_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_D, Sf_BFu7s_D)
//============================================================================



static void Test_Sf_BFu7s_F()
{
  {
    init_simple_test("Sf_BFu7s_F");
    static STRUCT_IF_C Sf_BFu7s_F lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7s_F)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_F)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_F.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_F");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_F");
    check_field_offset(lv, v3, 1, "Sf_BFu7s_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_F, Sf_BFu7s_F)
//============================================================================



static void Test_Sf_BFu7s_I()
{
  {
    init_simple_test("Sf_BFu7s_I");
    static STRUCT_IF_C Sf_BFu7s_I lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7s_I)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_I)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_I.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_I");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_I");
    check_field_offset(lv, v3, 1, "Sf_BFu7s_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_I, Sf_BFu7s_I)
//============================================================================



static void Test_Sf_BFu7s_Ip()
{
  {
    init_simple_test("Sf_BFu7s_Ip");
    static STRUCT_IF_C Sf_BFu7s_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Sf_BFu7s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_Ip)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_Ip.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_Ip");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_Ip");
    check_field_offset(lv, v3, 1, "Sf_BFu7s_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_Ip, Sf_BFu7s_Ip)
//============================================================================



static void Test_Sf_BFu7s_L()
{
  {
    init_simple_test("Sf_BFu7s_L");
    static STRUCT_IF_C Sf_BFu7s_L lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu7s_L)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_L)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_L.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_L");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_L");
    check_field_offset(lv, v3, 1, "Sf_BFu7s_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_L, Sf_BFu7s_L)
//============================================================================



static void Test_Sf_BFu7s_S()
{
  {
    init_simple_test("Sf_BFu7s_S");
    static STRUCT_IF_C Sf_BFu7s_S lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7s_S)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_S)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_S.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_S");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_S");
    check_field_offset(lv, v3, 1, "Sf_BFu7s_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_S, Sf_BFu7s_S)
//============================================================================



static void Test_Sf_BFu7s_Sf()
{
  {
    init_simple_test("Sf_BFu7s_Sf");
    static STRUCT_IF_C Sf_BFu7s_Sf lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu7s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_Sf)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_Sf.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_Sf");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_Sf");
    check_field_offset(lv, v3, 1, "Sf_BFu7s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_Sf, Sf_BFu7s_Sf)
//============================================================================



static void Test_Sf_BFu7s_Uc()
{
  {
    init_simple_test("Sf_BFu7s_Uc");
    static STRUCT_IF_C Sf_BFu7s_Uc lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu7s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_Uc)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_Uc.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_Uc");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_Uc");
    check_field_offset(lv, v3, 1, "Sf_BFu7s_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_Uc, Sf_BFu7s_Uc)
//============================================================================



static void Test_Sf_BFu7s_Ui()
{
  {
    init_simple_test("Sf_BFu7s_Ui");
    static STRUCT_IF_C Sf_BFu7s_Ui lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu7s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_Ui)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_Ui.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_Ui");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_Ui");
    check_field_offset(lv, v3, 1, "Sf_BFu7s_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_Ui, Sf_BFu7s_Ui)
//============================================================================



static void Test_Sf_BFu7s_Ul()
{
  {
    init_simple_test("Sf_BFu7s_Ul");
    static STRUCT_IF_C Sf_BFu7s_Ul lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu7s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_Ul)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_Ul.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_Ul");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_Ul");
    check_field_offset(lv, v3, 1, "Sf_BFu7s_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_Ul, Sf_BFu7s_Ul)
//============================================================================



static void Test_Sf_BFu7s_Us()
{
  {
    init_simple_test("Sf_BFu7s_Us");
    static STRUCT_IF_C Sf_BFu7s_Us lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu7s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_Us)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_Us.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_Us");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_Us");
    check_field_offset(lv, v3, 1, "Sf_BFu7s_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_Us, Sf_BFu7s_Us)
//============================================================================



static void Test_Sf_BFu7s_Vp()
{
  {
    init_simple_test("Sf_BFu7s_Vp");
    static STRUCT_IF_C Sf_BFu7s_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Sf_BFu7s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu7s_Vp)");
    check_field_offset(lv, v1, 0, "Sf_BFu7s_Vp.v1");
    set_bf_and_test(lv, v2, 0, 0, 7, 1, "Sf_BFu7s_Vp");
    set_bf_and_test(lv, v2, 0, 0, 7, hide_ull(1LL<<6), "Sf_BFu7s_Vp");
    check_field_offset(lv, v3, 1, "Sf_BFu7s_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu7s_Vp, Sf_BFu7s_Vp)
//============================================================================



static void Test_Sf_BFu8c()
{
  {
    init_simple_test("Sf_BFu8c");
    static STRUCT_IF_C Sf_BFu8c lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c, Sf_BFu8c)
//============================================================================



static void Test_Sf_BFu8c_BFu15i()
{
  {
    init_simple_test("Sf_BFu8c_BFu15i");
    static STRUCT_IF_C Sf_BFu8c_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_BFu15i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_BFu15i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_BFu15i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu15i");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "Sf_BFu8c_BFu15i");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "Sf_BFu8c_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_BFu15i, Sf_BFu8c_BFu15i)
//============================================================================



static void Test_Sf_BFu8c_BFu15ll()
{
  {
    init_simple_test("Sf_BFu8c_BFu15ll");
    static STRUCT_IF_C Sf_BFu8c_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_BFu15ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_BFu15ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_BFu15ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu15ll");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "Sf_BFu8c_BFu15ll");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "Sf_BFu8c_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_BFu15ll, Sf_BFu8c_BFu15ll)
//============================================================================



static void Test_Sf_BFu8c_BFu15s()
{
  {
    init_simple_test("Sf_BFu8c_BFu15s");
    static STRUCT_IF_C Sf_BFu8c_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_BFu15s)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_BFu15s.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_BFu15s");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu15s");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "Sf_BFu8c_BFu15s");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "Sf_BFu8c_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_BFu15s, Sf_BFu8c_BFu15s)
//============================================================================



static void Test_Sf_BFu8c_BFu16i()
{
  {
    init_simple_test("Sf_BFu8c_BFu16i");
    static STRUCT_IF_C Sf_BFu8c_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_BFu16i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_BFu16i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_BFu16i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu16i");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "Sf_BFu8c_BFu16i");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "Sf_BFu8c_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_BFu16i, Sf_BFu8c_BFu16i)
//============================================================================



static void Test_Sf_BFu8c_BFu16ll()
{
  {
    init_simple_test("Sf_BFu8c_BFu16ll");
    static STRUCT_IF_C Sf_BFu8c_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_BFu16ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_BFu16ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_BFu16ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu16ll");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "Sf_BFu8c_BFu16ll");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "Sf_BFu8c_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_BFu16ll, Sf_BFu8c_BFu16ll)
//============================================================================



static void Test_Sf_BFu8c_BFu16s()
{
  {
    init_simple_test("Sf_BFu8c_BFu16s");
    static STRUCT_IF_C Sf_BFu8c_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_BFu16s)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_BFu16s.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_BFu16s");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu16s");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "Sf_BFu8c_BFu16s");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "Sf_BFu8c_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_BFu16s, Sf_BFu8c_BFu16s)
//============================================================================



static void Test_Sf_BFu8c_BFu17i()
{
  {
    init_simple_test("Sf_BFu8c_BFu17i");
    static STRUCT_IF_C Sf_BFu8c_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu8c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_BFu17i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_BFu17i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_BFu17i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu17i");
    set_bf_and_test(lv, v3, 1, 0, 17, 1, "Sf_BFu8c_BFu17i");
    set_bf_and_test(lv, v3, 1, 0, 17, hide_ull(1LL<<16), "Sf_BFu8c_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_BFu17i, Sf_BFu8c_BFu17i)
//============================================================================



static void Test_Sf_BFu8c_BFu17ll()
{
  {
    init_simple_test("Sf_BFu8c_BFu17ll");
    static STRUCT_IF_C Sf_BFu8c_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu8c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_BFu17ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_BFu17ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_BFu17ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu17ll");
    set_bf_and_test(lv, v3, 1, 0, 17, 1, "Sf_BFu8c_BFu17ll");
    set_bf_and_test(lv, v3, 1, 0, 17, hide_ull(1LL<<16), "Sf_BFu8c_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_BFu17ll, Sf_BFu8c_BFu17ll)
//============================================================================



static void Test_Sf_BFu8c_BFu1c()
{
  {
    init_simple_test("Sf_BFu8c_BFu1c");
    static STRUCT_IF_C Sf_BFu8c_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_BFu1c)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_BFu1c.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_BFu1c");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu1c");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "Sf_BFu8c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_BFu1c, Sf_BFu8c_BFu1c)
//============================================================================



static void Test_Sf_BFu8c_BFu1i()
{
  {
    init_simple_test("Sf_BFu8c_BFu1i");
    static STRUCT_IF_C Sf_BFu8c_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_BFu1i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_BFu1i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_BFu1i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu1i");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "Sf_BFu8c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_BFu1i, Sf_BFu8c_BFu1i)
//============================================================================



static void Test_Sf_BFu8c_BFu1ll()
{
  {
    init_simple_test("Sf_BFu8c_BFu1ll");
    static STRUCT_IF_C Sf_BFu8c_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_BFu1ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_BFu1ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_BFu1ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu1ll");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "Sf_BFu8c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_BFu1ll, Sf_BFu8c_BFu1ll)
//============================================================================



static void Test_Sf_BFu8c_BFu1s()
{
  {
    init_simple_test("Sf_BFu8c_BFu1s");
    static STRUCT_IF_C Sf_BFu8c_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_BFu1s)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_BFu1s.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_BFu1s");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu1s");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "Sf_BFu8c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_BFu1s, Sf_BFu8c_BFu1s)
//============================================================================



static void Test_Sf_BFu8c_BFu31i()
{
  {
    init_simple_test("Sf_BFu8c_BFu31i");
    static STRUCT_IF_C Sf_BFu8c_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu8c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_BFu31i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_BFu31i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_BFu31i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu31i");
    set_bf_and_test(lv, v3, 1, 0, 31, 1, "Sf_BFu8c_BFu31i");
    set_bf_and_test(lv, v3, 1, 0, 31, hide_ull(1LL<<30), "Sf_BFu8c_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_BFu31i, Sf_BFu8c_BFu31i)
//============================================================================



static void Test_Sf_BFu8c_BFu31ll()
{
  {
    init_simple_test("Sf_BFu8c_BFu31ll");
    static STRUCT_IF_C Sf_BFu8c_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu8c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_BFu31ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_BFu31ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_BFu31ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu31ll");
    set_bf_and_test(lv, v3, 1, 0, 31, 1, "Sf_BFu8c_BFu31ll");
    set_bf_and_test(lv, v3, 1, 0, 31, hide_ull(1LL<<30), "Sf_BFu8c_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_BFu31ll, Sf_BFu8c_BFu31ll)
//============================================================================



static void Test_Sf_BFu8c_BFu32i()
{
  {
    init_simple_test("Sf_BFu8c_BFu32i");
    static STRUCT_IF_C Sf_BFu8c_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu8c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_BFu32i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_BFu32i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_BFu32i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu32i");
    set_bf_and_test(lv, v3, 1, 0, 32, 1, "Sf_BFu8c_BFu32i");
    set_bf_and_test(lv, v3, 1, 0, 32, hide_ull(1LL<<31), "Sf_BFu8c_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_BFu32i, Sf_BFu8c_BFu32i)
//============================================================================



static void Test_Sf_BFu8c_BFu32ll()
{
  {
    init_simple_test("Sf_BFu8c_BFu32ll");
    static STRUCT_IF_C Sf_BFu8c_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu8c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_BFu32ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_BFu32ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_BFu32ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu32ll");
    set_bf_and_test(lv, v3, 1, 0, 32, 1, "Sf_BFu8c_BFu32ll");
    set_bf_and_test(lv, v3, 1, 0, 32, hide_ull(1LL<<31), "Sf_BFu8c_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_BFu32ll, Sf_BFu8c_BFu32ll)
//============================================================================



static void Test_Sf_BFu8c_BFu33()
{
  {
    init_simple_test("Sf_BFu8c_BFu33");
    static STRUCT_IF_C Sf_BFu8c_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu8c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_BFu33)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_BFu33.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_BFu33");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu33");
    set_bf_and_test(lv, v3, 1, 0, 33, 1, "Sf_BFu8c_BFu33");
    set_bf_and_test(lv, v3, 1, 0, 33, hide_ull(1LL<<32), "Sf_BFu8c_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_BFu33, Sf_BFu8c_BFu33)
//============================================================================



static void Test_Sf_BFu8c_BFu7c()
{
  {
    init_simple_test("Sf_BFu8c_BFu7c");
    static STRUCT_IF_C Sf_BFu8c_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_BFu7c)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_BFu7c.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_BFu7c");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu7c");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "Sf_BFu8c_BFu7c");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "Sf_BFu8c_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_BFu7c, Sf_BFu8c_BFu7c)
//============================================================================



static void Test_Sf_BFu8c_BFu7i()
{
  {
    init_simple_test("Sf_BFu8c_BFu7i");
    static STRUCT_IF_C Sf_BFu8c_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_BFu7i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_BFu7i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_BFu7i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu7i");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "Sf_BFu8c_BFu7i");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "Sf_BFu8c_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_BFu7i, Sf_BFu8c_BFu7i)
//============================================================================



static void Test_Sf_BFu8c_BFu7ll()
{
  {
    init_simple_test("Sf_BFu8c_BFu7ll");
    static STRUCT_IF_C Sf_BFu8c_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_BFu7ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_BFu7ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_BFu7ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu7ll");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "Sf_BFu8c_BFu7ll");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "Sf_BFu8c_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_BFu7ll, Sf_BFu8c_BFu7ll)
//============================================================================



static void Test_Sf_BFu8c_BFu7s()
{
  {
    init_simple_test("Sf_BFu8c_BFu7s");
    static STRUCT_IF_C Sf_BFu8c_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_BFu7s)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_BFu7s.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_BFu7s");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu7s");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "Sf_BFu8c_BFu7s");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "Sf_BFu8c_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_BFu7s, Sf_BFu8c_BFu7s)
//============================================================================



static void Test_Sf_BFu8c_BFu8c()
{
  {
    init_simple_test("Sf_BFu8c_BFu8c");
    static STRUCT_IF_C Sf_BFu8c_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_BFu8c)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_BFu8c.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_BFu8c");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu8c");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "Sf_BFu8c_BFu8c");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_BFu8c, Sf_BFu8c_BFu8c)
//============================================================================



static void Test_Sf_BFu8c_BFu8i()
{
  {
    init_simple_test("Sf_BFu8c_BFu8i");
    static STRUCT_IF_C Sf_BFu8c_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_BFu8i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_BFu8i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_BFu8i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu8i");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "Sf_BFu8c_BFu8i");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_BFu8i, Sf_BFu8c_BFu8i)
//============================================================================



static void Test_Sf_BFu8c_BFu8ll()
{
  {
    init_simple_test("Sf_BFu8c_BFu8ll");
    static STRUCT_IF_C Sf_BFu8c_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_BFu8ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_BFu8ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_BFu8ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu8ll");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "Sf_BFu8c_BFu8ll");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_BFu8ll, Sf_BFu8c_BFu8ll)
//============================================================================



static void Test_Sf_BFu8c_BFu8s()
{
  {
    init_simple_test("Sf_BFu8c_BFu8s");
    static STRUCT_IF_C Sf_BFu8c_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_BFu8s)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_BFu8s.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_BFu8s");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu8s");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "Sf_BFu8c_BFu8s");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_BFu8s, Sf_BFu8c_BFu8s)
//============================================================================



static void Test_Sf_BFu8c_BFu9i()
{
  {
    init_simple_test("Sf_BFu8c_BFu9i");
    static STRUCT_IF_C Sf_BFu8c_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_BFu9i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_BFu9i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_BFu9i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu9i");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "Sf_BFu8c_BFu9i");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "Sf_BFu8c_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_BFu9i, Sf_BFu8c_BFu9i)
//============================================================================



static void Test_Sf_BFu8c_BFu9ll()
{
  {
    init_simple_test("Sf_BFu8c_BFu9ll");
    static STRUCT_IF_C Sf_BFu8c_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_BFu9ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_BFu9ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_BFu9ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu9ll");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "Sf_BFu8c_BFu9ll");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "Sf_BFu8c_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_BFu9ll, Sf_BFu8c_BFu9ll)
//============================================================================



static void Test_Sf_BFu8c_BFu9s()
{
  {
    init_simple_test("Sf_BFu8c_BFu9s");
    static STRUCT_IF_C Sf_BFu8c_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_BFu9s)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_BFu9s.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_BFu9s");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_BFu9s");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "Sf_BFu8c_BFu9s");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "Sf_BFu8c_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_BFu9s, Sf_BFu8c_BFu9s)
//============================================================================



static void Test_Sf_BFu8c_C()
{
  {
    init_simple_test("Sf_BFu8c_C");
    static STRUCT_IF_C Sf_BFu8c_C lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8c_C)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_C)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_C.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_C");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_C");
    check_field_offset(lv, v3, 1, "Sf_BFu8c_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_C, Sf_BFu8c_C)
//============================================================================



static void Test_Sf_BFu8c_D()
{
  {
    init_simple_test("Sf_BFu8c_D");
    static STRUCT_IF_C Sf_BFu8c_D lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu8c_D)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_D)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_D.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_D");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_D");
    check_field_offset(lv, v3, 1, "Sf_BFu8c_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_D, Sf_BFu8c_D)
//============================================================================



static void Test_Sf_BFu8c_F()
{
  {
    init_simple_test("Sf_BFu8c_F");
    static STRUCT_IF_C Sf_BFu8c_F lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu8c_F)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_F)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_F.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_F");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_F");
    check_field_offset(lv, v3, 1, "Sf_BFu8c_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_F, Sf_BFu8c_F)
//============================================================================



static void Test_Sf_BFu8c_I()
{
  {
    init_simple_test("Sf_BFu8c_I");
    static STRUCT_IF_C Sf_BFu8c_I lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu8c_I)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_I)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_I.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_I");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_I");
    check_field_offset(lv, v3, 1, "Sf_BFu8c_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_I, Sf_BFu8c_I)
//============================================================================



static void Test_Sf_BFu8c_Ip()
{
  {
    init_simple_test("Sf_BFu8c_Ip");
    static STRUCT_IF_C Sf_BFu8c_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Sf_BFu8c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_Ip)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_Ip.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_Ip");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_Ip");
    check_field_offset(lv, v3, 1, "Sf_BFu8c_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_Ip, Sf_BFu8c_Ip)
//============================================================================



static void Test_Sf_BFu8c_L()
{
  {
    init_simple_test("Sf_BFu8c_L");
    static STRUCT_IF_C Sf_BFu8c_L lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu8c_L)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_L)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_L.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_L");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_L");
    check_field_offset(lv, v3, 1, "Sf_BFu8c_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_L, Sf_BFu8c_L)
//============================================================================



static void Test_Sf_BFu8c_S()
{
  {
    init_simple_test("Sf_BFu8c_S");
    static STRUCT_IF_C Sf_BFu8c_S lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8c_S)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_S)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_S.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_S");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_S");
    check_field_offset(lv, v3, 1, "Sf_BFu8c_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_S, Sf_BFu8c_S)
//============================================================================



static void Test_Sf_BFu8c_Sf()
{
  {
    init_simple_test("Sf_BFu8c_Sf");
    static STRUCT_IF_C Sf_BFu8c_Sf lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu8c_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_Sf)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_Sf.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_Sf");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_Sf");
    check_field_offset(lv, v3, 1, "Sf_BFu8c_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_Sf, Sf_BFu8c_Sf)
//============================================================================



static void Test_Sf_BFu8c_Uc()
{
  {
    init_simple_test("Sf_BFu8c_Uc");
    static STRUCT_IF_C Sf_BFu8c_Uc lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_Uc)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_Uc.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_Uc");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_Uc");
    check_field_offset(lv, v3, 1, "Sf_BFu8c_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_Uc, Sf_BFu8c_Uc)
//============================================================================



static void Test_Sf_BFu8c_Ui()
{
  {
    init_simple_test("Sf_BFu8c_Ui");
    static STRUCT_IF_C Sf_BFu8c_Ui lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu8c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_Ui)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_Ui.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_Ui");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_Ui");
    check_field_offset(lv, v3, 1, "Sf_BFu8c_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_Ui, Sf_BFu8c_Ui)
//============================================================================



static void Test_Sf_BFu8c_Ul()
{
  {
    init_simple_test("Sf_BFu8c_Ul");
    static STRUCT_IF_C Sf_BFu8c_Ul lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu8c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_Ul)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_Ul.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_Ul");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_Ul");
    check_field_offset(lv, v3, 1, "Sf_BFu8c_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_Ul, Sf_BFu8c_Ul)
//============================================================================



static void Test_Sf_BFu8c_Us()
{
  {
    init_simple_test("Sf_BFu8c_Us");
    static STRUCT_IF_C Sf_BFu8c_Us lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_Us)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_Us.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_Us");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_Us");
    check_field_offset(lv, v3, 1, "Sf_BFu8c_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_Us, Sf_BFu8c_Us)
//============================================================================



static void Test_Sf_BFu8c_Vp()
{
  {
    init_simple_test("Sf_BFu8c_Vp");
    static STRUCT_IF_C Sf_BFu8c_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Sf_BFu8c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8c_Vp)");
    check_field_offset(lv, v1, 0, "Sf_BFu8c_Vp.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8c_Vp");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8c_Vp");
    check_field_offset(lv, v3, 1, "Sf_BFu8c_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8c_Vp, Sf_BFu8c_Vp)
//============================================================================



static void Test_Sf_BFu8i()
{
  {
    init_simple_test("Sf_BFu8i");
    static STRUCT_IF_C Sf_BFu8i lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i, Sf_BFu8i)
//============================================================================



static void Test_Sf_BFu8i_BFu15i()
{
  {
    init_simple_test("Sf_BFu8i_BFu15i");
    static STRUCT_IF_C Sf_BFu8i_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_BFu15i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_BFu15i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_BFu15i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu15i");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "Sf_BFu8i_BFu15i");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "Sf_BFu8i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_BFu15i, Sf_BFu8i_BFu15i)
//============================================================================



static void Test_Sf_BFu8i_BFu15ll()
{
  {
    init_simple_test("Sf_BFu8i_BFu15ll");
    static STRUCT_IF_C Sf_BFu8i_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_BFu15ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_BFu15ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu15ll");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "Sf_BFu8i_BFu15ll");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "Sf_BFu8i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_BFu15ll, Sf_BFu8i_BFu15ll)
//============================================================================



static void Test_Sf_BFu8i_BFu15s()
{
  {
    init_simple_test("Sf_BFu8i_BFu15s");
    static STRUCT_IF_C Sf_BFu8i_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_BFu15s)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_BFu15s.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_BFu15s");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu15s");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "Sf_BFu8i_BFu15s");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "Sf_BFu8i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_BFu15s, Sf_BFu8i_BFu15s)
//============================================================================



static void Test_Sf_BFu8i_BFu16i()
{
  {
    init_simple_test("Sf_BFu8i_BFu16i");
    static STRUCT_IF_C Sf_BFu8i_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_BFu16i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_BFu16i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_BFu16i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu16i");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "Sf_BFu8i_BFu16i");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "Sf_BFu8i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_BFu16i, Sf_BFu8i_BFu16i)
//============================================================================



static void Test_Sf_BFu8i_BFu16ll()
{
  {
    init_simple_test("Sf_BFu8i_BFu16ll");
    static STRUCT_IF_C Sf_BFu8i_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_BFu16ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_BFu16ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu16ll");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "Sf_BFu8i_BFu16ll");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "Sf_BFu8i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_BFu16ll, Sf_BFu8i_BFu16ll)
//============================================================================



static void Test_Sf_BFu8i_BFu16s()
{
  {
    init_simple_test("Sf_BFu8i_BFu16s");
    static STRUCT_IF_C Sf_BFu8i_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_BFu16s)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_BFu16s.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_BFu16s");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu16s");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "Sf_BFu8i_BFu16s");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "Sf_BFu8i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_BFu16s, Sf_BFu8i_BFu16s)
//============================================================================



static void Test_Sf_BFu8i_BFu17i()
{
  {
    init_simple_test("Sf_BFu8i_BFu17i");
    static STRUCT_IF_C Sf_BFu8i_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu8i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_BFu17i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_BFu17i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_BFu17i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu17i");
    set_bf_and_test(lv, v3, 1, 0, 17, 1, "Sf_BFu8i_BFu17i");
    set_bf_and_test(lv, v3, 1, 0, 17, hide_ull(1LL<<16), "Sf_BFu8i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_BFu17i, Sf_BFu8i_BFu17i)
//============================================================================



static void Test_Sf_BFu8i_BFu17ll()
{
  {
    init_simple_test("Sf_BFu8i_BFu17ll");
    static STRUCT_IF_C Sf_BFu8i_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu8i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_BFu17ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_BFu17ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu17ll");
    set_bf_and_test(lv, v3, 1, 0, 17, 1, "Sf_BFu8i_BFu17ll");
    set_bf_and_test(lv, v3, 1, 0, 17, hide_ull(1LL<<16), "Sf_BFu8i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_BFu17ll, Sf_BFu8i_BFu17ll)
//============================================================================



static void Test_Sf_BFu8i_BFu1c()
{
  {
    init_simple_test("Sf_BFu8i_BFu1c");
    static STRUCT_IF_C Sf_BFu8i_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_BFu1c)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_BFu1c.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_BFu1c");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu1c");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "Sf_BFu8i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_BFu1c, Sf_BFu8i_BFu1c)
//============================================================================



static void Test_Sf_BFu8i_BFu1i()
{
  {
    init_simple_test("Sf_BFu8i_BFu1i");
    static STRUCT_IF_C Sf_BFu8i_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_BFu1i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_BFu1i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_BFu1i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu1i");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "Sf_BFu8i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_BFu1i, Sf_BFu8i_BFu1i)
//============================================================================



static void Test_Sf_BFu8i_BFu1ll()
{
  {
    init_simple_test("Sf_BFu8i_BFu1ll");
    static STRUCT_IF_C Sf_BFu8i_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_BFu1ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu1ll");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "Sf_BFu8i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_BFu1ll, Sf_BFu8i_BFu1ll)
//============================================================================



static void Test_Sf_BFu8i_BFu1s()
{
  {
    init_simple_test("Sf_BFu8i_BFu1s");
    static STRUCT_IF_C Sf_BFu8i_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_BFu1s)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_BFu1s.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_BFu1s");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu1s");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "Sf_BFu8i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_BFu1s, Sf_BFu8i_BFu1s)
//============================================================================



static void Test_Sf_BFu8i_BFu31i()
{
  {
    init_simple_test("Sf_BFu8i_BFu31i");
    static STRUCT_IF_C Sf_BFu8i_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu8i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_BFu31i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_BFu31i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_BFu31i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu31i");
    set_bf_and_test(lv, v3, 1, 0, 31, 1, "Sf_BFu8i_BFu31i");
    set_bf_and_test(lv, v3, 1, 0, 31, hide_ull(1LL<<30), "Sf_BFu8i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_BFu31i, Sf_BFu8i_BFu31i)
//============================================================================



static void Test_Sf_BFu8i_BFu31ll()
{
  {
    init_simple_test("Sf_BFu8i_BFu31ll");
    static STRUCT_IF_C Sf_BFu8i_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu8i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_BFu31ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_BFu31ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu31ll");
    set_bf_and_test(lv, v3, 1, 0, 31, 1, "Sf_BFu8i_BFu31ll");
    set_bf_and_test(lv, v3, 1, 0, 31, hide_ull(1LL<<30), "Sf_BFu8i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_BFu31ll, Sf_BFu8i_BFu31ll)
//============================================================================



static void Test_Sf_BFu8i_BFu32i()
{
  {
    init_simple_test("Sf_BFu8i_BFu32i");
    static STRUCT_IF_C Sf_BFu8i_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu8i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_BFu32i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_BFu32i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_BFu32i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu32i");
    set_bf_and_test(lv, v3, 1, 0, 32, 1, "Sf_BFu8i_BFu32i");
    set_bf_and_test(lv, v3, 1, 0, 32, hide_ull(1LL<<31), "Sf_BFu8i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_BFu32i, Sf_BFu8i_BFu32i)
//============================================================================



static void Test_Sf_BFu8i_BFu32ll()
{
  {
    init_simple_test("Sf_BFu8i_BFu32ll");
    static STRUCT_IF_C Sf_BFu8i_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu8i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_BFu32ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_BFu32ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu32ll");
    set_bf_and_test(lv, v3, 1, 0, 32, 1, "Sf_BFu8i_BFu32ll");
    set_bf_and_test(lv, v3, 1, 0, 32, hide_ull(1LL<<31), "Sf_BFu8i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_BFu32ll, Sf_BFu8i_BFu32ll)
//============================================================================



static void Test_Sf_BFu8i_BFu33()
{
  {
    init_simple_test("Sf_BFu8i_BFu33");
    static STRUCT_IF_C Sf_BFu8i_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu8i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_BFu33)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_BFu33.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_BFu33");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu33");
    set_bf_and_test(lv, v3, 1, 0, 33, 1, "Sf_BFu8i_BFu33");
    set_bf_and_test(lv, v3, 1, 0, 33, hide_ull(1LL<<32), "Sf_BFu8i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_BFu33, Sf_BFu8i_BFu33)
//============================================================================



static void Test_Sf_BFu8i_BFu7c()
{
  {
    init_simple_test("Sf_BFu8i_BFu7c");
    static STRUCT_IF_C Sf_BFu8i_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_BFu7c)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_BFu7c.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_BFu7c");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu7c");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "Sf_BFu8i_BFu7c");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "Sf_BFu8i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_BFu7c, Sf_BFu8i_BFu7c)
//============================================================================



static void Test_Sf_BFu8i_BFu7i()
{
  {
    init_simple_test("Sf_BFu8i_BFu7i");
    static STRUCT_IF_C Sf_BFu8i_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_BFu7i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_BFu7i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_BFu7i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu7i");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "Sf_BFu8i_BFu7i");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "Sf_BFu8i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_BFu7i, Sf_BFu8i_BFu7i)
//============================================================================



static void Test_Sf_BFu8i_BFu7ll()
{
  {
    init_simple_test("Sf_BFu8i_BFu7ll");
    static STRUCT_IF_C Sf_BFu8i_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_BFu7ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_BFu7ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu7ll");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "Sf_BFu8i_BFu7ll");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "Sf_BFu8i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_BFu7ll, Sf_BFu8i_BFu7ll)
//============================================================================



static void Test_Sf_BFu8i_BFu7s()
{
  {
    init_simple_test("Sf_BFu8i_BFu7s");
    static STRUCT_IF_C Sf_BFu8i_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_BFu7s)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_BFu7s.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_BFu7s");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu7s");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "Sf_BFu8i_BFu7s");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "Sf_BFu8i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_BFu7s, Sf_BFu8i_BFu7s)
//============================================================================



static void Test_Sf_BFu8i_BFu8c()
{
  {
    init_simple_test("Sf_BFu8i_BFu8c");
    static STRUCT_IF_C Sf_BFu8i_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_BFu8c)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_BFu8c.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_BFu8c");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu8c");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "Sf_BFu8i_BFu8c");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_BFu8c, Sf_BFu8i_BFu8c)
//============================================================================



static void Test_Sf_BFu8i_BFu8i()
{
  {
    init_simple_test("Sf_BFu8i_BFu8i");
    static STRUCT_IF_C Sf_BFu8i_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_BFu8i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_BFu8i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_BFu8i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu8i");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "Sf_BFu8i_BFu8i");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_BFu8i, Sf_BFu8i_BFu8i)
//============================================================================



static void Test_Sf_BFu8i_BFu8ll()
{
  {
    init_simple_test("Sf_BFu8i_BFu8ll");
    static STRUCT_IF_C Sf_BFu8i_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_BFu8ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_BFu8ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu8ll");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "Sf_BFu8i_BFu8ll");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_BFu8ll, Sf_BFu8i_BFu8ll)
//============================================================================



static void Test_Sf_BFu8i_BFu8s()
{
  {
    init_simple_test("Sf_BFu8i_BFu8s");
    static STRUCT_IF_C Sf_BFu8i_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_BFu8s)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_BFu8s.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_BFu8s");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu8s");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "Sf_BFu8i_BFu8s");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_BFu8s, Sf_BFu8i_BFu8s)
//============================================================================



static void Test_Sf_BFu8i_BFu9i()
{
  {
    init_simple_test("Sf_BFu8i_BFu9i");
    static STRUCT_IF_C Sf_BFu8i_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_BFu9i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_BFu9i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_BFu9i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu9i");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "Sf_BFu8i_BFu9i");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "Sf_BFu8i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_BFu9i, Sf_BFu8i_BFu9i)
//============================================================================



static void Test_Sf_BFu8i_BFu9ll()
{
  {
    init_simple_test("Sf_BFu8i_BFu9ll");
    static STRUCT_IF_C Sf_BFu8i_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_BFu9ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_BFu9ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu9ll");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "Sf_BFu8i_BFu9ll");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "Sf_BFu8i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_BFu9ll, Sf_BFu8i_BFu9ll)
//============================================================================



static void Test_Sf_BFu8i_BFu9s()
{
  {
    init_simple_test("Sf_BFu8i_BFu9s");
    static STRUCT_IF_C Sf_BFu8i_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_BFu9s)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_BFu9s.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_BFu9s");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_BFu9s");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "Sf_BFu8i_BFu9s");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "Sf_BFu8i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_BFu9s, Sf_BFu8i_BFu9s)
//============================================================================



static void Test_Sf_BFu8i_C()
{
  {
    init_simple_test("Sf_BFu8i_C");
    static STRUCT_IF_C Sf_BFu8i_C lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8i_C)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_C)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_C.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_C");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_C");
    check_field_offset(lv, v3, 1, "Sf_BFu8i_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_C, Sf_BFu8i_C)
//============================================================================



static void Test_Sf_BFu8i_D()
{
  {
    init_simple_test("Sf_BFu8i_D");
    static STRUCT_IF_C Sf_BFu8i_D lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu8i_D)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_D)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_D.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_D");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_D");
    check_field_offset(lv, v3, 1, "Sf_BFu8i_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_D, Sf_BFu8i_D)
//============================================================================



static void Test_Sf_BFu8i_F()
{
  {
    init_simple_test("Sf_BFu8i_F");
    static STRUCT_IF_C Sf_BFu8i_F lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu8i_F)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_F)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_F.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_F");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_F");
    check_field_offset(lv, v3, 1, "Sf_BFu8i_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_F, Sf_BFu8i_F)
//============================================================================



static void Test_Sf_BFu8i_I()
{
  {
    init_simple_test("Sf_BFu8i_I");
    static STRUCT_IF_C Sf_BFu8i_I lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu8i_I)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_I)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_I.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_I");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_I");
    check_field_offset(lv, v3, 1, "Sf_BFu8i_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_I, Sf_BFu8i_I)
//============================================================================



static void Test_Sf_BFu8i_Ip()
{
  {
    init_simple_test("Sf_BFu8i_Ip");
    static STRUCT_IF_C Sf_BFu8i_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Sf_BFu8i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_Ip)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_Ip.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_Ip");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_Ip");
    check_field_offset(lv, v3, 1, "Sf_BFu8i_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_Ip, Sf_BFu8i_Ip)
//============================================================================



static void Test_Sf_BFu8i_L()
{
  {
    init_simple_test("Sf_BFu8i_L");
    static STRUCT_IF_C Sf_BFu8i_L lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu8i_L)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_L)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_L.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_L");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_L");
    check_field_offset(lv, v3, 1, "Sf_BFu8i_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_L, Sf_BFu8i_L)
//============================================================================



static void Test_Sf_BFu8i_S()
{
  {
    init_simple_test("Sf_BFu8i_S");
    static STRUCT_IF_C Sf_BFu8i_S lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8i_S)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_S)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_S.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_S");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_S");
    check_field_offset(lv, v3, 1, "Sf_BFu8i_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_S, Sf_BFu8i_S)
//============================================================================



static void Test_Sf_BFu8i_Sf()
{
  {
    init_simple_test("Sf_BFu8i_Sf");
    static STRUCT_IF_C Sf_BFu8i_Sf lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu8i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_Sf)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_Sf.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_Sf");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_Sf");
    check_field_offset(lv, v3, 1, "Sf_BFu8i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_Sf, Sf_BFu8i_Sf)
//============================================================================



static void Test_Sf_BFu8i_Uc()
{
  {
    init_simple_test("Sf_BFu8i_Uc");
    static STRUCT_IF_C Sf_BFu8i_Uc lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_Uc)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_Uc.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_Uc");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_Uc");
    check_field_offset(lv, v3, 1, "Sf_BFu8i_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_Uc, Sf_BFu8i_Uc)
//============================================================================



static void Test_Sf_BFu8i_Ui()
{
  {
    init_simple_test("Sf_BFu8i_Ui");
    static STRUCT_IF_C Sf_BFu8i_Ui lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu8i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_Ui)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_Ui.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_Ui");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_Ui");
    check_field_offset(lv, v3, 1, "Sf_BFu8i_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_Ui, Sf_BFu8i_Ui)
//============================================================================



static void Test_Sf_BFu8i_Ul()
{
  {
    init_simple_test("Sf_BFu8i_Ul");
    static STRUCT_IF_C Sf_BFu8i_Ul lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu8i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_Ul)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_Ul.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_Ul");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_Ul");
    check_field_offset(lv, v3, 1, "Sf_BFu8i_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_Ul, Sf_BFu8i_Ul)
//============================================================================



static void Test_Sf_BFu8i_Us()
{
  {
    init_simple_test("Sf_BFu8i_Us");
    static STRUCT_IF_C Sf_BFu8i_Us lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_Us)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_Us.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_Us");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_Us");
    check_field_offset(lv, v3, 1, "Sf_BFu8i_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_Us, Sf_BFu8i_Us)
//============================================================================



static void Test_Sf_BFu8i_Vp()
{
  {
    init_simple_test("Sf_BFu8i_Vp");
    static STRUCT_IF_C Sf_BFu8i_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Sf_BFu8i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8i_Vp)");
    check_field_offset(lv, v1, 0, "Sf_BFu8i_Vp.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8i_Vp");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8i_Vp");
    check_field_offset(lv, v3, 1, "Sf_BFu8i_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8i_Vp, Sf_BFu8i_Vp)
//============================================================================



static void Test_Sf_BFu8ll()
{
  {
    init_simple_test("Sf_BFu8ll");
    static STRUCT_IF_C Sf_BFu8ll lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll, Sf_BFu8ll)
//============================================================================



static void Test_Sf_BFu8ll_BFu15i()
{
  {
    init_simple_test("Sf_BFu8ll_BFu15i");
    static STRUCT_IF_C Sf_BFu8ll_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_BFu15i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_BFu15i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu15i");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "Sf_BFu8ll_BFu15i");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "Sf_BFu8ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_BFu15i, Sf_BFu8ll_BFu15i)
//============================================================================



static void Test_Sf_BFu8ll_BFu15ll()
{
  {
    init_simple_test("Sf_BFu8ll_BFu15ll");
    static STRUCT_IF_C Sf_BFu8ll_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_BFu15ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu15ll");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "Sf_BFu8ll_BFu15ll");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "Sf_BFu8ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_BFu15ll, Sf_BFu8ll_BFu15ll)
//============================================================================



static void Test_Sf_BFu8ll_BFu15s()
{
  {
    init_simple_test("Sf_BFu8ll_BFu15s");
    static STRUCT_IF_C Sf_BFu8ll_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_BFu15s)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_BFu15s");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu15s");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "Sf_BFu8ll_BFu15s");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "Sf_BFu8ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_BFu15s, Sf_BFu8ll_BFu15s)
//============================================================================



static void Test_Sf_BFu8ll_BFu16i()
{
  {
    init_simple_test("Sf_BFu8ll_BFu16i");
    static STRUCT_IF_C Sf_BFu8ll_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_BFu16i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_BFu16i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu16i");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "Sf_BFu8ll_BFu16i");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "Sf_BFu8ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_BFu16i, Sf_BFu8ll_BFu16i)
//============================================================================



static void Test_Sf_BFu8ll_BFu16ll()
{
  {
    init_simple_test("Sf_BFu8ll_BFu16ll");
    static STRUCT_IF_C Sf_BFu8ll_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_BFu16ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu16ll");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "Sf_BFu8ll_BFu16ll");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "Sf_BFu8ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_BFu16ll, Sf_BFu8ll_BFu16ll)
//============================================================================



static void Test_Sf_BFu8ll_BFu16s()
{
  {
    init_simple_test("Sf_BFu8ll_BFu16s");
    static STRUCT_IF_C Sf_BFu8ll_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_BFu16s)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_BFu16s");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu16s");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "Sf_BFu8ll_BFu16s");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "Sf_BFu8ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_BFu16s, Sf_BFu8ll_BFu16s)
//============================================================================



static void Test_Sf_BFu8ll_BFu17i()
{
  {
    init_simple_test("Sf_BFu8ll_BFu17i");
    static STRUCT_IF_C Sf_BFu8ll_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu8ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_BFu17i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_BFu17i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu17i");
    set_bf_and_test(lv, v3, 1, 0, 17, 1, "Sf_BFu8ll_BFu17i");
    set_bf_and_test(lv, v3, 1, 0, 17, hide_ull(1LL<<16), "Sf_BFu8ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_BFu17i, Sf_BFu8ll_BFu17i)
//============================================================================



static void Test_Sf_BFu8ll_BFu17ll()
{
  {
    init_simple_test("Sf_BFu8ll_BFu17ll");
    static STRUCT_IF_C Sf_BFu8ll_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu8ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_BFu17ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu17ll");
    set_bf_and_test(lv, v3, 1, 0, 17, 1, "Sf_BFu8ll_BFu17ll");
    set_bf_and_test(lv, v3, 1, 0, 17, hide_ull(1LL<<16), "Sf_BFu8ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_BFu17ll, Sf_BFu8ll_BFu17ll)
//============================================================================



static void Test_Sf_BFu8ll_BFu1c()
{
  {
    init_simple_test("Sf_BFu8ll_BFu1c");
    static STRUCT_IF_C Sf_BFu8ll_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_BFu1c)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu1c");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "Sf_BFu8ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_BFu1c, Sf_BFu8ll_BFu1c)
//============================================================================



static void Test_Sf_BFu8ll_BFu1i()
{
  {
    init_simple_test("Sf_BFu8ll_BFu1i");
    static STRUCT_IF_C Sf_BFu8ll_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_BFu1i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu1i");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "Sf_BFu8ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_BFu1i, Sf_BFu8ll_BFu1i)
//============================================================================



static void Test_Sf_BFu8ll_BFu1ll()
{
  {
    init_simple_test("Sf_BFu8ll_BFu1ll");
    static STRUCT_IF_C Sf_BFu8ll_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu1ll");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "Sf_BFu8ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_BFu1ll, Sf_BFu8ll_BFu1ll)
//============================================================================



static void Test_Sf_BFu8ll_BFu1s()
{
  {
    init_simple_test("Sf_BFu8ll_BFu1s");
    static STRUCT_IF_C Sf_BFu8ll_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_BFu1s)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu1s");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "Sf_BFu8ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_BFu1s, Sf_BFu8ll_BFu1s)
//============================================================================



static void Test_Sf_BFu8ll_BFu31i()
{
  {
    init_simple_test("Sf_BFu8ll_BFu31i");
    static STRUCT_IF_C Sf_BFu8ll_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu8ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_BFu31i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_BFu31i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu31i");
    set_bf_and_test(lv, v3, 1, 0, 31, 1, "Sf_BFu8ll_BFu31i");
    set_bf_and_test(lv, v3, 1, 0, 31, hide_ull(1LL<<30), "Sf_BFu8ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_BFu31i, Sf_BFu8ll_BFu31i)
//============================================================================



static void Test_Sf_BFu8ll_BFu31ll()
{
  {
    init_simple_test("Sf_BFu8ll_BFu31ll");
    static STRUCT_IF_C Sf_BFu8ll_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu8ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_BFu31ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu31ll");
    set_bf_and_test(lv, v3, 1, 0, 31, 1, "Sf_BFu8ll_BFu31ll");
    set_bf_and_test(lv, v3, 1, 0, 31, hide_ull(1LL<<30), "Sf_BFu8ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_BFu31ll, Sf_BFu8ll_BFu31ll)
//============================================================================



static void Test_Sf_BFu8ll_BFu32i()
{
  {
    init_simple_test("Sf_BFu8ll_BFu32i");
    static STRUCT_IF_C Sf_BFu8ll_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu8ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_BFu32i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_BFu32i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu32i");
    set_bf_and_test(lv, v3, 1, 0, 32, 1, "Sf_BFu8ll_BFu32i");
    set_bf_and_test(lv, v3, 1, 0, 32, hide_ull(1LL<<31), "Sf_BFu8ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_BFu32i, Sf_BFu8ll_BFu32i)
//============================================================================



static void Test_Sf_BFu8ll_BFu32ll()
{
  {
    init_simple_test("Sf_BFu8ll_BFu32ll");
    static STRUCT_IF_C Sf_BFu8ll_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu8ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_BFu32ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu32ll");
    set_bf_and_test(lv, v3, 1, 0, 32, 1, "Sf_BFu8ll_BFu32ll");
    set_bf_and_test(lv, v3, 1, 0, 32, hide_ull(1LL<<31), "Sf_BFu8ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_BFu32ll, Sf_BFu8ll_BFu32ll)
//============================================================================



static void Test_Sf_BFu8ll_BFu33()
{
  {
    init_simple_test("Sf_BFu8ll_BFu33");
    static STRUCT_IF_C Sf_BFu8ll_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu8ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_BFu33)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_BFu33.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_BFu33");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu33");
    set_bf_and_test(lv, v3, 1, 0, 33, 1, "Sf_BFu8ll_BFu33");
    set_bf_and_test(lv, v3, 1, 0, 33, hide_ull(1LL<<32), "Sf_BFu8ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_BFu33, Sf_BFu8ll_BFu33)
//============================================================================



static void Test_Sf_BFu8ll_BFu7c()
{
  {
    init_simple_test("Sf_BFu8ll_BFu7c");
    static STRUCT_IF_C Sf_BFu8ll_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_BFu7c)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_BFu7c");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu7c");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "Sf_BFu8ll_BFu7c");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "Sf_BFu8ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_BFu7c, Sf_BFu8ll_BFu7c)
//============================================================================



static void Test_Sf_BFu8ll_BFu7i()
{
  {
    init_simple_test("Sf_BFu8ll_BFu7i");
    static STRUCT_IF_C Sf_BFu8ll_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_BFu7i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_BFu7i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu7i");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "Sf_BFu8ll_BFu7i");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "Sf_BFu8ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_BFu7i, Sf_BFu8ll_BFu7i)
//============================================================================



static void Test_Sf_BFu8ll_BFu7ll()
{
  {
    init_simple_test("Sf_BFu8ll_BFu7ll");
    static STRUCT_IF_C Sf_BFu8ll_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_BFu7ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu7ll");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "Sf_BFu8ll_BFu7ll");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "Sf_BFu8ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_BFu7ll, Sf_BFu8ll_BFu7ll)
//============================================================================



static void Test_Sf_BFu8ll_BFu7s()
{
  {
    init_simple_test("Sf_BFu8ll_BFu7s");
    static STRUCT_IF_C Sf_BFu8ll_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_BFu7s)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_BFu7s");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu7s");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "Sf_BFu8ll_BFu7s");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "Sf_BFu8ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_BFu7s, Sf_BFu8ll_BFu7s)
//============================================================================



static void Test_Sf_BFu8ll_BFu8c()
{
  {
    init_simple_test("Sf_BFu8ll_BFu8c");
    static STRUCT_IF_C Sf_BFu8ll_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_BFu8c)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_BFu8c");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu8c");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "Sf_BFu8ll_BFu8c");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_BFu8c, Sf_BFu8ll_BFu8c)
//============================================================================



static void Test_Sf_BFu8ll_BFu8i()
{
  {
    init_simple_test("Sf_BFu8ll_BFu8i");
    static STRUCT_IF_C Sf_BFu8ll_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_BFu8i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_BFu8i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu8i");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "Sf_BFu8ll_BFu8i");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_BFu8i, Sf_BFu8ll_BFu8i)
//============================================================================



static void Test_Sf_BFu8ll_BFu8ll()
{
  {
    init_simple_test("Sf_BFu8ll_BFu8ll");
    static STRUCT_IF_C Sf_BFu8ll_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_BFu8ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu8ll");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "Sf_BFu8ll_BFu8ll");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_BFu8ll, Sf_BFu8ll_BFu8ll)
//============================================================================



static void Test_Sf_BFu8ll_BFu8s()
{
  {
    init_simple_test("Sf_BFu8ll_BFu8s");
    static STRUCT_IF_C Sf_BFu8ll_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_BFu8s)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_BFu8s");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu8s");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "Sf_BFu8ll_BFu8s");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_BFu8s, Sf_BFu8ll_BFu8s)
//============================================================================



static void Test_Sf_BFu8ll_BFu9i()
{
  {
    init_simple_test("Sf_BFu8ll_BFu9i");
    static STRUCT_IF_C Sf_BFu8ll_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_BFu9i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_BFu9i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu9i");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "Sf_BFu8ll_BFu9i");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "Sf_BFu8ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_BFu9i, Sf_BFu8ll_BFu9i)
//============================================================================



static void Test_Sf_BFu8ll_BFu9ll()
{
  {
    init_simple_test("Sf_BFu8ll_BFu9ll");
    static STRUCT_IF_C Sf_BFu8ll_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_BFu9ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu9ll");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "Sf_BFu8ll_BFu9ll");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "Sf_BFu8ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_BFu9ll, Sf_BFu8ll_BFu9ll)
//============================================================================



static void Test_Sf_BFu8ll_BFu9s()
{
  {
    init_simple_test("Sf_BFu8ll_BFu9s");
    static STRUCT_IF_C Sf_BFu8ll_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_BFu9s)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_BFu9s");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_BFu9s");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "Sf_BFu8ll_BFu9s");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "Sf_BFu8ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_BFu9s, Sf_BFu8ll_BFu9s)
//============================================================================



static void Test_Sf_BFu8ll_C()
{
  {
    init_simple_test("Sf_BFu8ll_C");
    static STRUCT_IF_C Sf_BFu8ll_C lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_C)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_C.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_C");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_C");
    check_field_offset(lv, v3, 1, "Sf_BFu8ll_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_C, Sf_BFu8ll_C)
//============================================================================



static void Test_Sf_BFu8ll_D()
{
  {
    init_simple_test("Sf_BFu8ll_D");
    static STRUCT_IF_C Sf_BFu8ll_D lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu8ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_D)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_D.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_D");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_D");
    check_field_offset(lv, v3, 1, "Sf_BFu8ll_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_D, Sf_BFu8ll_D)
//============================================================================



static void Test_Sf_BFu8ll_F()
{
  {
    init_simple_test("Sf_BFu8ll_F");
    static STRUCT_IF_C Sf_BFu8ll_F lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu8ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_F)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_F.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_F");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_F");
    check_field_offset(lv, v3, 1, "Sf_BFu8ll_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_F, Sf_BFu8ll_F)
//============================================================================



static void Test_Sf_BFu8ll_I()
{
  {
    init_simple_test("Sf_BFu8ll_I");
    static STRUCT_IF_C Sf_BFu8ll_I lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu8ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_I)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_I.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_I");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_I");
    check_field_offset(lv, v3, 1, "Sf_BFu8ll_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_I, Sf_BFu8ll_I)
//============================================================================



static void Test_Sf_BFu8ll_Ip()
{
  {
    init_simple_test("Sf_BFu8ll_Ip");
    static STRUCT_IF_C Sf_BFu8ll_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Sf_BFu8ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_Ip)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_Ip.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_Ip");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_Ip");
    check_field_offset(lv, v3, 1, "Sf_BFu8ll_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_Ip, Sf_BFu8ll_Ip)
//============================================================================



static void Test_Sf_BFu8ll_L()
{
  {
    init_simple_test("Sf_BFu8ll_L");
    static STRUCT_IF_C Sf_BFu8ll_L lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu8ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_L)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_L.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_L");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_L");
    check_field_offset(lv, v3, 1, "Sf_BFu8ll_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_L, Sf_BFu8ll_L)
//============================================================================



static void Test_Sf_BFu8ll_S()
{
  {
    init_simple_test("Sf_BFu8ll_S");
    static STRUCT_IF_C Sf_BFu8ll_S lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_S)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_S.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_S");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_S");
    check_field_offset(lv, v3, 1, "Sf_BFu8ll_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_S, Sf_BFu8ll_S)
//============================================================================



static void Test_Sf_BFu8ll_Sf()
{
  {
    init_simple_test("Sf_BFu8ll_Sf");
    static STRUCT_IF_C Sf_BFu8ll_Sf lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu8ll_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_Sf)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_Sf.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_Sf");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_Sf");
    check_field_offset(lv, v3, 1, "Sf_BFu8ll_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_Sf, Sf_BFu8ll_Sf)
//============================================================================



static void Test_Sf_BFu8ll_Uc()
{
  {
    init_simple_test("Sf_BFu8ll_Uc");
    static STRUCT_IF_C Sf_BFu8ll_Uc lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_Uc)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_Uc.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_Uc");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_Uc");
    check_field_offset(lv, v3, 1, "Sf_BFu8ll_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_Uc, Sf_BFu8ll_Uc)
//============================================================================



static void Test_Sf_BFu8ll_Ui()
{
  {
    init_simple_test("Sf_BFu8ll_Ui");
    static STRUCT_IF_C Sf_BFu8ll_Ui lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu8ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_Ui)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_Ui.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_Ui");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_Ui");
    check_field_offset(lv, v3, 1, "Sf_BFu8ll_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_Ui, Sf_BFu8ll_Ui)
//============================================================================



static void Test_Sf_BFu8ll_Ul()
{
  {
    init_simple_test("Sf_BFu8ll_Ul");
    static STRUCT_IF_C Sf_BFu8ll_Ul lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu8ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_Ul)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_Ul.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_Ul");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_Ul");
    check_field_offset(lv, v3, 1, "Sf_BFu8ll_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_Ul, Sf_BFu8ll_Ul)
//============================================================================



static void Test_Sf_BFu8ll_Us()
{
  {
    init_simple_test("Sf_BFu8ll_Us");
    static STRUCT_IF_C Sf_BFu8ll_Us lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_Us)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_Us.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_Us");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_Us");
    check_field_offset(lv, v3, 1, "Sf_BFu8ll_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_Us, Sf_BFu8ll_Us)
//============================================================================



static void Test_Sf_BFu8ll_Vp()
{
  {
    init_simple_test("Sf_BFu8ll_Vp");
    static STRUCT_IF_C Sf_BFu8ll_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Sf_BFu8ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8ll_Vp)");
    check_field_offset(lv, v1, 0, "Sf_BFu8ll_Vp.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8ll_Vp");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8ll_Vp");
    check_field_offset(lv, v3, 1, "Sf_BFu8ll_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8ll_Vp, Sf_BFu8ll_Vp)
//============================================================================



static void Test_Sf_BFu8s()
{
  {
    init_simple_test("Sf_BFu8s");
    static STRUCT_IF_C Sf_BFu8s lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s, Sf_BFu8s)
//============================================================================



static void Test_Sf_BFu8s_BFu15i()
{
  {
    init_simple_test("Sf_BFu8s_BFu15i");
    static STRUCT_IF_C Sf_BFu8s_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_BFu15i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_BFu15i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_BFu15i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu15i");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "Sf_BFu8s_BFu15i");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "Sf_BFu8s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_BFu15i, Sf_BFu8s_BFu15i)
//============================================================================



static void Test_Sf_BFu8s_BFu15ll()
{
  {
    init_simple_test("Sf_BFu8s_BFu15ll");
    static STRUCT_IF_C Sf_BFu8s_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_BFu15ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_BFu15ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_BFu15ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu15ll");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "Sf_BFu8s_BFu15ll");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "Sf_BFu8s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_BFu15ll, Sf_BFu8s_BFu15ll)
//============================================================================



static void Test_Sf_BFu8s_BFu15s()
{
  {
    init_simple_test("Sf_BFu8s_BFu15s");
    static STRUCT_IF_C Sf_BFu8s_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_BFu15s)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_BFu15s.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_BFu15s");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu15s");
    set_bf_and_test(lv, v3, 1, 0, 15, 1, "Sf_BFu8s_BFu15s");
    set_bf_and_test(lv, v3, 1, 0, 15, hide_ull(1LL<<14), "Sf_BFu8s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_BFu15s, Sf_BFu8s_BFu15s)
//============================================================================



static void Test_Sf_BFu8s_BFu16i()
{
  {
    init_simple_test("Sf_BFu8s_BFu16i");
    static STRUCT_IF_C Sf_BFu8s_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_BFu16i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_BFu16i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_BFu16i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu16i");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "Sf_BFu8s_BFu16i");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "Sf_BFu8s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_BFu16i, Sf_BFu8s_BFu16i)
//============================================================================



static void Test_Sf_BFu8s_BFu16ll()
{
  {
    init_simple_test("Sf_BFu8s_BFu16ll");
    static STRUCT_IF_C Sf_BFu8s_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_BFu16ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_BFu16ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_BFu16ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu16ll");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "Sf_BFu8s_BFu16ll");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "Sf_BFu8s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_BFu16ll, Sf_BFu8s_BFu16ll)
//============================================================================



static void Test_Sf_BFu8s_BFu16s()
{
  {
    init_simple_test("Sf_BFu8s_BFu16s");
    static STRUCT_IF_C Sf_BFu8s_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_BFu16s)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_BFu16s.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_BFu16s");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu16s");
    set_bf_and_test(lv, v3, 1, 0, 16, 1, "Sf_BFu8s_BFu16s");
    set_bf_and_test(lv, v3, 1, 0, 16, hide_ull(1LL<<15), "Sf_BFu8s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_BFu16s, Sf_BFu8s_BFu16s)
//============================================================================



static void Test_Sf_BFu8s_BFu17i()
{
  {
    init_simple_test("Sf_BFu8s_BFu17i");
    static STRUCT_IF_C Sf_BFu8s_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu8s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_BFu17i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_BFu17i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_BFu17i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu17i");
    set_bf_and_test(lv, v3, 1, 0, 17, 1, "Sf_BFu8s_BFu17i");
    set_bf_and_test(lv, v3, 1, 0, 17, hide_ull(1LL<<16), "Sf_BFu8s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_BFu17i, Sf_BFu8s_BFu17i)
//============================================================================



static void Test_Sf_BFu8s_BFu17ll()
{
  {
    init_simple_test("Sf_BFu8s_BFu17ll");
    static STRUCT_IF_C Sf_BFu8s_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu8s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_BFu17ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_BFu17ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_BFu17ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu17ll");
    set_bf_and_test(lv, v3, 1, 0, 17, 1, "Sf_BFu8s_BFu17ll");
    set_bf_and_test(lv, v3, 1, 0, 17, hide_ull(1LL<<16), "Sf_BFu8s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_BFu17ll, Sf_BFu8s_BFu17ll)
//============================================================================



static void Test_Sf_BFu8s_BFu1c()
{
  {
    init_simple_test("Sf_BFu8s_BFu1c");
    static STRUCT_IF_C Sf_BFu8s_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_BFu1c)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_BFu1c.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_BFu1c");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu1c");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "Sf_BFu8s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_BFu1c, Sf_BFu8s_BFu1c)
//============================================================================



static void Test_Sf_BFu8s_BFu1i()
{
  {
    init_simple_test("Sf_BFu8s_BFu1i");
    static STRUCT_IF_C Sf_BFu8s_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_BFu1i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_BFu1i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_BFu1i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu1i");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "Sf_BFu8s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_BFu1i, Sf_BFu8s_BFu1i)
//============================================================================



static void Test_Sf_BFu8s_BFu1ll()
{
  {
    init_simple_test("Sf_BFu8s_BFu1ll");
    static STRUCT_IF_C Sf_BFu8s_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_BFu1ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_BFu1ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_BFu1ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu1ll");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "Sf_BFu8s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_BFu1ll, Sf_BFu8s_BFu1ll)
//============================================================================



static void Test_Sf_BFu8s_BFu1s()
{
  {
    init_simple_test("Sf_BFu8s_BFu1s");
    static STRUCT_IF_C Sf_BFu8s_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_BFu1s)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_BFu1s.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_BFu1s");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu1s");
    set_bf_and_test(lv, v3, 1, 0, 1, 1, "Sf_BFu8s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_BFu1s, Sf_BFu8s_BFu1s)
//============================================================================



static void Test_Sf_BFu8s_BFu31i()
{
  {
    init_simple_test("Sf_BFu8s_BFu31i");
    static STRUCT_IF_C Sf_BFu8s_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu8s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_BFu31i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_BFu31i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_BFu31i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu31i");
    set_bf_and_test(lv, v3, 1, 0, 31, 1, "Sf_BFu8s_BFu31i");
    set_bf_and_test(lv, v3, 1, 0, 31, hide_ull(1LL<<30), "Sf_BFu8s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_BFu31i, Sf_BFu8s_BFu31i)
//============================================================================



static void Test_Sf_BFu8s_BFu31ll()
{
  {
    init_simple_test("Sf_BFu8s_BFu31ll");
    static STRUCT_IF_C Sf_BFu8s_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu8s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_BFu31ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_BFu31ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_BFu31ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu31ll");
    set_bf_and_test(lv, v3, 1, 0, 31, 1, "Sf_BFu8s_BFu31ll");
    set_bf_and_test(lv, v3, 1, 0, 31, hide_ull(1LL<<30), "Sf_BFu8s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_BFu31ll, Sf_BFu8s_BFu31ll)
//============================================================================



static void Test_Sf_BFu8s_BFu32i()
{
  {
    init_simple_test("Sf_BFu8s_BFu32i");
    static STRUCT_IF_C Sf_BFu8s_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu8s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_BFu32i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_BFu32i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_BFu32i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu32i");
    set_bf_and_test(lv, v3, 1, 0, 32, 1, "Sf_BFu8s_BFu32i");
    set_bf_and_test(lv, v3, 1, 0, 32, hide_ull(1LL<<31), "Sf_BFu8s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_BFu32i, Sf_BFu8s_BFu32i)
//============================================================================



static void Test_Sf_BFu8s_BFu32ll()
{
  {
    init_simple_test("Sf_BFu8s_BFu32ll");
    static STRUCT_IF_C Sf_BFu8s_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu8s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_BFu32ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_BFu32ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_BFu32ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu32ll");
    set_bf_and_test(lv, v3, 1, 0, 32, 1, "Sf_BFu8s_BFu32ll");
    set_bf_and_test(lv, v3, 1, 0, 32, hide_ull(1LL<<31), "Sf_BFu8s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_BFu32ll, Sf_BFu8s_BFu32ll)
//============================================================================



static void Test_Sf_BFu8s_BFu33()
{
  {
    init_simple_test("Sf_BFu8s_BFu33");
    static STRUCT_IF_C Sf_BFu8s_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu8s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_BFu33)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_BFu33.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_BFu33");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu33");
    set_bf_and_test(lv, v3, 1, 0, 33, 1, "Sf_BFu8s_BFu33");
    set_bf_and_test(lv, v3, 1, 0, 33, hide_ull(1LL<<32), "Sf_BFu8s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_BFu33, Sf_BFu8s_BFu33)
//============================================================================



static void Test_Sf_BFu8s_BFu7c()
{
  {
    init_simple_test("Sf_BFu8s_BFu7c");
    static STRUCT_IF_C Sf_BFu8s_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_BFu7c)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_BFu7c.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_BFu7c");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu7c");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "Sf_BFu8s_BFu7c");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "Sf_BFu8s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_BFu7c, Sf_BFu8s_BFu7c)
//============================================================================



static void Test_Sf_BFu8s_BFu7i()
{
  {
    init_simple_test("Sf_BFu8s_BFu7i");
    static STRUCT_IF_C Sf_BFu8s_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_BFu7i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_BFu7i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_BFu7i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu7i");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "Sf_BFu8s_BFu7i");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "Sf_BFu8s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_BFu7i, Sf_BFu8s_BFu7i)
//============================================================================



static void Test_Sf_BFu8s_BFu7ll()
{
  {
    init_simple_test("Sf_BFu8s_BFu7ll");
    static STRUCT_IF_C Sf_BFu8s_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_BFu7ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_BFu7ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_BFu7ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu7ll");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "Sf_BFu8s_BFu7ll");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "Sf_BFu8s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_BFu7ll, Sf_BFu8s_BFu7ll)
//============================================================================



static void Test_Sf_BFu8s_BFu7s()
{
  {
    init_simple_test("Sf_BFu8s_BFu7s");
    static STRUCT_IF_C Sf_BFu8s_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_BFu7s)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_BFu7s.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_BFu7s");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu7s");
    set_bf_and_test(lv, v3, 1, 0, 7, 1, "Sf_BFu8s_BFu7s");
    set_bf_and_test(lv, v3, 1, 0, 7, hide_ull(1LL<<6), "Sf_BFu8s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_BFu7s, Sf_BFu8s_BFu7s)
//============================================================================



static void Test_Sf_BFu8s_BFu8c()
{
  {
    init_simple_test("Sf_BFu8s_BFu8c");
    static STRUCT_IF_C Sf_BFu8s_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_BFu8c)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_BFu8c.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_BFu8c");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu8c");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "Sf_BFu8s_BFu8c");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_BFu8c, Sf_BFu8s_BFu8c)
//============================================================================



static void Test_Sf_BFu8s_BFu8i()
{
  {
    init_simple_test("Sf_BFu8s_BFu8i");
    static STRUCT_IF_C Sf_BFu8s_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_BFu8i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_BFu8i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_BFu8i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu8i");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "Sf_BFu8s_BFu8i");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_BFu8i, Sf_BFu8s_BFu8i)
//============================================================================



static void Test_Sf_BFu8s_BFu8ll()
{
  {
    init_simple_test("Sf_BFu8s_BFu8ll");
    static STRUCT_IF_C Sf_BFu8s_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_BFu8ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_BFu8ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_BFu8ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu8ll");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "Sf_BFu8s_BFu8ll");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_BFu8ll, Sf_BFu8s_BFu8ll)
//============================================================================



static void Test_Sf_BFu8s_BFu8s()
{
  {
    init_simple_test("Sf_BFu8s_BFu8s");
    static STRUCT_IF_C Sf_BFu8s_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_BFu8s)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_BFu8s.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_BFu8s");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu8s");
    set_bf_and_test(lv, v3, 1, 0, 8, 1, "Sf_BFu8s_BFu8s");
    set_bf_and_test(lv, v3, 1, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_BFu8s, Sf_BFu8s_BFu8s)
//============================================================================



static void Test_Sf_BFu8s_BFu9i()
{
  {
    init_simple_test("Sf_BFu8s_BFu9i");
    static STRUCT_IF_C Sf_BFu8s_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_BFu9i)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_BFu9i.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_BFu9i");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu9i");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "Sf_BFu8s_BFu9i");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "Sf_BFu8s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_BFu9i, Sf_BFu8s_BFu9i)
//============================================================================



static void Test_Sf_BFu8s_BFu9ll()
{
  {
    init_simple_test("Sf_BFu8s_BFu9ll");
    static STRUCT_IF_C Sf_BFu8s_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_BFu9ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_BFu9ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_BFu9ll");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu9ll");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "Sf_BFu8s_BFu9ll");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "Sf_BFu8s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_BFu9ll, Sf_BFu8s_BFu9ll)
//============================================================================



static void Test_Sf_BFu8s_BFu9s()
{
  {
    init_simple_test("Sf_BFu8s_BFu9s");
    static STRUCT_IF_C Sf_BFu8s_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_BFu9s)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_BFu9s.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_BFu9s");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_BFu9s");
    set_bf_and_test(lv, v3, 1, 0, 9, 1, "Sf_BFu8s_BFu9s");
    set_bf_and_test(lv, v3, 1, 0, 9, hide_ull(1LL<<8), "Sf_BFu8s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_BFu9s, Sf_BFu8s_BFu9s)
//============================================================================



static void Test_Sf_BFu8s_C()
{
  {
    init_simple_test("Sf_BFu8s_C");
    static STRUCT_IF_C Sf_BFu8s_C lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8s_C)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_C)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_C.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_C");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_C");
    check_field_offset(lv, v3, 1, "Sf_BFu8s_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_C, Sf_BFu8s_C)
//============================================================================



static void Test_Sf_BFu8s_D()
{
  {
    init_simple_test("Sf_BFu8s_D");
    static STRUCT_IF_C Sf_BFu8s_D lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu8s_D)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_D)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_D.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_D");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_D");
    check_field_offset(lv, v3, 1, "Sf_BFu8s_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_D, Sf_BFu8s_D)
//============================================================================



static void Test_Sf_BFu8s_F()
{
  {
    init_simple_test("Sf_BFu8s_F");
    static STRUCT_IF_C Sf_BFu8s_F lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu8s_F)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_F)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_F.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_F");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_F");
    check_field_offset(lv, v3, 1, "Sf_BFu8s_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_F, Sf_BFu8s_F)
//============================================================================



static void Test_Sf_BFu8s_I()
{
  {
    init_simple_test("Sf_BFu8s_I");
    static STRUCT_IF_C Sf_BFu8s_I lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu8s_I)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_I)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_I.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_I");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_I");
    check_field_offset(lv, v3, 1, "Sf_BFu8s_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_I, Sf_BFu8s_I)
//============================================================================



static void Test_Sf_BFu8s_Ip()
{
  {
    init_simple_test("Sf_BFu8s_Ip");
    static STRUCT_IF_C Sf_BFu8s_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Sf_BFu8s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_Ip)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_Ip.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_Ip");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_Ip");
    check_field_offset(lv, v3, 1, "Sf_BFu8s_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_Ip, Sf_BFu8s_Ip)
//============================================================================



static void Test_Sf_BFu8s_L()
{
  {
    init_simple_test("Sf_BFu8s_L");
    static STRUCT_IF_C Sf_BFu8s_L lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu8s_L)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_L)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_L.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_L");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_L");
    check_field_offset(lv, v3, 1, "Sf_BFu8s_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_L, Sf_BFu8s_L)
//============================================================================



static void Test_Sf_BFu8s_S()
{
  {
    init_simple_test("Sf_BFu8s_S");
    static STRUCT_IF_C Sf_BFu8s_S lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8s_S)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_S)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_S.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_S");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_S");
    check_field_offset(lv, v3, 1, "Sf_BFu8s_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_S, Sf_BFu8s_S)
//============================================================================



static void Test_Sf_BFu8s_Sf()
{
  {
    init_simple_test("Sf_BFu8s_Sf");
    static STRUCT_IF_C Sf_BFu8s_Sf lv;
    check2(sizeof(lv), 1, "sizeof(Sf_BFu8s_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_Sf)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_Sf.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_Sf");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_Sf");
    check_field_offset(lv, v3, 1, "Sf_BFu8s_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_Sf, Sf_BFu8s_Sf)
//============================================================================



static void Test_Sf_BFu8s_Uc()
{
  {
    init_simple_test("Sf_BFu8s_Uc");
    static STRUCT_IF_C Sf_BFu8s_Uc lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu8s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_Uc)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_Uc.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_Uc");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_Uc");
    check_field_offset(lv, v3, 1, "Sf_BFu8s_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_Uc, Sf_BFu8s_Uc)
//============================================================================



static void Test_Sf_BFu8s_Ui()
{
  {
    init_simple_test("Sf_BFu8s_Ui");
    static STRUCT_IF_C Sf_BFu8s_Ui lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu8s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_Ui)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_Ui.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_Ui");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_Ui");
    check_field_offset(lv, v3, 1, "Sf_BFu8s_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_Ui, Sf_BFu8s_Ui)
//============================================================================



static void Test_Sf_BFu8s_Ul()
{
  {
    init_simple_test("Sf_BFu8s_Ul");
    static STRUCT_IF_C Sf_BFu8s_Ul lv;
    check2(sizeof(lv), 9, "sizeof(Sf_BFu8s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_Ul)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_Ul.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_Ul");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_Ul");
    check_field_offset(lv, v3, 1, "Sf_BFu8s_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_Ul, Sf_BFu8s_Ul)
//============================================================================



static void Test_Sf_BFu8s_Us()
{
  {
    init_simple_test("Sf_BFu8s_Us");
    static STRUCT_IF_C Sf_BFu8s_Us lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu8s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_Us)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_Us.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_Us");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_Us");
    check_field_offset(lv, v3, 1, "Sf_BFu8s_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_Us, Sf_BFu8s_Us)
//============================================================================



static void Test_Sf_BFu8s_Vp()
{
  {
    init_simple_test("Sf_BFu8s_Vp");
    static STRUCT_IF_C Sf_BFu8s_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(Sf_BFu8s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu8s_Vp)");
    check_field_offset(lv, v1, 0, "Sf_BFu8s_Vp.v1");
    set_bf_and_test(lv, v2, 0, 0, 8, 1, "Sf_BFu8s_Vp");
    set_bf_and_test(lv, v2, 0, 0, 8, hide_ull(1LL<<7), "Sf_BFu8s_Vp");
    check_field_offset(lv, v3, 1, "Sf_BFu8s_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu8s_Vp, Sf_BFu8s_Vp)
//============================================================================



static void Test_Sf_BFu9i()
{
  {
    init_simple_test("Sf_BFu9i");
    static STRUCT_IF_C Sf_BFu9i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i, Sf_BFu9i)
//============================================================================



static void Test_Sf_BFu9i_BFu15i()
{
  {
    init_simple_test("Sf_BFu9i_BFu15i");
    static STRUCT_IF_C Sf_BFu9i_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu9i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_BFu15i)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_BFu15i.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_BFu15i");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_BFu15i");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "Sf_BFu9i_BFu15i");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "Sf_BFu9i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_BFu15i, Sf_BFu9i_BFu15i)
//============================================================================



static void Test_Sf_BFu9i_BFu15ll()
{
  {
    init_simple_test("Sf_BFu9i_BFu15ll");
    static STRUCT_IF_C Sf_BFu9i_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu9i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_BFu15ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_BFu15ll");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_BFu15ll");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "Sf_BFu9i_BFu15ll");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "Sf_BFu9i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_BFu15ll, Sf_BFu9i_BFu15ll)
//============================================================================



static void Test_Sf_BFu9i_BFu15s()
{
  {
    init_simple_test("Sf_BFu9i_BFu15s");
    static STRUCT_IF_C Sf_BFu9i_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu9i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_BFu15s)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_BFu15s.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_BFu15s");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_BFu15s");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "Sf_BFu9i_BFu15s");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "Sf_BFu9i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_BFu15s, Sf_BFu9i_BFu15s)
//============================================================================



static void Test_Sf_BFu9i_BFu16i()
{
  {
    init_simple_test("Sf_BFu9i_BFu16i");
    static STRUCT_IF_C Sf_BFu9i_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu9i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_BFu16i)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_BFu16i.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_BFu16i");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_BFu16i");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "Sf_BFu9i_BFu16i");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "Sf_BFu9i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_BFu16i, Sf_BFu9i_BFu16i)
//============================================================================



static void Test_Sf_BFu9i_BFu16ll()
{
  {
    init_simple_test("Sf_BFu9i_BFu16ll");
    static STRUCT_IF_C Sf_BFu9i_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu9i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_BFu16ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_BFu16ll");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_BFu16ll");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "Sf_BFu9i_BFu16ll");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "Sf_BFu9i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_BFu16ll, Sf_BFu9i_BFu16ll)
//============================================================================



static void Test_Sf_BFu9i_BFu16s()
{
  {
    init_simple_test("Sf_BFu9i_BFu16s");
    static STRUCT_IF_C Sf_BFu9i_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu9i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_BFu16s)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_BFu16s.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_BFu16s");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_BFu16s");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "Sf_BFu9i_BFu16s");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "Sf_BFu9i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_BFu16s, Sf_BFu9i_BFu16s)
//============================================================================



static void Test_Sf_BFu9i_BFu17i()
{
  {
    init_simple_test("Sf_BFu9i_BFu17i");
    static STRUCT_IF_C Sf_BFu9i_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu9i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_BFu17i)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_BFu17i.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_BFu17i");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_BFu17i");
    set_bf_and_test(lv, v3, 1, 1, 17, 1, "Sf_BFu9i_BFu17i");
    set_bf_and_test(lv, v3, 1, 1, 17, hide_ull(1LL<<16), "Sf_BFu9i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_BFu17i, Sf_BFu9i_BFu17i)
//============================================================================



static void Test_Sf_BFu9i_BFu17ll()
{
  {
    init_simple_test("Sf_BFu9i_BFu17ll");
    static STRUCT_IF_C Sf_BFu9i_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu9i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_BFu17ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_BFu17ll");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_BFu17ll");
    set_bf_and_test(lv, v3, 1, 1, 17, 1, "Sf_BFu9i_BFu17ll");
    set_bf_and_test(lv, v3, 1, 1, 17, hide_ull(1LL<<16), "Sf_BFu9i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_BFu17ll, Sf_BFu9i_BFu17ll)
//============================================================================



static void Test_Sf_BFu9i_BFu1c()
{
  {
    init_simple_test("Sf_BFu9i_BFu1c");
    static STRUCT_IF_C Sf_BFu9i_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu9i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_BFu1c)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_BFu1c.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_BFu1c");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_BFu1c");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "Sf_BFu9i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_BFu1c, Sf_BFu9i_BFu1c)
//============================================================================



static void Test_Sf_BFu9i_BFu1i()
{
  {
    init_simple_test("Sf_BFu9i_BFu1i");
    static STRUCT_IF_C Sf_BFu9i_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu9i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_BFu1i)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_BFu1i.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_BFu1i");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_BFu1i");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "Sf_BFu9i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_BFu1i, Sf_BFu9i_BFu1i)
//============================================================================



static void Test_Sf_BFu9i_BFu1ll()
{
  {
    init_simple_test("Sf_BFu9i_BFu1ll");
    static STRUCT_IF_C Sf_BFu9i_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu9i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_BFu1ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_BFu1ll");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_BFu1ll");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "Sf_BFu9i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_BFu1ll, Sf_BFu9i_BFu1ll)
//============================================================================



static void Test_Sf_BFu9i_BFu1s()
{
  {
    init_simple_test("Sf_BFu9i_BFu1s");
    static STRUCT_IF_C Sf_BFu9i_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu9i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_BFu1s)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_BFu1s.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_BFu1s");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_BFu1s");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "Sf_BFu9i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_BFu1s, Sf_BFu9i_BFu1s)
//============================================================================



static void Test_Sf_BFu9i_BFu31i()
{
  {
    init_simple_test("Sf_BFu9i_BFu31i");
    static STRUCT_IF_C Sf_BFu9i_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu9i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_BFu31i)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_BFu31i.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_BFu31i");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_BFu31i");
    set_bf_and_test(lv, v3, 1, 1, 31, 1, "Sf_BFu9i_BFu31i");
    set_bf_and_test(lv, v3, 1, 1, 31, hide_ull(1LL<<30), "Sf_BFu9i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_BFu31i, Sf_BFu9i_BFu31i)
//============================================================================



static void Test_Sf_BFu9i_BFu31ll()
{
  {
    init_simple_test("Sf_BFu9i_BFu31ll");
    static STRUCT_IF_C Sf_BFu9i_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu9i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_BFu31ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_BFu31ll");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_BFu31ll");
    set_bf_and_test(lv, v3, 1, 1, 31, 1, "Sf_BFu9i_BFu31ll");
    set_bf_and_test(lv, v3, 1, 1, 31, hide_ull(1LL<<30), "Sf_BFu9i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_BFu31ll, Sf_BFu9i_BFu31ll)
//============================================================================



static void Test_Sf_BFu9i_BFu32i()
{
  {
    init_simple_test("Sf_BFu9i_BFu32i");
    static STRUCT_IF_C Sf_BFu9i_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu9i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_BFu32i)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_BFu32i.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_BFu32i");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_BFu32i");
    set_bf_and_test(lv, v3, 1, 1, 32, 1, "Sf_BFu9i_BFu32i");
    set_bf_and_test(lv, v3, 1, 1, 32, hide_ull(1LL<<31), "Sf_BFu9i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_BFu32i, Sf_BFu9i_BFu32i)
//============================================================================



static void Test_Sf_BFu9i_BFu32ll()
{
  {
    init_simple_test("Sf_BFu9i_BFu32ll");
    static STRUCT_IF_C Sf_BFu9i_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu9i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_BFu32ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_BFu32ll");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_BFu32ll");
    set_bf_and_test(lv, v3, 1, 1, 32, 1, "Sf_BFu9i_BFu32ll");
    set_bf_and_test(lv, v3, 1, 1, 32, hide_ull(1LL<<31), "Sf_BFu9i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_BFu32ll, Sf_BFu9i_BFu32ll)
//============================================================================



static void Test_Sf_BFu9i_BFu33()
{
  {
    init_simple_test("Sf_BFu9i_BFu33");
    static STRUCT_IF_C Sf_BFu9i_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu9i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_BFu33)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_BFu33.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_BFu33");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_BFu33");
    set_bf_and_test(lv, v3, 1, 1, 33, 1, "Sf_BFu9i_BFu33");
    set_bf_and_test(lv, v3, 1, 1, 33, hide_ull(1LL<<32), "Sf_BFu9i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_BFu33, Sf_BFu9i_BFu33)
//============================================================================



static void Test_Sf_BFu9i_BFu7c()
{
  {
    init_simple_test("Sf_BFu9i_BFu7c");
    static STRUCT_IF_C Sf_BFu9i_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu9i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_BFu7c)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_BFu7c.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_BFu7c");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_BFu7c");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "Sf_BFu9i_BFu7c");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "Sf_BFu9i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_BFu7c, Sf_BFu9i_BFu7c)
//============================================================================



static void Test_Sf_BFu9i_BFu7i()
{
  {
    init_simple_test("Sf_BFu9i_BFu7i");
    static STRUCT_IF_C Sf_BFu9i_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu9i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_BFu7i)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_BFu7i.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_BFu7i");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_BFu7i");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "Sf_BFu9i_BFu7i");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "Sf_BFu9i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_BFu7i, Sf_BFu9i_BFu7i)
//============================================================================



static void Test_Sf_BFu9i_BFu7ll()
{
  {
    init_simple_test("Sf_BFu9i_BFu7ll");
    static STRUCT_IF_C Sf_BFu9i_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu9i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_BFu7ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_BFu7ll");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_BFu7ll");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "Sf_BFu9i_BFu7ll");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "Sf_BFu9i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_BFu7ll, Sf_BFu9i_BFu7ll)
//============================================================================



static void Test_Sf_BFu9i_BFu7s()
{
  {
    init_simple_test("Sf_BFu9i_BFu7s");
    static STRUCT_IF_C Sf_BFu9i_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu9i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_BFu7s)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_BFu7s.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_BFu7s");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_BFu7s");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "Sf_BFu9i_BFu7s");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "Sf_BFu9i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_BFu7s, Sf_BFu9i_BFu7s)
//============================================================================



static void Test_Sf_BFu9i_BFu8c()
{
  {
    init_simple_test("Sf_BFu9i_BFu8c");
    static STRUCT_IF_C Sf_BFu9i_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu9i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_BFu8c)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_BFu8c.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_BFu8c");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_BFu8c");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "Sf_BFu9i_BFu8c");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "Sf_BFu9i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_BFu8c, Sf_BFu9i_BFu8c)
//============================================================================



static void Test_Sf_BFu9i_BFu8i()
{
  {
    init_simple_test("Sf_BFu9i_BFu8i");
    static STRUCT_IF_C Sf_BFu9i_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu9i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_BFu8i)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_BFu8i.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_BFu8i");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_BFu8i");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "Sf_BFu9i_BFu8i");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "Sf_BFu9i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_BFu8i, Sf_BFu9i_BFu8i)
//============================================================================



static void Test_Sf_BFu9i_BFu8ll()
{
  {
    init_simple_test("Sf_BFu9i_BFu8ll");
    static STRUCT_IF_C Sf_BFu9i_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu9i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_BFu8ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_BFu8ll");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_BFu8ll");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "Sf_BFu9i_BFu8ll");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "Sf_BFu9i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_BFu8ll, Sf_BFu9i_BFu8ll)
//============================================================================



static void Test_Sf_BFu9i_BFu8s()
{
  {
    init_simple_test("Sf_BFu9i_BFu8s");
    static STRUCT_IF_C Sf_BFu9i_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu9i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_BFu8s)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_BFu8s.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_BFu8s");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_BFu8s");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "Sf_BFu9i_BFu8s");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "Sf_BFu9i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_BFu8s, Sf_BFu9i_BFu8s)
//============================================================================



static void Test_Sf_BFu9i_BFu9i()
{
  {
    init_simple_test("Sf_BFu9i_BFu9i");
    static STRUCT_IF_C Sf_BFu9i_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu9i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_BFu9i)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_BFu9i.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_BFu9i");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_BFu9i");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "Sf_BFu9i_BFu9i");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "Sf_BFu9i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_BFu9i, Sf_BFu9i_BFu9i)
//============================================================================



static void Test_Sf_BFu9i_BFu9ll()
{
  {
    init_simple_test("Sf_BFu9i_BFu9ll");
    static STRUCT_IF_C Sf_BFu9i_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu9i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_BFu9ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_BFu9ll");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_BFu9ll");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "Sf_BFu9i_BFu9ll");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "Sf_BFu9i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_BFu9ll, Sf_BFu9i_BFu9ll)
//============================================================================



static void Test_Sf_BFu9i_BFu9s()
{
  {
    init_simple_test("Sf_BFu9i_BFu9s");
    static STRUCT_IF_C Sf_BFu9i_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu9i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_BFu9s)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_BFu9s.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_BFu9s");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_BFu9s");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "Sf_BFu9i_BFu9s");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "Sf_BFu9i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_BFu9s, Sf_BFu9i_BFu9s)
//============================================================================



static void Test_Sf_BFu9i_C()
{
  {
    init_simple_test("Sf_BFu9i_C");
    static STRUCT_IF_C Sf_BFu9i_C lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu9i_C)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_C)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_C.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_C");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_C");
    check_field_offset(lv, v3, 2, "Sf_BFu9i_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_C, Sf_BFu9i_C)
//============================================================================



static void Test_Sf_BFu9i_D()
{
  {
    init_simple_test("Sf_BFu9i_D");
    static STRUCT_IF_C Sf_BFu9i_D lv;
    check2(sizeof(lv), 10, "sizeof(Sf_BFu9i_D)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_D)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_D.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_D");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_D");
    check_field_offset(lv, v3, 2, "Sf_BFu9i_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_D, Sf_BFu9i_D)
//============================================================================



static void Test_Sf_BFu9i_F()
{
  {
    init_simple_test("Sf_BFu9i_F");
    static STRUCT_IF_C Sf_BFu9i_F lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu9i_F)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_F)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_F.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_F");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_F");
    check_field_offset(lv, v3, 2, "Sf_BFu9i_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_F, Sf_BFu9i_F)
//============================================================================



static void Test_Sf_BFu9i_I()
{
  {
    init_simple_test("Sf_BFu9i_I");
    static STRUCT_IF_C Sf_BFu9i_I lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu9i_I)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_I)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_I.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_I");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_I");
    check_field_offset(lv, v3, 2, "Sf_BFu9i_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_I, Sf_BFu9i_I)
//============================================================================



static void Test_Sf_BFu9i_Ip()
{
  {
    init_simple_test("Sf_BFu9i_Ip");
    static STRUCT_IF_C Sf_BFu9i_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Sf_BFu9i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_Ip)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_Ip.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_Ip");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_Ip");
    check_field_offset(lv, v3, 2, "Sf_BFu9i_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_Ip, Sf_BFu9i_Ip)
//============================================================================



static void Test_Sf_BFu9i_L()
{
  {
    init_simple_test("Sf_BFu9i_L");
    static STRUCT_IF_C Sf_BFu9i_L lv;
    check2(sizeof(lv), 10, "sizeof(Sf_BFu9i_L)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_L)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_L.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_L");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_L");
    check_field_offset(lv, v3, 2, "Sf_BFu9i_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_L, Sf_BFu9i_L)
//============================================================================



static void Test_Sf_BFu9i_S()
{
  {
    init_simple_test("Sf_BFu9i_S");
    static STRUCT_IF_C Sf_BFu9i_S lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu9i_S)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_S)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_S.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_S");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_S");
    check_field_offset(lv, v3, 2, "Sf_BFu9i_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_S, Sf_BFu9i_S)
//============================================================================



static void Test_Sf_BFu9i_Sf()
{
  {
    init_simple_test("Sf_BFu9i_Sf");
    static STRUCT_IF_C Sf_BFu9i_Sf lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu9i_Sf)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_Sf)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_Sf.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_Sf");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_Sf");
    check_field_offset(lv, v3, 2, "Sf_BFu9i_Sf.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_Sf, Sf_BFu9i_Sf)
//============================================================================



static void Test_Sf_BFu9i_Uc()
{
  {
    init_simple_test("Sf_BFu9i_Uc");
    static STRUCT_IF_C Sf_BFu9i_Uc lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu9i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_Uc)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_Uc.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_Uc");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_Uc");
    check_field_offset(lv, v3, 2, "Sf_BFu9i_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_Uc, Sf_BFu9i_Uc)
//============================================================================



static void Test_Sf_BFu9i_Ui()
{
  {
    init_simple_test("Sf_BFu9i_Ui");
    static STRUCT_IF_C Sf_BFu9i_Ui lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu9i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_Ui)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_Ui.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_Ui");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_Ui");
    check_field_offset(lv, v3, 2, "Sf_BFu9i_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_Ui, Sf_BFu9i_Ui)
//============================================================================



static void Test_Sf_BFu9i_Ul()
{
  {
    init_simple_test("Sf_BFu9i_Ul");
    static STRUCT_IF_C Sf_BFu9i_Ul lv;
    check2(sizeof(lv), 10, "sizeof(Sf_BFu9i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_Ul)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_Ul.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_Ul");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_Ul");
    check_field_offset(lv, v3, 2, "Sf_BFu9i_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_Ul, Sf_BFu9i_Ul)
//============================================================================



static void Test_Sf_BFu9i_Us()
{
  {
    init_simple_test("Sf_BFu9i_Us");
    static STRUCT_IF_C Sf_BFu9i_Us lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu9i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_Us)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_Us.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_Us");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_Us");
    check_field_offset(lv, v3, 2, "Sf_BFu9i_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_Us, Sf_BFu9i_Us)
//============================================================================



static void Test_Sf_BFu9i_Vp()
{
  {
    init_simple_test("Sf_BFu9i_Vp");
    static STRUCT_IF_C Sf_BFu9i_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Sf_BFu9i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9i_Vp)");
    check_field_offset(lv, v1, 0, "Sf_BFu9i_Vp.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9i_Vp");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9i_Vp");
    check_field_offset(lv, v3, 2, "Sf_BFu9i_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9i_Vp, Sf_BFu9i_Vp)
//============================================================================



static void Test_Sf_BFu9ll()
{
  {
    init_simple_test("Sf_BFu9ll");
    static STRUCT_IF_C Sf_BFu9ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll, Sf_BFu9ll)
//============================================================================



static void Test_Sf_BFu9ll_BFu15i()
{
  {
    init_simple_test("Sf_BFu9ll_BFu15i");
    static STRUCT_IF_C Sf_BFu9ll_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu9ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_BFu15i)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_BFu15i");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_BFu15i");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "Sf_BFu9ll_BFu15i");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "Sf_BFu9ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_BFu15i, Sf_BFu9ll_BFu15i)
//============================================================================



static void Test_Sf_BFu9ll_BFu15ll()
{
  {
    init_simple_test("Sf_BFu9ll_BFu15ll");
    static STRUCT_IF_C Sf_BFu9ll_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu9ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_BFu15ll");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_BFu15ll");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "Sf_BFu9ll_BFu15ll");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "Sf_BFu9ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_BFu15ll, Sf_BFu9ll_BFu15ll)
//============================================================================



static void Test_Sf_BFu9ll_BFu15s()
{
  {
    init_simple_test("Sf_BFu9ll_BFu15s");
    static STRUCT_IF_C Sf_BFu9ll_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu9ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_BFu15s)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_BFu15s");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_BFu15s");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "Sf_BFu9ll_BFu15s");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "Sf_BFu9ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_BFu15s, Sf_BFu9ll_BFu15s)
//============================================================================



static void Test_Sf_BFu9ll_BFu16i()
{
  {
    init_simple_test("Sf_BFu9ll_BFu16i");
    static STRUCT_IF_C Sf_BFu9ll_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu9ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_BFu16i)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_BFu16i");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_BFu16i");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "Sf_BFu9ll_BFu16i");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "Sf_BFu9ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_BFu16i, Sf_BFu9ll_BFu16i)
//============================================================================



static void Test_Sf_BFu9ll_BFu16ll()
{
  {
    init_simple_test("Sf_BFu9ll_BFu16ll");
    static STRUCT_IF_C Sf_BFu9ll_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu9ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_BFu16ll");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_BFu16ll");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "Sf_BFu9ll_BFu16ll");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "Sf_BFu9ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_BFu16ll, Sf_BFu9ll_BFu16ll)
//============================================================================



static void Test_Sf_BFu9ll_BFu16s()
{
  {
    init_simple_test("Sf_BFu9ll_BFu16s");
    static STRUCT_IF_C Sf_BFu9ll_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu9ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_BFu16s)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_BFu16s");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_BFu16s");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "Sf_BFu9ll_BFu16s");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "Sf_BFu9ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_BFu16s, Sf_BFu9ll_BFu16s)
//============================================================================



static void Test_Sf_BFu9ll_BFu17i()
{
  {
    init_simple_test("Sf_BFu9ll_BFu17i");
    static STRUCT_IF_C Sf_BFu9ll_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu9ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_BFu17i)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_BFu17i");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_BFu17i");
    set_bf_and_test(lv, v3, 1, 1, 17, 1, "Sf_BFu9ll_BFu17i");
    set_bf_and_test(lv, v3, 1, 1, 17, hide_ull(1LL<<16), "Sf_BFu9ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_BFu17i, Sf_BFu9ll_BFu17i)
//============================================================================



static void Test_Sf_BFu9ll_BFu17ll()
{
  {
    init_simple_test("Sf_BFu9ll_BFu17ll");
    static STRUCT_IF_C Sf_BFu9ll_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(Sf_BFu9ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_BFu17ll");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_BFu17ll");
    set_bf_and_test(lv, v3, 1, 1, 17, 1, "Sf_BFu9ll_BFu17ll");
    set_bf_and_test(lv, v3, 1, 1, 17, hide_ull(1LL<<16), "Sf_BFu9ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_BFu17ll, Sf_BFu9ll_BFu17ll)
//============================================================================



static void Test_Sf_BFu9ll_BFu1c()
{
  {
    init_simple_test("Sf_BFu9ll_BFu1c");
    static STRUCT_IF_C Sf_BFu9ll_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu9ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_BFu1c)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_BFu1c");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_BFu1c");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "Sf_BFu9ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_BFu1c, Sf_BFu9ll_BFu1c)
//============================================================================



static void Test_Sf_BFu9ll_BFu1i()
{
  {
    init_simple_test("Sf_BFu9ll_BFu1i");
    static STRUCT_IF_C Sf_BFu9ll_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu9ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_BFu1i)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_BFu1i");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_BFu1i");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "Sf_BFu9ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_BFu1i, Sf_BFu9ll_BFu1i)
//============================================================================



static void Test_Sf_BFu9ll_BFu1ll()
{
  {
    init_simple_test("Sf_BFu9ll_BFu1ll");
    static STRUCT_IF_C Sf_BFu9ll_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu9ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_BFu1ll");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_BFu1ll");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "Sf_BFu9ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_BFu1ll, Sf_BFu9ll_BFu1ll)
//============================================================================



static void Test_Sf_BFu9ll_BFu1s()
{
  {
    init_simple_test("Sf_BFu9ll_BFu1s");
    static STRUCT_IF_C Sf_BFu9ll_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu9ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_BFu1s)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_BFu1s");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_BFu1s");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "Sf_BFu9ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_BFu1s, Sf_BFu9ll_BFu1s)
//============================================================================



static void Test_Sf_BFu9ll_BFu31i()
{
  {
    init_simple_test("Sf_BFu9ll_BFu31i");
    static STRUCT_IF_C Sf_BFu9ll_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu9ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_BFu31i)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_BFu31i");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_BFu31i");
    set_bf_and_test(lv, v3, 1, 1, 31, 1, "Sf_BFu9ll_BFu31i");
    set_bf_and_test(lv, v3, 1, 1, 31, hide_ull(1LL<<30), "Sf_BFu9ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_BFu31i, Sf_BFu9ll_BFu31i)
//============================================================================



static void Test_Sf_BFu9ll_BFu31ll()
{
  {
    init_simple_test("Sf_BFu9ll_BFu31ll");
    static STRUCT_IF_C Sf_BFu9ll_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(Sf_BFu9ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_BFu31ll");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_BFu31ll");
    set_bf_and_test(lv, v3, 1, 1, 31, 1, "Sf_BFu9ll_BFu31ll");
    set_bf_and_test(lv, v3, 1, 1, 31, hide_ull(1LL<<30), "Sf_BFu9ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_BFu31ll, Sf_BFu9ll_BFu31ll)
//============================================================================



static void Test_Sf_BFu9ll_BFu32i()
{
  {
    init_simple_test("Sf_BFu9ll_BFu32i");
    static STRUCT_IF_C Sf_BFu9ll_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu9ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_BFu32i)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_BFu32i");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_BFu32i");
    set_bf_and_test(lv, v3, 1, 1, 32, 1, "Sf_BFu9ll_BFu32i");
    set_bf_and_test(lv, v3, 1, 1, 32, hide_ull(1LL<<31), "Sf_BFu9ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_BFu32i, Sf_BFu9ll_BFu32i)
//============================================================================



static void Test_Sf_BFu9ll_BFu32ll()
{
  {
    init_simple_test("Sf_BFu9ll_BFu32ll");
    static STRUCT_IF_C Sf_BFu9ll_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu9ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_BFu32ll");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_BFu32ll");
    set_bf_and_test(lv, v3, 1, 1, 32, 1, "Sf_BFu9ll_BFu32ll");
    set_bf_and_test(lv, v3, 1, 1, 32, hide_ull(1LL<<31), "Sf_BFu9ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_BFu32ll, Sf_BFu9ll_BFu32ll)
//============================================================================



static void Test_Sf_BFu9ll_BFu33()
{
  {
    init_simple_test("Sf_BFu9ll_BFu33");
    static STRUCT_IF_C Sf_BFu9ll_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu9ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_BFu33)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_BFu33.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_BFu33");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_BFu33");
    set_bf_and_test(lv, v3, 1, 1, 33, 1, "Sf_BFu9ll_BFu33");
    set_bf_and_test(lv, v3, 1, 1, 33, hide_ull(1LL<<32), "Sf_BFu9ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_BFu33, Sf_BFu9ll_BFu33)
//============================================================================



static void Test_Sf_BFu9ll_BFu7c()
{
  {
    init_simple_test("Sf_BFu9ll_BFu7c");
    static STRUCT_IF_C Sf_BFu9ll_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu9ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_BFu7c)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_BFu7c");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_BFu7c");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "Sf_BFu9ll_BFu7c");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "Sf_BFu9ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_BFu7c, Sf_BFu9ll_BFu7c)
//============================================================================



static void Test_Sf_BFu9ll_BFu7i()
{
  {
    init_simple_test("Sf_BFu9ll_BFu7i");
    static STRUCT_IF_C Sf_BFu9ll_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu9ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_BFu7i)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_BFu7i");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_BFu7i");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "Sf_BFu9ll_BFu7i");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "Sf_BFu9ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_BFu7i, Sf_BFu9ll_BFu7i)
//============================================================================



static void Test_Sf_BFu9ll_BFu7ll()
{
  {
    init_simple_test("Sf_BFu9ll_BFu7ll");
    static STRUCT_IF_C Sf_BFu9ll_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu9ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_BFu7ll");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_BFu7ll");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "Sf_BFu9ll_BFu7ll");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "Sf_BFu9ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_BFu7ll, Sf_BFu9ll_BFu7ll)
//============================================================================



static void Test_Sf_BFu9ll_BFu7s()
{
  {
    init_simple_test("Sf_BFu9ll_BFu7s");
    static STRUCT_IF_C Sf_BFu9ll_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(Sf_BFu9ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_BFu7s)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_BFu7s");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_BFu7s");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "Sf_BFu9ll_BFu7s");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "Sf_BFu9ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_BFu7s, Sf_BFu9ll_BFu7s)
//============================================================================



static void Test_Sf_BFu9ll_BFu8c()
{
  {
    init_simple_test("Sf_BFu9ll_BFu8c");
    static STRUCT_IF_C Sf_BFu9ll_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu9ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_BFu8c)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_BFu8c");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_BFu8c");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "Sf_BFu9ll_BFu8c");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "Sf_BFu9ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_BFu8c, Sf_BFu9ll_BFu8c)
//============================================================================



static void Test_Sf_BFu9ll_BFu8i()
{
  {
    init_simple_test("Sf_BFu9ll_BFu8i");
    static STRUCT_IF_C Sf_BFu9ll_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu9ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_BFu8i)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_BFu8i");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_BFu8i");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "Sf_BFu9ll_BFu8i");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "Sf_BFu9ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_BFu8i, Sf_BFu9ll_BFu8i)
//============================================================================



static void Test_Sf_BFu9ll_BFu8ll()
{
  {
    init_simple_test("Sf_BFu9ll_BFu8ll");
    static STRUCT_IF_C Sf_BFu9ll_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu9ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_BFu8ll");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_BFu8ll");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "Sf_BFu9ll_BFu8ll");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "Sf_BFu9ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_BFu8ll, Sf_BFu9ll_BFu8ll)
//============================================================================



static void Test_Sf_BFu9ll_BFu8s()
{
  {
    init_simple_test("Sf_BFu9ll_BFu8s");
    static STRUCT_IF_C Sf_BFu9ll_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu9ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_BFu8s)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_BFu8s");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_BFu8s");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "Sf_BFu9ll_BFu8s");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "Sf_BFu9ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_BFu8s, Sf_BFu9ll_BFu8s)
//============================================================================



static void Test_Sf_BFu9ll_BFu9i()
{
  {
    init_simple_test("Sf_BFu9ll_BFu9i");
    static STRUCT_IF_C Sf_BFu9ll_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu9ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_BFu9i)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_BFu9i");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_BFu9i");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "Sf_BFu9ll_BFu9i");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "Sf_BFu9ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_BFu9i, Sf_BFu9ll_BFu9i)
//============================================================================



static void Test_Sf_BFu9ll_BFu9ll()
{
  {
    init_simple_test("Sf_BFu9ll_BFu9ll");
    static STRUCT_IF_C Sf_BFu9ll_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu9ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_BFu9ll");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_BFu9ll");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "Sf_BFu9ll_BFu9ll");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "Sf_BFu9ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_BFu9ll, Sf_BFu9ll_BFu9ll)
//============================================================================



static void Test_Sf_BFu9ll_BFu9s()
{
  {
    init_simple_test("Sf_BFu9ll_BFu9s");
    static STRUCT_IF_C Sf_BFu9ll_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu9ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_BFu9s)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_BFu9s");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_BFu9s");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "Sf_BFu9ll_BFu9s");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "Sf_BFu9ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_BFu9s, Sf_BFu9ll_BFu9s)
//============================================================================



static void Test_Sf_BFu9ll_C()
{
  {
    init_simple_test("Sf_BFu9ll_C");
    static STRUCT_IF_C Sf_BFu9ll_C lv;
    check2(sizeof(lv), 3, "sizeof(Sf_BFu9ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_C)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_C.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_C");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_C");
    check_field_offset(lv, v3, 2, "Sf_BFu9ll_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_C, Sf_BFu9ll_C)
//============================================================================



static void Test_Sf_BFu9ll_D()
{
  {
    init_simple_test("Sf_BFu9ll_D");
    static STRUCT_IF_C Sf_BFu9ll_D lv;
    check2(sizeof(lv), 10, "sizeof(Sf_BFu9ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_D)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_D.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_D");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_D");
    check_field_offset(lv, v3, 2, "Sf_BFu9ll_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_D, Sf_BFu9ll_D)
//============================================================================



static void Test_Sf_BFu9ll_F()
{
  {
    init_simple_test("Sf_BFu9ll_F");
    static STRUCT_IF_C Sf_BFu9ll_F lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu9ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_F)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_F.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_F");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_F");
    check_field_offset(lv, v3, 2, "Sf_BFu9ll_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_F, Sf_BFu9ll_F)
//============================================================================



static void Test_Sf_BFu9ll_I()
{
  {
    init_simple_test("Sf_BFu9ll_I");
    static STRUCT_IF_C Sf_BFu9ll_I lv;
    check2(sizeof(lv), 6, "sizeof(Sf_BFu9ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_I)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_I.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_I");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_I");
    check_field_offset(lv, v3, 2, "Sf_BFu9ll_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_I, Sf_BFu9ll_I)
//============================================================================



static void Test_Sf_BFu9ll_Ip()
{
  {
    init_simple_test("Sf_BFu9ll_Ip");
    static STRUCT_IF_C Sf_BFu9ll_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(Sf_BFu9ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(Sf_BFu9ll_Ip)");
    check_field_offset(lv, v1, 0, "Sf_BFu9ll_Ip.v1");
    set_bf_and_test(lv, v2, 0, 0, 9, 1, "Sf_BFu9ll_Ip");
    set_bf_and_test(lv, v2, 0, 0, 9, hide_ull(1LL<<8), "Sf_BFu9ll_Ip");
    check_field_offset(lv, v3, 2, "Sf_BFu9ll_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_Sf_BFu9ll_Ip, Sf_BFu9ll_Ip)
//============================================================================

