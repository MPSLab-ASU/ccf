// This file is distributed under the University of Illinois Open Source License.
// See LICENSE.TXT for details.
// RUN: c_compiler -c -o %t1.o -I "common" "common/testsuite.c"
// RUN: cxx_compiler cxx_rtti -c %s -I "common" -o %t2.o
// RUN: linker -o %t2%exeext  %t1.o %t2.o
// RUN: runtool %t2%exeext | checker "TEST PASSED"
#include "testsuite.h"
#ifdef __cplusplus
#pragma pack(1)
struct BFu1i_Ip_BFu0c { unsigned int v1:1; int * v2; unsigned char :0; };
struct BFu1i_Ip_BFu0i { unsigned int v1:1; int * v2; unsigned int :0; };
struct BFu1i_Ip_BFu0ll { unsigned int v1:1; int * v2; unsigned long long :0; };
struct BFu1i_Ip_BFu0s { unsigned int v1:1; int * v2; unsigned short :0; };
struct BFu1i_L_BFu0c { unsigned int v1:1; long long v2; unsigned char :0; };
struct BFu1i_L_BFu0i { unsigned int v1:1; long long v2; unsigned int :0; };
struct BFu1i_L_BFu0ll { unsigned int v1:1; long long v2; unsigned long long :0; };
struct BFu1i_L_BFu0s { unsigned int v1:1; long long v2; unsigned short :0; };
struct BFu1i_S_BFu0c { unsigned int v1:1; short v2; unsigned char :0; };
struct BFu1i_S_BFu0i { unsigned int v1:1; short v2; unsigned int :0; };
struct BFu1i_S_BFu0ll { unsigned int v1:1; short v2; unsigned long long :0; };
struct BFu1i_S_BFu0s { unsigned int v1:1; short v2; unsigned short :0; };
struct BFu1i_Uc_BFu0c { unsigned int v1:1; unsigned char v2; unsigned char :0; };
struct BFu1i_Uc_BFu0i { unsigned int v1:1; unsigned char v2; unsigned int :0; };
struct BFu1i_Uc_BFu0ll { unsigned int v1:1; unsigned char v2; unsigned long long :0; };
struct BFu1i_Uc_BFu0s { unsigned int v1:1; unsigned char v2; unsigned short :0; };
struct BFu1i_Ui_BFu0c { unsigned int v1:1; unsigned int v2; unsigned char :0; };
struct BFu1i_Ui_BFu0i { unsigned int v1:1; unsigned int v2; unsigned int :0; };
struct BFu1i_Ui_BFu0ll { unsigned int v1:1; unsigned int v2; unsigned long long :0; };
struct BFu1i_Ui_BFu0s { unsigned int v1:1; unsigned int v2; unsigned short :0; };
struct BFu1i_Ul_BFu0c { unsigned int v1:1; unsigned long long v2; unsigned char :0; };
struct BFu1i_Ul_BFu0i { unsigned int v1:1; unsigned long long v2; unsigned int :0; };
struct BFu1i_Ul_BFu0ll { unsigned int v1:1; unsigned long long v2; unsigned long long :0; };
struct BFu1i_Ul_BFu0s { unsigned int v1:1; unsigned long long v2; unsigned short :0; };
struct BFu1i_Us_BFu0c { unsigned int v1:1; unsigned short v2; unsigned char :0; };
struct BFu1i_Us_BFu0i { unsigned int v1:1; unsigned short v2; unsigned int :0; };
struct BFu1i_Us_BFu0ll { unsigned int v1:1; unsigned short v2; unsigned long long :0; };
struct BFu1i_Us_BFu0s { unsigned int v1:1; unsigned short v2; unsigned short :0; };
struct BFu1i_Vp_BFu0c { unsigned int v1:1; void * v2; unsigned char :0; };
struct BFu1i_Vp_BFu0i { unsigned int v1:1; void * v2; unsigned int :0; };
struct BFu1i_Vp_BFu0ll { unsigned int v1:1; void * v2; unsigned long long :0; };
struct BFu1i_Vp_BFu0s { unsigned int v1:1; void * v2; unsigned short :0; };
struct BFu1ll_BFu0c { unsigned long long v1:1; unsigned char :0; };
struct BFu1ll_BFu0c_BFu0c { unsigned long long v1:1; unsigned char :0; unsigned char :0; };
struct BFu1ll_BFu0c_BFu0i { unsigned long long v1:1; unsigned char :0; unsigned int :0; };
struct BFu1ll_BFu0c_BFu0ll { unsigned long long v1:1; unsigned char :0; unsigned long long :0; };
struct BFu1ll_BFu0c_BFu0s { unsigned long long v1:1; unsigned char :0; unsigned short :0; };
struct BFu1ll_BFu0c_BFu15i { unsigned long long v1:1; unsigned char :0; unsigned int v2:15; };
struct BFu1ll_BFu0c_BFu15ll { unsigned long long v1:1; unsigned char :0; unsigned long long v2:15; };
struct BFu1ll_BFu0c_BFu15s { unsigned long long v1:1; unsigned char :0; unsigned short v2:15; };
struct BFu1ll_BFu0c_BFu16i { unsigned long long v1:1; unsigned char :0; unsigned int v2:16; };
struct BFu1ll_BFu0c_BFu16ll { unsigned long long v1:1; unsigned char :0; unsigned long long v2:16; };
struct BFu1ll_BFu0c_BFu16s { unsigned long long v1:1; unsigned char :0; unsigned short v2:16; };
struct BFu1ll_BFu0c_BFu17i { unsigned long long v1:1; unsigned char :0; unsigned int v2:17; };
struct BFu1ll_BFu0c_BFu17ll { unsigned long long v1:1; unsigned char :0; unsigned long long v2:17; };
struct BFu1ll_BFu0c_BFu1c { unsigned long long v1:1; unsigned char :0; unsigned char v2:1; };
struct BFu1ll_BFu0c_BFu1i { unsigned long long v1:1; unsigned char :0; unsigned int v2:1; };
struct BFu1ll_BFu0c_BFu1ll { unsigned long long v1:1; unsigned char :0; unsigned long long v2:1; };
struct BFu1ll_BFu0c_BFu1s { unsigned long long v1:1; unsigned char :0; unsigned short v2:1; };
struct BFu1ll_BFu0c_BFu31i { unsigned long long v1:1; unsigned char :0; unsigned int v2:31; };
struct BFu1ll_BFu0c_BFu31ll { unsigned long long v1:1; unsigned char :0; unsigned long long v2:31; };
struct BFu1ll_BFu0c_BFu32i { unsigned long long v1:1; unsigned char :0; unsigned int v2:32; };
struct BFu1ll_BFu0c_BFu32ll { unsigned long long v1:1; unsigned char :0; unsigned long long v2:32; };
struct BFu1ll_BFu0c_BFu33 { unsigned long long v1:1; unsigned char :0; unsigned long long v2:33; };
struct BFu1ll_BFu0c_BFu7c { unsigned long long v1:1; unsigned char :0; unsigned char v2:7; };
struct BFu1ll_BFu0c_BFu7i { unsigned long long v1:1; unsigned char :0; unsigned int v2:7; };
struct BFu1ll_BFu0c_BFu7ll { unsigned long long v1:1; unsigned char :0; unsigned long long v2:7; };
struct BFu1ll_BFu0c_BFu7s { unsigned long long v1:1; unsigned char :0; unsigned short v2:7; };
struct BFu1ll_BFu0c_BFu8c { unsigned long long v1:1; unsigned char :0; unsigned char v2:8; };
struct BFu1ll_BFu0c_BFu8i { unsigned long long v1:1; unsigned char :0; unsigned int v2:8; };
struct BFu1ll_BFu0c_BFu8ll { unsigned long long v1:1; unsigned char :0; unsigned long long v2:8; };
struct BFu1ll_BFu0c_BFu8s { unsigned long long v1:1; unsigned char :0; unsigned short v2:8; };
struct BFu1ll_BFu0c_BFu9i { unsigned long long v1:1; unsigned char :0; unsigned int v2:9; };
struct BFu1ll_BFu0c_BFu9ll { unsigned long long v1:1; unsigned char :0; unsigned long long v2:9; };
struct BFu1ll_BFu0c_BFu9s { unsigned long long v1:1; unsigned char :0; unsigned short v2:9; };
struct BFu1ll_BFu0c_C { unsigned long long v1:1; unsigned char :0; char v2; };
struct BFu1ll_BFu0c_D { unsigned long long v1:1; unsigned char :0; double v2; };
struct BFu1ll_BFu0c_F { unsigned long long v1:1; unsigned char :0; float v2; };
struct BFu1ll_BFu0c_I { unsigned long long v1:1; unsigned char :0; int v2; };
struct BFu1ll_BFu0c_Ip { unsigned long long v1:1; unsigned char :0; int * v2; };
struct BFu1ll_BFu0c_L { unsigned long long v1:1; unsigned char :0; long long v2; };
struct BFu1ll_BFu0c_S { unsigned long long v1:1; unsigned char :0; short v2; };
struct BFu1ll_BFu0c_Uc { unsigned long long v1:1; unsigned char :0; unsigned char v2; };
struct BFu1ll_BFu0c_Ui { unsigned long long v1:1; unsigned char :0; unsigned int v2; };
struct BFu1ll_BFu0c_Ul { unsigned long long v1:1; unsigned char :0; unsigned long long v2; };
struct BFu1ll_BFu0c_Us { unsigned long long v1:1; unsigned char :0; unsigned short v2; };
struct BFu1ll_BFu0c_Vp { unsigned long long v1:1; unsigned char :0; void * v2; };
struct BFu1ll_BFu0i { unsigned long long v1:1; unsigned int :0; };
struct BFu1ll_BFu0i_BFu0c { unsigned long long v1:1; unsigned int :0; unsigned char :0; };
struct BFu1ll_BFu0i_BFu0i { unsigned long long v1:1; unsigned int :0; unsigned int :0; };
struct BFu1ll_BFu0i_BFu0ll { unsigned long long v1:1; unsigned int :0; unsigned long long :0; };
struct BFu1ll_BFu0i_BFu0s { unsigned long long v1:1; unsigned int :0; unsigned short :0; };
struct BFu1ll_BFu0i_BFu15i { unsigned long long v1:1; unsigned int :0; unsigned int v2:15; };
struct BFu1ll_BFu0i_BFu15ll { unsigned long long v1:1; unsigned int :0; unsigned long long v2:15; };
struct BFu1ll_BFu0i_BFu15s { unsigned long long v1:1; unsigned int :0; unsigned short v2:15; };
struct BFu1ll_BFu0i_BFu16i { unsigned long long v1:1; unsigned int :0; unsigned int v2:16; };
struct BFu1ll_BFu0i_BFu16ll { unsigned long long v1:1; unsigned int :0; unsigned long long v2:16; };
struct BFu1ll_BFu0i_BFu16s { unsigned long long v1:1; unsigned int :0; unsigned short v2:16; };
struct BFu1ll_BFu0i_BFu17i { unsigned long long v1:1; unsigned int :0; unsigned int v2:17; };
struct BFu1ll_BFu0i_BFu17ll { unsigned long long v1:1; unsigned int :0; unsigned long long v2:17; };
struct BFu1ll_BFu0i_BFu1c { unsigned long long v1:1; unsigned int :0; unsigned char v2:1; };
struct BFu1ll_BFu0i_BFu1i { unsigned long long v1:1; unsigned int :0; unsigned int v2:1; };
struct BFu1ll_BFu0i_BFu1ll { unsigned long long v1:1; unsigned int :0; unsigned long long v2:1; };
struct BFu1ll_BFu0i_BFu1s { unsigned long long v1:1; unsigned int :0; unsigned short v2:1; };
struct BFu1ll_BFu0i_BFu31i { unsigned long long v1:1; unsigned int :0; unsigned int v2:31; };
struct BFu1ll_BFu0i_BFu31ll { unsigned long long v1:1; unsigned int :0; unsigned long long v2:31; };
struct BFu1ll_BFu0i_BFu32i { unsigned long long v1:1; unsigned int :0; unsigned int v2:32; };
struct BFu1ll_BFu0i_BFu32ll { unsigned long long v1:1; unsigned int :0; unsigned long long v2:32; };
struct BFu1ll_BFu0i_BFu33 { unsigned long long v1:1; unsigned int :0; unsigned long long v2:33; };
struct BFu1ll_BFu0i_BFu7c { unsigned long long v1:1; unsigned int :0; unsigned char v2:7; };
struct BFu1ll_BFu0i_BFu7i { unsigned long long v1:1; unsigned int :0; unsigned int v2:7; };
struct BFu1ll_BFu0i_BFu7ll { unsigned long long v1:1; unsigned int :0; unsigned long long v2:7; };
struct BFu1ll_BFu0i_BFu7s { unsigned long long v1:1; unsigned int :0; unsigned short v2:7; };
struct BFu1ll_BFu0i_BFu8c { unsigned long long v1:1; unsigned int :0; unsigned char v2:8; };
struct BFu1ll_BFu0i_BFu8i { unsigned long long v1:1; unsigned int :0; unsigned int v2:8; };
struct BFu1ll_BFu0i_BFu8ll { unsigned long long v1:1; unsigned int :0; unsigned long long v2:8; };
struct BFu1ll_BFu0i_BFu8s { unsigned long long v1:1; unsigned int :0; unsigned short v2:8; };
struct BFu1ll_BFu0i_BFu9i { unsigned long long v1:1; unsigned int :0; unsigned int v2:9; };
struct BFu1ll_BFu0i_BFu9ll { unsigned long long v1:1; unsigned int :0; unsigned long long v2:9; };
struct BFu1ll_BFu0i_BFu9s { unsigned long long v1:1; unsigned int :0; unsigned short v2:9; };
struct BFu1ll_BFu0i_C { unsigned long long v1:1; unsigned int :0; char v2; };
struct BFu1ll_BFu0i_D { unsigned long long v1:1; unsigned int :0; double v2; };
struct BFu1ll_BFu0i_F { unsigned long long v1:1; unsigned int :0; float v2; };
struct BFu1ll_BFu0i_I { unsigned long long v1:1; unsigned int :0; int v2; };
struct BFu1ll_BFu0i_Ip { unsigned long long v1:1; unsigned int :0; int * v2; };
struct BFu1ll_BFu0i_L { unsigned long long v1:1; unsigned int :0; long long v2; };
struct BFu1ll_BFu0i_S { unsigned long long v1:1; unsigned int :0; short v2; };
struct BFu1ll_BFu0i_Uc { unsigned long long v1:1; unsigned int :0; unsigned char v2; };
struct BFu1ll_BFu0i_Ui { unsigned long long v1:1; unsigned int :0; unsigned int v2; };
struct BFu1ll_BFu0i_Ul { unsigned long long v1:1; unsigned int :0; unsigned long long v2; };
struct BFu1ll_BFu0i_Us { unsigned long long v1:1; unsigned int :0; unsigned short v2; };
struct BFu1ll_BFu0i_Vp { unsigned long long v1:1; unsigned int :0; void * v2; };
struct BFu1ll_BFu0ll { unsigned long long v1:1; unsigned long long :0; };
struct BFu1ll_BFu0ll_BFu0c { unsigned long long v1:1; unsigned long long :0; unsigned char :0; };
struct BFu1ll_BFu0ll_BFu0i { unsigned long long v1:1; unsigned long long :0; unsigned int :0; };
struct BFu1ll_BFu0ll_BFu0ll { unsigned long long v1:1; unsigned long long :0; unsigned long long :0; };
struct BFu1ll_BFu0ll_BFu0s { unsigned long long v1:1; unsigned long long :0; unsigned short :0; };
struct BFu1ll_BFu0ll_BFu15i { unsigned long long v1:1; unsigned long long :0; unsigned int v2:15; };
struct BFu1ll_BFu0ll_BFu15ll { unsigned long long v1:1; unsigned long long :0; unsigned long long v2:15; };
struct BFu1ll_BFu0ll_BFu15s { unsigned long long v1:1; unsigned long long :0; unsigned short v2:15; };
struct BFu1ll_BFu0ll_BFu16i { unsigned long long v1:1; unsigned long long :0; unsigned int v2:16; };
struct BFu1ll_BFu0ll_BFu16ll { unsigned long long v1:1; unsigned long long :0; unsigned long long v2:16; };
struct BFu1ll_BFu0ll_BFu16s { unsigned long long v1:1; unsigned long long :0; unsigned short v2:16; };
struct BFu1ll_BFu0ll_BFu17i { unsigned long long v1:1; unsigned long long :0; unsigned int v2:17; };
struct BFu1ll_BFu0ll_BFu17ll { unsigned long long v1:1; unsigned long long :0; unsigned long long v2:17; };
struct BFu1ll_BFu0ll_BFu1c { unsigned long long v1:1; unsigned long long :0; unsigned char v2:1; };
struct BFu1ll_BFu0ll_BFu1i { unsigned long long v1:1; unsigned long long :0; unsigned int v2:1; };
struct BFu1ll_BFu0ll_BFu1ll { unsigned long long v1:1; unsigned long long :0; unsigned long long v2:1; };
struct BFu1ll_BFu0ll_BFu1s { unsigned long long v1:1; unsigned long long :0; unsigned short v2:1; };
struct BFu1ll_BFu0ll_BFu31i { unsigned long long v1:1; unsigned long long :0; unsigned int v2:31; };
struct BFu1ll_BFu0ll_BFu31ll { unsigned long long v1:1; unsigned long long :0; unsigned long long v2:31; };
struct BFu1ll_BFu0ll_BFu32i { unsigned long long v1:1; unsigned long long :0; unsigned int v2:32; };
struct BFu1ll_BFu0ll_BFu32ll { unsigned long long v1:1; unsigned long long :0; unsigned long long v2:32; };
struct BFu1ll_BFu0ll_BFu33 { unsigned long long v1:1; unsigned long long :0; unsigned long long v2:33; };
struct BFu1ll_BFu0ll_BFu7c { unsigned long long v1:1; unsigned long long :0; unsigned char v2:7; };
struct BFu1ll_BFu0ll_BFu7i { unsigned long long v1:1; unsigned long long :0; unsigned int v2:7; };
struct BFu1ll_BFu0ll_BFu7ll { unsigned long long v1:1; unsigned long long :0; unsigned long long v2:7; };
struct BFu1ll_BFu0ll_BFu7s { unsigned long long v1:1; unsigned long long :0; unsigned short v2:7; };
struct BFu1ll_BFu0ll_BFu8c { unsigned long long v1:1; unsigned long long :0; unsigned char v2:8; };
struct BFu1ll_BFu0ll_BFu8i { unsigned long long v1:1; unsigned long long :0; unsigned int v2:8; };
struct BFu1ll_BFu0ll_BFu8ll { unsigned long long v1:1; unsigned long long :0; unsigned long long v2:8; };
struct BFu1ll_BFu0ll_BFu8s { unsigned long long v1:1; unsigned long long :0; unsigned short v2:8; };
struct BFu1ll_BFu0ll_BFu9i { unsigned long long v1:1; unsigned long long :0; unsigned int v2:9; };
struct BFu1ll_BFu0ll_BFu9ll { unsigned long long v1:1; unsigned long long :0; unsigned long long v2:9; };
struct BFu1ll_BFu0ll_BFu9s { unsigned long long v1:1; unsigned long long :0; unsigned short v2:9; };
struct BFu1ll_BFu0ll_C { unsigned long long v1:1; unsigned long long :0; char v2; };
struct BFu1ll_BFu0ll_D { unsigned long long v1:1; unsigned long long :0; double v2; };
struct BFu1ll_BFu0ll_F { unsigned long long v1:1; unsigned long long :0; float v2; };
struct BFu1ll_BFu0ll_I { unsigned long long v1:1; unsigned long long :0; int v2; };
struct BFu1ll_BFu0ll_Ip { unsigned long long v1:1; unsigned long long :0; int * v2; };
struct BFu1ll_BFu0ll_L { unsigned long long v1:1; unsigned long long :0; long long v2; };
struct BFu1ll_BFu0ll_S { unsigned long long v1:1; unsigned long long :0; short v2; };
struct BFu1ll_BFu0ll_Uc { unsigned long long v1:1; unsigned long long :0; unsigned char v2; };
struct BFu1ll_BFu0ll_Ui { unsigned long long v1:1; unsigned long long :0; unsigned int v2; };
struct BFu1ll_BFu0ll_Ul { unsigned long long v1:1; unsigned long long :0; unsigned long long v2; };
struct BFu1ll_BFu0ll_Us { unsigned long long v1:1; unsigned long long :0; unsigned short v2; };
struct BFu1ll_BFu0ll_Vp { unsigned long long v1:1; unsigned long long :0; void * v2; };
struct BFu1ll_BFu0s { unsigned long long v1:1; unsigned short :0; };
struct BFu1ll_BFu0s_BFu0c { unsigned long long v1:1; unsigned short :0; unsigned char :0; };
struct BFu1ll_BFu0s_BFu0i { unsigned long long v1:1; unsigned short :0; unsigned int :0; };
struct BFu1ll_BFu0s_BFu0ll { unsigned long long v1:1; unsigned short :0; unsigned long long :0; };
struct BFu1ll_BFu0s_BFu0s { unsigned long long v1:1; unsigned short :0; unsigned short :0; };
struct BFu1ll_BFu0s_BFu15i { unsigned long long v1:1; unsigned short :0; unsigned int v2:15; };
struct BFu1ll_BFu0s_BFu15ll { unsigned long long v1:1; unsigned short :0; unsigned long long v2:15; };
struct BFu1ll_BFu0s_BFu15s { unsigned long long v1:1; unsigned short :0; unsigned short v2:15; };
struct BFu1ll_BFu0s_BFu16i { unsigned long long v1:1; unsigned short :0; unsigned int v2:16; };
struct BFu1ll_BFu0s_BFu16ll { unsigned long long v1:1; unsigned short :0; unsigned long long v2:16; };
struct BFu1ll_BFu0s_BFu16s { unsigned long long v1:1; unsigned short :0; unsigned short v2:16; };
struct BFu1ll_BFu0s_BFu17i { unsigned long long v1:1; unsigned short :0; unsigned int v2:17; };
struct BFu1ll_BFu0s_BFu17ll { unsigned long long v1:1; unsigned short :0; unsigned long long v2:17; };
struct BFu1ll_BFu0s_BFu1c { unsigned long long v1:1; unsigned short :0; unsigned char v2:1; };
struct BFu1ll_BFu0s_BFu1i { unsigned long long v1:1; unsigned short :0; unsigned int v2:1; };
struct BFu1ll_BFu0s_BFu1ll { unsigned long long v1:1; unsigned short :0; unsigned long long v2:1; };
struct BFu1ll_BFu0s_BFu1s { unsigned long long v1:1; unsigned short :0; unsigned short v2:1; };
struct BFu1ll_BFu0s_BFu31i { unsigned long long v1:1; unsigned short :0; unsigned int v2:31; };
struct BFu1ll_BFu0s_BFu31ll { unsigned long long v1:1; unsigned short :0; unsigned long long v2:31; };
struct BFu1ll_BFu0s_BFu32i { unsigned long long v1:1; unsigned short :0; unsigned int v2:32; };
struct BFu1ll_BFu0s_BFu32ll { unsigned long long v1:1; unsigned short :0; unsigned long long v2:32; };
struct BFu1ll_BFu0s_BFu33 { unsigned long long v1:1; unsigned short :0; unsigned long long v2:33; };
struct BFu1ll_BFu0s_BFu7c { unsigned long long v1:1; unsigned short :0; unsigned char v2:7; };
struct BFu1ll_BFu0s_BFu7i { unsigned long long v1:1; unsigned short :0; unsigned int v2:7; };
struct BFu1ll_BFu0s_BFu7ll { unsigned long long v1:1; unsigned short :0; unsigned long long v2:7; };
struct BFu1ll_BFu0s_BFu7s { unsigned long long v1:1; unsigned short :0; unsigned short v2:7; };
struct BFu1ll_BFu0s_BFu8c { unsigned long long v1:1; unsigned short :0; unsigned char v2:8; };
struct BFu1ll_BFu0s_BFu8i { unsigned long long v1:1; unsigned short :0; unsigned int v2:8; };
struct BFu1ll_BFu0s_BFu8ll { unsigned long long v1:1; unsigned short :0; unsigned long long v2:8; };
struct BFu1ll_BFu0s_BFu8s { unsigned long long v1:1; unsigned short :0; unsigned short v2:8; };
struct BFu1ll_BFu0s_BFu9i { unsigned long long v1:1; unsigned short :0; unsigned int v2:9; };
struct BFu1ll_BFu0s_BFu9ll { unsigned long long v1:1; unsigned short :0; unsigned long long v2:9; };
struct BFu1ll_BFu0s_BFu9s { unsigned long long v1:1; unsigned short :0; unsigned short v2:9; };
struct BFu1ll_BFu0s_C { unsigned long long v1:1; unsigned short :0; char v2; };
struct BFu1ll_BFu0s_D { unsigned long long v1:1; unsigned short :0; double v2; };
struct BFu1ll_BFu0s_F { unsigned long long v1:1; unsigned short :0; float v2; };
struct BFu1ll_BFu0s_I { unsigned long long v1:1; unsigned short :0; int v2; };
struct BFu1ll_BFu0s_Ip { unsigned long long v1:1; unsigned short :0; int * v2; };
struct BFu1ll_BFu0s_L { unsigned long long v1:1; unsigned short :0; long long v2; };
struct BFu1ll_BFu0s_S { unsigned long long v1:1; unsigned short :0; short v2; };
struct BFu1ll_BFu0s_Uc { unsigned long long v1:1; unsigned short :0; unsigned char v2; };
struct BFu1ll_BFu0s_Ui { unsigned long long v1:1; unsigned short :0; unsigned int v2; };
struct BFu1ll_BFu0s_Ul { unsigned long long v1:1; unsigned short :0; unsigned long long v2; };
struct BFu1ll_BFu0s_Us { unsigned long long v1:1; unsigned short :0; unsigned short v2; };
struct BFu1ll_BFu0s_Vp { unsigned long long v1:1; unsigned short :0; void * v2; };
struct BFu1ll_BFu15i_BFu0c { unsigned long long v1:1; unsigned int v2:15; unsigned char :0; };
struct BFu1ll_BFu15i_BFu0i { unsigned long long v1:1; unsigned int v2:15; unsigned int :0; };
struct BFu1ll_BFu15i_BFu0ll { unsigned long long v1:1; unsigned int v2:15; unsigned long long :0; };
struct BFu1ll_BFu15i_BFu0s { unsigned long long v1:1; unsigned int v2:15; unsigned short :0; };
struct BFu1ll_BFu15ll_BFu0c { unsigned long long v1:1; unsigned long long v2:15; unsigned char :0; };
struct BFu1ll_BFu15ll_BFu0i { unsigned long long v1:1; unsigned long long v2:15; unsigned int :0; };
struct BFu1ll_BFu15ll_BFu0ll { unsigned long long v1:1; unsigned long long v2:15; unsigned long long :0; };
struct BFu1ll_BFu15ll_BFu0s { unsigned long long v1:1; unsigned long long v2:15; unsigned short :0; };
struct BFu1ll_BFu15s_BFu0c { unsigned long long v1:1; unsigned short v2:15; unsigned char :0; };
struct BFu1ll_BFu15s_BFu0i { unsigned long long v1:1; unsigned short v2:15; unsigned int :0; };
struct BFu1ll_BFu15s_BFu0ll { unsigned long long v1:1; unsigned short v2:15; unsigned long long :0; };
struct BFu1ll_BFu15s_BFu0s { unsigned long long v1:1; unsigned short v2:15; unsigned short :0; };
struct BFu1ll_BFu16i_BFu0c { unsigned long long v1:1; unsigned int v2:16; unsigned char :0; };
struct BFu1ll_BFu16i_BFu0i { unsigned long long v1:1; unsigned int v2:16; unsigned int :0; };
struct BFu1ll_BFu16i_BFu0ll { unsigned long long v1:1; unsigned int v2:16; unsigned long long :0; };
struct BFu1ll_BFu16i_BFu0s { unsigned long long v1:1; unsigned int v2:16; unsigned short :0; };
struct BFu1ll_BFu16ll_BFu0c { unsigned long long v1:1; unsigned long long v2:16; unsigned char :0; };
struct BFu1ll_BFu16ll_BFu0i { unsigned long long v1:1; unsigned long long v2:16; unsigned int :0; };
struct BFu1ll_BFu16ll_BFu0ll { unsigned long long v1:1; unsigned long long v2:16; unsigned long long :0; };
struct BFu1ll_BFu16ll_BFu0s { unsigned long long v1:1; unsigned long long v2:16; unsigned short :0; };
struct BFu1ll_BFu16s_BFu0c { unsigned long long v1:1; unsigned short v2:16; unsigned char :0; };
struct BFu1ll_BFu16s_BFu0i { unsigned long long v1:1; unsigned short v2:16; unsigned int :0; };
struct BFu1ll_BFu16s_BFu0ll { unsigned long long v1:1; unsigned short v2:16; unsigned long long :0; };
struct BFu1ll_BFu16s_BFu0s { unsigned long long v1:1; unsigned short v2:16; unsigned short :0; };
struct BFu1ll_BFu17i_BFu0c { unsigned long long v1:1; unsigned int v2:17; unsigned char :0; };
struct BFu1ll_BFu17i_BFu0i { unsigned long long v1:1; unsigned int v2:17; unsigned int :0; };
struct BFu1ll_BFu17i_BFu0ll { unsigned long long v1:1; unsigned int v2:17; unsigned long long :0; };
struct BFu1ll_BFu17i_BFu0s { unsigned long long v1:1; unsigned int v2:17; unsigned short :0; };
struct BFu1ll_BFu17ll_BFu0c { unsigned long long v1:1; unsigned long long v2:17; unsigned char :0; };
struct BFu1ll_BFu17ll_BFu0i { unsigned long long v1:1; unsigned long long v2:17; unsigned int :0; };
struct BFu1ll_BFu17ll_BFu0ll { unsigned long long v1:1; unsigned long long v2:17; unsigned long long :0; };
struct BFu1ll_BFu17ll_BFu0s { unsigned long long v1:1; unsigned long long v2:17; unsigned short :0; };
struct BFu1ll_BFu1c_BFu0c { unsigned long long v1:1; unsigned char v2:1; unsigned char :0; };
struct BFu1ll_BFu1c_BFu0i { unsigned long long v1:1; unsigned char v2:1; unsigned int :0; };
struct BFu1ll_BFu1c_BFu0ll { unsigned long long v1:1; unsigned char v2:1; unsigned long long :0; };
struct BFu1ll_BFu1c_BFu0s { unsigned long long v1:1; unsigned char v2:1; unsigned short :0; };
struct BFu1ll_BFu1i_BFu0c { unsigned long long v1:1; unsigned int v2:1; unsigned char :0; };
struct BFu1ll_BFu1i_BFu0i { unsigned long long v1:1; unsigned int v2:1; unsigned int :0; };
struct BFu1ll_BFu1i_BFu0ll { unsigned long long v1:1; unsigned int v2:1; unsigned long long :0; };
struct BFu1ll_BFu1i_BFu0s { unsigned long long v1:1; unsigned int v2:1; unsigned short :0; };
struct BFu1ll_BFu1ll_BFu0c { unsigned long long v1:1; unsigned long long v2:1; unsigned char :0; };
struct BFu1ll_BFu1ll_BFu0i { unsigned long long v1:1; unsigned long long v2:1; unsigned int :0; };
struct BFu1ll_BFu1ll_BFu0ll { unsigned long long v1:1; unsigned long long v2:1; unsigned long long :0; };
struct BFu1ll_BFu1ll_BFu0s { unsigned long long v1:1; unsigned long long v2:1; unsigned short :0; };
struct BFu1ll_BFu1s_BFu0c { unsigned long long v1:1; unsigned short v2:1; unsigned char :0; };
struct BFu1ll_BFu1s_BFu0i { unsigned long long v1:1; unsigned short v2:1; unsigned int :0; };
struct BFu1ll_BFu1s_BFu0ll { unsigned long long v1:1; unsigned short v2:1; unsigned long long :0; };
struct BFu1ll_BFu1s_BFu0s { unsigned long long v1:1; unsigned short v2:1; unsigned short :0; };
struct BFu1ll_BFu31i_BFu0c { unsigned long long v1:1; unsigned int v2:31; unsigned char :0; };
struct BFu1ll_BFu31i_BFu0i { unsigned long long v1:1; unsigned int v2:31; unsigned int :0; };
struct BFu1ll_BFu31i_BFu0ll { unsigned long long v1:1; unsigned int v2:31; unsigned long long :0; };
struct BFu1ll_BFu31i_BFu0s { unsigned long long v1:1; unsigned int v2:31; unsigned short :0; };
struct BFu1ll_BFu31ll_BFu0c { unsigned long long v1:1; unsigned long long v2:31; unsigned char :0; };
struct BFu1ll_BFu31ll_BFu0i { unsigned long long v1:1; unsigned long long v2:31; unsigned int :0; };
struct BFu1ll_BFu31ll_BFu0ll { unsigned long long v1:1; unsigned long long v2:31; unsigned long long :0; };
struct BFu1ll_BFu31ll_BFu0s { unsigned long long v1:1; unsigned long long v2:31; unsigned short :0; };
struct BFu1ll_BFu32i_BFu0c { unsigned long long v1:1; unsigned int v2:32; unsigned char :0; };
struct BFu1ll_BFu32i_BFu0i { unsigned long long v1:1; unsigned int v2:32; unsigned int :0; };
struct BFu1ll_BFu32i_BFu0ll { unsigned long long v1:1; unsigned int v2:32; unsigned long long :0; };
struct BFu1ll_BFu32i_BFu0s { unsigned long long v1:1; unsigned int v2:32; unsigned short :0; };
struct BFu1ll_BFu32ll_BFu0c { unsigned long long v1:1; unsigned long long v2:32; unsigned char :0; };
struct BFu1ll_BFu32ll_BFu0i { unsigned long long v1:1; unsigned long long v2:32; unsigned int :0; };
struct BFu1ll_BFu32ll_BFu0ll { unsigned long long v1:1; unsigned long long v2:32; unsigned long long :0; };
struct BFu1ll_BFu32ll_BFu0s { unsigned long long v1:1; unsigned long long v2:32; unsigned short :0; };
struct BFu1ll_BFu33_BFu0c { unsigned long long v1:1; unsigned long long v2:33; unsigned char :0; };
struct BFu1ll_BFu33_BFu0i { unsigned long long v1:1; unsigned long long v2:33; unsigned int :0; };
struct BFu1ll_BFu33_BFu0ll { unsigned long long v1:1; unsigned long long v2:33; unsigned long long :0; };
struct BFu1ll_BFu33_BFu0s { unsigned long long v1:1; unsigned long long v2:33; unsigned short :0; };
struct BFu1ll_BFu7c_BFu0c { unsigned long long v1:1; unsigned char v2:7; unsigned char :0; };
struct BFu1ll_BFu7c_BFu0i { unsigned long long v1:1; unsigned char v2:7; unsigned int :0; };
struct BFu1ll_BFu7c_BFu0ll { unsigned long long v1:1; unsigned char v2:7; unsigned long long :0; };
struct BFu1ll_BFu7c_BFu0s { unsigned long long v1:1; unsigned char v2:7; unsigned short :0; };
struct BFu1ll_BFu7i_BFu0c { unsigned long long v1:1; unsigned int v2:7; unsigned char :0; };
struct BFu1ll_BFu7i_BFu0i { unsigned long long v1:1; unsigned int v2:7; unsigned int :0; };
struct BFu1ll_BFu7i_BFu0ll { unsigned long long v1:1; unsigned int v2:7; unsigned long long :0; };
struct BFu1ll_BFu7i_BFu0s { unsigned long long v1:1; unsigned int v2:7; unsigned short :0; };
struct BFu1ll_BFu7ll_BFu0c { unsigned long long v1:1; unsigned long long v2:7; unsigned char :0; };
struct BFu1ll_BFu7ll_BFu0i { unsigned long long v1:1; unsigned long long v2:7; unsigned int :0; };
struct BFu1ll_BFu7ll_BFu0ll { unsigned long long v1:1; unsigned long long v2:7; unsigned long long :0; };
struct BFu1ll_BFu7ll_BFu0s { unsigned long long v1:1; unsigned long long v2:7; unsigned short :0; };
struct BFu1ll_BFu7s_BFu0c { unsigned long long v1:1; unsigned short v2:7; unsigned char :0; };
struct BFu1ll_BFu7s_BFu0i { unsigned long long v1:1; unsigned short v2:7; unsigned int :0; };
struct BFu1ll_BFu7s_BFu0ll { unsigned long long v1:1; unsigned short v2:7; unsigned long long :0; };
struct BFu1ll_BFu7s_BFu0s { unsigned long long v1:1; unsigned short v2:7; unsigned short :0; };
struct BFu1ll_BFu8c_BFu0c { unsigned long long v1:1; unsigned char v2:8; unsigned char :0; };
struct BFu1ll_BFu8c_BFu0i { unsigned long long v1:1; unsigned char v2:8; unsigned int :0; };
struct BFu1ll_BFu8c_BFu0ll { unsigned long long v1:1; unsigned char v2:8; unsigned long long :0; };
struct BFu1ll_BFu8c_BFu0s { unsigned long long v1:1; unsigned char v2:8; unsigned short :0; };
struct BFu1ll_BFu8i_BFu0c { unsigned long long v1:1; unsigned int v2:8; unsigned char :0; };
struct BFu1ll_BFu8i_BFu0i { unsigned long long v1:1; unsigned int v2:8; unsigned int :0; };
struct BFu1ll_BFu8i_BFu0ll { unsigned long long v1:1; unsigned int v2:8; unsigned long long :0; };
struct BFu1ll_BFu8i_BFu0s { unsigned long long v1:1; unsigned int v2:8; unsigned short :0; };
struct BFu1ll_BFu8ll_BFu0c { unsigned long long v1:1; unsigned long long v2:8; unsigned char :0; };
struct BFu1ll_BFu8ll_BFu0i { unsigned long long v1:1; unsigned long long v2:8; unsigned int :0; };
struct BFu1ll_BFu8ll_BFu0ll { unsigned long long v1:1; unsigned long long v2:8; unsigned long long :0; };
struct BFu1ll_BFu8ll_BFu0s { unsigned long long v1:1; unsigned long long v2:8; unsigned short :0; };
struct BFu1ll_BFu8s_BFu0c { unsigned long long v1:1; unsigned short v2:8; unsigned char :0; };
struct BFu1ll_BFu8s_BFu0i { unsigned long long v1:1; unsigned short v2:8; unsigned int :0; };
struct BFu1ll_BFu8s_BFu0ll { unsigned long long v1:1; unsigned short v2:8; unsigned long long :0; };
struct BFu1ll_BFu8s_BFu0s { unsigned long long v1:1; unsigned short v2:8; unsigned short :0; };
struct BFu1ll_BFu9i_BFu0c { unsigned long long v1:1; unsigned int v2:9; unsigned char :0; };
struct BFu1ll_BFu9i_BFu0i { unsigned long long v1:1; unsigned int v2:9; unsigned int :0; };
struct BFu1ll_BFu9i_BFu0ll { unsigned long long v1:1; unsigned int v2:9; unsigned long long :0; };
struct BFu1ll_BFu9i_BFu0s { unsigned long long v1:1; unsigned int v2:9; unsigned short :0; };
struct BFu1ll_BFu9ll_BFu0c { unsigned long long v1:1; unsigned long long v2:9; unsigned char :0; };
struct BFu1ll_BFu9ll_BFu0i { unsigned long long v1:1; unsigned long long v2:9; unsigned int :0; };
struct BFu1ll_BFu9ll_BFu0ll { unsigned long long v1:1; unsigned long long v2:9; unsigned long long :0; };
struct BFu1ll_BFu9ll_BFu0s { unsigned long long v1:1; unsigned long long v2:9; unsigned short :0; };
struct BFu1ll_BFu9s_BFu0c { unsigned long long v1:1; unsigned short v2:9; unsigned char :0; };
struct BFu1ll_BFu9s_BFu0i { unsigned long long v1:1; unsigned short v2:9; unsigned int :0; };
struct BFu1ll_BFu9s_BFu0ll { unsigned long long v1:1; unsigned short v2:9; unsigned long long :0; };
struct BFu1ll_BFu9s_BFu0s { unsigned long long v1:1; unsigned short v2:9; unsigned short :0; };
struct BFu1ll_C_BFu0c { unsigned long long v1:1; char v2; unsigned char :0; };
struct BFu1ll_C_BFu0i { unsigned long long v1:1; char v2; unsigned int :0; };
struct BFu1ll_C_BFu0ll { unsigned long long v1:1; char v2; unsigned long long :0; };
struct BFu1ll_C_BFu0s { unsigned long long v1:1; char v2; unsigned short :0; };
struct BFu1ll_D_BFu0c { unsigned long long v1:1; double v2; unsigned char :0; };
struct BFu1ll_D_BFu0i { unsigned long long v1:1; double v2; unsigned int :0; };
struct BFu1ll_D_BFu0ll { unsigned long long v1:1; double v2; unsigned long long :0; };
struct BFu1ll_D_BFu0s { unsigned long long v1:1; double v2; unsigned short :0; };
struct BFu1ll_F_BFu0c { unsigned long long v1:1; float v2; unsigned char :0; };
struct BFu1ll_F_BFu0i { unsigned long long v1:1; float v2; unsigned int :0; };
struct BFu1ll_F_BFu0ll { unsigned long long v1:1; float v2; unsigned long long :0; };
struct BFu1ll_F_BFu0s { unsigned long long v1:1; float v2; unsigned short :0; };
struct BFu1ll_I_BFu0c { unsigned long long v1:1; int v2; unsigned char :0; };
struct BFu1ll_I_BFu0i { unsigned long long v1:1; int v2; unsigned int :0; };
struct BFu1ll_I_BFu0ll { unsigned long long v1:1; int v2; unsigned long long :0; };
struct BFu1ll_I_BFu0s { unsigned long long v1:1; int v2; unsigned short :0; };
struct BFu1ll_Ip_BFu0c { unsigned long long v1:1; int * v2; unsigned char :0; };
struct BFu1ll_Ip_BFu0i { unsigned long long v1:1; int * v2; unsigned int :0; };
struct BFu1ll_Ip_BFu0ll { unsigned long long v1:1; int * v2; unsigned long long :0; };
struct BFu1ll_Ip_BFu0s { unsigned long long v1:1; int * v2; unsigned short :0; };
struct BFu1ll_L_BFu0c { unsigned long long v1:1; long long v2; unsigned char :0; };
struct BFu1ll_L_BFu0i { unsigned long long v1:1; long long v2; unsigned int :0; };
struct BFu1ll_L_BFu0ll { unsigned long long v1:1; long long v2; unsigned long long :0; };
struct BFu1ll_L_BFu0s { unsigned long long v1:1; long long v2; unsigned short :0; };
struct BFu1ll_S_BFu0c { unsigned long long v1:1; short v2; unsigned char :0; };
struct BFu1ll_S_BFu0i { unsigned long long v1:1; short v2; unsigned int :0; };
struct BFu1ll_S_BFu0ll { unsigned long long v1:1; short v2; unsigned long long :0; };
struct BFu1ll_S_BFu0s { unsigned long long v1:1; short v2; unsigned short :0; };
struct BFu1ll_Uc_BFu0c { unsigned long long v1:1; unsigned char v2; unsigned char :0; };
struct BFu1ll_Uc_BFu0i { unsigned long long v1:1; unsigned char v2; unsigned int :0; };
struct BFu1ll_Uc_BFu0ll { unsigned long long v1:1; unsigned char v2; unsigned long long :0; };
struct BFu1ll_Uc_BFu0s { unsigned long long v1:1; unsigned char v2; unsigned short :0; };
struct BFu1ll_Ui_BFu0c { unsigned long long v1:1; unsigned int v2; unsigned char :0; };
struct BFu1ll_Ui_BFu0i { unsigned long long v1:1; unsigned int v2; unsigned int :0; };
struct BFu1ll_Ui_BFu0ll { unsigned long long v1:1; unsigned int v2; unsigned long long :0; };
struct BFu1ll_Ui_BFu0s { unsigned long long v1:1; unsigned int v2; unsigned short :0; };
struct BFu1ll_Ul_BFu0c { unsigned long long v1:1; unsigned long long v2; unsigned char :0; };
struct BFu1ll_Ul_BFu0i { unsigned long long v1:1; unsigned long long v2; unsigned int :0; };
struct BFu1ll_Ul_BFu0ll { unsigned long long v1:1; unsigned long long v2; unsigned long long :0; };
struct BFu1ll_Ul_BFu0s { unsigned long long v1:1; unsigned long long v2; unsigned short :0; };
struct BFu1ll_Us_BFu0c { unsigned long long v1:1; unsigned short v2; unsigned char :0; };
struct BFu1ll_Us_BFu0i { unsigned long long v1:1; unsigned short v2; unsigned int :0; };
struct BFu1ll_Us_BFu0ll { unsigned long long v1:1; unsigned short v2; unsigned long long :0; };
struct BFu1ll_Us_BFu0s { unsigned long long v1:1; unsigned short v2; unsigned short :0; };
struct BFu1ll_Vp_BFu0c { unsigned long long v1:1; void * v2; unsigned char :0; };
struct BFu1ll_Vp_BFu0i { unsigned long long v1:1; void * v2; unsigned int :0; };
struct BFu1ll_Vp_BFu0ll { unsigned long long v1:1; void * v2; unsigned long long :0; };
struct BFu1ll_Vp_BFu0s { unsigned long long v1:1; void * v2; unsigned short :0; };
struct BFu1s_BFu0c { unsigned short v1:1; unsigned char :0; };
struct BFu1s_BFu0c_BFu0c { unsigned short v1:1; unsigned char :0; unsigned char :0; };
struct BFu1s_BFu0c_BFu0i { unsigned short v1:1; unsigned char :0; unsigned int :0; };
struct BFu1s_BFu0c_BFu0ll { unsigned short v1:1; unsigned char :0; unsigned long long :0; };
struct BFu1s_BFu0c_BFu0s { unsigned short v1:1; unsigned char :0; unsigned short :0; };
struct BFu1s_BFu0c_BFu15i { unsigned short v1:1; unsigned char :0; unsigned int v2:15; };
struct BFu1s_BFu0c_BFu15ll { unsigned short v1:1; unsigned char :0; unsigned long long v2:15; };
struct BFu1s_BFu0c_BFu15s { unsigned short v1:1; unsigned char :0; unsigned short v2:15; };
struct BFu1s_BFu0c_BFu16i { unsigned short v1:1; unsigned char :0; unsigned int v2:16; };
struct BFu1s_BFu0c_BFu16ll { unsigned short v1:1; unsigned char :0; unsigned long long v2:16; };
struct BFu1s_BFu0c_BFu16s { unsigned short v1:1; unsigned char :0; unsigned short v2:16; };
struct BFu1s_BFu0c_BFu17i { unsigned short v1:1; unsigned char :0; unsigned int v2:17; };
struct BFu1s_BFu0c_BFu17ll { unsigned short v1:1; unsigned char :0; unsigned long long v2:17; };
struct BFu1s_BFu0c_BFu1c { unsigned short v1:1; unsigned char :0; unsigned char v2:1; };
struct BFu1s_BFu0c_BFu1i { unsigned short v1:1; unsigned char :0; unsigned int v2:1; };
struct BFu1s_BFu0c_BFu1ll { unsigned short v1:1; unsigned char :0; unsigned long long v2:1; };
struct BFu1s_BFu0c_BFu1s { unsigned short v1:1; unsigned char :0; unsigned short v2:1; };
struct BFu1s_BFu0c_BFu31i { unsigned short v1:1; unsigned char :0; unsigned int v2:31; };
struct BFu1s_BFu0c_BFu31ll { unsigned short v1:1; unsigned char :0; unsigned long long v2:31; };
struct BFu1s_BFu0c_BFu32i { unsigned short v1:1; unsigned char :0; unsigned int v2:32; };
struct BFu1s_BFu0c_BFu32ll { unsigned short v1:1; unsigned char :0; unsigned long long v2:32; };
struct BFu1s_BFu0c_BFu33 { unsigned short v1:1; unsigned char :0; unsigned long long v2:33; };
struct BFu1s_BFu0c_BFu7c { unsigned short v1:1; unsigned char :0; unsigned char v2:7; };
struct BFu1s_BFu0c_BFu7i { unsigned short v1:1; unsigned char :0; unsigned int v2:7; };
struct BFu1s_BFu0c_BFu7ll { unsigned short v1:1; unsigned char :0; unsigned long long v2:7; };
struct BFu1s_BFu0c_BFu7s { unsigned short v1:1; unsigned char :0; unsigned short v2:7; };
struct BFu1s_BFu0c_BFu8c { unsigned short v1:1; unsigned char :0; unsigned char v2:8; };
struct BFu1s_BFu0c_BFu8i { unsigned short v1:1; unsigned char :0; unsigned int v2:8; };
struct BFu1s_BFu0c_BFu8ll { unsigned short v1:1; unsigned char :0; unsigned long long v2:8; };
struct BFu1s_BFu0c_BFu8s { unsigned short v1:1; unsigned char :0; unsigned short v2:8; };
struct BFu1s_BFu0c_BFu9i { unsigned short v1:1; unsigned char :0; unsigned int v2:9; };
struct BFu1s_BFu0c_BFu9ll { unsigned short v1:1; unsigned char :0; unsigned long long v2:9; };
struct BFu1s_BFu0c_BFu9s { unsigned short v1:1; unsigned char :0; unsigned short v2:9; };
struct BFu1s_BFu0c_C { unsigned short v1:1; unsigned char :0; char v2; };
struct BFu1s_BFu0c_D { unsigned short v1:1; unsigned char :0; double v2; };
struct BFu1s_BFu0c_F { unsigned short v1:1; unsigned char :0; float v2; };
struct BFu1s_BFu0c_I { unsigned short v1:1; unsigned char :0; int v2; };
struct BFu1s_BFu0c_Ip { unsigned short v1:1; unsigned char :0; int * v2; };
struct BFu1s_BFu0c_L { unsigned short v1:1; unsigned char :0; long long v2; };
struct BFu1s_BFu0c_S { unsigned short v1:1; unsigned char :0; short v2; };
struct BFu1s_BFu0c_Uc { unsigned short v1:1; unsigned char :0; unsigned char v2; };
struct BFu1s_BFu0c_Ui { unsigned short v1:1; unsigned char :0; unsigned int v2; };
struct BFu1s_BFu0c_Ul { unsigned short v1:1; unsigned char :0; unsigned long long v2; };
struct BFu1s_BFu0c_Us { unsigned short v1:1; unsigned char :0; unsigned short v2; };
struct BFu1s_BFu0c_Vp { unsigned short v1:1; unsigned char :0; void * v2; };
struct BFu1s_BFu0i { unsigned short v1:1; unsigned int :0; };
struct BFu1s_BFu0i_BFu0c { unsigned short v1:1; unsigned int :0; unsigned char :0; };
struct BFu1s_BFu0i_BFu0i { unsigned short v1:1; unsigned int :0; unsigned int :0; };
struct BFu1s_BFu0i_BFu0ll { unsigned short v1:1; unsigned int :0; unsigned long long :0; };
struct BFu1s_BFu0i_BFu0s { unsigned short v1:1; unsigned int :0; unsigned short :0; };
struct BFu1s_BFu0i_BFu15i { unsigned short v1:1; unsigned int :0; unsigned int v2:15; };
struct BFu1s_BFu0i_BFu15ll { unsigned short v1:1; unsigned int :0; unsigned long long v2:15; };
struct BFu1s_BFu0i_BFu15s { unsigned short v1:1; unsigned int :0; unsigned short v2:15; };
struct BFu1s_BFu0i_BFu16i { unsigned short v1:1; unsigned int :0; unsigned int v2:16; };
struct BFu1s_BFu0i_BFu16ll { unsigned short v1:1; unsigned int :0; unsigned long long v2:16; };
struct BFu1s_BFu0i_BFu16s { unsigned short v1:1; unsigned int :0; unsigned short v2:16; };
struct BFu1s_BFu0i_BFu17i { unsigned short v1:1; unsigned int :0; unsigned int v2:17; };
struct BFu1s_BFu0i_BFu17ll { unsigned short v1:1; unsigned int :0; unsigned long long v2:17; };
struct BFu1s_BFu0i_BFu1c { unsigned short v1:1; unsigned int :0; unsigned char v2:1; };
struct BFu1s_BFu0i_BFu1i { unsigned short v1:1; unsigned int :0; unsigned int v2:1; };
struct BFu1s_BFu0i_BFu1ll { unsigned short v1:1; unsigned int :0; unsigned long long v2:1; };
struct BFu1s_BFu0i_BFu1s { unsigned short v1:1; unsigned int :0; unsigned short v2:1; };
struct BFu1s_BFu0i_BFu31i { unsigned short v1:1; unsigned int :0; unsigned int v2:31; };
struct BFu1s_BFu0i_BFu31ll { unsigned short v1:1; unsigned int :0; unsigned long long v2:31; };
struct BFu1s_BFu0i_BFu32i { unsigned short v1:1; unsigned int :0; unsigned int v2:32; };
struct BFu1s_BFu0i_BFu32ll { unsigned short v1:1; unsigned int :0; unsigned long long v2:32; };
struct BFu1s_BFu0i_BFu33 { unsigned short v1:1; unsigned int :0; unsigned long long v2:33; };
struct BFu1s_BFu0i_BFu7c { unsigned short v1:1; unsigned int :0; unsigned char v2:7; };
struct BFu1s_BFu0i_BFu7i { unsigned short v1:1; unsigned int :0; unsigned int v2:7; };
struct BFu1s_BFu0i_BFu7ll { unsigned short v1:1; unsigned int :0; unsigned long long v2:7; };
struct BFu1s_BFu0i_BFu7s { unsigned short v1:1; unsigned int :0; unsigned short v2:7; };
struct BFu1s_BFu0i_BFu8c { unsigned short v1:1; unsigned int :0; unsigned char v2:8; };
struct BFu1s_BFu0i_BFu8i { unsigned short v1:1; unsigned int :0; unsigned int v2:8; };
struct BFu1s_BFu0i_BFu8ll { unsigned short v1:1; unsigned int :0; unsigned long long v2:8; };
struct BFu1s_BFu0i_BFu8s { unsigned short v1:1; unsigned int :0; unsigned short v2:8; };
struct BFu1s_BFu0i_BFu9i { unsigned short v1:1; unsigned int :0; unsigned int v2:9; };
struct BFu1s_BFu0i_BFu9ll { unsigned short v1:1; unsigned int :0; unsigned long long v2:9; };
struct BFu1s_BFu0i_BFu9s { unsigned short v1:1; unsigned int :0; unsigned short v2:9; };
struct BFu1s_BFu0i_C { unsigned short v1:1; unsigned int :0; char v2; };
struct BFu1s_BFu0i_D { unsigned short v1:1; unsigned int :0; double v2; };
struct BFu1s_BFu0i_F { unsigned short v1:1; unsigned int :0; float v2; };
struct BFu1s_BFu0i_I { unsigned short v1:1; unsigned int :0; int v2; };
struct BFu1s_BFu0i_Ip { unsigned short v1:1; unsigned int :0; int * v2; };
struct BFu1s_BFu0i_L { unsigned short v1:1; unsigned int :0; long long v2; };
struct BFu1s_BFu0i_S { unsigned short v1:1; unsigned int :0; short v2; };
struct BFu1s_BFu0i_Uc { unsigned short v1:1; unsigned int :0; unsigned char v2; };
struct BFu1s_BFu0i_Ui { unsigned short v1:1; unsigned int :0; unsigned int v2; };
struct BFu1s_BFu0i_Ul { unsigned short v1:1; unsigned int :0; unsigned long long v2; };
struct BFu1s_BFu0i_Us { unsigned short v1:1; unsigned int :0; unsigned short v2; };
struct BFu1s_BFu0i_Vp { unsigned short v1:1; unsigned int :0; void * v2; };
struct BFu1s_BFu0ll { unsigned short v1:1; unsigned long long :0; };
struct BFu1s_BFu0ll_BFu0c { unsigned short v1:1; unsigned long long :0; unsigned char :0; };
struct BFu1s_BFu0ll_BFu0i { unsigned short v1:1; unsigned long long :0; unsigned int :0; };
struct BFu1s_BFu0ll_BFu0ll { unsigned short v1:1; unsigned long long :0; unsigned long long :0; };
struct BFu1s_BFu0ll_BFu0s { unsigned short v1:1; unsigned long long :0; unsigned short :0; };
struct BFu1s_BFu0ll_BFu15i { unsigned short v1:1; unsigned long long :0; unsigned int v2:15; };
struct BFu1s_BFu0ll_BFu15ll { unsigned short v1:1; unsigned long long :0; unsigned long long v2:15; };
struct BFu1s_BFu0ll_BFu15s { unsigned short v1:1; unsigned long long :0; unsigned short v2:15; };
struct BFu1s_BFu0ll_BFu16i { unsigned short v1:1; unsigned long long :0; unsigned int v2:16; };
struct BFu1s_BFu0ll_BFu16ll { unsigned short v1:1; unsigned long long :0; unsigned long long v2:16; };
struct BFu1s_BFu0ll_BFu16s { unsigned short v1:1; unsigned long long :0; unsigned short v2:16; };
struct BFu1s_BFu0ll_BFu17i { unsigned short v1:1; unsigned long long :0; unsigned int v2:17; };
struct BFu1s_BFu0ll_BFu17ll { unsigned short v1:1; unsigned long long :0; unsigned long long v2:17; };
struct BFu1s_BFu0ll_BFu1c { unsigned short v1:1; unsigned long long :0; unsigned char v2:1; };
struct BFu1s_BFu0ll_BFu1i { unsigned short v1:1; unsigned long long :0; unsigned int v2:1; };
struct BFu1s_BFu0ll_BFu1ll { unsigned short v1:1; unsigned long long :0; unsigned long long v2:1; };
struct BFu1s_BFu0ll_BFu1s { unsigned short v1:1; unsigned long long :0; unsigned short v2:1; };
struct BFu1s_BFu0ll_BFu31i { unsigned short v1:1; unsigned long long :0; unsigned int v2:31; };
struct BFu1s_BFu0ll_BFu31ll { unsigned short v1:1; unsigned long long :0; unsigned long long v2:31; };
struct BFu1s_BFu0ll_BFu32i { unsigned short v1:1; unsigned long long :0; unsigned int v2:32; };
struct BFu1s_BFu0ll_BFu32ll { unsigned short v1:1; unsigned long long :0; unsigned long long v2:32; };
struct BFu1s_BFu0ll_BFu33 { unsigned short v1:1; unsigned long long :0; unsigned long long v2:33; };
struct BFu1s_BFu0ll_BFu7c { unsigned short v1:1; unsigned long long :0; unsigned char v2:7; };
struct BFu1s_BFu0ll_BFu7i { unsigned short v1:1; unsigned long long :0; unsigned int v2:7; };
struct BFu1s_BFu0ll_BFu7ll { unsigned short v1:1; unsigned long long :0; unsigned long long v2:7; };
struct BFu1s_BFu0ll_BFu7s { unsigned short v1:1; unsigned long long :0; unsigned short v2:7; };
struct BFu1s_BFu0ll_BFu8c { unsigned short v1:1; unsigned long long :0; unsigned char v2:8; };
struct BFu1s_BFu0ll_BFu8i { unsigned short v1:1; unsigned long long :0; unsigned int v2:8; };
struct BFu1s_BFu0ll_BFu8ll { unsigned short v1:1; unsigned long long :0; unsigned long long v2:8; };
struct BFu1s_BFu0ll_BFu8s { unsigned short v1:1; unsigned long long :0; unsigned short v2:8; };
struct BFu1s_BFu0ll_BFu9i { unsigned short v1:1; unsigned long long :0; unsigned int v2:9; };
struct BFu1s_BFu0ll_BFu9ll { unsigned short v1:1; unsigned long long :0; unsigned long long v2:9; };
struct BFu1s_BFu0ll_BFu9s { unsigned short v1:1; unsigned long long :0; unsigned short v2:9; };
struct BFu1s_BFu0ll_C { unsigned short v1:1; unsigned long long :0; char v2; };
struct BFu1s_BFu0ll_D { unsigned short v1:1; unsigned long long :0; double v2; };
struct BFu1s_BFu0ll_F { unsigned short v1:1; unsigned long long :0; float v2; };
struct BFu1s_BFu0ll_I { unsigned short v1:1; unsigned long long :0; int v2; };
struct BFu1s_BFu0ll_Ip { unsigned short v1:1; unsigned long long :0; int * v2; };
struct BFu1s_BFu0ll_L { unsigned short v1:1; unsigned long long :0; long long v2; };
struct BFu1s_BFu0ll_S { unsigned short v1:1; unsigned long long :0; short v2; };
struct BFu1s_BFu0ll_Uc { unsigned short v1:1; unsigned long long :0; unsigned char v2; };
struct BFu1s_BFu0ll_Ui { unsigned short v1:1; unsigned long long :0; unsigned int v2; };
struct BFu1s_BFu0ll_Ul { unsigned short v1:1; unsigned long long :0; unsigned long long v2; };
struct BFu1s_BFu0ll_Us { unsigned short v1:1; unsigned long long :0; unsigned short v2; };
struct BFu1s_BFu0ll_Vp { unsigned short v1:1; unsigned long long :0; void * v2; };
struct BFu1s_BFu0s { unsigned short v1:1; unsigned short :0; };
struct BFu1s_BFu0s_BFu0c { unsigned short v1:1; unsigned short :0; unsigned char :0; };
struct BFu1s_BFu0s_BFu0i { unsigned short v1:1; unsigned short :0; unsigned int :0; };
struct BFu1s_BFu0s_BFu0ll { unsigned short v1:1; unsigned short :0; unsigned long long :0; };
struct BFu1s_BFu0s_BFu0s { unsigned short v1:1; unsigned short :0; unsigned short :0; };
struct BFu1s_BFu0s_BFu15i { unsigned short v1:1; unsigned short :0; unsigned int v2:15; };
struct BFu1s_BFu0s_BFu15ll { unsigned short v1:1; unsigned short :0; unsigned long long v2:15; };
struct BFu1s_BFu0s_BFu15s { unsigned short v1:1; unsigned short :0; unsigned short v2:15; };
struct BFu1s_BFu0s_BFu16i { unsigned short v1:1; unsigned short :0; unsigned int v2:16; };
struct BFu1s_BFu0s_BFu16ll { unsigned short v1:1; unsigned short :0; unsigned long long v2:16; };
struct BFu1s_BFu0s_BFu16s { unsigned short v1:1; unsigned short :0; unsigned short v2:16; };
struct BFu1s_BFu0s_BFu17i { unsigned short v1:1; unsigned short :0; unsigned int v2:17; };
struct BFu1s_BFu0s_BFu17ll { unsigned short v1:1; unsigned short :0; unsigned long long v2:17; };
struct BFu1s_BFu0s_BFu1c { unsigned short v1:1; unsigned short :0; unsigned char v2:1; };
struct BFu1s_BFu0s_BFu1i { unsigned short v1:1; unsigned short :0; unsigned int v2:1; };
struct BFu1s_BFu0s_BFu1ll { unsigned short v1:1; unsigned short :0; unsigned long long v2:1; };
struct BFu1s_BFu0s_BFu1s { unsigned short v1:1; unsigned short :0; unsigned short v2:1; };
struct BFu1s_BFu0s_BFu31i { unsigned short v1:1; unsigned short :0; unsigned int v2:31; };
struct BFu1s_BFu0s_BFu31ll { unsigned short v1:1; unsigned short :0; unsigned long long v2:31; };
struct BFu1s_BFu0s_BFu32i { unsigned short v1:1; unsigned short :0; unsigned int v2:32; };
struct BFu1s_BFu0s_BFu32ll { unsigned short v1:1; unsigned short :0; unsigned long long v2:32; };
struct BFu1s_BFu0s_BFu33 { unsigned short v1:1; unsigned short :0; unsigned long long v2:33; };
struct BFu1s_BFu0s_BFu7c { unsigned short v1:1; unsigned short :0; unsigned char v2:7; };
struct BFu1s_BFu0s_BFu7i { unsigned short v1:1; unsigned short :0; unsigned int v2:7; };
struct BFu1s_BFu0s_BFu7ll { unsigned short v1:1; unsigned short :0; unsigned long long v2:7; };
struct BFu1s_BFu0s_BFu7s { unsigned short v1:1; unsigned short :0; unsigned short v2:7; };
struct BFu1s_BFu0s_BFu8c { unsigned short v1:1; unsigned short :0; unsigned char v2:8; };
struct BFu1s_BFu0s_BFu8i { unsigned short v1:1; unsigned short :0; unsigned int v2:8; };
struct BFu1s_BFu0s_BFu8ll { unsigned short v1:1; unsigned short :0; unsigned long long v2:8; };
struct BFu1s_BFu0s_BFu8s { unsigned short v1:1; unsigned short :0; unsigned short v2:8; };
struct BFu1s_BFu0s_BFu9i { unsigned short v1:1; unsigned short :0; unsigned int v2:9; };
struct BFu1s_BFu0s_BFu9ll { unsigned short v1:1; unsigned short :0; unsigned long long v2:9; };
struct BFu1s_BFu0s_BFu9s { unsigned short v1:1; unsigned short :0; unsigned short v2:9; };
struct BFu1s_BFu0s_C { unsigned short v1:1; unsigned short :0; char v2; };
struct BFu1s_BFu0s_D { unsigned short v1:1; unsigned short :0; double v2; };
struct BFu1s_BFu0s_F { unsigned short v1:1; unsigned short :0; float v2; };
struct BFu1s_BFu0s_I { unsigned short v1:1; unsigned short :0; int v2; };
struct BFu1s_BFu0s_Ip { unsigned short v1:1; unsigned short :0; int * v2; };
struct BFu1s_BFu0s_L { unsigned short v1:1; unsigned short :0; long long v2; };
struct BFu1s_BFu0s_S { unsigned short v1:1; unsigned short :0; short v2; };
struct BFu1s_BFu0s_Uc { unsigned short v1:1; unsigned short :0; unsigned char v2; };
struct BFu1s_BFu0s_Ui { unsigned short v1:1; unsigned short :0; unsigned int v2; };
struct BFu1s_BFu0s_Ul { unsigned short v1:1; unsigned short :0; unsigned long long v2; };
struct BFu1s_BFu0s_Us { unsigned short v1:1; unsigned short :0; unsigned short v2; };
struct BFu1s_BFu0s_Vp { unsigned short v1:1; unsigned short :0; void * v2; };
struct BFu1s_BFu15i_BFu0c { unsigned short v1:1; unsigned int v2:15; unsigned char :0; };
struct BFu1s_BFu15i_BFu0i { unsigned short v1:1; unsigned int v2:15; unsigned int :0; };
struct BFu1s_BFu15i_BFu0ll { unsigned short v1:1; unsigned int v2:15; unsigned long long :0; };
struct BFu1s_BFu15i_BFu0s { unsigned short v1:1; unsigned int v2:15; unsigned short :0; };
struct BFu1s_BFu15ll_BFu0c { unsigned short v1:1; unsigned long long v2:15; unsigned char :0; };
struct BFu1s_BFu15ll_BFu0i { unsigned short v1:1; unsigned long long v2:15; unsigned int :0; };
struct BFu1s_BFu15ll_BFu0ll { unsigned short v1:1; unsigned long long v2:15; unsigned long long :0; };
struct BFu1s_BFu15ll_BFu0s { unsigned short v1:1; unsigned long long v2:15; unsigned short :0; };
struct BFu1s_BFu15s_BFu0c { unsigned short v1:1; unsigned short v2:15; unsigned char :0; };
struct BFu1s_BFu15s_BFu0i { unsigned short v1:1; unsigned short v2:15; unsigned int :0; };
struct BFu1s_BFu15s_BFu0ll { unsigned short v1:1; unsigned short v2:15; unsigned long long :0; };
struct BFu1s_BFu15s_BFu0s { unsigned short v1:1; unsigned short v2:15; unsigned short :0; };
struct BFu1s_BFu16i_BFu0c { unsigned short v1:1; unsigned int v2:16; unsigned char :0; };
struct BFu1s_BFu16i_BFu0i { unsigned short v1:1; unsigned int v2:16; unsigned int :0; };
struct BFu1s_BFu16i_BFu0ll { unsigned short v1:1; unsigned int v2:16; unsigned long long :0; };
struct BFu1s_BFu16i_BFu0s { unsigned short v1:1; unsigned int v2:16; unsigned short :0; };
struct BFu1s_BFu16ll_BFu0c { unsigned short v1:1; unsigned long long v2:16; unsigned char :0; };
struct BFu1s_BFu16ll_BFu0i { unsigned short v1:1; unsigned long long v2:16; unsigned int :0; };
struct BFu1s_BFu16ll_BFu0ll { unsigned short v1:1; unsigned long long v2:16; unsigned long long :0; };
struct BFu1s_BFu16ll_BFu0s { unsigned short v1:1; unsigned long long v2:16; unsigned short :0; };
struct BFu1s_BFu16s_BFu0c { unsigned short v1:1; unsigned short v2:16; unsigned char :0; };
struct BFu1s_BFu16s_BFu0i { unsigned short v1:1; unsigned short v2:16; unsigned int :0; };
struct BFu1s_BFu16s_BFu0ll { unsigned short v1:1; unsigned short v2:16; unsigned long long :0; };
struct BFu1s_BFu16s_BFu0s { unsigned short v1:1; unsigned short v2:16; unsigned short :0; };
struct BFu1s_BFu17i_BFu0c { unsigned short v1:1; unsigned int v2:17; unsigned char :0; };
struct BFu1s_BFu17i_BFu0i { unsigned short v1:1; unsigned int v2:17; unsigned int :0; };
struct BFu1s_BFu17i_BFu0ll { unsigned short v1:1; unsigned int v2:17; unsigned long long :0; };
struct BFu1s_BFu17i_BFu0s { unsigned short v1:1; unsigned int v2:17; unsigned short :0; };
struct BFu1s_BFu17ll_BFu0c { unsigned short v1:1; unsigned long long v2:17; unsigned char :0; };
struct BFu1s_BFu17ll_BFu0i { unsigned short v1:1; unsigned long long v2:17; unsigned int :0; };
struct BFu1s_BFu17ll_BFu0ll { unsigned short v1:1; unsigned long long v2:17; unsigned long long :0; };
struct BFu1s_BFu17ll_BFu0s { unsigned short v1:1; unsigned long long v2:17; unsigned short :0; };
struct BFu1s_BFu1c_BFu0c { unsigned short v1:1; unsigned char v2:1; unsigned char :0; };
struct BFu1s_BFu1c_BFu0i { unsigned short v1:1; unsigned char v2:1; unsigned int :0; };
struct BFu1s_BFu1c_BFu0ll { unsigned short v1:1; unsigned char v2:1; unsigned long long :0; };
struct BFu1s_BFu1c_BFu0s { unsigned short v1:1; unsigned char v2:1; unsigned short :0; };
struct BFu1s_BFu1i_BFu0c { unsigned short v1:1; unsigned int v2:1; unsigned char :0; };
struct BFu1s_BFu1i_BFu0i { unsigned short v1:1; unsigned int v2:1; unsigned int :0; };
struct BFu1s_BFu1i_BFu0ll { unsigned short v1:1; unsigned int v2:1; unsigned long long :0; };
struct BFu1s_BFu1i_BFu0s { unsigned short v1:1; unsigned int v2:1; unsigned short :0; };
struct BFu1s_BFu1ll_BFu0c { unsigned short v1:1; unsigned long long v2:1; unsigned char :0; };
struct BFu1s_BFu1ll_BFu0i { unsigned short v1:1; unsigned long long v2:1; unsigned int :0; };
struct BFu1s_BFu1ll_BFu0ll { unsigned short v1:1; unsigned long long v2:1; unsigned long long :0; };
struct BFu1s_BFu1ll_BFu0s { unsigned short v1:1; unsigned long long v2:1; unsigned short :0; };
struct BFu1s_BFu1s_BFu0c { unsigned short v1:1; unsigned short v2:1; unsigned char :0; };
struct BFu1s_BFu1s_BFu0i { unsigned short v1:1; unsigned short v2:1; unsigned int :0; };
struct BFu1s_BFu1s_BFu0ll { unsigned short v1:1; unsigned short v2:1; unsigned long long :0; };
struct BFu1s_BFu1s_BFu0s { unsigned short v1:1; unsigned short v2:1; unsigned short :0; };
struct BFu1s_BFu31i_BFu0c { unsigned short v1:1; unsigned int v2:31; unsigned char :0; };
struct BFu1s_BFu31i_BFu0i { unsigned short v1:1; unsigned int v2:31; unsigned int :0; };
struct BFu1s_BFu31i_BFu0ll { unsigned short v1:1; unsigned int v2:31; unsigned long long :0; };
struct BFu1s_BFu31i_BFu0s { unsigned short v1:1; unsigned int v2:31; unsigned short :0; };
struct BFu1s_BFu31ll_BFu0c { unsigned short v1:1; unsigned long long v2:31; unsigned char :0; };
struct BFu1s_BFu31ll_BFu0i { unsigned short v1:1; unsigned long long v2:31; unsigned int :0; };
struct BFu1s_BFu31ll_BFu0ll { unsigned short v1:1; unsigned long long v2:31; unsigned long long :0; };
struct BFu1s_BFu31ll_BFu0s { unsigned short v1:1; unsigned long long v2:31; unsigned short :0; };
struct BFu1s_BFu32i_BFu0c { unsigned short v1:1; unsigned int v2:32; unsigned char :0; };
struct BFu1s_BFu32i_BFu0i { unsigned short v1:1; unsigned int v2:32; unsigned int :0; };
struct BFu1s_BFu32i_BFu0ll { unsigned short v1:1; unsigned int v2:32; unsigned long long :0; };
struct BFu1s_BFu32i_BFu0s { unsigned short v1:1; unsigned int v2:32; unsigned short :0; };
struct BFu1s_BFu32ll_BFu0c { unsigned short v1:1; unsigned long long v2:32; unsigned char :0; };
struct BFu1s_BFu32ll_BFu0i { unsigned short v1:1; unsigned long long v2:32; unsigned int :0; };
struct BFu1s_BFu32ll_BFu0ll { unsigned short v1:1; unsigned long long v2:32; unsigned long long :0; };
struct BFu1s_BFu32ll_BFu0s { unsigned short v1:1; unsigned long long v2:32; unsigned short :0; };
struct BFu1s_BFu33_BFu0c { unsigned short v1:1; unsigned long long v2:33; unsigned char :0; };
struct BFu1s_BFu33_BFu0i { unsigned short v1:1; unsigned long long v2:33; unsigned int :0; };
struct BFu1s_BFu33_BFu0ll { unsigned short v1:1; unsigned long long v2:33; unsigned long long :0; };
struct BFu1s_BFu33_BFu0s { unsigned short v1:1; unsigned long long v2:33; unsigned short :0; };
struct BFu1s_BFu7c_BFu0c { unsigned short v1:1; unsigned char v2:7; unsigned char :0; };
struct BFu1s_BFu7c_BFu0i { unsigned short v1:1; unsigned char v2:7; unsigned int :0; };
struct BFu1s_BFu7c_BFu0ll { unsigned short v1:1; unsigned char v2:7; unsigned long long :0; };
struct BFu1s_BFu7c_BFu0s { unsigned short v1:1; unsigned char v2:7; unsigned short :0; };
struct BFu1s_BFu7i_BFu0c { unsigned short v1:1; unsigned int v2:7; unsigned char :0; };
struct BFu1s_BFu7i_BFu0i { unsigned short v1:1; unsigned int v2:7; unsigned int :0; };
struct BFu1s_BFu7i_BFu0ll { unsigned short v1:1; unsigned int v2:7; unsigned long long :0; };
struct BFu1s_BFu7i_BFu0s { unsigned short v1:1; unsigned int v2:7; unsigned short :0; };
struct BFu1s_BFu7ll_BFu0c { unsigned short v1:1; unsigned long long v2:7; unsigned char :0; };
struct BFu1s_BFu7ll_BFu0i { unsigned short v1:1; unsigned long long v2:7; unsigned int :0; };
struct BFu1s_BFu7ll_BFu0ll { unsigned short v1:1; unsigned long long v2:7; unsigned long long :0; };
struct BFu1s_BFu7ll_BFu0s { unsigned short v1:1; unsigned long long v2:7; unsigned short :0; };
struct BFu1s_BFu7s_BFu0c { unsigned short v1:1; unsigned short v2:7; unsigned char :0; };
struct BFu1s_BFu7s_BFu0i { unsigned short v1:1; unsigned short v2:7; unsigned int :0; };
struct BFu1s_BFu7s_BFu0ll { unsigned short v1:1; unsigned short v2:7; unsigned long long :0; };
struct BFu1s_BFu7s_BFu0s { unsigned short v1:1; unsigned short v2:7; unsigned short :0; };
struct BFu1s_BFu8c_BFu0c { unsigned short v1:1; unsigned char v2:8; unsigned char :0; };
struct BFu1s_BFu8c_BFu0i { unsigned short v1:1; unsigned char v2:8; unsigned int :0; };
struct BFu1s_BFu8c_BFu0ll { unsigned short v1:1; unsigned char v2:8; unsigned long long :0; };
struct BFu1s_BFu8c_BFu0s { unsigned short v1:1; unsigned char v2:8; unsigned short :0; };
struct BFu1s_BFu8i_BFu0c { unsigned short v1:1; unsigned int v2:8; unsigned char :0; };
struct BFu1s_BFu8i_BFu0i { unsigned short v1:1; unsigned int v2:8; unsigned int :0; };
struct BFu1s_BFu8i_BFu0ll { unsigned short v1:1; unsigned int v2:8; unsigned long long :0; };
struct BFu1s_BFu8i_BFu0s { unsigned short v1:1; unsigned int v2:8; unsigned short :0; };
struct BFu1s_BFu8ll_BFu0c { unsigned short v1:1; unsigned long long v2:8; unsigned char :0; };
struct BFu1s_BFu8ll_BFu0i { unsigned short v1:1; unsigned long long v2:8; unsigned int :0; };
struct BFu1s_BFu8ll_BFu0ll { unsigned short v1:1; unsigned long long v2:8; unsigned long long :0; };
struct BFu1s_BFu8ll_BFu0s { unsigned short v1:1; unsigned long long v2:8; unsigned short :0; };
struct BFu1s_BFu8s_BFu0c { unsigned short v1:1; unsigned short v2:8; unsigned char :0; };
struct BFu1s_BFu8s_BFu0i { unsigned short v1:1; unsigned short v2:8; unsigned int :0; };
struct BFu1s_BFu8s_BFu0ll { unsigned short v1:1; unsigned short v2:8; unsigned long long :0; };
struct BFu1s_BFu8s_BFu0s { unsigned short v1:1; unsigned short v2:8; unsigned short :0; };
struct BFu1s_BFu9i_BFu0c { unsigned short v1:1; unsigned int v2:9; unsigned char :0; };
struct BFu1s_BFu9i_BFu0i { unsigned short v1:1; unsigned int v2:9; unsigned int :0; };
struct BFu1s_BFu9i_BFu0ll { unsigned short v1:1; unsigned int v2:9; unsigned long long :0; };
struct BFu1s_BFu9i_BFu0s { unsigned short v1:1; unsigned int v2:9; unsigned short :0; };
struct BFu1s_BFu9ll_BFu0c { unsigned short v1:1; unsigned long long v2:9; unsigned char :0; };
struct BFu1s_BFu9ll_BFu0i { unsigned short v1:1; unsigned long long v2:9; unsigned int :0; };
struct BFu1s_BFu9ll_BFu0ll { unsigned short v1:1; unsigned long long v2:9; unsigned long long :0; };
struct BFu1s_BFu9ll_BFu0s { unsigned short v1:1; unsigned long long v2:9; unsigned short :0; };
struct BFu1s_BFu9s_BFu0c { unsigned short v1:1; unsigned short v2:9; unsigned char :0; };
struct BFu1s_BFu9s_BFu0i { unsigned short v1:1; unsigned short v2:9; unsigned int :0; };
struct BFu1s_BFu9s_BFu0ll { unsigned short v1:1; unsigned short v2:9; unsigned long long :0; };
struct BFu1s_BFu9s_BFu0s { unsigned short v1:1; unsigned short v2:9; unsigned short :0; };
struct BFu1s_C_BFu0c { unsigned short v1:1; char v2; unsigned char :0; };
struct BFu1s_C_BFu0i { unsigned short v1:1; char v2; unsigned int :0; };
struct BFu1s_C_BFu0ll { unsigned short v1:1; char v2; unsigned long long :0; };
struct BFu1s_C_BFu0s { unsigned short v1:1; char v2; unsigned short :0; };
struct BFu1s_D_BFu0c { unsigned short v1:1; double v2; unsigned char :0; };
struct BFu1s_D_BFu0i { unsigned short v1:1; double v2; unsigned int :0; };
struct BFu1s_D_BFu0ll { unsigned short v1:1; double v2; unsigned long long :0; };
struct BFu1s_D_BFu0s { unsigned short v1:1; double v2; unsigned short :0; };
struct BFu1s_F_BFu0c { unsigned short v1:1; float v2; unsigned char :0; };
struct BFu1s_F_BFu0i { unsigned short v1:1; float v2; unsigned int :0; };
struct BFu1s_F_BFu0ll { unsigned short v1:1; float v2; unsigned long long :0; };
struct BFu1s_F_BFu0s { unsigned short v1:1; float v2; unsigned short :0; };
struct BFu1s_I_BFu0c { unsigned short v1:1; int v2; unsigned char :0; };
struct BFu1s_I_BFu0i { unsigned short v1:1; int v2; unsigned int :0; };
struct BFu1s_I_BFu0ll { unsigned short v1:1; int v2; unsigned long long :0; };
struct BFu1s_I_BFu0s { unsigned short v1:1; int v2; unsigned short :0; };
struct BFu1s_Ip_BFu0c { unsigned short v1:1; int * v2; unsigned char :0; };
struct BFu1s_Ip_BFu0i { unsigned short v1:1; int * v2; unsigned int :0; };
struct BFu1s_Ip_BFu0ll { unsigned short v1:1; int * v2; unsigned long long :0; };
struct BFu1s_Ip_BFu0s { unsigned short v1:1; int * v2; unsigned short :0; };
struct BFu1s_L_BFu0c { unsigned short v1:1; long long v2; unsigned char :0; };
struct BFu1s_L_BFu0i { unsigned short v1:1; long long v2; unsigned int :0; };
struct BFu1s_L_BFu0ll { unsigned short v1:1; long long v2; unsigned long long :0; };
struct BFu1s_L_BFu0s { unsigned short v1:1; long long v2; unsigned short :0; };
struct BFu1s_S_BFu0c { unsigned short v1:1; short v2; unsigned char :0; };
struct BFu1s_S_BFu0i { unsigned short v1:1; short v2; unsigned int :0; };
struct BFu1s_S_BFu0ll { unsigned short v1:1; short v2; unsigned long long :0; };
struct BFu1s_S_BFu0s { unsigned short v1:1; short v2; unsigned short :0; };
struct BFu1s_Uc_BFu0c { unsigned short v1:1; unsigned char v2; unsigned char :0; };
struct BFu1s_Uc_BFu0i { unsigned short v1:1; unsigned char v2; unsigned int :0; };
struct BFu1s_Uc_BFu0ll { unsigned short v1:1; unsigned char v2; unsigned long long :0; };
struct BFu1s_Uc_BFu0s { unsigned short v1:1; unsigned char v2; unsigned short :0; };
struct BFu1s_Ui_BFu0c { unsigned short v1:1; unsigned int v2; unsigned char :0; };
struct BFu1s_Ui_BFu0i { unsigned short v1:1; unsigned int v2; unsigned int :0; };
struct BFu1s_Ui_BFu0ll { unsigned short v1:1; unsigned int v2; unsigned long long :0; };
struct BFu1s_Ui_BFu0s { unsigned short v1:1; unsigned int v2; unsigned short :0; };
struct BFu1s_Ul_BFu0c { unsigned short v1:1; unsigned long long v2; unsigned char :0; };
struct BFu1s_Ul_BFu0i { unsigned short v1:1; unsigned long long v2; unsigned int :0; };
struct BFu1s_Ul_BFu0ll { unsigned short v1:1; unsigned long long v2; unsigned long long :0; };
struct BFu1s_Ul_BFu0s { unsigned short v1:1; unsigned long long v2; unsigned short :0; };
struct BFu1s_Us_BFu0c { unsigned short v1:1; unsigned short v2; unsigned char :0; };
struct BFu1s_Us_BFu0i { unsigned short v1:1; unsigned short v2; unsigned int :0; };
struct BFu1s_Us_BFu0ll { unsigned short v1:1; unsigned short v2; unsigned long long :0; };
struct BFu1s_Us_BFu0s { unsigned short v1:1; unsigned short v2; unsigned short :0; };
struct BFu1s_Vp_BFu0c { unsigned short v1:1; void * v2; unsigned char :0; };
struct BFu1s_Vp_BFu0i { unsigned short v1:1; void * v2; unsigned int :0; };
struct BFu1s_Vp_BFu0ll { unsigned short v1:1; void * v2; unsigned long long :0; };
struct BFu1s_Vp_BFu0s { unsigned short v1:1; void * v2; unsigned short :0; };
struct BFu31i_BFu0c { unsigned int v1:31; unsigned char :0; };
struct BFu31i_BFu0c_BFu0c { unsigned int v1:31; unsigned char :0; unsigned char :0; };
struct BFu31i_BFu0c_BFu0i { unsigned int v1:31; unsigned char :0; unsigned int :0; };
struct BFu31i_BFu0c_BFu0ll { unsigned int v1:31; unsigned char :0; unsigned long long :0; };
struct BFu31i_BFu0c_BFu0s { unsigned int v1:31; unsigned char :0; unsigned short :0; };
struct BFu31i_BFu0c_BFu15i { unsigned int v1:31; unsigned char :0; unsigned int v2:15; };
struct BFu31i_BFu0c_BFu15ll { unsigned int v1:31; unsigned char :0; unsigned long long v2:15; };
struct BFu31i_BFu0c_BFu15s { unsigned int v1:31; unsigned char :0; unsigned short v2:15; };
struct BFu31i_BFu0c_BFu16i { unsigned int v1:31; unsigned char :0; unsigned int v2:16; };
struct BFu31i_BFu0c_BFu16ll { unsigned int v1:31; unsigned char :0; unsigned long long v2:16; };
struct BFu31i_BFu0c_BFu16s { unsigned int v1:31; unsigned char :0; unsigned short v2:16; };
struct BFu31i_BFu0c_BFu17i { unsigned int v1:31; unsigned char :0; unsigned int v2:17; };
struct BFu31i_BFu0c_BFu17ll { unsigned int v1:31; unsigned char :0; unsigned long long v2:17; };
struct BFu31i_BFu0c_BFu1c { unsigned int v1:31; unsigned char :0; unsigned char v2:1; };
struct BFu31i_BFu0c_BFu1i { unsigned int v1:31; unsigned char :0; unsigned int v2:1; };
struct BFu31i_BFu0c_BFu1ll { unsigned int v1:31; unsigned char :0; unsigned long long v2:1; };
struct BFu31i_BFu0c_BFu1s { unsigned int v1:31; unsigned char :0; unsigned short v2:1; };
struct BFu31i_BFu0c_BFu31i { unsigned int v1:31; unsigned char :0; unsigned int v2:31; };
struct BFu31i_BFu0c_BFu31ll { unsigned int v1:31; unsigned char :0; unsigned long long v2:31; };
struct BFu31i_BFu0c_BFu32i { unsigned int v1:31; unsigned char :0; unsigned int v2:32; };
struct BFu31i_BFu0c_BFu32ll { unsigned int v1:31; unsigned char :0; unsigned long long v2:32; };
struct BFu31i_BFu0c_BFu33 { unsigned int v1:31; unsigned char :0; unsigned long long v2:33; };
struct BFu31i_BFu0c_BFu7c { unsigned int v1:31; unsigned char :0; unsigned char v2:7; };
struct BFu31i_BFu0c_BFu7i { unsigned int v1:31; unsigned char :0; unsigned int v2:7; };
struct BFu31i_BFu0c_BFu7ll { unsigned int v1:31; unsigned char :0; unsigned long long v2:7; };
struct BFu31i_BFu0c_BFu7s { unsigned int v1:31; unsigned char :0; unsigned short v2:7; };
struct BFu31i_BFu0c_BFu8c { unsigned int v1:31; unsigned char :0; unsigned char v2:8; };
struct BFu31i_BFu0c_BFu8i { unsigned int v1:31; unsigned char :0; unsigned int v2:8; };
struct BFu31i_BFu0c_BFu8ll { unsigned int v1:31; unsigned char :0; unsigned long long v2:8; };
struct BFu31i_BFu0c_BFu8s { unsigned int v1:31; unsigned char :0; unsigned short v2:8; };
struct BFu31i_BFu0c_BFu9i { unsigned int v1:31; unsigned char :0; unsigned int v2:9; };
struct BFu31i_BFu0c_BFu9ll { unsigned int v1:31; unsigned char :0; unsigned long long v2:9; };
struct BFu31i_BFu0c_BFu9s { unsigned int v1:31; unsigned char :0; unsigned short v2:9; };
struct BFu31i_BFu0c_C { unsigned int v1:31; unsigned char :0; char v2; };
struct BFu31i_BFu0c_D { unsigned int v1:31; unsigned char :0; double v2; };
struct BFu31i_BFu0c_F { unsigned int v1:31; unsigned char :0; float v2; };
struct BFu31i_BFu0c_I { unsigned int v1:31; unsigned char :0; int v2; };
struct BFu31i_BFu0c_Ip { unsigned int v1:31; unsigned char :0; int * v2; };
struct BFu31i_BFu0c_L { unsigned int v1:31; unsigned char :0; long long v2; };
struct BFu31i_BFu0c_S { unsigned int v1:31; unsigned char :0; short v2; };
struct BFu31i_BFu0c_Uc { unsigned int v1:31; unsigned char :0; unsigned char v2; };
struct BFu31i_BFu0c_Ui { unsigned int v1:31; unsigned char :0; unsigned int v2; };
struct BFu31i_BFu0c_Ul { unsigned int v1:31; unsigned char :0; unsigned long long v2; };
struct BFu31i_BFu0c_Us { unsigned int v1:31; unsigned char :0; unsigned short v2; };
struct BFu31i_BFu0c_Vp { unsigned int v1:31; unsigned char :0; void * v2; };
struct BFu31i_BFu0i { unsigned int v1:31; unsigned int :0; };
struct BFu31i_BFu0i_BFu0c { unsigned int v1:31; unsigned int :0; unsigned char :0; };
struct BFu31i_BFu0i_BFu0i { unsigned int v1:31; unsigned int :0; unsigned int :0; };
struct BFu31i_BFu0i_BFu0ll { unsigned int v1:31; unsigned int :0; unsigned long long :0; };
struct BFu31i_BFu0i_BFu0s { unsigned int v1:31; unsigned int :0; unsigned short :0; };
struct BFu31i_BFu0i_BFu15i { unsigned int v1:31; unsigned int :0; unsigned int v2:15; };
struct BFu31i_BFu0i_BFu15ll { unsigned int v1:31; unsigned int :0; unsigned long long v2:15; };
struct BFu31i_BFu0i_BFu15s { unsigned int v1:31; unsigned int :0; unsigned short v2:15; };
struct BFu31i_BFu0i_BFu16i { unsigned int v1:31; unsigned int :0; unsigned int v2:16; };
struct BFu31i_BFu0i_BFu16ll { unsigned int v1:31; unsigned int :0; unsigned long long v2:16; };
struct BFu31i_BFu0i_BFu16s { unsigned int v1:31; unsigned int :0; unsigned short v2:16; };
struct BFu31i_BFu0i_BFu17i { unsigned int v1:31; unsigned int :0; unsigned int v2:17; };
struct BFu31i_BFu0i_BFu17ll { unsigned int v1:31; unsigned int :0; unsigned long long v2:17; };
struct BFu31i_BFu0i_BFu1c { unsigned int v1:31; unsigned int :0; unsigned char v2:1; };
struct BFu31i_BFu0i_BFu1i { unsigned int v1:31; unsigned int :0; unsigned int v2:1; };
struct BFu31i_BFu0i_BFu1ll { unsigned int v1:31; unsigned int :0; unsigned long long v2:1; };
struct BFu31i_BFu0i_BFu1s { unsigned int v1:31; unsigned int :0; unsigned short v2:1; };
struct BFu31i_BFu0i_BFu31i { unsigned int v1:31; unsigned int :0; unsigned int v2:31; };
struct BFu31i_BFu0i_BFu31ll { unsigned int v1:31; unsigned int :0; unsigned long long v2:31; };
struct BFu31i_BFu0i_BFu32i { unsigned int v1:31; unsigned int :0; unsigned int v2:32; };
struct BFu31i_BFu0i_BFu32ll { unsigned int v1:31; unsigned int :0; unsigned long long v2:32; };
struct BFu31i_BFu0i_BFu33 { unsigned int v1:31; unsigned int :0; unsigned long long v2:33; };
struct BFu31i_BFu0i_BFu7c { unsigned int v1:31; unsigned int :0; unsigned char v2:7; };
struct BFu31i_BFu0i_BFu7i { unsigned int v1:31; unsigned int :0; unsigned int v2:7; };
struct BFu31i_BFu0i_BFu7ll { unsigned int v1:31; unsigned int :0; unsigned long long v2:7; };
struct BFu31i_BFu0i_BFu7s { unsigned int v1:31; unsigned int :0; unsigned short v2:7; };
struct BFu31i_BFu0i_BFu8c { unsigned int v1:31; unsigned int :0; unsigned char v2:8; };
struct BFu31i_BFu0i_BFu8i { unsigned int v1:31; unsigned int :0; unsigned int v2:8; };
struct BFu31i_BFu0i_BFu8ll { unsigned int v1:31; unsigned int :0; unsigned long long v2:8; };
struct BFu31i_BFu0i_BFu8s { unsigned int v1:31; unsigned int :0; unsigned short v2:8; };
struct BFu31i_BFu0i_BFu9i { unsigned int v1:31; unsigned int :0; unsigned int v2:9; };
struct BFu31i_BFu0i_BFu9ll { unsigned int v1:31; unsigned int :0; unsigned long long v2:9; };
struct BFu31i_BFu0i_BFu9s { unsigned int v1:31; unsigned int :0; unsigned short v2:9; };
struct BFu31i_BFu0i_C { unsigned int v1:31; unsigned int :0; char v2; };
struct BFu31i_BFu0i_D { unsigned int v1:31; unsigned int :0; double v2; };
struct BFu31i_BFu0i_F { unsigned int v1:31; unsigned int :0; float v2; };
struct BFu31i_BFu0i_I { unsigned int v1:31; unsigned int :0; int v2; };
struct BFu31i_BFu0i_Ip { unsigned int v1:31; unsigned int :0; int * v2; };
struct BFu31i_BFu0i_L { unsigned int v1:31; unsigned int :0; long long v2; };
struct BFu31i_BFu0i_S { unsigned int v1:31; unsigned int :0; short v2; };
struct BFu31i_BFu0i_Uc { unsigned int v1:31; unsigned int :0; unsigned char v2; };
struct BFu31i_BFu0i_Ui { unsigned int v1:31; unsigned int :0; unsigned int v2; };
struct BFu31i_BFu0i_Ul { unsigned int v1:31; unsigned int :0; unsigned long long v2; };
struct BFu31i_BFu0i_Us { unsigned int v1:31; unsigned int :0; unsigned short v2; };
struct BFu31i_BFu0i_Vp { unsigned int v1:31; unsigned int :0; void * v2; };
struct BFu31i_BFu0ll { unsigned int v1:31; unsigned long long :0; };
struct BFu31i_BFu0ll_BFu0c { unsigned int v1:31; unsigned long long :0; unsigned char :0; };
struct BFu31i_BFu0ll_BFu0i { unsigned int v1:31; unsigned long long :0; unsigned int :0; };
struct BFu31i_BFu0ll_BFu0ll { unsigned int v1:31; unsigned long long :0; unsigned long long :0; };
struct BFu31i_BFu0ll_BFu0s { unsigned int v1:31; unsigned long long :0; unsigned short :0; };
struct BFu31i_BFu0ll_BFu15i { unsigned int v1:31; unsigned long long :0; unsigned int v2:15; };
struct BFu31i_BFu0ll_BFu15ll { unsigned int v1:31; unsigned long long :0; unsigned long long v2:15; };
struct BFu31i_BFu0ll_BFu15s { unsigned int v1:31; unsigned long long :0; unsigned short v2:15; };
struct BFu31i_BFu0ll_BFu16i { unsigned int v1:31; unsigned long long :0; unsigned int v2:16; };
struct BFu31i_BFu0ll_BFu16ll { unsigned int v1:31; unsigned long long :0; unsigned long long v2:16; };
struct BFu31i_BFu0ll_BFu16s { unsigned int v1:31; unsigned long long :0; unsigned short v2:16; };
struct BFu31i_BFu0ll_BFu17i { unsigned int v1:31; unsigned long long :0; unsigned int v2:17; };
struct BFu31i_BFu0ll_BFu17ll { unsigned int v1:31; unsigned long long :0; unsigned long long v2:17; };
struct BFu31i_BFu0ll_BFu1c { unsigned int v1:31; unsigned long long :0; unsigned char v2:1; };
struct BFu31i_BFu0ll_BFu1i { unsigned int v1:31; unsigned long long :0; unsigned int v2:1; };
struct BFu31i_BFu0ll_BFu1ll { unsigned int v1:31; unsigned long long :0; unsigned long long v2:1; };
struct BFu31i_BFu0ll_BFu1s { unsigned int v1:31; unsigned long long :0; unsigned short v2:1; };
struct BFu31i_BFu0ll_BFu31i { unsigned int v1:31; unsigned long long :0; unsigned int v2:31; };
struct BFu31i_BFu0ll_BFu31ll { unsigned int v1:31; unsigned long long :0; unsigned long long v2:31; };
struct BFu31i_BFu0ll_BFu32i { unsigned int v1:31; unsigned long long :0; unsigned int v2:32; };
struct BFu31i_BFu0ll_BFu32ll { unsigned int v1:31; unsigned long long :0; unsigned long long v2:32; };
struct BFu31i_BFu0ll_BFu33 { unsigned int v1:31; unsigned long long :0; unsigned long long v2:33; };
struct BFu31i_BFu0ll_BFu7c { unsigned int v1:31; unsigned long long :0; unsigned char v2:7; };
struct BFu31i_BFu0ll_BFu7i { unsigned int v1:31; unsigned long long :0; unsigned int v2:7; };
struct BFu31i_BFu0ll_BFu7ll { unsigned int v1:31; unsigned long long :0; unsigned long long v2:7; };
struct BFu31i_BFu0ll_BFu7s { unsigned int v1:31; unsigned long long :0; unsigned short v2:7; };
struct BFu31i_BFu0ll_BFu8c { unsigned int v1:31; unsigned long long :0; unsigned char v2:8; };
struct BFu31i_BFu0ll_BFu8i { unsigned int v1:31; unsigned long long :0; unsigned int v2:8; };
struct BFu31i_BFu0ll_BFu8ll { unsigned int v1:31; unsigned long long :0; unsigned long long v2:8; };
struct BFu31i_BFu0ll_BFu8s { unsigned int v1:31; unsigned long long :0; unsigned short v2:8; };
struct BFu31i_BFu0ll_BFu9i { unsigned int v1:31; unsigned long long :0; unsigned int v2:9; };
struct BFu31i_BFu0ll_BFu9ll { unsigned int v1:31; unsigned long long :0; unsigned long long v2:9; };
struct BFu31i_BFu0ll_BFu9s { unsigned int v1:31; unsigned long long :0; unsigned short v2:9; };
struct BFu31i_BFu0ll_C { unsigned int v1:31; unsigned long long :0; char v2; };
struct BFu31i_BFu0ll_D { unsigned int v1:31; unsigned long long :0; double v2; };
struct BFu31i_BFu0ll_F { unsigned int v1:31; unsigned long long :0; float v2; };
struct BFu31i_BFu0ll_I { unsigned int v1:31; unsigned long long :0; int v2; };
struct BFu31i_BFu0ll_Ip { unsigned int v1:31; unsigned long long :0; int * v2; };
struct BFu31i_BFu0ll_L { unsigned int v1:31; unsigned long long :0; long long v2; };
struct BFu31i_BFu0ll_S { unsigned int v1:31; unsigned long long :0; short v2; };
struct BFu31i_BFu0ll_Uc { unsigned int v1:31; unsigned long long :0; unsigned char v2; };
struct BFu31i_BFu0ll_Ui { unsigned int v1:31; unsigned long long :0; unsigned int v2; };
struct BFu31i_BFu0ll_Ul { unsigned int v1:31; unsigned long long :0; unsigned long long v2; };
struct BFu31i_BFu0ll_Us { unsigned int v1:31; unsigned long long :0; unsigned short v2; };
struct BFu31i_BFu0ll_Vp { unsigned int v1:31; unsigned long long :0; void * v2; };
struct BFu31i_BFu0s { unsigned int v1:31; unsigned short :0; };
struct BFu31i_BFu0s_BFu0c { unsigned int v1:31; unsigned short :0; unsigned char :0; };
struct BFu31i_BFu0s_BFu0i { unsigned int v1:31; unsigned short :0; unsigned int :0; };
struct BFu31i_BFu0s_BFu0ll { unsigned int v1:31; unsigned short :0; unsigned long long :0; };
struct BFu31i_BFu0s_BFu0s { unsigned int v1:31; unsigned short :0; unsigned short :0; };
struct BFu31i_BFu0s_BFu15i { unsigned int v1:31; unsigned short :0; unsigned int v2:15; };
struct BFu31i_BFu0s_BFu15ll { unsigned int v1:31; unsigned short :0; unsigned long long v2:15; };
struct BFu31i_BFu0s_BFu15s { unsigned int v1:31; unsigned short :0; unsigned short v2:15; };
struct BFu31i_BFu0s_BFu16i { unsigned int v1:31; unsigned short :0; unsigned int v2:16; };
struct BFu31i_BFu0s_BFu16ll { unsigned int v1:31; unsigned short :0; unsigned long long v2:16; };
struct BFu31i_BFu0s_BFu16s { unsigned int v1:31; unsigned short :0; unsigned short v2:16; };
struct BFu31i_BFu0s_BFu17i { unsigned int v1:31; unsigned short :0; unsigned int v2:17; };
struct BFu31i_BFu0s_BFu17ll { unsigned int v1:31; unsigned short :0; unsigned long long v2:17; };
struct BFu31i_BFu0s_BFu1c { unsigned int v1:31; unsigned short :0; unsigned char v2:1; };
struct BFu31i_BFu0s_BFu1i { unsigned int v1:31; unsigned short :0; unsigned int v2:1; };
struct BFu31i_BFu0s_BFu1ll { unsigned int v1:31; unsigned short :0; unsigned long long v2:1; };
struct BFu31i_BFu0s_BFu1s { unsigned int v1:31; unsigned short :0; unsigned short v2:1; };
struct BFu31i_BFu0s_BFu31i { unsigned int v1:31; unsigned short :0; unsigned int v2:31; };
struct BFu31i_BFu0s_BFu31ll { unsigned int v1:31; unsigned short :0; unsigned long long v2:31; };
struct BFu31i_BFu0s_BFu32i { unsigned int v1:31; unsigned short :0; unsigned int v2:32; };
struct BFu31i_BFu0s_BFu32ll { unsigned int v1:31; unsigned short :0; unsigned long long v2:32; };
struct BFu31i_BFu0s_BFu33 { unsigned int v1:31; unsigned short :0; unsigned long long v2:33; };
struct BFu31i_BFu0s_BFu7c { unsigned int v1:31; unsigned short :0; unsigned char v2:7; };
struct BFu31i_BFu0s_BFu7i { unsigned int v1:31; unsigned short :0; unsigned int v2:7; };
struct BFu31i_BFu0s_BFu7ll { unsigned int v1:31; unsigned short :0; unsigned long long v2:7; };
struct BFu31i_BFu0s_BFu7s { unsigned int v1:31; unsigned short :0; unsigned short v2:7; };
struct BFu31i_BFu0s_BFu8c { unsigned int v1:31; unsigned short :0; unsigned char v2:8; };
struct BFu31i_BFu0s_BFu8i { unsigned int v1:31; unsigned short :0; unsigned int v2:8; };
struct BFu31i_BFu0s_BFu8ll { unsigned int v1:31; unsigned short :0; unsigned long long v2:8; };
struct BFu31i_BFu0s_BFu8s { unsigned int v1:31; unsigned short :0; unsigned short v2:8; };
struct BFu31i_BFu0s_BFu9i { unsigned int v1:31; unsigned short :0; unsigned int v2:9; };
struct BFu31i_BFu0s_BFu9ll { unsigned int v1:31; unsigned short :0; unsigned long long v2:9; };
struct BFu31i_BFu0s_BFu9s { unsigned int v1:31; unsigned short :0; unsigned short v2:9; };
struct BFu31i_BFu0s_C { unsigned int v1:31; unsigned short :0; char v2; };
struct BFu31i_BFu0s_D { unsigned int v1:31; unsigned short :0; double v2; };
struct BFu31i_BFu0s_F { unsigned int v1:31; unsigned short :0; float v2; };
struct BFu31i_BFu0s_I { unsigned int v1:31; unsigned short :0; int v2; };
struct BFu31i_BFu0s_Ip { unsigned int v1:31; unsigned short :0; int * v2; };
struct BFu31i_BFu0s_L { unsigned int v1:31; unsigned short :0; long long v2; };
struct BFu31i_BFu0s_S { unsigned int v1:31; unsigned short :0; short v2; };
struct BFu31i_BFu0s_Uc { unsigned int v1:31; unsigned short :0; unsigned char v2; };
struct BFu31i_BFu0s_Ui { unsigned int v1:31; unsigned short :0; unsigned int v2; };
struct BFu31i_BFu0s_Ul { unsigned int v1:31; unsigned short :0; unsigned long long v2; };
struct BFu31i_BFu0s_Us { unsigned int v1:31; unsigned short :0; unsigned short v2; };
struct BFu31i_BFu0s_Vp { unsigned int v1:31; unsigned short :0; void * v2; };
struct BFu31i_BFu15i_BFu0c { unsigned int v1:31; unsigned int v2:15; unsigned char :0; };
struct BFu31i_BFu15i_BFu0i { unsigned int v1:31; unsigned int v2:15; unsigned int :0; };
struct BFu31i_BFu15i_BFu0ll { unsigned int v1:31; unsigned int v2:15; unsigned long long :0; };
struct BFu31i_BFu15i_BFu0s { unsigned int v1:31; unsigned int v2:15; unsigned short :0; };
struct BFu31i_BFu15ll_BFu0c { unsigned int v1:31; unsigned long long v2:15; unsigned char :0; };
struct BFu31i_BFu15ll_BFu0i { unsigned int v1:31; unsigned long long v2:15; unsigned int :0; };
struct BFu31i_BFu15ll_BFu0ll { unsigned int v1:31; unsigned long long v2:15; unsigned long long :0; };
struct BFu31i_BFu15ll_BFu0s { unsigned int v1:31; unsigned long long v2:15; unsigned short :0; };
struct BFu31i_BFu15s_BFu0c { unsigned int v1:31; unsigned short v2:15; unsigned char :0; };
struct BFu31i_BFu15s_BFu0i { unsigned int v1:31; unsigned short v2:15; unsigned int :0; };
struct BFu31i_BFu15s_BFu0ll { unsigned int v1:31; unsigned short v2:15; unsigned long long :0; };
struct BFu31i_BFu15s_BFu0s { unsigned int v1:31; unsigned short v2:15; unsigned short :0; };
struct BFu31i_BFu16i_BFu0c { unsigned int v1:31; unsigned int v2:16; unsigned char :0; };
struct BFu31i_BFu16i_BFu0i { unsigned int v1:31; unsigned int v2:16; unsigned int :0; };
struct BFu31i_BFu16i_BFu0ll { unsigned int v1:31; unsigned int v2:16; unsigned long long :0; };
struct BFu31i_BFu16i_BFu0s { unsigned int v1:31; unsigned int v2:16; unsigned short :0; };
struct BFu31i_BFu16ll_BFu0c { unsigned int v1:31; unsigned long long v2:16; unsigned char :0; };
struct BFu31i_BFu16ll_BFu0i { unsigned int v1:31; unsigned long long v2:16; unsigned int :0; };
struct BFu31i_BFu16ll_BFu0ll { unsigned int v1:31; unsigned long long v2:16; unsigned long long :0; };
struct BFu31i_BFu16ll_BFu0s { unsigned int v1:31; unsigned long long v2:16; unsigned short :0; };
struct BFu31i_BFu16s_BFu0c { unsigned int v1:31; unsigned short v2:16; unsigned char :0; };
struct BFu31i_BFu16s_BFu0i { unsigned int v1:31; unsigned short v2:16; unsigned int :0; };
struct BFu31i_BFu16s_BFu0ll { unsigned int v1:31; unsigned short v2:16; unsigned long long :0; };
struct BFu31i_BFu16s_BFu0s { unsigned int v1:31; unsigned short v2:16; unsigned short :0; };
struct BFu31i_BFu17i_BFu0c { unsigned int v1:31; unsigned int v2:17; unsigned char :0; };
struct BFu31i_BFu17i_BFu0i { unsigned int v1:31; unsigned int v2:17; unsigned int :0; };
struct BFu31i_BFu17i_BFu0ll { unsigned int v1:31; unsigned int v2:17; unsigned long long :0; };
struct BFu31i_BFu17i_BFu0s { unsigned int v1:31; unsigned int v2:17; unsigned short :0; };
struct BFu31i_BFu17ll_BFu0c { unsigned int v1:31; unsigned long long v2:17; unsigned char :0; };
struct BFu31i_BFu17ll_BFu0i { unsigned int v1:31; unsigned long long v2:17; unsigned int :0; };
struct BFu31i_BFu17ll_BFu0ll { unsigned int v1:31; unsigned long long v2:17; unsigned long long :0; };
struct BFu31i_BFu17ll_BFu0s { unsigned int v1:31; unsigned long long v2:17; unsigned short :0; };
struct BFu31i_BFu1c_BFu0c { unsigned int v1:31; unsigned char v2:1; unsigned char :0; };
struct BFu31i_BFu1c_BFu0i { unsigned int v1:31; unsigned char v2:1; unsigned int :0; };
struct BFu31i_BFu1c_BFu0ll { unsigned int v1:31; unsigned char v2:1; unsigned long long :0; };
struct BFu31i_BFu1c_BFu0s { unsigned int v1:31; unsigned char v2:1; unsigned short :0; };
struct BFu31i_BFu1i_BFu0c { unsigned int v1:31; unsigned int v2:1; unsigned char :0; };
struct BFu31i_BFu1i_BFu0i { unsigned int v1:31; unsigned int v2:1; unsigned int :0; };
struct BFu31i_BFu1i_BFu0ll { unsigned int v1:31; unsigned int v2:1; unsigned long long :0; };
struct BFu31i_BFu1i_BFu0s { unsigned int v1:31; unsigned int v2:1; unsigned short :0; };
struct BFu31i_BFu1ll_BFu0c { unsigned int v1:31; unsigned long long v2:1; unsigned char :0; };
struct BFu31i_BFu1ll_BFu0i { unsigned int v1:31; unsigned long long v2:1; unsigned int :0; };
struct BFu31i_BFu1ll_BFu0ll { unsigned int v1:31; unsigned long long v2:1; unsigned long long :0; };
struct BFu31i_BFu1ll_BFu0s { unsigned int v1:31; unsigned long long v2:1; unsigned short :0; };
struct BFu31i_BFu1s_BFu0c { unsigned int v1:31; unsigned short v2:1; unsigned char :0; };
struct BFu31i_BFu1s_BFu0i { unsigned int v1:31; unsigned short v2:1; unsigned int :0; };
struct BFu31i_BFu1s_BFu0ll { unsigned int v1:31; unsigned short v2:1; unsigned long long :0; };
struct BFu31i_BFu1s_BFu0s { unsigned int v1:31; unsigned short v2:1; unsigned short :0; };
struct BFu31i_BFu31i_BFu0c { unsigned int v1:31; unsigned int v2:31; unsigned char :0; };
struct BFu31i_BFu31i_BFu0i { unsigned int v1:31; unsigned int v2:31; unsigned int :0; };
struct BFu31i_BFu31i_BFu0ll { unsigned int v1:31; unsigned int v2:31; unsigned long long :0; };
struct BFu31i_BFu31i_BFu0s { unsigned int v1:31; unsigned int v2:31; unsigned short :0; };
struct BFu31i_BFu31ll_BFu0c { unsigned int v1:31; unsigned long long v2:31; unsigned char :0; };
struct BFu31i_BFu31ll_BFu0i { unsigned int v1:31; unsigned long long v2:31; unsigned int :0; };
struct BFu31i_BFu31ll_BFu0ll { unsigned int v1:31; unsigned long long v2:31; unsigned long long :0; };
struct BFu31i_BFu31ll_BFu0s { unsigned int v1:31; unsigned long long v2:31; unsigned short :0; };
struct BFu31i_BFu32i_BFu0c { unsigned int v1:31; unsigned int v2:32; unsigned char :0; };
struct BFu31i_BFu32i_BFu0i { unsigned int v1:31; unsigned int v2:32; unsigned int :0; };
struct BFu31i_BFu32i_BFu0ll { unsigned int v1:31; unsigned int v2:32; unsigned long long :0; };
struct BFu31i_BFu32i_BFu0s { unsigned int v1:31; unsigned int v2:32; unsigned short :0; };
struct BFu31i_BFu32ll_BFu0c { unsigned int v1:31; unsigned long long v2:32; unsigned char :0; };
struct BFu31i_BFu32ll_BFu0i { unsigned int v1:31; unsigned long long v2:32; unsigned int :0; };
struct BFu31i_BFu32ll_BFu0ll { unsigned int v1:31; unsigned long long v2:32; unsigned long long :0; };
struct BFu31i_BFu32ll_BFu0s { unsigned int v1:31; unsigned long long v2:32; unsigned short :0; };
struct BFu31i_BFu33_BFu0c { unsigned int v1:31; unsigned long long v2:33; unsigned char :0; };
struct BFu31i_BFu33_BFu0i { unsigned int v1:31; unsigned long long v2:33; unsigned int :0; };
struct BFu31i_BFu33_BFu0ll { unsigned int v1:31; unsigned long long v2:33; unsigned long long :0; };
struct BFu31i_BFu33_BFu0s { unsigned int v1:31; unsigned long long v2:33; unsigned short :0; };
struct BFu31i_BFu7c_BFu0c { unsigned int v1:31; unsigned char v2:7; unsigned char :0; };
struct BFu31i_BFu7c_BFu0i { unsigned int v1:31; unsigned char v2:7; unsigned int :0; };
struct BFu31i_BFu7c_BFu0ll { unsigned int v1:31; unsigned char v2:7; unsigned long long :0; };
struct BFu31i_BFu7c_BFu0s { unsigned int v1:31; unsigned char v2:7; unsigned short :0; };
struct BFu31i_BFu7i_BFu0c { unsigned int v1:31; unsigned int v2:7; unsigned char :0; };
struct BFu31i_BFu7i_BFu0i { unsigned int v1:31; unsigned int v2:7; unsigned int :0; };
struct BFu31i_BFu7i_BFu0ll { unsigned int v1:31; unsigned int v2:7; unsigned long long :0; };
struct BFu31i_BFu7i_BFu0s { unsigned int v1:31; unsigned int v2:7; unsigned short :0; };
struct BFu31i_BFu7ll_BFu0c { unsigned int v1:31; unsigned long long v2:7; unsigned char :0; };
struct BFu31i_BFu7ll_BFu0i { unsigned int v1:31; unsigned long long v2:7; unsigned int :0; };
struct BFu31i_BFu7ll_BFu0ll { unsigned int v1:31; unsigned long long v2:7; unsigned long long :0; };
struct BFu31i_BFu7ll_BFu0s { unsigned int v1:31; unsigned long long v2:7; unsigned short :0; };
struct BFu31i_BFu7s_BFu0c { unsigned int v1:31; unsigned short v2:7; unsigned char :0; };
struct BFu31i_BFu7s_BFu0i { unsigned int v1:31; unsigned short v2:7; unsigned int :0; };
struct BFu31i_BFu7s_BFu0ll { unsigned int v1:31; unsigned short v2:7; unsigned long long :0; };
struct BFu31i_BFu7s_BFu0s { unsigned int v1:31; unsigned short v2:7; unsigned short :0; };
struct BFu31i_BFu8c_BFu0c { unsigned int v1:31; unsigned char v2:8; unsigned char :0; };
struct BFu31i_BFu8c_BFu0i { unsigned int v1:31; unsigned char v2:8; unsigned int :0; };
struct BFu31i_BFu8c_BFu0ll { unsigned int v1:31; unsigned char v2:8; unsigned long long :0; };
struct BFu31i_BFu8c_BFu0s { unsigned int v1:31; unsigned char v2:8; unsigned short :0; };
struct BFu31i_BFu8i_BFu0c { unsigned int v1:31; unsigned int v2:8; unsigned char :0; };
struct BFu31i_BFu8i_BFu0i { unsigned int v1:31; unsigned int v2:8; unsigned int :0; };
struct BFu31i_BFu8i_BFu0ll { unsigned int v1:31; unsigned int v2:8; unsigned long long :0; };
struct BFu31i_BFu8i_BFu0s { unsigned int v1:31; unsigned int v2:8; unsigned short :0; };
struct BFu31i_BFu8ll_BFu0c { unsigned int v1:31; unsigned long long v2:8; unsigned char :0; };
struct BFu31i_BFu8ll_BFu0i { unsigned int v1:31; unsigned long long v2:8; unsigned int :0; };
struct BFu31i_BFu8ll_BFu0ll { unsigned int v1:31; unsigned long long v2:8; unsigned long long :0; };
struct BFu31i_BFu8ll_BFu0s { unsigned int v1:31; unsigned long long v2:8; unsigned short :0; };
struct BFu31i_BFu8s_BFu0c { unsigned int v1:31; unsigned short v2:8; unsigned char :0; };
struct BFu31i_BFu8s_BFu0i { unsigned int v1:31; unsigned short v2:8; unsigned int :0; };
struct BFu31i_BFu8s_BFu0ll { unsigned int v1:31; unsigned short v2:8; unsigned long long :0; };
struct BFu31i_BFu8s_BFu0s { unsigned int v1:31; unsigned short v2:8; unsigned short :0; };
struct BFu31i_BFu9i_BFu0c { unsigned int v1:31; unsigned int v2:9; unsigned char :0; };
struct BFu31i_BFu9i_BFu0i { unsigned int v1:31; unsigned int v2:9; unsigned int :0; };
struct BFu31i_BFu9i_BFu0ll { unsigned int v1:31; unsigned int v2:9; unsigned long long :0; };
struct BFu31i_BFu9i_BFu0s { unsigned int v1:31; unsigned int v2:9; unsigned short :0; };
struct BFu31i_BFu9ll_BFu0c { unsigned int v1:31; unsigned long long v2:9; unsigned char :0; };
struct BFu31i_BFu9ll_BFu0i { unsigned int v1:31; unsigned long long v2:9; unsigned int :0; };
struct BFu31i_BFu9ll_BFu0ll { unsigned int v1:31; unsigned long long v2:9; unsigned long long :0; };
struct BFu31i_BFu9ll_BFu0s { unsigned int v1:31; unsigned long long v2:9; unsigned short :0; };
struct BFu31i_BFu9s_BFu0c { unsigned int v1:31; unsigned short v2:9; unsigned char :0; };
struct BFu31i_BFu9s_BFu0i { unsigned int v1:31; unsigned short v2:9; unsigned int :0; };
struct BFu31i_BFu9s_BFu0ll { unsigned int v1:31; unsigned short v2:9; unsigned long long :0; };
struct BFu31i_BFu9s_BFu0s { unsigned int v1:31; unsigned short v2:9; unsigned short :0; };
struct BFu31i_C_BFu0c { unsigned int v1:31; char v2; unsigned char :0; };
struct BFu31i_C_BFu0i { unsigned int v1:31; char v2; unsigned int :0; };
struct BFu31i_C_BFu0ll { unsigned int v1:31; char v2; unsigned long long :0; };
struct BFu31i_C_BFu0s { unsigned int v1:31; char v2; unsigned short :0; };
struct BFu31i_D_BFu0c { unsigned int v1:31; double v2; unsigned char :0; };
struct BFu31i_D_BFu0i { unsigned int v1:31; double v2; unsigned int :0; };
struct BFu31i_D_BFu0ll { unsigned int v1:31; double v2; unsigned long long :0; };
struct BFu31i_D_BFu0s { unsigned int v1:31; double v2; unsigned short :0; };
struct BFu31i_F_BFu0c { unsigned int v1:31; float v2; unsigned char :0; };
struct BFu31i_F_BFu0i { unsigned int v1:31; float v2; unsigned int :0; };
struct BFu31i_F_BFu0ll { unsigned int v1:31; float v2; unsigned long long :0; };
struct BFu31i_F_BFu0s { unsigned int v1:31; float v2; unsigned short :0; };
struct BFu31i_I_BFu0c { unsigned int v1:31; int v2; unsigned char :0; };
struct BFu31i_I_BFu0i { unsigned int v1:31; int v2; unsigned int :0; };
struct BFu31i_I_BFu0ll { unsigned int v1:31; int v2; unsigned long long :0; };
struct BFu31i_I_BFu0s { unsigned int v1:31; int v2; unsigned short :0; };
struct BFu31i_Ip_BFu0c { unsigned int v1:31; int * v2; unsigned char :0; };
struct BFu31i_Ip_BFu0i { unsigned int v1:31; int * v2; unsigned int :0; };
struct BFu31i_Ip_BFu0ll { unsigned int v1:31; int * v2; unsigned long long :0; };
struct BFu31i_Ip_BFu0s { unsigned int v1:31; int * v2; unsigned short :0; };
struct BFu31i_L_BFu0c { unsigned int v1:31; long long v2; unsigned char :0; };
struct BFu31i_L_BFu0i { unsigned int v1:31; long long v2; unsigned int :0; };
struct BFu31i_L_BFu0ll { unsigned int v1:31; long long v2; unsigned long long :0; };
struct BFu31i_L_BFu0s { unsigned int v1:31; long long v2; unsigned short :0; };
struct BFu31i_S_BFu0c { unsigned int v1:31; short v2; unsigned char :0; };
struct BFu31i_S_BFu0i { unsigned int v1:31; short v2; unsigned int :0; };
struct BFu31i_S_BFu0ll { unsigned int v1:31; short v2; unsigned long long :0; };
struct BFu31i_S_BFu0s { unsigned int v1:31; short v2; unsigned short :0; };
struct BFu31i_Uc_BFu0c { unsigned int v1:31; unsigned char v2; unsigned char :0; };
struct BFu31i_Uc_BFu0i { unsigned int v1:31; unsigned char v2; unsigned int :0; };
struct BFu31i_Uc_BFu0ll { unsigned int v1:31; unsigned char v2; unsigned long long :0; };
struct BFu31i_Uc_BFu0s { unsigned int v1:31; unsigned char v2; unsigned short :0; };
struct BFu31i_Ui_BFu0c { unsigned int v1:31; unsigned int v2; unsigned char :0; };
struct BFu31i_Ui_BFu0i { unsigned int v1:31; unsigned int v2; unsigned int :0; };
struct BFu31i_Ui_BFu0ll { unsigned int v1:31; unsigned int v2; unsigned long long :0; };
struct BFu31i_Ui_BFu0s { unsigned int v1:31; unsigned int v2; unsigned short :0; };
struct BFu31i_Ul_BFu0c { unsigned int v1:31; unsigned long long v2; unsigned char :0; };
struct BFu31i_Ul_BFu0i { unsigned int v1:31; unsigned long long v2; unsigned int :0; };
struct BFu31i_Ul_BFu0ll { unsigned int v1:31; unsigned long long v2; unsigned long long :0; };
struct BFu31i_Ul_BFu0s { unsigned int v1:31; unsigned long long v2; unsigned short :0; };
struct BFu31i_Us_BFu0c { unsigned int v1:31; unsigned short v2; unsigned char :0; };
struct BFu31i_Us_BFu0i { unsigned int v1:31; unsigned short v2; unsigned int :0; };
struct BFu31i_Us_BFu0ll { unsigned int v1:31; unsigned short v2; unsigned long long :0; };
struct BFu31i_Us_BFu0s { unsigned int v1:31; unsigned short v2; unsigned short :0; };
struct BFu31i_Vp_BFu0c { unsigned int v1:31; void * v2; unsigned char :0; };
struct BFu31i_Vp_BFu0i { unsigned int v1:31; void * v2; unsigned int :0; };
struct BFu31i_Vp_BFu0ll { unsigned int v1:31; void * v2; unsigned long long :0; };
struct BFu31i_Vp_BFu0s { unsigned int v1:31; void * v2; unsigned short :0; };
struct BFu31ll_BFu0c { unsigned long long v1:31; unsigned char :0; };
struct BFu31ll_BFu0c_BFu0c { unsigned long long v1:31; unsigned char :0; unsigned char :0; };
struct BFu31ll_BFu0c_BFu0i { unsigned long long v1:31; unsigned char :0; unsigned int :0; };
struct BFu31ll_BFu0c_BFu0ll { unsigned long long v1:31; unsigned char :0; unsigned long long :0; };
struct BFu31ll_BFu0c_BFu0s { unsigned long long v1:31; unsigned char :0; unsigned short :0; };
struct BFu31ll_BFu0c_BFu15i { unsigned long long v1:31; unsigned char :0; unsigned int v2:15; };
struct BFu31ll_BFu0c_BFu15ll { unsigned long long v1:31; unsigned char :0; unsigned long long v2:15; };
struct BFu31ll_BFu0c_BFu15s { unsigned long long v1:31; unsigned char :0; unsigned short v2:15; };
struct BFu31ll_BFu0c_BFu16i { unsigned long long v1:31; unsigned char :0; unsigned int v2:16; };
struct BFu31ll_BFu0c_BFu16ll { unsigned long long v1:31; unsigned char :0; unsigned long long v2:16; };
struct BFu31ll_BFu0c_BFu16s { unsigned long long v1:31; unsigned char :0; unsigned short v2:16; };
struct BFu31ll_BFu0c_BFu17i { unsigned long long v1:31; unsigned char :0; unsigned int v2:17; };
struct BFu31ll_BFu0c_BFu17ll { unsigned long long v1:31; unsigned char :0; unsigned long long v2:17; };
struct BFu31ll_BFu0c_BFu1c { unsigned long long v1:31; unsigned char :0; unsigned char v2:1; };
struct BFu31ll_BFu0c_BFu1i { unsigned long long v1:31; unsigned char :0; unsigned int v2:1; };
struct BFu31ll_BFu0c_BFu1ll { unsigned long long v1:31; unsigned char :0; unsigned long long v2:1; };
struct BFu31ll_BFu0c_BFu1s { unsigned long long v1:31; unsigned char :0; unsigned short v2:1; };
struct BFu31ll_BFu0c_BFu31i { unsigned long long v1:31; unsigned char :0; unsigned int v2:31; };
struct BFu31ll_BFu0c_BFu31ll { unsigned long long v1:31; unsigned char :0; unsigned long long v2:31; };
struct BFu31ll_BFu0c_BFu32i { unsigned long long v1:31; unsigned char :0; unsigned int v2:32; };
struct BFu31ll_BFu0c_BFu32ll { unsigned long long v1:31; unsigned char :0; unsigned long long v2:32; };
struct BFu31ll_BFu0c_BFu33 { unsigned long long v1:31; unsigned char :0; unsigned long long v2:33; };
struct BFu31ll_BFu0c_BFu7c { unsigned long long v1:31; unsigned char :0; unsigned char v2:7; };
struct BFu31ll_BFu0c_BFu7i { unsigned long long v1:31; unsigned char :0; unsigned int v2:7; };
struct BFu31ll_BFu0c_BFu7ll { unsigned long long v1:31; unsigned char :0; unsigned long long v2:7; };
struct BFu31ll_BFu0c_BFu7s { unsigned long long v1:31; unsigned char :0; unsigned short v2:7; };
struct BFu31ll_BFu0c_BFu8c { unsigned long long v1:31; unsigned char :0; unsigned char v2:8; };
struct BFu31ll_BFu0c_BFu8i { unsigned long long v1:31; unsigned char :0; unsigned int v2:8; };
struct BFu31ll_BFu0c_BFu8ll { unsigned long long v1:31; unsigned char :0; unsigned long long v2:8; };
struct BFu31ll_BFu0c_BFu8s { unsigned long long v1:31; unsigned char :0; unsigned short v2:8; };
struct BFu31ll_BFu0c_BFu9i { unsigned long long v1:31; unsigned char :0; unsigned int v2:9; };
struct BFu31ll_BFu0c_BFu9ll { unsigned long long v1:31; unsigned char :0; unsigned long long v2:9; };
struct BFu31ll_BFu0c_BFu9s { unsigned long long v1:31; unsigned char :0; unsigned short v2:9; };
struct BFu31ll_BFu0c_C { unsigned long long v1:31; unsigned char :0; char v2; };
struct BFu31ll_BFu0c_D { unsigned long long v1:31; unsigned char :0; double v2; };
struct BFu31ll_BFu0c_F { unsigned long long v1:31; unsigned char :0; float v2; };
struct BFu31ll_BFu0c_I { unsigned long long v1:31; unsigned char :0; int v2; };
struct BFu31ll_BFu0c_Ip { unsigned long long v1:31; unsigned char :0; int * v2; };
struct BFu31ll_BFu0c_L { unsigned long long v1:31; unsigned char :0; long long v2; };
struct BFu31ll_BFu0c_S { unsigned long long v1:31; unsigned char :0; short v2; };
struct BFu31ll_BFu0c_Uc { unsigned long long v1:31; unsigned char :0; unsigned char v2; };
struct BFu31ll_BFu0c_Ui { unsigned long long v1:31; unsigned char :0; unsigned int v2; };
struct BFu31ll_BFu0c_Ul { unsigned long long v1:31; unsigned char :0; unsigned long long v2; };
struct BFu31ll_BFu0c_Us { unsigned long long v1:31; unsigned char :0; unsigned short v2; };
struct BFu31ll_BFu0c_Vp { unsigned long long v1:31; unsigned char :0; void * v2; };
struct BFu31ll_BFu0i { unsigned long long v1:31; unsigned int :0; };
struct BFu31ll_BFu0i_BFu0c { unsigned long long v1:31; unsigned int :0; unsigned char :0; };
struct BFu31ll_BFu0i_BFu0i { unsigned long long v1:31; unsigned int :0; unsigned int :0; };
struct BFu31ll_BFu0i_BFu0ll { unsigned long long v1:31; unsigned int :0; unsigned long long :0; };
struct BFu31ll_BFu0i_BFu0s { unsigned long long v1:31; unsigned int :0; unsigned short :0; };
struct BFu31ll_BFu0i_BFu15i { unsigned long long v1:31; unsigned int :0; unsigned int v2:15; };
struct BFu31ll_BFu0i_BFu15ll { unsigned long long v1:31; unsigned int :0; unsigned long long v2:15; };
struct BFu31ll_BFu0i_BFu15s { unsigned long long v1:31; unsigned int :0; unsigned short v2:15; };
struct BFu31ll_BFu0i_BFu16i { unsigned long long v1:31; unsigned int :0; unsigned int v2:16; };
struct BFu31ll_BFu0i_BFu16ll { unsigned long long v1:31; unsigned int :0; unsigned long long v2:16; };
struct BFu31ll_BFu0i_BFu16s { unsigned long long v1:31; unsigned int :0; unsigned short v2:16; };
struct BFu31ll_BFu0i_BFu17i { unsigned long long v1:31; unsigned int :0; unsigned int v2:17; };
struct BFu31ll_BFu0i_BFu17ll { unsigned long long v1:31; unsigned int :0; unsigned long long v2:17; };
struct BFu31ll_BFu0i_BFu1c { unsigned long long v1:31; unsigned int :0; unsigned char v2:1; };
struct BFu31ll_BFu0i_BFu1i { unsigned long long v1:31; unsigned int :0; unsigned int v2:1; };
struct BFu31ll_BFu0i_BFu1ll { unsigned long long v1:31; unsigned int :0; unsigned long long v2:1; };
struct BFu31ll_BFu0i_BFu1s { unsigned long long v1:31; unsigned int :0; unsigned short v2:1; };
struct BFu31ll_BFu0i_BFu31i { unsigned long long v1:31; unsigned int :0; unsigned int v2:31; };
struct BFu31ll_BFu0i_BFu31ll { unsigned long long v1:31; unsigned int :0; unsigned long long v2:31; };
struct BFu31ll_BFu0i_BFu32i { unsigned long long v1:31; unsigned int :0; unsigned int v2:32; };
struct BFu31ll_BFu0i_BFu32ll { unsigned long long v1:31; unsigned int :0; unsigned long long v2:32; };
struct BFu31ll_BFu0i_BFu33 { unsigned long long v1:31; unsigned int :0; unsigned long long v2:33; };
struct BFu31ll_BFu0i_BFu7c { unsigned long long v1:31; unsigned int :0; unsigned char v2:7; };
struct BFu31ll_BFu0i_BFu7i { unsigned long long v1:31; unsigned int :0; unsigned int v2:7; };
struct BFu31ll_BFu0i_BFu7ll { unsigned long long v1:31; unsigned int :0; unsigned long long v2:7; };
struct BFu31ll_BFu0i_BFu7s { unsigned long long v1:31; unsigned int :0; unsigned short v2:7; };
struct BFu31ll_BFu0i_BFu8c { unsigned long long v1:31; unsigned int :0; unsigned char v2:8; };
struct BFu31ll_BFu0i_BFu8i { unsigned long long v1:31; unsigned int :0; unsigned int v2:8; };
struct BFu31ll_BFu0i_BFu8ll { unsigned long long v1:31; unsigned int :0; unsigned long long v2:8; };
struct BFu31ll_BFu0i_BFu8s { unsigned long long v1:31; unsigned int :0; unsigned short v2:8; };
struct BFu31ll_BFu0i_BFu9i { unsigned long long v1:31; unsigned int :0; unsigned int v2:9; };
struct BFu31ll_BFu0i_BFu9ll { unsigned long long v1:31; unsigned int :0; unsigned long long v2:9; };
struct BFu31ll_BFu0i_BFu9s { unsigned long long v1:31; unsigned int :0; unsigned short v2:9; };
struct BFu31ll_BFu0i_C { unsigned long long v1:31; unsigned int :0; char v2; };
struct BFu31ll_BFu0i_D { unsigned long long v1:31; unsigned int :0; double v2; };
struct BFu31ll_BFu0i_F { unsigned long long v1:31; unsigned int :0; float v2; };
struct BFu31ll_BFu0i_I { unsigned long long v1:31; unsigned int :0; int v2; };
struct BFu31ll_BFu0i_Ip { unsigned long long v1:31; unsigned int :0; int * v2; };
struct BFu31ll_BFu0i_L { unsigned long long v1:31; unsigned int :0; long long v2; };
struct BFu31ll_BFu0i_S { unsigned long long v1:31; unsigned int :0; short v2; };
struct BFu31ll_BFu0i_Uc { unsigned long long v1:31; unsigned int :0; unsigned char v2; };
struct BFu31ll_BFu0i_Ui { unsigned long long v1:31; unsigned int :0; unsigned int v2; };
struct BFu31ll_BFu0i_Ul { unsigned long long v1:31; unsigned int :0; unsigned long long v2; };
struct BFu31ll_BFu0i_Us { unsigned long long v1:31; unsigned int :0; unsigned short v2; };
struct BFu31ll_BFu0i_Vp { unsigned long long v1:31; unsigned int :0; void * v2; };
struct BFu31ll_BFu0ll { unsigned long long v1:31; unsigned long long :0; };
struct BFu31ll_BFu0ll_BFu0c { unsigned long long v1:31; unsigned long long :0; unsigned char :0; };
struct BFu31ll_BFu0ll_BFu0i { unsigned long long v1:31; unsigned long long :0; unsigned int :0; };
struct BFu31ll_BFu0ll_BFu0ll { unsigned long long v1:31; unsigned long long :0; unsigned long long :0; };
struct BFu31ll_BFu0ll_BFu0s { unsigned long long v1:31; unsigned long long :0; unsigned short :0; };
struct BFu31ll_BFu0ll_BFu15i { unsigned long long v1:31; unsigned long long :0; unsigned int v2:15; };
struct BFu31ll_BFu0ll_BFu15ll { unsigned long long v1:31; unsigned long long :0; unsigned long long v2:15; };
struct BFu31ll_BFu0ll_BFu15s { unsigned long long v1:31; unsigned long long :0; unsigned short v2:15; };
struct BFu31ll_BFu0ll_BFu16i { unsigned long long v1:31; unsigned long long :0; unsigned int v2:16; };
struct BFu31ll_BFu0ll_BFu16ll { unsigned long long v1:31; unsigned long long :0; unsigned long long v2:16; };
struct BFu31ll_BFu0ll_BFu16s { unsigned long long v1:31; unsigned long long :0; unsigned short v2:16; };
struct BFu31ll_BFu0ll_BFu17i { unsigned long long v1:31; unsigned long long :0; unsigned int v2:17; };
struct BFu31ll_BFu0ll_BFu17ll { unsigned long long v1:31; unsigned long long :0; unsigned long long v2:17; };
struct BFu31ll_BFu0ll_BFu1c { unsigned long long v1:31; unsigned long long :0; unsigned char v2:1; };
struct BFu31ll_BFu0ll_BFu1i { unsigned long long v1:31; unsigned long long :0; unsigned int v2:1; };
struct BFu31ll_BFu0ll_BFu1ll { unsigned long long v1:31; unsigned long long :0; unsigned long long v2:1; };
struct BFu31ll_BFu0ll_BFu1s { unsigned long long v1:31; unsigned long long :0; unsigned short v2:1; };
struct BFu31ll_BFu0ll_BFu31i { unsigned long long v1:31; unsigned long long :0; unsigned int v2:31; };
struct BFu31ll_BFu0ll_BFu31ll { unsigned long long v1:31; unsigned long long :0; unsigned long long v2:31; };
struct BFu31ll_BFu0ll_BFu32i { unsigned long long v1:31; unsigned long long :0; unsigned int v2:32; };
struct BFu31ll_BFu0ll_BFu32ll { unsigned long long v1:31; unsigned long long :0; unsigned long long v2:32; };
struct BFu31ll_BFu0ll_BFu33 { unsigned long long v1:31; unsigned long long :0; unsigned long long v2:33; };
struct BFu31ll_BFu0ll_BFu7c { unsigned long long v1:31; unsigned long long :0; unsigned char v2:7; };
struct BFu31ll_BFu0ll_BFu7i { unsigned long long v1:31; unsigned long long :0; unsigned int v2:7; };
struct BFu31ll_BFu0ll_BFu7ll { unsigned long long v1:31; unsigned long long :0; unsigned long long v2:7; };
struct BFu31ll_BFu0ll_BFu7s { unsigned long long v1:31; unsigned long long :0; unsigned short v2:7; };
struct BFu31ll_BFu0ll_BFu8c { unsigned long long v1:31; unsigned long long :0; unsigned char v2:8; };
struct BFu31ll_BFu0ll_BFu8i { unsigned long long v1:31; unsigned long long :0; unsigned int v2:8; };
struct BFu31ll_BFu0ll_BFu8ll { unsigned long long v1:31; unsigned long long :0; unsigned long long v2:8; };
struct BFu31ll_BFu0ll_BFu8s { unsigned long long v1:31; unsigned long long :0; unsigned short v2:8; };
struct BFu31ll_BFu0ll_BFu9i { unsigned long long v1:31; unsigned long long :0; unsigned int v2:9; };
struct BFu31ll_BFu0ll_BFu9ll { unsigned long long v1:31; unsigned long long :0; unsigned long long v2:9; };
struct BFu31ll_BFu0ll_BFu9s { unsigned long long v1:31; unsigned long long :0; unsigned short v2:9; };
struct BFu31ll_BFu0ll_C { unsigned long long v1:31; unsigned long long :0; char v2; };
struct BFu31ll_BFu0ll_D { unsigned long long v1:31; unsigned long long :0; double v2; };
struct BFu31ll_BFu0ll_F { unsigned long long v1:31; unsigned long long :0; float v2; };
struct BFu31ll_BFu0ll_I { unsigned long long v1:31; unsigned long long :0; int v2; };
struct BFu31ll_BFu0ll_Ip { unsigned long long v1:31; unsigned long long :0; int * v2; };
struct BFu31ll_BFu0ll_L { unsigned long long v1:31; unsigned long long :0; long long v2; };
struct BFu31ll_BFu0ll_S { unsigned long long v1:31; unsigned long long :0; short v2; };
struct BFu31ll_BFu0ll_Uc { unsigned long long v1:31; unsigned long long :0; unsigned char v2; };
struct BFu31ll_BFu0ll_Ui { unsigned long long v1:31; unsigned long long :0; unsigned int v2; };
struct BFu31ll_BFu0ll_Ul { unsigned long long v1:31; unsigned long long :0; unsigned long long v2; };
struct BFu31ll_BFu0ll_Us { unsigned long long v1:31; unsigned long long :0; unsigned short v2; };
struct BFu31ll_BFu0ll_Vp { unsigned long long v1:31; unsigned long long :0; void * v2; };
struct BFu31ll_BFu0s { unsigned long long v1:31; unsigned short :0; };
struct BFu31ll_BFu0s_BFu0c { unsigned long long v1:31; unsigned short :0; unsigned char :0; };
struct BFu31ll_BFu0s_BFu0i { unsigned long long v1:31; unsigned short :0; unsigned int :0; };
struct BFu31ll_BFu0s_BFu0ll { unsigned long long v1:31; unsigned short :0; unsigned long long :0; };
struct BFu31ll_BFu0s_BFu0s { unsigned long long v1:31; unsigned short :0; unsigned short :0; };
struct BFu31ll_BFu0s_BFu15i { unsigned long long v1:31; unsigned short :0; unsigned int v2:15; };
struct BFu31ll_BFu0s_BFu15ll { unsigned long long v1:31; unsigned short :0; unsigned long long v2:15; };
struct BFu31ll_BFu0s_BFu15s { unsigned long long v1:31; unsigned short :0; unsigned short v2:15; };
struct BFu31ll_BFu0s_BFu16i { unsigned long long v1:31; unsigned short :0; unsigned int v2:16; };
struct BFu31ll_BFu0s_BFu16ll { unsigned long long v1:31; unsigned short :0; unsigned long long v2:16; };
struct BFu31ll_BFu0s_BFu16s { unsigned long long v1:31; unsigned short :0; unsigned short v2:16; };
struct BFu31ll_BFu0s_BFu17i { unsigned long long v1:31; unsigned short :0; unsigned int v2:17; };
struct BFu31ll_BFu0s_BFu17ll { unsigned long long v1:31; unsigned short :0; unsigned long long v2:17; };
struct BFu31ll_BFu0s_BFu1c { unsigned long long v1:31; unsigned short :0; unsigned char v2:1; };
struct BFu31ll_BFu0s_BFu1i { unsigned long long v1:31; unsigned short :0; unsigned int v2:1; };
struct BFu31ll_BFu0s_BFu1ll { unsigned long long v1:31; unsigned short :0; unsigned long long v2:1; };
struct BFu31ll_BFu0s_BFu1s { unsigned long long v1:31; unsigned short :0; unsigned short v2:1; };
struct BFu31ll_BFu0s_BFu31i { unsigned long long v1:31; unsigned short :0; unsigned int v2:31; };
struct BFu31ll_BFu0s_BFu31ll { unsigned long long v1:31; unsigned short :0; unsigned long long v2:31; };
struct BFu31ll_BFu0s_BFu32i { unsigned long long v1:31; unsigned short :0; unsigned int v2:32; };
struct BFu31ll_BFu0s_BFu32ll { unsigned long long v1:31; unsigned short :0; unsigned long long v2:32; };
struct BFu31ll_BFu0s_BFu33 { unsigned long long v1:31; unsigned short :0; unsigned long long v2:33; };
struct BFu31ll_BFu0s_BFu7c { unsigned long long v1:31; unsigned short :0; unsigned char v2:7; };
struct BFu31ll_BFu0s_BFu7i { unsigned long long v1:31; unsigned short :0; unsigned int v2:7; };
struct BFu31ll_BFu0s_BFu7ll { unsigned long long v1:31; unsigned short :0; unsigned long long v2:7; };
struct BFu31ll_BFu0s_BFu7s { unsigned long long v1:31; unsigned short :0; unsigned short v2:7; };
struct BFu31ll_BFu0s_BFu8c { unsigned long long v1:31; unsigned short :0; unsigned char v2:8; };
struct BFu31ll_BFu0s_BFu8i { unsigned long long v1:31; unsigned short :0; unsigned int v2:8; };
struct BFu31ll_BFu0s_BFu8ll { unsigned long long v1:31; unsigned short :0; unsigned long long v2:8; };
struct BFu31ll_BFu0s_BFu8s { unsigned long long v1:31; unsigned short :0; unsigned short v2:8; };
struct BFu31ll_BFu0s_BFu9i { unsigned long long v1:31; unsigned short :0; unsigned int v2:9; };
struct BFu31ll_BFu0s_BFu9ll { unsigned long long v1:31; unsigned short :0; unsigned long long v2:9; };
struct BFu31ll_BFu0s_BFu9s { unsigned long long v1:31; unsigned short :0; unsigned short v2:9; };
struct BFu31ll_BFu0s_C { unsigned long long v1:31; unsigned short :0; char v2; };
struct BFu31ll_BFu0s_D { unsigned long long v1:31; unsigned short :0; double v2; };
struct BFu31ll_BFu0s_F { unsigned long long v1:31; unsigned short :0; float v2; };
struct BFu31ll_BFu0s_I { unsigned long long v1:31; unsigned short :0; int v2; };
struct BFu31ll_BFu0s_Ip { unsigned long long v1:31; unsigned short :0; int * v2; };
struct BFu31ll_BFu0s_L { unsigned long long v1:31; unsigned short :0; long long v2; };
struct BFu31ll_BFu0s_S { unsigned long long v1:31; unsigned short :0; short v2; };
struct BFu31ll_BFu0s_Uc { unsigned long long v1:31; unsigned short :0; unsigned char v2; };
struct BFu31ll_BFu0s_Ui { unsigned long long v1:31; unsigned short :0; unsigned int v2; };
struct BFu31ll_BFu0s_Ul { unsigned long long v1:31; unsigned short :0; unsigned long long v2; };
struct BFu31ll_BFu0s_Us { unsigned long long v1:31; unsigned short :0; unsigned short v2; };
struct BFu31ll_BFu0s_Vp { unsigned long long v1:31; unsigned short :0; void * v2; };
struct BFu31ll_BFu15i_BFu0c { unsigned long long v1:31; unsigned int v2:15; unsigned char :0; };
struct BFu31ll_BFu15i_BFu0i { unsigned long long v1:31; unsigned int v2:15; unsigned int :0; };
struct BFu31ll_BFu15i_BFu0ll { unsigned long long v1:31; unsigned int v2:15; unsigned long long :0; };
struct BFu31ll_BFu15i_BFu0s { unsigned long long v1:31; unsigned int v2:15; unsigned short :0; };
struct BFu31ll_BFu15ll_BFu0c { unsigned long long v1:31; unsigned long long v2:15; unsigned char :0; };
struct BFu31ll_BFu15ll_BFu0i { unsigned long long v1:31; unsigned long long v2:15; unsigned int :0; };
struct BFu31ll_BFu15ll_BFu0ll { unsigned long long v1:31; unsigned long long v2:15; unsigned long long :0; };
struct BFu31ll_BFu15ll_BFu0s { unsigned long long v1:31; unsigned long long v2:15; unsigned short :0; };
struct BFu31ll_BFu15s_BFu0c { unsigned long long v1:31; unsigned short v2:15; unsigned char :0; };
struct BFu31ll_BFu15s_BFu0i { unsigned long long v1:31; unsigned short v2:15; unsigned int :0; };
struct BFu31ll_BFu15s_BFu0ll { unsigned long long v1:31; unsigned short v2:15; unsigned long long :0; };
struct BFu31ll_BFu15s_BFu0s { unsigned long long v1:31; unsigned short v2:15; unsigned short :0; };
struct BFu31ll_BFu16i_BFu0c { unsigned long long v1:31; unsigned int v2:16; unsigned char :0; };
struct BFu31ll_BFu16i_BFu0i { unsigned long long v1:31; unsigned int v2:16; unsigned int :0; };
struct BFu31ll_BFu16i_BFu0ll { unsigned long long v1:31; unsigned int v2:16; unsigned long long :0; };
struct BFu31ll_BFu16i_BFu0s { unsigned long long v1:31; unsigned int v2:16; unsigned short :0; };
struct BFu31ll_BFu16ll_BFu0c { unsigned long long v1:31; unsigned long long v2:16; unsigned char :0; };
struct BFu31ll_BFu16ll_BFu0i { unsigned long long v1:31; unsigned long long v2:16; unsigned int :0; };
struct BFu31ll_BFu16ll_BFu0ll { unsigned long long v1:31; unsigned long long v2:16; unsigned long long :0; };
struct BFu31ll_BFu16ll_BFu0s { unsigned long long v1:31; unsigned long long v2:16; unsigned short :0; };
struct BFu31ll_BFu16s_BFu0c { unsigned long long v1:31; unsigned short v2:16; unsigned char :0; };
struct BFu31ll_BFu16s_BFu0i { unsigned long long v1:31; unsigned short v2:16; unsigned int :0; };
struct BFu31ll_BFu16s_BFu0ll { unsigned long long v1:31; unsigned short v2:16; unsigned long long :0; };
struct BFu31ll_BFu16s_BFu0s { unsigned long long v1:31; unsigned short v2:16; unsigned short :0; };
struct BFu31ll_BFu17i_BFu0c { unsigned long long v1:31; unsigned int v2:17; unsigned char :0; };
struct BFu31ll_BFu17i_BFu0i { unsigned long long v1:31; unsigned int v2:17; unsigned int :0; };
struct BFu31ll_BFu17i_BFu0ll { unsigned long long v1:31; unsigned int v2:17; unsigned long long :0; };
struct BFu31ll_BFu17i_BFu0s { unsigned long long v1:31; unsigned int v2:17; unsigned short :0; };
struct BFu31ll_BFu17ll_BFu0c { unsigned long long v1:31; unsigned long long v2:17; unsigned char :0; };
struct BFu31ll_BFu17ll_BFu0i { unsigned long long v1:31; unsigned long long v2:17; unsigned int :0; };
struct BFu31ll_BFu17ll_BFu0ll { unsigned long long v1:31; unsigned long long v2:17; unsigned long long :0; };
struct BFu31ll_BFu17ll_BFu0s { unsigned long long v1:31; unsigned long long v2:17; unsigned short :0; };
struct BFu31ll_BFu1c_BFu0c { unsigned long long v1:31; unsigned char v2:1; unsigned char :0; };
struct BFu31ll_BFu1c_BFu0i { unsigned long long v1:31; unsigned char v2:1; unsigned int :0; };
struct BFu31ll_BFu1c_BFu0ll { unsigned long long v1:31; unsigned char v2:1; unsigned long long :0; };
struct BFu31ll_BFu1c_BFu0s { unsigned long long v1:31; unsigned char v2:1; unsigned short :0; };
struct BFu31ll_BFu1i_BFu0c { unsigned long long v1:31; unsigned int v2:1; unsigned char :0; };
struct BFu31ll_BFu1i_BFu0i { unsigned long long v1:31; unsigned int v2:1; unsigned int :0; };
struct BFu31ll_BFu1i_BFu0ll { unsigned long long v1:31; unsigned int v2:1; unsigned long long :0; };
struct BFu31ll_BFu1i_BFu0s { unsigned long long v1:31; unsigned int v2:1; unsigned short :0; };
struct BFu31ll_BFu1ll_BFu0c { unsigned long long v1:31; unsigned long long v2:1; unsigned char :0; };
struct BFu31ll_BFu1ll_BFu0i { unsigned long long v1:31; unsigned long long v2:1; unsigned int :0; };
struct BFu31ll_BFu1ll_BFu0ll { unsigned long long v1:31; unsigned long long v2:1; unsigned long long :0; };
struct BFu31ll_BFu1ll_BFu0s { unsigned long long v1:31; unsigned long long v2:1; unsigned short :0; };
struct BFu31ll_BFu1s_BFu0c { unsigned long long v1:31; unsigned short v2:1; unsigned char :0; };
struct BFu31ll_BFu1s_BFu0i { unsigned long long v1:31; unsigned short v2:1; unsigned int :0; };
struct BFu31ll_BFu1s_BFu0ll { unsigned long long v1:31; unsigned short v2:1; unsigned long long :0; };
struct BFu31ll_BFu1s_BFu0s { unsigned long long v1:31; unsigned short v2:1; unsigned short :0; };
struct BFu31ll_BFu31i_BFu0c { unsigned long long v1:31; unsigned int v2:31; unsigned char :0; };
struct BFu31ll_BFu31i_BFu0i { unsigned long long v1:31; unsigned int v2:31; unsigned int :0; };
struct BFu31ll_BFu31i_BFu0ll { unsigned long long v1:31; unsigned int v2:31; unsigned long long :0; };
struct BFu31ll_BFu31i_BFu0s { unsigned long long v1:31; unsigned int v2:31; unsigned short :0; };
struct BFu31ll_BFu31ll_BFu0c { unsigned long long v1:31; unsigned long long v2:31; unsigned char :0; };
struct BFu31ll_BFu31ll_BFu0i { unsigned long long v1:31; unsigned long long v2:31; unsigned int :0; };
struct BFu31ll_BFu31ll_BFu0ll { unsigned long long v1:31; unsigned long long v2:31; unsigned long long :0; };
struct BFu31ll_BFu31ll_BFu0s { unsigned long long v1:31; unsigned long long v2:31; unsigned short :0; };
struct BFu31ll_BFu32i_BFu0c { unsigned long long v1:31; unsigned int v2:32; unsigned char :0; };
struct BFu31ll_BFu32i_BFu0i { unsigned long long v1:31; unsigned int v2:32; unsigned int :0; };
struct BFu31ll_BFu32i_BFu0ll { unsigned long long v1:31; unsigned int v2:32; unsigned long long :0; };
struct BFu31ll_BFu32i_BFu0s { unsigned long long v1:31; unsigned int v2:32; unsigned short :0; };
struct BFu31ll_BFu32ll_BFu0c { unsigned long long v1:31; unsigned long long v2:32; unsigned char :0; };
struct BFu31ll_BFu32ll_BFu0i { unsigned long long v1:31; unsigned long long v2:32; unsigned int :0; };
struct BFu31ll_BFu32ll_BFu0ll { unsigned long long v1:31; unsigned long long v2:32; unsigned long long :0; };
struct BFu31ll_BFu32ll_BFu0s { unsigned long long v1:31; unsigned long long v2:32; unsigned short :0; };
struct BFu31ll_BFu33_BFu0c { unsigned long long v1:31; unsigned long long v2:33; unsigned char :0; };
struct BFu31ll_BFu33_BFu0i { unsigned long long v1:31; unsigned long long v2:33; unsigned int :0; };
struct BFu31ll_BFu33_BFu0ll { unsigned long long v1:31; unsigned long long v2:33; unsigned long long :0; };
struct BFu31ll_BFu33_BFu0s { unsigned long long v1:31; unsigned long long v2:33; unsigned short :0; };
struct BFu31ll_BFu7c_BFu0c { unsigned long long v1:31; unsigned char v2:7; unsigned char :0; };
struct BFu31ll_BFu7c_BFu0i { unsigned long long v1:31; unsigned char v2:7; unsigned int :0; };
struct BFu31ll_BFu7c_BFu0ll { unsigned long long v1:31; unsigned char v2:7; unsigned long long :0; };
struct BFu31ll_BFu7c_BFu0s { unsigned long long v1:31; unsigned char v2:7; unsigned short :0; };
struct BFu31ll_BFu7i_BFu0c { unsigned long long v1:31; unsigned int v2:7; unsigned char :0; };
struct BFu31ll_BFu7i_BFu0i { unsigned long long v1:31; unsigned int v2:7; unsigned int :0; };
struct BFu31ll_BFu7i_BFu0ll { unsigned long long v1:31; unsigned int v2:7; unsigned long long :0; };
struct BFu31ll_BFu7i_BFu0s { unsigned long long v1:31; unsigned int v2:7; unsigned short :0; };
struct BFu31ll_BFu7ll_BFu0c { unsigned long long v1:31; unsigned long long v2:7; unsigned char :0; };
struct BFu31ll_BFu7ll_BFu0i { unsigned long long v1:31; unsigned long long v2:7; unsigned int :0; };
struct BFu31ll_BFu7ll_BFu0ll { unsigned long long v1:31; unsigned long long v2:7; unsigned long long :0; };
struct BFu31ll_BFu7ll_BFu0s { unsigned long long v1:31; unsigned long long v2:7; unsigned short :0; };
struct BFu31ll_BFu7s_BFu0c { unsigned long long v1:31; unsigned short v2:7; unsigned char :0; };
struct BFu31ll_BFu7s_BFu0i { unsigned long long v1:31; unsigned short v2:7; unsigned int :0; };
struct BFu31ll_BFu7s_BFu0ll { unsigned long long v1:31; unsigned short v2:7; unsigned long long :0; };
struct BFu31ll_BFu7s_BFu0s { unsigned long long v1:31; unsigned short v2:7; unsigned short :0; };
struct BFu31ll_BFu8c_BFu0c { unsigned long long v1:31; unsigned char v2:8; unsigned char :0; };
struct BFu31ll_BFu8c_BFu0i { unsigned long long v1:31; unsigned char v2:8; unsigned int :0; };
struct BFu31ll_BFu8c_BFu0ll { unsigned long long v1:31; unsigned char v2:8; unsigned long long :0; };
struct BFu31ll_BFu8c_BFu0s { unsigned long long v1:31; unsigned char v2:8; unsigned short :0; };
struct BFu31ll_BFu8i_BFu0c { unsigned long long v1:31; unsigned int v2:8; unsigned char :0; };
struct BFu31ll_BFu8i_BFu0i { unsigned long long v1:31; unsigned int v2:8; unsigned int :0; };
struct BFu31ll_BFu8i_BFu0ll { unsigned long long v1:31; unsigned int v2:8; unsigned long long :0; };
struct BFu31ll_BFu8i_BFu0s { unsigned long long v1:31; unsigned int v2:8; unsigned short :0; };
struct BFu31ll_BFu8ll_BFu0c { unsigned long long v1:31; unsigned long long v2:8; unsigned char :0; };
struct BFu31ll_BFu8ll_BFu0i { unsigned long long v1:31; unsigned long long v2:8; unsigned int :0; };
struct BFu31ll_BFu8ll_BFu0ll { unsigned long long v1:31; unsigned long long v2:8; unsigned long long :0; };
struct BFu31ll_BFu8ll_BFu0s { unsigned long long v1:31; unsigned long long v2:8; unsigned short :0; };
struct BFu31ll_BFu8s_BFu0c { unsigned long long v1:31; unsigned short v2:8; unsigned char :0; };
struct BFu31ll_BFu8s_BFu0i { unsigned long long v1:31; unsigned short v2:8; unsigned int :0; };
struct BFu31ll_BFu8s_BFu0ll { unsigned long long v1:31; unsigned short v2:8; unsigned long long :0; };
struct BFu31ll_BFu8s_BFu0s { unsigned long long v1:31; unsigned short v2:8; unsigned short :0; };
struct BFu31ll_BFu9i_BFu0c { unsigned long long v1:31; unsigned int v2:9; unsigned char :0; };
struct BFu31ll_BFu9i_BFu0i { unsigned long long v1:31; unsigned int v2:9; unsigned int :0; };
struct BFu31ll_BFu9i_BFu0ll { unsigned long long v1:31; unsigned int v2:9; unsigned long long :0; };
struct BFu31ll_BFu9i_BFu0s { unsigned long long v1:31; unsigned int v2:9; unsigned short :0; };
struct BFu31ll_BFu9ll_BFu0c { unsigned long long v1:31; unsigned long long v2:9; unsigned char :0; };
struct BFu31ll_BFu9ll_BFu0i { unsigned long long v1:31; unsigned long long v2:9; unsigned int :0; };
struct BFu31ll_BFu9ll_BFu0ll { unsigned long long v1:31; unsigned long long v2:9; unsigned long long :0; };
struct BFu31ll_BFu9ll_BFu0s { unsigned long long v1:31; unsigned long long v2:9; unsigned short :0; };
struct BFu31ll_BFu9s_BFu0c { unsigned long long v1:31; unsigned short v2:9; unsigned char :0; };
struct BFu31ll_BFu9s_BFu0i { unsigned long long v1:31; unsigned short v2:9; unsigned int :0; };
struct BFu31ll_BFu9s_BFu0ll { unsigned long long v1:31; unsigned short v2:9; unsigned long long :0; };
struct BFu31ll_BFu9s_BFu0s { unsigned long long v1:31; unsigned short v2:9; unsigned short :0; };
struct BFu31ll_C_BFu0c { unsigned long long v1:31; char v2; unsigned char :0; };
struct BFu31ll_C_BFu0i { unsigned long long v1:31; char v2; unsigned int :0; };
struct BFu31ll_C_BFu0ll { unsigned long long v1:31; char v2; unsigned long long :0; };
struct BFu31ll_C_BFu0s { unsigned long long v1:31; char v2; unsigned short :0; };
struct BFu31ll_D_BFu0c { unsigned long long v1:31; double v2; unsigned char :0; };
struct BFu31ll_D_BFu0i { unsigned long long v1:31; double v2; unsigned int :0; };
struct BFu31ll_D_BFu0ll { unsigned long long v1:31; double v2; unsigned long long :0; };
struct BFu31ll_D_BFu0s { unsigned long long v1:31; double v2; unsigned short :0; };
struct BFu31ll_F_BFu0c { unsigned long long v1:31; float v2; unsigned char :0; };
struct BFu31ll_F_BFu0i { unsigned long long v1:31; float v2; unsigned int :0; };
struct BFu31ll_F_BFu0ll { unsigned long long v1:31; float v2; unsigned long long :0; };
struct BFu31ll_F_BFu0s { unsigned long long v1:31; float v2; unsigned short :0; };
struct BFu31ll_I_BFu0c { unsigned long long v1:31; int v2; unsigned char :0; };
struct BFu31ll_I_BFu0i { unsigned long long v1:31; int v2; unsigned int :0; };
struct BFu31ll_I_BFu0ll { unsigned long long v1:31; int v2; unsigned long long :0; };
struct BFu31ll_I_BFu0s { unsigned long long v1:31; int v2; unsigned short :0; };
struct BFu31ll_Ip_BFu0c { unsigned long long v1:31; int * v2; unsigned char :0; };
struct BFu31ll_Ip_BFu0i { unsigned long long v1:31; int * v2; unsigned int :0; };
struct BFu31ll_Ip_BFu0ll { unsigned long long v1:31; int * v2; unsigned long long :0; };
struct BFu31ll_Ip_BFu0s { unsigned long long v1:31; int * v2; unsigned short :0; };
struct BFu31ll_L_BFu0c { unsigned long long v1:31; long long v2; unsigned char :0; };
struct BFu31ll_L_BFu0i { unsigned long long v1:31; long long v2; unsigned int :0; };
struct BFu31ll_L_BFu0ll { unsigned long long v1:31; long long v2; unsigned long long :0; };
struct BFu31ll_L_BFu0s { unsigned long long v1:31; long long v2; unsigned short :0; };
struct BFu31ll_S_BFu0c { unsigned long long v1:31; short v2; unsigned char :0; };
struct BFu31ll_S_BFu0i { unsigned long long v1:31; short v2; unsigned int :0; };
struct BFu31ll_S_BFu0ll { unsigned long long v1:31; short v2; unsigned long long :0; };
struct BFu31ll_S_BFu0s { unsigned long long v1:31; short v2; unsigned short :0; };
struct BFu31ll_Uc_BFu0c { unsigned long long v1:31; unsigned char v2; unsigned char :0; };
struct BFu31ll_Uc_BFu0i { unsigned long long v1:31; unsigned char v2; unsigned int :0; };
struct BFu31ll_Uc_BFu0ll { unsigned long long v1:31; unsigned char v2; unsigned long long :0; };
struct BFu31ll_Uc_BFu0s { unsigned long long v1:31; unsigned char v2; unsigned short :0; };
struct BFu31ll_Ui_BFu0c { unsigned long long v1:31; unsigned int v2; unsigned char :0; };
struct BFu31ll_Ui_BFu0i { unsigned long long v1:31; unsigned int v2; unsigned int :0; };
struct BFu31ll_Ui_BFu0ll { unsigned long long v1:31; unsigned int v2; unsigned long long :0; };
struct BFu31ll_Ui_BFu0s { unsigned long long v1:31; unsigned int v2; unsigned short :0; };
struct BFu31ll_Ul_BFu0c { unsigned long long v1:31; unsigned long long v2; unsigned char :0; };
struct BFu31ll_Ul_BFu0i { unsigned long long v1:31; unsigned long long v2; unsigned int :0; };
struct BFu31ll_Ul_BFu0ll { unsigned long long v1:31; unsigned long long v2; unsigned long long :0; };
struct BFu31ll_Ul_BFu0s { unsigned long long v1:31; unsigned long long v2; unsigned short :0; };
struct BFu31ll_Us_BFu0c { unsigned long long v1:31; unsigned short v2; unsigned char :0; };
struct BFu31ll_Us_BFu0i { unsigned long long v1:31; unsigned short v2; unsigned int :0; };
struct BFu31ll_Us_BFu0ll { unsigned long long v1:31; unsigned short v2; unsigned long long :0; };
struct BFu31ll_Us_BFu0s { unsigned long long v1:31; unsigned short v2; unsigned short :0; };
struct BFu31ll_Vp_BFu0c { unsigned long long v1:31; void * v2; unsigned char :0; };
struct BFu31ll_Vp_BFu0i { unsigned long long v1:31; void * v2; unsigned int :0; };
struct BFu31ll_Vp_BFu0ll { unsigned long long v1:31; void * v2; unsigned long long :0; };
struct BFu31ll_Vp_BFu0s { unsigned long long v1:31; void * v2; unsigned short :0; };
struct BFu32i_BFu0c { unsigned int v1:32; unsigned char :0; };
struct BFu32i_BFu0c_BFu0c { unsigned int v1:32; unsigned char :0; unsigned char :0; };
struct BFu32i_BFu0c_BFu0i { unsigned int v1:32; unsigned char :0; unsigned int :0; };
struct BFu32i_BFu0c_BFu0ll { unsigned int v1:32; unsigned char :0; unsigned long long :0; };
struct BFu32i_BFu0c_BFu0s { unsigned int v1:32; unsigned char :0; unsigned short :0; };
struct BFu32i_BFu0c_BFu15i { unsigned int v1:32; unsigned char :0; unsigned int v2:15; };
struct BFu32i_BFu0c_BFu15ll { unsigned int v1:32; unsigned char :0; unsigned long long v2:15; };
struct BFu32i_BFu0c_BFu15s { unsigned int v1:32; unsigned char :0; unsigned short v2:15; };
struct BFu32i_BFu0c_BFu16i { unsigned int v1:32; unsigned char :0; unsigned int v2:16; };
struct BFu32i_BFu0c_BFu16ll { unsigned int v1:32; unsigned char :0; unsigned long long v2:16; };
struct BFu32i_BFu0c_BFu16s { unsigned int v1:32; unsigned char :0; unsigned short v2:16; };
struct BFu32i_BFu0c_BFu17i { unsigned int v1:32; unsigned char :0; unsigned int v2:17; };
struct BFu32i_BFu0c_BFu17ll { unsigned int v1:32; unsigned char :0; unsigned long long v2:17; };
struct BFu32i_BFu0c_BFu1c { unsigned int v1:32; unsigned char :0; unsigned char v2:1; };
struct BFu32i_BFu0c_BFu1i { unsigned int v1:32; unsigned char :0; unsigned int v2:1; };
struct BFu32i_BFu0c_BFu1ll { unsigned int v1:32; unsigned char :0; unsigned long long v2:1; };
struct BFu32i_BFu0c_BFu1s { unsigned int v1:32; unsigned char :0; unsigned short v2:1; };
struct BFu32i_BFu0c_BFu31i { unsigned int v1:32; unsigned char :0; unsigned int v2:31; };
struct BFu32i_BFu0c_BFu31ll { unsigned int v1:32; unsigned char :0; unsigned long long v2:31; };
struct BFu32i_BFu0c_BFu32i { unsigned int v1:32; unsigned char :0; unsigned int v2:32; };
struct BFu32i_BFu0c_BFu32ll { unsigned int v1:32; unsigned char :0; unsigned long long v2:32; };
struct BFu32i_BFu0c_BFu33 { unsigned int v1:32; unsigned char :0; unsigned long long v2:33; };
struct BFu32i_BFu0c_BFu7c { unsigned int v1:32; unsigned char :0; unsigned char v2:7; };
struct BFu32i_BFu0c_BFu7i { unsigned int v1:32; unsigned char :0; unsigned int v2:7; };
struct BFu32i_BFu0c_BFu7ll { unsigned int v1:32; unsigned char :0; unsigned long long v2:7; };
struct BFu32i_BFu0c_BFu7s { unsigned int v1:32; unsigned char :0; unsigned short v2:7; };
struct BFu32i_BFu0c_BFu8c { unsigned int v1:32; unsigned char :0; unsigned char v2:8; };
struct BFu32i_BFu0c_BFu8i { unsigned int v1:32; unsigned char :0; unsigned int v2:8; };
struct BFu32i_BFu0c_BFu8ll { unsigned int v1:32; unsigned char :0; unsigned long long v2:8; };
struct BFu32i_BFu0c_BFu8s { unsigned int v1:32; unsigned char :0; unsigned short v2:8; };
struct BFu32i_BFu0c_BFu9i { unsigned int v1:32; unsigned char :0; unsigned int v2:9; };
struct BFu32i_BFu0c_BFu9ll { unsigned int v1:32; unsigned char :0; unsigned long long v2:9; };
struct BFu32i_BFu0c_BFu9s { unsigned int v1:32; unsigned char :0; unsigned short v2:9; };
struct BFu32i_BFu0c_C { unsigned int v1:32; unsigned char :0; char v2; };
struct BFu32i_BFu0c_D { unsigned int v1:32; unsigned char :0; double v2; };
struct BFu32i_BFu0c_F { unsigned int v1:32; unsigned char :0; float v2; };
struct BFu32i_BFu0c_I { unsigned int v1:32; unsigned char :0; int v2; };
struct BFu32i_BFu0c_Ip { unsigned int v1:32; unsigned char :0; int * v2; };
struct BFu32i_BFu0c_L { unsigned int v1:32; unsigned char :0; long long v2; };
struct BFu32i_BFu0c_S { unsigned int v1:32; unsigned char :0; short v2; };
struct BFu32i_BFu0c_Uc { unsigned int v1:32; unsigned char :0; unsigned char v2; };
struct BFu32i_BFu0c_Ui { unsigned int v1:32; unsigned char :0; unsigned int v2; };
struct BFu32i_BFu0c_Ul { unsigned int v1:32; unsigned char :0; unsigned long long v2; };
struct BFu32i_BFu0c_Us { unsigned int v1:32; unsigned char :0; unsigned short v2; };
struct BFu32i_BFu0c_Vp { unsigned int v1:32; unsigned char :0; void * v2; };
struct BFu32i_BFu0i { unsigned int v1:32; unsigned int :0; };
struct BFu32i_BFu0i_BFu0c { unsigned int v1:32; unsigned int :0; unsigned char :0; };
struct BFu32i_BFu0i_BFu0i { unsigned int v1:32; unsigned int :0; unsigned int :0; };
struct BFu32i_BFu0i_BFu0ll { unsigned int v1:32; unsigned int :0; unsigned long long :0; };
struct BFu32i_BFu0i_BFu0s { unsigned int v1:32; unsigned int :0; unsigned short :0; };
struct BFu32i_BFu0i_BFu15i { unsigned int v1:32; unsigned int :0; unsigned int v2:15; };
struct BFu32i_BFu0i_BFu15ll { unsigned int v1:32; unsigned int :0; unsigned long long v2:15; };
struct BFu32i_BFu0i_BFu15s { unsigned int v1:32; unsigned int :0; unsigned short v2:15; };
struct BFu32i_BFu0i_BFu16i { unsigned int v1:32; unsigned int :0; unsigned int v2:16; };
struct BFu32i_BFu0i_BFu16ll { unsigned int v1:32; unsigned int :0; unsigned long long v2:16; };
struct BFu32i_BFu0i_BFu16s { unsigned int v1:32; unsigned int :0; unsigned short v2:16; };
struct BFu32i_BFu0i_BFu17i { unsigned int v1:32; unsigned int :0; unsigned int v2:17; };
struct BFu32i_BFu0i_BFu17ll { unsigned int v1:32; unsigned int :0; unsigned long long v2:17; };
struct BFu32i_BFu0i_BFu1c { unsigned int v1:32; unsigned int :0; unsigned char v2:1; };
struct BFu32i_BFu0i_BFu1i { unsigned int v1:32; unsigned int :0; unsigned int v2:1; };
struct BFu32i_BFu0i_BFu1ll { unsigned int v1:32; unsigned int :0; unsigned long long v2:1; };
struct BFu32i_BFu0i_BFu1s { unsigned int v1:32; unsigned int :0; unsigned short v2:1; };
struct BFu32i_BFu0i_BFu31i { unsigned int v1:32; unsigned int :0; unsigned int v2:31; };
struct BFu32i_BFu0i_BFu31ll { unsigned int v1:32; unsigned int :0; unsigned long long v2:31; };
struct BFu32i_BFu0i_BFu32i { unsigned int v1:32; unsigned int :0; unsigned int v2:32; };
struct BFu32i_BFu0i_BFu32ll { unsigned int v1:32; unsigned int :0; unsigned long long v2:32; };
struct BFu32i_BFu0i_BFu33 { unsigned int v1:32; unsigned int :0; unsigned long long v2:33; };
struct BFu32i_BFu0i_BFu7c { unsigned int v1:32; unsigned int :0; unsigned char v2:7; };
struct BFu32i_BFu0i_BFu7i { unsigned int v1:32; unsigned int :0; unsigned int v2:7; };
struct BFu32i_BFu0i_BFu7ll { unsigned int v1:32; unsigned int :0; unsigned long long v2:7; };
struct BFu32i_BFu0i_BFu7s { unsigned int v1:32; unsigned int :0; unsigned short v2:7; };
struct BFu32i_BFu0i_BFu8c { unsigned int v1:32; unsigned int :0; unsigned char v2:8; };
struct BFu32i_BFu0i_BFu8i { unsigned int v1:32; unsigned int :0; unsigned int v2:8; };
struct BFu32i_BFu0i_BFu8ll { unsigned int v1:32; unsigned int :0; unsigned long long v2:8; };
struct BFu32i_BFu0i_BFu8s { unsigned int v1:32; unsigned int :0; unsigned short v2:8; };
struct BFu32i_BFu0i_BFu9i { unsigned int v1:32; unsigned int :0; unsigned int v2:9; };
struct BFu32i_BFu0i_BFu9ll { unsigned int v1:32; unsigned int :0; unsigned long long v2:9; };
struct BFu32i_BFu0i_BFu9s { unsigned int v1:32; unsigned int :0; unsigned short v2:9; };
struct BFu32i_BFu0i_C { unsigned int v1:32; unsigned int :0; char v2; };
struct BFu32i_BFu0i_D { unsigned int v1:32; unsigned int :0; double v2; };
struct BFu32i_BFu0i_F { unsigned int v1:32; unsigned int :0; float v2; };
struct BFu32i_BFu0i_I { unsigned int v1:32; unsigned int :0; int v2; };
struct BFu32i_BFu0i_Ip { unsigned int v1:32; unsigned int :0; int * v2; };
struct BFu32i_BFu0i_L { unsigned int v1:32; unsigned int :0; long long v2; };
struct BFu32i_BFu0i_S { unsigned int v1:32; unsigned int :0; short v2; };
struct BFu32i_BFu0i_Uc { unsigned int v1:32; unsigned int :0; unsigned char v2; };
struct BFu32i_BFu0i_Ui { unsigned int v1:32; unsigned int :0; unsigned int v2; };
struct BFu32i_BFu0i_Ul { unsigned int v1:32; unsigned int :0; unsigned long long v2; };
struct BFu32i_BFu0i_Us { unsigned int v1:32; unsigned int :0; unsigned short v2; };
struct BFu32i_BFu0i_Vp { unsigned int v1:32; unsigned int :0; void * v2; };
struct BFu32i_BFu0ll { unsigned int v1:32; unsigned long long :0; };
struct BFu32i_BFu0ll_BFu0c { unsigned int v1:32; unsigned long long :0; unsigned char :0; };
struct BFu32i_BFu0ll_BFu0i { unsigned int v1:32; unsigned long long :0; unsigned int :0; };
struct BFu32i_BFu0ll_BFu0ll { unsigned int v1:32; unsigned long long :0; unsigned long long :0; };
struct BFu32i_BFu0ll_BFu0s { unsigned int v1:32; unsigned long long :0; unsigned short :0; };
struct BFu32i_BFu0ll_BFu15i { unsigned int v1:32; unsigned long long :0; unsigned int v2:15; };
struct BFu32i_BFu0ll_BFu15ll { unsigned int v1:32; unsigned long long :0; unsigned long long v2:15; };
struct BFu32i_BFu0ll_BFu15s { unsigned int v1:32; unsigned long long :0; unsigned short v2:15; };
struct BFu32i_BFu0ll_BFu16i { unsigned int v1:32; unsigned long long :0; unsigned int v2:16; };
struct BFu32i_BFu0ll_BFu16ll { unsigned int v1:32; unsigned long long :0; unsigned long long v2:16; };
struct BFu32i_BFu0ll_BFu16s { unsigned int v1:32; unsigned long long :0; unsigned short v2:16; };
struct BFu32i_BFu0ll_BFu17i { unsigned int v1:32; unsigned long long :0; unsigned int v2:17; };
struct BFu32i_BFu0ll_BFu17ll { unsigned int v1:32; unsigned long long :0; unsigned long long v2:17; };
struct BFu32i_BFu0ll_BFu1c { unsigned int v1:32; unsigned long long :0; unsigned char v2:1; };
struct BFu32i_BFu0ll_BFu1i { unsigned int v1:32; unsigned long long :0; unsigned int v2:1; };
struct BFu32i_BFu0ll_BFu1ll { unsigned int v1:32; unsigned long long :0; unsigned long long v2:1; };
struct BFu32i_BFu0ll_BFu1s { unsigned int v1:32; unsigned long long :0; unsigned short v2:1; };
struct BFu32i_BFu0ll_BFu31i { unsigned int v1:32; unsigned long long :0; unsigned int v2:31; };
struct BFu32i_BFu0ll_BFu31ll { unsigned int v1:32; unsigned long long :0; unsigned long long v2:31; };
struct BFu32i_BFu0ll_BFu32i { unsigned int v1:32; unsigned long long :0; unsigned int v2:32; };
struct BFu32i_BFu0ll_BFu32ll { unsigned int v1:32; unsigned long long :0; unsigned long long v2:32; };
struct BFu32i_BFu0ll_BFu33 { unsigned int v1:32; unsigned long long :0; unsigned long long v2:33; };
struct BFu32i_BFu0ll_BFu7c { unsigned int v1:32; unsigned long long :0; unsigned char v2:7; };
struct BFu32i_BFu0ll_BFu7i { unsigned int v1:32; unsigned long long :0; unsigned int v2:7; };
struct BFu32i_BFu0ll_BFu7ll { unsigned int v1:32; unsigned long long :0; unsigned long long v2:7; };
struct BFu32i_BFu0ll_BFu7s { unsigned int v1:32; unsigned long long :0; unsigned short v2:7; };
struct BFu32i_BFu0ll_BFu8c { unsigned int v1:32; unsigned long long :0; unsigned char v2:8; };
struct BFu32i_BFu0ll_BFu8i { unsigned int v1:32; unsigned long long :0; unsigned int v2:8; };
struct BFu32i_BFu0ll_BFu8ll { unsigned int v1:32; unsigned long long :0; unsigned long long v2:8; };
struct BFu32i_BFu0ll_BFu8s { unsigned int v1:32; unsigned long long :0; unsigned short v2:8; };
struct BFu32i_BFu0ll_BFu9i { unsigned int v1:32; unsigned long long :0; unsigned int v2:9; };
struct BFu32i_BFu0ll_BFu9ll { unsigned int v1:32; unsigned long long :0; unsigned long long v2:9; };
struct BFu32i_BFu0ll_BFu9s { unsigned int v1:32; unsigned long long :0; unsigned short v2:9; };
struct BFu32i_BFu0ll_C { unsigned int v1:32; unsigned long long :0; char v2; };
struct BFu32i_BFu0ll_D { unsigned int v1:32; unsigned long long :0; double v2; };
struct BFu32i_BFu0ll_F { unsigned int v1:32; unsigned long long :0; float v2; };
struct BFu32i_BFu0ll_I { unsigned int v1:32; unsigned long long :0; int v2; };
struct BFu32i_BFu0ll_Ip { unsigned int v1:32; unsigned long long :0; int * v2; };
struct BFu32i_BFu0ll_L { unsigned int v1:32; unsigned long long :0; long long v2; };
struct BFu32i_BFu0ll_S { unsigned int v1:32; unsigned long long :0; short v2; };
struct BFu32i_BFu0ll_Uc { unsigned int v1:32; unsigned long long :0; unsigned char v2; };
struct BFu32i_BFu0ll_Ui { unsigned int v1:32; unsigned long long :0; unsigned int v2; };
struct BFu32i_BFu0ll_Ul { unsigned int v1:32; unsigned long long :0; unsigned long long v2; };
struct BFu32i_BFu0ll_Us { unsigned int v1:32; unsigned long long :0; unsigned short v2; };
struct BFu32i_BFu0ll_Vp { unsigned int v1:32; unsigned long long :0; void * v2; };
struct BFu32i_BFu0s { unsigned int v1:32; unsigned short :0; };
struct BFu32i_BFu0s_BFu0c { unsigned int v1:32; unsigned short :0; unsigned char :0; };
struct BFu32i_BFu0s_BFu0i { unsigned int v1:32; unsigned short :0; unsigned int :0; };
struct BFu32i_BFu0s_BFu0ll { unsigned int v1:32; unsigned short :0; unsigned long long :0; };
struct BFu32i_BFu0s_BFu0s { unsigned int v1:32; unsigned short :0; unsigned short :0; };
struct BFu32i_BFu0s_BFu15i { unsigned int v1:32; unsigned short :0; unsigned int v2:15; };
struct BFu32i_BFu0s_BFu15ll { unsigned int v1:32; unsigned short :0; unsigned long long v2:15; };
struct BFu32i_BFu0s_BFu15s { unsigned int v1:32; unsigned short :0; unsigned short v2:15; };
struct BFu32i_BFu0s_BFu16i { unsigned int v1:32; unsigned short :0; unsigned int v2:16; };
struct BFu32i_BFu0s_BFu16ll { unsigned int v1:32; unsigned short :0; unsigned long long v2:16; };
struct BFu32i_BFu0s_BFu16s { unsigned int v1:32; unsigned short :0; unsigned short v2:16; };
struct BFu32i_BFu0s_BFu17i { unsigned int v1:32; unsigned short :0; unsigned int v2:17; };
struct BFu32i_BFu0s_BFu17ll { unsigned int v1:32; unsigned short :0; unsigned long long v2:17; };
struct BFu32i_BFu0s_BFu1c { unsigned int v1:32; unsigned short :0; unsigned char v2:1; };
struct BFu32i_BFu0s_BFu1i { unsigned int v1:32; unsigned short :0; unsigned int v2:1; };
struct BFu32i_BFu0s_BFu1ll { unsigned int v1:32; unsigned short :0; unsigned long long v2:1; };
struct BFu32i_BFu0s_BFu1s { unsigned int v1:32; unsigned short :0; unsigned short v2:1; };
struct BFu32i_BFu0s_BFu31i { unsigned int v1:32; unsigned short :0; unsigned int v2:31; };
struct BFu32i_BFu0s_BFu31ll { unsigned int v1:32; unsigned short :0; unsigned long long v2:31; };
struct BFu32i_BFu0s_BFu32i { unsigned int v1:32; unsigned short :0; unsigned int v2:32; };
struct BFu32i_BFu0s_BFu32ll { unsigned int v1:32; unsigned short :0; unsigned long long v2:32; };
struct BFu32i_BFu0s_BFu33 { unsigned int v1:32; unsigned short :0; unsigned long long v2:33; };
struct BFu32i_BFu0s_BFu7c { unsigned int v1:32; unsigned short :0; unsigned char v2:7; };
struct BFu32i_BFu0s_BFu7i { unsigned int v1:32; unsigned short :0; unsigned int v2:7; };
struct BFu32i_BFu0s_BFu7ll { unsigned int v1:32; unsigned short :0; unsigned long long v2:7; };
struct BFu32i_BFu0s_BFu7s { unsigned int v1:32; unsigned short :0; unsigned short v2:7; };
struct BFu32i_BFu0s_BFu8c { unsigned int v1:32; unsigned short :0; unsigned char v2:8; };
struct BFu32i_BFu0s_BFu8i { unsigned int v1:32; unsigned short :0; unsigned int v2:8; };
struct BFu32i_BFu0s_BFu8ll { unsigned int v1:32; unsigned short :0; unsigned long long v2:8; };
struct BFu32i_BFu0s_BFu8s { unsigned int v1:32; unsigned short :0; unsigned short v2:8; };
struct BFu32i_BFu0s_BFu9i { unsigned int v1:32; unsigned short :0; unsigned int v2:9; };
struct BFu32i_BFu0s_BFu9ll { unsigned int v1:32; unsigned short :0; unsigned long long v2:9; };
struct BFu32i_BFu0s_BFu9s { unsigned int v1:32; unsigned short :0; unsigned short v2:9; };
struct BFu32i_BFu0s_C { unsigned int v1:32; unsigned short :0; char v2; };
struct BFu32i_BFu0s_D { unsigned int v1:32; unsigned short :0; double v2; };
struct BFu32i_BFu0s_F { unsigned int v1:32; unsigned short :0; float v2; };
struct BFu32i_BFu0s_I { unsigned int v1:32; unsigned short :0; int v2; };
struct BFu32i_BFu0s_Ip { unsigned int v1:32; unsigned short :0; int * v2; };
struct BFu32i_BFu0s_L { unsigned int v1:32; unsigned short :0; long long v2; };
struct BFu32i_BFu0s_S { unsigned int v1:32; unsigned short :0; short v2; };
struct BFu32i_BFu0s_Uc { unsigned int v1:32; unsigned short :0; unsigned char v2; };
struct BFu32i_BFu0s_Ui { unsigned int v1:32; unsigned short :0; unsigned int v2; };
struct BFu32i_BFu0s_Ul { unsigned int v1:32; unsigned short :0; unsigned long long v2; };
struct BFu32i_BFu0s_Us { unsigned int v1:32; unsigned short :0; unsigned short v2; };
struct BFu32i_BFu0s_Vp { unsigned int v1:32; unsigned short :0; void * v2; };
struct BFu32i_BFu15i_BFu0c { unsigned int v1:32; unsigned int v2:15; unsigned char :0; };
struct BFu32i_BFu15i_BFu0i { unsigned int v1:32; unsigned int v2:15; unsigned int :0; };
struct BFu32i_BFu15i_BFu0ll { unsigned int v1:32; unsigned int v2:15; unsigned long long :0; };
struct BFu32i_BFu15i_BFu0s { unsigned int v1:32; unsigned int v2:15; unsigned short :0; };
struct BFu32i_BFu15ll_BFu0c { unsigned int v1:32; unsigned long long v2:15; unsigned char :0; };
struct BFu32i_BFu15ll_BFu0i { unsigned int v1:32; unsigned long long v2:15; unsigned int :0; };
struct BFu32i_BFu15ll_BFu0ll { unsigned int v1:32; unsigned long long v2:15; unsigned long long :0; };
struct BFu32i_BFu15ll_BFu0s { unsigned int v1:32; unsigned long long v2:15; unsigned short :0; };
struct BFu32i_BFu15s_BFu0c { unsigned int v1:32; unsigned short v2:15; unsigned char :0; };
struct BFu32i_BFu15s_BFu0i { unsigned int v1:32; unsigned short v2:15; unsigned int :0; };
struct BFu32i_BFu15s_BFu0ll { unsigned int v1:32; unsigned short v2:15; unsigned long long :0; };
struct BFu32i_BFu15s_BFu0s { unsigned int v1:32; unsigned short v2:15; unsigned short :0; };
struct BFu32i_BFu16i_BFu0c { unsigned int v1:32; unsigned int v2:16; unsigned char :0; };
struct BFu32i_BFu16i_BFu0i { unsigned int v1:32; unsigned int v2:16; unsigned int :0; };
struct BFu32i_BFu16i_BFu0ll { unsigned int v1:32; unsigned int v2:16; unsigned long long :0; };
struct BFu32i_BFu16i_BFu0s { unsigned int v1:32; unsigned int v2:16; unsigned short :0; };
struct BFu32i_BFu16ll_BFu0c { unsigned int v1:32; unsigned long long v2:16; unsigned char :0; };
struct BFu32i_BFu16ll_BFu0i { unsigned int v1:32; unsigned long long v2:16; unsigned int :0; };
struct BFu32i_BFu16ll_BFu0ll { unsigned int v1:32; unsigned long long v2:16; unsigned long long :0; };
struct BFu32i_BFu16ll_BFu0s { unsigned int v1:32; unsigned long long v2:16; unsigned short :0; };
struct BFu32i_BFu16s_BFu0c { unsigned int v1:32; unsigned short v2:16; unsigned char :0; };
struct BFu32i_BFu16s_BFu0i { unsigned int v1:32; unsigned short v2:16; unsigned int :0; };
struct BFu32i_BFu16s_BFu0ll { unsigned int v1:32; unsigned short v2:16; unsigned long long :0; };
struct BFu32i_BFu16s_BFu0s { unsigned int v1:32; unsigned short v2:16; unsigned short :0; };
struct BFu32i_BFu17i_BFu0c { unsigned int v1:32; unsigned int v2:17; unsigned char :0; };
struct BFu32i_BFu17i_BFu0i { unsigned int v1:32; unsigned int v2:17; unsigned int :0; };
struct BFu32i_BFu17i_BFu0ll { unsigned int v1:32; unsigned int v2:17; unsigned long long :0; };
struct BFu32i_BFu17i_BFu0s { unsigned int v1:32; unsigned int v2:17; unsigned short :0; };
struct BFu32i_BFu17ll_BFu0c { unsigned int v1:32; unsigned long long v2:17; unsigned char :0; };
struct BFu32i_BFu17ll_BFu0i { unsigned int v1:32; unsigned long long v2:17; unsigned int :0; };
struct BFu32i_BFu17ll_BFu0ll { unsigned int v1:32; unsigned long long v2:17; unsigned long long :0; };
struct BFu32i_BFu17ll_BFu0s { unsigned int v1:32; unsigned long long v2:17; unsigned short :0; };
struct BFu32i_BFu1c_BFu0c { unsigned int v1:32; unsigned char v2:1; unsigned char :0; };
struct BFu32i_BFu1c_BFu0i { unsigned int v1:32; unsigned char v2:1; unsigned int :0; };
struct BFu32i_BFu1c_BFu0ll { unsigned int v1:32; unsigned char v2:1; unsigned long long :0; };
struct BFu32i_BFu1c_BFu0s { unsigned int v1:32; unsigned char v2:1; unsigned short :0; };
struct BFu32i_BFu1i_BFu0c { unsigned int v1:32; unsigned int v2:1; unsigned char :0; };
struct BFu32i_BFu1i_BFu0i { unsigned int v1:32; unsigned int v2:1; unsigned int :0; };
struct BFu32i_BFu1i_BFu0ll { unsigned int v1:32; unsigned int v2:1; unsigned long long :0; };
struct BFu32i_BFu1i_BFu0s { unsigned int v1:32; unsigned int v2:1; unsigned short :0; };
struct BFu32i_BFu1ll_BFu0c { unsigned int v1:32; unsigned long long v2:1; unsigned char :0; };
struct BFu32i_BFu1ll_BFu0i { unsigned int v1:32; unsigned long long v2:1; unsigned int :0; };
struct BFu32i_BFu1ll_BFu0ll { unsigned int v1:32; unsigned long long v2:1; unsigned long long :0; };
struct BFu32i_BFu1ll_BFu0s { unsigned int v1:32; unsigned long long v2:1; unsigned short :0; };
struct BFu32i_BFu1s_BFu0c { unsigned int v1:32; unsigned short v2:1; unsigned char :0; };
struct BFu32i_BFu1s_BFu0i { unsigned int v1:32; unsigned short v2:1; unsigned int :0; };
struct BFu32i_BFu1s_BFu0ll { unsigned int v1:32; unsigned short v2:1; unsigned long long :0; };
struct BFu32i_BFu1s_BFu0s { unsigned int v1:32; unsigned short v2:1; unsigned short :0; };
struct BFu32i_BFu31i_BFu0c { unsigned int v1:32; unsigned int v2:31; unsigned char :0; };
struct BFu32i_BFu31i_BFu0i { unsigned int v1:32; unsigned int v2:31; unsigned int :0; };
struct BFu32i_BFu31i_BFu0ll { unsigned int v1:32; unsigned int v2:31; unsigned long long :0; };
struct BFu32i_BFu31i_BFu0s { unsigned int v1:32; unsigned int v2:31; unsigned short :0; };
struct BFu32i_BFu31ll_BFu0c { unsigned int v1:32; unsigned long long v2:31; unsigned char :0; };
struct BFu32i_BFu31ll_BFu0i { unsigned int v1:32; unsigned long long v2:31; unsigned int :0; };
struct BFu32i_BFu31ll_BFu0ll { unsigned int v1:32; unsigned long long v2:31; unsigned long long :0; };
struct BFu32i_BFu31ll_BFu0s { unsigned int v1:32; unsigned long long v2:31; unsigned short :0; };
struct BFu32i_BFu32i_BFu0c { unsigned int v1:32; unsigned int v2:32; unsigned char :0; };
struct BFu32i_BFu32i_BFu0i { unsigned int v1:32; unsigned int v2:32; unsigned int :0; };
struct BFu32i_BFu32i_BFu0ll { unsigned int v1:32; unsigned int v2:32; unsigned long long :0; };
struct BFu32i_BFu32i_BFu0s { unsigned int v1:32; unsigned int v2:32; unsigned short :0; };
struct BFu32i_BFu32ll_BFu0c { unsigned int v1:32; unsigned long long v2:32; unsigned char :0; };
struct BFu32i_BFu32ll_BFu0i { unsigned int v1:32; unsigned long long v2:32; unsigned int :0; };
struct BFu32i_BFu32ll_BFu0ll { unsigned int v1:32; unsigned long long v2:32; unsigned long long :0; };
struct BFu32i_BFu32ll_BFu0s { unsigned int v1:32; unsigned long long v2:32; unsigned short :0; };
struct BFu32i_BFu33_BFu0c { unsigned int v1:32; unsigned long long v2:33; unsigned char :0; };
struct BFu32i_BFu33_BFu0i { unsigned int v1:32; unsigned long long v2:33; unsigned int :0; };
struct BFu32i_BFu33_BFu0ll { unsigned int v1:32; unsigned long long v2:33; unsigned long long :0; };
struct BFu32i_BFu33_BFu0s { unsigned int v1:32; unsigned long long v2:33; unsigned short :0; };
struct BFu32i_BFu7c_BFu0c { unsigned int v1:32; unsigned char v2:7; unsigned char :0; };
struct BFu32i_BFu7c_BFu0i { unsigned int v1:32; unsigned char v2:7; unsigned int :0; };
struct BFu32i_BFu7c_BFu0ll { unsigned int v1:32; unsigned char v2:7; unsigned long long :0; };
struct BFu32i_BFu7c_BFu0s { unsigned int v1:32; unsigned char v2:7; unsigned short :0; };
struct BFu32i_BFu7i_BFu0c { unsigned int v1:32; unsigned int v2:7; unsigned char :0; };
struct BFu32i_BFu7i_BFu0i { unsigned int v1:32; unsigned int v2:7; unsigned int :0; };
struct BFu32i_BFu7i_BFu0ll { unsigned int v1:32; unsigned int v2:7; unsigned long long :0; };
struct BFu32i_BFu7i_BFu0s { unsigned int v1:32; unsigned int v2:7; unsigned short :0; };
struct BFu32i_BFu7ll_BFu0c { unsigned int v1:32; unsigned long long v2:7; unsigned char :0; };
struct BFu32i_BFu7ll_BFu0i { unsigned int v1:32; unsigned long long v2:7; unsigned int :0; };
struct BFu32i_BFu7ll_BFu0ll { unsigned int v1:32; unsigned long long v2:7; unsigned long long :0; };
struct BFu32i_BFu7ll_BFu0s { unsigned int v1:32; unsigned long long v2:7; unsigned short :0; };
struct BFu32i_BFu7s_BFu0c { unsigned int v1:32; unsigned short v2:7; unsigned char :0; };
struct BFu32i_BFu7s_BFu0i { unsigned int v1:32; unsigned short v2:7; unsigned int :0; };
struct BFu32i_BFu7s_BFu0ll { unsigned int v1:32; unsigned short v2:7; unsigned long long :0; };
struct BFu32i_BFu7s_BFu0s { unsigned int v1:32; unsigned short v2:7; unsigned short :0; };
struct BFu32i_BFu8c_BFu0c { unsigned int v1:32; unsigned char v2:8; unsigned char :0; };
struct BFu32i_BFu8c_BFu0i { unsigned int v1:32; unsigned char v2:8; unsigned int :0; };
struct BFu32i_BFu8c_BFu0ll { unsigned int v1:32; unsigned char v2:8; unsigned long long :0; };
struct BFu32i_BFu8c_BFu0s { unsigned int v1:32; unsigned char v2:8; unsigned short :0; };
struct BFu32i_BFu8i_BFu0c { unsigned int v1:32; unsigned int v2:8; unsigned char :0; };
struct BFu32i_BFu8i_BFu0i { unsigned int v1:32; unsigned int v2:8; unsigned int :0; };
struct BFu32i_BFu8i_BFu0ll { unsigned int v1:32; unsigned int v2:8; unsigned long long :0; };
struct BFu32i_BFu8i_BFu0s { unsigned int v1:32; unsigned int v2:8; unsigned short :0; };
struct BFu32i_BFu8ll_BFu0c { unsigned int v1:32; unsigned long long v2:8; unsigned char :0; };
struct BFu32i_BFu8ll_BFu0i { unsigned int v1:32; unsigned long long v2:8; unsigned int :0; };
struct BFu32i_BFu8ll_BFu0ll { unsigned int v1:32; unsigned long long v2:8; unsigned long long :0; };
struct BFu32i_BFu8ll_BFu0s { unsigned int v1:32; unsigned long long v2:8; unsigned short :0; };
struct BFu32i_BFu8s_BFu0c { unsigned int v1:32; unsigned short v2:8; unsigned char :0; };
struct BFu32i_BFu8s_BFu0i { unsigned int v1:32; unsigned short v2:8; unsigned int :0; };
struct BFu32i_BFu8s_BFu0ll { unsigned int v1:32; unsigned short v2:8; unsigned long long :0; };
struct BFu32i_BFu8s_BFu0s { unsigned int v1:32; unsigned short v2:8; unsigned short :0; };
struct BFu32i_BFu9i_BFu0c { unsigned int v1:32; unsigned int v2:9; unsigned char :0; };
struct BFu32i_BFu9i_BFu0i { unsigned int v1:32; unsigned int v2:9; unsigned int :0; };
struct BFu32i_BFu9i_BFu0ll { unsigned int v1:32; unsigned int v2:9; unsigned long long :0; };
struct BFu32i_BFu9i_BFu0s { unsigned int v1:32; unsigned int v2:9; unsigned short :0; };
struct BFu32i_BFu9ll_BFu0c { unsigned int v1:32; unsigned long long v2:9; unsigned char :0; };
struct BFu32i_BFu9ll_BFu0i { unsigned int v1:32; unsigned long long v2:9; unsigned int :0; };
struct BFu32i_BFu9ll_BFu0ll { unsigned int v1:32; unsigned long long v2:9; unsigned long long :0; };
struct BFu32i_BFu9ll_BFu0s { unsigned int v1:32; unsigned long long v2:9; unsigned short :0; };
struct BFu32i_BFu9s_BFu0c { unsigned int v1:32; unsigned short v2:9; unsigned char :0; };
struct BFu32i_BFu9s_BFu0i { unsigned int v1:32; unsigned short v2:9; unsigned int :0; };
struct BFu32i_BFu9s_BFu0ll { unsigned int v1:32; unsigned short v2:9; unsigned long long :0; };
struct BFu32i_BFu9s_BFu0s { unsigned int v1:32; unsigned short v2:9; unsigned short :0; };
struct BFu32i_C_BFu0c { unsigned int v1:32; char v2; unsigned char :0; };
struct BFu32i_C_BFu0i { unsigned int v1:32; char v2; unsigned int :0; };
struct BFu32i_C_BFu0ll { unsigned int v1:32; char v2; unsigned long long :0; };
struct BFu32i_C_BFu0s { unsigned int v1:32; char v2; unsigned short :0; };
struct BFu32i_D_BFu0c { unsigned int v1:32; double v2; unsigned char :0; };
struct BFu32i_D_BFu0i { unsigned int v1:32; double v2; unsigned int :0; };
struct BFu32i_D_BFu0ll { unsigned int v1:32; double v2; unsigned long long :0; };
struct BFu32i_D_BFu0s { unsigned int v1:32; double v2; unsigned short :0; };
struct BFu32i_F_BFu0c { unsigned int v1:32; float v2; unsigned char :0; };
struct BFu32i_F_BFu0i { unsigned int v1:32; float v2; unsigned int :0; };
struct BFu32i_F_BFu0ll { unsigned int v1:32; float v2; unsigned long long :0; };
struct BFu32i_F_BFu0s { unsigned int v1:32; float v2; unsigned short :0; };
struct BFu32i_I_BFu0c { unsigned int v1:32; int v2; unsigned char :0; };
struct BFu32i_I_BFu0i { unsigned int v1:32; int v2; unsigned int :0; };
struct BFu32i_I_BFu0ll { unsigned int v1:32; int v2; unsigned long long :0; };
struct BFu32i_I_BFu0s { unsigned int v1:32; int v2; unsigned short :0; };
struct BFu32i_Ip_BFu0c { unsigned int v1:32; int * v2; unsigned char :0; };
struct BFu32i_Ip_BFu0i { unsigned int v1:32; int * v2; unsigned int :0; };
struct BFu32i_Ip_BFu0ll { unsigned int v1:32; int * v2; unsigned long long :0; };
struct BFu32i_Ip_BFu0s { unsigned int v1:32; int * v2; unsigned short :0; };
struct BFu32i_L_BFu0c { unsigned int v1:32; long long v2; unsigned char :0; };
struct BFu32i_L_BFu0i { unsigned int v1:32; long long v2; unsigned int :0; };
struct BFu32i_L_BFu0ll { unsigned int v1:32; long long v2; unsigned long long :0; };
struct BFu32i_L_BFu0s { unsigned int v1:32; long long v2; unsigned short :0; };
struct BFu32i_S_BFu0c { unsigned int v1:32; short v2; unsigned char :0; };
struct BFu32i_S_BFu0i { unsigned int v1:32; short v2; unsigned int :0; };
struct BFu32i_S_BFu0ll { unsigned int v1:32; short v2; unsigned long long :0; };
struct BFu32i_S_BFu0s { unsigned int v1:32; short v2; unsigned short :0; };
struct BFu32i_Uc_BFu0c { unsigned int v1:32; unsigned char v2; unsigned char :0; };
struct BFu32i_Uc_BFu0i { unsigned int v1:32; unsigned char v2; unsigned int :0; };
struct BFu32i_Uc_BFu0ll { unsigned int v1:32; unsigned char v2; unsigned long long :0; };
struct BFu32i_Uc_BFu0s { unsigned int v1:32; unsigned char v2; unsigned short :0; };
struct BFu32i_Ui_BFu0c { unsigned int v1:32; unsigned int v2; unsigned char :0; };
struct BFu32i_Ui_BFu0i { unsigned int v1:32; unsigned int v2; unsigned int :0; };
struct BFu32i_Ui_BFu0ll { unsigned int v1:32; unsigned int v2; unsigned long long :0; };
struct BFu32i_Ui_BFu0s { unsigned int v1:32; unsigned int v2; unsigned short :0; };
struct BFu32i_Ul_BFu0c { unsigned int v1:32; unsigned long long v2; unsigned char :0; };
struct BFu32i_Ul_BFu0i { unsigned int v1:32; unsigned long long v2; unsigned int :0; };
struct BFu32i_Ul_BFu0ll { unsigned int v1:32; unsigned long long v2; unsigned long long :0; };
struct BFu32i_Ul_BFu0s { unsigned int v1:32; unsigned long long v2; unsigned short :0; };
struct BFu32i_Us_BFu0c { unsigned int v1:32; unsigned short v2; unsigned char :0; };
struct BFu32i_Us_BFu0i { unsigned int v1:32; unsigned short v2; unsigned int :0; };
struct BFu32i_Us_BFu0ll { unsigned int v1:32; unsigned short v2; unsigned long long :0; };
struct BFu32i_Us_BFu0s { unsigned int v1:32; unsigned short v2; unsigned short :0; };
struct BFu32i_Vp_BFu0c { unsigned int v1:32; void * v2; unsigned char :0; };
struct BFu32i_Vp_BFu0i { unsigned int v1:32; void * v2; unsigned int :0; };
struct BFu32i_Vp_BFu0ll { unsigned int v1:32; void * v2; unsigned long long :0; };
struct BFu32i_Vp_BFu0s { unsigned int v1:32; void * v2; unsigned short :0; };
struct BFu32ll_BFu0c { unsigned long long v1:32; unsigned char :0; };
struct BFu32ll_BFu0c_BFu0c { unsigned long long v1:32; unsigned char :0; unsigned char :0; };
struct BFu32ll_BFu0c_BFu0i { unsigned long long v1:32; unsigned char :0; unsigned int :0; };
struct BFu32ll_BFu0c_BFu0ll { unsigned long long v1:32; unsigned char :0; unsigned long long :0; };
struct BFu32ll_BFu0c_BFu0s { unsigned long long v1:32; unsigned char :0; unsigned short :0; };
struct BFu32ll_BFu0c_BFu15i { unsigned long long v1:32; unsigned char :0; unsigned int v2:15; };
struct BFu32ll_BFu0c_BFu15ll { unsigned long long v1:32; unsigned char :0; unsigned long long v2:15; };
struct BFu32ll_BFu0c_BFu15s { unsigned long long v1:32; unsigned char :0; unsigned short v2:15; };
struct BFu32ll_BFu0c_BFu16i { unsigned long long v1:32; unsigned char :0; unsigned int v2:16; };
struct BFu32ll_BFu0c_BFu16ll { unsigned long long v1:32; unsigned char :0; unsigned long long v2:16; };
struct BFu32ll_BFu0c_BFu16s { unsigned long long v1:32; unsigned char :0; unsigned short v2:16; };
struct BFu32ll_BFu0c_BFu17i { unsigned long long v1:32; unsigned char :0; unsigned int v2:17; };
struct BFu32ll_BFu0c_BFu17ll { unsigned long long v1:32; unsigned char :0; unsigned long long v2:17; };
struct BFu32ll_BFu0c_BFu1c { unsigned long long v1:32; unsigned char :0; unsigned char v2:1; };
struct BFu32ll_BFu0c_BFu1i { unsigned long long v1:32; unsigned char :0; unsigned int v2:1; };
struct BFu32ll_BFu0c_BFu1ll { unsigned long long v1:32; unsigned char :0; unsigned long long v2:1; };
struct BFu32ll_BFu0c_BFu1s { unsigned long long v1:32; unsigned char :0; unsigned short v2:1; };
struct BFu32ll_BFu0c_BFu31i { unsigned long long v1:32; unsigned char :0; unsigned int v2:31; };
struct BFu32ll_BFu0c_BFu31ll { unsigned long long v1:32; unsigned char :0; unsigned long long v2:31; };
struct BFu32ll_BFu0c_BFu32i { unsigned long long v1:32; unsigned char :0; unsigned int v2:32; };
struct BFu32ll_BFu0c_BFu32ll { unsigned long long v1:32; unsigned char :0; unsigned long long v2:32; };
struct BFu32ll_BFu0c_BFu33 { unsigned long long v1:32; unsigned char :0; unsigned long long v2:33; };
struct BFu32ll_BFu0c_BFu7c { unsigned long long v1:32; unsigned char :0; unsigned char v2:7; };
struct BFu32ll_BFu0c_BFu7i { unsigned long long v1:32; unsigned char :0; unsigned int v2:7; };
struct BFu32ll_BFu0c_BFu7ll { unsigned long long v1:32; unsigned char :0; unsigned long long v2:7; };
struct BFu32ll_BFu0c_BFu7s { unsigned long long v1:32; unsigned char :0; unsigned short v2:7; };
struct BFu32ll_BFu0c_BFu8c { unsigned long long v1:32; unsigned char :0; unsigned char v2:8; };
struct BFu32ll_BFu0c_BFu8i { unsigned long long v1:32; unsigned char :0; unsigned int v2:8; };
struct BFu32ll_BFu0c_BFu8ll { unsigned long long v1:32; unsigned char :0; unsigned long long v2:8; };
struct BFu32ll_BFu0c_BFu8s { unsigned long long v1:32; unsigned char :0; unsigned short v2:8; };
struct BFu32ll_BFu0c_BFu9i { unsigned long long v1:32; unsigned char :0; unsigned int v2:9; };
struct BFu32ll_BFu0c_BFu9ll { unsigned long long v1:32; unsigned char :0; unsigned long long v2:9; };
struct BFu32ll_BFu0c_BFu9s { unsigned long long v1:32; unsigned char :0; unsigned short v2:9; };
struct BFu32ll_BFu0c_C { unsigned long long v1:32; unsigned char :0; char v2; };
struct BFu32ll_BFu0c_D { unsigned long long v1:32; unsigned char :0; double v2; };
struct BFu32ll_BFu0c_F { unsigned long long v1:32; unsigned char :0; float v2; };
struct BFu32ll_BFu0c_I { unsigned long long v1:32; unsigned char :0; int v2; };
struct BFu32ll_BFu0c_Ip { unsigned long long v1:32; unsigned char :0; int * v2; };
struct BFu32ll_BFu0c_L { unsigned long long v1:32; unsigned char :0; long long v2; };
struct BFu32ll_BFu0c_S { unsigned long long v1:32; unsigned char :0; short v2; };
struct BFu32ll_BFu0c_Uc { unsigned long long v1:32; unsigned char :0; unsigned char v2; };
struct BFu32ll_BFu0c_Ui { unsigned long long v1:32; unsigned char :0; unsigned int v2; };
struct BFu32ll_BFu0c_Ul { unsigned long long v1:32; unsigned char :0; unsigned long long v2; };
struct BFu32ll_BFu0c_Us { unsigned long long v1:32; unsigned char :0; unsigned short v2; };
struct BFu32ll_BFu0c_Vp { unsigned long long v1:32; unsigned char :0; void * v2; };
struct BFu32ll_BFu0i { unsigned long long v1:32; unsigned int :0; };
struct BFu32ll_BFu0i_BFu0c { unsigned long long v1:32; unsigned int :0; unsigned char :0; };
struct BFu32ll_BFu0i_BFu0i { unsigned long long v1:32; unsigned int :0; unsigned int :0; };
struct BFu32ll_BFu0i_BFu0ll { unsigned long long v1:32; unsigned int :0; unsigned long long :0; };
struct BFu32ll_BFu0i_BFu0s { unsigned long long v1:32; unsigned int :0; unsigned short :0; };
struct BFu32ll_BFu0i_BFu15i { unsigned long long v1:32; unsigned int :0; unsigned int v2:15; };
struct BFu32ll_BFu0i_BFu15ll { unsigned long long v1:32; unsigned int :0; unsigned long long v2:15; };
struct BFu32ll_BFu0i_BFu15s { unsigned long long v1:32; unsigned int :0; unsigned short v2:15; };
struct BFu32ll_BFu0i_BFu16i { unsigned long long v1:32; unsigned int :0; unsigned int v2:16; };
struct BFu32ll_BFu0i_BFu16ll { unsigned long long v1:32; unsigned int :0; unsigned long long v2:16; };
struct BFu32ll_BFu0i_BFu16s { unsigned long long v1:32; unsigned int :0; unsigned short v2:16; };
struct BFu32ll_BFu0i_BFu17i { unsigned long long v1:32; unsigned int :0; unsigned int v2:17; };
struct BFu32ll_BFu0i_BFu17ll { unsigned long long v1:32; unsigned int :0; unsigned long long v2:17; };
struct BFu32ll_BFu0i_BFu1c { unsigned long long v1:32; unsigned int :0; unsigned char v2:1; };
struct BFu32ll_BFu0i_BFu1i { unsigned long long v1:32; unsigned int :0; unsigned int v2:1; };
struct BFu32ll_BFu0i_BFu1ll { unsigned long long v1:32; unsigned int :0; unsigned long long v2:1; };
struct BFu32ll_BFu0i_BFu1s { unsigned long long v1:32; unsigned int :0; unsigned short v2:1; };
struct BFu32ll_BFu0i_BFu31i { unsigned long long v1:32; unsigned int :0; unsigned int v2:31; };
struct BFu32ll_BFu0i_BFu31ll { unsigned long long v1:32; unsigned int :0; unsigned long long v2:31; };
struct BFu32ll_BFu0i_BFu32i { unsigned long long v1:32; unsigned int :0; unsigned int v2:32; };
struct BFu32ll_BFu0i_BFu32ll { unsigned long long v1:32; unsigned int :0; unsigned long long v2:32; };
struct BFu32ll_BFu0i_BFu33 { unsigned long long v1:32; unsigned int :0; unsigned long long v2:33; };
struct BFu32ll_BFu0i_BFu7c { unsigned long long v1:32; unsigned int :0; unsigned char v2:7; };
struct BFu32ll_BFu0i_BFu7i { unsigned long long v1:32; unsigned int :0; unsigned int v2:7; };
struct BFu32ll_BFu0i_BFu7ll { unsigned long long v1:32; unsigned int :0; unsigned long long v2:7; };
struct BFu32ll_BFu0i_BFu7s { unsigned long long v1:32; unsigned int :0; unsigned short v2:7; };
struct BFu32ll_BFu0i_BFu8c { unsigned long long v1:32; unsigned int :0; unsigned char v2:8; };
struct BFu32ll_BFu0i_BFu8i { unsigned long long v1:32; unsigned int :0; unsigned int v2:8; };
struct BFu32ll_BFu0i_BFu8ll { unsigned long long v1:32; unsigned int :0; unsigned long long v2:8; };
struct BFu32ll_BFu0i_BFu8s { unsigned long long v1:32; unsigned int :0; unsigned short v2:8; };
struct BFu32ll_BFu0i_BFu9i { unsigned long long v1:32; unsigned int :0; unsigned int v2:9; };
struct BFu32ll_BFu0i_BFu9ll { unsigned long long v1:32; unsigned int :0; unsigned long long v2:9; };
struct BFu32ll_BFu0i_BFu9s { unsigned long long v1:32; unsigned int :0; unsigned short v2:9; };
struct BFu32ll_BFu0i_C { unsigned long long v1:32; unsigned int :0; char v2; };
struct BFu32ll_BFu0i_D { unsigned long long v1:32; unsigned int :0; double v2; };
struct BFu32ll_BFu0i_F { unsigned long long v1:32; unsigned int :0; float v2; };
struct BFu32ll_BFu0i_I { unsigned long long v1:32; unsigned int :0; int v2; };
struct BFu32ll_BFu0i_Ip { unsigned long long v1:32; unsigned int :0; int * v2; };
struct BFu32ll_BFu0i_L { unsigned long long v1:32; unsigned int :0; long long v2; };
struct BFu32ll_BFu0i_S { unsigned long long v1:32; unsigned int :0; short v2; };
struct BFu32ll_BFu0i_Uc { unsigned long long v1:32; unsigned int :0; unsigned char v2; };
struct BFu32ll_BFu0i_Ui { unsigned long long v1:32; unsigned int :0; unsigned int v2; };
struct BFu32ll_BFu0i_Ul { unsigned long long v1:32; unsigned int :0; unsigned long long v2; };
struct BFu32ll_BFu0i_Us { unsigned long long v1:32; unsigned int :0; unsigned short v2; };
struct BFu32ll_BFu0i_Vp { unsigned long long v1:32; unsigned int :0; void * v2; };
struct BFu32ll_BFu0ll { unsigned long long v1:32; unsigned long long :0; };
struct BFu32ll_BFu0ll_BFu0c { unsigned long long v1:32; unsigned long long :0; unsigned char :0; };
struct BFu32ll_BFu0ll_BFu0i { unsigned long long v1:32; unsigned long long :0; unsigned int :0; };
struct BFu32ll_BFu0ll_BFu0ll { unsigned long long v1:32; unsigned long long :0; unsigned long long :0; };
struct BFu32ll_BFu0ll_BFu0s { unsigned long long v1:32; unsigned long long :0; unsigned short :0; };
struct BFu32ll_BFu0ll_BFu15i { unsigned long long v1:32; unsigned long long :0; unsigned int v2:15; };
struct BFu32ll_BFu0ll_BFu15ll { unsigned long long v1:32; unsigned long long :0; unsigned long long v2:15; };
struct BFu32ll_BFu0ll_BFu15s { unsigned long long v1:32; unsigned long long :0; unsigned short v2:15; };
struct BFu32ll_BFu0ll_BFu16i { unsigned long long v1:32; unsigned long long :0; unsigned int v2:16; };
struct BFu32ll_BFu0ll_BFu16ll { unsigned long long v1:32; unsigned long long :0; unsigned long long v2:16; };
struct BFu32ll_BFu0ll_BFu16s { unsigned long long v1:32; unsigned long long :0; unsigned short v2:16; };
struct BFu32ll_BFu0ll_BFu17i { unsigned long long v1:32; unsigned long long :0; unsigned int v2:17; };
struct BFu32ll_BFu0ll_BFu17ll { unsigned long long v1:32; unsigned long long :0; unsigned long long v2:17; };
struct BFu32ll_BFu0ll_BFu1c { unsigned long long v1:32; unsigned long long :0; unsigned char v2:1; };
struct BFu32ll_BFu0ll_BFu1i { unsigned long long v1:32; unsigned long long :0; unsigned int v2:1; };
struct BFu32ll_BFu0ll_BFu1ll { unsigned long long v1:32; unsigned long long :0; unsigned long long v2:1; };
struct BFu32ll_BFu0ll_BFu1s { unsigned long long v1:32; unsigned long long :0; unsigned short v2:1; };
struct BFu32ll_BFu0ll_BFu31i { unsigned long long v1:32; unsigned long long :0; unsigned int v2:31; };
struct BFu32ll_BFu0ll_BFu31ll { unsigned long long v1:32; unsigned long long :0; unsigned long long v2:31; };
struct BFu32ll_BFu0ll_BFu32i { unsigned long long v1:32; unsigned long long :0; unsigned int v2:32; };
struct BFu32ll_BFu0ll_BFu32ll { unsigned long long v1:32; unsigned long long :0; unsigned long long v2:32; };
struct BFu32ll_BFu0ll_BFu33 { unsigned long long v1:32; unsigned long long :0; unsigned long long v2:33; };
struct BFu32ll_BFu0ll_BFu7c { unsigned long long v1:32; unsigned long long :0; unsigned char v2:7; };
struct BFu32ll_BFu0ll_BFu7i { unsigned long long v1:32; unsigned long long :0; unsigned int v2:7; };
struct BFu32ll_BFu0ll_BFu7ll { unsigned long long v1:32; unsigned long long :0; unsigned long long v2:7; };
struct BFu32ll_BFu0ll_BFu7s { unsigned long long v1:32; unsigned long long :0; unsigned short v2:7; };
struct BFu32ll_BFu0ll_BFu8c { unsigned long long v1:32; unsigned long long :0; unsigned char v2:8; };
struct BFu32ll_BFu0ll_BFu8i { unsigned long long v1:32; unsigned long long :0; unsigned int v2:8; };
struct BFu32ll_BFu0ll_BFu8ll { unsigned long long v1:32; unsigned long long :0; unsigned long long v2:8; };
struct BFu32ll_BFu0ll_BFu8s { unsigned long long v1:32; unsigned long long :0; unsigned short v2:8; };
struct BFu32ll_BFu0ll_BFu9i { unsigned long long v1:32; unsigned long long :0; unsigned int v2:9; };
struct BFu32ll_BFu0ll_BFu9ll { unsigned long long v1:32; unsigned long long :0; unsigned long long v2:9; };
struct BFu32ll_BFu0ll_BFu9s { unsigned long long v1:32; unsigned long long :0; unsigned short v2:9; };
struct BFu32ll_BFu0ll_C { unsigned long long v1:32; unsigned long long :0; char v2; };
struct BFu32ll_BFu0ll_D { unsigned long long v1:32; unsigned long long :0; double v2; };
struct BFu32ll_BFu0ll_F { unsigned long long v1:32; unsigned long long :0; float v2; };
struct BFu32ll_BFu0ll_I { unsigned long long v1:32; unsigned long long :0; int v2; };
struct BFu32ll_BFu0ll_Ip { unsigned long long v1:32; unsigned long long :0; int * v2; };
struct BFu32ll_BFu0ll_L { unsigned long long v1:32; unsigned long long :0; long long v2; };
struct BFu32ll_BFu0ll_S { unsigned long long v1:32; unsigned long long :0; short v2; };
struct BFu32ll_BFu0ll_Uc { unsigned long long v1:32; unsigned long long :0; unsigned char v2; };
struct BFu32ll_BFu0ll_Ui { unsigned long long v1:32; unsigned long long :0; unsigned int v2; };
struct BFu32ll_BFu0ll_Ul { unsigned long long v1:32; unsigned long long :0; unsigned long long v2; };
struct BFu32ll_BFu0ll_Us { unsigned long long v1:32; unsigned long long :0; unsigned short v2; };
struct BFu32ll_BFu0ll_Vp { unsigned long long v1:32; unsigned long long :0; void * v2; };
struct BFu32ll_BFu0s { unsigned long long v1:32; unsigned short :0; };
struct BFu32ll_BFu0s_BFu0c { unsigned long long v1:32; unsigned short :0; unsigned char :0; };
struct BFu32ll_BFu0s_BFu0i { unsigned long long v1:32; unsigned short :0; unsigned int :0; };
struct BFu32ll_BFu0s_BFu0ll { unsigned long long v1:32; unsigned short :0; unsigned long long :0; };
struct BFu32ll_BFu0s_BFu0s { unsigned long long v1:32; unsigned short :0; unsigned short :0; };
struct BFu32ll_BFu0s_BFu15i { unsigned long long v1:32; unsigned short :0; unsigned int v2:15; };
struct BFu32ll_BFu0s_BFu15ll { unsigned long long v1:32; unsigned short :0; unsigned long long v2:15; };
struct BFu32ll_BFu0s_BFu15s { unsigned long long v1:32; unsigned short :0; unsigned short v2:15; };
struct BFu32ll_BFu0s_BFu16i { unsigned long long v1:32; unsigned short :0; unsigned int v2:16; };
struct BFu32ll_BFu0s_BFu16ll { unsigned long long v1:32; unsigned short :0; unsigned long long v2:16; };
struct BFu32ll_BFu0s_BFu16s { unsigned long long v1:32; unsigned short :0; unsigned short v2:16; };
struct BFu32ll_BFu0s_BFu17i { unsigned long long v1:32; unsigned short :0; unsigned int v2:17; };
struct BFu32ll_BFu0s_BFu17ll { unsigned long long v1:32; unsigned short :0; unsigned long long v2:17; };
struct BFu32ll_BFu0s_BFu1c { unsigned long long v1:32; unsigned short :0; unsigned char v2:1; };
struct BFu32ll_BFu0s_BFu1i { unsigned long long v1:32; unsigned short :0; unsigned int v2:1; };
struct BFu32ll_BFu0s_BFu1ll { unsigned long long v1:32; unsigned short :0; unsigned long long v2:1; };
struct BFu32ll_BFu0s_BFu1s { unsigned long long v1:32; unsigned short :0; unsigned short v2:1; };
struct BFu32ll_BFu0s_BFu31i { unsigned long long v1:32; unsigned short :0; unsigned int v2:31; };
struct BFu32ll_BFu0s_BFu31ll { unsigned long long v1:32; unsigned short :0; unsigned long long v2:31; };
struct BFu32ll_BFu0s_BFu32i { unsigned long long v1:32; unsigned short :0; unsigned int v2:32; };
struct BFu32ll_BFu0s_BFu32ll { unsigned long long v1:32; unsigned short :0; unsigned long long v2:32; };
struct BFu32ll_BFu0s_BFu33 { unsigned long long v1:32; unsigned short :0; unsigned long long v2:33; };
struct BFu32ll_BFu0s_BFu7c { unsigned long long v1:32; unsigned short :0; unsigned char v2:7; };
struct BFu32ll_BFu0s_BFu7i { unsigned long long v1:32; unsigned short :0; unsigned int v2:7; };
struct BFu32ll_BFu0s_BFu7ll { unsigned long long v1:32; unsigned short :0; unsigned long long v2:7; };
struct BFu32ll_BFu0s_BFu7s { unsigned long long v1:32; unsigned short :0; unsigned short v2:7; };
struct BFu32ll_BFu0s_BFu8c { unsigned long long v1:32; unsigned short :0; unsigned char v2:8; };
struct BFu32ll_BFu0s_BFu8i { unsigned long long v1:32; unsigned short :0; unsigned int v2:8; };
struct BFu32ll_BFu0s_BFu8ll { unsigned long long v1:32; unsigned short :0; unsigned long long v2:8; };
struct BFu32ll_BFu0s_BFu8s { unsigned long long v1:32; unsigned short :0; unsigned short v2:8; };
struct BFu32ll_BFu0s_BFu9i { unsigned long long v1:32; unsigned short :0; unsigned int v2:9; };
struct BFu32ll_BFu0s_BFu9ll { unsigned long long v1:32; unsigned short :0; unsigned long long v2:9; };
struct BFu32ll_BFu0s_BFu9s { unsigned long long v1:32; unsigned short :0; unsigned short v2:9; };
struct BFu32ll_BFu0s_C { unsigned long long v1:32; unsigned short :0; char v2; };
struct BFu32ll_BFu0s_D { unsigned long long v1:32; unsigned short :0; double v2; };
struct BFu32ll_BFu0s_F { unsigned long long v1:32; unsigned short :0; float v2; };
struct BFu32ll_BFu0s_I { unsigned long long v1:32; unsigned short :0; int v2; };
struct BFu32ll_BFu0s_Ip { unsigned long long v1:32; unsigned short :0; int * v2; };
struct BFu32ll_BFu0s_L { unsigned long long v1:32; unsigned short :0; long long v2; };
struct BFu32ll_BFu0s_S { unsigned long long v1:32; unsigned short :0; short v2; };
struct BFu32ll_BFu0s_Uc { unsigned long long v1:32; unsigned short :0; unsigned char v2; };
struct BFu32ll_BFu0s_Ui { unsigned long long v1:32; unsigned short :0; unsigned int v2; };
struct BFu32ll_BFu0s_Ul { unsigned long long v1:32; unsigned short :0; unsigned long long v2; };
struct BFu32ll_BFu0s_Us { unsigned long long v1:32; unsigned short :0; unsigned short v2; };
struct BFu32ll_BFu0s_Vp { unsigned long long v1:32; unsigned short :0; void * v2; };
struct BFu32ll_BFu15i_BFu0c { unsigned long long v1:32; unsigned int v2:15; unsigned char :0; };
struct BFu32ll_BFu15i_BFu0i { unsigned long long v1:32; unsigned int v2:15; unsigned int :0; };
struct BFu32ll_BFu15i_BFu0ll { unsigned long long v1:32; unsigned int v2:15; unsigned long long :0; };
struct BFu32ll_BFu15i_BFu0s { unsigned long long v1:32; unsigned int v2:15; unsigned short :0; };
struct BFu32ll_BFu15ll_BFu0c { unsigned long long v1:32; unsigned long long v2:15; unsigned char :0; };
struct BFu32ll_BFu15ll_BFu0i { unsigned long long v1:32; unsigned long long v2:15; unsigned int :0; };
struct BFu32ll_BFu15ll_BFu0ll { unsigned long long v1:32; unsigned long long v2:15; unsigned long long :0; };
struct BFu32ll_BFu15ll_BFu0s { unsigned long long v1:32; unsigned long long v2:15; unsigned short :0; };
struct BFu32ll_BFu15s_BFu0c { unsigned long long v1:32; unsigned short v2:15; unsigned char :0; };
struct BFu32ll_BFu15s_BFu0i { unsigned long long v1:32; unsigned short v2:15; unsigned int :0; };
struct BFu32ll_BFu15s_BFu0ll { unsigned long long v1:32; unsigned short v2:15; unsigned long long :0; };
struct BFu32ll_BFu15s_BFu0s { unsigned long long v1:32; unsigned short v2:15; unsigned short :0; };
struct BFu32ll_BFu16i_BFu0c { unsigned long long v1:32; unsigned int v2:16; unsigned char :0; };
struct BFu32ll_BFu16i_BFu0i { unsigned long long v1:32; unsigned int v2:16; unsigned int :0; };
struct BFu32ll_BFu16i_BFu0ll { unsigned long long v1:32; unsigned int v2:16; unsigned long long :0; };
struct BFu32ll_BFu16i_BFu0s { unsigned long long v1:32; unsigned int v2:16; unsigned short :0; };
struct BFu32ll_BFu16ll_BFu0c { unsigned long long v1:32; unsigned long long v2:16; unsigned char :0; };
struct BFu32ll_BFu16ll_BFu0i { unsigned long long v1:32; unsigned long long v2:16; unsigned int :0; };
struct BFu32ll_BFu16ll_BFu0ll { unsigned long long v1:32; unsigned long long v2:16; unsigned long long :0; };
struct BFu32ll_BFu16ll_BFu0s { unsigned long long v1:32; unsigned long long v2:16; unsigned short :0; };
struct BFu32ll_BFu16s_BFu0c { unsigned long long v1:32; unsigned short v2:16; unsigned char :0; };
struct BFu32ll_BFu16s_BFu0i { unsigned long long v1:32; unsigned short v2:16; unsigned int :0; };
struct BFu32ll_BFu16s_BFu0ll { unsigned long long v1:32; unsigned short v2:16; unsigned long long :0; };
struct BFu32ll_BFu16s_BFu0s { unsigned long long v1:32; unsigned short v2:16; unsigned short :0; };
struct BFu32ll_BFu17i_BFu0c { unsigned long long v1:32; unsigned int v2:17; unsigned char :0; };
struct BFu32ll_BFu17i_BFu0i { unsigned long long v1:32; unsigned int v2:17; unsigned int :0; };
struct BFu32ll_BFu17i_BFu0ll { unsigned long long v1:32; unsigned int v2:17; unsigned long long :0; };
struct BFu32ll_BFu17i_BFu0s { unsigned long long v1:32; unsigned int v2:17; unsigned short :0; };
struct BFu32ll_BFu17ll_BFu0c { unsigned long long v1:32; unsigned long long v2:17; unsigned char :0; };
struct BFu32ll_BFu17ll_BFu0i { unsigned long long v1:32; unsigned long long v2:17; unsigned int :0; };
struct BFu32ll_BFu17ll_BFu0ll { unsigned long long v1:32; unsigned long long v2:17; unsigned long long :0; };
struct BFu32ll_BFu17ll_BFu0s { unsigned long long v1:32; unsigned long long v2:17; unsigned short :0; };
struct BFu32ll_BFu1c_BFu0c { unsigned long long v1:32; unsigned char v2:1; unsigned char :0; };
struct BFu32ll_BFu1c_BFu0i { unsigned long long v1:32; unsigned char v2:1; unsigned int :0; };
struct BFu32ll_BFu1c_BFu0ll { unsigned long long v1:32; unsigned char v2:1; unsigned long long :0; };
struct BFu32ll_BFu1c_BFu0s { unsigned long long v1:32; unsigned char v2:1; unsigned short :0; };
struct BFu32ll_BFu1i_BFu0c { unsigned long long v1:32; unsigned int v2:1; unsigned char :0; };
struct BFu32ll_BFu1i_BFu0i { unsigned long long v1:32; unsigned int v2:1; unsigned int :0; };
struct BFu32ll_BFu1i_BFu0ll { unsigned long long v1:32; unsigned int v2:1; unsigned long long :0; };
struct BFu32ll_BFu1i_BFu0s { unsigned long long v1:32; unsigned int v2:1; unsigned short :0; };
struct BFu32ll_BFu1ll_BFu0c { unsigned long long v1:32; unsigned long long v2:1; unsigned char :0; };
struct BFu32ll_BFu1ll_BFu0i { unsigned long long v1:32; unsigned long long v2:1; unsigned int :0; };
struct BFu32ll_BFu1ll_BFu0ll { unsigned long long v1:32; unsigned long long v2:1; unsigned long long :0; };
struct BFu32ll_BFu1ll_BFu0s { unsigned long long v1:32; unsigned long long v2:1; unsigned short :0; };
struct BFu32ll_BFu1s_BFu0c { unsigned long long v1:32; unsigned short v2:1; unsigned char :0; };
struct BFu32ll_BFu1s_BFu0i { unsigned long long v1:32; unsigned short v2:1; unsigned int :0; };
struct BFu32ll_BFu1s_BFu0ll { unsigned long long v1:32; unsigned short v2:1; unsigned long long :0; };
struct BFu32ll_BFu1s_BFu0s { unsigned long long v1:32; unsigned short v2:1; unsigned short :0; };
struct BFu32ll_BFu31i_BFu0c { unsigned long long v1:32; unsigned int v2:31; unsigned char :0; };
struct BFu32ll_BFu31i_BFu0i { unsigned long long v1:32; unsigned int v2:31; unsigned int :0; };
struct BFu32ll_BFu31i_BFu0ll { unsigned long long v1:32; unsigned int v2:31; unsigned long long :0; };
struct BFu32ll_BFu31i_BFu0s { unsigned long long v1:32; unsigned int v2:31; unsigned short :0; };
struct BFu32ll_BFu31ll_BFu0c { unsigned long long v1:32; unsigned long long v2:31; unsigned char :0; };
struct BFu32ll_BFu31ll_BFu0i { unsigned long long v1:32; unsigned long long v2:31; unsigned int :0; };
struct BFu32ll_BFu31ll_BFu0ll { unsigned long long v1:32; unsigned long long v2:31; unsigned long long :0; };
struct BFu32ll_BFu31ll_BFu0s { unsigned long long v1:32; unsigned long long v2:31; unsigned short :0; };
struct BFu32ll_BFu32i_BFu0c { unsigned long long v1:32; unsigned int v2:32; unsigned char :0; };
struct BFu32ll_BFu32i_BFu0i { unsigned long long v1:32; unsigned int v2:32; unsigned int :0; };
struct BFu32ll_BFu32i_BFu0ll { unsigned long long v1:32; unsigned int v2:32; unsigned long long :0; };
struct BFu32ll_BFu32i_BFu0s { unsigned long long v1:32; unsigned int v2:32; unsigned short :0; };
struct BFu32ll_BFu32ll_BFu0c { unsigned long long v1:32; unsigned long long v2:32; unsigned char :0; };
struct BFu32ll_BFu32ll_BFu0i { unsigned long long v1:32; unsigned long long v2:32; unsigned int :0; };
struct BFu32ll_BFu32ll_BFu0ll { unsigned long long v1:32; unsigned long long v2:32; unsigned long long :0; };
struct BFu32ll_BFu32ll_BFu0s { unsigned long long v1:32; unsigned long long v2:32; unsigned short :0; };
struct BFu32ll_BFu33_BFu0c { unsigned long long v1:32; unsigned long long v2:33; unsigned char :0; };
struct BFu32ll_BFu33_BFu0i { unsigned long long v1:32; unsigned long long v2:33; unsigned int :0; };
struct BFu32ll_BFu33_BFu0ll { unsigned long long v1:32; unsigned long long v2:33; unsigned long long :0; };
struct BFu32ll_BFu33_BFu0s { unsigned long long v1:32; unsigned long long v2:33; unsigned short :0; };
struct BFu32ll_BFu7c_BFu0c { unsigned long long v1:32; unsigned char v2:7; unsigned char :0; };
struct BFu32ll_BFu7c_BFu0i { unsigned long long v1:32; unsigned char v2:7; unsigned int :0; };
struct BFu32ll_BFu7c_BFu0ll { unsigned long long v1:32; unsigned char v2:7; unsigned long long :0; };
struct BFu32ll_BFu7c_BFu0s { unsigned long long v1:32; unsigned char v2:7; unsigned short :0; };
struct BFu32ll_BFu7i_BFu0c { unsigned long long v1:32; unsigned int v2:7; unsigned char :0; };
struct BFu32ll_BFu7i_BFu0i { unsigned long long v1:32; unsigned int v2:7; unsigned int :0; };
struct BFu32ll_BFu7i_BFu0ll { unsigned long long v1:32; unsigned int v2:7; unsigned long long :0; };
struct BFu32ll_BFu7i_BFu0s { unsigned long long v1:32; unsigned int v2:7; unsigned short :0; };
struct BFu32ll_BFu7ll_BFu0c { unsigned long long v1:32; unsigned long long v2:7; unsigned char :0; };
struct BFu32ll_BFu7ll_BFu0i { unsigned long long v1:32; unsigned long long v2:7; unsigned int :0; };
struct BFu32ll_BFu7ll_BFu0ll { unsigned long long v1:32; unsigned long long v2:7; unsigned long long :0; };
struct BFu32ll_BFu7ll_BFu0s { unsigned long long v1:32; unsigned long long v2:7; unsigned short :0; };
struct BFu32ll_BFu7s_BFu0c { unsigned long long v1:32; unsigned short v2:7; unsigned char :0; };
struct BFu32ll_BFu7s_BFu0i { unsigned long long v1:32; unsigned short v2:7; unsigned int :0; };
struct BFu32ll_BFu7s_BFu0ll { unsigned long long v1:32; unsigned short v2:7; unsigned long long :0; };
struct BFu32ll_BFu7s_BFu0s { unsigned long long v1:32; unsigned short v2:7; unsigned short :0; };
struct BFu32ll_BFu8c_BFu0c { unsigned long long v1:32; unsigned char v2:8; unsigned char :0; };
struct BFu32ll_BFu8c_BFu0i { unsigned long long v1:32; unsigned char v2:8; unsigned int :0; };
struct BFu32ll_BFu8c_BFu0ll { unsigned long long v1:32; unsigned char v2:8; unsigned long long :0; };
struct BFu32ll_BFu8c_BFu0s { unsigned long long v1:32; unsigned char v2:8; unsigned short :0; };
struct BFu32ll_BFu8i_BFu0c { unsigned long long v1:32; unsigned int v2:8; unsigned char :0; };
struct BFu32ll_BFu8i_BFu0i { unsigned long long v1:32; unsigned int v2:8; unsigned int :0; };
struct BFu32ll_BFu8i_BFu0ll { unsigned long long v1:32; unsigned int v2:8; unsigned long long :0; };
struct BFu32ll_BFu8i_BFu0s { unsigned long long v1:32; unsigned int v2:8; unsigned short :0; };
struct BFu32ll_BFu8ll_BFu0c { unsigned long long v1:32; unsigned long long v2:8; unsigned char :0; };
struct BFu32ll_BFu8ll_BFu0i { unsigned long long v1:32; unsigned long long v2:8; unsigned int :0; };
struct BFu32ll_BFu8ll_BFu0ll { unsigned long long v1:32; unsigned long long v2:8; unsigned long long :0; };
struct BFu32ll_BFu8ll_BFu0s { unsigned long long v1:32; unsigned long long v2:8; unsigned short :0; };
struct BFu32ll_BFu8s_BFu0c { unsigned long long v1:32; unsigned short v2:8; unsigned char :0; };
struct BFu32ll_BFu8s_BFu0i { unsigned long long v1:32; unsigned short v2:8; unsigned int :0; };
struct BFu32ll_BFu8s_BFu0ll { unsigned long long v1:32; unsigned short v2:8; unsigned long long :0; };
struct BFu32ll_BFu8s_BFu0s { unsigned long long v1:32; unsigned short v2:8; unsigned short :0; };
struct BFu32ll_BFu9i_BFu0c { unsigned long long v1:32; unsigned int v2:9; unsigned char :0; };
struct BFu32ll_BFu9i_BFu0i { unsigned long long v1:32; unsigned int v2:9; unsigned int :0; };
struct BFu32ll_BFu9i_BFu0ll { unsigned long long v1:32; unsigned int v2:9; unsigned long long :0; };
struct BFu32ll_BFu9i_BFu0s { unsigned long long v1:32; unsigned int v2:9; unsigned short :0; };
struct BFu32ll_BFu9ll_BFu0c { unsigned long long v1:32; unsigned long long v2:9; unsigned char :0; };
struct BFu32ll_BFu9ll_BFu0i { unsigned long long v1:32; unsigned long long v2:9; unsigned int :0; };
struct BFu32ll_BFu9ll_BFu0ll { unsigned long long v1:32; unsigned long long v2:9; unsigned long long :0; };
struct BFu32ll_BFu9ll_BFu0s { unsigned long long v1:32; unsigned long long v2:9; unsigned short :0; };
struct BFu32ll_BFu9s_BFu0c { unsigned long long v1:32; unsigned short v2:9; unsigned char :0; };
struct BFu32ll_BFu9s_BFu0i { unsigned long long v1:32; unsigned short v2:9; unsigned int :0; };
struct BFu32ll_BFu9s_BFu0ll { unsigned long long v1:32; unsigned short v2:9; unsigned long long :0; };
struct BFu32ll_BFu9s_BFu0s { unsigned long long v1:32; unsigned short v2:9; unsigned short :0; };
struct BFu32ll_C_BFu0c { unsigned long long v1:32; char v2; unsigned char :0; };
struct BFu32ll_C_BFu0i { unsigned long long v1:32; char v2; unsigned int :0; };
struct BFu32ll_C_BFu0ll { unsigned long long v1:32; char v2; unsigned long long :0; };
struct BFu32ll_C_BFu0s { unsigned long long v1:32; char v2; unsigned short :0; };
struct BFu32ll_D_BFu0c { unsigned long long v1:32; double v2; unsigned char :0; };
struct BFu32ll_D_BFu0i { unsigned long long v1:32; double v2; unsigned int :0; };
struct BFu32ll_D_BFu0ll { unsigned long long v1:32; double v2; unsigned long long :0; };
struct BFu32ll_D_BFu0s { unsigned long long v1:32; double v2; unsigned short :0; };
struct BFu32ll_F_BFu0c { unsigned long long v1:32; float v2; unsigned char :0; };
struct BFu32ll_F_BFu0i { unsigned long long v1:32; float v2; unsigned int :0; };
struct BFu32ll_F_BFu0ll { unsigned long long v1:32; float v2; unsigned long long :0; };
struct BFu32ll_F_BFu0s { unsigned long long v1:32; float v2; unsigned short :0; };
struct BFu32ll_I_BFu0c { unsigned long long v1:32; int v2; unsigned char :0; };
struct BFu32ll_I_BFu0i { unsigned long long v1:32; int v2; unsigned int :0; };
struct BFu32ll_I_BFu0ll { unsigned long long v1:32; int v2; unsigned long long :0; };
struct BFu32ll_I_BFu0s { unsigned long long v1:32; int v2; unsigned short :0; };
struct BFu32ll_Ip_BFu0c { unsigned long long v1:32; int * v2; unsigned char :0; };
struct BFu32ll_Ip_BFu0i { unsigned long long v1:32; int * v2; unsigned int :0; };
struct BFu32ll_Ip_BFu0ll { unsigned long long v1:32; int * v2; unsigned long long :0; };
struct BFu32ll_Ip_BFu0s { unsigned long long v1:32; int * v2; unsigned short :0; };
struct BFu32ll_L_BFu0c { unsigned long long v1:32; long long v2; unsigned char :0; };
struct BFu32ll_L_BFu0i { unsigned long long v1:32; long long v2; unsigned int :0; };
struct BFu32ll_L_BFu0ll { unsigned long long v1:32; long long v2; unsigned long long :0; };
struct BFu32ll_L_BFu0s { unsigned long long v1:32; long long v2; unsigned short :0; };
struct BFu32ll_S_BFu0c { unsigned long long v1:32; short v2; unsigned char :0; };
struct BFu32ll_S_BFu0i { unsigned long long v1:32; short v2; unsigned int :0; };
struct BFu32ll_S_BFu0ll { unsigned long long v1:32; short v2; unsigned long long :0; };
struct BFu32ll_S_BFu0s { unsigned long long v1:32; short v2; unsigned short :0; };
struct BFu32ll_Uc_BFu0c { unsigned long long v1:32; unsigned char v2; unsigned char :0; };
struct BFu32ll_Uc_BFu0i { unsigned long long v1:32; unsigned char v2; unsigned int :0; };
struct BFu32ll_Uc_BFu0ll { unsigned long long v1:32; unsigned char v2; unsigned long long :0; };
struct BFu32ll_Uc_BFu0s { unsigned long long v1:32; unsigned char v2; unsigned short :0; };
struct BFu32ll_Ui_BFu0c { unsigned long long v1:32; unsigned int v2; unsigned char :0; };
struct BFu32ll_Ui_BFu0i { unsigned long long v1:32; unsigned int v2; unsigned int :0; };
struct BFu32ll_Ui_BFu0ll { unsigned long long v1:32; unsigned int v2; unsigned long long :0; };
struct BFu32ll_Ui_BFu0s { unsigned long long v1:32; unsigned int v2; unsigned short :0; };
struct BFu32ll_Ul_BFu0c { unsigned long long v1:32; unsigned long long v2; unsigned char :0; };
struct BFu32ll_Ul_BFu0i { unsigned long long v1:32; unsigned long long v2; unsigned int :0; };
struct BFu32ll_Ul_BFu0ll { unsigned long long v1:32; unsigned long long v2; unsigned long long :0; };
struct BFu32ll_Ul_BFu0s { unsigned long long v1:32; unsigned long long v2; unsigned short :0; };
struct BFu32ll_Us_BFu0c { unsigned long long v1:32; unsigned short v2; unsigned char :0; };
struct BFu32ll_Us_BFu0i { unsigned long long v1:32; unsigned short v2; unsigned int :0; };
struct BFu32ll_Us_BFu0ll { unsigned long long v1:32; unsigned short v2; unsigned long long :0; };
struct BFu32ll_Us_BFu0s { unsigned long long v1:32; unsigned short v2; unsigned short :0; };
struct BFu32ll_Vp_BFu0c { unsigned long long v1:32; void * v2; unsigned char :0; };
struct BFu32ll_Vp_BFu0i { unsigned long long v1:32; void * v2; unsigned int :0; };
struct BFu32ll_Vp_BFu0ll { unsigned long long v1:32; void * v2; unsigned long long :0; };
struct BFu32ll_Vp_BFu0s { unsigned long long v1:32; void * v2; unsigned short :0; };
struct BFu33_BFu0c { unsigned long long v1:33; unsigned char :0; };
struct BFu33_BFu0c_BFu0c { unsigned long long v1:33; unsigned char :0; unsigned char :0; };
struct BFu33_BFu0c_BFu0i { unsigned long long v1:33; unsigned char :0; unsigned int :0; };
struct BFu33_BFu0c_BFu0ll { unsigned long long v1:33; unsigned char :0; unsigned long long :0; };
struct BFu33_BFu0c_BFu0s { unsigned long long v1:33; unsigned char :0; unsigned short :0; };
struct BFu33_BFu0c_BFu15i { unsigned long long v1:33; unsigned char :0; unsigned int v2:15; };
struct BFu33_BFu0c_BFu15ll { unsigned long long v1:33; unsigned char :0; unsigned long long v2:15; };
struct BFu33_BFu0c_BFu15s { unsigned long long v1:33; unsigned char :0; unsigned short v2:15; };
struct BFu33_BFu0c_BFu16i { unsigned long long v1:33; unsigned char :0; unsigned int v2:16; };
struct BFu33_BFu0c_BFu16ll { unsigned long long v1:33; unsigned char :0; unsigned long long v2:16; };
struct BFu33_BFu0c_BFu16s { unsigned long long v1:33; unsigned char :0; unsigned short v2:16; };
struct BFu33_BFu0c_BFu17i { unsigned long long v1:33; unsigned char :0; unsigned int v2:17; };
struct BFu33_BFu0c_BFu17ll { unsigned long long v1:33; unsigned char :0; unsigned long long v2:17; };
struct BFu33_BFu0c_BFu1c { unsigned long long v1:33; unsigned char :0; unsigned char v2:1; };
struct BFu33_BFu0c_BFu1i { unsigned long long v1:33; unsigned char :0; unsigned int v2:1; };
struct BFu33_BFu0c_BFu1ll { unsigned long long v1:33; unsigned char :0; unsigned long long v2:1; };
struct BFu33_BFu0c_BFu1s { unsigned long long v1:33; unsigned char :0; unsigned short v2:1; };
struct BFu33_BFu0c_BFu31i { unsigned long long v1:33; unsigned char :0; unsigned int v2:31; };
struct BFu33_BFu0c_BFu31ll { unsigned long long v1:33; unsigned char :0; unsigned long long v2:31; };
struct BFu33_BFu0c_BFu32i { unsigned long long v1:33; unsigned char :0; unsigned int v2:32; };
struct BFu33_BFu0c_BFu32ll { unsigned long long v1:33; unsigned char :0; unsigned long long v2:32; };
struct BFu33_BFu0c_BFu33 { unsigned long long v1:33; unsigned char :0; unsigned long long v2:33; };
struct BFu33_BFu0c_BFu7c { unsigned long long v1:33; unsigned char :0; unsigned char v2:7; };
struct BFu33_BFu0c_BFu7i { unsigned long long v1:33; unsigned char :0; unsigned int v2:7; };
struct BFu33_BFu0c_BFu7ll { unsigned long long v1:33; unsigned char :0; unsigned long long v2:7; };
struct BFu33_BFu0c_BFu7s { unsigned long long v1:33; unsigned char :0; unsigned short v2:7; };
struct BFu33_BFu0c_BFu8c { unsigned long long v1:33; unsigned char :0; unsigned char v2:8; };
struct BFu33_BFu0c_BFu8i { unsigned long long v1:33; unsigned char :0; unsigned int v2:8; };
struct BFu33_BFu0c_BFu8ll { unsigned long long v1:33; unsigned char :0; unsigned long long v2:8; };
struct BFu33_BFu0c_BFu8s { unsigned long long v1:33; unsigned char :0; unsigned short v2:8; };
struct BFu33_BFu0c_BFu9i { unsigned long long v1:33; unsigned char :0; unsigned int v2:9; };
struct BFu33_BFu0c_BFu9ll { unsigned long long v1:33; unsigned char :0; unsigned long long v2:9; };
struct BFu33_BFu0c_BFu9s { unsigned long long v1:33; unsigned char :0; unsigned short v2:9; };
struct BFu33_BFu0c_C { unsigned long long v1:33; unsigned char :0; char v2; };
struct BFu33_BFu0c_D { unsigned long long v1:33; unsigned char :0; double v2; };
struct BFu33_BFu0c_F { unsigned long long v1:33; unsigned char :0; float v2; };
struct BFu33_BFu0c_I { unsigned long long v1:33; unsigned char :0; int v2; };
struct BFu33_BFu0c_Ip { unsigned long long v1:33; unsigned char :0; int * v2; };
struct BFu33_BFu0c_L { unsigned long long v1:33; unsigned char :0; long long v2; };
struct BFu33_BFu0c_S { unsigned long long v1:33; unsigned char :0; short v2; };
struct BFu33_BFu0c_Uc { unsigned long long v1:33; unsigned char :0; unsigned char v2; };
struct BFu33_BFu0c_Ui { unsigned long long v1:33; unsigned char :0; unsigned int v2; };
struct BFu33_BFu0c_Ul { unsigned long long v1:33; unsigned char :0; unsigned long long v2; };
struct BFu33_BFu0c_Us { unsigned long long v1:33; unsigned char :0; unsigned short v2; };
struct BFu33_BFu0c_Vp { unsigned long long v1:33; unsigned char :0; void * v2; };
struct BFu33_BFu0i { unsigned long long v1:33; unsigned int :0; };
struct BFu33_BFu0i_BFu0c { unsigned long long v1:33; unsigned int :0; unsigned char :0; };
struct BFu33_BFu0i_BFu0i { unsigned long long v1:33; unsigned int :0; unsigned int :0; };
struct BFu33_BFu0i_BFu0ll { unsigned long long v1:33; unsigned int :0; unsigned long long :0; };
struct BFu33_BFu0i_BFu0s { unsigned long long v1:33; unsigned int :0; unsigned short :0; };
struct BFu33_BFu0i_BFu15i { unsigned long long v1:33; unsigned int :0; unsigned int v2:15; };
struct BFu33_BFu0i_BFu15ll { unsigned long long v1:33; unsigned int :0; unsigned long long v2:15; };
struct BFu33_BFu0i_BFu15s { unsigned long long v1:33; unsigned int :0; unsigned short v2:15; };
struct BFu33_BFu0i_BFu16i { unsigned long long v1:33; unsigned int :0; unsigned int v2:16; };
struct BFu33_BFu0i_BFu16ll { unsigned long long v1:33; unsigned int :0; unsigned long long v2:16; };
struct BFu33_BFu0i_BFu16s { unsigned long long v1:33; unsigned int :0; unsigned short v2:16; };
struct BFu33_BFu0i_BFu17i { unsigned long long v1:33; unsigned int :0; unsigned int v2:17; };
struct BFu33_BFu0i_BFu17ll { unsigned long long v1:33; unsigned int :0; unsigned long long v2:17; };
struct BFu33_BFu0i_BFu1c { unsigned long long v1:33; unsigned int :0; unsigned char v2:1; };
struct BFu33_BFu0i_BFu1i { unsigned long long v1:33; unsigned int :0; unsigned int v2:1; };
struct BFu33_BFu0i_BFu1ll { unsigned long long v1:33; unsigned int :0; unsigned long long v2:1; };
struct BFu33_BFu0i_BFu1s { unsigned long long v1:33; unsigned int :0; unsigned short v2:1; };
struct BFu33_BFu0i_BFu31i { unsigned long long v1:33; unsigned int :0; unsigned int v2:31; };
struct BFu33_BFu0i_BFu31ll { unsigned long long v1:33; unsigned int :0; unsigned long long v2:31; };
struct BFu33_BFu0i_BFu32i { unsigned long long v1:33; unsigned int :0; unsigned int v2:32; };
struct BFu33_BFu0i_BFu32ll { unsigned long long v1:33; unsigned int :0; unsigned long long v2:32; };
struct BFu33_BFu0i_BFu33 { unsigned long long v1:33; unsigned int :0; unsigned long long v2:33; };
struct BFu33_BFu0i_BFu7c { unsigned long long v1:33; unsigned int :0; unsigned char v2:7; };
struct BFu33_BFu0i_BFu7i { unsigned long long v1:33; unsigned int :0; unsigned int v2:7; };
struct BFu33_BFu0i_BFu7ll { unsigned long long v1:33; unsigned int :0; unsigned long long v2:7; };
struct BFu33_BFu0i_BFu7s { unsigned long long v1:33; unsigned int :0; unsigned short v2:7; };
struct BFu33_BFu0i_BFu8c { unsigned long long v1:33; unsigned int :0; unsigned char v2:8; };
struct BFu33_BFu0i_BFu8i { unsigned long long v1:33; unsigned int :0; unsigned int v2:8; };
struct BFu33_BFu0i_BFu8ll { unsigned long long v1:33; unsigned int :0; unsigned long long v2:8; };
struct BFu33_BFu0i_BFu8s { unsigned long long v1:33; unsigned int :0; unsigned short v2:8; };
struct BFu33_BFu0i_BFu9i { unsigned long long v1:33; unsigned int :0; unsigned int v2:9; };
struct BFu33_BFu0i_BFu9ll { unsigned long long v1:33; unsigned int :0; unsigned long long v2:9; };
struct BFu33_BFu0i_BFu9s { unsigned long long v1:33; unsigned int :0; unsigned short v2:9; };
struct BFu33_BFu0i_C { unsigned long long v1:33; unsigned int :0; char v2; };
struct BFu33_BFu0i_D { unsigned long long v1:33; unsigned int :0; double v2; };
struct BFu33_BFu0i_F { unsigned long long v1:33; unsigned int :0; float v2; };
struct BFu33_BFu0i_I { unsigned long long v1:33; unsigned int :0; int v2; };
struct BFu33_BFu0i_Ip { unsigned long long v1:33; unsigned int :0; int * v2; };
struct BFu33_BFu0i_L { unsigned long long v1:33; unsigned int :0; long long v2; };
struct BFu33_BFu0i_S { unsigned long long v1:33; unsigned int :0; short v2; };
struct BFu33_BFu0i_Uc { unsigned long long v1:33; unsigned int :0; unsigned char v2; };
struct BFu33_BFu0i_Ui { unsigned long long v1:33; unsigned int :0; unsigned int v2; };
struct BFu33_BFu0i_Ul { unsigned long long v1:33; unsigned int :0; unsigned long long v2; };
struct BFu33_BFu0i_Us { unsigned long long v1:33; unsigned int :0; unsigned short v2; };
struct BFu33_BFu0i_Vp { unsigned long long v1:33; unsigned int :0; void * v2; };
struct BFu33_BFu0ll { unsigned long long v1:33; unsigned long long :0; };
struct BFu33_BFu0ll_BFu0c { unsigned long long v1:33; unsigned long long :0; unsigned char :0; };
struct BFu33_BFu0ll_BFu0i { unsigned long long v1:33; unsigned long long :0; unsigned int :0; };
struct BFu33_BFu0ll_BFu0ll { unsigned long long v1:33; unsigned long long :0; unsigned long long :0; };
struct BFu33_BFu0ll_BFu0s { unsigned long long v1:33; unsigned long long :0; unsigned short :0; };
struct BFu33_BFu0ll_BFu15i { unsigned long long v1:33; unsigned long long :0; unsigned int v2:15; };
struct BFu33_BFu0ll_BFu15ll { unsigned long long v1:33; unsigned long long :0; unsigned long long v2:15; };
struct BFu33_BFu0ll_BFu15s { unsigned long long v1:33; unsigned long long :0; unsigned short v2:15; };
struct BFu33_BFu0ll_BFu16i { unsigned long long v1:33; unsigned long long :0; unsigned int v2:16; };
struct BFu33_BFu0ll_BFu16ll { unsigned long long v1:33; unsigned long long :0; unsigned long long v2:16; };
struct BFu33_BFu0ll_BFu16s { unsigned long long v1:33; unsigned long long :0; unsigned short v2:16; };
struct BFu33_BFu0ll_BFu17i { unsigned long long v1:33; unsigned long long :0; unsigned int v2:17; };
struct BFu33_BFu0ll_BFu17ll { unsigned long long v1:33; unsigned long long :0; unsigned long long v2:17; };
struct BFu33_BFu0ll_BFu1c { unsigned long long v1:33; unsigned long long :0; unsigned char v2:1; };
struct BFu33_BFu0ll_BFu1i { unsigned long long v1:33; unsigned long long :0; unsigned int v2:1; };
struct BFu33_BFu0ll_BFu1ll { unsigned long long v1:33; unsigned long long :0; unsigned long long v2:1; };
struct BFu33_BFu0ll_BFu1s { unsigned long long v1:33; unsigned long long :0; unsigned short v2:1; };
struct BFu33_BFu0ll_BFu31i { unsigned long long v1:33; unsigned long long :0; unsigned int v2:31; };
struct BFu33_BFu0ll_BFu31ll { unsigned long long v1:33; unsigned long long :0; unsigned long long v2:31; };
struct BFu33_BFu0ll_BFu32i { unsigned long long v1:33; unsigned long long :0; unsigned int v2:32; };
struct BFu33_BFu0ll_BFu32ll { unsigned long long v1:33; unsigned long long :0; unsigned long long v2:32; };
struct BFu33_BFu0ll_BFu33 { unsigned long long v1:33; unsigned long long :0; unsigned long long v2:33; };
struct BFu33_BFu0ll_BFu7c { unsigned long long v1:33; unsigned long long :0; unsigned char v2:7; };
struct BFu33_BFu0ll_BFu7i { unsigned long long v1:33; unsigned long long :0; unsigned int v2:7; };
struct BFu33_BFu0ll_BFu7ll { unsigned long long v1:33; unsigned long long :0; unsigned long long v2:7; };
struct BFu33_BFu0ll_BFu7s { unsigned long long v1:33; unsigned long long :0; unsigned short v2:7; };
struct BFu33_BFu0ll_BFu8c { unsigned long long v1:33; unsigned long long :0; unsigned char v2:8; };
struct BFu33_BFu0ll_BFu8i { unsigned long long v1:33; unsigned long long :0; unsigned int v2:8; };
struct BFu33_BFu0ll_BFu8ll { unsigned long long v1:33; unsigned long long :0; unsigned long long v2:8; };
struct BFu33_BFu0ll_BFu8s { unsigned long long v1:33; unsigned long long :0; unsigned short v2:8; };
struct BFu33_BFu0ll_BFu9i { unsigned long long v1:33; unsigned long long :0; unsigned int v2:9; };
struct BFu33_BFu0ll_BFu9ll { unsigned long long v1:33; unsigned long long :0; unsigned long long v2:9; };
struct BFu33_BFu0ll_BFu9s { unsigned long long v1:33; unsigned long long :0; unsigned short v2:9; };
struct BFu33_BFu0ll_C { unsigned long long v1:33; unsigned long long :0; char v2; };
struct BFu33_BFu0ll_D { unsigned long long v1:33; unsigned long long :0; double v2; };
struct BFu33_BFu0ll_F { unsigned long long v1:33; unsigned long long :0; float v2; };
struct BFu33_BFu0ll_I { unsigned long long v1:33; unsigned long long :0; int v2; };
struct BFu33_BFu0ll_Ip { unsigned long long v1:33; unsigned long long :0; int * v2; };
struct BFu33_BFu0ll_L { unsigned long long v1:33; unsigned long long :0; long long v2; };
struct BFu33_BFu0ll_S { unsigned long long v1:33; unsigned long long :0; short v2; };
struct BFu33_BFu0ll_Uc { unsigned long long v1:33; unsigned long long :0; unsigned char v2; };
struct BFu33_BFu0ll_Ui { unsigned long long v1:33; unsigned long long :0; unsigned int v2; };
struct BFu33_BFu0ll_Ul { unsigned long long v1:33; unsigned long long :0; unsigned long long v2; };
struct BFu33_BFu0ll_Us { unsigned long long v1:33; unsigned long long :0; unsigned short v2; };
struct BFu33_BFu0ll_Vp { unsigned long long v1:33; unsigned long long :0; void * v2; };
struct BFu33_BFu0s { unsigned long long v1:33; unsigned short :0; };
struct BFu33_BFu0s_BFu0c { unsigned long long v1:33; unsigned short :0; unsigned char :0; };
struct BFu33_BFu0s_BFu0i { unsigned long long v1:33; unsigned short :0; unsigned int :0; };
struct BFu33_BFu0s_BFu0ll { unsigned long long v1:33; unsigned short :0; unsigned long long :0; };
struct BFu33_BFu0s_BFu0s { unsigned long long v1:33; unsigned short :0; unsigned short :0; };
struct BFu33_BFu0s_BFu15i { unsigned long long v1:33; unsigned short :0; unsigned int v2:15; };
struct BFu33_BFu0s_BFu15ll { unsigned long long v1:33; unsigned short :0; unsigned long long v2:15; };
struct BFu33_BFu0s_BFu15s { unsigned long long v1:33; unsigned short :0; unsigned short v2:15; };
struct BFu33_BFu0s_BFu16i { unsigned long long v1:33; unsigned short :0; unsigned int v2:16; };
struct BFu33_BFu0s_BFu16ll { unsigned long long v1:33; unsigned short :0; unsigned long long v2:16; };
struct BFu33_BFu0s_BFu16s { unsigned long long v1:33; unsigned short :0; unsigned short v2:16; };
struct BFu33_BFu0s_BFu17i { unsigned long long v1:33; unsigned short :0; unsigned int v2:17; };
struct BFu33_BFu0s_BFu17ll { unsigned long long v1:33; unsigned short :0; unsigned long long v2:17; };
struct BFu33_BFu0s_BFu1c { unsigned long long v1:33; unsigned short :0; unsigned char v2:1; };
struct BFu33_BFu0s_BFu1i { unsigned long long v1:33; unsigned short :0; unsigned int v2:1; };
struct BFu33_BFu0s_BFu1ll { unsigned long long v1:33; unsigned short :0; unsigned long long v2:1; };
struct BFu33_BFu0s_BFu1s { unsigned long long v1:33; unsigned short :0; unsigned short v2:1; };
struct BFu33_BFu0s_BFu31i { unsigned long long v1:33; unsigned short :0; unsigned int v2:31; };
struct BFu33_BFu0s_BFu31ll { unsigned long long v1:33; unsigned short :0; unsigned long long v2:31; };
struct BFu33_BFu0s_BFu32i { unsigned long long v1:33; unsigned short :0; unsigned int v2:32; };
struct BFu33_BFu0s_BFu32ll { unsigned long long v1:33; unsigned short :0; unsigned long long v2:32; };
struct BFu33_BFu0s_BFu33 { unsigned long long v1:33; unsigned short :0; unsigned long long v2:33; };
struct BFu33_BFu0s_BFu7c { unsigned long long v1:33; unsigned short :0; unsigned char v2:7; };
struct BFu33_BFu0s_BFu7i { unsigned long long v1:33; unsigned short :0; unsigned int v2:7; };
struct BFu33_BFu0s_BFu7ll { unsigned long long v1:33; unsigned short :0; unsigned long long v2:7; };
struct BFu33_BFu0s_BFu7s { unsigned long long v1:33; unsigned short :0; unsigned short v2:7; };
struct BFu33_BFu0s_BFu8c { unsigned long long v1:33; unsigned short :0; unsigned char v2:8; };
struct BFu33_BFu0s_BFu8i { unsigned long long v1:33; unsigned short :0; unsigned int v2:8; };
struct BFu33_BFu0s_BFu8ll { unsigned long long v1:33; unsigned short :0; unsigned long long v2:8; };
struct BFu33_BFu0s_BFu8s { unsigned long long v1:33; unsigned short :0; unsigned short v2:8; };
struct BFu33_BFu0s_BFu9i { unsigned long long v1:33; unsigned short :0; unsigned int v2:9; };
struct BFu33_BFu0s_BFu9ll { unsigned long long v1:33; unsigned short :0; unsigned long long v2:9; };
struct BFu33_BFu0s_BFu9s { unsigned long long v1:33; unsigned short :0; unsigned short v2:9; };
struct BFu33_BFu0s_C { unsigned long long v1:33; unsigned short :0; char v2; };
struct BFu33_BFu0s_D { unsigned long long v1:33; unsigned short :0; double v2; };
struct BFu33_BFu0s_F { unsigned long long v1:33; unsigned short :0; float v2; };
struct BFu33_BFu0s_I { unsigned long long v1:33; unsigned short :0; int v2; };
struct BFu33_BFu0s_Ip { unsigned long long v1:33; unsigned short :0; int * v2; };
struct BFu33_BFu0s_L { unsigned long long v1:33; unsigned short :0; long long v2; };
struct BFu33_BFu0s_S { unsigned long long v1:33; unsigned short :0; short v2; };
struct BFu33_BFu0s_Uc { unsigned long long v1:33; unsigned short :0; unsigned char v2; };
struct BFu33_BFu0s_Ui { unsigned long long v1:33; unsigned short :0; unsigned int v2; };
struct BFu33_BFu0s_Ul { unsigned long long v1:33; unsigned short :0; unsigned long long v2; };
struct BFu33_BFu0s_Us { unsigned long long v1:33; unsigned short :0; unsigned short v2; };
struct BFu33_BFu0s_Vp { unsigned long long v1:33; unsigned short :0; void * v2; };
struct BFu33_BFu15i_BFu0c { unsigned long long v1:33; unsigned int v2:15; unsigned char :0; };
struct BFu33_BFu15i_BFu0i { unsigned long long v1:33; unsigned int v2:15; unsigned int :0; };
struct BFu33_BFu15i_BFu0ll { unsigned long long v1:33; unsigned int v2:15; unsigned long long :0; };
struct BFu33_BFu15i_BFu0s { unsigned long long v1:33; unsigned int v2:15; unsigned short :0; };
struct BFu33_BFu15ll_BFu0c { unsigned long long v1:33; unsigned long long v2:15; unsigned char :0; };
struct BFu33_BFu15ll_BFu0i { unsigned long long v1:33; unsigned long long v2:15; unsigned int :0; };
struct BFu33_BFu15ll_BFu0ll { unsigned long long v1:33; unsigned long long v2:15; unsigned long long :0; };
struct BFu33_BFu15ll_BFu0s { unsigned long long v1:33; unsigned long long v2:15; unsigned short :0; };
struct BFu33_BFu15s_BFu0c { unsigned long long v1:33; unsigned short v2:15; unsigned char :0; };
struct BFu33_BFu15s_BFu0i { unsigned long long v1:33; unsigned short v2:15; unsigned int :0; };
struct BFu33_BFu15s_BFu0ll { unsigned long long v1:33; unsigned short v2:15; unsigned long long :0; };
struct BFu33_BFu15s_BFu0s { unsigned long long v1:33; unsigned short v2:15; unsigned short :0; };
struct BFu33_BFu16i_BFu0c { unsigned long long v1:33; unsigned int v2:16; unsigned char :0; };
struct BFu33_BFu16i_BFu0i { unsigned long long v1:33; unsigned int v2:16; unsigned int :0; };
struct BFu33_BFu16i_BFu0ll { unsigned long long v1:33; unsigned int v2:16; unsigned long long :0; };
struct BFu33_BFu16i_BFu0s { unsigned long long v1:33; unsigned int v2:16; unsigned short :0; };
struct BFu33_BFu16ll_BFu0c { unsigned long long v1:33; unsigned long long v2:16; unsigned char :0; };
struct BFu33_BFu16ll_BFu0i { unsigned long long v1:33; unsigned long long v2:16; unsigned int :0; };
struct BFu33_BFu16ll_BFu0ll { unsigned long long v1:33; unsigned long long v2:16; unsigned long long :0; };
struct BFu33_BFu16ll_BFu0s { unsigned long long v1:33; unsigned long long v2:16; unsigned short :0; };
struct BFu33_BFu16s_BFu0c { unsigned long long v1:33; unsigned short v2:16; unsigned char :0; };
struct BFu33_BFu16s_BFu0i { unsigned long long v1:33; unsigned short v2:16; unsigned int :0; };
struct BFu33_BFu16s_BFu0ll { unsigned long long v1:33; unsigned short v2:16; unsigned long long :0; };
struct BFu33_BFu16s_BFu0s { unsigned long long v1:33; unsigned short v2:16; unsigned short :0; };
struct BFu33_BFu17i_BFu0c { unsigned long long v1:33; unsigned int v2:17; unsigned char :0; };
struct BFu33_BFu17i_BFu0i { unsigned long long v1:33; unsigned int v2:17; unsigned int :0; };
struct BFu33_BFu17i_BFu0ll { unsigned long long v1:33; unsigned int v2:17; unsigned long long :0; };
struct BFu33_BFu17i_BFu0s { unsigned long long v1:33; unsigned int v2:17; unsigned short :0; };
struct BFu33_BFu17ll_BFu0c { unsigned long long v1:33; unsigned long long v2:17; unsigned char :0; };
struct BFu33_BFu17ll_BFu0i { unsigned long long v1:33; unsigned long long v2:17; unsigned int :0; };
struct BFu33_BFu17ll_BFu0ll { unsigned long long v1:33; unsigned long long v2:17; unsigned long long :0; };
struct BFu33_BFu17ll_BFu0s { unsigned long long v1:33; unsigned long long v2:17; unsigned short :0; };
struct BFu33_BFu1c_BFu0c { unsigned long long v1:33; unsigned char v2:1; unsigned char :0; };
struct BFu33_BFu1c_BFu0i { unsigned long long v1:33; unsigned char v2:1; unsigned int :0; };
struct BFu33_BFu1c_BFu0ll { unsigned long long v1:33; unsigned char v2:1; unsigned long long :0; };
struct BFu33_BFu1c_BFu0s { unsigned long long v1:33; unsigned char v2:1; unsigned short :0; };
struct BFu33_BFu1i_BFu0c { unsigned long long v1:33; unsigned int v2:1; unsigned char :0; };
struct BFu33_BFu1i_BFu0i { unsigned long long v1:33; unsigned int v2:1; unsigned int :0; };
struct BFu33_BFu1i_BFu0ll { unsigned long long v1:33; unsigned int v2:1; unsigned long long :0; };
struct BFu33_BFu1i_BFu0s { unsigned long long v1:33; unsigned int v2:1; unsigned short :0; };
struct BFu33_BFu1ll_BFu0c { unsigned long long v1:33; unsigned long long v2:1; unsigned char :0; };
struct BFu33_BFu1ll_BFu0i { unsigned long long v1:33; unsigned long long v2:1; unsigned int :0; };
struct BFu33_BFu1ll_BFu0ll { unsigned long long v1:33; unsigned long long v2:1; unsigned long long :0; };
struct BFu33_BFu1ll_BFu0s { unsigned long long v1:33; unsigned long long v2:1; unsigned short :0; };
struct BFu33_BFu1s_BFu0c { unsigned long long v1:33; unsigned short v2:1; unsigned char :0; };
struct BFu33_BFu1s_BFu0i { unsigned long long v1:33; unsigned short v2:1; unsigned int :0; };
struct BFu33_BFu1s_BFu0ll { unsigned long long v1:33; unsigned short v2:1; unsigned long long :0; };
struct BFu33_BFu1s_BFu0s { unsigned long long v1:33; unsigned short v2:1; unsigned short :0; };
struct BFu33_BFu31i_BFu0c { unsigned long long v1:33; unsigned int v2:31; unsigned char :0; };
struct BFu33_BFu31i_BFu0i { unsigned long long v1:33; unsigned int v2:31; unsigned int :0; };
struct BFu33_BFu31i_BFu0ll { unsigned long long v1:33; unsigned int v2:31; unsigned long long :0; };
struct BFu33_BFu31i_BFu0s { unsigned long long v1:33; unsigned int v2:31; unsigned short :0; };
struct BFu33_BFu31ll_BFu0c { unsigned long long v1:33; unsigned long long v2:31; unsigned char :0; };
struct BFu33_BFu31ll_BFu0i { unsigned long long v1:33; unsigned long long v2:31; unsigned int :0; };
struct BFu33_BFu31ll_BFu0ll { unsigned long long v1:33; unsigned long long v2:31; unsigned long long :0; };
struct BFu33_BFu31ll_BFu0s { unsigned long long v1:33; unsigned long long v2:31; unsigned short :0; };
struct BFu33_BFu32i_BFu0c { unsigned long long v1:33; unsigned int v2:32; unsigned char :0; };
struct BFu33_BFu32i_BFu0i { unsigned long long v1:33; unsigned int v2:32; unsigned int :0; };
struct BFu33_BFu32i_BFu0ll { unsigned long long v1:33; unsigned int v2:32; unsigned long long :0; };
struct BFu33_BFu32i_BFu0s { unsigned long long v1:33; unsigned int v2:32; unsigned short :0; };
struct BFu33_BFu32ll_BFu0c { unsigned long long v1:33; unsigned long long v2:32; unsigned char :0; };
struct BFu33_BFu32ll_BFu0i { unsigned long long v1:33; unsigned long long v2:32; unsigned int :0; };
struct BFu33_BFu32ll_BFu0ll { unsigned long long v1:33; unsigned long long v2:32; unsigned long long :0; };
struct BFu33_BFu32ll_BFu0s { unsigned long long v1:33; unsigned long long v2:32; unsigned short :0; };
struct BFu33_BFu33_BFu0c { unsigned long long v1:33; unsigned long long v2:33; unsigned char :0; };
struct BFu33_BFu33_BFu0i { unsigned long long v1:33; unsigned long long v2:33; unsigned int :0; };
struct BFu33_BFu33_BFu0ll { unsigned long long v1:33; unsigned long long v2:33; unsigned long long :0; };
struct BFu33_BFu33_BFu0s { unsigned long long v1:33; unsigned long long v2:33; unsigned short :0; };
struct BFu33_BFu7c_BFu0c { unsigned long long v1:33; unsigned char v2:7; unsigned char :0; };
struct BFu33_BFu7c_BFu0i { unsigned long long v1:33; unsigned char v2:7; unsigned int :0; };
struct BFu33_BFu7c_BFu0ll { unsigned long long v1:33; unsigned char v2:7; unsigned long long :0; };
struct BFu33_BFu7c_BFu0s { unsigned long long v1:33; unsigned char v2:7; unsigned short :0; };
struct BFu33_BFu7i_BFu0c { unsigned long long v1:33; unsigned int v2:7; unsigned char :0; };
struct BFu33_BFu7i_BFu0i { unsigned long long v1:33; unsigned int v2:7; unsigned int :0; };
struct BFu33_BFu7i_BFu0ll { unsigned long long v1:33; unsigned int v2:7; unsigned long long :0; };
struct BFu33_BFu7i_BFu0s { unsigned long long v1:33; unsigned int v2:7; unsigned short :0; };
struct BFu33_BFu7ll_BFu0c { unsigned long long v1:33; unsigned long long v2:7; unsigned char :0; };
struct BFu33_BFu7ll_BFu0i { unsigned long long v1:33; unsigned long long v2:7; unsigned int :0; };
struct BFu33_BFu7ll_BFu0ll { unsigned long long v1:33; unsigned long long v2:7; unsigned long long :0; };
struct BFu33_BFu7ll_BFu0s { unsigned long long v1:33; unsigned long long v2:7; unsigned short :0; };
struct BFu33_BFu7s_BFu0c { unsigned long long v1:33; unsigned short v2:7; unsigned char :0; };
struct BFu33_BFu7s_BFu0i { unsigned long long v1:33; unsigned short v2:7; unsigned int :0; };
struct BFu33_BFu7s_BFu0ll { unsigned long long v1:33; unsigned short v2:7; unsigned long long :0; };
struct BFu33_BFu7s_BFu0s { unsigned long long v1:33; unsigned short v2:7; unsigned short :0; };
struct BFu33_BFu8c_BFu0c { unsigned long long v1:33; unsigned char v2:8; unsigned char :0; };
struct BFu33_BFu8c_BFu0i { unsigned long long v1:33; unsigned char v2:8; unsigned int :0; };
struct BFu33_BFu8c_BFu0ll { unsigned long long v1:33; unsigned char v2:8; unsigned long long :0; };
struct BFu33_BFu8c_BFu0s { unsigned long long v1:33; unsigned char v2:8; unsigned short :0; };
struct BFu33_BFu8i_BFu0c { unsigned long long v1:33; unsigned int v2:8; unsigned char :0; };
struct BFu33_BFu8i_BFu0i { unsigned long long v1:33; unsigned int v2:8; unsigned int :0; };
struct BFu33_BFu8i_BFu0ll { unsigned long long v1:33; unsigned int v2:8; unsigned long long :0; };
struct BFu33_BFu8i_BFu0s { unsigned long long v1:33; unsigned int v2:8; unsigned short :0; };
struct BFu33_BFu8ll_BFu0c { unsigned long long v1:33; unsigned long long v2:8; unsigned char :0; };
struct BFu33_BFu8ll_BFu0i { unsigned long long v1:33; unsigned long long v2:8; unsigned int :0; };
struct BFu33_BFu8ll_BFu0ll { unsigned long long v1:33; unsigned long long v2:8; unsigned long long :0; };
struct BFu33_BFu8ll_BFu0s { unsigned long long v1:33; unsigned long long v2:8; unsigned short :0; };
struct BFu33_BFu8s_BFu0c { unsigned long long v1:33; unsigned short v2:8; unsigned char :0; };
struct BFu33_BFu8s_BFu0i { unsigned long long v1:33; unsigned short v2:8; unsigned int :0; };
struct BFu33_BFu8s_BFu0ll { unsigned long long v1:33; unsigned short v2:8; unsigned long long :0; };
struct BFu33_BFu8s_BFu0s { unsigned long long v1:33; unsigned short v2:8; unsigned short :0; };
struct BFu33_BFu9i_BFu0c { unsigned long long v1:33; unsigned int v2:9; unsigned char :0; };
struct BFu33_BFu9i_BFu0i { unsigned long long v1:33; unsigned int v2:9; unsigned int :0; };
struct BFu33_BFu9i_BFu0ll { unsigned long long v1:33; unsigned int v2:9; unsigned long long :0; };
struct BFu33_BFu9i_BFu0s { unsigned long long v1:33; unsigned int v2:9; unsigned short :0; };
struct BFu33_BFu9ll_BFu0c { unsigned long long v1:33; unsigned long long v2:9; unsigned char :0; };
struct BFu33_BFu9ll_BFu0i { unsigned long long v1:33; unsigned long long v2:9; unsigned int :0; };
struct BFu33_BFu9ll_BFu0ll { unsigned long long v1:33; unsigned long long v2:9; unsigned long long :0; };
struct BFu33_BFu9ll_BFu0s { unsigned long long v1:33; unsigned long long v2:9; unsigned short :0; };
struct BFu33_BFu9s_BFu0c { unsigned long long v1:33; unsigned short v2:9; unsigned char :0; };
struct BFu33_BFu9s_BFu0i { unsigned long long v1:33; unsigned short v2:9; unsigned int :0; };
struct BFu33_BFu9s_BFu0ll { unsigned long long v1:33; unsigned short v2:9; unsigned long long :0; };
struct BFu33_BFu9s_BFu0s { unsigned long long v1:33; unsigned short v2:9; unsigned short :0; };
struct BFu33_C_BFu0c { unsigned long long v1:33; char v2; unsigned char :0; };
struct BFu33_C_BFu0i { unsigned long long v1:33; char v2; unsigned int :0; };
struct BFu33_C_BFu0ll { unsigned long long v1:33; char v2; unsigned long long :0; };
struct BFu33_C_BFu0s { unsigned long long v1:33; char v2; unsigned short :0; };
struct BFu33_D_BFu0c { unsigned long long v1:33; double v2; unsigned char :0; };
struct BFu33_D_BFu0i { unsigned long long v1:33; double v2; unsigned int :0; };
struct BFu33_D_BFu0ll { unsigned long long v1:33; double v2; unsigned long long :0; };
struct BFu33_D_BFu0s { unsigned long long v1:33; double v2; unsigned short :0; };
struct BFu33_F_BFu0c { unsigned long long v1:33; float v2; unsigned char :0; };
struct BFu33_F_BFu0i { unsigned long long v1:33; float v2; unsigned int :0; };
struct BFu33_F_BFu0ll { unsigned long long v1:33; float v2; unsigned long long :0; };
struct BFu33_F_BFu0s { unsigned long long v1:33; float v2; unsigned short :0; };
struct BFu33_I_BFu0c { unsigned long long v1:33; int v2; unsigned char :0; };
struct BFu33_I_BFu0i { unsigned long long v1:33; int v2; unsigned int :0; };
struct BFu33_I_BFu0ll { unsigned long long v1:33; int v2; unsigned long long :0; };
struct BFu33_I_BFu0s { unsigned long long v1:33; int v2; unsigned short :0; };
struct BFu33_Ip_BFu0c { unsigned long long v1:33; int * v2; unsigned char :0; };
struct BFu33_Ip_BFu0i { unsigned long long v1:33; int * v2; unsigned int :0; };
struct BFu33_Ip_BFu0ll { unsigned long long v1:33; int * v2; unsigned long long :0; };
struct BFu33_Ip_BFu0s { unsigned long long v1:33; int * v2; unsigned short :0; };
struct BFu33_L_BFu0c { unsigned long long v1:33; long long v2; unsigned char :0; };
struct BFu33_L_BFu0i { unsigned long long v1:33; long long v2; unsigned int :0; };
struct BFu33_L_BFu0ll { unsigned long long v1:33; long long v2; unsigned long long :0; };
struct BFu33_L_BFu0s { unsigned long long v1:33; long long v2; unsigned short :0; };
struct BFu33_S_BFu0c { unsigned long long v1:33; short v2; unsigned char :0; };
struct BFu33_S_BFu0i { unsigned long long v1:33; short v2; unsigned int :0; };
struct BFu33_S_BFu0ll { unsigned long long v1:33; short v2; unsigned long long :0; };
struct BFu33_S_BFu0s { unsigned long long v1:33; short v2; unsigned short :0; };
struct BFu33_Uc_BFu0c { unsigned long long v1:33; unsigned char v2; unsigned char :0; };
struct BFu33_Uc_BFu0i { unsigned long long v1:33; unsigned char v2; unsigned int :0; };
struct BFu33_Uc_BFu0ll { unsigned long long v1:33; unsigned char v2; unsigned long long :0; };
struct BFu33_Uc_BFu0s { unsigned long long v1:33; unsigned char v2; unsigned short :0; };
struct BFu33_Ui_BFu0c { unsigned long long v1:33; unsigned int v2; unsigned char :0; };
struct BFu33_Ui_BFu0i { unsigned long long v1:33; unsigned int v2; unsigned int :0; };
struct BFu33_Ui_BFu0ll { unsigned long long v1:33; unsigned int v2; unsigned long long :0; };
struct BFu33_Ui_BFu0s { unsigned long long v1:33; unsigned int v2; unsigned short :0; };
struct BFu33_Ul_BFu0c { unsigned long long v1:33; unsigned long long v2; unsigned char :0; };
struct BFu33_Ul_BFu0i { unsigned long long v1:33; unsigned long long v2; unsigned int :0; };
struct BFu33_Ul_BFu0ll { unsigned long long v1:33; unsigned long long v2; unsigned long long :0; };
struct BFu33_Ul_BFu0s { unsigned long long v1:33; unsigned long long v2; unsigned short :0; };
struct BFu33_Us_BFu0c { unsigned long long v1:33; unsigned short v2; unsigned char :0; };
struct BFu33_Us_BFu0i { unsigned long long v1:33; unsigned short v2; unsigned int :0; };
struct BFu33_Us_BFu0ll { unsigned long long v1:33; unsigned short v2; unsigned long long :0; };
struct BFu33_Us_BFu0s { unsigned long long v1:33; unsigned short v2; unsigned short :0; };
struct BFu33_Vp_BFu0c { unsigned long long v1:33; void * v2; unsigned char :0; };
struct BFu33_Vp_BFu0i { unsigned long long v1:33; void * v2; unsigned int :0; };
struct BFu33_Vp_BFu0ll { unsigned long long v1:33; void * v2; unsigned long long :0; };
struct BFu33_Vp_BFu0s { unsigned long long v1:33; void * v2; unsigned short :0; };
struct BFu7c_BFu0c { unsigned char v1:7; unsigned char :0; };
struct BFu7c_BFu0c_BFu0c { unsigned char v1:7; unsigned char :0; unsigned char :0; };
struct BFu7c_BFu0c_BFu0i { unsigned char v1:7; unsigned char :0; unsigned int :0; };
struct BFu7c_BFu0c_BFu0ll { unsigned char v1:7; unsigned char :0; unsigned long long :0; };
struct BFu7c_BFu0c_BFu0s { unsigned char v1:7; unsigned char :0; unsigned short :0; };
struct BFu7c_BFu0c_BFu15i { unsigned char v1:7; unsigned char :0; unsigned int v2:15; };
struct BFu7c_BFu0c_BFu15ll { unsigned char v1:7; unsigned char :0; unsigned long long v2:15; };
struct BFu7c_BFu0c_BFu15s { unsigned char v1:7; unsigned char :0; unsigned short v2:15; };
struct BFu7c_BFu0c_BFu16i { unsigned char v1:7; unsigned char :0; unsigned int v2:16; };
struct BFu7c_BFu0c_BFu16ll { unsigned char v1:7; unsigned char :0; unsigned long long v2:16; };
struct BFu7c_BFu0c_BFu16s { unsigned char v1:7; unsigned char :0; unsigned short v2:16; };
struct BFu7c_BFu0c_BFu17i { unsigned char v1:7; unsigned char :0; unsigned int v2:17; };
struct BFu7c_BFu0c_BFu17ll { unsigned char v1:7; unsigned char :0; unsigned long long v2:17; };
struct BFu7c_BFu0c_BFu1c { unsigned char v1:7; unsigned char :0; unsigned char v2:1; };
struct BFu7c_BFu0c_BFu1i { unsigned char v1:7; unsigned char :0; unsigned int v2:1; };
struct BFu7c_BFu0c_BFu1ll { unsigned char v1:7; unsigned char :0; unsigned long long v2:1; };
struct BFu7c_BFu0c_BFu1s { unsigned char v1:7; unsigned char :0; unsigned short v2:1; };
struct BFu7c_BFu0c_BFu31i { unsigned char v1:7; unsigned char :0; unsigned int v2:31; };
struct BFu7c_BFu0c_BFu31ll { unsigned char v1:7; unsigned char :0; unsigned long long v2:31; };
struct BFu7c_BFu0c_BFu32i { unsigned char v1:7; unsigned char :0; unsigned int v2:32; };
struct BFu7c_BFu0c_BFu32ll { unsigned char v1:7; unsigned char :0; unsigned long long v2:32; };
struct BFu7c_BFu0c_BFu33 { unsigned char v1:7; unsigned char :0; unsigned long long v2:33; };
struct BFu7c_BFu0c_BFu7c { unsigned char v1:7; unsigned char :0; unsigned char v2:7; };
struct BFu7c_BFu0c_BFu7i { unsigned char v1:7; unsigned char :0; unsigned int v2:7; };
struct BFu7c_BFu0c_BFu7ll { unsigned char v1:7; unsigned char :0; unsigned long long v2:7; };
struct BFu7c_BFu0c_BFu7s { unsigned char v1:7; unsigned char :0; unsigned short v2:7; };
struct BFu7c_BFu0c_BFu8c { unsigned char v1:7; unsigned char :0; unsigned char v2:8; };
struct BFu7c_BFu0c_BFu8i { unsigned char v1:7; unsigned char :0; unsigned int v2:8; };
struct BFu7c_BFu0c_BFu8ll { unsigned char v1:7; unsigned char :0; unsigned long long v2:8; };
struct BFu7c_BFu0c_BFu8s { unsigned char v1:7; unsigned char :0; unsigned short v2:8; };
struct BFu7c_BFu0c_BFu9i { unsigned char v1:7; unsigned char :0; unsigned int v2:9; };
struct BFu7c_BFu0c_BFu9ll { unsigned char v1:7; unsigned char :0; unsigned long long v2:9; };
struct BFu7c_BFu0c_BFu9s { unsigned char v1:7; unsigned char :0; unsigned short v2:9; };
struct BFu7c_BFu0c_C { unsigned char v1:7; unsigned char :0; char v2; };
struct BFu7c_BFu0c_D { unsigned char v1:7; unsigned char :0; double v2; };
struct BFu7c_BFu0c_F { unsigned char v1:7; unsigned char :0; float v2; };
struct BFu7c_BFu0c_I { unsigned char v1:7; unsigned char :0; int v2; };
struct BFu7c_BFu0c_Ip { unsigned char v1:7; unsigned char :0; int * v2; };
struct BFu7c_BFu0c_L { unsigned char v1:7; unsigned char :0; long long v2; };
struct BFu7c_BFu0c_S { unsigned char v1:7; unsigned char :0; short v2; };
struct BFu7c_BFu0c_Uc { unsigned char v1:7; unsigned char :0; unsigned char v2; };
struct BFu7c_BFu0c_Ui { unsigned char v1:7; unsigned char :0; unsigned int v2; };
struct BFu7c_BFu0c_Ul { unsigned char v1:7; unsigned char :0; unsigned long long v2; };
struct BFu7c_BFu0c_Us { unsigned char v1:7; unsigned char :0; unsigned short v2; };
struct BFu7c_BFu0c_Vp { unsigned char v1:7; unsigned char :0; void * v2; };
struct BFu7c_BFu0i { unsigned char v1:7; unsigned int :0; };
struct BFu7c_BFu0i_BFu0c { unsigned char v1:7; unsigned int :0; unsigned char :0; };
struct BFu7c_BFu0i_BFu0i { unsigned char v1:7; unsigned int :0; unsigned int :0; };
struct BFu7c_BFu0i_BFu0ll { unsigned char v1:7; unsigned int :0; unsigned long long :0; };
struct BFu7c_BFu0i_BFu0s { unsigned char v1:7; unsigned int :0; unsigned short :0; };
struct BFu7c_BFu0i_BFu15i { unsigned char v1:7; unsigned int :0; unsigned int v2:15; };
struct BFu7c_BFu0i_BFu15ll { unsigned char v1:7; unsigned int :0; unsigned long long v2:15; };
struct BFu7c_BFu0i_BFu15s { unsigned char v1:7; unsigned int :0; unsigned short v2:15; };
struct BFu7c_BFu0i_BFu16i { unsigned char v1:7; unsigned int :0; unsigned int v2:16; };
struct BFu7c_BFu0i_BFu16ll { unsigned char v1:7; unsigned int :0; unsigned long long v2:16; };
struct BFu7c_BFu0i_BFu16s { unsigned char v1:7; unsigned int :0; unsigned short v2:16; };
struct BFu7c_BFu0i_BFu17i { unsigned char v1:7; unsigned int :0; unsigned int v2:17; };
struct BFu7c_BFu0i_BFu17ll { unsigned char v1:7; unsigned int :0; unsigned long long v2:17; };
struct BFu7c_BFu0i_BFu1c { unsigned char v1:7; unsigned int :0; unsigned char v2:1; };
struct BFu7c_BFu0i_BFu1i { unsigned char v1:7; unsigned int :0; unsigned int v2:1; };
struct BFu7c_BFu0i_BFu1ll { unsigned char v1:7; unsigned int :0; unsigned long long v2:1; };
struct BFu7c_BFu0i_BFu1s { unsigned char v1:7; unsigned int :0; unsigned short v2:1; };
struct BFu7c_BFu0i_BFu31i { unsigned char v1:7; unsigned int :0; unsigned int v2:31; };
struct BFu7c_BFu0i_BFu31ll { unsigned char v1:7; unsigned int :0; unsigned long long v2:31; };
struct BFu7c_BFu0i_BFu32i { unsigned char v1:7; unsigned int :0; unsigned int v2:32; };
struct BFu7c_BFu0i_BFu32ll { unsigned char v1:7; unsigned int :0; unsigned long long v2:32; };
struct BFu7c_BFu0i_BFu33 { unsigned char v1:7; unsigned int :0; unsigned long long v2:33; };
struct BFu7c_BFu0i_BFu7c { unsigned char v1:7; unsigned int :0; unsigned char v2:7; };
struct BFu7c_BFu0i_BFu7i { unsigned char v1:7; unsigned int :0; unsigned int v2:7; };
struct BFu7c_BFu0i_BFu7ll { unsigned char v1:7; unsigned int :0; unsigned long long v2:7; };
struct BFu7c_BFu0i_BFu7s { unsigned char v1:7; unsigned int :0; unsigned short v2:7; };
struct BFu7c_BFu0i_BFu8c { unsigned char v1:7; unsigned int :0; unsigned char v2:8; };
struct BFu7c_BFu0i_BFu8i { unsigned char v1:7; unsigned int :0; unsigned int v2:8; };
struct BFu7c_BFu0i_BFu8ll { unsigned char v1:7; unsigned int :0; unsigned long long v2:8; };
struct BFu7c_BFu0i_BFu8s { unsigned char v1:7; unsigned int :0; unsigned short v2:8; };
struct BFu7c_BFu0i_BFu9i { unsigned char v1:7; unsigned int :0; unsigned int v2:9; };
struct BFu7c_BFu0i_BFu9ll { unsigned char v1:7; unsigned int :0; unsigned long long v2:9; };
struct BFu7c_BFu0i_BFu9s { unsigned char v1:7; unsigned int :0; unsigned short v2:9; };
struct BFu7c_BFu0i_C { unsigned char v1:7; unsigned int :0; char v2; };
struct BFu7c_BFu0i_D { unsigned char v1:7; unsigned int :0; double v2; };
struct BFu7c_BFu0i_F { unsigned char v1:7; unsigned int :0; float v2; };
struct BFu7c_BFu0i_I { unsigned char v1:7; unsigned int :0; int v2; };
struct BFu7c_BFu0i_Ip { unsigned char v1:7; unsigned int :0; int * v2; };
struct BFu7c_BFu0i_L { unsigned char v1:7; unsigned int :0; long long v2; };
struct BFu7c_BFu0i_S { unsigned char v1:7; unsigned int :0; short v2; };
struct BFu7c_BFu0i_Uc { unsigned char v1:7; unsigned int :0; unsigned char v2; };
struct BFu7c_BFu0i_Ui { unsigned char v1:7; unsigned int :0; unsigned int v2; };
struct BFu7c_BFu0i_Ul { unsigned char v1:7; unsigned int :0; unsigned long long v2; };
struct BFu7c_BFu0i_Us { unsigned char v1:7; unsigned int :0; unsigned short v2; };
struct BFu7c_BFu0i_Vp { unsigned char v1:7; unsigned int :0; void * v2; };
struct BFu7c_BFu0ll { unsigned char v1:7; unsigned long long :0; };
struct BFu7c_BFu0ll_BFu0c { unsigned char v1:7; unsigned long long :0; unsigned char :0; };
struct BFu7c_BFu0ll_BFu0i { unsigned char v1:7; unsigned long long :0; unsigned int :0; };
struct BFu7c_BFu0ll_BFu0ll { unsigned char v1:7; unsigned long long :0; unsigned long long :0; };
struct BFu7c_BFu0ll_BFu0s { unsigned char v1:7; unsigned long long :0; unsigned short :0; };
struct BFu7c_BFu0ll_BFu15i { unsigned char v1:7; unsigned long long :0; unsigned int v2:15; };
struct BFu7c_BFu0ll_BFu15ll { unsigned char v1:7; unsigned long long :0; unsigned long long v2:15; };
struct BFu7c_BFu0ll_BFu15s { unsigned char v1:7; unsigned long long :0; unsigned short v2:15; };
struct BFu7c_BFu0ll_BFu16i { unsigned char v1:7; unsigned long long :0; unsigned int v2:16; };
struct BFu7c_BFu0ll_BFu16ll { unsigned char v1:7; unsigned long long :0; unsigned long long v2:16; };
struct BFu7c_BFu0ll_BFu16s { unsigned char v1:7; unsigned long long :0; unsigned short v2:16; };
struct BFu7c_BFu0ll_BFu17i { unsigned char v1:7; unsigned long long :0; unsigned int v2:17; };
struct BFu7c_BFu0ll_BFu17ll { unsigned char v1:7; unsigned long long :0; unsigned long long v2:17; };
struct BFu7c_BFu0ll_BFu1c { unsigned char v1:7; unsigned long long :0; unsigned char v2:1; };
struct BFu7c_BFu0ll_BFu1i { unsigned char v1:7; unsigned long long :0; unsigned int v2:1; };
struct BFu7c_BFu0ll_BFu1ll { unsigned char v1:7; unsigned long long :0; unsigned long long v2:1; };
struct BFu7c_BFu0ll_BFu1s { unsigned char v1:7; unsigned long long :0; unsigned short v2:1; };
struct BFu7c_BFu0ll_BFu31i { unsigned char v1:7; unsigned long long :0; unsigned int v2:31; };
struct BFu7c_BFu0ll_BFu31ll { unsigned char v1:7; unsigned long long :0; unsigned long long v2:31; };
struct BFu7c_BFu0ll_BFu32i { unsigned char v1:7; unsigned long long :0; unsigned int v2:32; };
struct BFu7c_BFu0ll_BFu32ll { unsigned char v1:7; unsigned long long :0; unsigned long long v2:32; };
struct BFu7c_BFu0ll_BFu33 { unsigned char v1:7; unsigned long long :0; unsigned long long v2:33; };
struct BFu7c_BFu0ll_BFu7c { unsigned char v1:7; unsigned long long :0; unsigned char v2:7; };
struct BFu7c_BFu0ll_BFu7i { unsigned char v1:7; unsigned long long :0; unsigned int v2:7; };
struct BFu7c_BFu0ll_BFu7ll { unsigned char v1:7; unsigned long long :0; unsigned long long v2:7; };
struct BFu7c_BFu0ll_BFu7s { unsigned char v1:7; unsigned long long :0; unsigned short v2:7; };
struct BFu7c_BFu0ll_BFu8c { unsigned char v1:7; unsigned long long :0; unsigned char v2:8; };
struct BFu7c_BFu0ll_BFu8i { unsigned char v1:7; unsigned long long :0; unsigned int v2:8; };
struct BFu7c_BFu0ll_BFu8ll { unsigned char v1:7; unsigned long long :0; unsigned long long v2:8; };
struct BFu7c_BFu0ll_BFu8s { unsigned char v1:7; unsigned long long :0; unsigned short v2:8; };
struct BFu7c_BFu0ll_BFu9i { unsigned char v1:7; unsigned long long :0; unsigned int v2:9; };
struct BFu7c_BFu0ll_BFu9ll { unsigned char v1:7; unsigned long long :0; unsigned long long v2:9; };
struct BFu7c_BFu0ll_BFu9s { unsigned char v1:7; unsigned long long :0; unsigned short v2:9; };
struct BFu7c_BFu0ll_C { unsigned char v1:7; unsigned long long :0; char v2; };
struct BFu7c_BFu0ll_D { unsigned char v1:7; unsigned long long :0; double v2; };
struct BFu7c_BFu0ll_F { unsigned char v1:7; unsigned long long :0; float v2; };
struct BFu7c_BFu0ll_I { unsigned char v1:7; unsigned long long :0; int v2; };
struct BFu7c_BFu0ll_Ip { unsigned char v1:7; unsigned long long :0; int * v2; };
struct BFu7c_BFu0ll_L { unsigned char v1:7; unsigned long long :0; long long v2; };
struct BFu7c_BFu0ll_S { unsigned char v1:7; unsigned long long :0; short v2; };
struct BFu7c_BFu0ll_Uc { unsigned char v1:7; unsigned long long :0; unsigned char v2; };
struct BFu7c_BFu0ll_Ui { unsigned char v1:7; unsigned long long :0; unsigned int v2; };
struct BFu7c_BFu0ll_Ul { unsigned char v1:7; unsigned long long :0; unsigned long long v2; };
struct BFu7c_BFu0ll_Us { unsigned char v1:7; unsigned long long :0; unsigned short v2; };
struct BFu7c_BFu0ll_Vp { unsigned char v1:7; unsigned long long :0; void * v2; };
struct BFu7c_BFu0s { unsigned char v1:7; unsigned short :0; };
struct BFu7c_BFu0s_BFu0c { unsigned char v1:7; unsigned short :0; unsigned char :0; };
struct BFu7c_BFu0s_BFu0i { unsigned char v1:7; unsigned short :0; unsigned int :0; };
struct BFu7c_BFu0s_BFu0ll { unsigned char v1:7; unsigned short :0; unsigned long long :0; };
struct BFu7c_BFu0s_BFu0s { unsigned char v1:7; unsigned short :0; unsigned short :0; };
struct BFu7c_BFu0s_BFu15i { unsigned char v1:7; unsigned short :0; unsigned int v2:15; };
struct BFu7c_BFu0s_BFu15ll { unsigned char v1:7; unsigned short :0; unsigned long long v2:15; };
struct BFu7c_BFu0s_BFu15s { unsigned char v1:7; unsigned short :0; unsigned short v2:15; };
struct BFu7c_BFu0s_BFu16i { unsigned char v1:7; unsigned short :0; unsigned int v2:16; };
struct BFu7c_BFu0s_BFu16ll { unsigned char v1:7; unsigned short :0; unsigned long long v2:16; };
struct BFu7c_BFu0s_BFu16s { unsigned char v1:7; unsigned short :0; unsigned short v2:16; };
struct BFu7c_BFu0s_BFu17i { unsigned char v1:7; unsigned short :0; unsigned int v2:17; };
struct BFu7c_BFu0s_BFu17ll { unsigned char v1:7; unsigned short :0; unsigned long long v2:17; };
struct BFu7c_BFu0s_BFu1c { unsigned char v1:7; unsigned short :0; unsigned char v2:1; };
struct BFu7c_BFu0s_BFu1i { unsigned char v1:7; unsigned short :0; unsigned int v2:1; };
struct BFu7c_BFu0s_BFu1ll { unsigned char v1:7; unsigned short :0; unsigned long long v2:1; };
struct BFu7c_BFu0s_BFu1s { unsigned char v1:7; unsigned short :0; unsigned short v2:1; };
struct BFu7c_BFu0s_BFu31i { unsigned char v1:7; unsigned short :0; unsigned int v2:31; };
struct BFu7c_BFu0s_BFu31ll { unsigned char v1:7; unsigned short :0; unsigned long long v2:31; };
struct BFu7c_BFu0s_BFu32i { unsigned char v1:7; unsigned short :0; unsigned int v2:32; };
struct BFu7c_BFu0s_BFu32ll { unsigned char v1:7; unsigned short :0; unsigned long long v2:32; };
struct BFu7c_BFu0s_BFu33 { unsigned char v1:7; unsigned short :0; unsigned long long v2:33; };
struct BFu7c_BFu0s_BFu7c { unsigned char v1:7; unsigned short :0; unsigned char v2:7; };
struct BFu7c_BFu0s_BFu7i { unsigned char v1:7; unsigned short :0; unsigned int v2:7; };
struct BFu7c_BFu0s_BFu7ll { unsigned char v1:7; unsigned short :0; unsigned long long v2:7; };
struct BFu7c_BFu0s_BFu7s { unsigned char v1:7; unsigned short :0; unsigned short v2:7; };
struct BFu7c_BFu0s_BFu8c { unsigned char v1:7; unsigned short :0; unsigned char v2:8; };
struct BFu7c_BFu0s_BFu8i { unsigned char v1:7; unsigned short :0; unsigned int v2:8; };
struct BFu7c_BFu0s_BFu8ll { unsigned char v1:7; unsigned short :0; unsigned long long v2:8; };
struct BFu7c_BFu0s_BFu8s { unsigned char v1:7; unsigned short :0; unsigned short v2:8; };
struct BFu7c_BFu0s_BFu9i { unsigned char v1:7; unsigned short :0; unsigned int v2:9; };
struct BFu7c_BFu0s_BFu9ll { unsigned char v1:7; unsigned short :0; unsigned long long v2:9; };
struct BFu7c_BFu0s_BFu9s { unsigned char v1:7; unsigned short :0; unsigned short v2:9; };
struct BFu7c_BFu0s_C { unsigned char v1:7; unsigned short :0; char v2; };
struct BFu7c_BFu0s_D { unsigned char v1:7; unsigned short :0; double v2; };
struct BFu7c_BFu0s_F { unsigned char v1:7; unsigned short :0; float v2; };
struct BFu7c_BFu0s_I { unsigned char v1:7; unsigned short :0; int v2; };
struct BFu7c_BFu0s_Ip { unsigned char v1:7; unsigned short :0; int * v2; };
struct BFu7c_BFu0s_L { unsigned char v1:7; unsigned short :0; long long v2; };
struct BFu7c_BFu0s_S { unsigned char v1:7; unsigned short :0; short v2; };
struct BFu7c_BFu0s_Uc { unsigned char v1:7; unsigned short :0; unsigned char v2; };
struct BFu7c_BFu0s_Ui { unsigned char v1:7; unsigned short :0; unsigned int v2; };
struct BFu7c_BFu0s_Ul { unsigned char v1:7; unsigned short :0; unsigned long long v2; };
struct BFu7c_BFu0s_Us { unsigned char v1:7; unsigned short :0; unsigned short v2; };
struct BFu7c_BFu0s_Vp { unsigned char v1:7; unsigned short :0; void * v2; };
struct BFu7c_BFu15i_BFu0c { unsigned char v1:7; unsigned int v2:15; unsigned char :0; };
struct BFu7c_BFu15i_BFu0i { unsigned char v1:7; unsigned int v2:15; unsigned int :0; };
struct BFu7c_BFu15i_BFu0ll { unsigned char v1:7; unsigned int v2:15; unsigned long long :0; };
struct BFu7c_BFu15i_BFu0s { unsigned char v1:7; unsigned int v2:15; unsigned short :0; };
struct BFu7c_BFu15ll_BFu0c { unsigned char v1:7; unsigned long long v2:15; unsigned char :0; };
struct BFu7c_BFu15ll_BFu0i { unsigned char v1:7; unsigned long long v2:15; unsigned int :0; };
struct BFu7c_BFu15ll_BFu0ll { unsigned char v1:7; unsigned long long v2:15; unsigned long long :0; };
struct BFu7c_BFu15ll_BFu0s { unsigned char v1:7; unsigned long long v2:15; unsigned short :0; };
struct BFu7c_BFu15s_BFu0c { unsigned char v1:7; unsigned short v2:15; unsigned char :0; };
struct BFu7c_BFu15s_BFu0i { unsigned char v1:7; unsigned short v2:15; unsigned int :0; };
struct BFu7c_BFu15s_BFu0ll { unsigned char v1:7; unsigned short v2:15; unsigned long long :0; };
struct BFu7c_BFu15s_BFu0s { unsigned char v1:7; unsigned short v2:15; unsigned short :0; };
struct BFu7c_BFu16i_BFu0c { unsigned char v1:7; unsigned int v2:16; unsigned char :0; };
struct BFu7c_BFu16i_BFu0i { unsigned char v1:7; unsigned int v2:16; unsigned int :0; };
struct BFu7c_BFu16i_BFu0ll { unsigned char v1:7; unsigned int v2:16; unsigned long long :0; };
struct BFu7c_BFu16i_BFu0s { unsigned char v1:7; unsigned int v2:16; unsigned short :0; };
struct BFu7c_BFu16ll_BFu0c { unsigned char v1:7; unsigned long long v2:16; unsigned char :0; };
struct BFu7c_BFu16ll_BFu0i { unsigned char v1:7; unsigned long long v2:16; unsigned int :0; };
struct BFu7c_BFu16ll_BFu0ll { unsigned char v1:7; unsigned long long v2:16; unsigned long long :0; };
struct BFu7c_BFu16ll_BFu0s { unsigned char v1:7; unsigned long long v2:16; unsigned short :0; };
struct BFu7c_BFu16s_BFu0c { unsigned char v1:7; unsigned short v2:16; unsigned char :0; };
struct BFu7c_BFu16s_BFu0i { unsigned char v1:7; unsigned short v2:16; unsigned int :0; };
struct BFu7c_BFu16s_BFu0ll { unsigned char v1:7; unsigned short v2:16; unsigned long long :0; };
struct BFu7c_BFu16s_BFu0s { unsigned char v1:7; unsigned short v2:16; unsigned short :0; };
struct BFu7c_BFu17i_BFu0c { unsigned char v1:7; unsigned int v2:17; unsigned char :0; };
struct BFu7c_BFu17i_BFu0i { unsigned char v1:7; unsigned int v2:17; unsigned int :0; };
struct BFu7c_BFu17i_BFu0ll { unsigned char v1:7; unsigned int v2:17; unsigned long long :0; };
struct BFu7c_BFu17i_BFu0s { unsigned char v1:7; unsigned int v2:17; unsigned short :0; };
struct BFu7c_BFu17ll_BFu0c { unsigned char v1:7; unsigned long long v2:17; unsigned char :0; };
struct BFu7c_BFu17ll_BFu0i { unsigned char v1:7; unsigned long long v2:17; unsigned int :0; };
struct BFu7c_BFu17ll_BFu0ll { unsigned char v1:7; unsigned long long v2:17; unsigned long long :0; };
struct BFu7c_BFu17ll_BFu0s { unsigned char v1:7; unsigned long long v2:17; unsigned short :0; };
struct BFu7c_BFu1c_BFu0c { unsigned char v1:7; unsigned char v2:1; unsigned char :0; };
struct BFu7c_BFu1c_BFu0i { unsigned char v1:7; unsigned char v2:1; unsigned int :0; };
struct BFu7c_BFu1c_BFu0ll { unsigned char v1:7; unsigned char v2:1; unsigned long long :0; };
struct BFu7c_BFu1c_BFu0s { unsigned char v1:7; unsigned char v2:1; unsigned short :0; };
struct BFu7c_BFu1i_BFu0c { unsigned char v1:7; unsigned int v2:1; unsigned char :0; };
struct BFu7c_BFu1i_BFu0i { unsigned char v1:7; unsigned int v2:1; unsigned int :0; };
struct BFu7c_BFu1i_BFu0ll { unsigned char v1:7; unsigned int v2:1; unsigned long long :0; };
struct BFu7c_BFu1i_BFu0s { unsigned char v1:7; unsigned int v2:1; unsigned short :0; };
struct BFu7c_BFu1ll_BFu0c { unsigned char v1:7; unsigned long long v2:1; unsigned char :0; };
struct BFu7c_BFu1ll_BFu0i { unsigned char v1:7; unsigned long long v2:1; unsigned int :0; };
struct BFu7c_BFu1ll_BFu0ll { unsigned char v1:7; unsigned long long v2:1; unsigned long long :0; };
struct BFu7c_BFu1ll_BFu0s { unsigned char v1:7; unsigned long long v2:1; unsigned short :0; };
struct BFu7c_BFu1s_BFu0c { unsigned char v1:7; unsigned short v2:1; unsigned char :0; };
struct BFu7c_BFu1s_BFu0i { unsigned char v1:7; unsigned short v2:1; unsigned int :0; };
struct BFu7c_BFu1s_BFu0ll { unsigned char v1:7; unsigned short v2:1; unsigned long long :0; };
struct BFu7c_BFu1s_BFu0s { unsigned char v1:7; unsigned short v2:1; unsigned short :0; };
struct BFu7c_BFu31i_BFu0c { unsigned char v1:7; unsigned int v2:31; unsigned char :0; };
struct BFu7c_BFu31i_BFu0i { unsigned char v1:7; unsigned int v2:31; unsigned int :0; };
struct BFu7c_BFu31i_BFu0ll { unsigned char v1:7; unsigned int v2:31; unsigned long long :0; };
struct BFu7c_BFu31i_BFu0s { unsigned char v1:7; unsigned int v2:31; unsigned short :0; };
struct BFu7c_BFu31ll_BFu0c { unsigned char v1:7; unsigned long long v2:31; unsigned char :0; };
struct BFu7c_BFu31ll_BFu0i { unsigned char v1:7; unsigned long long v2:31; unsigned int :0; };
struct BFu7c_BFu31ll_BFu0ll { unsigned char v1:7; unsigned long long v2:31; unsigned long long :0; };
struct BFu7c_BFu31ll_BFu0s { unsigned char v1:7; unsigned long long v2:31; unsigned short :0; };
struct BFu7c_BFu32i_BFu0c { unsigned char v1:7; unsigned int v2:32; unsigned char :0; };
struct BFu7c_BFu32i_BFu0i { unsigned char v1:7; unsigned int v2:32; unsigned int :0; };
struct BFu7c_BFu32i_BFu0ll { unsigned char v1:7; unsigned int v2:32; unsigned long long :0; };
struct BFu7c_BFu32i_BFu0s { unsigned char v1:7; unsigned int v2:32; unsigned short :0; };
struct BFu7c_BFu32ll_BFu0c { unsigned char v1:7; unsigned long long v2:32; unsigned char :0; };
struct BFu7c_BFu32ll_BFu0i { unsigned char v1:7; unsigned long long v2:32; unsigned int :0; };
struct BFu7c_BFu32ll_BFu0ll { unsigned char v1:7; unsigned long long v2:32; unsigned long long :0; };
struct BFu7c_BFu32ll_BFu0s { unsigned char v1:7; unsigned long long v2:32; unsigned short :0; };
struct BFu7c_BFu33_BFu0c { unsigned char v1:7; unsigned long long v2:33; unsigned char :0; };
struct BFu7c_BFu33_BFu0i { unsigned char v1:7; unsigned long long v2:33; unsigned int :0; };
struct BFu7c_BFu33_BFu0ll { unsigned char v1:7; unsigned long long v2:33; unsigned long long :0; };
struct BFu7c_BFu33_BFu0s { unsigned char v1:7; unsigned long long v2:33; unsigned short :0; };
struct BFu7c_BFu7c_BFu0c { unsigned char v1:7; unsigned char v2:7; unsigned char :0; };
struct BFu7c_BFu7c_BFu0i { unsigned char v1:7; unsigned char v2:7; unsigned int :0; };
struct BFu7c_BFu7c_BFu0ll { unsigned char v1:7; unsigned char v2:7; unsigned long long :0; };
struct BFu7c_BFu7c_BFu0s { unsigned char v1:7; unsigned char v2:7; unsigned short :0; };
struct BFu7c_BFu7i_BFu0c { unsigned char v1:7; unsigned int v2:7; unsigned char :0; };
struct BFu7c_BFu7i_BFu0i { unsigned char v1:7; unsigned int v2:7; unsigned int :0; };
struct BFu7c_BFu7i_BFu0ll { unsigned char v1:7; unsigned int v2:7; unsigned long long :0; };
struct BFu7c_BFu7i_BFu0s { unsigned char v1:7; unsigned int v2:7; unsigned short :0; };
struct BFu7c_BFu7ll_BFu0c { unsigned char v1:7; unsigned long long v2:7; unsigned char :0; };
struct BFu7c_BFu7ll_BFu0i { unsigned char v1:7; unsigned long long v2:7; unsigned int :0; };
struct BFu7c_BFu7ll_BFu0ll { unsigned char v1:7; unsigned long long v2:7; unsigned long long :0; };
struct BFu7c_BFu7ll_BFu0s { unsigned char v1:7; unsigned long long v2:7; unsigned short :0; };
struct BFu7c_BFu7s_BFu0c { unsigned char v1:7; unsigned short v2:7; unsigned char :0; };
struct BFu7c_BFu7s_BFu0i { unsigned char v1:7; unsigned short v2:7; unsigned int :0; };
struct BFu7c_BFu7s_BFu0ll { unsigned char v1:7; unsigned short v2:7; unsigned long long :0; };
struct BFu7c_BFu7s_BFu0s { unsigned char v1:7; unsigned short v2:7; unsigned short :0; };
struct BFu7c_BFu8c_BFu0c { unsigned char v1:7; unsigned char v2:8; unsigned char :0; };
struct BFu7c_BFu8c_BFu0i { unsigned char v1:7; unsigned char v2:8; unsigned int :0; };
struct BFu7c_BFu8c_BFu0ll { unsigned char v1:7; unsigned char v2:8; unsigned long long :0; };
struct BFu7c_BFu8c_BFu0s { unsigned char v1:7; unsigned char v2:8; unsigned short :0; };
struct BFu7c_BFu8i_BFu0c { unsigned char v1:7; unsigned int v2:8; unsigned char :0; };
struct BFu7c_BFu8i_BFu0i { unsigned char v1:7; unsigned int v2:8; unsigned int :0; };
struct BFu7c_BFu8i_BFu0ll { unsigned char v1:7; unsigned int v2:8; unsigned long long :0; };
struct BFu7c_BFu8i_BFu0s { unsigned char v1:7; unsigned int v2:8; unsigned short :0; };
struct BFu7c_BFu8ll_BFu0c { unsigned char v1:7; unsigned long long v2:8; unsigned char :0; };
struct BFu7c_BFu8ll_BFu0i { unsigned char v1:7; unsigned long long v2:8; unsigned int :0; };
struct BFu7c_BFu8ll_BFu0ll { unsigned char v1:7; unsigned long long v2:8; unsigned long long :0; };
struct BFu7c_BFu8ll_BFu0s { unsigned char v1:7; unsigned long long v2:8; unsigned short :0; };
struct BFu7c_BFu8s_BFu0c { unsigned char v1:7; unsigned short v2:8; unsigned char :0; };
struct BFu7c_BFu8s_BFu0i { unsigned char v1:7; unsigned short v2:8; unsigned int :0; };
struct BFu7c_BFu8s_BFu0ll { unsigned char v1:7; unsigned short v2:8; unsigned long long :0; };
struct BFu7c_BFu8s_BFu0s { unsigned char v1:7; unsigned short v2:8; unsigned short :0; };
struct BFu7c_BFu9i_BFu0c { unsigned char v1:7; unsigned int v2:9; unsigned char :0; };
struct BFu7c_BFu9i_BFu0i { unsigned char v1:7; unsigned int v2:9; unsigned int :0; };
struct BFu7c_BFu9i_BFu0ll { unsigned char v1:7; unsigned int v2:9; unsigned long long :0; };
struct BFu7c_BFu9i_BFu0s { unsigned char v1:7; unsigned int v2:9; unsigned short :0; };
struct BFu7c_BFu9ll_BFu0c { unsigned char v1:7; unsigned long long v2:9; unsigned char :0; };
struct BFu7c_BFu9ll_BFu0i { unsigned char v1:7; unsigned long long v2:9; unsigned int :0; };
struct BFu7c_BFu9ll_BFu0ll { unsigned char v1:7; unsigned long long v2:9; unsigned long long :0; };
struct BFu7c_BFu9ll_BFu0s { unsigned char v1:7; unsigned long long v2:9; unsigned short :0; };
struct BFu7c_BFu9s_BFu0c { unsigned char v1:7; unsigned short v2:9; unsigned char :0; };
struct BFu7c_BFu9s_BFu0i { unsigned char v1:7; unsigned short v2:9; unsigned int :0; };
struct BFu7c_BFu9s_BFu0ll { unsigned char v1:7; unsigned short v2:9; unsigned long long :0; };
struct BFu7c_BFu9s_BFu0s { unsigned char v1:7; unsigned short v2:9; unsigned short :0; };
struct BFu7c_C_BFu0c { unsigned char v1:7; char v2; unsigned char :0; };
struct BFu7c_C_BFu0i { unsigned char v1:7; char v2; unsigned int :0; };
struct BFu7c_C_BFu0ll { unsigned char v1:7; char v2; unsigned long long :0; };
struct BFu7c_C_BFu0s { unsigned char v1:7; char v2; unsigned short :0; };
struct BFu7c_D_BFu0c { unsigned char v1:7; double v2; unsigned char :0; };
struct BFu7c_D_BFu0i { unsigned char v1:7; double v2; unsigned int :0; };
struct BFu7c_D_BFu0ll { unsigned char v1:7; double v2; unsigned long long :0; };
struct BFu7c_D_BFu0s { unsigned char v1:7; double v2; unsigned short :0; };
struct BFu7c_F_BFu0c { unsigned char v1:7; float v2; unsigned char :0; };
struct BFu7c_F_BFu0i { unsigned char v1:7; float v2; unsigned int :0; };
struct BFu7c_F_BFu0ll { unsigned char v1:7; float v2; unsigned long long :0; };
struct BFu7c_F_BFu0s { unsigned char v1:7; float v2; unsigned short :0; };
struct BFu7c_I_BFu0c { unsigned char v1:7; int v2; unsigned char :0; };
struct BFu7c_I_BFu0i { unsigned char v1:7; int v2; unsigned int :0; };
struct BFu7c_I_BFu0ll { unsigned char v1:7; int v2; unsigned long long :0; };
struct BFu7c_I_BFu0s { unsigned char v1:7; int v2; unsigned short :0; };
struct BFu7c_Ip_BFu0c { unsigned char v1:7; int * v2; unsigned char :0; };
struct BFu7c_Ip_BFu0i { unsigned char v1:7; int * v2; unsigned int :0; };
struct BFu7c_Ip_BFu0ll { unsigned char v1:7; int * v2; unsigned long long :0; };
struct BFu7c_Ip_BFu0s { unsigned char v1:7; int * v2; unsigned short :0; };
struct BFu7c_L_BFu0c { unsigned char v1:7; long long v2; unsigned char :0; };
struct BFu7c_L_BFu0i { unsigned char v1:7; long long v2; unsigned int :0; };
struct BFu7c_L_BFu0ll { unsigned char v1:7; long long v2; unsigned long long :0; };
struct BFu7c_L_BFu0s { unsigned char v1:7; long long v2; unsigned short :0; };
struct BFu7c_S_BFu0c { unsigned char v1:7; short v2; unsigned char :0; };
struct BFu7c_S_BFu0i { unsigned char v1:7; short v2; unsigned int :0; };
struct BFu7c_S_BFu0ll { unsigned char v1:7; short v2; unsigned long long :0; };
struct BFu7c_S_BFu0s { unsigned char v1:7; short v2; unsigned short :0; };
struct BFu7c_Uc_BFu0c { unsigned char v1:7; unsigned char v2; unsigned char :0; };
struct BFu7c_Uc_BFu0i { unsigned char v1:7; unsigned char v2; unsigned int :0; };
struct BFu7c_Uc_BFu0ll { unsigned char v1:7; unsigned char v2; unsigned long long :0; };
struct BFu7c_Uc_BFu0s { unsigned char v1:7; unsigned char v2; unsigned short :0; };
struct BFu7c_Ui_BFu0c { unsigned char v1:7; unsigned int v2; unsigned char :0; };
struct BFu7c_Ui_BFu0i { unsigned char v1:7; unsigned int v2; unsigned int :0; };
struct BFu7c_Ui_BFu0ll { unsigned char v1:7; unsigned int v2; unsigned long long :0; };
struct BFu7c_Ui_BFu0s { unsigned char v1:7; unsigned int v2; unsigned short :0; };
struct BFu7c_Ul_BFu0c { unsigned char v1:7; unsigned long long v2; unsigned char :0; };
struct BFu7c_Ul_BFu0i { unsigned char v1:7; unsigned long long v2; unsigned int :0; };
struct BFu7c_Ul_BFu0ll { unsigned char v1:7; unsigned long long v2; unsigned long long :0; };
struct BFu7c_Ul_BFu0s { unsigned char v1:7; unsigned long long v2; unsigned short :0; };
struct BFu7c_Us_BFu0c { unsigned char v1:7; unsigned short v2; unsigned char :0; };
struct BFu7c_Us_BFu0i { unsigned char v1:7; unsigned short v2; unsigned int :0; };
struct BFu7c_Us_BFu0ll { unsigned char v1:7; unsigned short v2; unsigned long long :0; };
struct BFu7c_Us_BFu0s { unsigned char v1:7; unsigned short v2; unsigned short :0; };
struct BFu7c_Vp_BFu0c { unsigned char v1:7; void * v2; unsigned char :0; };
struct BFu7c_Vp_BFu0i { unsigned char v1:7; void * v2; unsigned int :0; };
struct BFu7c_Vp_BFu0ll { unsigned char v1:7; void * v2; unsigned long long :0; };
struct BFu7c_Vp_BFu0s { unsigned char v1:7; void * v2; unsigned short :0; };
struct BFu7i_BFu0c { unsigned int v1:7; unsigned char :0; };
struct BFu7i_BFu0c_BFu0c { unsigned int v1:7; unsigned char :0; unsigned char :0; };
struct BFu7i_BFu0c_BFu0i { unsigned int v1:7; unsigned char :0; unsigned int :0; };
struct BFu7i_BFu0c_BFu0ll { unsigned int v1:7; unsigned char :0; unsigned long long :0; };
struct BFu7i_BFu0c_BFu0s { unsigned int v1:7; unsigned char :0; unsigned short :0; };
struct BFu7i_BFu0c_BFu15i { unsigned int v1:7; unsigned char :0; unsigned int v2:15; };
struct BFu7i_BFu0c_BFu15ll { unsigned int v1:7; unsigned char :0; unsigned long long v2:15; };
struct BFu7i_BFu0c_BFu15s { unsigned int v1:7; unsigned char :0; unsigned short v2:15; };
struct BFu7i_BFu0c_BFu16i { unsigned int v1:7; unsigned char :0; unsigned int v2:16; };
struct BFu7i_BFu0c_BFu16ll { unsigned int v1:7; unsigned char :0; unsigned long long v2:16; };
struct BFu7i_BFu0c_BFu16s { unsigned int v1:7; unsigned char :0; unsigned short v2:16; };
struct BFu7i_BFu0c_BFu17i { unsigned int v1:7; unsigned char :0; unsigned int v2:17; };
struct BFu7i_BFu0c_BFu17ll { unsigned int v1:7; unsigned char :0; unsigned long long v2:17; };
struct BFu7i_BFu0c_BFu1c { unsigned int v1:7; unsigned char :0; unsigned char v2:1; };
struct BFu7i_BFu0c_BFu1i { unsigned int v1:7; unsigned char :0; unsigned int v2:1; };
struct BFu7i_BFu0c_BFu1ll { unsigned int v1:7; unsigned char :0; unsigned long long v2:1; };
struct BFu7i_BFu0c_BFu1s { unsigned int v1:7; unsigned char :0; unsigned short v2:1; };
struct BFu7i_BFu0c_BFu31i { unsigned int v1:7; unsigned char :0; unsigned int v2:31; };
struct BFu7i_BFu0c_BFu31ll { unsigned int v1:7; unsigned char :0; unsigned long long v2:31; };
struct BFu7i_BFu0c_BFu32i { unsigned int v1:7; unsigned char :0; unsigned int v2:32; };
struct BFu7i_BFu0c_BFu32ll { unsigned int v1:7; unsigned char :0; unsigned long long v2:32; };
struct BFu7i_BFu0c_BFu33 { unsigned int v1:7; unsigned char :0; unsigned long long v2:33; };
struct BFu7i_BFu0c_BFu7c { unsigned int v1:7; unsigned char :0; unsigned char v2:7; };
struct BFu7i_BFu0c_BFu7i { unsigned int v1:7; unsigned char :0; unsigned int v2:7; };
struct BFu7i_BFu0c_BFu7ll { unsigned int v1:7; unsigned char :0; unsigned long long v2:7; };
struct BFu7i_BFu0c_BFu7s { unsigned int v1:7; unsigned char :0; unsigned short v2:7; };
struct BFu7i_BFu0c_BFu8c { unsigned int v1:7; unsigned char :0; unsigned char v2:8; };
struct BFu7i_BFu0c_BFu8i { unsigned int v1:7; unsigned char :0; unsigned int v2:8; };
struct BFu7i_BFu0c_BFu8ll { unsigned int v1:7; unsigned char :0; unsigned long long v2:8; };
struct BFu7i_BFu0c_BFu8s { unsigned int v1:7; unsigned char :0; unsigned short v2:8; };
struct BFu7i_BFu0c_BFu9i { unsigned int v1:7; unsigned char :0; unsigned int v2:9; };
struct BFu7i_BFu0c_BFu9ll { unsigned int v1:7; unsigned char :0; unsigned long long v2:9; };
struct BFu7i_BFu0c_BFu9s { unsigned int v1:7; unsigned char :0; unsigned short v2:9; };
struct BFu7i_BFu0c_C { unsigned int v1:7; unsigned char :0; char v2; };
struct BFu7i_BFu0c_D { unsigned int v1:7; unsigned char :0; double v2; };
struct BFu7i_BFu0c_F { unsigned int v1:7; unsigned char :0; float v2; };
struct BFu7i_BFu0c_I { unsigned int v1:7; unsigned char :0; int v2; };
struct BFu7i_BFu0c_Ip { unsigned int v1:7; unsigned char :0; int * v2; };
struct BFu7i_BFu0c_L { unsigned int v1:7; unsigned char :0; long long v2; };
struct BFu7i_BFu0c_S { unsigned int v1:7; unsigned char :0; short v2; };
struct BFu7i_BFu0c_Uc { unsigned int v1:7; unsigned char :0; unsigned char v2; };
struct BFu7i_BFu0c_Ui { unsigned int v1:7; unsigned char :0; unsigned int v2; };
struct BFu7i_BFu0c_Ul { unsigned int v1:7; unsigned char :0; unsigned long long v2; };
struct BFu7i_BFu0c_Us { unsigned int v1:7; unsigned char :0; unsigned short v2; };
struct BFu7i_BFu0c_Vp { unsigned int v1:7; unsigned char :0; void * v2; };
struct BFu7i_BFu0i { unsigned int v1:7; unsigned int :0; };
struct BFu7i_BFu0i_BFu0c { unsigned int v1:7; unsigned int :0; unsigned char :0; };
struct BFu7i_BFu0i_BFu0i { unsigned int v1:7; unsigned int :0; unsigned int :0; };
struct BFu7i_BFu0i_BFu0ll { unsigned int v1:7; unsigned int :0; unsigned long long :0; };
struct BFu7i_BFu0i_BFu0s { unsigned int v1:7; unsigned int :0; unsigned short :0; };
struct BFu7i_BFu0i_BFu15i { unsigned int v1:7; unsigned int :0; unsigned int v2:15; };
struct BFu7i_BFu0i_BFu15ll { unsigned int v1:7; unsigned int :0; unsigned long long v2:15; };
struct BFu7i_BFu0i_BFu15s { unsigned int v1:7; unsigned int :0; unsigned short v2:15; };
struct BFu7i_BFu0i_BFu16i { unsigned int v1:7; unsigned int :0; unsigned int v2:16; };
struct BFu7i_BFu0i_BFu16ll { unsigned int v1:7; unsigned int :0; unsigned long long v2:16; };
struct BFu7i_BFu0i_BFu16s { unsigned int v1:7; unsigned int :0; unsigned short v2:16; };
struct BFu7i_BFu0i_BFu17i { unsigned int v1:7; unsigned int :0; unsigned int v2:17; };
struct BFu7i_BFu0i_BFu17ll { unsigned int v1:7; unsigned int :0; unsigned long long v2:17; };
struct BFu7i_BFu0i_BFu1c { unsigned int v1:7; unsigned int :0; unsigned char v2:1; };
struct BFu7i_BFu0i_BFu1i { unsigned int v1:7; unsigned int :0; unsigned int v2:1; };
struct BFu7i_BFu0i_BFu1ll { unsigned int v1:7; unsigned int :0; unsigned long long v2:1; };
struct BFu7i_BFu0i_BFu1s { unsigned int v1:7; unsigned int :0; unsigned short v2:1; };
struct BFu7i_BFu0i_BFu31i { unsigned int v1:7; unsigned int :0; unsigned int v2:31; };
struct BFu7i_BFu0i_BFu31ll { unsigned int v1:7; unsigned int :0; unsigned long long v2:31; };
struct BFu7i_BFu0i_BFu32i { unsigned int v1:7; unsigned int :0; unsigned int v2:32; };
struct BFu7i_BFu0i_BFu32ll { unsigned int v1:7; unsigned int :0; unsigned long long v2:32; };
struct BFu7i_BFu0i_BFu33 { unsigned int v1:7; unsigned int :0; unsigned long long v2:33; };
struct BFu7i_BFu0i_BFu7c { unsigned int v1:7; unsigned int :0; unsigned char v2:7; };
struct BFu7i_BFu0i_BFu7i { unsigned int v1:7; unsigned int :0; unsigned int v2:7; };
struct BFu7i_BFu0i_BFu7ll { unsigned int v1:7; unsigned int :0; unsigned long long v2:7; };
struct BFu7i_BFu0i_BFu7s { unsigned int v1:7; unsigned int :0; unsigned short v2:7; };
struct BFu7i_BFu0i_BFu8c { unsigned int v1:7; unsigned int :0; unsigned char v2:8; };
struct BFu7i_BFu0i_BFu8i { unsigned int v1:7; unsigned int :0; unsigned int v2:8; };
struct BFu7i_BFu0i_BFu8ll { unsigned int v1:7; unsigned int :0; unsigned long long v2:8; };
struct BFu7i_BFu0i_BFu8s { unsigned int v1:7; unsigned int :0; unsigned short v2:8; };
struct BFu7i_BFu0i_BFu9i { unsigned int v1:7; unsigned int :0; unsigned int v2:9; };
struct BFu7i_BFu0i_BFu9ll { unsigned int v1:7; unsigned int :0; unsigned long long v2:9; };
struct BFu7i_BFu0i_BFu9s { unsigned int v1:7; unsigned int :0; unsigned short v2:9; };
struct BFu7i_BFu0i_C { unsigned int v1:7; unsigned int :0; char v2; };
struct BFu7i_BFu0i_D { unsigned int v1:7; unsigned int :0; double v2; };
struct BFu7i_BFu0i_F { unsigned int v1:7; unsigned int :0; float v2; };
struct BFu7i_BFu0i_I { unsigned int v1:7; unsigned int :0; int v2; };
struct BFu7i_BFu0i_Ip { unsigned int v1:7; unsigned int :0; int * v2; };
struct BFu7i_BFu0i_L { unsigned int v1:7; unsigned int :0; long long v2; };
struct BFu7i_BFu0i_S { unsigned int v1:7; unsigned int :0; short v2; };
struct BFu7i_BFu0i_Uc { unsigned int v1:7; unsigned int :0; unsigned char v2; };
struct BFu7i_BFu0i_Ui { unsigned int v1:7; unsigned int :0; unsigned int v2; };
struct BFu7i_BFu0i_Ul { unsigned int v1:7; unsigned int :0; unsigned long long v2; };
struct BFu7i_BFu0i_Us { unsigned int v1:7; unsigned int :0; unsigned short v2; };
struct BFu7i_BFu0i_Vp { unsigned int v1:7; unsigned int :0; void * v2; };
struct BFu7i_BFu0ll { unsigned int v1:7; unsigned long long :0; };
struct BFu7i_BFu0ll_BFu0c { unsigned int v1:7; unsigned long long :0; unsigned char :0; };
struct BFu7i_BFu0ll_BFu0i { unsigned int v1:7; unsigned long long :0; unsigned int :0; };
struct BFu7i_BFu0ll_BFu0ll { unsigned int v1:7; unsigned long long :0; unsigned long long :0; };
struct BFu7i_BFu0ll_BFu0s { unsigned int v1:7; unsigned long long :0; unsigned short :0; };
struct BFu7i_BFu0ll_BFu15i { unsigned int v1:7; unsigned long long :0; unsigned int v2:15; };
struct BFu7i_BFu0ll_BFu15ll { unsigned int v1:7; unsigned long long :0; unsigned long long v2:15; };
struct BFu7i_BFu0ll_BFu15s { unsigned int v1:7; unsigned long long :0; unsigned short v2:15; };
struct BFu7i_BFu0ll_BFu16i { unsigned int v1:7; unsigned long long :0; unsigned int v2:16; };
struct BFu7i_BFu0ll_BFu16ll { unsigned int v1:7; unsigned long long :0; unsigned long long v2:16; };
struct BFu7i_BFu0ll_BFu16s { unsigned int v1:7; unsigned long long :0; unsigned short v2:16; };
struct BFu7i_BFu0ll_BFu17i { unsigned int v1:7; unsigned long long :0; unsigned int v2:17; };
struct BFu7i_BFu0ll_BFu17ll { unsigned int v1:7; unsigned long long :0; unsigned long long v2:17; };
struct BFu7i_BFu0ll_BFu1c { unsigned int v1:7; unsigned long long :0; unsigned char v2:1; };
struct BFu7i_BFu0ll_BFu1i { unsigned int v1:7; unsigned long long :0; unsigned int v2:1; };
struct BFu7i_BFu0ll_BFu1ll { unsigned int v1:7; unsigned long long :0; unsigned long long v2:1; };
struct BFu7i_BFu0ll_BFu1s { unsigned int v1:7; unsigned long long :0; unsigned short v2:1; };
struct BFu7i_BFu0ll_BFu31i { unsigned int v1:7; unsigned long long :0; unsigned int v2:31; };
struct BFu7i_BFu0ll_BFu31ll { unsigned int v1:7; unsigned long long :0; unsigned long long v2:31; };
struct BFu7i_BFu0ll_BFu32i { unsigned int v1:7; unsigned long long :0; unsigned int v2:32; };
struct BFu7i_BFu0ll_BFu32ll { unsigned int v1:7; unsigned long long :0; unsigned long long v2:32; };
struct BFu7i_BFu0ll_BFu33 { unsigned int v1:7; unsigned long long :0; unsigned long long v2:33; };
struct BFu7i_BFu0ll_BFu7c { unsigned int v1:7; unsigned long long :0; unsigned char v2:7; };
struct BFu7i_BFu0ll_BFu7i { unsigned int v1:7; unsigned long long :0; unsigned int v2:7; };
struct BFu7i_BFu0ll_BFu7ll { unsigned int v1:7; unsigned long long :0; unsigned long long v2:7; };
struct BFu7i_BFu0ll_BFu7s { unsigned int v1:7; unsigned long long :0; unsigned short v2:7; };
struct BFu7i_BFu0ll_BFu8c { unsigned int v1:7; unsigned long long :0; unsigned char v2:8; };
struct BFu7i_BFu0ll_BFu8i { unsigned int v1:7; unsigned long long :0; unsigned int v2:8; };
struct BFu7i_BFu0ll_BFu8ll { unsigned int v1:7; unsigned long long :0; unsigned long long v2:8; };
struct BFu7i_BFu0ll_BFu8s { unsigned int v1:7; unsigned long long :0; unsigned short v2:8; };
struct BFu7i_BFu0ll_BFu9i { unsigned int v1:7; unsigned long long :0; unsigned int v2:9; };
struct BFu7i_BFu0ll_BFu9ll { unsigned int v1:7; unsigned long long :0; unsigned long long v2:9; };
struct BFu7i_BFu0ll_BFu9s { unsigned int v1:7; unsigned long long :0; unsigned short v2:9; };
struct BFu7i_BFu0ll_C { unsigned int v1:7; unsigned long long :0; char v2; };
struct BFu7i_BFu0ll_D { unsigned int v1:7; unsigned long long :0; double v2; };
struct BFu7i_BFu0ll_F { unsigned int v1:7; unsigned long long :0; float v2; };
struct BFu7i_BFu0ll_I { unsigned int v1:7; unsigned long long :0; int v2; };
struct BFu7i_BFu0ll_Ip { unsigned int v1:7; unsigned long long :0; int * v2; };
struct BFu7i_BFu0ll_L { unsigned int v1:7; unsigned long long :0; long long v2; };
struct BFu7i_BFu0ll_S { unsigned int v1:7; unsigned long long :0; short v2; };
struct BFu7i_BFu0ll_Uc { unsigned int v1:7; unsigned long long :0; unsigned char v2; };
struct BFu7i_BFu0ll_Ui { unsigned int v1:7; unsigned long long :0; unsigned int v2; };
struct BFu7i_BFu0ll_Ul { unsigned int v1:7; unsigned long long :0; unsigned long long v2; };
struct BFu7i_BFu0ll_Us { unsigned int v1:7; unsigned long long :0; unsigned short v2; };
struct BFu7i_BFu0ll_Vp { unsigned int v1:7; unsigned long long :0; void * v2; };
struct BFu7i_BFu0s { unsigned int v1:7; unsigned short :0; };
struct BFu7i_BFu0s_BFu0c { unsigned int v1:7; unsigned short :0; unsigned char :0; };
struct BFu7i_BFu0s_BFu0i { unsigned int v1:7; unsigned short :0; unsigned int :0; };
struct BFu7i_BFu0s_BFu0ll { unsigned int v1:7; unsigned short :0; unsigned long long :0; };
struct BFu7i_BFu0s_BFu0s { unsigned int v1:7; unsigned short :0; unsigned short :0; };
struct BFu7i_BFu0s_BFu15i { unsigned int v1:7; unsigned short :0; unsigned int v2:15; };
struct BFu7i_BFu0s_BFu15ll { unsigned int v1:7; unsigned short :0; unsigned long long v2:15; };
struct BFu7i_BFu0s_BFu15s { unsigned int v1:7; unsigned short :0; unsigned short v2:15; };
struct BFu7i_BFu0s_BFu16i { unsigned int v1:7; unsigned short :0; unsigned int v2:16; };
struct BFu7i_BFu0s_BFu16ll { unsigned int v1:7; unsigned short :0; unsigned long long v2:16; };
struct BFu7i_BFu0s_BFu16s { unsigned int v1:7; unsigned short :0; unsigned short v2:16; };
struct BFu7i_BFu0s_BFu17i { unsigned int v1:7; unsigned short :0; unsigned int v2:17; };
struct BFu7i_BFu0s_BFu17ll { unsigned int v1:7; unsigned short :0; unsigned long long v2:17; };
struct BFu7i_BFu0s_BFu1c { unsigned int v1:7; unsigned short :0; unsigned char v2:1; };
struct BFu7i_BFu0s_BFu1i { unsigned int v1:7; unsigned short :0; unsigned int v2:1; };
struct BFu7i_BFu0s_BFu1ll { unsigned int v1:7; unsigned short :0; unsigned long long v2:1; };
struct BFu7i_BFu0s_BFu1s { unsigned int v1:7; unsigned short :0; unsigned short v2:1; };
struct BFu7i_BFu0s_BFu31i { unsigned int v1:7; unsigned short :0; unsigned int v2:31; };
struct BFu7i_BFu0s_BFu31ll { unsigned int v1:7; unsigned short :0; unsigned long long v2:31; };
struct BFu7i_BFu0s_BFu32i { unsigned int v1:7; unsigned short :0; unsigned int v2:32; };
struct BFu7i_BFu0s_BFu32ll { unsigned int v1:7; unsigned short :0; unsigned long long v2:32; };
struct BFu7i_BFu0s_BFu33 { unsigned int v1:7; unsigned short :0; unsigned long long v2:33; };
struct BFu7i_BFu0s_BFu7c { unsigned int v1:7; unsigned short :0; unsigned char v2:7; };
struct BFu7i_BFu0s_BFu7i { unsigned int v1:7; unsigned short :0; unsigned int v2:7; };
struct BFu7i_BFu0s_BFu7ll { unsigned int v1:7; unsigned short :0; unsigned long long v2:7; };
struct BFu7i_BFu0s_BFu7s { unsigned int v1:7; unsigned short :0; unsigned short v2:7; };
struct BFu7i_BFu0s_BFu8c { unsigned int v1:7; unsigned short :0; unsigned char v2:8; };
struct BFu7i_BFu0s_BFu8i { unsigned int v1:7; unsigned short :0; unsigned int v2:8; };
struct BFu7i_BFu0s_BFu8ll { unsigned int v1:7; unsigned short :0; unsigned long long v2:8; };
struct BFu7i_BFu0s_BFu8s { unsigned int v1:7; unsigned short :0; unsigned short v2:8; };
struct BFu7i_BFu0s_BFu9i { unsigned int v1:7; unsigned short :0; unsigned int v2:9; };
struct BFu7i_BFu0s_BFu9ll { unsigned int v1:7; unsigned short :0; unsigned long long v2:9; };
struct BFu7i_BFu0s_BFu9s { unsigned int v1:7; unsigned short :0; unsigned short v2:9; };
struct BFu7i_BFu0s_C { unsigned int v1:7; unsigned short :0; char v2; };
struct BFu7i_BFu0s_D { unsigned int v1:7; unsigned short :0; double v2; };
struct BFu7i_BFu0s_F { unsigned int v1:7; unsigned short :0; float v2; };
struct BFu7i_BFu0s_I { unsigned int v1:7; unsigned short :0; int v2; };
struct BFu7i_BFu0s_Ip { unsigned int v1:7; unsigned short :0; int * v2; };
struct BFu7i_BFu0s_L { unsigned int v1:7; unsigned short :0; long long v2; };
struct BFu7i_BFu0s_S { unsigned int v1:7; unsigned short :0; short v2; };
struct BFu7i_BFu0s_Uc { unsigned int v1:7; unsigned short :0; unsigned char v2; };
struct BFu7i_BFu0s_Ui { unsigned int v1:7; unsigned short :0; unsigned int v2; };
struct BFu7i_BFu0s_Ul { unsigned int v1:7; unsigned short :0; unsigned long long v2; };
struct BFu7i_BFu0s_Us { unsigned int v1:7; unsigned short :0; unsigned short v2; };
struct BFu7i_BFu0s_Vp { unsigned int v1:7; unsigned short :0; void * v2; };
struct BFu7i_BFu15i_BFu0c { unsigned int v1:7; unsigned int v2:15; unsigned char :0; };
struct BFu7i_BFu15i_BFu0i { unsigned int v1:7; unsigned int v2:15; unsigned int :0; };
struct BFu7i_BFu15i_BFu0ll { unsigned int v1:7; unsigned int v2:15; unsigned long long :0; };
struct BFu7i_BFu15i_BFu0s { unsigned int v1:7; unsigned int v2:15; unsigned short :0; };
struct BFu7i_BFu15ll_BFu0c { unsigned int v1:7; unsigned long long v2:15; unsigned char :0; };
struct BFu7i_BFu15ll_BFu0i { unsigned int v1:7; unsigned long long v2:15; unsigned int :0; };
struct BFu7i_BFu15ll_BFu0ll { unsigned int v1:7; unsigned long long v2:15; unsigned long long :0; };
struct BFu7i_BFu15ll_BFu0s { unsigned int v1:7; unsigned long long v2:15; unsigned short :0; };
struct BFu7i_BFu15s_BFu0c { unsigned int v1:7; unsigned short v2:15; unsigned char :0; };
struct BFu7i_BFu15s_BFu0i { unsigned int v1:7; unsigned short v2:15; unsigned int :0; };
struct BFu7i_BFu15s_BFu0ll { unsigned int v1:7; unsigned short v2:15; unsigned long long :0; };
struct BFu7i_BFu15s_BFu0s { unsigned int v1:7; unsigned short v2:15; unsigned short :0; };
struct BFu7i_BFu16i_BFu0c { unsigned int v1:7; unsigned int v2:16; unsigned char :0; };
struct BFu7i_BFu16i_BFu0i { unsigned int v1:7; unsigned int v2:16; unsigned int :0; };
struct BFu7i_BFu16i_BFu0ll { unsigned int v1:7; unsigned int v2:16; unsigned long long :0; };
struct BFu7i_BFu16i_BFu0s { unsigned int v1:7; unsigned int v2:16; unsigned short :0; };
struct BFu7i_BFu16ll_BFu0c { unsigned int v1:7; unsigned long long v2:16; unsigned char :0; };
struct BFu7i_BFu16ll_BFu0i { unsigned int v1:7; unsigned long long v2:16; unsigned int :0; };
struct BFu7i_BFu16ll_BFu0ll { unsigned int v1:7; unsigned long long v2:16; unsigned long long :0; };
struct BFu7i_BFu16ll_BFu0s { unsigned int v1:7; unsigned long long v2:16; unsigned short :0; };
struct BFu7i_BFu16s_BFu0c { unsigned int v1:7; unsigned short v2:16; unsigned char :0; };
struct BFu7i_BFu16s_BFu0i { unsigned int v1:7; unsigned short v2:16; unsigned int :0; };
struct BFu7i_BFu16s_BFu0ll { unsigned int v1:7; unsigned short v2:16; unsigned long long :0; };
struct BFu7i_BFu16s_BFu0s { unsigned int v1:7; unsigned short v2:16; unsigned short :0; };
struct BFu7i_BFu17i_BFu0c { unsigned int v1:7; unsigned int v2:17; unsigned char :0; };
struct BFu7i_BFu17i_BFu0i { unsigned int v1:7; unsigned int v2:17; unsigned int :0; };
struct BFu7i_BFu17i_BFu0ll { unsigned int v1:7; unsigned int v2:17; unsigned long long :0; };
struct BFu7i_BFu17i_BFu0s { unsigned int v1:7; unsigned int v2:17; unsigned short :0; };
struct BFu7i_BFu17ll_BFu0c { unsigned int v1:7; unsigned long long v2:17; unsigned char :0; };
struct BFu7i_BFu17ll_BFu0i { unsigned int v1:7; unsigned long long v2:17; unsigned int :0; };
struct BFu7i_BFu17ll_BFu0ll { unsigned int v1:7; unsigned long long v2:17; unsigned long long :0; };
struct BFu7i_BFu17ll_BFu0s { unsigned int v1:7; unsigned long long v2:17; unsigned short :0; };
struct BFu7i_BFu1c_BFu0c { unsigned int v1:7; unsigned char v2:1; unsigned char :0; };
struct BFu7i_BFu1c_BFu0i { unsigned int v1:7; unsigned char v2:1; unsigned int :0; };
struct BFu7i_BFu1c_BFu0ll { unsigned int v1:7; unsigned char v2:1; unsigned long long :0; };
struct BFu7i_BFu1c_BFu0s { unsigned int v1:7; unsigned char v2:1; unsigned short :0; };
struct BFu7i_BFu1i_BFu0c { unsigned int v1:7; unsigned int v2:1; unsigned char :0; };
struct BFu7i_BFu1i_BFu0i { unsigned int v1:7; unsigned int v2:1; unsigned int :0; };
struct BFu7i_BFu1i_BFu0ll { unsigned int v1:7; unsigned int v2:1; unsigned long long :0; };
struct BFu7i_BFu1i_BFu0s { unsigned int v1:7; unsigned int v2:1; unsigned short :0; };
struct BFu7i_BFu1ll_BFu0c { unsigned int v1:7; unsigned long long v2:1; unsigned char :0; };
struct BFu7i_BFu1ll_BFu0i { unsigned int v1:7; unsigned long long v2:1; unsigned int :0; };
struct BFu7i_BFu1ll_BFu0ll { unsigned int v1:7; unsigned long long v2:1; unsigned long long :0; };
struct BFu7i_BFu1ll_BFu0s { unsigned int v1:7; unsigned long long v2:1; unsigned short :0; };
struct BFu7i_BFu1s_BFu0c { unsigned int v1:7; unsigned short v2:1; unsigned char :0; };
struct BFu7i_BFu1s_BFu0i { unsigned int v1:7; unsigned short v2:1; unsigned int :0; };
struct BFu7i_BFu1s_BFu0ll { unsigned int v1:7; unsigned short v2:1; unsigned long long :0; };
struct BFu7i_BFu1s_BFu0s { unsigned int v1:7; unsigned short v2:1; unsigned short :0; };
struct BFu7i_BFu31i_BFu0c { unsigned int v1:7; unsigned int v2:31; unsigned char :0; };
struct BFu7i_BFu31i_BFu0i { unsigned int v1:7; unsigned int v2:31; unsigned int :0; };
struct BFu7i_BFu31i_BFu0ll { unsigned int v1:7; unsigned int v2:31; unsigned long long :0; };
struct BFu7i_BFu31i_BFu0s { unsigned int v1:7; unsigned int v2:31; unsigned short :0; };
struct BFu7i_BFu31ll_BFu0c { unsigned int v1:7; unsigned long long v2:31; unsigned char :0; };
struct BFu7i_BFu31ll_BFu0i { unsigned int v1:7; unsigned long long v2:31; unsigned int :0; };
struct BFu7i_BFu31ll_BFu0ll { unsigned int v1:7; unsigned long long v2:31; unsigned long long :0; };
struct BFu7i_BFu31ll_BFu0s { unsigned int v1:7; unsigned long long v2:31; unsigned short :0; };
struct BFu7i_BFu32i_BFu0c { unsigned int v1:7; unsigned int v2:32; unsigned char :0; };
struct BFu7i_BFu32i_BFu0i { unsigned int v1:7; unsigned int v2:32; unsigned int :0; };
struct BFu7i_BFu32i_BFu0ll { unsigned int v1:7; unsigned int v2:32; unsigned long long :0; };
struct BFu7i_BFu32i_BFu0s { unsigned int v1:7; unsigned int v2:32; unsigned short :0; };
struct BFu7i_BFu32ll_BFu0c { unsigned int v1:7; unsigned long long v2:32; unsigned char :0; };
struct BFu7i_BFu32ll_BFu0i { unsigned int v1:7; unsigned long long v2:32; unsigned int :0; };
struct BFu7i_BFu32ll_BFu0ll { unsigned int v1:7; unsigned long long v2:32; unsigned long long :0; };
struct BFu7i_BFu32ll_BFu0s { unsigned int v1:7; unsigned long long v2:32; unsigned short :0; };
struct BFu7i_BFu33_BFu0c { unsigned int v1:7; unsigned long long v2:33; unsigned char :0; };
struct BFu7i_BFu33_BFu0i { unsigned int v1:7; unsigned long long v2:33; unsigned int :0; };
struct BFu7i_BFu33_BFu0ll { unsigned int v1:7; unsigned long long v2:33; unsigned long long :0; };
struct BFu7i_BFu33_BFu0s { unsigned int v1:7; unsigned long long v2:33; unsigned short :0; };
#endif // __cplusplus
#ifdef __cplusplus


static void Test_BFu1i_Ip_BFu0c()
{
  {
    init_simple_test("BFu1i_Ip_BFu0c");
    static BFu1i_Ip_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1i_Ip_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Ip_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Ip_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1i_Ip_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_Ip_BFu0c(Test_BFu1i_Ip_BFu0c, "BFu1i_Ip_BFu0c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Ip_BFu0i()
{
  {
    init_simple_test("BFu1i_Ip_BFu0i");
    static BFu1i_Ip_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu1i_Ip_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1i_Ip_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Ip_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1i_Ip_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_Ip_BFu0i(Test_BFu1i_Ip_BFu0i, "BFu1i_Ip_BFu0i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Ip_BFu0ll()
{
  {
    init_simple_test("BFu1i_Ip_BFu0ll");
    static BFu1i_Ip_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu1i_Ip_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1i_Ip_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Ip_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1i_Ip_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_Ip_BFu0ll(Test_BFu1i_Ip_BFu0ll, "BFu1i_Ip_BFu0ll", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Ip_BFu0s()
{
  {
    init_simple_test("BFu1i_Ip_BFu0s");
    static BFu1i_Ip_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1i_Ip_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1i_Ip_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Ip_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1i_Ip_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_Ip_BFu0s(Test_BFu1i_Ip_BFu0s, "BFu1i_Ip_BFu0s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_L_BFu0c()
{
  {
    init_simple_test("BFu1i_L_BFu0c");
    static BFu1i_L_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(BFu1i_L_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_L_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_L_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1i_L_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_L_BFu0c(Test_BFu1i_L_BFu0c, "BFu1i_L_BFu0c", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_L_BFu0i()
{
  {
    init_simple_test("BFu1i_L_BFu0i");
    static BFu1i_L_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu1i_L_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1i_L_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_L_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1i_L_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_L_BFu0i(Test_BFu1i_L_BFu0i, "BFu1i_L_BFu0i", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_L_BFu0ll()
{
  {
    init_simple_test("BFu1i_L_BFu0ll");
    static BFu1i_L_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu1i_L_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1i_L_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_L_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1i_L_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_L_BFu0ll(Test_BFu1i_L_BFu0ll, "BFu1i_L_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_L_BFu0s()
{
  {
    init_simple_test("BFu1i_L_BFu0s");
    static BFu1i_L_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu1i_L_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1i_L_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_L_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1i_L_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_L_BFu0s(Test_BFu1i_L_BFu0s, "BFu1i_L_BFu0s", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_S_BFu0c()
{
  {
    init_simple_test("BFu1i_S_BFu0c");
    static BFu1i_S_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu1i_S_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_S_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_S_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1i_S_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_S_BFu0c(Test_BFu1i_S_BFu0c, "BFu1i_S_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_S_BFu0i()
{
  {
    init_simple_test("BFu1i_S_BFu0i");
    static BFu1i_S_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1i_S_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1i_S_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_S_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1i_S_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_S_BFu0i(Test_BFu1i_S_BFu0i, "BFu1i_S_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_S_BFu0ll()
{
  {
    init_simple_test("BFu1i_S_BFu0ll");
    static BFu1i_S_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1i_S_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1i_S_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_S_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1i_S_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_S_BFu0ll(Test_BFu1i_S_BFu0ll, "BFu1i_S_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_S_BFu0s()
{
  {
    init_simple_test("BFu1i_S_BFu0s");
    static BFu1i_S_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1i_S_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1i_S_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_S_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1i_S_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_S_BFu0s(Test_BFu1i_S_BFu0s, "BFu1i_S_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Uc_BFu0c()
{
  {
    init_simple_test("BFu1i_Uc_BFu0c");
    static BFu1i_Uc_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu1i_Uc_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Uc_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Uc_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1i_Uc_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_Uc_BFu0c(Test_BFu1i_Uc_BFu0c, "BFu1i_Uc_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Uc_BFu0i()
{
  {
    init_simple_test("BFu1i_Uc_BFu0i");
    static BFu1i_Uc_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1i_Uc_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1i_Uc_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Uc_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1i_Uc_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_Uc_BFu0i(Test_BFu1i_Uc_BFu0i, "BFu1i_Uc_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Uc_BFu0ll()
{
  {
    init_simple_test("BFu1i_Uc_BFu0ll");
    static BFu1i_Uc_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1i_Uc_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1i_Uc_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Uc_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1i_Uc_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_Uc_BFu0ll(Test_BFu1i_Uc_BFu0ll, "BFu1i_Uc_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Uc_BFu0s()
{
  {
    init_simple_test("BFu1i_Uc_BFu0s");
    static BFu1i_Uc_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu1i_Uc_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1i_Uc_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Uc_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1i_Uc_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_Uc_BFu0s(Test_BFu1i_Uc_BFu0s, "BFu1i_Uc_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Ui_BFu0c()
{
  {
    init_simple_test("BFu1i_Ui_BFu0c");
    static BFu1i_Ui_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu1i_Ui_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Ui_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Ui_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1i_Ui_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_Ui_BFu0c(Test_BFu1i_Ui_BFu0c, "BFu1i_Ui_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Ui_BFu0i()
{
  {
    init_simple_test("BFu1i_Ui_BFu0i");
    static BFu1i_Ui_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1i_Ui_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1i_Ui_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Ui_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1i_Ui_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_Ui_BFu0i(Test_BFu1i_Ui_BFu0i, "BFu1i_Ui_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Ui_BFu0ll()
{
  {
    init_simple_test("BFu1i_Ui_BFu0ll");
    static BFu1i_Ui_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1i_Ui_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1i_Ui_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Ui_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1i_Ui_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_Ui_BFu0ll(Test_BFu1i_Ui_BFu0ll, "BFu1i_Ui_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Ui_BFu0s()
{
  {
    init_simple_test("BFu1i_Ui_BFu0s");
    static BFu1i_Ui_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1i_Ui_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1i_Ui_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Ui_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1i_Ui_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_Ui_BFu0s(Test_BFu1i_Ui_BFu0s, "BFu1i_Ui_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Ul_BFu0c()
{
  {
    init_simple_test("BFu1i_Ul_BFu0c");
    static BFu1i_Ul_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(BFu1i_Ul_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Ul_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Ul_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1i_Ul_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_Ul_BFu0c(Test_BFu1i_Ul_BFu0c, "BFu1i_Ul_BFu0c", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Ul_BFu0i()
{
  {
    init_simple_test("BFu1i_Ul_BFu0i");
    static BFu1i_Ul_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu1i_Ul_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1i_Ul_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Ul_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1i_Ul_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_Ul_BFu0i(Test_BFu1i_Ul_BFu0i, "BFu1i_Ul_BFu0i", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Ul_BFu0ll()
{
  {
    init_simple_test("BFu1i_Ul_BFu0ll");
    static BFu1i_Ul_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu1i_Ul_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1i_Ul_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Ul_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1i_Ul_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_Ul_BFu0ll(Test_BFu1i_Ul_BFu0ll, "BFu1i_Ul_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Ul_BFu0s()
{
  {
    init_simple_test("BFu1i_Ul_BFu0s");
    static BFu1i_Ul_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu1i_Ul_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1i_Ul_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Ul_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1i_Ul_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_Ul_BFu0s(Test_BFu1i_Ul_BFu0s, "BFu1i_Ul_BFu0s", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Us_BFu0c()
{
  {
    init_simple_test("BFu1i_Us_BFu0c");
    static BFu1i_Us_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu1i_Us_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Us_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Us_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1i_Us_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_Us_BFu0c(Test_BFu1i_Us_BFu0c, "BFu1i_Us_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Us_BFu0i()
{
  {
    init_simple_test("BFu1i_Us_BFu0i");
    static BFu1i_Us_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1i_Us_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1i_Us_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Us_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1i_Us_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_Us_BFu0i(Test_BFu1i_Us_BFu0i, "BFu1i_Us_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Us_BFu0ll()
{
  {
    init_simple_test("BFu1i_Us_BFu0ll");
    static BFu1i_Us_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1i_Us_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1i_Us_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Us_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1i_Us_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_Us_BFu0ll(Test_BFu1i_Us_BFu0ll, "BFu1i_Us_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Us_BFu0s()
{
  {
    init_simple_test("BFu1i_Us_BFu0s");
    static BFu1i_Us_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1i_Us_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1i_Us_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Us_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1i_Us_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_Us_BFu0s(Test_BFu1i_Us_BFu0s, "BFu1i_Us_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Vp_BFu0c()
{
  {
    init_simple_test("BFu1i_Vp_BFu0c");
    static BFu1i_Vp_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1i_Vp_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1i_Vp_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Vp_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1i_Vp_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_Vp_BFu0c(Test_BFu1i_Vp_BFu0c, "BFu1i_Vp_BFu0c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Vp_BFu0i()
{
  {
    init_simple_test("BFu1i_Vp_BFu0i");
    static BFu1i_Vp_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu1i_Vp_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1i_Vp_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Vp_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1i_Vp_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_Vp_BFu0i(Test_BFu1i_Vp_BFu0i, "BFu1i_Vp_BFu0i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Vp_BFu0ll()
{
  {
    init_simple_test("BFu1i_Vp_BFu0ll");
    static BFu1i_Vp_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu1i_Vp_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1i_Vp_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Vp_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1i_Vp_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_Vp_BFu0ll(Test_BFu1i_Vp_BFu0ll, "BFu1i_Vp_BFu0ll", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1i_Vp_BFu0s()
{
  {
    init_simple_test("BFu1i_Vp_BFu0s");
    static BFu1i_Vp_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1i_Vp_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1i_Vp_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1i_Vp_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1i_Vp_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1i_Vp_BFu0s(Test_BFu1i_Vp_BFu0s, "BFu1i_Vp_BFu0s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu0c");
    static BFu1ll_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu1ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c(Test_BFu1ll_BFu0c, "BFu1ll_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu0c");
    static BFu1ll_BFu0c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu1ll_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu0c(Test_BFu1ll_BFu0c_BFu0c, "BFu1ll_BFu0c_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu0i");
    static BFu1ll_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu0i(Test_BFu1ll_BFu0c_BFu0i, "BFu1ll_BFu0c_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu0ll");
    static BFu1ll_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu0ll(Test_BFu1ll_BFu0c_BFu0ll, "BFu1ll_BFu0c_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu0s");
    static BFu1ll_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu1ll_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu0s(Test_BFu1ll_BFu0c_BFu0s, "BFu1ll_BFu0c_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu15i()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu15i");
    static BFu1ll_BFu0c_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_BFu0c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "BFu1ll_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "BFu1ll_BFu0c_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu15i(Test_BFu1ll_BFu0c_BFu15i, "BFu1ll_BFu0c_BFu15i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu15ll()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu15ll");
    static BFu1ll_BFu0c_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_BFu0c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "BFu1ll_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "BFu1ll_BFu0c_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu15ll(Test_BFu1ll_BFu0c_BFu15ll, "BFu1ll_BFu0c_BFu15ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu15s()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu15s");
    static BFu1ll_BFu0c_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_BFu0c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "BFu1ll_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "BFu1ll_BFu0c_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu15s(Test_BFu1ll_BFu0c_BFu15s, "BFu1ll_BFu0c_BFu15s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu16i()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu16i");
    static BFu1ll_BFu0c_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_BFu0c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "BFu1ll_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "BFu1ll_BFu0c_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu16i(Test_BFu1ll_BFu0c_BFu16i, "BFu1ll_BFu0c_BFu16i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu16ll()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu16ll");
    static BFu1ll_BFu0c_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_BFu0c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "BFu1ll_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "BFu1ll_BFu0c_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu16ll(Test_BFu1ll_BFu0c_BFu16ll, "BFu1ll_BFu0c_BFu16ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu16s()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu16s");
    static BFu1ll_BFu0c_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_BFu0c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "BFu1ll_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "BFu1ll_BFu0c_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu16s(Test_BFu1ll_BFu0c_BFu16s, "BFu1ll_BFu0c_BFu16s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu17i()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu17i");
    static BFu1ll_BFu0c_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(BFu1ll_BFu0c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "BFu1ll_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "BFu1ll_BFu0c_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu17i(Test_BFu1ll_BFu0c_BFu17i, "BFu1ll_BFu0c_BFu17i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu17ll()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu17ll");
    static BFu1ll_BFu0c_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu1ll_BFu0c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "BFu1ll_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "BFu1ll_BFu0c_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu17ll(Test_BFu1ll_BFu0c_BFu17ll, "BFu1ll_BFu0c_BFu17ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu1c()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu1c");
    static BFu1ll_BFu0c_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu0c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu1ll_BFu0c_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu1c(Test_BFu1ll_BFu0c_BFu1c, "BFu1ll_BFu0c_BFu1c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu1i()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu1i");
    static BFu1ll_BFu0c_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu0c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu1ll_BFu0c_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu1i(Test_BFu1ll_BFu0c_BFu1i, "BFu1ll_BFu0c_BFu1i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu1ll()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu1ll");
    static BFu1ll_BFu0c_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu0c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu1ll_BFu0c_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu1ll(Test_BFu1ll_BFu0c_BFu1ll, "BFu1ll_BFu0c_BFu1ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu1s()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu1s");
    static BFu1ll_BFu0c_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu0c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu1ll_BFu0c_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu1s(Test_BFu1ll_BFu0c_BFu1s, "BFu1ll_BFu0c_BFu1s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu31i()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu31i");
    static BFu1ll_BFu0c_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(BFu1ll_BFu0c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "BFu1ll_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "BFu1ll_BFu0c_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu31i(Test_BFu1ll_BFu0c_BFu31i, "BFu1ll_BFu0c_BFu31i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu31ll()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu31ll");
    static BFu1ll_BFu0c_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu1ll_BFu0c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "BFu1ll_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "BFu1ll_BFu0c_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu31ll(Test_BFu1ll_BFu0c_BFu31ll, "BFu1ll_BFu0c_BFu31ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu32i()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu32i");
    static BFu1ll_BFu0c_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(BFu1ll_BFu0c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "BFu1ll_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "BFu1ll_BFu0c_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu32i(Test_BFu1ll_BFu0c_BFu32i, "BFu1ll_BFu0c_BFu32i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu32ll()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu32ll");
    static BFu1ll_BFu0c_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu1ll_BFu0c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "BFu1ll_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "BFu1ll_BFu0c_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu32ll(Test_BFu1ll_BFu0c_BFu32ll, "BFu1ll_BFu0c_BFu32ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu33()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu33");
    static BFu1ll_BFu0c_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(BFu1ll_BFu0c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "BFu1ll_BFu0c_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "BFu1ll_BFu0c_BFu33");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu33(Test_BFu1ll_BFu0c_BFu33, "BFu1ll_BFu0c_BFu33", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu7c()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu7c");
    static BFu1ll_BFu0c_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu0c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu1ll_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu1ll_BFu0c_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu7c(Test_BFu1ll_BFu0c_BFu7c, "BFu1ll_BFu0c_BFu7c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu7i()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu7i");
    static BFu1ll_BFu0c_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu0c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu1ll_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu1ll_BFu0c_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu7i(Test_BFu1ll_BFu0c_BFu7i, "BFu1ll_BFu0c_BFu7i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu7ll()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu7ll");
    static BFu1ll_BFu0c_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu0c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu1ll_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu1ll_BFu0c_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu7ll(Test_BFu1ll_BFu0c_BFu7ll, "BFu1ll_BFu0c_BFu7ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu7s()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu7s");
    static BFu1ll_BFu0c_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu0c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu1ll_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu1ll_BFu0c_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu7s(Test_BFu1ll_BFu0c_BFu7s, "BFu1ll_BFu0c_BFu7s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu8c()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu8c");
    static BFu1ll_BFu0c_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu0c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu1ll_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu1ll_BFu0c_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu8c(Test_BFu1ll_BFu0c_BFu8c, "BFu1ll_BFu0c_BFu8c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu8i()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu8i");
    static BFu1ll_BFu0c_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu0c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu1ll_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu1ll_BFu0c_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu8i(Test_BFu1ll_BFu0c_BFu8i, "BFu1ll_BFu0c_BFu8i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu8ll()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu8ll");
    static BFu1ll_BFu0c_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu0c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu1ll_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu1ll_BFu0c_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu8ll(Test_BFu1ll_BFu0c_BFu8ll, "BFu1ll_BFu0c_BFu8ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu8s()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu8s");
    static BFu1ll_BFu0c_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu0c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu1ll_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu1ll_BFu0c_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu8s(Test_BFu1ll_BFu0c_BFu8s, "BFu1ll_BFu0c_BFu8s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu9i()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu9i");
    static BFu1ll_BFu0c_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_BFu0c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "BFu1ll_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "BFu1ll_BFu0c_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu9i(Test_BFu1ll_BFu0c_BFu9i, "BFu1ll_BFu0c_BFu9i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu9ll()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu9ll");
    static BFu1ll_BFu0c_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_BFu0c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "BFu1ll_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "BFu1ll_BFu0c_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu9ll(Test_BFu1ll_BFu0c_BFu9ll, "BFu1ll_BFu0c_BFu9ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_BFu9s()
{
  {
    init_simple_test("BFu1ll_BFu0c_BFu9s");
    static BFu1ll_BFu0c_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_BFu0c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "BFu1ll_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "BFu1ll_BFu0c_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_BFu9s(Test_BFu1ll_BFu0c_BFu9s, "BFu1ll_BFu0c_BFu9s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_C()
{
  {
    init_simple_test("BFu1ll_BFu0c_C");
    static BFu1ll_BFu0c_C lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu0c_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_C)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_C");
    check_field_offset(lv, v2, 1, "BFu1ll_BFu0c_C.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_C(Test_BFu1ll_BFu0c_C, "BFu1ll_BFu0c_C", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_D()
{
  {
    init_simple_test("BFu1ll_BFu0c_D");
    static BFu1ll_BFu0c_D lv;
    check2(sizeof(lv), 9, "sizeof(BFu1ll_BFu0c_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_D)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_D");
    check_field_offset(lv, v2, 1, "BFu1ll_BFu0c_D.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_D(Test_BFu1ll_BFu0c_D, "BFu1ll_BFu0c_D", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_F()
{
  {
    init_simple_test("BFu1ll_BFu0c_F");
    static BFu1ll_BFu0c_F lv;
    check2(sizeof(lv), 5, "sizeof(BFu1ll_BFu0c_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_F)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_F");
    check_field_offset(lv, v2, 1, "BFu1ll_BFu0c_F.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_F(Test_BFu1ll_BFu0c_F, "BFu1ll_BFu0c_F", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_I()
{
  {
    init_simple_test("BFu1ll_BFu0c_I");
    static BFu1ll_BFu0c_I lv;
    check2(sizeof(lv), 5, "sizeof(BFu1ll_BFu0c_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_I)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_I");
    check_field_offset(lv, v2, 1, "BFu1ll_BFu0c_I.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_I(Test_BFu1ll_BFu0c_I, "BFu1ll_BFu0c_I", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_Ip()
{
  {
    init_simple_test("BFu1ll_BFu0c_Ip");
    static BFu1ll_BFu0c_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1ll_BFu0c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_Ip");
    check_field_offset(lv, v2, 1, "BFu1ll_BFu0c_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_Ip(Test_BFu1ll_BFu0c_Ip, "BFu1ll_BFu0c_Ip", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_L()
{
  {
    init_simple_test("BFu1ll_BFu0c_L");
    static BFu1ll_BFu0c_L lv;
    check2(sizeof(lv), 9, "sizeof(BFu1ll_BFu0c_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_L)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_L");
    check_field_offset(lv, v2, 1, "BFu1ll_BFu0c_L.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_L(Test_BFu1ll_BFu0c_L, "BFu1ll_BFu0c_L", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_S()
{
  {
    init_simple_test("BFu1ll_BFu0c_S");
    static BFu1ll_BFu0c_S lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_BFu0c_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_S)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_S");
    check_field_offset(lv, v2, 1, "BFu1ll_BFu0c_S.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_S(Test_BFu1ll_BFu0c_S, "BFu1ll_BFu0c_S", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_Uc()
{
  {
    init_simple_test("BFu1ll_BFu0c_Uc");
    static BFu1ll_BFu0c_Uc lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu0c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_Uc");
    check_field_offset(lv, v2, 1, "BFu1ll_BFu0c_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_Uc(Test_BFu1ll_BFu0c_Uc, "BFu1ll_BFu0c_Uc", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_Ui()
{
  {
    init_simple_test("BFu1ll_BFu0c_Ui");
    static BFu1ll_BFu0c_Ui lv;
    check2(sizeof(lv), 5, "sizeof(BFu1ll_BFu0c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_Ui");
    check_field_offset(lv, v2, 1, "BFu1ll_BFu0c_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_Ui(Test_BFu1ll_BFu0c_Ui, "BFu1ll_BFu0c_Ui", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_Ul()
{
  {
    init_simple_test("BFu1ll_BFu0c_Ul");
    static BFu1ll_BFu0c_Ul lv;
    check2(sizeof(lv), 9, "sizeof(BFu1ll_BFu0c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_Ul");
    check_field_offset(lv, v2, 1, "BFu1ll_BFu0c_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_Ul(Test_BFu1ll_BFu0c_Ul, "BFu1ll_BFu0c_Ul", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_Us()
{
  {
    init_simple_test("BFu1ll_BFu0c_Us");
    static BFu1ll_BFu0c_Us lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_BFu0c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_Us)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_Us");
    check_field_offset(lv, v2, 1, "BFu1ll_BFu0c_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_Us(Test_BFu1ll_BFu0c_Us, "BFu1ll_BFu0c_Us", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0c_Vp()
{
  {
    init_simple_test("BFu1ll_BFu0c_Vp");
    static BFu1ll_BFu0c_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1ll_BFu0c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu0c_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0c_Vp");
    check_field_offset(lv, v2, 1, "BFu1ll_BFu0c_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0c_Vp(Test_BFu1ll_BFu0c_Vp, "BFu1ll_BFu0c_Vp", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu0i");
    static BFu1ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i(Test_BFu1ll_BFu0i, "BFu1ll_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu0c");
    static BFu1ll_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu0c(Test_BFu1ll_BFu0i_BFu0c, "BFu1ll_BFu0i_BFu0c", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu0i");
    static BFu1ll_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu0i(Test_BFu1ll_BFu0i_BFu0i, "BFu1ll_BFu0i_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu0ll");
    static BFu1ll_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu0ll(Test_BFu1ll_BFu0i_BFu0ll, "BFu1ll_BFu0i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu0s");
    static BFu1ll_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu0s(Test_BFu1ll_BFu0i_BFu0s, "BFu1ll_BFu0i_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu15i()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu15i");
    static BFu1ll_BFu0i_BFu15i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1ll_BFu0i_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, 1, "BFu1ll_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, hide_ull(1LL<<14), "BFu1ll_BFu0i_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu15i(Test_BFu1ll_BFu0i_BFu15i, "BFu1ll_BFu0i_BFu15i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu15ll()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu15ll");
    static BFu1ll_BFu0i_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1ll_BFu0i_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, 1, "BFu1ll_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, hide_ull(1LL<<14), "BFu1ll_BFu0i_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu15ll(Test_BFu1ll_BFu0i_BFu15ll, "BFu1ll_BFu0i_BFu15ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu15s()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu15s");
    static BFu1ll_BFu0i_BFu15s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1ll_BFu0i_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, 1, "BFu1ll_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, hide_ull(1LL<<14), "BFu1ll_BFu0i_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu15s(Test_BFu1ll_BFu0i_BFu15s, "BFu1ll_BFu0i_BFu15s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu16i()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu16i");
    static BFu1ll_BFu0i_BFu16i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1ll_BFu0i_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, 1, "BFu1ll_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, hide_ull(1LL<<15), "BFu1ll_BFu0i_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu16i(Test_BFu1ll_BFu0i_BFu16i, "BFu1ll_BFu0i_BFu16i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu16ll()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu16ll");
    static BFu1ll_BFu0i_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1ll_BFu0i_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, 1, "BFu1ll_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, hide_ull(1LL<<15), "BFu1ll_BFu0i_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu16ll(Test_BFu1ll_BFu0i_BFu16ll, "BFu1ll_BFu0i_BFu16ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu16s()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu16s");
    static BFu1ll_BFu0i_BFu16s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1ll_BFu0i_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, 1, "BFu1ll_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, hide_ull(1LL<<15), "BFu1ll_BFu0i_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu16s(Test_BFu1ll_BFu0i_BFu16s, "BFu1ll_BFu0i_BFu16s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu17i()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu17i");
    static BFu1ll_BFu0i_BFu17i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu1ll_BFu0i_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 17, 1, "BFu1ll_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 17, hide_ull(1LL<<16), "BFu1ll_BFu0i_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu17i(Test_BFu1ll_BFu0i_BFu17i, "BFu1ll_BFu0i_BFu17i", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu17ll()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu17ll");
    static BFu1ll_BFu0i_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu1ll_BFu0i_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 17, 1, "BFu1ll_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 17, hide_ull(1LL<<16), "BFu1ll_BFu0i_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu17ll(Test_BFu1ll_BFu0i_BFu17ll, "BFu1ll_BFu0i_BFu17ll", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu1c()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu1c");
    static BFu1ll_BFu0i_BFu1c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1ll_BFu0i_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 1, 1, "BFu1ll_BFu0i_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu1c(Test_BFu1ll_BFu0i_BFu1c, "BFu1ll_BFu0i_BFu1c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu1i()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu1i");
    static BFu1ll_BFu0i_BFu1i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1ll_BFu0i_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 1, 1, "BFu1ll_BFu0i_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu1i(Test_BFu1ll_BFu0i_BFu1i, "BFu1ll_BFu0i_BFu1i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu1ll()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu1ll");
    static BFu1ll_BFu0i_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1ll_BFu0i_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 1, 1, "BFu1ll_BFu0i_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu1ll(Test_BFu1ll_BFu0i_BFu1ll, "BFu1ll_BFu0i_BFu1ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu1s()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu1s");
    static BFu1ll_BFu0i_BFu1s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1ll_BFu0i_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 1, 1, "BFu1ll_BFu0i_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu1s(Test_BFu1ll_BFu0i_BFu1s, "BFu1ll_BFu0i_BFu1s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu31i()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu31i");
    static BFu1ll_BFu0i_BFu31i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1ll_BFu0i_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 31, 1, "BFu1ll_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 31, hide_ull(1LL<<30), "BFu1ll_BFu0i_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu31i(Test_BFu1ll_BFu0i_BFu31i, "BFu1ll_BFu0i_BFu31i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu31ll()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu31ll");
    static BFu1ll_BFu0i_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1ll_BFu0i_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 31, 1, "BFu1ll_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 31, hide_ull(1LL<<30), "BFu1ll_BFu0i_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu31ll(Test_BFu1ll_BFu0i_BFu31ll, "BFu1ll_BFu0i_BFu31ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu32i()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu32i");
    static BFu1ll_BFu0i_BFu32i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1ll_BFu0i_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 32, 1, "BFu1ll_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 32, hide_ull(1LL<<31), "BFu1ll_BFu0i_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu32i(Test_BFu1ll_BFu0i_BFu32i, "BFu1ll_BFu0i_BFu32i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu32ll()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu32ll");
    static BFu1ll_BFu0i_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1ll_BFu0i_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 32, 1, "BFu1ll_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 32, hide_ull(1LL<<31), "BFu1ll_BFu0i_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu32ll(Test_BFu1ll_BFu0i_BFu32ll, "BFu1ll_BFu0i_BFu32ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu33()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu33");
    static BFu1ll_BFu0i_BFu33 lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu1ll_BFu0i_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 33, 1, "BFu1ll_BFu0i_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 33, hide_ull(1LL<<32), "BFu1ll_BFu0i_BFu33");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu33(Test_BFu1ll_BFu0i_BFu33, "BFu1ll_BFu0i_BFu33", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu7c()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu7c");
    static BFu1ll_BFu0i_BFu7c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1ll_BFu0i_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, 1, "BFu1ll_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, hide_ull(1LL<<6), "BFu1ll_BFu0i_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu7c(Test_BFu1ll_BFu0i_BFu7c, "BFu1ll_BFu0i_BFu7c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu7i()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu7i");
    static BFu1ll_BFu0i_BFu7i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1ll_BFu0i_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, 1, "BFu1ll_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, hide_ull(1LL<<6), "BFu1ll_BFu0i_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu7i(Test_BFu1ll_BFu0i_BFu7i, "BFu1ll_BFu0i_BFu7i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu7ll()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu7ll");
    static BFu1ll_BFu0i_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1ll_BFu0i_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, 1, "BFu1ll_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, hide_ull(1LL<<6), "BFu1ll_BFu0i_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu7ll(Test_BFu1ll_BFu0i_BFu7ll, "BFu1ll_BFu0i_BFu7ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu7s()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu7s");
    static BFu1ll_BFu0i_BFu7s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1ll_BFu0i_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, 1, "BFu1ll_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, hide_ull(1LL<<6), "BFu1ll_BFu0i_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu7s(Test_BFu1ll_BFu0i_BFu7s, "BFu1ll_BFu0i_BFu7s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu8c()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu8c");
    static BFu1ll_BFu0i_BFu8c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1ll_BFu0i_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, 1, "BFu1ll_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, hide_ull(1LL<<7), "BFu1ll_BFu0i_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu8c(Test_BFu1ll_BFu0i_BFu8c, "BFu1ll_BFu0i_BFu8c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu8i()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu8i");
    static BFu1ll_BFu0i_BFu8i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1ll_BFu0i_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, 1, "BFu1ll_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, hide_ull(1LL<<7), "BFu1ll_BFu0i_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu8i(Test_BFu1ll_BFu0i_BFu8i, "BFu1ll_BFu0i_BFu8i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu8ll()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu8ll");
    static BFu1ll_BFu0i_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1ll_BFu0i_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, 1, "BFu1ll_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, hide_ull(1LL<<7), "BFu1ll_BFu0i_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu8ll(Test_BFu1ll_BFu0i_BFu8ll, "BFu1ll_BFu0i_BFu8ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu8s()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu8s");
    static BFu1ll_BFu0i_BFu8s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1ll_BFu0i_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, 1, "BFu1ll_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, hide_ull(1LL<<7), "BFu1ll_BFu0i_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu8s(Test_BFu1ll_BFu0i_BFu8s, "BFu1ll_BFu0i_BFu8s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu9i()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu9i");
    static BFu1ll_BFu0i_BFu9i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1ll_BFu0i_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, 1, "BFu1ll_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, hide_ull(1LL<<8), "BFu1ll_BFu0i_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu9i(Test_BFu1ll_BFu0i_BFu9i, "BFu1ll_BFu0i_BFu9i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu9ll()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu9ll");
    static BFu1ll_BFu0i_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1ll_BFu0i_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, 1, "BFu1ll_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, hide_ull(1LL<<8), "BFu1ll_BFu0i_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu9ll(Test_BFu1ll_BFu0i_BFu9ll, "BFu1ll_BFu0i_BFu9ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_BFu9s()
{
  {
    init_simple_test("BFu1ll_BFu0i_BFu9s");
    static BFu1ll_BFu0i_BFu9s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1ll_BFu0i_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, 1, "BFu1ll_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, hide_ull(1LL<<8), "BFu1ll_BFu0i_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_BFu9s(Test_BFu1ll_BFu0i_BFu9s, "BFu1ll_BFu0i_BFu9s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_C()
{
  {
    init_simple_test("BFu1ll_BFu0i_C");
    static BFu1ll_BFu0i_C lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1ll_BFu0i_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_C)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_C");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu1ll_BFu0i_C.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_C(Test_BFu1ll_BFu0i_C, "BFu1ll_BFu0i_C", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_D()
{
  {
    init_simple_test("BFu1ll_BFu0i_D");
    static BFu1ll_BFu0i_D lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu1ll_BFu0i_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_D)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_D");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu1ll_BFu0i_D.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_D(Test_BFu1ll_BFu0i_D, "BFu1ll_BFu0i_D", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_F()
{
  {
    init_simple_test("BFu1ll_BFu0i_F");
    static BFu1ll_BFu0i_F lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1ll_BFu0i_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_F)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_F");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu1ll_BFu0i_F.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_F(Test_BFu1ll_BFu0i_F, "BFu1ll_BFu0i_F", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_I()
{
  {
    init_simple_test("BFu1ll_BFu0i_I");
    static BFu1ll_BFu0i_I lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1ll_BFu0i_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_I)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_I");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu1ll_BFu0i_I.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_I(Test_BFu1ll_BFu0i_I, "BFu1ll_BFu0i_I", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_Ip()
{
  {
    init_simple_test("BFu1ll_BFu0i_Ip");
    static BFu1ll_BFu0i_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu1ll_BFu0i_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_Ip");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu1ll_BFu0i_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_Ip(Test_BFu1ll_BFu0i_Ip, "BFu1ll_BFu0i_Ip", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_L()
{
  {
    init_simple_test("BFu1ll_BFu0i_L");
    static BFu1ll_BFu0i_L lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu1ll_BFu0i_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_L)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_L");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu1ll_BFu0i_L.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_L(Test_BFu1ll_BFu0i_L, "BFu1ll_BFu0i_L", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_S()
{
  {
    init_simple_test("BFu1ll_BFu0i_S");
    static BFu1ll_BFu0i_S lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1ll_BFu0i_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_S)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_S");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu1ll_BFu0i_S.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_S(Test_BFu1ll_BFu0i_S, "BFu1ll_BFu0i_S", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_Uc()
{
  {
    init_simple_test("BFu1ll_BFu0i_Uc");
    static BFu1ll_BFu0i_Uc lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1ll_BFu0i_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_Uc");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu1ll_BFu0i_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_Uc(Test_BFu1ll_BFu0i_Uc, "BFu1ll_BFu0i_Uc", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_Ui()
{
  {
    init_simple_test("BFu1ll_BFu0i_Ui");
    static BFu1ll_BFu0i_Ui lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1ll_BFu0i_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_Ui");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu1ll_BFu0i_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_Ui(Test_BFu1ll_BFu0i_Ui, "BFu1ll_BFu0i_Ui", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_Ul()
{
  {
    init_simple_test("BFu1ll_BFu0i_Ul");
    static BFu1ll_BFu0i_Ul lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu1ll_BFu0i_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_Ul");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu1ll_BFu0i_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_Ul(Test_BFu1ll_BFu0i_Ul, "BFu1ll_BFu0i_Ul", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_Us()
{
  {
    init_simple_test("BFu1ll_BFu0i_Us");
    static BFu1ll_BFu0i_Us lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1ll_BFu0i_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_Us)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_Us");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu1ll_BFu0i_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_Us(Test_BFu1ll_BFu0i_Us, "BFu1ll_BFu0i_Us", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0i_Vp()
{
  {
    init_simple_test("BFu1ll_BFu0i_Vp");
    static BFu1ll_BFu0i_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu1ll_BFu0i_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0i_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0i_Vp");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu1ll_BFu0i_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0i_Vp(Test_BFu1ll_BFu0i_Vp, "BFu1ll_BFu0i_Vp", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu0ll");
    static BFu1ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll(Test_BFu1ll_BFu0ll, "BFu1ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu0c");
    static BFu1ll_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu0c(Test_BFu1ll_BFu0ll_BFu0c, "BFu1ll_BFu0ll_BFu0c", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu0i");
    static BFu1ll_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu0i(Test_BFu1ll_BFu0ll_BFu0i, "BFu1ll_BFu0ll_BFu0i", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu0ll");
    static BFu1ll_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu0ll(Test_BFu1ll_BFu0ll_BFu0ll, "BFu1ll_BFu0ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu0s");
    static BFu1ll_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu0s(Test_BFu1ll_BFu0ll_BFu0s, "BFu1ll_BFu0ll_BFu0s", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu15i()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu15i");
    static BFu1ll_BFu0ll_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1ll_BFu0ll_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "BFu1ll_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "BFu1ll_BFu0ll_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu15i(Test_BFu1ll_BFu0ll_BFu15i, "BFu1ll_BFu0ll_BFu15i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu15ll()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu15ll");
    static BFu1ll_BFu0ll_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1ll_BFu0ll_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "BFu1ll_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "BFu1ll_BFu0ll_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu15ll(Test_BFu1ll_BFu0ll_BFu15ll, "BFu1ll_BFu0ll_BFu15ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu15s()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu15s");
    static BFu1ll_BFu0ll_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1ll_BFu0ll_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "BFu1ll_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "BFu1ll_BFu0ll_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu15s(Test_BFu1ll_BFu0ll_BFu15s, "BFu1ll_BFu0ll_BFu15s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu16i()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu16i");
    static BFu1ll_BFu0ll_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1ll_BFu0ll_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "BFu1ll_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "BFu1ll_BFu0ll_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu16i(Test_BFu1ll_BFu0ll_BFu16i, "BFu1ll_BFu0ll_BFu16i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu16ll()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu16ll");
    static BFu1ll_BFu0ll_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1ll_BFu0ll_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "BFu1ll_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "BFu1ll_BFu0ll_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu16ll(Test_BFu1ll_BFu0ll_BFu16ll, "BFu1ll_BFu0ll_BFu16ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu16s()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu16s");
    static BFu1ll_BFu0ll_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1ll_BFu0ll_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "BFu1ll_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "BFu1ll_BFu0ll_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu16s(Test_BFu1ll_BFu0ll_BFu16s, "BFu1ll_BFu0ll_BFu16s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu17i()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu17i");
    static BFu1ll_BFu0ll_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu1ll_BFu0ll_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "BFu1ll_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "BFu1ll_BFu0ll_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu17i(Test_BFu1ll_BFu0ll_BFu17i, "BFu1ll_BFu0ll_BFu17i", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu17ll()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu17ll");
    static BFu1ll_BFu0ll_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu1ll_BFu0ll_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "BFu1ll_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "BFu1ll_BFu0ll_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu17ll(Test_BFu1ll_BFu0ll_BFu17ll, "BFu1ll_BFu0ll_BFu17ll", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu1c()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu1c");
    static BFu1ll_BFu0ll_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1ll_BFu0ll_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu1ll_BFu0ll_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu1c(Test_BFu1ll_BFu0ll_BFu1c, "BFu1ll_BFu0ll_BFu1c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu1i()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu1i");
    static BFu1ll_BFu0ll_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1ll_BFu0ll_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu1ll_BFu0ll_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu1i(Test_BFu1ll_BFu0ll_BFu1i, "BFu1ll_BFu0ll_BFu1i", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu1ll()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu1ll");
    static BFu1ll_BFu0ll_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1ll_BFu0ll_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu1ll_BFu0ll_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu1ll(Test_BFu1ll_BFu0ll_BFu1ll, "BFu1ll_BFu0ll_BFu1ll", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu1s()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu1s");
    static BFu1ll_BFu0ll_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1ll_BFu0ll_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu1ll_BFu0ll_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu1s(Test_BFu1ll_BFu0ll_BFu1s, "BFu1ll_BFu0ll_BFu1s", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu31i()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu31i");
    static BFu1ll_BFu0ll_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu1ll_BFu0ll_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "BFu1ll_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "BFu1ll_BFu0ll_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu31i(Test_BFu1ll_BFu0ll_BFu31i, "BFu1ll_BFu0ll_BFu31i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu31ll()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu31ll");
    static BFu1ll_BFu0ll_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu1ll_BFu0ll_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "BFu1ll_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "BFu1ll_BFu0ll_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu31ll(Test_BFu1ll_BFu0ll_BFu31ll, "BFu1ll_BFu0ll_BFu31ll", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu32i()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu32i");
    static BFu1ll_BFu0ll_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu1ll_BFu0ll_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "BFu1ll_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "BFu1ll_BFu0ll_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu32i(Test_BFu1ll_BFu0ll_BFu32i, "BFu1ll_BFu0ll_BFu32i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu32ll()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu32ll");
    static BFu1ll_BFu0ll_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu1ll_BFu0ll_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "BFu1ll_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "BFu1ll_BFu0ll_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu32ll(Test_BFu1ll_BFu0ll_BFu32ll, "BFu1ll_BFu0ll_BFu32ll", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu33()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu33");
    static BFu1ll_BFu0ll_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(BFu1ll_BFu0ll_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, 1, "BFu1ll_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, hide_ull(1LL<<32), "BFu1ll_BFu0ll_BFu33");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu33(Test_BFu1ll_BFu0ll_BFu33, "BFu1ll_BFu0ll_BFu33", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu7c()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu7c");
    static BFu1ll_BFu0ll_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1ll_BFu0ll_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu1ll_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu1ll_BFu0ll_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu7c(Test_BFu1ll_BFu0ll_BFu7c, "BFu1ll_BFu0ll_BFu7c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu7i()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu7i");
    static BFu1ll_BFu0ll_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1ll_BFu0ll_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu1ll_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu1ll_BFu0ll_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu7i(Test_BFu1ll_BFu0ll_BFu7i, "BFu1ll_BFu0ll_BFu7i", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu7ll()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu7ll");
    static BFu1ll_BFu0ll_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1ll_BFu0ll_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu1ll_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu1ll_BFu0ll_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu7ll(Test_BFu1ll_BFu0ll_BFu7ll, "BFu1ll_BFu0ll_BFu7ll", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu7s()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu7s");
    static BFu1ll_BFu0ll_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1ll_BFu0ll_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu1ll_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu1ll_BFu0ll_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu7s(Test_BFu1ll_BFu0ll_BFu7s, "BFu1ll_BFu0ll_BFu7s", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu8c()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu8c");
    static BFu1ll_BFu0ll_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1ll_BFu0ll_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu1ll_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu1ll_BFu0ll_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu8c(Test_BFu1ll_BFu0ll_BFu8c, "BFu1ll_BFu0ll_BFu8c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu8i()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu8i");
    static BFu1ll_BFu0ll_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1ll_BFu0ll_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu1ll_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu1ll_BFu0ll_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu8i(Test_BFu1ll_BFu0ll_BFu8i, "BFu1ll_BFu0ll_BFu8i", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu8ll()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu8ll");
    static BFu1ll_BFu0ll_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1ll_BFu0ll_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu1ll_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu1ll_BFu0ll_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu8ll(Test_BFu1ll_BFu0ll_BFu8ll, "BFu1ll_BFu0ll_BFu8ll", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu8s()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu8s");
    static BFu1ll_BFu0ll_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1ll_BFu0ll_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu1ll_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu1ll_BFu0ll_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu8s(Test_BFu1ll_BFu0ll_BFu8s, "BFu1ll_BFu0ll_BFu8s", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu9i()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu9i");
    static BFu1ll_BFu0ll_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1ll_BFu0ll_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "BFu1ll_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "BFu1ll_BFu0ll_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu9i(Test_BFu1ll_BFu0ll_BFu9i, "BFu1ll_BFu0ll_BFu9i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu9ll()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu9ll");
    static BFu1ll_BFu0ll_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1ll_BFu0ll_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "BFu1ll_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "BFu1ll_BFu0ll_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu9ll(Test_BFu1ll_BFu0ll_BFu9ll, "BFu1ll_BFu0ll_BFu9ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_BFu9s()
{
  {
    init_simple_test("BFu1ll_BFu0ll_BFu9s");
    static BFu1ll_BFu0ll_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1ll_BFu0ll_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "BFu1ll_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "BFu1ll_BFu0ll_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_BFu9s(Test_BFu1ll_BFu0ll_BFu9s, "BFu1ll_BFu0ll_BFu9s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_C()
{
  {
    init_simple_test("BFu1ll_BFu0ll_C");
    static BFu1ll_BFu0ll_C lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1ll_BFu0ll_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_C)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_C");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu1ll_BFu0ll_C.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_C(Test_BFu1ll_BFu0ll_C, "BFu1ll_BFu0ll_C", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_D()
{
  {
    init_simple_test("BFu1ll_BFu0ll_D");
    static BFu1ll_BFu0ll_D lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu1ll_BFu0ll_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_D)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_D");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu1ll_BFu0ll_D.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_D(Test_BFu1ll_BFu0ll_D, "BFu1ll_BFu0ll_D", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_F()
{
  {
    init_simple_test("BFu1ll_BFu0ll_F");
    static BFu1ll_BFu0ll_F lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu1ll_BFu0ll_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_F)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_F");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu1ll_BFu0ll_F.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_F(Test_BFu1ll_BFu0ll_F, "BFu1ll_BFu0ll_F", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_I()
{
  {
    init_simple_test("BFu1ll_BFu0ll_I");
    static BFu1ll_BFu0ll_I lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu1ll_BFu0ll_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_I)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_I");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu1ll_BFu0ll_I.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_I(Test_BFu1ll_BFu0ll_I, "BFu1ll_BFu0ll_I", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_Ip()
{
  {
    init_simple_test("BFu1ll_BFu0ll_Ip");
    static BFu1ll_BFu0ll_Ip lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu1ll_BFu0ll_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_Ip");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu1ll_BFu0ll_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_Ip(Test_BFu1ll_BFu0ll_Ip, "BFu1ll_BFu0ll_Ip", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_L()
{
  {
    init_simple_test("BFu1ll_BFu0ll_L");
    static BFu1ll_BFu0ll_L lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu1ll_BFu0ll_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_L)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_L");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu1ll_BFu0ll_L.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_L(Test_BFu1ll_BFu0ll_L, "BFu1ll_BFu0ll_L", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_S()
{
  {
    init_simple_test("BFu1ll_BFu0ll_S");
    static BFu1ll_BFu0ll_S lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1ll_BFu0ll_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_S)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_S");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu1ll_BFu0ll_S.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_S(Test_BFu1ll_BFu0ll_S, "BFu1ll_BFu0ll_S", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_Uc()
{
  {
    init_simple_test("BFu1ll_BFu0ll_Uc");
    static BFu1ll_BFu0ll_Uc lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1ll_BFu0ll_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_Uc");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu1ll_BFu0ll_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_Uc(Test_BFu1ll_BFu0ll_Uc, "BFu1ll_BFu0ll_Uc", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_Ui()
{
  {
    init_simple_test("BFu1ll_BFu0ll_Ui");
    static BFu1ll_BFu0ll_Ui lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu1ll_BFu0ll_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_Ui");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu1ll_BFu0ll_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_Ui(Test_BFu1ll_BFu0ll_Ui, "BFu1ll_BFu0ll_Ui", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_Ul()
{
  {
    init_simple_test("BFu1ll_BFu0ll_Ul");
    static BFu1ll_BFu0ll_Ul lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu1ll_BFu0ll_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_Ul");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu1ll_BFu0ll_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_Ul(Test_BFu1ll_BFu0ll_Ul, "BFu1ll_BFu0ll_Ul", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_Us()
{
  {
    init_simple_test("BFu1ll_BFu0ll_Us");
    static BFu1ll_BFu0ll_Us lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1ll_BFu0ll_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_Us)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_Us");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu1ll_BFu0ll_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_Us(Test_BFu1ll_BFu0ll_Us, "BFu1ll_BFu0ll_Us", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0ll_Vp()
{
  {
    init_simple_test("BFu1ll_BFu0ll_Vp");
    static BFu1ll_BFu0ll_Vp lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu1ll_BFu0ll_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0ll_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0ll_Vp");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu1ll_BFu0ll_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0ll_Vp(Test_BFu1ll_BFu0ll_Vp, "BFu1ll_BFu0ll_Vp", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu0s");
    static BFu1ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu1ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s(Test_BFu1ll_BFu0s, "BFu1ll_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu0c");
    static BFu1ll_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu1ll_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu0c(Test_BFu1ll_BFu0s_BFu0c, "BFu1ll_BFu0s_BFu0c", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu0i");
    static BFu1ll_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu0i(Test_BFu1ll_BFu0s_BFu0i, "BFu1ll_BFu0s_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu0ll");
    static BFu1ll_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu0ll(Test_BFu1ll_BFu0s_BFu0ll, "BFu1ll_BFu0s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu0s");
    static BFu1ll_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu1ll_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu0s(Test_BFu1ll_BFu0s_BFu0s, "BFu1ll_BFu0s_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu15i()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu15i");
    static BFu1ll_BFu0s_BFu15i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu0s_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, 1, "BFu1ll_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, hide_ull(1LL<<14), "BFu1ll_BFu0s_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu15i(Test_BFu1ll_BFu0s_BFu15i, "BFu1ll_BFu0s_BFu15i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu15ll()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu15ll");
    static BFu1ll_BFu0s_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu0s_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, 1, "BFu1ll_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, hide_ull(1LL<<14), "BFu1ll_BFu0s_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu15ll(Test_BFu1ll_BFu0s_BFu15ll, "BFu1ll_BFu0s_BFu15ll", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu15s()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu15s");
    static BFu1ll_BFu0s_BFu15s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu0s_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, 1, "BFu1ll_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, hide_ull(1LL<<14), "BFu1ll_BFu0s_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu15s(Test_BFu1ll_BFu0s_BFu15s, "BFu1ll_BFu0s_BFu15s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu16i()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu16i");
    static BFu1ll_BFu0s_BFu16i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu0s_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, 1, "BFu1ll_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, hide_ull(1LL<<15), "BFu1ll_BFu0s_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu16i(Test_BFu1ll_BFu0s_BFu16i, "BFu1ll_BFu0s_BFu16i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu16ll()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu16ll");
    static BFu1ll_BFu0s_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu0s_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, 1, "BFu1ll_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, hide_ull(1LL<<15), "BFu1ll_BFu0s_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu16ll(Test_BFu1ll_BFu0s_BFu16ll, "BFu1ll_BFu0s_BFu16ll", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu16s()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu16s");
    static BFu1ll_BFu0s_BFu16s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu0s_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, 1, "BFu1ll_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, hide_ull(1LL<<15), "BFu1ll_BFu0s_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu16s(Test_BFu1ll_BFu0s_BFu16s, "BFu1ll_BFu0s_BFu16s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu17i()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu17i");
    static BFu1ll_BFu0s_BFu17i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1ll_BFu0s_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 17, 1, "BFu1ll_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 17, hide_ull(1LL<<16), "BFu1ll_BFu0s_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu17i(Test_BFu1ll_BFu0s_BFu17i, "BFu1ll_BFu0s_BFu17i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu17ll()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu17ll");
    static BFu1ll_BFu0s_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1ll_BFu0s_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 17, 1, "BFu1ll_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 17, hide_ull(1LL<<16), "BFu1ll_BFu0s_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu17ll(Test_BFu1ll_BFu0s_BFu17ll, "BFu1ll_BFu0s_BFu17ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu1c()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu1c");
    static BFu1ll_BFu0s_BFu1c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu1ll_BFu0s_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 1, 1, "BFu1ll_BFu0s_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu1c(Test_BFu1ll_BFu0s_BFu1c, "BFu1ll_BFu0s_BFu1c", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu1i()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu1i");
    static BFu1ll_BFu0s_BFu1i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu1ll_BFu0s_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 1, 1, "BFu1ll_BFu0s_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu1i(Test_BFu1ll_BFu0s_BFu1i, "BFu1ll_BFu0s_BFu1i", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu1ll()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu1ll");
    static BFu1ll_BFu0s_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu1ll_BFu0s_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 1, 1, "BFu1ll_BFu0s_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu1ll(Test_BFu1ll_BFu0s_BFu1ll, "BFu1ll_BFu0s_BFu1ll", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu1s()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu1s");
    static BFu1ll_BFu0s_BFu1s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu1ll_BFu0s_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 1, 1, "BFu1ll_BFu0s_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu1s(Test_BFu1ll_BFu0s_BFu1s, "BFu1ll_BFu0s_BFu1s", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu31i()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu31i");
    static BFu1ll_BFu0s_BFu31i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1ll_BFu0s_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 31, 1, "BFu1ll_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 31, hide_ull(1LL<<30), "BFu1ll_BFu0s_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu31i(Test_BFu1ll_BFu0s_BFu31i, "BFu1ll_BFu0s_BFu31i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu31ll()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu31ll");
    static BFu1ll_BFu0s_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1ll_BFu0s_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 31, 1, "BFu1ll_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 31, hide_ull(1LL<<30), "BFu1ll_BFu0s_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu31ll(Test_BFu1ll_BFu0s_BFu31ll, "BFu1ll_BFu0s_BFu31ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu32i()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu32i");
    static BFu1ll_BFu0s_BFu32i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1ll_BFu0s_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 32, 1, "BFu1ll_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 32, hide_ull(1LL<<31), "BFu1ll_BFu0s_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu32i(Test_BFu1ll_BFu0s_BFu32i, "BFu1ll_BFu0s_BFu32i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu32ll()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu32ll");
    static BFu1ll_BFu0s_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1ll_BFu0s_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 32, 1, "BFu1ll_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 32, hide_ull(1LL<<31), "BFu1ll_BFu0s_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu32ll(Test_BFu1ll_BFu0s_BFu32ll, "BFu1ll_BFu0s_BFu32ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu33()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu33");
    static BFu1ll_BFu0s_BFu33 lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu1ll_BFu0s_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 33, 1, "BFu1ll_BFu0s_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 33, hide_ull(1LL<<32), "BFu1ll_BFu0s_BFu33");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu33(Test_BFu1ll_BFu0s_BFu33, "BFu1ll_BFu0s_BFu33", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu7c()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu7c");
    static BFu1ll_BFu0s_BFu7c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu1ll_BFu0s_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, 1, "BFu1ll_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, hide_ull(1LL<<6), "BFu1ll_BFu0s_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu7c(Test_BFu1ll_BFu0s_BFu7c, "BFu1ll_BFu0s_BFu7c", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu7i()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu7i");
    static BFu1ll_BFu0s_BFu7i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu1ll_BFu0s_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, 1, "BFu1ll_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, hide_ull(1LL<<6), "BFu1ll_BFu0s_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu7i(Test_BFu1ll_BFu0s_BFu7i, "BFu1ll_BFu0s_BFu7i", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu7ll()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu7ll");
    static BFu1ll_BFu0s_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu1ll_BFu0s_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, 1, "BFu1ll_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, hide_ull(1LL<<6), "BFu1ll_BFu0s_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu7ll(Test_BFu1ll_BFu0s_BFu7ll, "BFu1ll_BFu0s_BFu7ll", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu7s()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu7s");
    static BFu1ll_BFu0s_BFu7s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu1ll_BFu0s_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, 1, "BFu1ll_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, hide_ull(1LL<<6), "BFu1ll_BFu0s_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu7s(Test_BFu1ll_BFu0s_BFu7s, "BFu1ll_BFu0s_BFu7s", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu8c()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu8c");
    static BFu1ll_BFu0s_BFu8c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu1ll_BFu0s_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, 1, "BFu1ll_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, hide_ull(1LL<<7), "BFu1ll_BFu0s_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu8c(Test_BFu1ll_BFu0s_BFu8c, "BFu1ll_BFu0s_BFu8c", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu8i()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu8i");
    static BFu1ll_BFu0s_BFu8i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu1ll_BFu0s_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, 1, "BFu1ll_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, hide_ull(1LL<<7), "BFu1ll_BFu0s_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu8i(Test_BFu1ll_BFu0s_BFu8i, "BFu1ll_BFu0s_BFu8i", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu8ll()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu8ll");
    static BFu1ll_BFu0s_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu1ll_BFu0s_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, 1, "BFu1ll_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, hide_ull(1LL<<7), "BFu1ll_BFu0s_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu8ll(Test_BFu1ll_BFu0s_BFu8ll, "BFu1ll_BFu0s_BFu8ll", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu8s()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu8s");
    static BFu1ll_BFu0s_BFu8s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu1ll_BFu0s_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, 1, "BFu1ll_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, hide_ull(1LL<<7), "BFu1ll_BFu0s_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu8s(Test_BFu1ll_BFu0s_BFu8s, "BFu1ll_BFu0s_BFu8s", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu9i()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu9i");
    static BFu1ll_BFu0s_BFu9i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu0s_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, 1, "BFu1ll_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, hide_ull(1LL<<8), "BFu1ll_BFu0s_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu9i(Test_BFu1ll_BFu0s_BFu9i, "BFu1ll_BFu0s_BFu9i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu9ll()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu9ll");
    static BFu1ll_BFu0s_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu0s_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, 1, "BFu1ll_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, hide_ull(1LL<<8), "BFu1ll_BFu0s_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu9ll(Test_BFu1ll_BFu0s_BFu9ll, "BFu1ll_BFu0s_BFu9ll", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_BFu9s()
{
  {
    init_simple_test("BFu1ll_BFu0s_BFu9s");
    static BFu1ll_BFu0s_BFu9s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu0s_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, 1, "BFu1ll_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, hide_ull(1LL<<8), "BFu1ll_BFu0s_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_BFu9s(Test_BFu1ll_BFu0s_BFu9s, "BFu1ll_BFu0s_BFu9s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_C()
{
  {
    init_simple_test("BFu1ll_BFu0s_C");
    static BFu1ll_BFu0s_C lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu1ll_BFu0s_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_C)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_C");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu1ll_BFu0s_C.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_C(Test_BFu1ll_BFu0s_C, "BFu1ll_BFu0s_C", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_D()
{
  {
    init_simple_test("BFu1ll_BFu0s_D");
    static BFu1ll_BFu0s_D lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu1ll_BFu0s_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_D)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_D");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu1ll_BFu0s_D.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_D(Test_BFu1ll_BFu0s_D, "BFu1ll_BFu0s_D", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_F()
{
  {
    init_simple_test("BFu1ll_BFu0s_F");
    static BFu1ll_BFu0s_F lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1ll_BFu0s_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_F)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_F");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu1ll_BFu0s_F.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_F(Test_BFu1ll_BFu0s_F, "BFu1ll_BFu0s_F", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_I()
{
  {
    init_simple_test("BFu1ll_BFu0s_I");
    static BFu1ll_BFu0s_I lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1ll_BFu0s_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_I)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_I");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu1ll_BFu0s_I.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_I(Test_BFu1ll_BFu0s_I, "BFu1ll_BFu0s_I", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_Ip()
{
  {
    init_simple_test("BFu1ll_BFu0s_Ip");
    static BFu1ll_BFu0s_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1ll_BFu0s_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_Ip");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu1ll_BFu0s_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_Ip(Test_BFu1ll_BFu0s_Ip, "BFu1ll_BFu0s_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_L()
{
  {
    init_simple_test("BFu1ll_BFu0s_L");
    static BFu1ll_BFu0s_L lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu1ll_BFu0s_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_L)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_L");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu1ll_BFu0s_L.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_L(Test_BFu1ll_BFu0s_L, "BFu1ll_BFu0s_L", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_S()
{
  {
    init_simple_test("BFu1ll_BFu0s_S");
    static BFu1ll_BFu0s_S lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu0s_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_S)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_S");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu1ll_BFu0s_S.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_S(Test_BFu1ll_BFu0s_S, "BFu1ll_BFu0s_S", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_Uc()
{
  {
    init_simple_test("BFu1ll_BFu0s_Uc");
    static BFu1ll_BFu0s_Uc lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu1ll_BFu0s_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_Uc");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu1ll_BFu0s_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_Uc(Test_BFu1ll_BFu0s_Uc, "BFu1ll_BFu0s_Uc", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_Ui()
{
  {
    init_simple_test("BFu1ll_BFu0s_Ui");
    static BFu1ll_BFu0s_Ui lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1ll_BFu0s_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_Ui");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu1ll_BFu0s_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_Ui(Test_BFu1ll_BFu0s_Ui, "BFu1ll_BFu0s_Ui", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_Ul()
{
  {
    init_simple_test("BFu1ll_BFu0s_Ul");
    static BFu1ll_BFu0s_Ul lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu1ll_BFu0s_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_Ul");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu1ll_BFu0s_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_Ul(Test_BFu1ll_BFu0s_Ul, "BFu1ll_BFu0s_Ul", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_Us()
{
  {
    init_simple_test("BFu1ll_BFu0s_Us");
    static BFu1ll_BFu0s_Us lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu0s_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_Us)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_Us");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu1ll_BFu0s_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_Us(Test_BFu1ll_BFu0s_Us, "BFu1ll_BFu0s_Us", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu0s_Vp()
{
  {
    init_simple_test("BFu1ll_BFu0s_Vp");
    static BFu1ll_BFu0s_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1ll_BFu0s_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu0s_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu0s_Vp");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu1ll_BFu0s_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu0s_Vp(Test_BFu1ll_BFu0s_Vp, "BFu1ll_BFu0s_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu15i_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu15i_BFu0c");
    static BFu1ll_BFu15i_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu15i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu15i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1ll_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1ll_BFu15i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu15i_BFu0c(Test_BFu1ll_BFu15i_BFu0c, "BFu1ll_BFu15i_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu15i_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu15i_BFu0i");
    static BFu1ll_BFu15i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu15i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu15i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1ll_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1ll_BFu15i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu15i_BFu0i(Test_BFu1ll_BFu15i_BFu0i, "BFu1ll_BFu15i_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu15i_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu15i_BFu0ll");
    static BFu1ll_BFu15i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu15i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu15i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1ll_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1ll_BFu15i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu15i_BFu0ll(Test_BFu1ll_BFu15i_BFu0ll, "BFu1ll_BFu15i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu15i_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu15i_BFu0s");
    static BFu1ll_BFu15i_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu15i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu15i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1ll_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1ll_BFu15i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu15i_BFu0s(Test_BFu1ll_BFu15i_BFu0s, "BFu1ll_BFu15i_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu15ll_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu15ll_BFu0c");
    static BFu1ll_BFu15ll_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu15ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu15ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1ll_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1ll_BFu15ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu15ll_BFu0c(Test_BFu1ll_BFu15ll_BFu0c, "BFu1ll_BFu15ll_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu15ll_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu15ll_BFu0i");
    static BFu1ll_BFu15ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu15ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu15ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1ll_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1ll_BFu15ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu15ll_BFu0i(Test_BFu1ll_BFu15ll_BFu0i, "BFu1ll_BFu15ll_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu15ll_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu15ll_BFu0ll");
    static BFu1ll_BFu15ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu15ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu15ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1ll_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1ll_BFu15ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu15ll_BFu0ll(Test_BFu1ll_BFu15ll_BFu0ll, "BFu1ll_BFu15ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu15ll_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu15ll_BFu0s");
    static BFu1ll_BFu15ll_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu15ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu15ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1ll_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1ll_BFu15ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu15ll_BFu0s(Test_BFu1ll_BFu15ll_BFu0s, "BFu1ll_BFu15ll_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu15s_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu15s_BFu0c");
    static BFu1ll_BFu15s_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu15s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu15s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1ll_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1ll_BFu15s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu15s_BFu0c(Test_BFu1ll_BFu15s_BFu0c, "BFu1ll_BFu15s_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu15s_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu15s_BFu0i");
    static BFu1ll_BFu15s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu15s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu15s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1ll_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1ll_BFu15s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu15s_BFu0i(Test_BFu1ll_BFu15s_BFu0i, "BFu1ll_BFu15s_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu15s_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu15s_BFu0ll");
    static BFu1ll_BFu15s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu15s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu15s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1ll_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1ll_BFu15s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu15s_BFu0ll(Test_BFu1ll_BFu15s_BFu0ll, "BFu1ll_BFu15s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu15s_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu15s_BFu0s");
    static BFu1ll_BFu15s_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu15s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu15s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1ll_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1ll_BFu15s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu15s_BFu0s(Test_BFu1ll_BFu15s_BFu0s, "BFu1ll_BFu15s_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu16i_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu16i_BFu0c");
    static BFu1ll_BFu16i_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_BFu16i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu16i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1ll_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1ll_BFu16i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu16i_BFu0c(Test_BFu1ll_BFu16i_BFu0c, "BFu1ll_BFu16i_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu16i_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu16i_BFu0i");
    static BFu1ll_BFu16i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu16i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu16i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1ll_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1ll_BFu16i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu16i_BFu0i(Test_BFu1ll_BFu16i_BFu0i, "BFu1ll_BFu16i_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu16i_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu16i_BFu0ll");
    static BFu1ll_BFu16i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu16i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu16i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1ll_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1ll_BFu16i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu16i_BFu0ll(Test_BFu1ll_BFu16i_BFu0ll, "BFu1ll_BFu16i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu16i_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu16i_BFu0s");
    static BFu1ll_BFu16i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu16i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu16i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1ll_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1ll_BFu16i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu16i_BFu0s(Test_BFu1ll_BFu16i_BFu0s, "BFu1ll_BFu16i_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu16ll_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu16ll_BFu0c");
    static BFu1ll_BFu16ll_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_BFu16ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu16ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1ll_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1ll_BFu16ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu16ll_BFu0c(Test_BFu1ll_BFu16ll_BFu0c, "BFu1ll_BFu16ll_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu16ll_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu16ll_BFu0i");
    static BFu1ll_BFu16ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu16ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu16ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1ll_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1ll_BFu16ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu16ll_BFu0i(Test_BFu1ll_BFu16ll_BFu0i, "BFu1ll_BFu16ll_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu16ll_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu16ll_BFu0ll");
    static BFu1ll_BFu16ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu16ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu16ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1ll_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1ll_BFu16ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu16ll_BFu0ll(Test_BFu1ll_BFu16ll_BFu0ll, "BFu1ll_BFu16ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu16ll_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu16ll_BFu0s");
    static BFu1ll_BFu16ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu16ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu16ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1ll_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1ll_BFu16ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu16ll_BFu0s(Test_BFu1ll_BFu16ll_BFu0s, "BFu1ll_BFu16ll_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu16s_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu16s_BFu0c");
    static BFu1ll_BFu16s_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_BFu16s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu16s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1ll_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1ll_BFu16s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu16s_BFu0c(Test_BFu1ll_BFu16s_BFu0c, "BFu1ll_BFu16s_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu16s_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu16s_BFu0i");
    static BFu1ll_BFu16s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu16s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu16s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1ll_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1ll_BFu16s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu16s_BFu0i(Test_BFu1ll_BFu16s_BFu0i, "BFu1ll_BFu16s_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu16s_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu16s_BFu0ll");
    static BFu1ll_BFu16s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu16s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu16s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1ll_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1ll_BFu16s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu16s_BFu0ll(Test_BFu1ll_BFu16s_BFu0ll, "BFu1ll_BFu16s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu16s_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu16s_BFu0s");
    static BFu1ll_BFu16s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu16s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu16s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1ll_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1ll_BFu16s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu16s_BFu0s(Test_BFu1ll_BFu16s_BFu0s, "BFu1ll_BFu16s_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu17i_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu17i_BFu0c");
    static BFu1ll_BFu17i_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_BFu17i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu17i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "BFu1ll_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "BFu1ll_BFu17i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu17i_BFu0c(Test_BFu1ll_BFu17i_BFu0c, "BFu1ll_BFu17i_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu17i_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu17i_BFu0i");
    static BFu1ll_BFu17i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu17i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu17i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "BFu1ll_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "BFu1ll_BFu17i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu17i_BFu0i(Test_BFu1ll_BFu17i_BFu0i, "BFu1ll_BFu17i_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu17i_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu17i_BFu0ll");
    static BFu1ll_BFu17i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu17i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu17i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "BFu1ll_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "BFu1ll_BFu17i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu17i_BFu0ll(Test_BFu1ll_BFu17i_BFu0ll, "BFu1ll_BFu17i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu17i_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu17i_BFu0s");
    static BFu1ll_BFu17i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu17i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu17i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "BFu1ll_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "BFu1ll_BFu17i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu17i_BFu0s(Test_BFu1ll_BFu17i_BFu0s, "BFu1ll_BFu17i_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu17ll_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu17ll_BFu0c");
    static BFu1ll_BFu17ll_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_BFu17ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu17ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "BFu1ll_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "BFu1ll_BFu17ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu17ll_BFu0c(Test_BFu1ll_BFu17ll_BFu0c, "BFu1ll_BFu17ll_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu17ll_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu17ll_BFu0i");
    static BFu1ll_BFu17ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu17ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu17ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "BFu1ll_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "BFu1ll_BFu17ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu17ll_BFu0i(Test_BFu1ll_BFu17ll_BFu0i, "BFu1ll_BFu17ll_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu17ll_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu17ll_BFu0ll");
    static BFu1ll_BFu17ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu17ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu17ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "BFu1ll_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "BFu1ll_BFu17ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu17ll_BFu0ll(Test_BFu1ll_BFu17ll_BFu0ll, "BFu1ll_BFu17ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu17ll_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu17ll_BFu0s");
    static BFu1ll_BFu17ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu17ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu17ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "BFu1ll_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "BFu1ll_BFu17ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu17ll_BFu0s(Test_BFu1ll_BFu17ll_BFu0s, "BFu1ll_BFu17ll_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu1c_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu1c_BFu0c");
    static BFu1ll_BFu1c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu1ll_BFu1c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu1c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu1c_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1ll_BFu1c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu1c_BFu0c(Test_BFu1ll_BFu1c_BFu0c, "BFu1ll_BFu1c_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu1c_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu1c_BFu0i");
    static BFu1ll_BFu1c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu1c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu1c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu1c_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1ll_BFu1c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu1c_BFu0i(Test_BFu1ll_BFu1c_BFu0i, "BFu1ll_BFu1c_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu1c_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu1c_BFu0ll");
    static BFu1ll_BFu1c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu1c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu1c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu1c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1ll_BFu1c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu1c_BFu0ll(Test_BFu1ll_BFu1c_BFu0ll, "BFu1ll_BFu1c_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu1c_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu1c_BFu0s");
    static BFu1ll_BFu1c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu1ll_BFu1c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu1c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu1c_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1ll_BFu1c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu1c_BFu0s(Test_BFu1ll_BFu1c_BFu0s, "BFu1ll_BFu1c_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu1i_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu1i_BFu0c");
    static BFu1ll_BFu1i_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu1ll_BFu1i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu1i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu1i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1ll_BFu1i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu1i_BFu0c(Test_BFu1ll_BFu1i_BFu0c, "BFu1ll_BFu1i_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu1i_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu1i_BFu0i");
    static BFu1ll_BFu1i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu1i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu1i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu1i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1ll_BFu1i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu1i_BFu0i(Test_BFu1ll_BFu1i_BFu0i, "BFu1ll_BFu1i_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu1i_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu1i_BFu0ll");
    static BFu1ll_BFu1i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu1i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu1i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu1i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1ll_BFu1i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu1i_BFu0ll(Test_BFu1ll_BFu1i_BFu0ll, "BFu1ll_BFu1i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu1i_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu1i_BFu0s");
    static BFu1ll_BFu1i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu1ll_BFu1i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu1i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu1i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1ll_BFu1i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu1i_BFu0s(Test_BFu1ll_BFu1i_BFu0s, "BFu1ll_BFu1i_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu1ll_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu1ll_BFu0c");
    static BFu1ll_BFu1ll_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu1ll_BFu1ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu1ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu1ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1ll_BFu1ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu1ll_BFu0c(Test_BFu1ll_BFu1ll_BFu0c, "BFu1ll_BFu1ll_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu1ll_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu1ll_BFu0i");
    static BFu1ll_BFu1ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu1ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu1ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu1ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1ll_BFu1ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu1ll_BFu0i(Test_BFu1ll_BFu1ll_BFu0i, "BFu1ll_BFu1ll_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu1ll_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu1ll_BFu0ll");
    static BFu1ll_BFu1ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu1ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu1ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1ll_BFu1ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu1ll_BFu0ll(Test_BFu1ll_BFu1ll_BFu0ll, "BFu1ll_BFu1ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu1ll_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu1ll_BFu0s");
    static BFu1ll_BFu1ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu1ll_BFu1ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu1ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu1ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1ll_BFu1ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu1ll_BFu0s(Test_BFu1ll_BFu1ll_BFu0s, "BFu1ll_BFu1ll_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu1s_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu1s_BFu0c");
    static BFu1ll_BFu1s_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu1ll_BFu1s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu1s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu1s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1ll_BFu1s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu1s_BFu0c(Test_BFu1ll_BFu1s_BFu0c, "BFu1ll_BFu1s_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu1s_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu1s_BFu0i");
    static BFu1ll_BFu1s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu1s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu1s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu1s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1ll_BFu1s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu1s_BFu0i(Test_BFu1ll_BFu1s_BFu0i, "BFu1ll_BFu1s_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu1s_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu1s_BFu0ll");
    static BFu1ll_BFu1s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu1s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu1s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu1s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1ll_BFu1s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu1s_BFu0ll(Test_BFu1ll_BFu1s_BFu0ll, "BFu1ll_BFu1s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu1s_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu1s_BFu0s");
    static BFu1ll_BFu1s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu1ll_BFu1s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu1s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu1s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1ll_BFu1s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu1s_BFu0s(Test_BFu1ll_BFu1s_BFu0s, "BFu1ll_BFu1s_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu31i_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu31i_BFu0c");
    static BFu1ll_BFu31i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu1ll_BFu31i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu31i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "BFu1ll_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "BFu1ll_BFu31i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu31i_BFu0c(Test_BFu1ll_BFu31i_BFu0c, "BFu1ll_BFu31i_BFu0c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu31i_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu31i_BFu0i");
    static BFu1ll_BFu31i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu1ll_BFu31i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu31i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "BFu1ll_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "BFu1ll_BFu31i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu31i_BFu0i(Test_BFu1ll_BFu31i_BFu0i, "BFu1ll_BFu31i_BFu0i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu31i_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu31i_BFu0ll");
    static BFu1ll_BFu31i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu31i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu31i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "BFu1ll_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "BFu1ll_BFu31i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu31i_BFu0ll(Test_BFu1ll_BFu31i_BFu0ll, "BFu1ll_BFu31i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu31i_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu31i_BFu0s");
    static BFu1ll_BFu31i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu1ll_BFu31i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu31i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "BFu1ll_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "BFu1ll_BFu31i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu31i_BFu0s(Test_BFu1ll_BFu31i_BFu0s, "BFu1ll_BFu31i_BFu0s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu31ll_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu31ll_BFu0c");
    static BFu1ll_BFu31ll_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu1ll_BFu31ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu31ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "BFu1ll_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "BFu1ll_BFu31ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu31ll_BFu0c(Test_BFu1ll_BFu31ll_BFu0c, "BFu1ll_BFu31ll_BFu0c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu31ll_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu31ll_BFu0i");
    static BFu1ll_BFu31ll_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu1ll_BFu31ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu31ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "BFu1ll_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "BFu1ll_BFu31ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu31ll_BFu0i(Test_BFu1ll_BFu31ll_BFu0i, "BFu1ll_BFu31ll_BFu0i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu31ll_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu31ll_BFu0ll");
    static BFu1ll_BFu31ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu31ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu31ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "BFu1ll_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "BFu1ll_BFu31ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu31ll_BFu0ll(Test_BFu1ll_BFu31ll_BFu0ll, "BFu1ll_BFu31ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu31ll_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu31ll_BFu0s");
    static BFu1ll_BFu31ll_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu1ll_BFu31ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu31ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "BFu1ll_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "BFu1ll_BFu31ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu31ll_BFu0s(Test_BFu1ll_BFu31ll_BFu0s, "BFu1ll_BFu31ll_BFu0s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu32i_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu32i_BFu0c");
    static BFu1ll_BFu32i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu1ll_BFu32i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu32i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "BFu1ll_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "BFu1ll_BFu32i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu32i_BFu0c(Test_BFu1ll_BFu32i_BFu0c, "BFu1ll_BFu32i_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu32i_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu32i_BFu0i");
    static BFu1ll_BFu32i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1ll_BFu32i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu32i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "BFu1ll_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "BFu1ll_BFu32i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu32i_BFu0i(Test_BFu1ll_BFu32i_BFu0i, "BFu1ll_BFu32i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu32i_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu32i_BFu0ll");
    static BFu1ll_BFu32i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1ll_BFu32i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu32i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "BFu1ll_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "BFu1ll_BFu32i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu32i_BFu0ll(Test_BFu1ll_BFu32i_BFu0ll, "BFu1ll_BFu32i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu32i_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu32i_BFu0s");
    static BFu1ll_BFu32i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1ll_BFu32i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu32i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "BFu1ll_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "BFu1ll_BFu32i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu32i_BFu0s(Test_BFu1ll_BFu32i_BFu0s, "BFu1ll_BFu32i_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu32ll_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu32ll_BFu0c");
    static BFu1ll_BFu32ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu1ll_BFu32ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu32ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "BFu1ll_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "BFu1ll_BFu32ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu32ll_BFu0c(Test_BFu1ll_BFu32ll_BFu0c, "BFu1ll_BFu32ll_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu32ll_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu32ll_BFu0i");
    static BFu1ll_BFu32ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1ll_BFu32ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu32ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "BFu1ll_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "BFu1ll_BFu32ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu32ll_BFu0i(Test_BFu1ll_BFu32ll_BFu0i, "BFu1ll_BFu32ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu32ll_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu32ll_BFu0ll");
    static BFu1ll_BFu32ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1ll_BFu32ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu32ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "BFu1ll_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "BFu1ll_BFu32ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu32ll_BFu0ll(Test_BFu1ll_BFu32ll_BFu0ll, "BFu1ll_BFu32ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu32ll_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu32ll_BFu0s");
    static BFu1ll_BFu32ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1ll_BFu32ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu32ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "BFu1ll_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "BFu1ll_BFu32ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu32ll_BFu0s(Test_BFu1ll_BFu32ll_BFu0s, "BFu1ll_BFu32ll_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu33_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu33_BFu0c");
    static BFu1ll_BFu33_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu1ll_BFu33_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu33_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 33, 1, "BFu1ll_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 33, hide_ull(1LL<<32), "BFu1ll_BFu33_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu33_BFu0c(Test_BFu1ll_BFu33_BFu0c, "BFu1ll_BFu33_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu33_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu33_BFu0i");
    static BFu1ll_BFu33_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1ll_BFu33_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu33_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 33, 1, "BFu1ll_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 33, hide_ull(1LL<<32), "BFu1ll_BFu33_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu33_BFu0i(Test_BFu1ll_BFu33_BFu0i, "BFu1ll_BFu33_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu33_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu33_BFu0ll");
    static BFu1ll_BFu33_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1ll_BFu33_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu33_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 33, 1, "BFu1ll_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 33, hide_ull(1LL<<32), "BFu1ll_BFu33_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu33_BFu0ll(Test_BFu1ll_BFu33_BFu0ll, "BFu1ll_BFu33_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu33_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu33_BFu0s");
    static BFu1ll_BFu33_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1ll_BFu33_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu33_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 33, 1, "BFu1ll_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 33, hide_ull(1LL<<32), "BFu1ll_BFu33_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu33_BFu0s(Test_BFu1ll_BFu33_BFu0s, "BFu1ll_BFu33_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu7c_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu7c_BFu0c");
    static BFu1ll_BFu7c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu1ll_BFu7c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu7c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1ll_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1ll_BFu7c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu7c_BFu0c(Test_BFu1ll_BFu7c_BFu0c, "BFu1ll_BFu7c_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu7c_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu7c_BFu0i");
    static BFu1ll_BFu7c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu7c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu7c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1ll_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1ll_BFu7c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu7c_BFu0i(Test_BFu1ll_BFu7c_BFu0i, "BFu1ll_BFu7c_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu7c_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu7c_BFu0ll");
    static BFu1ll_BFu7c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu7c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu7c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1ll_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1ll_BFu7c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu7c_BFu0ll(Test_BFu1ll_BFu7c_BFu0ll, "BFu1ll_BFu7c_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu7c_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu7c_BFu0s");
    static BFu1ll_BFu7c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu1ll_BFu7c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu7c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1ll_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1ll_BFu7c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu7c_BFu0s(Test_BFu1ll_BFu7c_BFu0s, "BFu1ll_BFu7c_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu7i_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu7i_BFu0c");
    static BFu1ll_BFu7i_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu1ll_BFu7i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu7i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1ll_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1ll_BFu7i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu7i_BFu0c(Test_BFu1ll_BFu7i_BFu0c, "BFu1ll_BFu7i_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu7i_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu7i_BFu0i");
    static BFu1ll_BFu7i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu7i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu7i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1ll_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1ll_BFu7i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu7i_BFu0i(Test_BFu1ll_BFu7i_BFu0i, "BFu1ll_BFu7i_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu7i_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu7i_BFu0ll");
    static BFu1ll_BFu7i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu7i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu7i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1ll_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1ll_BFu7i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu7i_BFu0ll(Test_BFu1ll_BFu7i_BFu0ll, "BFu1ll_BFu7i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu7i_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu7i_BFu0s");
    static BFu1ll_BFu7i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu1ll_BFu7i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu7i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1ll_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1ll_BFu7i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu7i_BFu0s(Test_BFu1ll_BFu7i_BFu0s, "BFu1ll_BFu7i_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu7ll_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu7ll_BFu0c");
    static BFu1ll_BFu7ll_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu1ll_BFu7ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu7ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1ll_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1ll_BFu7ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu7ll_BFu0c(Test_BFu1ll_BFu7ll_BFu0c, "BFu1ll_BFu7ll_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu7ll_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu7ll_BFu0i");
    static BFu1ll_BFu7ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu7ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu7ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1ll_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1ll_BFu7ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu7ll_BFu0i(Test_BFu1ll_BFu7ll_BFu0i, "BFu1ll_BFu7ll_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu7ll_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu7ll_BFu0ll");
    static BFu1ll_BFu7ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu7ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu7ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1ll_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1ll_BFu7ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu7ll_BFu0ll(Test_BFu1ll_BFu7ll_BFu0ll, "BFu1ll_BFu7ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu7ll_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu7ll_BFu0s");
    static BFu1ll_BFu7ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu1ll_BFu7ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu7ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1ll_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1ll_BFu7ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu7ll_BFu0s(Test_BFu1ll_BFu7ll_BFu0s, "BFu1ll_BFu7ll_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu7s_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu7s_BFu0c");
    static BFu1ll_BFu7s_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu1ll_BFu7s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu7s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1ll_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1ll_BFu7s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu7s_BFu0c(Test_BFu1ll_BFu7s_BFu0c, "BFu1ll_BFu7s_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu7s_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu7s_BFu0i");
    static BFu1ll_BFu7s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu7s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu7s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1ll_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1ll_BFu7s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu7s_BFu0i(Test_BFu1ll_BFu7s_BFu0i, "BFu1ll_BFu7s_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu7s_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu7s_BFu0ll");
    static BFu1ll_BFu7s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu7s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu7s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1ll_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1ll_BFu7s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu7s_BFu0ll(Test_BFu1ll_BFu7s_BFu0ll, "BFu1ll_BFu7s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu7s_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu7s_BFu0s");
    static BFu1ll_BFu7s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu1ll_BFu7s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu7s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1ll_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1ll_BFu7s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu7s_BFu0s(Test_BFu1ll_BFu7s_BFu0s, "BFu1ll_BFu7s_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu8c_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu8c_BFu0c");
    static BFu1ll_BFu8c_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu8c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu8c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1ll_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1ll_BFu8c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu8c_BFu0c(Test_BFu1ll_BFu8c_BFu0c, "BFu1ll_BFu8c_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu8c_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu8c_BFu0i");
    static BFu1ll_BFu8c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu8c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu8c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1ll_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1ll_BFu8c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu8c_BFu0i(Test_BFu1ll_BFu8c_BFu0i, "BFu1ll_BFu8c_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu8c_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu8c_BFu0ll");
    static BFu1ll_BFu8c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu8c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu8c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1ll_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1ll_BFu8c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu8c_BFu0ll(Test_BFu1ll_BFu8c_BFu0ll, "BFu1ll_BFu8c_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu8c_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu8c_BFu0s");
    static BFu1ll_BFu8c_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu8c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu8c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1ll_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1ll_BFu8c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu8c_BFu0s(Test_BFu1ll_BFu8c_BFu0s, "BFu1ll_BFu8c_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu8i_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu8i_BFu0c");
    static BFu1ll_BFu8i_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu8i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu8i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1ll_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1ll_BFu8i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu8i_BFu0c(Test_BFu1ll_BFu8i_BFu0c, "BFu1ll_BFu8i_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu8i_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu8i_BFu0i");
    static BFu1ll_BFu8i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu8i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu8i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1ll_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1ll_BFu8i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu8i_BFu0i(Test_BFu1ll_BFu8i_BFu0i, "BFu1ll_BFu8i_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu8i_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu8i_BFu0ll");
    static BFu1ll_BFu8i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu8i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu8i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1ll_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1ll_BFu8i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu8i_BFu0ll(Test_BFu1ll_BFu8i_BFu0ll, "BFu1ll_BFu8i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu8i_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu8i_BFu0s");
    static BFu1ll_BFu8i_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu8i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu8i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1ll_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1ll_BFu8i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu8i_BFu0s(Test_BFu1ll_BFu8i_BFu0s, "BFu1ll_BFu8i_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu8ll_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu8ll_BFu0c");
    static BFu1ll_BFu8ll_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu8ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu8ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1ll_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1ll_BFu8ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu8ll_BFu0c(Test_BFu1ll_BFu8ll_BFu0c, "BFu1ll_BFu8ll_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu8ll_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu8ll_BFu0i");
    static BFu1ll_BFu8ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu8ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu8ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1ll_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1ll_BFu8ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu8ll_BFu0i(Test_BFu1ll_BFu8ll_BFu0i, "BFu1ll_BFu8ll_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu8ll_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu8ll_BFu0ll");
    static BFu1ll_BFu8ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu8ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu8ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1ll_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1ll_BFu8ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu8ll_BFu0ll(Test_BFu1ll_BFu8ll_BFu0ll, "BFu1ll_BFu8ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu8ll_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu8ll_BFu0s");
    static BFu1ll_BFu8ll_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu8ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu8ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1ll_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1ll_BFu8ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu8ll_BFu0s(Test_BFu1ll_BFu8ll_BFu0s, "BFu1ll_BFu8ll_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu8s_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu8s_BFu0c");
    static BFu1ll_BFu8s_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu8s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu8s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1ll_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1ll_BFu8s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu8s_BFu0c(Test_BFu1ll_BFu8s_BFu0c, "BFu1ll_BFu8s_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu8s_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu8s_BFu0i");
    static BFu1ll_BFu8s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu8s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu8s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1ll_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1ll_BFu8s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu8s_BFu0i(Test_BFu1ll_BFu8s_BFu0i, "BFu1ll_BFu8s_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu8s_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu8s_BFu0ll");
    static BFu1ll_BFu8s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu8s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu8s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1ll_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1ll_BFu8s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu8s_BFu0ll(Test_BFu1ll_BFu8s_BFu0ll, "BFu1ll_BFu8s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu8s_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu8s_BFu0s");
    static BFu1ll_BFu8s_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu8s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu8s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1ll_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1ll_BFu8s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu8s_BFu0s(Test_BFu1ll_BFu8s_BFu0s, "BFu1ll_BFu8s_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu9i_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu9i_BFu0c");
    static BFu1ll_BFu9i_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu9i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu9i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1ll_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1ll_BFu9i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu9i_BFu0c(Test_BFu1ll_BFu9i_BFu0c, "BFu1ll_BFu9i_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu9i_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu9i_BFu0i");
    static BFu1ll_BFu9i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu9i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu9i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1ll_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1ll_BFu9i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu9i_BFu0i(Test_BFu1ll_BFu9i_BFu0i, "BFu1ll_BFu9i_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu9i_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu9i_BFu0ll");
    static BFu1ll_BFu9i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu9i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu9i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1ll_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1ll_BFu9i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu9i_BFu0ll(Test_BFu1ll_BFu9i_BFu0ll, "BFu1ll_BFu9i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu9i_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu9i_BFu0s");
    static BFu1ll_BFu9i_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu9i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu9i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1ll_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1ll_BFu9i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu9i_BFu0s(Test_BFu1ll_BFu9i_BFu0s, "BFu1ll_BFu9i_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu9ll_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu9ll_BFu0c");
    static BFu1ll_BFu9ll_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu9ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu9ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1ll_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1ll_BFu9ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu9ll_BFu0c(Test_BFu1ll_BFu9ll_BFu0c, "BFu1ll_BFu9ll_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu9ll_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu9ll_BFu0i");
    static BFu1ll_BFu9ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu9ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu9ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1ll_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1ll_BFu9ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu9ll_BFu0i(Test_BFu1ll_BFu9ll_BFu0i, "BFu1ll_BFu9ll_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu9ll_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu9ll_BFu0ll");
    static BFu1ll_BFu9ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu9ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu9ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1ll_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1ll_BFu9ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu9ll_BFu0ll(Test_BFu1ll_BFu9ll_BFu0ll, "BFu1ll_BFu9ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu9ll_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu9ll_BFu0s");
    static BFu1ll_BFu9ll_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu9ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu9ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1ll_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1ll_BFu9ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu9ll_BFu0s(Test_BFu1ll_BFu9ll_BFu0s, "BFu1ll_BFu9ll_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu9s_BFu0c()
{
  {
    init_simple_test("BFu1ll_BFu9s_BFu0c");
    static BFu1ll_BFu9s_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu9s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_BFu9s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1ll_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1ll_BFu9s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu9s_BFu0c(Test_BFu1ll_BFu9s_BFu0c, "BFu1ll_BFu9s_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu9s_BFu0i()
{
  {
    init_simple_test("BFu1ll_BFu9s_BFu0i");
    static BFu1ll_BFu9s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_BFu9s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu9s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1ll_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1ll_BFu9s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu9s_BFu0i(Test_BFu1ll_BFu9s_BFu0i, "BFu1ll_BFu9s_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu9s_BFu0ll()
{
  {
    init_simple_test("BFu1ll_BFu9s_BFu0ll");
    static BFu1ll_BFu9s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_BFu9s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu9s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1ll_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1ll_BFu9s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu9s_BFu0ll(Test_BFu1ll_BFu9s_BFu0ll, "BFu1ll_BFu9s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_BFu9s_BFu0s()
{
  {
    init_simple_test("BFu1ll_BFu9s_BFu0s");
    static BFu1ll_BFu9s_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_BFu9s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_BFu9s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1ll_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1ll_BFu9s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1ll_BFu9s_BFu0s(Test_BFu1ll_BFu9s_BFu0s, "BFu1ll_BFu9s_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_C_BFu0c()
{
  {
    init_simple_test("BFu1ll_C_BFu0c");
    static BFu1ll_C_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_C_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_C_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_C_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1ll_C_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_C_BFu0c(Test_BFu1ll_C_BFu0c, "BFu1ll_C_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_C_BFu0i()
{
  {
    init_simple_test("BFu1ll_C_BFu0i");
    static BFu1ll_C_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_C_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_C_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_C_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1ll_C_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_C_BFu0i(Test_BFu1ll_C_BFu0i, "BFu1ll_C_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_C_BFu0ll()
{
  {
    init_simple_test("BFu1ll_C_BFu0ll");
    static BFu1ll_C_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_C_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_C_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_C_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1ll_C_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_C_BFu0ll(Test_BFu1ll_C_BFu0ll, "BFu1ll_C_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_C_BFu0s()
{
  {
    init_simple_test("BFu1ll_C_BFu0s");
    static BFu1ll_C_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_C_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_C_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_C_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1ll_C_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_C_BFu0s(Test_BFu1ll_C_BFu0s, "BFu1ll_C_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_D_BFu0c()
{
  {
    init_simple_test("BFu1ll_D_BFu0c");
    static BFu1ll_D_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(BFu1ll_D_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_D_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_D_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1ll_D_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_D_BFu0c(Test_BFu1ll_D_BFu0c, "BFu1ll_D_BFu0c", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_D_BFu0i()
{
  {
    init_simple_test("BFu1ll_D_BFu0i");
    static BFu1ll_D_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu1ll_D_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_D_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_D_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1ll_D_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_D_BFu0i(Test_BFu1ll_D_BFu0i, "BFu1ll_D_BFu0i", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_D_BFu0ll()
{
  {
    init_simple_test("BFu1ll_D_BFu0ll");
    static BFu1ll_D_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu1ll_D_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_D_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_D_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1ll_D_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_D_BFu0ll(Test_BFu1ll_D_BFu0ll, "BFu1ll_D_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_D_BFu0s()
{
  {
    init_simple_test("BFu1ll_D_BFu0s");
    static BFu1ll_D_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu1ll_D_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_D_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_D_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1ll_D_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_D_BFu0s(Test_BFu1ll_D_BFu0s, "BFu1ll_D_BFu0s", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_F_BFu0c()
{
  {
    init_simple_test("BFu1ll_F_BFu0c");
    static BFu1ll_F_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu1ll_F_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_F_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_F_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1ll_F_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_F_BFu0c(Test_BFu1ll_F_BFu0c, "BFu1ll_F_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_F_BFu0i()
{
  {
    init_simple_test("BFu1ll_F_BFu0i");
    static BFu1ll_F_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1ll_F_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_F_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_F_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1ll_F_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_F_BFu0i(Test_BFu1ll_F_BFu0i, "BFu1ll_F_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_F_BFu0ll()
{
  {
    init_simple_test("BFu1ll_F_BFu0ll");
    static BFu1ll_F_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1ll_F_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_F_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_F_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1ll_F_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_F_BFu0ll(Test_BFu1ll_F_BFu0ll, "BFu1ll_F_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_F_BFu0s()
{
  {
    init_simple_test("BFu1ll_F_BFu0s");
    static BFu1ll_F_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1ll_F_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_F_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_F_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1ll_F_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_F_BFu0s(Test_BFu1ll_F_BFu0s, "BFu1ll_F_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_I_BFu0c()
{
  {
    init_simple_test("BFu1ll_I_BFu0c");
    static BFu1ll_I_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu1ll_I_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_I_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_I_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1ll_I_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_I_BFu0c(Test_BFu1ll_I_BFu0c, "BFu1ll_I_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_I_BFu0i()
{
  {
    init_simple_test("BFu1ll_I_BFu0i");
    static BFu1ll_I_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1ll_I_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_I_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_I_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1ll_I_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_I_BFu0i(Test_BFu1ll_I_BFu0i, "BFu1ll_I_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_I_BFu0ll()
{
  {
    init_simple_test("BFu1ll_I_BFu0ll");
    static BFu1ll_I_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1ll_I_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_I_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_I_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1ll_I_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_I_BFu0ll(Test_BFu1ll_I_BFu0ll, "BFu1ll_I_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_I_BFu0s()
{
  {
    init_simple_test("BFu1ll_I_BFu0s");
    static BFu1ll_I_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1ll_I_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_I_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_I_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1ll_I_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_I_BFu0s(Test_BFu1ll_I_BFu0s, "BFu1ll_I_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Ip_BFu0c()
{
  {
    init_simple_test("BFu1ll_Ip_BFu0c");
    static BFu1ll_Ip_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1ll_Ip_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Ip_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Ip_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1ll_Ip_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_Ip_BFu0c(Test_BFu1ll_Ip_BFu0c, "BFu1ll_Ip_BFu0c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Ip_BFu0i()
{
  {
    init_simple_test("BFu1ll_Ip_BFu0i");
    static BFu1ll_Ip_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu1ll_Ip_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_Ip_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Ip_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1ll_Ip_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_Ip_BFu0i(Test_BFu1ll_Ip_BFu0i, "BFu1ll_Ip_BFu0i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Ip_BFu0ll()
{
  {
    init_simple_test("BFu1ll_Ip_BFu0ll");
    static BFu1ll_Ip_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu1ll_Ip_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_Ip_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Ip_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1ll_Ip_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_Ip_BFu0ll(Test_BFu1ll_Ip_BFu0ll, "BFu1ll_Ip_BFu0ll", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Ip_BFu0s()
{
  {
    init_simple_test("BFu1ll_Ip_BFu0s");
    static BFu1ll_Ip_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1ll_Ip_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_Ip_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Ip_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1ll_Ip_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_Ip_BFu0s(Test_BFu1ll_Ip_BFu0s, "BFu1ll_Ip_BFu0s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_L_BFu0c()
{
  {
    init_simple_test("BFu1ll_L_BFu0c");
    static BFu1ll_L_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(BFu1ll_L_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_L_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_L_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1ll_L_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_L_BFu0c(Test_BFu1ll_L_BFu0c, "BFu1ll_L_BFu0c", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_L_BFu0i()
{
  {
    init_simple_test("BFu1ll_L_BFu0i");
    static BFu1ll_L_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu1ll_L_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_L_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_L_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1ll_L_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_L_BFu0i(Test_BFu1ll_L_BFu0i, "BFu1ll_L_BFu0i", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_L_BFu0ll()
{
  {
    init_simple_test("BFu1ll_L_BFu0ll");
    static BFu1ll_L_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu1ll_L_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_L_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_L_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1ll_L_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_L_BFu0ll(Test_BFu1ll_L_BFu0ll, "BFu1ll_L_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_L_BFu0s()
{
  {
    init_simple_test("BFu1ll_L_BFu0s");
    static BFu1ll_L_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu1ll_L_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_L_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_L_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1ll_L_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_L_BFu0s(Test_BFu1ll_L_BFu0s, "BFu1ll_L_BFu0s", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_S_BFu0c()
{
  {
    init_simple_test("BFu1ll_S_BFu0c");
    static BFu1ll_S_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_S_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_S_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_S_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1ll_S_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_S_BFu0c(Test_BFu1ll_S_BFu0c, "BFu1ll_S_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_S_BFu0i()
{
  {
    init_simple_test("BFu1ll_S_BFu0i");
    static BFu1ll_S_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_S_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_S_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_S_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1ll_S_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_S_BFu0i(Test_BFu1ll_S_BFu0i, "BFu1ll_S_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_S_BFu0ll()
{
  {
    init_simple_test("BFu1ll_S_BFu0ll");
    static BFu1ll_S_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_S_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_S_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_S_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1ll_S_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_S_BFu0ll(Test_BFu1ll_S_BFu0ll, "BFu1ll_S_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_S_BFu0s()
{
  {
    init_simple_test("BFu1ll_S_BFu0s");
    static BFu1ll_S_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_S_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_S_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_S_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1ll_S_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_S_BFu0s(Test_BFu1ll_S_BFu0s, "BFu1ll_S_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Uc_BFu0c()
{
  {
    init_simple_test("BFu1ll_Uc_BFu0c");
    static BFu1ll_Uc_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_Uc_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Uc_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Uc_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1ll_Uc_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_Uc_BFu0c(Test_BFu1ll_Uc_BFu0c, "BFu1ll_Uc_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Uc_BFu0i()
{
  {
    init_simple_test("BFu1ll_Uc_BFu0i");
    static BFu1ll_Uc_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_Uc_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_Uc_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Uc_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1ll_Uc_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_Uc_BFu0i(Test_BFu1ll_Uc_BFu0i, "BFu1ll_Uc_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Uc_BFu0ll()
{
  {
    init_simple_test("BFu1ll_Uc_BFu0ll");
    static BFu1ll_Uc_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_Uc_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_Uc_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Uc_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1ll_Uc_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_Uc_BFu0ll(Test_BFu1ll_Uc_BFu0ll, "BFu1ll_Uc_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Uc_BFu0s()
{
  {
    init_simple_test("BFu1ll_Uc_BFu0s");
    static BFu1ll_Uc_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu1ll_Uc_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_Uc_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Uc_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1ll_Uc_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_Uc_BFu0s(Test_BFu1ll_Uc_BFu0s, "BFu1ll_Uc_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Ui_BFu0c()
{
  {
    init_simple_test("BFu1ll_Ui_BFu0c");
    static BFu1ll_Ui_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu1ll_Ui_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Ui_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Ui_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1ll_Ui_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_Ui_BFu0c(Test_BFu1ll_Ui_BFu0c, "BFu1ll_Ui_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Ui_BFu0i()
{
  {
    init_simple_test("BFu1ll_Ui_BFu0i");
    static BFu1ll_Ui_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1ll_Ui_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_Ui_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Ui_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1ll_Ui_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_Ui_BFu0i(Test_BFu1ll_Ui_BFu0i, "BFu1ll_Ui_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Ui_BFu0ll()
{
  {
    init_simple_test("BFu1ll_Ui_BFu0ll");
    static BFu1ll_Ui_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1ll_Ui_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_Ui_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Ui_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1ll_Ui_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_Ui_BFu0ll(Test_BFu1ll_Ui_BFu0ll, "BFu1ll_Ui_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Ui_BFu0s()
{
  {
    init_simple_test("BFu1ll_Ui_BFu0s");
    static BFu1ll_Ui_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1ll_Ui_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_Ui_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Ui_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1ll_Ui_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_Ui_BFu0s(Test_BFu1ll_Ui_BFu0s, "BFu1ll_Ui_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Ul_BFu0c()
{
  {
    init_simple_test("BFu1ll_Ul_BFu0c");
    static BFu1ll_Ul_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(BFu1ll_Ul_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Ul_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Ul_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1ll_Ul_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_Ul_BFu0c(Test_BFu1ll_Ul_BFu0c, "BFu1ll_Ul_BFu0c", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Ul_BFu0i()
{
  {
    init_simple_test("BFu1ll_Ul_BFu0i");
    static BFu1ll_Ul_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu1ll_Ul_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_Ul_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Ul_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1ll_Ul_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_Ul_BFu0i(Test_BFu1ll_Ul_BFu0i, "BFu1ll_Ul_BFu0i", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Ul_BFu0ll()
{
  {
    init_simple_test("BFu1ll_Ul_BFu0ll");
    static BFu1ll_Ul_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu1ll_Ul_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_Ul_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Ul_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1ll_Ul_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_Ul_BFu0ll(Test_BFu1ll_Ul_BFu0ll, "BFu1ll_Ul_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Ul_BFu0s()
{
  {
    init_simple_test("BFu1ll_Ul_BFu0s");
    static BFu1ll_Ul_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu1ll_Ul_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_Ul_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Ul_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1ll_Ul_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_Ul_BFu0s(Test_BFu1ll_Ul_BFu0s, "BFu1ll_Ul_BFu0s", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Us_BFu0c()
{
  {
    init_simple_test("BFu1ll_Us_BFu0c");
    static BFu1ll_Us_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu1ll_Us_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Us_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Us_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1ll_Us_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_Us_BFu0c(Test_BFu1ll_Us_BFu0c, "BFu1ll_Us_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Us_BFu0i()
{
  {
    init_simple_test("BFu1ll_Us_BFu0i");
    static BFu1ll_Us_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_Us_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_Us_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Us_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1ll_Us_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_Us_BFu0i(Test_BFu1ll_Us_BFu0i, "BFu1ll_Us_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Us_BFu0ll()
{
  {
    init_simple_test("BFu1ll_Us_BFu0ll");
    static BFu1ll_Us_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1ll_Us_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_Us_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Us_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1ll_Us_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_Us_BFu0ll(Test_BFu1ll_Us_BFu0ll, "BFu1ll_Us_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Us_BFu0s()
{
  {
    init_simple_test("BFu1ll_Us_BFu0s");
    static BFu1ll_Us_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1ll_Us_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_Us_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Us_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1ll_Us_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_Us_BFu0s(Test_BFu1ll_Us_BFu0s, "BFu1ll_Us_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Vp_BFu0c()
{
  {
    init_simple_test("BFu1ll_Vp_BFu0c");
    static BFu1ll_Vp_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1ll_Vp_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1ll_Vp_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Vp_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1ll_Vp_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_Vp_BFu0c(Test_BFu1ll_Vp_BFu0c, "BFu1ll_Vp_BFu0c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Vp_BFu0i()
{
  {
    init_simple_test("BFu1ll_Vp_BFu0i");
    static BFu1ll_Vp_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu1ll_Vp_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_Vp_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Vp_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1ll_Vp_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_Vp_BFu0i(Test_BFu1ll_Vp_BFu0i, "BFu1ll_Vp_BFu0i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Vp_BFu0ll()
{
  {
    init_simple_test("BFu1ll_Vp_BFu0ll");
    static BFu1ll_Vp_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu1ll_Vp_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_Vp_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Vp_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1ll_Vp_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_Vp_BFu0ll(Test_BFu1ll_Vp_BFu0ll, "BFu1ll_Vp_BFu0ll", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1ll_Vp_BFu0s()
{
  {
    init_simple_test("BFu1ll_Vp_BFu0s");
    static BFu1ll_Vp_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1ll_Vp_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1ll_Vp_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1ll_Vp_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1ll_Vp_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1ll_Vp_BFu0s(Test_BFu1ll_Vp_BFu0s, "BFu1ll_Vp_BFu0s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu0c");
    static BFu1s_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu1s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c(Test_BFu1s_BFu0c, "BFu1s_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu0c");
    static BFu1s_BFu0c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu1s_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu0c(Test_BFu1s_BFu0c_BFu0c, "BFu1s_BFu0c_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu0i");
    static BFu1s_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu0i(Test_BFu1s_BFu0c_BFu0i, "BFu1s_BFu0c_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu0ll");
    static BFu1s_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu0ll(Test_BFu1s_BFu0c_BFu0ll, "BFu1s_BFu0c_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu0s");
    static BFu1s_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu1s_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu0s(Test_BFu1s_BFu0c_BFu0s, "BFu1s_BFu0c_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu15i()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu15i");
    static BFu1s_BFu0c_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_BFu0c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "BFu1s_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "BFu1s_BFu0c_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu15i(Test_BFu1s_BFu0c_BFu15i, "BFu1s_BFu0c_BFu15i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu15ll()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu15ll");
    static BFu1s_BFu0c_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_BFu0c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "BFu1s_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "BFu1s_BFu0c_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu15ll(Test_BFu1s_BFu0c_BFu15ll, "BFu1s_BFu0c_BFu15ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu15s()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu15s");
    static BFu1s_BFu0c_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_BFu0c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "BFu1s_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "BFu1s_BFu0c_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu15s(Test_BFu1s_BFu0c_BFu15s, "BFu1s_BFu0c_BFu15s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu16i()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu16i");
    static BFu1s_BFu0c_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_BFu0c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "BFu1s_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "BFu1s_BFu0c_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu16i(Test_BFu1s_BFu0c_BFu16i, "BFu1s_BFu0c_BFu16i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu16ll()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu16ll");
    static BFu1s_BFu0c_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_BFu0c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "BFu1s_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "BFu1s_BFu0c_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu16ll(Test_BFu1s_BFu0c_BFu16ll, "BFu1s_BFu0c_BFu16ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu16s()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu16s");
    static BFu1s_BFu0c_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_BFu0c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "BFu1s_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "BFu1s_BFu0c_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu16s(Test_BFu1s_BFu0c_BFu16s, "BFu1s_BFu0c_BFu16s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu17i()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu17i");
    static BFu1s_BFu0c_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(BFu1s_BFu0c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "BFu1s_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "BFu1s_BFu0c_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu17i(Test_BFu1s_BFu0c_BFu17i, "BFu1s_BFu0c_BFu17i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu17ll()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu17ll");
    static BFu1s_BFu0c_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu1s_BFu0c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "BFu1s_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "BFu1s_BFu0c_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu17ll(Test_BFu1s_BFu0c_BFu17ll, "BFu1s_BFu0c_BFu17ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu1c()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu1c");
    static BFu1s_BFu0c_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu0c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu1s_BFu0c_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu1c(Test_BFu1s_BFu0c_BFu1c, "BFu1s_BFu0c_BFu1c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu1i()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu1i");
    static BFu1s_BFu0c_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu0c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu1s_BFu0c_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu1i(Test_BFu1s_BFu0c_BFu1i, "BFu1s_BFu0c_BFu1i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu1ll()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu1ll");
    static BFu1s_BFu0c_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu0c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu1s_BFu0c_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu1ll(Test_BFu1s_BFu0c_BFu1ll, "BFu1s_BFu0c_BFu1ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu1s()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu1s");
    static BFu1s_BFu0c_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu0c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu1s_BFu0c_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu1s(Test_BFu1s_BFu0c_BFu1s, "BFu1s_BFu0c_BFu1s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu31i()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu31i");
    static BFu1s_BFu0c_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(BFu1s_BFu0c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "BFu1s_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "BFu1s_BFu0c_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu31i(Test_BFu1s_BFu0c_BFu31i, "BFu1s_BFu0c_BFu31i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu31ll()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu31ll");
    static BFu1s_BFu0c_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu1s_BFu0c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "BFu1s_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "BFu1s_BFu0c_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu31ll(Test_BFu1s_BFu0c_BFu31ll, "BFu1s_BFu0c_BFu31ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu32i()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu32i");
    static BFu1s_BFu0c_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(BFu1s_BFu0c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "BFu1s_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "BFu1s_BFu0c_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu32i(Test_BFu1s_BFu0c_BFu32i, "BFu1s_BFu0c_BFu32i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu32ll()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu32ll");
    static BFu1s_BFu0c_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu1s_BFu0c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "BFu1s_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "BFu1s_BFu0c_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu32ll(Test_BFu1s_BFu0c_BFu32ll, "BFu1s_BFu0c_BFu32ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu33()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu33");
    static BFu1s_BFu0c_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(BFu1s_BFu0c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "BFu1s_BFu0c_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "BFu1s_BFu0c_BFu33");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu33(Test_BFu1s_BFu0c_BFu33, "BFu1s_BFu0c_BFu33", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu7c()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu7c");
    static BFu1s_BFu0c_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu0c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu1s_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu1s_BFu0c_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu7c(Test_BFu1s_BFu0c_BFu7c, "BFu1s_BFu0c_BFu7c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu7i()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu7i");
    static BFu1s_BFu0c_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu0c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu1s_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu1s_BFu0c_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu7i(Test_BFu1s_BFu0c_BFu7i, "BFu1s_BFu0c_BFu7i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu7ll()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu7ll");
    static BFu1s_BFu0c_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu0c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu1s_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu1s_BFu0c_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu7ll(Test_BFu1s_BFu0c_BFu7ll, "BFu1s_BFu0c_BFu7ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu7s()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu7s");
    static BFu1s_BFu0c_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu0c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu1s_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu1s_BFu0c_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu7s(Test_BFu1s_BFu0c_BFu7s, "BFu1s_BFu0c_BFu7s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu8c()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu8c");
    static BFu1s_BFu0c_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu0c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu1s_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu1s_BFu0c_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu8c(Test_BFu1s_BFu0c_BFu8c, "BFu1s_BFu0c_BFu8c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu8i()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu8i");
    static BFu1s_BFu0c_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu0c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu1s_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu1s_BFu0c_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu8i(Test_BFu1s_BFu0c_BFu8i, "BFu1s_BFu0c_BFu8i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu8ll()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu8ll");
    static BFu1s_BFu0c_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu0c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu1s_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu1s_BFu0c_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu8ll(Test_BFu1s_BFu0c_BFu8ll, "BFu1s_BFu0c_BFu8ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu8s()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu8s");
    static BFu1s_BFu0c_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu0c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu1s_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu1s_BFu0c_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu8s(Test_BFu1s_BFu0c_BFu8s, "BFu1s_BFu0c_BFu8s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu9i()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu9i");
    static BFu1s_BFu0c_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_BFu0c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "BFu1s_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "BFu1s_BFu0c_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu9i(Test_BFu1s_BFu0c_BFu9i, "BFu1s_BFu0c_BFu9i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu9ll()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu9ll");
    static BFu1s_BFu0c_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_BFu0c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "BFu1s_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "BFu1s_BFu0c_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu9ll(Test_BFu1s_BFu0c_BFu9ll, "BFu1s_BFu0c_BFu9ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_BFu9s()
{
  {
    init_simple_test("BFu1s_BFu0c_BFu9s");
    static BFu1s_BFu0c_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_BFu0c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "BFu1s_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "BFu1s_BFu0c_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_BFu9s(Test_BFu1s_BFu0c_BFu9s, "BFu1s_BFu0c_BFu9s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_C()
{
  {
    init_simple_test("BFu1s_BFu0c_C");
    static BFu1s_BFu0c_C lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu0c_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_C)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_C");
    check_field_offset(lv, v2, 1, "BFu1s_BFu0c_C.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_C(Test_BFu1s_BFu0c_C, "BFu1s_BFu0c_C", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_D()
{
  {
    init_simple_test("BFu1s_BFu0c_D");
    static BFu1s_BFu0c_D lv;
    check2(sizeof(lv), 9, "sizeof(BFu1s_BFu0c_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_D)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_D");
    check_field_offset(lv, v2, 1, "BFu1s_BFu0c_D.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_D(Test_BFu1s_BFu0c_D, "BFu1s_BFu0c_D", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_F()
{
  {
    init_simple_test("BFu1s_BFu0c_F");
    static BFu1s_BFu0c_F lv;
    check2(sizeof(lv), 5, "sizeof(BFu1s_BFu0c_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_F)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_F");
    check_field_offset(lv, v2, 1, "BFu1s_BFu0c_F.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_F(Test_BFu1s_BFu0c_F, "BFu1s_BFu0c_F", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_I()
{
  {
    init_simple_test("BFu1s_BFu0c_I");
    static BFu1s_BFu0c_I lv;
    check2(sizeof(lv), 5, "sizeof(BFu1s_BFu0c_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_I)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_I");
    check_field_offset(lv, v2, 1, "BFu1s_BFu0c_I.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_I(Test_BFu1s_BFu0c_I, "BFu1s_BFu0c_I", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_Ip()
{
  {
    init_simple_test("BFu1s_BFu0c_Ip");
    static BFu1s_BFu0c_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1s_BFu0c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_Ip");
    check_field_offset(lv, v2, 1, "BFu1s_BFu0c_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_Ip(Test_BFu1s_BFu0c_Ip, "BFu1s_BFu0c_Ip", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_L()
{
  {
    init_simple_test("BFu1s_BFu0c_L");
    static BFu1s_BFu0c_L lv;
    check2(sizeof(lv), 9, "sizeof(BFu1s_BFu0c_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_L)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_L");
    check_field_offset(lv, v2, 1, "BFu1s_BFu0c_L.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_L(Test_BFu1s_BFu0c_L, "BFu1s_BFu0c_L", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_S()
{
  {
    init_simple_test("BFu1s_BFu0c_S");
    static BFu1s_BFu0c_S lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_BFu0c_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_S)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_S");
    check_field_offset(lv, v2, 1, "BFu1s_BFu0c_S.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_S(Test_BFu1s_BFu0c_S, "BFu1s_BFu0c_S", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_Uc()
{
  {
    init_simple_test("BFu1s_BFu0c_Uc");
    static BFu1s_BFu0c_Uc lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu0c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_Uc");
    check_field_offset(lv, v2, 1, "BFu1s_BFu0c_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_Uc(Test_BFu1s_BFu0c_Uc, "BFu1s_BFu0c_Uc", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_Ui()
{
  {
    init_simple_test("BFu1s_BFu0c_Ui");
    static BFu1s_BFu0c_Ui lv;
    check2(sizeof(lv), 5, "sizeof(BFu1s_BFu0c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_Ui");
    check_field_offset(lv, v2, 1, "BFu1s_BFu0c_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_Ui(Test_BFu1s_BFu0c_Ui, "BFu1s_BFu0c_Ui", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_Ul()
{
  {
    init_simple_test("BFu1s_BFu0c_Ul");
    static BFu1s_BFu0c_Ul lv;
    check2(sizeof(lv), 9, "sizeof(BFu1s_BFu0c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_Ul");
    check_field_offset(lv, v2, 1, "BFu1s_BFu0c_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_Ul(Test_BFu1s_BFu0c_Ul, "BFu1s_BFu0c_Ul", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_Us()
{
  {
    init_simple_test("BFu1s_BFu0c_Us");
    static BFu1s_BFu0c_Us lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_BFu0c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_Us)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_Us");
    check_field_offset(lv, v2, 1, "BFu1s_BFu0c_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_Us(Test_BFu1s_BFu0c_Us, "BFu1s_BFu0c_Us", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0c_Vp()
{
  {
    init_simple_test("BFu1s_BFu0c_Vp");
    static BFu1s_BFu0c_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1s_BFu0c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu0c_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0c_Vp");
    check_field_offset(lv, v2, 1, "BFu1s_BFu0c_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0c_Vp(Test_BFu1s_BFu0c_Vp, "BFu1s_BFu0c_Vp", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu0i");
    static BFu1s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i(Test_BFu1s_BFu0i, "BFu1s_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu0c");
    static BFu1s_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu0c(Test_BFu1s_BFu0i_BFu0c, "BFu1s_BFu0i_BFu0c", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu0i");
    static BFu1s_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu0i(Test_BFu1s_BFu0i_BFu0i, "BFu1s_BFu0i_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu0ll");
    static BFu1s_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu0ll(Test_BFu1s_BFu0i_BFu0ll, "BFu1s_BFu0i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu0s");
    static BFu1s_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu0s(Test_BFu1s_BFu0i_BFu0s, "BFu1s_BFu0i_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu15i()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu15i");
    static BFu1s_BFu0i_BFu15i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1s_BFu0i_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, 1, "BFu1s_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, hide_ull(1LL<<14), "BFu1s_BFu0i_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu15i(Test_BFu1s_BFu0i_BFu15i, "BFu1s_BFu0i_BFu15i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu15ll()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu15ll");
    static BFu1s_BFu0i_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1s_BFu0i_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, 1, "BFu1s_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, hide_ull(1LL<<14), "BFu1s_BFu0i_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu15ll(Test_BFu1s_BFu0i_BFu15ll, "BFu1s_BFu0i_BFu15ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu15s()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu15s");
    static BFu1s_BFu0i_BFu15s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1s_BFu0i_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, 1, "BFu1s_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, hide_ull(1LL<<14), "BFu1s_BFu0i_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu15s(Test_BFu1s_BFu0i_BFu15s, "BFu1s_BFu0i_BFu15s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu16i()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu16i");
    static BFu1s_BFu0i_BFu16i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1s_BFu0i_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, 1, "BFu1s_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, hide_ull(1LL<<15), "BFu1s_BFu0i_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu16i(Test_BFu1s_BFu0i_BFu16i, "BFu1s_BFu0i_BFu16i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu16ll()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu16ll");
    static BFu1s_BFu0i_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1s_BFu0i_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, 1, "BFu1s_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, hide_ull(1LL<<15), "BFu1s_BFu0i_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu16ll(Test_BFu1s_BFu0i_BFu16ll, "BFu1s_BFu0i_BFu16ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu16s()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu16s");
    static BFu1s_BFu0i_BFu16s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1s_BFu0i_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, 1, "BFu1s_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, hide_ull(1LL<<15), "BFu1s_BFu0i_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu16s(Test_BFu1s_BFu0i_BFu16s, "BFu1s_BFu0i_BFu16s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu17i()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu17i");
    static BFu1s_BFu0i_BFu17i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu1s_BFu0i_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 17, 1, "BFu1s_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 17, hide_ull(1LL<<16), "BFu1s_BFu0i_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu17i(Test_BFu1s_BFu0i_BFu17i, "BFu1s_BFu0i_BFu17i", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu17ll()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu17ll");
    static BFu1s_BFu0i_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu1s_BFu0i_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 17, 1, "BFu1s_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 17, hide_ull(1LL<<16), "BFu1s_BFu0i_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu17ll(Test_BFu1s_BFu0i_BFu17ll, "BFu1s_BFu0i_BFu17ll", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu1c()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu1c");
    static BFu1s_BFu0i_BFu1c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1s_BFu0i_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 1, 1, "BFu1s_BFu0i_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu1c(Test_BFu1s_BFu0i_BFu1c, "BFu1s_BFu0i_BFu1c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu1i()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu1i");
    static BFu1s_BFu0i_BFu1i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1s_BFu0i_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 1, 1, "BFu1s_BFu0i_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu1i(Test_BFu1s_BFu0i_BFu1i, "BFu1s_BFu0i_BFu1i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu1ll()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu1ll");
    static BFu1s_BFu0i_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1s_BFu0i_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 1, 1, "BFu1s_BFu0i_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu1ll(Test_BFu1s_BFu0i_BFu1ll, "BFu1s_BFu0i_BFu1ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu1s()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu1s");
    static BFu1s_BFu0i_BFu1s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1s_BFu0i_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 1, 1, "BFu1s_BFu0i_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu1s(Test_BFu1s_BFu0i_BFu1s, "BFu1s_BFu0i_BFu1s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu31i()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu31i");
    static BFu1s_BFu0i_BFu31i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1s_BFu0i_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 31, 1, "BFu1s_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 31, hide_ull(1LL<<30), "BFu1s_BFu0i_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu31i(Test_BFu1s_BFu0i_BFu31i, "BFu1s_BFu0i_BFu31i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu31ll()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu31ll");
    static BFu1s_BFu0i_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1s_BFu0i_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 31, 1, "BFu1s_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 31, hide_ull(1LL<<30), "BFu1s_BFu0i_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu31ll(Test_BFu1s_BFu0i_BFu31ll, "BFu1s_BFu0i_BFu31ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu32i()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu32i");
    static BFu1s_BFu0i_BFu32i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1s_BFu0i_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 32, 1, "BFu1s_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 32, hide_ull(1LL<<31), "BFu1s_BFu0i_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu32i(Test_BFu1s_BFu0i_BFu32i, "BFu1s_BFu0i_BFu32i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu32ll()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu32ll");
    static BFu1s_BFu0i_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1s_BFu0i_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 32, 1, "BFu1s_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 32, hide_ull(1LL<<31), "BFu1s_BFu0i_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu32ll(Test_BFu1s_BFu0i_BFu32ll, "BFu1s_BFu0i_BFu32ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu33()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu33");
    static BFu1s_BFu0i_BFu33 lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu1s_BFu0i_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 33, 1, "BFu1s_BFu0i_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 33, hide_ull(1LL<<32), "BFu1s_BFu0i_BFu33");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu33(Test_BFu1s_BFu0i_BFu33, "BFu1s_BFu0i_BFu33", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu7c()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu7c");
    static BFu1s_BFu0i_BFu7c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1s_BFu0i_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, 1, "BFu1s_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, hide_ull(1LL<<6), "BFu1s_BFu0i_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu7c(Test_BFu1s_BFu0i_BFu7c, "BFu1s_BFu0i_BFu7c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu7i()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu7i");
    static BFu1s_BFu0i_BFu7i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1s_BFu0i_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, 1, "BFu1s_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, hide_ull(1LL<<6), "BFu1s_BFu0i_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu7i(Test_BFu1s_BFu0i_BFu7i, "BFu1s_BFu0i_BFu7i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu7ll()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu7ll");
    static BFu1s_BFu0i_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1s_BFu0i_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, 1, "BFu1s_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, hide_ull(1LL<<6), "BFu1s_BFu0i_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu7ll(Test_BFu1s_BFu0i_BFu7ll, "BFu1s_BFu0i_BFu7ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu7s()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu7s");
    static BFu1s_BFu0i_BFu7s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1s_BFu0i_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, 1, "BFu1s_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, hide_ull(1LL<<6), "BFu1s_BFu0i_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu7s(Test_BFu1s_BFu0i_BFu7s, "BFu1s_BFu0i_BFu7s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu8c()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu8c");
    static BFu1s_BFu0i_BFu8c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1s_BFu0i_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, 1, "BFu1s_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, hide_ull(1LL<<7), "BFu1s_BFu0i_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu8c(Test_BFu1s_BFu0i_BFu8c, "BFu1s_BFu0i_BFu8c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu8i()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu8i");
    static BFu1s_BFu0i_BFu8i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1s_BFu0i_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, 1, "BFu1s_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, hide_ull(1LL<<7), "BFu1s_BFu0i_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu8i(Test_BFu1s_BFu0i_BFu8i, "BFu1s_BFu0i_BFu8i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu8ll()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu8ll");
    static BFu1s_BFu0i_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1s_BFu0i_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, 1, "BFu1s_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, hide_ull(1LL<<7), "BFu1s_BFu0i_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu8ll(Test_BFu1s_BFu0i_BFu8ll, "BFu1s_BFu0i_BFu8ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu8s()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu8s");
    static BFu1s_BFu0i_BFu8s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1s_BFu0i_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, 1, "BFu1s_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, hide_ull(1LL<<7), "BFu1s_BFu0i_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu8s(Test_BFu1s_BFu0i_BFu8s, "BFu1s_BFu0i_BFu8s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu9i()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu9i");
    static BFu1s_BFu0i_BFu9i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1s_BFu0i_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, 1, "BFu1s_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, hide_ull(1LL<<8), "BFu1s_BFu0i_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu9i(Test_BFu1s_BFu0i_BFu9i, "BFu1s_BFu0i_BFu9i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu9ll()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu9ll");
    static BFu1s_BFu0i_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1s_BFu0i_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, 1, "BFu1s_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, hide_ull(1LL<<8), "BFu1s_BFu0i_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu9ll(Test_BFu1s_BFu0i_BFu9ll, "BFu1s_BFu0i_BFu9ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_BFu9s()
{
  {
    init_simple_test("BFu1s_BFu0i_BFu9s");
    static BFu1s_BFu0i_BFu9s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1s_BFu0i_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, 1, "BFu1s_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, hide_ull(1LL<<8), "BFu1s_BFu0i_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_BFu9s(Test_BFu1s_BFu0i_BFu9s, "BFu1s_BFu0i_BFu9s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_C()
{
  {
    init_simple_test("BFu1s_BFu0i_C");
    static BFu1s_BFu0i_C lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1s_BFu0i_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_C)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_C");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu1s_BFu0i_C.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_C(Test_BFu1s_BFu0i_C, "BFu1s_BFu0i_C", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_D()
{
  {
    init_simple_test("BFu1s_BFu0i_D");
    static BFu1s_BFu0i_D lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu1s_BFu0i_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_D)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_D");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu1s_BFu0i_D.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_D(Test_BFu1s_BFu0i_D, "BFu1s_BFu0i_D", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_F()
{
  {
    init_simple_test("BFu1s_BFu0i_F");
    static BFu1s_BFu0i_F lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1s_BFu0i_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_F)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_F");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu1s_BFu0i_F.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_F(Test_BFu1s_BFu0i_F, "BFu1s_BFu0i_F", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_I()
{
  {
    init_simple_test("BFu1s_BFu0i_I");
    static BFu1s_BFu0i_I lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1s_BFu0i_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_I)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_I");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu1s_BFu0i_I.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_I(Test_BFu1s_BFu0i_I, "BFu1s_BFu0i_I", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_Ip()
{
  {
    init_simple_test("BFu1s_BFu0i_Ip");
    static BFu1s_BFu0i_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu1s_BFu0i_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_Ip");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu1s_BFu0i_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_Ip(Test_BFu1s_BFu0i_Ip, "BFu1s_BFu0i_Ip", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_L()
{
  {
    init_simple_test("BFu1s_BFu0i_L");
    static BFu1s_BFu0i_L lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu1s_BFu0i_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_L)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_L");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu1s_BFu0i_L.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_L(Test_BFu1s_BFu0i_L, "BFu1s_BFu0i_L", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_S()
{
  {
    init_simple_test("BFu1s_BFu0i_S");
    static BFu1s_BFu0i_S lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1s_BFu0i_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_S)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_S");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu1s_BFu0i_S.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_S(Test_BFu1s_BFu0i_S, "BFu1s_BFu0i_S", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_Uc()
{
  {
    init_simple_test("BFu1s_BFu0i_Uc");
    static BFu1s_BFu0i_Uc lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1s_BFu0i_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_Uc");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu1s_BFu0i_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_Uc(Test_BFu1s_BFu0i_Uc, "BFu1s_BFu0i_Uc", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_Ui()
{
  {
    init_simple_test("BFu1s_BFu0i_Ui");
    static BFu1s_BFu0i_Ui lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1s_BFu0i_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_Ui");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu1s_BFu0i_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_Ui(Test_BFu1s_BFu0i_Ui, "BFu1s_BFu0i_Ui", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_Ul()
{
  {
    init_simple_test("BFu1s_BFu0i_Ul");
    static BFu1s_BFu0i_Ul lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu1s_BFu0i_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_Ul");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu1s_BFu0i_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_Ul(Test_BFu1s_BFu0i_Ul, "BFu1s_BFu0i_Ul", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_Us()
{
  {
    init_simple_test("BFu1s_BFu0i_Us");
    static BFu1s_BFu0i_Us lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1s_BFu0i_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_Us)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_Us");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu1s_BFu0i_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_Us(Test_BFu1s_BFu0i_Us, "BFu1s_BFu0i_Us", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0i_Vp()
{
  {
    init_simple_test("BFu1s_BFu0i_Vp");
    static BFu1s_BFu0i_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu1s_BFu0i_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0i_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0i_Vp");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu1s_BFu0i_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0i_Vp(Test_BFu1s_BFu0i_Vp, "BFu1s_BFu0i_Vp", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu0ll");
    static BFu1s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll(Test_BFu1s_BFu0ll, "BFu1s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu0c");
    static BFu1s_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu0c(Test_BFu1s_BFu0ll_BFu0c, "BFu1s_BFu0ll_BFu0c", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu0i");
    static BFu1s_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu0i(Test_BFu1s_BFu0ll_BFu0i, "BFu1s_BFu0ll_BFu0i", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu0ll");
    static BFu1s_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu0ll(Test_BFu1s_BFu0ll_BFu0ll, "BFu1s_BFu0ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu0s");
    static BFu1s_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu0s(Test_BFu1s_BFu0ll_BFu0s, "BFu1s_BFu0ll_BFu0s", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu15i()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu15i");
    static BFu1s_BFu0ll_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1s_BFu0ll_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "BFu1s_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "BFu1s_BFu0ll_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu15i(Test_BFu1s_BFu0ll_BFu15i, "BFu1s_BFu0ll_BFu15i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu15ll()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu15ll");
    static BFu1s_BFu0ll_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1s_BFu0ll_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "BFu1s_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "BFu1s_BFu0ll_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu15ll(Test_BFu1s_BFu0ll_BFu15ll, "BFu1s_BFu0ll_BFu15ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu15s()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu15s");
    static BFu1s_BFu0ll_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1s_BFu0ll_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "BFu1s_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "BFu1s_BFu0ll_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu15s(Test_BFu1s_BFu0ll_BFu15s, "BFu1s_BFu0ll_BFu15s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu16i()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu16i");
    static BFu1s_BFu0ll_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1s_BFu0ll_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "BFu1s_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "BFu1s_BFu0ll_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu16i(Test_BFu1s_BFu0ll_BFu16i, "BFu1s_BFu0ll_BFu16i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu16ll()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu16ll");
    static BFu1s_BFu0ll_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1s_BFu0ll_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "BFu1s_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "BFu1s_BFu0ll_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu16ll(Test_BFu1s_BFu0ll_BFu16ll, "BFu1s_BFu0ll_BFu16ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu16s()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu16s");
    static BFu1s_BFu0ll_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1s_BFu0ll_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "BFu1s_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "BFu1s_BFu0ll_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu16s(Test_BFu1s_BFu0ll_BFu16s, "BFu1s_BFu0ll_BFu16s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu17i()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu17i");
    static BFu1s_BFu0ll_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu1s_BFu0ll_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "BFu1s_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "BFu1s_BFu0ll_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu17i(Test_BFu1s_BFu0ll_BFu17i, "BFu1s_BFu0ll_BFu17i", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu17ll()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu17ll");
    static BFu1s_BFu0ll_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu1s_BFu0ll_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "BFu1s_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "BFu1s_BFu0ll_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu17ll(Test_BFu1s_BFu0ll_BFu17ll, "BFu1s_BFu0ll_BFu17ll", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu1c()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu1c");
    static BFu1s_BFu0ll_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1s_BFu0ll_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu1s_BFu0ll_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu1c(Test_BFu1s_BFu0ll_BFu1c, "BFu1s_BFu0ll_BFu1c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu1i()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu1i");
    static BFu1s_BFu0ll_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1s_BFu0ll_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu1s_BFu0ll_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu1i(Test_BFu1s_BFu0ll_BFu1i, "BFu1s_BFu0ll_BFu1i", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu1ll()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu1ll");
    static BFu1s_BFu0ll_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1s_BFu0ll_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu1s_BFu0ll_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu1ll(Test_BFu1s_BFu0ll_BFu1ll, "BFu1s_BFu0ll_BFu1ll", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu1s()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu1s");
    static BFu1s_BFu0ll_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1s_BFu0ll_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu1s_BFu0ll_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu1s(Test_BFu1s_BFu0ll_BFu1s, "BFu1s_BFu0ll_BFu1s", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu31i()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu31i");
    static BFu1s_BFu0ll_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu1s_BFu0ll_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "BFu1s_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "BFu1s_BFu0ll_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu31i(Test_BFu1s_BFu0ll_BFu31i, "BFu1s_BFu0ll_BFu31i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu31ll()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu31ll");
    static BFu1s_BFu0ll_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu1s_BFu0ll_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "BFu1s_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "BFu1s_BFu0ll_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu31ll(Test_BFu1s_BFu0ll_BFu31ll, "BFu1s_BFu0ll_BFu31ll", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu32i()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu32i");
    static BFu1s_BFu0ll_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu1s_BFu0ll_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "BFu1s_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "BFu1s_BFu0ll_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu32i(Test_BFu1s_BFu0ll_BFu32i, "BFu1s_BFu0ll_BFu32i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu32ll()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu32ll");
    static BFu1s_BFu0ll_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu1s_BFu0ll_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "BFu1s_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "BFu1s_BFu0ll_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu32ll(Test_BFu1s_BFu0ll_BFu32ll, "BFu1s_BFu0ll_BFu32ll", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu33()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu33");
    static BFu1s_BFu0ll_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(BFu1s_BFu0ll_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, 1, "BFu1s_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, hide_ull(1LL<<32), "BFu1s_BFu0ll_BFu33");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu33(Test_BFu1s_BFu0ll_BFu33, "BFu1s_BFu0ll_BFu33", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu7c()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu7c");
    static BFu1s_BFu0ll_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1s_BFu0ll_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu1s_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu1s_BFu0ll_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu7c(Test_BFu1s_BFu0ll_BFu7c, "BFu1s_BFu0ll_BFu7c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu7i()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu7i");
    static BFu1s_BFu0ll_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1s_BFu0ll_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu1s_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu1s_BFu0ll_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu7i(Test_BFu1s_BFu0ll_BFu7i, "BFu1s_BFu0ll_BFu7i", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu7ll()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu7ll");
    static BFu1s_BFu0ll_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1s_BFu0ll_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu1s_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu1s_BFu0ll_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu7ll(Test_BFu1s_BFu0ll_BFu7ll, "BFu1s_BFu0ll_BFu7ll", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu7s()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu7s");
    static BFu1s_BFu0ll_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1s_BFu0ll_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu1s_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu1s_BFu0ll_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu7s(Test_BFu1s_BFu0ll_BFu7s, "BFu1s_BFu0ll_BFu7s", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu8c()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu8c");
    static BFu1s_BFu0ll_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1s_BFu0ll_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu1s_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu1s_BFu0ll_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu8c(Test_BFu1s_BFu0ll_BFu8c, "BFu1s_BFu0ll_BFu8c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu8i()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu8i");
    static BFu1s_BFu0ll_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1s_BFu0ll_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu1s_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu1s_BFu0ll_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu8i(Test_BFu1s_BFu0ll_BFu8i, "BFu1s_BFu0ll_BFu8i", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu8ll()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu8ll");
    static BFu1s_BFu0ll_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1s_BFu0ll_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu1s_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu1s_BFu0ll_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu8ll(Test_BFu1s_BFu0ll_BFu8ll, "BFu1s_BFu0ll_BFu8ll", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu8s()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu8s");
    static BFu1s_BFu0ll_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1s_BFu0ll_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu1s_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu1s_BFu0ll_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu8s(Test_BFu1s_BFu0ll_BFu8s, "BFu1s_BFu0ll_BFu8s", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu9i()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu9i");
    static BFu1s_BFu0ll_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1s_BFu0ll_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "BFu1s_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "BFu1s_BFu0ll_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu9i(Test_BFu1s_BFu0ll_BFu9i, "BFu1s_BFu0ll_BFu9i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu9ll()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu9ll");
    static BFu1s_BFu0ll_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1s_BFu0ll_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "BFu1s_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "BFu1s_BFu0ll_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu9ll(Test_BFu1s_BFu0ll_BFu9ll, "BFu1s_BFu0ll_BFu9ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_BFu9s()
{
  {
    init_simple_test("BFu1s_BFu0ll_BFu9s");
    static BFu1s_BFu0ll_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1s_BFu0ll_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "BFu1s_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "BFu1s_BFu0ll_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_BFu9s(Test_BFu1s_BFu0ll_BFu9s, "BFu1s_BFu0ll_BFu9s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_C()
{
  {
    init_simple_test("BFu1s_BFu0ll_C");
    static BFu1s_BFu0ll_C lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1s_BFu0ll_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_C)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_C");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu1s_BFu0ll_C.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_C(Test_BFu1s_BFu0ll_C, "BFu1s_BFu0ll_C", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_D()
{
  {
    init_simple_test("BFu1s_BFu0ll_D");
    static BFu1s_BFu0ll_D lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu1s_BFu0ll_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_D)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_D");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu1s_BFu0ll_D.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_D(Test_BFu1s_BFu0ll_D, "BFu1s_BFu0ll_D", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_F()
{
  {
    init_simple_test("BFu1s_BFu0ll_F");
    static BFu1s_BFu0ll_F lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu1s_BFu0ll_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_F)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_F");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu1s_BFu0ll_F.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_F(Test_BFu1s_BFu0ll_F, "BFu1s_BFu0ll_F", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_I()
{
  {
    init_simple_test("BFu1s_BFu0ll_I");
    static BFu1s_BFu0ll_I lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu1s_BFu0ll_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_I)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_I");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu1s_BFu0ll_I.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_I(Test_BFu1s_BFu0ll_I, "BFu1s_BFu0ll_I", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_Ip()
{
  {
    init_simple_test("BFu1s_BFu0ll_Ip");
    static BFu1s_BFu0ll_Ip lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu1s_BFu0ll_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_Ip");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu1s_BFu0ll_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_Ip(Test_BFu1s_BFu0ll_Ip, "BFu1s_BFu0ll_Ip", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_L()
{
  {
    init_simple_test("BFu1s_BFu0ll_L");
    static BFu1s_BFu0ll_L lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu1s_BFu0ll_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_L)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_L");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu1s_BFu0ll_L.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_L(Test_BFu1s_BFu0ll_L, "BFu1s_BFu0ll_L", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_S()
{
  {
    init_simple_test("BFu1s_BFu0ll_S");
    static BFu1s_BFu0ll_S lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1s_BFu0ll_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_S)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_S");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu1s_BFu0ll_S.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_S(Test_BFu1s_BFu0ll_S, "BFu1s_BFu0ll_S", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_Uc()
{
  {
    init_simple_test("BFu1s_BFu0ll_Uc");
    static BFu1s_BFu0ll_Uc lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1s_BFu0ll_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_Uc");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu1s_BFu0ll_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_Uc(Test_BFu1s_BFu0ll_Uc, "BFu1s_BFu0ll_Uc", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_Ui()
{
  {
    init_simple_test("BFu1s_BFu0ll_Ui");
    static BFu1s_BFu0ll_Ui lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu1s_BFu0ll_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_Ui");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu1s_BFu0ll_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_Ui(Test_BFu1s_BFu0ll_Ui, "BFu1s_BFu0ll_Ui", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_Ul()
{
  {
    init_simple_test("BFu1s_BFu0ll_Ul");
    static BFu1s_BFu0ll_Ul lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu1s_BFu0ll_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_Ul");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu1s_BFu0ll_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_Ul(Test_BFu1s_BFu0ll_Ul, "BFu1s_BFu0ll_Ul", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_Us()
{
  {
    init_simple_test("BFu1s_BFu0ll_Us");
    static BFu1s_BFu0ll_Us lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1s_BFu0ll_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_Us)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_Us");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu1s_BFu0ll_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_Us(Test_BFu1s_BFu0ll_Us, "BFu1s_BFu0ll_Us", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0ll_Vp()
{
  {
    init_simple_test("BFu1s_BFu0ll_Vp");
    static BFu1s_BFu0ll_Vp lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu1s_BFu0ll_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0ll_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0ll_Vp");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu1s_BFu0ll_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0ll_Vp(Test_BFu1s_BFu0ll_Vp, "BFu1s_BFu0ll_Vp", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu0s");
    static BFu1s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu1s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s(Test_BFu1s_BFu0s, "BFu1s_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu0c");
    static BFu1s_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu1s_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu0c(Test_BFu1s_BFu0s_BFu0c, "BFu1s_BFu0s_BFu0c", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu0i");
    static BFu1s_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu0i(Test_BFu1s_BFu0s_BFu0i, "BFu1s_BFu0s_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu0ll");
    static BFu1s_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu0ll(Test_BFu1s_BFu0s_BFu0ll, "BFu1s_BFu0s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu0s");
    static BFu1s_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu1s_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu0s(Test_BFu1s_BFu0s_BFu0s, "BFu1s_BFu0s_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu15i()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu15i");
    static BFu1s_BFu0s_BFu15i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu0s_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, 1, "BFu1s_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, hide_ull(1LL<<14), "BFu1s_BFu0s_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu15i(Test_BFu1s_BFu0s_BFu15i, "BFu1s_BFu0s_BFu15i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu15ll()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu15ll");
    static BFu1s_BFu0s_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu0s_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, 1, "BFu1s_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, hide_ull(1LL<<14), "BFu1s_BFu0s_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu15ll(Test_BFu1s_BFu0s_BFu15ll, "BFu1s_BFu0s_BFu15ll", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu15s()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu15s");
    static BFu1s_BFu0s_BFu15s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu0s_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, 1, "BFu1s_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, hide_ull(1LL<<14), "BFu1s_BFu0s_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu15s(Test_BFu1s_BFu0s_BFu15s, "BFu1s_BFu0s_BFu15s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu16i()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu16i");
    static BFu1s_BFu0s_BFu16i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu0s_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, 1, "BFu1s_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, hide_ull(1LL<<15), "BFu1s_BFu0s_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu16i(Test_BFu1s_BFu0s_BFu16i, "BFu1s_BFu0s_BFu16i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu16ll()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu16ll");
    static BFu1s_BFu0s_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu0s_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, 1, "BFu1s_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, hide_ull(1LL<<15), "BFu1s_BFu0s_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu16ll(Test_BFu1s_BFu0s_BFu16ll, "BFu1s_BFu0s_BFu16ll", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu16s()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu16s");
    static BFu1s_BFu0s_BFu16s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu0s_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, 1, "BFu1s_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, hide_ull(1LL<<15), "BFu1s_BFu0s_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu16s(Test_BFu1s_BFu0s_BFu16s, "BFu1s_BFu0s_BFu16s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu17i()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu17i");
    static BFu1s_BFu0s_BFu17i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1s_BFu0s_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 17, 1, "BFu1s_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 17, hide_ull(1LL<<16), "BFu1s_BFu0s_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu17i(Test_BFu1s_BFu0s_BFu17i, "BFu1s_BFu0s_BFu17i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu17ll()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu17ll");
    static BFu1s_BFu0s_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu1s_BFu0s_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 17, 1, "BFu1s_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 17, hide_ull(1LL<<16), "BFu1s_BFu0s_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu17ll(Test_BFu1s_BFu0s_BFu17ll, "BFu1s_BFu0s_BFu17ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu1c()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu1c");
    static BFu1s_BFu0s_BFu1c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu1s_BFu0s_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 1, 1, "BFu1s_BFu0s_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu1c(Test_BFu1s_BFu0s_BFu1c, "BFu1s_BFu0s_BFu1c", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu1i()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu1i");
    static BFu1s_BFu0s_BFu1i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu1s_BFu0s_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 1, 1, "BFu1s_BFu0s_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu1i(Test_BFu1s_BFu0s_BFu1i, "BFu1s_BFu0s_BFu1i", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu1ll()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu1ll");
    static BFu1s_BFu0s_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu1s_BFu0s_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 1, 1, "BFu1s_BFu0s_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu1ll(Test_BFu1s_BFu0s_BFu1ll, "BFu1s_BFu0s_BFu1ll", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu1s()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu1s");
    static BFu1s_BFu0s_BFu1s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu1s_BFu0s_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 1, 1, "BFu1s_BFu0s_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu1s(Test_BFu1s_BFu0s_BFu1s, "BFu1s_BFu0s_BFu1s", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu31i()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu31i");
    static BFu1s_BFu0s_BFu31i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1s_BFu0s_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 31, 1, "BFu1s_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 31, hide_ull(1LL<<30), "BFu1s_BFu0s_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu31i(Test_BFu1s_BFu0s_BFu31i, "BFu1s_BFu0s_BFu31i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu31ll()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu31ll");
    static BFu1s_BFu0s_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1s_BFu0s_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 31, 1, "BFu1s_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 31, hide_ull(1LL<<30), "BFu1s_BFu0s_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu31ll(Test_BFu1s_BFu0s_BFu31ll, "BFu1s_BFu0s_BFu31ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu32i()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu32i");
    static BFu1s_BFu0s_BFu32i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1s_BFu0s_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 32, 1, "BFu1s_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 32, hide_ull(1LL<<31), "BFu1s_BFu0s_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu32i(Test_BFu1s_BFu0s_BFu32i, "BFu1s_BFu0s_BFu32i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu32ll()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu32ll");
    static BFu1s_BFu0s_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1s_BFu0s_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 32, 1, "BFu1s_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 32, hide_ull(1LL<<31), "BFu1s_BFu0s_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu32ll(Test_BFu1s_BFu0s_BFu32ll, "BFu1s_BFu0s_BFu32ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu33()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu33");
    static BFu1s_BFu0s_BFu33 lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu1s_BFu0s_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 33, 1, "BFu1s_BFu0s_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 33, hide_ull(1LL<<32), "BFu1s_BFu0s_BFu33");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu33(Test_BFu1s_BFu0s_BFu33, "BFu1s_BFu0s_BFu33", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu7c()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu7c");
    static BFu1s_BFu0s_BFu7c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu1s_BFu0s_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, 1, "BFu1s_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, hide_ull(1LL<<6), "BFu1s_BFu0s_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu7c(Test_BFu1s_BFu0s_BFu7c, "BFu1s_BFu0s_BFu7c", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu7i()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu7i");
    static BFu1s_BFu0s_BFu7i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu1s_BFu0s_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, 1, "BFu1s_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, hide_ull(1LL<<6), "BFu1s_BFu0s_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu7i(Test_BFu1s_BFu0s_BFu7i, "BFu1s_BFu0s_BFu7i", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu7ll()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu7ll");
    static BFu1s_BFu0s_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu1s_BFu0s_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, 1, "BFu1s_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, hide_ull(1LL<<6), "BFu1s_BFu0s_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu7ll(Test_BFu1s_BFu0s_BFu7ll, "BFu1s_BFu0s_BFu7ll", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu7s()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu7s");
    static BFu1s_BFu0s_BFu7s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu1s_BFu0s_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, 1, "BFu1s_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, hide_ull(1LL<<6), "BFu1s_BFu0s_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu7s(Test_BFu1s_BFu0s_BFu7s, "BFu1s_BFu0s_BFu7s", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu8c()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu8c");
    static BFu1s_BFu0s_BFu8c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu1s_BFu0s_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, 1, "BFu1s_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, hide_ull(1LL<<7), "BFu1s_BFu0s_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu8c(Test_BFu1s_BFu0s_BFu8c, "BFu1s_BFu0s_BFu8c", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu8i()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu8i");
    static BFu1s_BFu0s_BFu8i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu1s_BFu0s_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, 1, "BFu1s_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, hide_ull(1LL<<7), "BFu1s_BFu0s_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu8i(Test_BFu1s_BFu0s_BFu8i, "BFu1s_BFu0s_BFu8i", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu8ll()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu8ll");
    static BFu1s_BFu0s_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu1s_BFu0s_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, 1, "BFu1s_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, hide_ull(1LL<<7), "BFu1s_BFu0s_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu8ll(Test_BFu1s_BFu0s_BFu8ll, "BFu1s_BFu0s_BFu8ll", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu8s()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu8s");
    static BFu1s_BFu0s_BFu8s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu1s_BFu0s_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, 1, "BFu1s_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, hide_ull(1LL<<7), "BFu1s_BFu0s_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu8s(Test_BFu1s_BFu0s_BFu8s, "BFu1s_BFu0s_BFu8s", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu9i()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu9i");
    static BFu1s_BFu0s_BFu9i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu0s_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, 1, "BFu1s_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, hide_ull(1LL<<8), "BFu1s_BFu0s_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu9i(Test_BFu1s_BFu0s_BFu9i, "BFu1s_BFu0s_BFu9i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu9ll()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu9ll");
    static BFu1s_BFu0s_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu0s_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, 1, "BFu1s_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, hide_ull(1LL<<8), "BFu1s_BFu0s_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu9ll(Test_BFu1s_BFu0s_BFu9ll, "BFu1s_BFu0s_BFu9ll", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_BFu9s()
{
  {
    init_simple_test("BFu1s_BFu0s_BFu9s");
    static BFu1s_BFu0s_BFu9s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu0s_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, 1, "BFu1s_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, hide_ull(1LL<<8), "BFu1s_BFu0s_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_BFu9s(Test_BFu1s_BFu0s_BFu9s, "BFu1s_BFu0s_BFu9s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_C()
{
  {
    init_simple_test("BFu1s_BFu0s_C");
    static BFu1s_BFu0s_C lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu1s_BFu0s_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_C)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_C");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu1s_BFu0s_C.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_C(Test_BFu1s_BFu0s_C, "BFu1s_BFu0s_C", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_D()
{
  {
    init_simple_test("BFu1s_BFu0s_D");
    static BFu1s_BFu0s_D lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu1s_BFu0s_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_D)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_D");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu1s_BFu0s_D.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_D(Test_BFu1s_BFu0s_D, "BFu1s_BFu0s_D", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_F()
{
  {
    init_simple_test("BFu1s_BFu0s_F");
    static BFu1s_BFu0s_F lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1s_BFu0s_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_F)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_F");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu1s_BFu0s_F.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_F(Test_BFu1s_BFu0s_F, "BFu1s_BFu0s_F", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_I()
{
  {
    init_simple_test("BFu1s_BFu0s_I");
    static BFu1s_BFu0s_I lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1s_BFu0s_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_I)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_I");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu1s_BFu0s_I.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_I(Test_BFu1s_BFu0s_I, "BFu1s_BFu0s_I", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_Ip()
{
  {
    init_simple_test("BFu1s_BFu0s_Ip");
    static BFu1s_BFu0s_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1s_BFu0s_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_Ip");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu1s_BFu0s_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_Ip(Test_BFu1s_BFu0s_Ip, "BFu1s_BFu0s_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_L()
{
  {
    init_simple_test("BFu1s_BFu0s_L");
    static BFu1s_BFu0s_L lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu1s_BFu0s_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_L)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_L");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu1s_BFu0s_L.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_L(Test_BFu1s_BFu0s_L, "BFu1s_BFu0s_L", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_S()
{
  {
    init_simple_test("BFu1s_BFu0s_S");
    static BFu1s_BFu0s_S lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu0s_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_S)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_S");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu1s_BFu0s_S.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_S(Test_BFu1s_BFu0s_S, "BFu1s_BFu0s_S", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_Uc()
{
  {
    init_simple_test("BFu1s_BFu0s_Uc");
    static BFu1s_BFu0s_Uc lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu1s_BFu0s_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_Uc");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu1s_BFu0s_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_Uc(Test_BFu1s_BFu0s_Uc, "BFu1s_BFu0s_Uc", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_Ui()
{
  {
    init_simple_test("BFu1s_BFu0s_Ui");
    static BFu1s_BFu0s_Ui lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1s_BFu0s_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_Ui");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu1s_BFu0s_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_Ui(Test_BFu1s_BFu0s_Ui, "BFu1s_BFu0s_Ui", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_Ul()
{
  {
    init_simple_test("BFu1s_BFu0s_Ul");
    static BFu1s_BFu0s_Ul lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu1s_BFu0s_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_Ul");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu1s_BFu0s_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_Ul(Test_BFu1s_BFu0s_Ul, "BFu1s_BFu0s_Ul", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_Us()
{
  {
    init_simple_test("BFu1s_BFu0s_Us");
    static BFu1s_BFu0s_Us lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu0s_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_Us)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_Us");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu1s_BFu0s_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_Us(Test_BFu1s_BFu0s_Us, "BFu1s_BFu0s_Us", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu0s_Vp()
{
  {
    init_simple_test("BFu1s_BFu0s_Vp");
    static BFu1s_BFu0s_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1s_BFu0s_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu0s_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu0s_Vp");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu1s_BFu0s_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu0s_Vp(Test_BFu1s_BFu0s_Vp, "BFu1s_BFu0s_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu15i_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu15i_BFu0c");
    static BFu1s_BFu15i_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu15i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu15i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1s_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1s_BFu15i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu15i_BFu0c(Test_BFu1s_BFu15i_BFu0c, "BFu1s_BFu15i_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu15i_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu15i_BFu0i");
    static BFu1s_BFu15i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu15i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu15i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1s_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1s_BFu15i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu15i_BFu0i(Test_BFu1s_BFu15i_BFu0i, "BFu1s_BFu15i_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu15i_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu15i_BFu0ll");
    static BFu1s_BFu15i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu15i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu15i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1s_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1s_BFu15i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu15i_BFu0ll(Test_BFu1s_BFu15i_BFu0ll, "BFu1s_BFu15i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu15i_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu15i_BFu0s");
    static BFu1s_BFu15i_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu15i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu15i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1s_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1s_BFu15i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu15i_BFu0s(Test_BFu1s_BFu15i_BFu0s, "BFu1s_BFu15i_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu15ll_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu15ll_BFu0c");
    static BFu1s_BFu15ll_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu15ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu15ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1s_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1s_BFu15ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu15ll_BFu0c(Test_BFu1s_BFu15ll_BFu0c, "BFu1s_BFu15ll_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu15ll_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu15ll_BFu0i");
    static BFu1s_BFu15ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu15ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu15ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1s_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1s_BFu15ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu15ll_BFu0i(Test_BFu1s_BFu15ll_BFu0i, "BFu1s_BFu15ll_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu15ll_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu15ll_BFu0ll");
    static BFu1s_BFu15ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu15ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu15ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1s_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1s_BFu15ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu15ll_BFu0ll(Test_BFu1s_BFu15ll_BFu0ll, "BFu1s_BFu15ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu15ll_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu15ll_BFu0s");
    static BFu1s_BFu15ll_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu15ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu15ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1s_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1s_BFu15ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu15ll_BFu0s(Test_BFu1s_BFu15ll_BFu0s, "BFu1s_BFu15ll_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu15s_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu15s_BFu0c");
    static BFu1s_BFu15s_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu15s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu15s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1s_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1s_BFu15s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu15s_BFu0c(Test_BFu1s_BFu15s_BFu0c, "BFu1s_BFu15s_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu15s_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu15s_BFu0i");
    static BFu1s_BFu15s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu15s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu15s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1s_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1s_BFu15s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu15s_BFu0i(Test_BFu1s_BFu15s_BFu0i, "BFu1s_BFu15s_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu15s_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu15s_BFu0ll");
    static BFu1s_BFu15s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu15s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu15s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1s_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1s_BFu15s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu15s_BFu0ll(Test_BFu1s_BFu15s_BFu0ll, "BFu1s_BFu15s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu15s_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu15s_BFu0s");
    static BFu1s_BFu15s_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu15s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu15s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, 1, "BFu1s_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 15, hide_ull(1LL<<14), "BFu1s_BFu15s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu15s_BFu0s(Test_BFu1s_BFu15s_BFu0s, "BFu1s_BFu15s_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu16i_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu16i_BFu0c");
    static BFu1s_BFu16i_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_BFu16i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu16i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1s_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1s_BFu16i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu16i_BFu0c(Test_BFu1s_BFu16i_BFu0c, "BFu1s_BFu16i_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu16i_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu16i_BFu0i");
    static BFu1s_BFu16i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu16i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu16i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1s_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1s_BFu16i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu16i_BFu0i(Test_BFu1s_BFu16i_BFu0i, "BFu1s_BFu16i_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu16i_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu16i_BFu0ll");
    static BFu1s_BFu16i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu16i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu16i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1s_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1s_BFu16i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu16i_BFu0ll(Test_BFu1s_BFu16i_BFu0ll, "BFu1s_BFu16i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu16i_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu16i_BFu0s");
    static BFu1s_BFu16i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu16i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu16i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1s_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1s_BFu16i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu16i_BFu0s(Test_BFu1s_BFu16i_BFu0s, "BFu1s_BFu16i_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu16ll_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu16ll_BFu0c");
    static BFu1s_BFu16ll_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_BFu16ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu16ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1s_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1s_BFu16ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu16ll_BFu0c(Test_BFu1s_BFu16ll_BFu0c, "BFu1s_BFu16ll_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu16ll_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu16ll_BFu0i");
    static BFu1s_BFu16ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu16ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu16ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1s_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1s_BFu16ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu16ll_BFu0i(Test_BFu1s_BFu16ll_BFu0i, "BFu1s_BFu16ll_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu16ll_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu16ll_BFu0ll");
    static BFu1s_BFu16ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu16ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu16ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1s_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1s_BFu16ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu16ll_BFu0ll(Test_BFu1s_BFu16ll_BFu0ll, "BFu1s_BFu16ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu16ll_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu16ll_BFu0s");
    static BFu1s_BFu16ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu16ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu16ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1s_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1s_BFu16ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu16ll_BFu0s(Test_BFu1s_BFu16ll_BFu0s, "BFu1s_BFu16ll_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu16s_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu16s_BFu0c");
    static BFu1s_BFu16s_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_BFu16s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu16s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1s_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1s_BFu16s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu16s_BFu0c(Test_BFu1s_BFu16s_BFu0c, "BFu1s_BFu16s_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu16s_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu16s_BFu0i");
    static BFu1s_BFu16s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu16s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu16s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1s_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1s_BFu16s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu16s_BFu0i(Test_BFu1s_BFu16s_BFu0i, "BFu1s_BFu16s_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu16s_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu16s_BFu0ll");
    static BFu1s_BFu16s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu16s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu16s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1s_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1s_BFu16s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu16s_BFu0ll(Test_BFu1s_BFu16s_BFu0ll, "BFu1s_BFu16s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu16s_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu16s_BFu0s");
    static BFu1s_BFu16s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu16s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu16s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, 1, "BFu1s_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 16, hide_ull(1LL<<15), "BFu1s_BFu16s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu16s_BFu0s(Test_BFu1s_BFu16s_BFu0s, "BFu1s_BFu16s_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu17i_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu17i_BFu0c");
    static BFu1s_BFu17i_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_BFu17i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu17i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "BFu1s_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "BFu1s_BFu17i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu17i_BFu0c(Test_BFu1s_BFu17i_BFu0c, "BFu1s_BFu17i_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu17i_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu17i_BFu0i");
    static BFu1s_BFu17i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu17i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu17i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "BFu1s_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "BFu1s_BFu17i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu17i_BFu0i(Test_BFu1s_BFu17i_BFu0i, "BFu1s_BFu17i_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu17i_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu17i_BFu0ll");
    static BFu1s_BFu17i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu17i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu17i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "BFu1s_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "BFu1s_BFu17i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu17i_BFu0ll(Test_BFu1s_BFu17i_BFu0ll, "BFu1s_BFu17i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu17i_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu17i_BFu0s");
    static BFu1s_BFu17i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu17i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu17i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "BFu1s_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "BFu1s_BFu17i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu17i_BFu0s(Test_BFu1s_BFu17i_BFu0s, "BFu1s_BFu17i_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu17ll_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu17ll_BFu0c");
    static BFu1s_BFu17ll_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_BFu17ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu17ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "BFu1s_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "BFu1s_BFu17ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu17ll_BFu0c(Test_BFu1s_BFu17ll_BFu0c, "BFu1s_BFu17ll_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu17ll_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu17ll_BFu0i");
    static BFu1s_BFu17ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu17ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu17ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "BFu1s_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "BFu1s_BFu17ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu17ll_BFu0i(Test_BFu1s_BFu17ll_BFu0i, "BFu1s_BFu17ll_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu17ll_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu17ll_BFu0ll");
    static BFu1s_BFu17ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu17ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu17ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "BFu1s_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "BFu1s_BFu17ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu17ll_BFu0ll(Test_BFu1s_BFu17ll_BFu0ll, "BFu1s_BFu17ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu17ll_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu17ll_BFu0s");
    static BFu1s_BFu17ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu17ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu17ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 17, 1, "BFu1s_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 17, hide_ull(1LL<<16), "BFu1s_BFu17ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu17ll_BFu0s(Test_BFu1s_BFu17ll_BFu0s, "BFu1s_BFu17ll_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu1c_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu1c_BFu0c");
    static BFu1s_BFu1c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu1s_BFu1c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu1c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu1c_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1s_BFu1c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu1c_BFu0c(Test_BFu1s_BFu1c_BFu0c, "BFu1s_BFu1c_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu1c_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu1c_BFu0i");
    static BFu1s_BFu1c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu1c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu1c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu1c_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1s_BFu1c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu1c_BFu0i(Test_BFu1s_BFu1c_BFu0i, "BFu1s_BFu1c_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu1c_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu1c_BFu0ll");
    static BFu1s_BFu1c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu1c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu1c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu1c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1s_BFu1c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu1c_BFu0ll(Test_BFu1s_BFu1c_BFu0ll, "BFu1s_BFu1c_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu1c_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu1c_BFu0s");
    static BFu1s_BFu1c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu1s_BFu1c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu1c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu1c_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1s_BFu1c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu1c_BFu0s(Test_BFu1s_BFu1c_BFu0s, "BFu1s_BFu1c_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu1i_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu1i_BFu0c");
    static BFu1s_BFu1i_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu1s_BFu1i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu1i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu1i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1s_BFu1i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu1i_BFu0c(Test_BFu1s_BFu1i_BFu0c, "BFu1s_BFu1i_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu1i_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu1i_BFu0i");
    static BFu1s_BFu1i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu1i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu1i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu1i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1s_BFu1i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu1i_BFu0i(Test_BFu1s_BFu1i_BFu0i, "BFu1s_BFu1i_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu1i_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu1i_BFu0ll");
    static BFu1s_BFu1i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu1i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu1i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu1i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1s_BFu1i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu1i_BFu0ll(Test_BFu1s_BFu1i_BFu0ll, "BFu1s_BFu1i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu1i_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu1i_BFu0s");
    static BFu1s_BFu1i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu1s_BFu1i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu1i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu1i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1s_BFu1i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu1i_BFu0s(Test_BFu1s_BFu1i_BFu0s, "BFu1s_BFu1i_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu1ll_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu1ll_BFu0c");
    static BFu1s_BFu1ll_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu1s_BFu1ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu1ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu1ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1s_BFu1ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu1ll_BFu0c(Test_BFu1s_BFu1ll_BFu0c, "BFu1s_BFu1ll_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu1ll_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu1ll_BFu0i");
    static BFu1s_BFu1ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu1ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu1ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu1ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1s_BFu1ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu1ll_BFu0i(Test_BFu1s_BFu1ll_BFu0i, "BFu1s_BFu1ll_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu1ll_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu1ll_BFu0ll");
    static BFu1s_BFu1ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu1ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu1ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1s_BFu1ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu1ll_BFu0ll(Test_BFu1s_BFu1ll_BFu0ll, "BFu1s_BFu1ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu1ll_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu1ll_BFu0s");
    static BFu1s_BFu1ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu1s_BFu1ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu1ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu1ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1s_BFu1ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu1ll_BFu0s(Test_BFu1s_BFu1ll_BFu0s, "BFu1s_BFu1ll_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu1s_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu1s_BFu0c");
    static BFu1s_BFu1s_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu1s_BFu1s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu1s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu1s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1s_BFu1s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu1s_BFu0c(Test_BFu1s_BFu1s_BFu0c, "BFu1s_BFu1s_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu1s_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu1s_BFu0i");
    static BFu1s_BFu1s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu1s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu1s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu1s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1s_BFu1s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu1s_BFu0i(Test_BFu1s_BFu1s_BFu0i, "BFu1s_BFu1s_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu1s_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu1s_BFu0ll");
    static BFu1s_BFu1s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu1s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu1s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu1s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1s_BFu1s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu1s_BFu0ll(Test_BFu1s_BFu1s_BFu0ll, "BFu1s_BFu1s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu1s_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu1s_BFu0s");
    static BFu1s_BFu1s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu1s_BFu1s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu1s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu1s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 1, 1, "BFu1s_BFu1s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu1s_BFu0s(Test_BFu1s_BFu1s_BFu0s, "BFu1s_BFu1s_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu31i_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu31i_BFu0c");
    static BFu1s_BFu31i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu1s_BFu31i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu31i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "BFu1s_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "BFu1s_BFu31i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu31i_BFu0c(Test_BFu1s_BFu31i_BFu0c, "BFu1s_BFu31i_BFu0c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu31i_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu31i_BFu0i");
    static BFu1s_BFu31i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu1s_BFu31i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu31i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "BFu1s_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "BFu1s_BFu31i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu31i_BFu0i(Test_BFu1s_BFu31i_BFu0i, "BFu1s_BFu31i_BFu0i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu31i_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu31i_BFu0ll");
    static BFu1s_BFu31i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu31i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu31i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "BFu1s_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "BFu1s_BFu31i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu31i_BFu0ll(Test_BFu1s_BFu31i_BFu0ll, "BFu1s_BFu31i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu31i_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu31i_BFu0s");
    static BFu1s_BFu31i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu1s_BFu31i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu31i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "BFu1s_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "BFu1s_BFu31i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu31i_BFu0s(Test_BFu1s_BFu31i_BFu0s, "BFu1s_BFu31i_BFu0s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu31ll_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu31ll_BFu0c");
    static BFu1s_BFu31ll_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu1s_BFu31ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu31ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "BFu1s_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "BFu1s_BFu31ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu31ll_BFu0c(Test_BFu1s_BFu31ll_BFu0c, "BFu1s_BFu31ll_BFu0c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu31ll_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu31ll_BFu0i");
    static BFu1s_BFu31ll_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu1s_BFu31ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu31ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "BFu1s_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "BFu1s_BFu31ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu31ll_BFu0i(Test_BFu1s_BFu31ll_BFu0i, "BFu1s_BFu31ll_BFu0i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu31ll_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu31ll_BFu0ll");
    static BFu1s_BFu31ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu31ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu31ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "BFu1s_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "BFu1s_BFu31ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu31ll_BFu0ll(Test_BFu1s_BFu31ll_BFu0ll, "BFu1s_BFu31ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu31ll_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu31ll_BFu0s");
    static BFu1s_BFu31ll_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu1s_BFu31ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu31ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 31, 1, "BFu1s_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 31, hide_ull(1LL<<30), "BFu1s_BFu31ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu31ll_BFu0s(Test_BFu1s_BFu31ll_BFu0s, "BFu1s_BFu31ll_BFu0s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu32i_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu32i_BFu0c");
    static BFu1s_BFu32i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu1s_BFu32i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu32i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "BFu1s_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "BFu1s_BFu32i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu32i_BFu0c(Test_BFu1s_BFu32i_BFu0c, "BFu1s_BFu32i_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu32i_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu32i_BFu0i");
    static BFu1s_BFu32i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1s_BFu32i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu32i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "BFu1s_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "BFu1s_BFu32i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu32i_BFu0i(Test_BFu1s_BFu32i_BFu0i, "BFu1s_BFu32i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu32i_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu32i_BFu0ll");
    static BFu1s_BFu32i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1s_BFu32i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu32i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "BFu1s_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "BFu1s_BFu32i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu32i_BFu0ll(Test_BFu1s_BFu32i_BFu0ll, "BFu1s_BFu32i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu32i_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu32i_BFu0s");
    static BFu1s_BFu32i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1s_BFu32i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu32i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "BFu1s_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "BFu1s_BFu32i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu32i_BFu0s(Test_BFu1s_BFu32i_BFu0s, "BFu1s_BFu32i_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu32ll_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu32ll_BFu0c");
    static BFu1s_BFu32ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu1s_BFu32ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu32ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "BFu1s_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "BFu1s_BFu32ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu32ll_BFu0c(Test_BFu1s_BFu32ll_BFu0c, "BFu1s_BFu32ll_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu32ll_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu32ll_BFu0i");
    static BFu1s_BFu32ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1s_BFu32ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu32ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "BFu1s_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "BFu1s_BFu32ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu32ll_BFu0i(Test_BFu1s_BFu32ll_BFu0i, "BFu1s_BFu32ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu32ll_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu32ll_BFu0ll");
    static BFu1s_BFu32ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1s_BFu32ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu32ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "BFu1s_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "BFu1s_BFu32ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu32ll_BFu0ll(Test_BFu1s_BFu32ll_BFu0ll, "BFu1s_BFu32ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu32ll_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu32ll_BFu0s");
    static BFu1s_BFu32ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1s_BFu32ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu32ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 32, 1, "BFu1s_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 32, hide_ull(1LL<<31), "BFu1s_BFu32ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu32ll_BFu0s(Test_BFu1s_BFu32ll_BFu0s, "BFu1s_BFu32ll_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu33_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu33_BFu0c");
    static BFu1s_BFu33_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu1s_BFu33_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu33_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 33, 1, "BFu1s_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 33, hide_ull(1LL<<32), "BFu1s_BFu33_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu33_BFu0c(Test_BFu1s_BFu33_BFu0c, "BFu1s_BFu33_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu33_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu33_BFu0i");
    static BFu1s_BFu33_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1s_BFu33_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu33_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 33, 1, "BFu1s_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 33, hide_ull(1LL<<32), "BFu1s_BFu33_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu33_BFu0i(Test_BFu1s_BFu33_BFu0i, "BFu1s_BFu33_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu33_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu33_BFu0ll");
    static BFu1s_BFu33_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1s_BFu33_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu33_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 33, 1, "BFu1s_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 33, hide_ull(1LL<<32), "BFu1s_BFu33_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu33_BFu0ll(Test_BFu1s_BFu33_BFu0ll, "BFu1s_BFu33_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu33_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu33_BFu0s");
    static BFu1s_BFu33_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1s_BFu33_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu33_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 33, 1, "BFu1s_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 33, hide_ull(1LL<<32), "BFu1s_BFu33_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu33_BFu0s(Test_BFu1s_BFu33_BFu0s, "BFu1s_BFu33_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu7c_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu7c_BFu0c");
    static BFu1s_BFu7c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu1s_BFu7c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu7c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1s_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1s_BFu7c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu7c_BFu0c(Test_BFu1s_BFu7c_BFu0c, "BFu1s_BFu7c_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu7c_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu7c_BFu0i");
    static BFu1s_BFu7c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu7c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu7c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1s_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1s_BFu7c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu7c_BFu0i(Test_BFu1s_BFu7c_BFu0i, "BFu1s_BFu7c_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu7c_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu7c_BFu0ll");
    static BFu1s_BFu7c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu7c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu7c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1s_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1s_BFu7c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu7c_BFu0ll(Test_BFu1s_BFu7c_BFu0ll, "BFu1s_BFu7c_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu7c_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu7c_BFu0s");
    static BFu1s_BFu7c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu1s_BFu7c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu7c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1s_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1s_BFu7c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu7c_BFu0s(Test_BFu1s_BFu7c_BFu0s, "BFu1s_BFu7c_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu7i_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu7i_BFu0c");
    static BFu1s_BFu7i_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu1s_BFu7i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu7i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1s_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1s_BFu7i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu7i_BFu0c(Test_BFu1s_BFu7i_BFu0c, "BFu1s_BFu7i_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu7i_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu7i_BFu0i");
    static BFu1s_BFu7i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu7i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu7i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1s_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1s_BFu7i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu7i_BFu0i(Test_BFu1s_BFu7i_BFu0i, "BFu1s_BFu7i_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu7i_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu7i_BFu0ll");
    static BFu1s_BFu7i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu7i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu7i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1s_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1s_BFu7i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu7i_BFu0ll(Test_BFu1s_BFu7i_BFu0ll, "BFu1s_BFu7i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu7i_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu7i_BFu0s");
    static BFu1s_BFu7i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu1s_BFu7i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu7i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1s_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1s_BFu7i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu7i_BFu0s(Test_BFu1s_BFu7i_BFu0s, "BFu1s_BFu7i_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu7ll_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu7ll_BFu0c");
    static BFu1s_BFu7ll_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu1s_BFu7ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu7ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1s_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1s_BFu7ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu7ll_BFu0c(Test_BFu1s_BFu7ll_BFu0c, "BFu1s_BFu7ll_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu7ll_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu7ll_BFu0i");
    static BFu1s_BFu7ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu7ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu7ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1s_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1s_BFu7ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu7ll_BFu0i(Test_BFu1s_BFu7ll_BFu0i, "BFu1s_BFu7ll_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu7ll_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu7ll_BFu0ll");
    static BFu1s_BFu7ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu7ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu7ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1s_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1s_BFu7ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu7ll_BFu0ll(Test_BFu1s_BFu7ll_BFu0ll, "BFu1s_BFu7ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu7ll_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu7ll_BFu0s");
    static BFu1s_BFu7ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu1s_BFu7ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu7ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1s_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1s_BFu7ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu7ll_BFu0s(Test_BFu1s_BFu7ll_BFu0s, "BFu1s_BFu7ll_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu7s_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu7s_BFu0c");
    static BFu1s_BFu7s_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu1s_BFu7s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu7s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1s_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1s_BFu7s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu7s_BFu0c(Test_BFu1s_BFu7s_BFu0c, "BFu1s_BFu7s_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu7s_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu7s_BFu0i");
    static BFu1s_BFu7s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu7s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu7s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1s_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1s_BFu7s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu7s_BFu0i(Test_BFu1s_BFu7s_BFu0i, "BFu1s_BFu7s_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu7s_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu7s_BFu0ll");
    static BFu1s_BFu7s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu7s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu7s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1s_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1s_BFu7s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu7s_BFu0ll(Test_BFu1s_BFu7s_BFu0ll, "BFu1s_BFu7s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu7s_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu7s_BFu0s");
    static BFu1s_BFu7s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu1s_BFu7s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu7s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, 1, "BFu1s_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 7, hide_ull(1LL<<6), "BFu1s_BFu7s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu7s_BFu0s(Test_BFu1s_BFu7s_BFu0s, "BFu1s_BFu7s_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu8c_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu8c_BFu0c");
    static BFu1s_BFu8c_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu8c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu8c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1s_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1s_BFu8c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu8c_BFu0c(Test_BFu1s_BFu8c_BFu0c, "BFu1s_BFu8c_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu8c_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu8c_BFu0i");
    static BFu1s_BFu8c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu8c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu8c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1s_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1s_BFu8c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu8c_BFu0i(Test_BFu1s_BFu8c_BFu0i, "BFu1s_BFu8c_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu8c_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu8c_BFu0ll");
    static BFu1s_BFu8c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu8c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu8c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1s_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1s_BFu8c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu8c_BFu0ll(Test_BFu1s_BFu8c_BFu0ll, "BFu1s_BFu8c_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu8c_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu8c_BFu0s");
    static BFu1s_BFu8c_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu8c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu8c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1s_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1s_BFu8c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu8c_BFu0s(Test_BFu1s_BFu8c_BFu0s, "BFu1s_BFu8c_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu8i_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu8i_BFu0c");
    static BFu1s_BFu8i_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu8i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu8i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1s_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1s_BFu8i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu8i_BFu0c(Test_BFu1s_BFu8i_BFu0c, "BFu1s_BFu8i_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu8i_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu8i_BFu0i");
    static BFu1s_BFu8i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu8i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu8i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1s_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1s_BFu8i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu8i_BFu0i(Test_BFu1s_BFu8i_BFu0i, "BFu1s_BFu8i_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu8i_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu8i_BFu0ll");
    static BFu1s_BFu8i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu8i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu8i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1s_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1s_BFu8i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu8i_BFu0ll(Test_BFu1s_BFu8i_BFu0ll, "BFu1s_BFu8i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu8i_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu8i_BFu0s");
    static BFu1s_BFu8i_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu8i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu8i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1s_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1s_BFu8i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu8i_BFu0s(Test_BFu1s_BFu8i_BFu0s, "BFu1s_BFu8i_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu8ll_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu8ll_BFu0c");
    static BFu1s_BFu8ll_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu8ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu8ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1s_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1s_BFu8ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu8ll_BFu0c(Test_BFu1s_BFu8ll_BFu0c, "BFu1s_BFu8ll_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu8ll_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu8ll_BFu0i");
    static BFu1s_BFu8ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu8ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu8ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1s_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1s_BFu8ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu8ll_BFu0i(Test_BFu1s_BFu8ll_BFu0i, "BFu1s_BFu8ll_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu8ll_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu8ll_BFu0ll");
    static BFu1s_BFu8ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu8ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu8ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1s_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1s_BFu8ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu8ll_BFu0ll(Test_BFu1s_BFu8ll_BFu0ll, "BFu1s_BFu8ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu8ll_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu8ll_BFu0s");
    static BFu1s_BFu8ll_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu8ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu8ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1s_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1s_BFu8ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu8ll_BFu0s(Test_BFu1s_BFu8ll_BFu0s, "BFu1s_BFu8ll_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu8s_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu8s_BFu0c");
    static BFu1s_BFu8s_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu8s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu8s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1s_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1s_BFu8s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu8s_BFu0c(Test_BFu1s_BFu8s_BFu0c, "BFu1s_BFu8s_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu8s_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu8s_BFu0i");
    static BFu1s_BFu8s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu8s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu8s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1s_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1s_BFu8s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu8s_BFu0i(Test_BFu1s_BFu8s_BFu0i, "BFu1s_BFu8s_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu8s_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu8s_BFu0ll");
    static BFu1s_BFu8s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu8s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu8s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1s_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1s_BFu8s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu8s_BFu0ll(Test_BFu1s_BFu8s_BFu0ll, "BFu1s_BFu8s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu8s_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu8s_BFu0s");
    static BFu1s_BFu8s_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu8s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu8s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, 1, "BFu1s_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 8, hide_ull(1LL<<7), "BFu1s_BFu8s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu8s_BFu0s(Test_BFu1s_BFu8s_BFu0s, "BFu1s_BFu8s_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu9i_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu9i_BFu0c");
    static BFu1s_BFu9i_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu9i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu9i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1s_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1s_BFu9i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu9i_BFu0c(Test_BFu1s_BFu9i_BFu0c, "BFu1s_BFu9i_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu9i_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu9i_BFu0i");
    static BFu1s_BFu9i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu9i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu9i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1s_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1s_BFu9i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu9i_BFu0i(Test_BFu1s_BFu9i_BFu0i, "BFu1s_BFu9i_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu9i_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu9i_BFu0ll");
    static BFu1s_BFu9i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu9i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu9i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1s_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1s_BFu9i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu9i_BFu0ll(Test_BFu1s_BFu9i_BFu0ll, "BFu1s_BFu9i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu9i_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu9i_BFu0s");
    static BFu1s_BFu9i_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu9i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu9i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1s_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1s_BFu9i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu9i_BFu0s(Test_BFu1s_BFu9i_BFu0s, "BFu1s_BFu9i_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu9ll_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu9ll_BFu0c");
    static BFu1s_BFu9ll_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu9ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu9ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1s_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1s_BFu9ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu9ll_BFu0c(Test_BFu1s_BFu9ll_BFu0c, "BFu1s_BFu9ll_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu9ll_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu9ll_BFu0i");
    static BFu1s_BFu9ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu9ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu9ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1s_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1s_BFu9ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu9ll_BFu0i(Test_BFu1s_BFu9ll_BFu0i, "BFu1s_BFu9ll_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu9ll_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu9ll_BFu0ll");
    static BFu1s_BFu9ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu9ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu9ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1s_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1s_BFu9ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu9ll_BFu0ll(Test_BFu1s_BFu9ll_BFu0ll, "BFu1s_BFu9ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu9ll_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu9ll_BFu0s");
    static BFu1s_BFu9ll_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu9ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu9ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1s_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1s_BFu9ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu9ll_BFu0s(Test_BFu1s_BFu9ll_BFu0s, "BFu1s_BFu9ll_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu9s_BFu0c()
{
  {
    init_simple_test("BFu1s_BFu9s_BFu0c");
    static BFu1s_BFu9s_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu9s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_BFu9s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1s_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1s_BFu9s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu9s_BFu0c(Test_BFu1s_BFu9s_BFu0c, "BFu1s_BFu9s_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu9s_BFu0i()
{
  {
    init_simple_test("BFu1s_BFu9s_BFu0i");
    static BFu1s_BFu9s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_BFu9s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu9s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1s_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1s_BFu9s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu9s_BFu0i(Test_BFu1s_BFu9s_BFu0i, "BFu1s_BFu9s_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu9s_BFu0ll()
{
  {
    init_simple_test("BFu1s_BFu9s_BFu0ll");
    static BFu1s_BFu9s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_BFu9s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu9s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1s_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1s_BFu9s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu9s_BFu0ll(Test_BFu1s_BFu9s_BFu0ll, "BFu1s_BFu9s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_BFu9s_BFu0s()
{
  {
    init_simple_test("BFu1s_BFu9s_BFu0s");
    static BFu1s_BFu9s_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_BFu9s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_BFu9s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, 1, "BFu1s_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 0, 1, 9, hide_ull(1LL<<8), "BFu1s_BFu9s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu1s_BFu9s_BFu0s(Test_BFu1s_BFu9s_BFu0s, "BFu1s_BFu9s_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_C_BFu0c()
{
  {
    init_simple_test("BFu1s_C_BFu0c");
    static BFu1s_C_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_C_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_C_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_C_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1s_C_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_C_BFu0c(Test_BFu1s_C_BFu0c, "BFu1s_C_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_C_BFu0i()
{
  {
    init_simple_test("BFu1s_C_BFu0i");
    static BFu1s_C_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_C_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_C_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_C_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1s_C_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_C_BFu0i(Test_BFu1s_C_BFu0i, "BFu1s_C_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_C_BFu0ll()
{
  {
    init_simple_test("BFu1s_C_BFu0ll");
    static BFu1s_C_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_C_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_C_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_C_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1s_C_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_C_BFu0ll(Test_BFu1s_C_BFu0ll, "BFu1s_C_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_C_BFu0s()
{
  {
    init_simple_test("BFu1s_C_BFu0s");
    static BFu1s_C_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_C_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_C_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_C_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1s_C_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_C_BFu0s(Test_BFu1s_C_BFu0s, "BFu1s_C_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_D_BFu0c()
{
  {
    init_simple_test("BFu1s_D_BFu0c");
    static BFu1s_D_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(BFu1s_D_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_D_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_D_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1s_D_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_D_BFu0c(Test_BFu1s_D_BFu0c, "BFu1s_D_BFu0c", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_D_BFu0i()
{
  {
    init_simple_test("BFu1s_D_BFu0i");
    static BFu1s_D_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu1s_D_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_D_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_D_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1s_D_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_D_BFu0i(Test_BFu1s_D_BFu0i, "BFu1s_D_BFu0i", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_D_BFu0ll()
{
  {
    init_simple_test("BFu1s_D_BFu0ll");
    static BFu1s_D_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu1s_D_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_D_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_D_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1s_D_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_D_BFu0ll(Test_BFu1s_D_BFu0ll, "BFu1s_D_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_D_BFu0s()
{
  {
    init_simple_test("BFu1s_D_BFu0s");
    static BFu1s_D_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu1s_D_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_D_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_D_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1s_D_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_D_BFu0s(Test_BFu1s_D_BFu0s, "BFu1s_D_BFu0s", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_F_BFu0c()
{
  {
    init_simple_test("BFu1s_F_BFu0c");
    static BFu1s_F_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu1s_F_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_F_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_F_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1s_F_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_F_BFu0c(Test_BFu1s_F_BFu0c, "BFu1s_F_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_F_BFu0i()
{
  {
    init_simple_test("BFu1s_F_BFu0i");
    static BFu1s_F_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1s_F_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_F_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_F_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1s_F_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_F_BFu0i(Test_BFu1s_F_BFu0i, "BFu1s_F_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_F_BFu0ll()
{
  {
    init_simple_test("BFu1s_F_BFu0ll");
    static BFu1s_F_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1s_F_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_F_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_F_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1s_F_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_F_BFu0ll(Test_BFu1s_F_BFu0ll, "BFu1s_F_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_F_BFu0s()
{
  {
    init_simple_test("BFu1s_F_BFu0s");
    static BFu1s_F_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1s_F_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_F_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_F_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1s_F_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_F_BFu0s(Test_BFu1s_F_BFu0s, "BFu1s_F_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_I_BFu0c()
{
  {
    init_simple_test("BFu1s_I_BFu0c");
    static BFu1s_I_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu1s_I_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_I_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_I_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1s_I_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_I_BFu0c(Test_BFu1s_I_BFu0c, "BFu1s_I_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_I_BFu0i()
{
  {
    init_simple_test("BFu1s_I_BFu0i");
    static BFu1s_I_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1s_I_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_I_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_I_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1s_I_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_I_BFu0i(Test_BFu1s_I_BFu0i, "BFu1s_I_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_I_BFu0ll()
{
  {
    init_simple_test("BFu1s_I_BFu0ll");
    static BFu1s_I_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1s_I_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_I_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_I_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1s_I_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_I_BFu0ll(Test_BFu1s_I_BFu0ll, "BFu1s_I_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_I_BFu0s()
{
  {
    init_simple_test("BFu1s_I_BFu0s");
    static BFu1s_I_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1s_I_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_I_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_I_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1s_I_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_I_BFu0s(Test_BFu1s_I_BFu0s, "BFu1s_I_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Ip_BFu0c()
{
  {
    init_simple_test("BFu1s_Ip_BFu0c");
    static BFu1s_Ip_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1s_Ip_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Ip_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Ip_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1s_Ip_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_Ip_BFu0c(Test_BFu1s_Ip_BFu0c, "BFu1s_Ip_BFu0c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Ip_BFu0i()
{
  {
    init_simple_test("BFu1s_Ip_BFu0i");
    static BFu1s_Ip_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu1s_Ip_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_Ip_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Ip_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1s_Ip_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_Ip_BFu0i(Test_BFu1s_Ip_BFu0i, "BFu1s_Ip_BFu0i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Ip_BFu0ll()
{
  {
    init_simple_test("BFu1s_Ip_BFu0ll");
    static BFu1s_Ip_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu1s_Ip_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_Ip_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Ip_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1s_Ip_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_Ip_BFu0ll(Test_BFu1s_Ip_BFu0ll, "BFu1s_Ip_BFu0ll", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Ip_BFu0s()
{
  {
    init_simple_test("BFu1s_Ip_BFu0s");
    static BFu1s_Ip_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1s_Ip_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_Ip_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Ip_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1s_Ip_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_Ip_BFu0s(Test_BFu1s_Ip_BFu0s, "BFu1s_Ip_BFu0s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_L_BFu0c()
{
  {
    init_simple_test("BFu1s_L_BFu0c");
    static BFu1s_L_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(BFu1s_L_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_L_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_L_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1s_L_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_L_BFu0c(Test_BFu1s_L_BFu0c, "BFu1s_L_BFu0c", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_L_BFu0i()
{
  {
    init_simple_test("BFu1s_L_BFu0i");
    static BFu1s_L_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu1s_L_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_L_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_L_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1s_L_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_L_BFu0i(Test_BFu1s_L_BFu0i, "BFu1s_L_BFu0i", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_L_BFu0ll()
{
  {
    init_simple_test("BFu1s_L_BFu0ll");
    static BFu1s_L_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu1s_L_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_L_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_L_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1s_L_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_L_BFu0ll(Test_BFu1s_L_BFu0ll, "BFu1s_L_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_L_BFu0s()
{
  {
    init_simple_test("BFu1s_L_BFu0s");
    static BFu1s_L_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu1s_L_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_L_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_L_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1s_L_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_L_BFu0s(Test_BFu1s_L_BFu0s, "BFu1s_L_BFu0s", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_S_BFu0c()
{
  {
    init_simple_test("BFu1s_S_BFu0c");
    static BFu1s_S_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_S_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_S_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_S_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1s_S_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_S_BFu0c(Test_BFu1s_S_BFu0c, "BFu1s_S_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_S_BFu0i()
{
  {
    init_simple_test("BFu1s_S_BFu0i");
    static BFu1s_S_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_S_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_S_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_S_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1s_S_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_S_BFu0i(Test_BFu1s_S_BFu0i, "BFu1s_S_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_S_BFu0ll()
{
  {
    init_simple_test("BFu1s_S_BFu0ll");
    static BFu1s_S_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_S_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_S_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_S_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1s_S_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_S_BFu0ll(Test_BFu1s_S_BFu0ll, "BFu1s_S_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_S_BFu0s()
{
  {
    init_simple_test("BFu1s_S_BFu0s");
    static BFu1s_S_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_S_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_S_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_S_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1s_S_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_S_BFu0s(Test_BFu1s_S_BFu0s, "BFu1s_S_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Uc_BFu0c()
{
  {
    init_simple_test("BFu1s_Uc_BFu0c");
    static BFu1s_Uc_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_Uc_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Uc_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Uc_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1s_Uc_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_Uc_BFu0c(Test_BFu1s_Uc_BFu0c, "BFu1s_Uc_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Uc_BFu0i()
{
  {
    init_simple_test("BFu1s_Uc_BFu0i");
    static BFu1s_Uc_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_Uc_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_Uc_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Uc_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1s_Uc_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_Uc_BFu0i(Test_BFu1s_Uc_BFu0i, "BFu1s_Uc_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Uc_BFu0ll()
{
  {
    init_simple_test("BFu1s_Uc_BFu0ll");
    static BFu1s_Uc_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_Uc_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_Uc_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Uc_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1s_Uc_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_Uc_BFu0ll(Test_BFu1s_Uc_BFu0ll, "BFu1s_Uc_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Uc_BFu0s()
{
  {
    init_simple_test("BFu1s_Uc_BFu0s");
    static BFu1s_Uc_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu1s_Uc_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_Uc_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Uc_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1s_Uc_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_Uc_BFu0s(Test_BFu1s_Uc_BFu0s, "BFu1s_Uc_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Ui_BFu0c()
{
  {
    init_simple_test("BFu1s_Ui_BFu0c");
    static BFu1s_Ui_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu1s_Ui_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Ui_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Ui_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1s_Ui_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_Ui_BFu0c(Test_BFu1s_Ui_BFu0c, "BFu1s_Ui_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Ui_BFu0i()
{
  {
    init_simple_test("BFu1s_Ui_BFu0i");
    static BFu1s_Ui_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1s_Ui_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_Ui_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Ui_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1s_Ui_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_Ui_BFu0i(Test_BFu1s_Ui_BFu0i, "BFu1s_Ui_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Ui_BFu0ll()
{
  {
    init_simple_test("BFu1s_Ui_BFu0ll");
    static BFu1s_Ui_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu1s_Ui_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_Ui_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Ui_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1s_Ui_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_Ui_BFu0ll(Test_BFu1s_Ui_BFu0ll, "BFu1s_Ui_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Ui_BFu0s()
{
  {
    init_simple_test("BFu1s_Ui_BFu0s");
    static BFu1s_Ui_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu1s_Ui_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_Ui_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Ui_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1s_Ui_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_Ui_BFu0s(Test_BFu1s_Ui_BFu0s, "BFu1s_Ui_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Ul_BFu0c()
{
  {
    init_simple_test("BFu1s_Ul_BFu0c");
    static BFu1s_Ul_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(BFu1s_Ul_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Ul_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Ul_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1s_Ul_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_Ul_BFu0c(Test_BFu1s_Ul_BFu0c, "BFu1s_Ul_BFu0c", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Ul_BFu0i()
{
  {
    init_simple_test("BFu1s_Ul_BFu0i");
    static BFu1s_Ul_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu1s_Ul_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_Ul_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Ul_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1s_Ul_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_Ul_BFu0i(Test_BFu1s_Ul_BFu0i, "BFu1s_Ul_BFu0i", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Ul_BFu0ll()
{
  {
    init_simple_test("BFu1s_Ul_BFu0ll");
    static BFu1s_Ul_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu1s_Ul_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_Ul_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Ul_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1s_Ul_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_Ul_BFu0ll(Test_BFu1s_Ul_BFu0ll, "BFu1s_Ul_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Ul_BFu0s()
{
  {
    init_simple_test("BFu1s_Ul_BFu0s");
    static BFu1s_Ul_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu1s_Ul_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_Ul_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Ul_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1s_Ul_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_Ul_BFu0s(Test_BFu1s_Ul_BFu0s, "BFu1s_Ul_BFu0s", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Us_BFu0c()
{
  {
    init_simple_test("BFu1s_Us_BFu0c");
    static BFu1s_Us_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu1s_Us_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Us_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Us_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1s_Us_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_Us_BFu0c(Test_BFu1s_Us_BFu0c, "BFu1s_Us_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Us_BFu0i()
{
  {
    init_simple_test("BFu1s_Us_BFu0i");
    static BFu1s_Us_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_Us_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_Us_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Us_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1s_Us_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_Us_BFu0i(Test_BFu1s_Us_BFu0i, "BFu1s_Us_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Us_BFu0ll()
{
  {
    init_simple_test("BFu1s_Us_BFu0ll");
    static BFu1s_Us_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu1s_Us_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_Us_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Us_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1s_Us_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_Us_BFu0ll(Test_BFu1s_Us_BFu0ll, "BFu1s_Us_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Us_BFu0s()
{
  {
    init_simple_test("BFu1s_Us_BFu0s");
    static BFu1s_Us_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu1s_Us_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_Us_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Us_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1s_Us_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_Us_BFu0s(Test_BFu1s_Us_BFu0s, "BFu1s_Us_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Vp_BFu0c()
{
  {
    init_simple_test("BFu1s_Vp_BFu0c");
    static BFu1s_Vp_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu1s_Vp_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu1s_Vp_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Vp_BFu0c");
    check_field_offset(lv, v2, 1, "BFu1s_Vp_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_Vp_BFu0c(Test_BFu1s_Vp_BFu0c, "BFu1s_Vp_BFu0c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Vp_BFu0i()
{
  {
    init_simple_test("BFu1s_Vp_BFu0i");
    static BFu1s_Vp_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu1s_Vp_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_Vp_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Vp_BFu0i");
    check_field_offset(lv, v2, 1, "BFu1s_Vp_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_Vp_BFu0i(Test_BFu1s_Vp_BFu0i, "BFu1s_Vp_BFu0i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Vp_BFu0ll()
{
  {
    init_simple_test("BFu1s_Vp_BFu0ll");
    static BFu1s_Vp_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu1s_Vp_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_Vp_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Vp_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu1s_Vp_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_Vp_BFu0ll(Test_BFu1s_Vp_BFu0ll, "BFu1s_Vp_BFu0ll", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu1s_Vp_BFu0s()
{
  {
    init_simple_test("BFu1s_Vp_BFu0s");
    static BFu1s_Vp_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu1s_Vp_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu1s_Vp_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 1, 1, "BFu1s_Vp_BFu0s");
    check_field_offset(lv, v2, 1, "BFu1s_Vp_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu1s_Vp_BFu0s(Test_BFu1s_Vp_BFu0s, "BFu1s_Vp_BFu0s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu0c");
    static BFu31i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu31i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c(Test_BFu31i_BFu0c, "BFu31i_BFu0c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu0c");
    static BFu31i_BFu0c_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu31i_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu0c(Test_BFu31i_BFu0c_BFu0c, "BFu31i_BFu0c_BFu0c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu0i");
    static BFu31i_BFu0c_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu31i_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu0i(Test_BFu31i_BFu0c_BFu0i, "BFu31i_BFu0c_BFu0i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu0ll");
    static BFu31i_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu31i_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu0ll(Test_BFu31i_BFu0c_BFu0ll, "BFu31i_BFu0c_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu0s");
    static BFu31i_BFu0c_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu31i_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu0s(Test_BFu31i_BFu0c_BFu0s, "BFu31i_BFu0c_BFu0s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu15i()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu15i");
    static BFu31i_BFu0c_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu0c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu31i_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu31i_BFu0c_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu15i(Test_BFu31i_BFu0c_BFu15i, "BFu31i_BFu0c_BFu15i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu15ll()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu15ll");
    static BFu31i_BFu0c_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu0c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu31i_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu31i_BFu0c_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu15ll(Test_BFu31i_BFu0c_BFu15ll, "BFu31i_BFu0c_BFu15ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu15s()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu15s");
    static BFu31i_BFu0c_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu0c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu31i_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu31i_BFu0c_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu15s(Test_BFu31i_BFu0c_BFu15s, "BFu31i_BFu0c_BFu15s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu16i()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu16i");
    static BFu31i_BFu0c_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu0c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu31i_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu31i_BFu0c_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu16i(Test_BFu31i_BFu0c_BFu16i, "BFu31i_BFu0c_BFu16i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu16ll()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu16ll");
    static BFu31i_BFu0c_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu0c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu31i_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu31i_BFu0c_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu16ll(Test_BFu31i_BFu0c_BFu16ll, "BFu31i_BFu0c_BFu16ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu16s()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu16s");
    static BFu31i_BFu0c_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu0c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu31i_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu31i_BFu0c_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu16s(Test_BFu31i_BFu0c_BFu16s, "BFu31i_BFu0c_BFu16s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu17i()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu17i");
    static BFu31i_BFu0c_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(BFu31i_BFu0c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu31i_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu31i_BFu0c_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu17i(Test_BFu31i_BFu0c_BFu17i, "BFu31i_BFu0c_BFu17i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu17ll()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu17ll");
    static BFu31i_BFu0c_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(BFu31i_BFu0c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu31i_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu31i_BFu0c_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu17ll(Test_BFu31i_BFu0c_BFu17ll, "BFu31i_BFu0c_BFu17ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu1c()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu1c");
    static BFu31i_BFu0c_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu0c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu1c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu31i_BFu0c_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu1c(Test_BFu31i_BFu0c_BFu1c, "BFu31i_BFu0c_BFu1c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu1i()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu1i");
    static BFu31i_BFu0c_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu0c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu1i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu31i_BFu0c_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu1i(Test_BFu31i_BFu0c_BFu1i, "BFu31i_BFu0c_BFu1i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu1ll()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu1ll");
    static BFu31i_BFu0c_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu0c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu1ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu31i_BFu0c_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu1ll(Test_BFu31i_BFu0c_BFu1ll, "BFu31i_BFu0c_BFu1ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu1s()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu1s");
    static BFu31i_BFu0c_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu0c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu1s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu31i_BFu0c_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu1s(Test_BFu31i_BFu0c_BFu1s, "BFu31i_BFu0c_BFu1s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu31i()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu31i");
    static BFu31i_BFu0c_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu0c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu31i_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu31i(Test_BFu31i_BFu0c_BFu31i, "BFu31i_BFu0c_BFu31i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu31ll()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu31ll");
    static BFu31i_BFu0c_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu0c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu31i_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu31ll(Test_BFu31i_BFu0c_BFu31ll, "BFu31i_BFu0c_BFu31ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu32i()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu32i");
    static BFu31i_BFu0c_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu0c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu31i_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu31i_BFu0c_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu32i(Test_BFu31i_BFu0c_BFu32i, "BFu31i_BFu0c_BFu32i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu32ll()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu32ll");
    static BFu31i_BFu0c_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu0c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu31i_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu31i_BFu0c_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu32ll(Test_BFu31i_BFu0c_BFu32ll, "BFu31i_BFu0c_BFu32ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu33()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu33");
    static BFu31i_BFu0c_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(BFu31i_BFu0c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "BFu31i_BFu0c_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "BFu31i_BFu0c_BFu33");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu33(Test_BFu31i_BFu0c_BFu33, "BFu31i_BFu0c_BFu33", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu7c()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu7c");
    static BFu31i_BFu0c_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu0c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu31i_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu31i_BFu0c_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu7c(Test_BFu31i_BFu0c_BFu7c, "BFu31i_BFu0c_BFu7c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu7i()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu7i");
    static BFu31i_BFu0c_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu0c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu31i_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu31i_BFu0c_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu7i(Test_BFu31i_BFu0c_BFu7i, "BFu31i_BFu0c_BFu7i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu7ll()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu7ll");
    static BFu31i_BFu0c_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu0c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu31i_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu31i_BFu0c_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu7ll(Test_BFu31i_BFu0c_BFu7ll, "BFu31i_BFu0c_BFu7ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu7s()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu7s");
    static BFu31i_BFu0c_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu0c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu31i_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu31i_BFu0c_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu7s(Test_BFu31i_BFu0c_BFu7s, "BFu31i_BFu0c_BFu7s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu8c()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu8c");
    static BFu31i_BFu0c_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu0c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu31i_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu31i_BFu0c_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu8c(Test_BFu31i_BFu0c_BFu8c, "BFu31i_BFu0c_BFu8c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu8i()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu8i");
    static BFu31i_BFu0c_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu0c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu31i_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu31i_BFu0c_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu8i(Test_BFu31i_BFu0c_BFu8i, "BFu31i_BFu0c_BFu8i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu8ll()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu8ll");
    static BFu31i_BFu0c_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu0c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu31i_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu31i_BFu0c_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu8ll(Test_BFu31i_BFu0c_BFu8ll, "BFu31i_BFu0c_BFu8ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu8s()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu8s");
    static BFu31i_BFu0c_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu0c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu31i_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu31i_BFu0c_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu8s(Test_BFu31i_BFu0c_BFu8s, "BFu31i_BFu0c_BFu8s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu9i()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu9i");
    static BFu31i_BFu0c_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu0c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu31i_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu31i_BFu0c_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu9i(Test_BFu31i_BFu0c_BFu9i, "BFu31i_BFu0c_BFu9i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu9ll()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu9ll");
    static BFu31i_BFu0c_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu0c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu31i_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu31i_BFu0c_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu9ll(Test_BFu31i_BFu0c_BFu9ll, "BFu31i_BFu0c_BFu9ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_BFu9s()
{
  {
    init_simple_test("BFu31i_BFu0c_BFu9s");
    static BFu31i_BFu0c_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu0c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu31i_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu31i_BFu0c_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_BFu9s(Test_BFu31i_BFu0c_BFu9s, "BFu31i_BFu0c_BFu9s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_C()
{
  {
    init_simple_test("BFu31i_BFu0c_C");
    static BFu31i_BFu0c_C lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu0c_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_C)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_C");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_C");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0c_C.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_C(Test_BFu31i_BFu0c_C, "BFu31i_BFu0c_C", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_D()
{
  {
    init_simple_test("BFu31i_BFu0c_D");
    static BFu31i_BFu0c_D lv;
    check2(sizeof(lv), 12, "sizeof(BFu31i_BFu0c_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_D)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_D");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_D");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0c_D.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_D(Test_BFu31i_BFu0c_D, "BFu31i_BFu0c_D", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_F()
{
  {
    init_simple_test("BFu31i_BFu0c_F");
    static BFu31i_BFu0c_F lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu0c_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_F)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_F");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_F");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0c_F.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_F(Test_BFu31i_BFu0c_F, "BFu31i_BFu0c_F", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_I()
{
  {
    init_simple_test("BFu31i_BFu0c_I");
    static BFu31i_BFu0c_I lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu0c_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_I)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_I");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_I");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0c_I.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_I(Test_BFu31i_BFu0c_I, "BFu31i_BFu0c_I", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_Ip()
{
  {
    init_simple_test("BFu31i_BFu0c_Ip");
    static BFu31i_BFu0c_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31i_BFu0c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_Ip");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_Ip");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0c_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_Ip(Test_BFu31i_BFu0c_Ip, "BFu31i_BFu0c_Ip", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_L()
{
  {
    init_simple_test("BFu31i_BFu0c_L");
    static BFu31i_BFu0c_L lv;
    check2(sizeof(lv), 12, "sizeof(BFu31i_BFu0c_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_L)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_L");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_L");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0c_L.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_L(Test_BFu31i_BFu0c_L, "BFu31i_BFu0c_L", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_S()
{
  {
    init_simple_test("BFu31i_BFu0c_S");
    static BFu31i_BFu0c_S lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu0c_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_S)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_S");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_S");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0c_S.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_S(Test_BFu31i_BFu0c_S, "BFu31i_BFu0c_S", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_Uc()
{
  {
    init_simple_test("BFu31i_BFu0c_Uc");
    static BFu31i_BFu0c_Uc lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu0c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_Uc");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_Uc");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0c_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_Uc(Test_BFu31i_BFu0c_Uc, "BFu31i_BFu0c_Uc", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_Ui()
{
  {
    init_simple_test("BFu31i_BFu0c_Ui");
    static BFu31i_BFu0c_Ui lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu0c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_Ui");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_Ui");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0c_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_Ui(Test_BFu31i_BFu0c_Ui, "BFu31i_BFu0c_Ui", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_Ul()
{
  {
    init_simple_test("BFu31i_BFu0c_Ul");
    static BFu31i_BFu0c_Ul lv;
    check2(sizeof(lv), 12, "sizeof(BFu31i_BFu0c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_Ul");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_Ul");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0c_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_Ul(Test_BFu31i_BFu0c_Ul, "BFu31i_BFu0c_Ul", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_Us()
{
  {
    init_simple_test("BFu31i_BFu0c_Us");
    static BFu31i_BFu0c_Us lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu0c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_Us)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_Us");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_Us");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0c_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_Us(Test_BFu31i_BFu0c_Us, "BFu31i_BFu0c_Us", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0c_Vp()
{
  {
    init_simple_test("BFu31i_BFu0c_Vp");
    static BFu31i_BFu0c_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31i_BFu0c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu0c_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0c_Vp");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0c_Vp");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0c_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0c_Vp(Test_BFu31i_BFu0c_Vp, "BFu31i_BFu0c_Vp", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu0i");
    static BFu31i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu31i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i(Test_BFu31i_BFu0i, "BFu31i_BFu0i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu0c");
    static BFu31i_BFu0i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu31i_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu0c(Test_BFu31i_BFu0i_BFu0c, "BFu31i_BFu0i_BFu0c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu0i");
    static BFu31i_BFu0i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu31i_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu0i(Test_BFu31i_BFu0i_BFu0i, "BFu31i_BFu0i_BFu0i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu0ll");
    static BFu31i_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu31i_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu0ll(Test_BFu31i_BFu0i_BFu0ll, "BFu31i_BFu0i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu0s");
    static BFu31i_BFu0i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu31i_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu0s(Test_BFu31i_BFu0i_BFu0s, "BFu31i_BFu0i_BFu0s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu15i()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu15i");
    static BFu31i_BFu0i_BFu15i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31i_BFu0i_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu31i_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu31i_BFu0i_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu15i(Test_BFu31i_BFu0i_BFu15i, "BFu31i_BFu0i_BFu15i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu15ll()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu15ll");
    static BFu31i_BFu0i_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31i_BFu0i_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu31i_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu31i_BFu0i_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu15ll(Test_BFu31i_BFu0i_BFu15ll, "BFu31i_BFu0i_BFu15ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu15s()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu15s");
    static BFu31i_BFu0i_BFu15s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31i_BFu0i_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu31i_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu31i_BFu0i_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu15s(Test_BFu31i_BFu0i_BFu15s, "BFu31i_BFu0i_BFu15s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu16i()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu16i");
    static BFu31i_BFu0i_BFu16i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31i_BFu0i_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu31i_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu31i_BFu0i_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu16i(Test_BFu31i_BFu0i_BFu16i, "BFu31i_BFu0i_BFu16i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu16ll()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu16ll");
    static BFu31i_BFu0i_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31i_BFu0i_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu31i_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu31i_BFu0i_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu16ll(Test_BFu31i_BFu0i_BFu16ll, "BFu31i_BFu0i_BFu16ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu16s()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu16s");
    static BFu31i_BFu0i_BFu16s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31i_BFu0i_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu31i_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu31i_BFu0i_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu16s(Test_BFu31i_BFu0i_BFu16s, "BFu31i_BFu0i_BFu16s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu17i()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu17i");
    static BFu31i_BFu0i_BFu17i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu31i_BFu0i_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu31i_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu31i_BFu0i_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu17i(Test_BFu31i_BFu0i_BFu17i, "BFu31i_BFu0i_BFu17i", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu17ll()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu17ll");
    static BFu31i_BFu0i_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu31i_BFu0i_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu31i_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu31i_BFu0i_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu17ll(Test_BFu31i_BFu0i_BFu17ll, "BFu31i_BFu0i_BFu17ll", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu1c()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu1c");
    static BFu31i_BFu0i_BFu1c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31i_BFu0i_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu1c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu31i_BFu0i_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu1c(Test_BFu31i_BFu0i_BFu1c, "BFu31i_BFu0i_BFu1c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu1i()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu1i");
    static BFu31i_BFu0i_BFu1i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31i_BFu0i_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu1i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu31i_BFu0i_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu1i(Test_BFu31i_BFu0i_BFu1i, "BFu31i_BFu0i_BFu1i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu1ll()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu1ll");
    static BFu31i_BFu0i_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31i_BFu0i_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu1ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu31i_BFu0i_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu1ll(Test_BFu31i_BFu0i_BFu1ll, "BFu31i_BFu0i_BFu1ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu1s()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu1s");
    static BFu31i_BFu0i_BFu1s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31i_BFu0i_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu1s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu31i_BFu0i_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu1s(Test_BFu31i_BFu0i_BFu1s, "BFu31i_BFu0i_BFu1s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu31i()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu31i");
    static BFu31i_BFu0i_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu0i_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu31i_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu31i(Test_BFu31i_BFu0i_BFu31i, "BFu31i_BFu0i_BFu31i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu31ll()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu31ll");
    static BFu31i_BFu0i_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu0i_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu31i_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu31ll(Test_BFu31i_BFu0i_BFu31ll, "BFu31i_BFu0i_BFu31ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu32i()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu32i");
    static BFu31i_BFu0i_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu0i_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu31i_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu31i_BFu0i_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu32i(Test_BFu31i_BFu0i_BFu32i, "BFu31i_BFu0i_BFu32i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu32ll()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu32ll");
    static BFu31i_BFu0i_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu0i_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu31i_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu31i_BFu0i_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu32ll(Test_BFu31i_BFu0i_BFu32ll, "BFu31i_BFu0i_BFu32ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu33()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu33");
    static BFu31i_BFu0i_BFu33 lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu31i_BFu0i_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "BFu31i_BFu0i_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "BFu31i_BFu0i_BFu33");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu33(Test_BFu31i_BFu0i_BFu33, "BFu31i_BFu0i_BFu33", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu7c()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu7c");
    static BFu31i_BFu0i_BFu7c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31i_BFu0i_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu31i_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu31i_BFu0i_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu7c(Test_BFu31i_BFu0i_BFu7c, "BFu31i_BFu0i_BFu7c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu7i()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu7i");
    static BFu31i_BFu0i_BFu7i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31i_BFu0i_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu31i_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu31i_BFu0i_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu7i(Test_BFu31i_BFu0i_BFu7i, "BFu31i_BFu0i_BFu7i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu7ll()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu7ll");
    static BFu31i_BFu0i_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31i_BFu0i_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu31i_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu31i_BFu0i_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu7ll(Test_BFu31i_BFu0i_BFu7ll, "BFu31i_BFu0i_BFu7ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu7s()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu7s");
    static BFu31i_BFu0i_BFu7s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31i_BFu0i_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu31i_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu31i_BFu0i_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu7s(Test_BFu31i_BFu0i_BFu7s, "BFu31i_BFu0i_BFu7s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu8c()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu8c");
    static BFu31i_BFu0i_BFu8c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31i_BFu0i_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu31i_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu31i_BFu0i_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu8c(Test_BFu31i_BFu0i_BFu8c, "BFu31i_BFu0i_BFu8c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu8i()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu8i");
    static BFu31i_BFu0i_BFu8i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31i_BFu0i_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu31i_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu31i_BFu0i_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu8i(Test_BFu31i_BFu0i_BFu8i, "BFu31i_BFu0i_BFu8i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu8ll()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu8ll");
    static BFu31i_BFu0i_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31i_BFu0i_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu31i_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu31i_BFu0i_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu8ll(Test_BFu31i_BFu0i_BFu8ll, "BFu31i_BFu0i_BFu8ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu8s()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu8s");
    static BFu31i_BFu0i_BFu8s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31i_BFu0i_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu31i_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu31i_BFu0i_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu8s(Test_BFu31i_BFu0i_BFu8s, "BFu31i_BFu0i_BFu8s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu9i()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu9i");
    static BFu31i_BFu0i_BFu9i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31i_BFu0i_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu31i_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu31i_BFu0i_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu9i(Test_BFu31i_BFu0i_BFu9i, "BFu31i_BFu0i_BFu9i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu9ll()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu9ll");
    static BFu31i_BFu0i_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31i_BFu0i_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu31i_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu31i_BFu0i_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu9ll(Test_BFu31i_BFu0i_BFu9ll, "BFu31i_BFu0i_BFu9ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_BFu9s()
{
  {
    init_simple_test("BFu31i_BFu0i_BFu9s");
    static BFu31i_BFu0i_BFu9s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31i_BFu0i_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu31i_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu31i_BFu0i_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_BFu9s(Test_BFu31i_BFu0i_BFu9s, "BFu31i_BFu0i_BFu9s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_C()
{
  {
    init_simple_test("BFu31i_BFu0i_C");
    static BFu31i_BFu0i_C lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31i_BFu0i_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_C)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_C");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_C");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0i_C.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_C(Test_BFu31i_BFu0i_C, "BFu31i_BFu0i_C", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_D()
{
  {
    init_simple_test("BFu31i_BFu0i_D");
    static BFu31i_BFu0i_D lv;
    check2(sizeof(lv), 12, "sizeof(BFu31i_BFu0i_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_D)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_D");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_D");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0i_D.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_D(Test_BFu31i_BFu0i_D, "BFu31i_BFu0i_D", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_F()
{
  {
    init_simple_test("BFu31i_BFu0i_F");
    static BFu31i_BFu0i_F lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu0i_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_F)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_F");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_F");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0i_F.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_F(Test_BFu31i_BFu0i_F, "BFu31i_BFu0i_F", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_I()
{
  {
    init_simple_test("BFu31i_BFu0i_I");
    static BFu31i_BFu0i_I lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu0i_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_I)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_I");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_I");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0i_I.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_I(Test_BFu31i_BFu0i_I, "BFu31i_BFu0i_I", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_Ip()
{
  {
    init_simple_test("BFu31i_BFu0i_Ip");
    static BFu31i_BFu0i_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31i_BFu0i_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_Ip");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_Ip");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0i_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_Ip(Test_BFu31i_BFu0i_Ip, "BFu31i_BFu0i_Ip", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_L()
{
  {
    init_simple_test("BFu31i_BFu0i_L");
    static BFu31i_BFu0i_L lv;
    check2(sizeof(lv), 12, "sizeof(BFu31i_BFu0i_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_L)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_L");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_L");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0i_L.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_L(Test_BFu31i_BFu0i_L, "BFu31i_BFu0i_L", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_S()
{
  {
    init_simple_test("BFu31i_BFu0i_S");
    static BFu31i_BFu0i_S lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31i_BFu0i_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_S)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_S");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_S");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0i_S.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_S(Test_BFu31i_BFu0i_S, "BFu31i_BFu0i_S", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_Uc()
{
  {
    init_simple_test("BFu31i_BFu0i_Uc");
    static BFu31i_BFu0i_Uc lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31i_BFu0i_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_Uc");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_Uc");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0i_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_Uc(Test_BFu31i_BFu0i_Uc, "BFu31i_BFu0i_Uc", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_Ui()
{
  {
    init_simple_test("BFu31i_BFu0i_Ui");
    static BFu31i_BFu0i_Ui lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu0i_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_Ui");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_Ui");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0i_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_Ui(Test_BFu31i_BFu0i_Ui, "BFu31i_BFu0i_Ui", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_Ul()
{
  {
    init_simple_test("BFu31i_BFu0i_Ul");
    static BFu31i_BFu0i_Ul lv;
    check2(sizeof(lv), 12, "sizeof(BFu31i_BFu0i_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_Ul");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_Ul");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0i_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_Ul(Test_BFu31i_BFu0i_Ul, "BFu31i_BFu0i_Ul", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_Us()
{
  {
    init_simple_test("BFu31i_BFu0i_Us");
    static BFu31i_BFu0i_Us lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31i_BFu0i_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_Us)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_Us");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_Us");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0i_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_Us(Test_BFu31i_BFu0i_Us, "BFu31i_BFu0i_Us", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0i_Vp()
{
  {
    init_simple_test("BFu31i_BFu0i_Vp");
    static BFu31i_BFu0i_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31i_BFu0i_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0i_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0i_Vp");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0i_Vp");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0i_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0i_Vp(Test_BFu31i_BFu0i_Vp, "BFu31i_BFu0i_Vp", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu0ll");
    static BFu31i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu31i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll(Test_BFu31i_BFu0ll, "BFu31i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu0c");
    static BFu31i_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu31i_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu0c(Test_BFu31i_BFu0ll_BFu0c, "BFu31i_BFu0ll_BFu0c", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu0i");
    static BFu31i_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu31i_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu0i(Test_BFu31i_BFu0ll_BFu0i, "BFu31i_BFu0ll_BFu0i", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu0ll");
    static BFu31i_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu31i_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu0ll(Test_BFu31i_BFu0ll_BFu0ll, "BFu31i_BFu0ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu0s");
    static BFu31i_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu31i_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu0s(Test_BFu31i_BFu0ll_BFu0s, "BFu31i_BFu0ll_BFu0s", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu15i()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu15i");
    static BFu31i_BFu0ll_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu31i_BFu0ll_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "BFu31i_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "BFu31i_BFu0ll_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu15i(Test_BFu31i_BFu0ll_BFu15i, "BFu31i_BFu0ll_BFu15i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu15ll()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu15ll");
    static BFu31i_BFu0ll_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu31i_BFu0ll_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "BFu31i_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "BFu31i_BFu0ll_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu15ll(Test_BFu31i_BFu0ll_BFu15ll, "BFu31i_BFu0ll_BFu15ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu15s()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu15s");
    static BFu31i_BFu0ll_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu31i_BFu0ll_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "BFu31i_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "BFu31i_BFu0ll_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu15s(Test_BFu31i_BFu0ll_BFu15s, "BFu31i_BFu0ll_BFu15s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu16i()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu16i");
    static BFu31i_BFu0ll_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu31i_BFu0ll_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "BFu31i_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "BFu31i_BFu0ll_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu16i(Test_BFu31i_BFu0ll_BFu16i, "BFu31i_BFu0ll_BFu16i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu16ll()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu16ll");
    static BFu31i_BFu0ll_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu31i_BFu0ll_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "BFu31i_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "BFu31i_BFu0ll_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu16ll(Test_BFu31i_BFu0ll_BFu16ll, "BFu31i_BFu0ll_BFu16ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu16s()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu16s");
    static BFu31i_BFu0ll_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu31i_BFu0ll_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "BFu31i_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "BFu31i_BFu0ll_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu16s(Test_BFu31i_BFu0ll_BFu16s, "BFu31i_BFu0ll_BFu16s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu17i()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu17i");
    static BFu31i_BFu0ll_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu31i_BFu0ll_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "BFu31i_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "BFu31i_BFu0ll_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu17i(Test_BFu31i_BFu0ll_BFu17i, "BFu31i_BFu0ll_BFu17i", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu17ll()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu17ll");
    static BFu31i_BFu0ll_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu31i_BFu0ll_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "BFu31i_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "BFu31i_BFu0ll_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu17ll(Test_BFu31i_BFu0ll_BFu17ll, "BFu31i_BFu0ll_BFu17ll", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu1c()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu1c");
    static BFu31i_BFu0ll_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu31i_BFu0ll_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu31i_BFu0ll_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu1c(Test_BFu31i_BFu0ll_BFu1c, "BFu31i_BFu0ll_BFu1c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu1i()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu1i");
    static BFu31i_BFu0ll_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu31i_BFu0ll_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu31i_BFu0ll_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu1i(Test_BFu31i_BFu0ll_BFu1i, "BFu31i_BFu0ll_BFu1i", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu1ll()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu1ll");
    static BFu31i_BFu0ll_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu31i_BFu0ll_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu31i_BFu0ll_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu1ll(Test_BFu31i_BFu0ll_BFu1ll, "BFu31i_BFu0ll_BFu1ll", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu1s()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu1s");
    static BFu31i_BFu0ll_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu31i_BFu0ll_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu31i_BFu0ll_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu1s(Test_BFu31i_BFu0ll_BFu1s, "BFu31i_BFu0ll_BFu1s", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu31i()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu31i");
    static BFu31i_BFu0ll_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31i_BFu0ll_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "BFu31i_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu31i(Test_BFu31i_BFu0ll_BFu31i, "BFu31i_BFu0ll_BFu31i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu31ll()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu31ll");
    static BFu31i_BFu0ll_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31i_BFu0ll_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "BFu31i_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu31ll(Test_BFu31i_BFu0ll_BFu31ll, "BFu31i_BFu0ll_BFu31ll", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu32i()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu32i");
    static BFu31i_BFu0ll_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31i_BFu0ll_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "BFu31i_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "BFu31i_BFu0ll_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu32i(Test_BFu31i_BFu0ll_BFu32i, "BFu31i_BFu0ll_BFu32i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu32ll()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu32ll");
    static BFu31i_BFu0ll_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31i_BFu0ll_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "BFu31i_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "BFu31i_BFu0ll_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu32ll(Test_BFu31i_BFu0ll_BFu32ll, "BFu31i_BFu0ll_BFu32ll", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu33()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu33");
    static BFu31i_BFu0ll_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(BFu31i_BFu0ll_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, 1, "BFu31i_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, hide_ull(1LL<<32), "BFu31i_BFu0ll_BFu33");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu33(Test_BFu31i_BFu0ll_BFu33, "BFu31i_BFu0ll_BFu33", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu7c()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu7c");
    static BFu31i_BFu0ll_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu31i_BFu0ll_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu31i_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu31i_BFu0ll_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu7c(Test_BFu31i_BFu0ll_BFu7c, "BFu31i_BFu0ll_BFu7c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu7i()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu7i");
    static BFu31i_BFu0ll_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu31i_BFu0ll_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu31i_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu31i_BFu0ll_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu7i(Test_BFu31i_BFu0ll_BFu7i, "BFu31i_BFu0ll_BFu7i", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu7ll()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu7ll");
    static BFu31i_BFu0ll_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu31i_BFu0ll_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu31i_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu31i_BFu0ll_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu7ll(Test_BFu31i_BFu0ll_BFu7ll, "BFu31i_BFu0ll_BFu7ll", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu7s()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu7s");
    static BFu31i_BFu0ll_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu31i_BFu0ll_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu31i_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu31i_BFu0ll_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu7s(Test_BFu31i_BFu0ll_BFu7s, "BFu31i_BFu0ll_BFu7s", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu8c()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu8c");
    static BFu31i_BFu0ll_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu31i_BFu0ll_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu31i_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu31i_BFu0ll_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu8c(Test_BFu31i_BFu0ll_BFu8c, "BFu31i_BFu0ll_BFu8c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu8i()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu8i");
    static BFu31i_BFu0ll_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu31i_BFu0ll_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu31i_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu31i_BFu0ll_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu8i(Test_BFu31i_BFu0ll_BFu8i, "BFu31i_BFu0ll_BFu8i", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu8ll()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu8ll");
    static BFu31i_BFu0ll_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu31i_BFu0ll_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu31i_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu31i_BFu0ll_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu8ll(Test_BFu31i_BFu0ll_BFu8ll, "BFu31i_BFu0ll_BFu8ll", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu8s()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu8s");
    static BFu31i_BFu0ll_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu31i_BFu0ll_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu31i_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu31i_BFu0ll_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu8s(Test_BFu31i_BFu0ll_BFu8s, "BFu31i_BFu0ll_BFu8s", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu9i()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu9i");
    static BFu31i_BFu0ll_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu31i_BFu0ll_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "BFu31i_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "BFu31i_BFu0ll_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu9i(Test_BFu31i_BFu0ll_BFu9i, "BFu31i_BFu0ll_BFu9i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu9ll()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu9ll");
    static BFu31i_BFu0ll_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu31i_BFu0ll_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "BFu31i_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "BFu31i_BFu0ll_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu9ll(Test_BFu31i_BFu0ll_BFu9ll, "BFu31i_BFu0ll_BFu9ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_BFu9s()
{
  {
    init_simple_test("BFu31i_BFu0ll_BFu9s");
    static BFu31i_BFu0ll_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu31i_BFu0ll_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "BFu31i_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "BFu31i_BFu0ll_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_BFu9s(Test_BFu31i_BFu0ll_BFu9s, "BFu31i_BFu0ll_BFu9s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_C()
{
  {
    init_simple_test("BFu31i_BFu0ll_C");
    static BFu31i_BFu0ll_C lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu31i_BFu0ll_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_C)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_C");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_C");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu31i_BFu0ll_C.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_C(Test_BFu31i_BFu0ll_C, "BFu31i_BFu0ll_C", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_D()
{
  {
    init_simple_test("BFu31i_BFu0ll_D");
    static BFu31i_BFu0ll_D lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu31i_BFu0ll_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_D)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_D");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_D");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu31i_BFu0ll_D.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_D(Test_BFu31i_BFu0ll_D, "BFu31i_BFu0ll_D", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_F()
{
  {
    init_simple_test("BFu31i_BFu0ll_F");
    static BFu31i_BFu0ll_F lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31i_BFu0ll_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_F)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_F");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_F");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu31i_BFu0ll_F.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_F(Test_BFu31i_BFu0ll_F, "BFu31i_BFu0ll_F", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_I()
{
  {
    init_simple_test("BFu31i_BFu0ll_I");
    static BFu31i_BFu0ll_I lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31i_BFu0ll_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_I)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_I");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_I");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu31i_BFu0ll_I.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_I(Test_BFu31i_BFu0ll_I, "BFu31i_BFu0ll_I", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_Ip()
{
  {
    init_simple_test("BFu31i_BFu0ll_Ip");
    static BFu31i_BFu0ll_Ip lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu31i_BFu0ll_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_Ip");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_Ip");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu31i_BFu0ll_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_Ip(Test_BFu31i_BFu0ll_Ip, "BFu31i_BFu0ll_Ip", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_L()
{
  {
    init_simple_test("BFu31i_BFu0ll_L");
    static BFu31i_BFu0ll_L lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu31i_BFu0ll_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_L)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_L");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_L");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu31i_BFu0ll_L.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_L(Test_BFu31i_BFu0ll_L, "BFu31i_BFu0ll_L", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_S()
{
  {
    init_simple_test("BFu31i_BFu0ll_S");
    static BFu31i_BFu0ll_S lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu31i_BFu0ll_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_S)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_S");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_S");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu31i_BFu0ll_S.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_S(Test_BFu31i_BFu0ll_S, "BFu31i_BFu0ll_S", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_Uc()
{
  {
    init_simple_test("BFu31i_BFu0ll_Uc");
    static BFu31i_BFu0ll_Uc lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu31i_BFu0ll_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_Uc");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_Uc");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu31i_BFu0ll_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_Uc(Test_BFu31i_BFu0ll_Uc, "BFu31i_BFu0ll_Uc", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_Ui()
{
  {
    init_simple_test("BFu31i_BFu0ll_Ui");
    static BFu31i_BFu0ll_Ui lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31i_BFu0ll_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_Ui");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_Ui");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu31i_BFu0ll_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_Ui(Test_BFu31i_BFu0ll_Ui, "BFu31i_BFu0ll_Ui", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_Ul()
{
  {
    init_simple_test("BFu31i_BFu0ll_Ul");
    static BFu31i_BFu0ll_Ul lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu31i_BFu0ll_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_Ul");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_Ul");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu31i_BFu0ll_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_Ul(Test_BFu31i_BFu0ll_Ul, "BFu31i_BFu0ll_Ul", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_Us()
{
  {
    init_simple_test("BFu31i_BFu0ll_Us");
    static BFu31i_BFu0ll_Us lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu31i_BFu0ll_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_Us)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_Us");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_Us");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu31i_BFu0ll_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_Us(Test_BFu31i_BFu0ll_Us, "BFu31i_BFu0ll_Us", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0ll_Vp()
{
  {
    init_simple_test("BFu31i_BFu0ll_Vp");
    static BFu31i_BFu0ll_Vp lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu31i_BFu0ll_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0ll_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0ll_Vp");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0ll_Vp");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu31i_BFu0ll_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0ll_Vp(Test_BFu31i_BFu0ll_Vp, "BFu31i_BFu0ll_Vp", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu0s");
    static BFu31i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu31i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s(Test_BFu31i_BFu0s, "BFu31i_BFu0s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu0c");
    static BFu31i_BFu0s_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu31i_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu0c(Test_BFu31i_BFu0s_BFu0c, "BFu31i_BFu0s_BFu0c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu0i");
    static BFu31i_BFu0s_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu31i_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu0i(Test_BFu31i_BFu0s_BFu0i, "BFu31i_BFu0s_BFu0i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu0ll");
    static BFu31i_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu31i_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu0ll(Test_BFu31i_BFu0s_BFu0ll, "BFu31i_BFu0s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu0s");
    static BFu31i_BFu0s_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu31i_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu0s(Test_BFu31i_BFu0s_BFu0s, "BFu31i_BFu0s_BFu0s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu15i()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu15i");
    static BFu31i_BFu0s_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu0s_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu31i_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu31i_BFu0s_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu15i(Test_BFu31i_BFu0s_BFu15i, "BFu31i_BFu0s_BFu15i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu15ll()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu15ll");
    static BFu31i_BFu0s_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu0s_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu31i_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu31i_BFu0s_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu15ll(Test_BFu31i_BFu0s_BFu15ll, "BFu31i_BFu0s_BFu15ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu15s()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu15s");
    static BFu31i_BFu0s_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu0s_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu31i_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu31i_BFu0s_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu15s(Test_BFu31i_BFu0s_BFu15s, "BFu31i_BFu0s_BFu15s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu16i()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu16i");
    static BFu31i_BFu0s_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu0s_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu31i_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu31i_BFu0s_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu16i(Test_BFu31i_BFu0s_BFu16i, "BFu31i_BFu0s_BFu16i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu16ll()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu16ll");
    static BFu31i_BFu0s_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu0s_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu31i_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu31i_BFu0s_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu16ll(Test_BFu31i_BFu0s_BFu16ll, "BFu31i_BFu0s_BFu16ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu16s()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu16s");
    static BFu31i_BFu0s_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu0s_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu31i_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu31i_BFu0s_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu16s(Test_BFu31i_BFu0s_BFu16s, "BFu31i_BFu0s_BFu16s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu17i()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu17i");
    static BFu31i_BFu0s_BFu17i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu31i_BFu0s_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu31i_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu31i_BFu0s_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu17i(Test_BFu31i_BFu0s_BFu17i, "BFu31i_BFu0s_BFu17i", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu17ll()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu17ll");
    static BFu31i_BFu0s_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu31i_BFu0s_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu31i_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu31i_BFu0s_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu17ll(Test_BFu31i_BFu0s_BFu17ll, "BFu31i_BFu0s_BFu17ll", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu1c()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu1c");
    static BFu31i_BFu0s_BFu1c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31i_BFu0s_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu1c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu31i_BFu0s_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu1c(Test_BFu31i_BFu0s_BFu1c, "BFu31i_BFu0s_BFu1c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu1i()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu1i");
    static BFu31i_BFu0s_BFu1i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31i_BFu0s_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu1i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu31i_BFu0s_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu1i(Test_BFu31i_BFu0s_BFu1i, "BFu31i_BFu0s_BFu1i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu1ll()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu1ll");
    static BFu31i_BFu0s_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31i_BFu0s_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu1ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu31i_BFu0s_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu1ll(Test_BFu31i_BFu0s_BFu1ll, "BFu31i_BFu0s_BFu1ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu1s()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu1s");
    static BFu31i_BFu0s_BFu1s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31i_BFu0s_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu1s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu31i_BFu0s_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu1s(Test_BFu31i_BFu0s_BFu1s, "BFu31i_BFu0s_BFu1s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu31i()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu31i");
    static BFu31i_BFu0s_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu0s_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu31i_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu31i(Test_BFu31i_BFu0s_BFu31i, "BFu31i_BFu0s_BFu31i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu31ll()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu31ll");
    static BFu31i_BFu0s_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu0s_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu31i_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu31ll(Test_BFu31i_BFu0s_BFu31ll, "BFu31i_BFu0s_BFu31ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu32i()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu32i");
    static BFu31i_BFu0s_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu0s_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu31i_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu31i_BFu0s_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu32i(Test_BFu31i_BFu0s_BFu32i, "BFu31i_BFu0s_BFu32i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu32ll()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu32ll");
    static BFu31i_BFu0s_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu0s_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu31i_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu31i_BFu0s_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu32ll(Test_BFu31i_BFu0s_BFu32ll, "BFu31i_BFu0s_BFu32ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu33()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu33");
    static BFu31i_BFu0s_BFu33 lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu31i_BFu0s_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "BFu31i_BFu0s_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "BFu31i_BFu0s_BFu33");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu33(Test_BFu31i_BFu0s_BFu33, "BFu31i_BFu0s_BFu33", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu7c()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu7c");
    static BFu31i_BFu0s_BFu7c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31i_BFu0s_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu31i_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu31i_BFu0s_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu7c(Test_BFu31i_BFu0s_BFu7c, "BFu31i_BFu0s_BFu7c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu7i()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu7i");
    static BFu31i_BFu0s_BFu7i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31i_BFu0s_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu31i_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu31i_BFu0s_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu7i(Test_BFu31i_BFu0s_BFu7i, "BFu31i_BFu0s_BFu7i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu7ll()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu7ll");
    static BFu31i_BFu0s_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31i_BFu0s_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu31i_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu31i_BFu0s_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu7ll(Test_BFu31i_BFu0s_BFu7ll, "BFu31i_BFu0s_BFu7ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu7s()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu7s");
    static BFu31i_BFu0s_BFu7s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31i_BFu0s_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu31i_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu31i_BFu0s_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu7s(Test_BFu31i_BFu0s_BFu7s, "BFu31i_BFu0s_BFu7s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu8c()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu8c");
    static BFu31i_BFu0s_BFu8c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31i_BFu0s_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu31i_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu31i_BFu0s_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu8c(Test_BFu31i_BFu0s_BFu8c, "BFu31i_BFu0s_BFu8c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu8i()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu8i");
    static BFu31i_BFu0s_BFu8i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31i_BFu0s_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu31i_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu31i_BFu0s_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu8i(Test_BFu31i_BFu0s_BFu8i, "BFu31i_BFu0s_BFu8i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu8ll()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu8ll");
    static BFu31i_BFu0s_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31i_BFu0s_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu31i_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu31i_BFu0s_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu8ll(Test_BFu31i_BFu0s_BFu8ll, "BFu31i_BFu0s_BFu8ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu8s()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu8s");
    static BFu31i_BFu0s_BFu8s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31i_BFu0s_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu31i_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu31i_BFu0s_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu8s(Test_BFu31i_BFu0s_BFu8s, "BFu31i_BFu0s_BFu8s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu9i()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu9i");
    static BFu31i_BFu0s_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu0s_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu31i_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu31i_BFu0s_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu9i(Test_BFu31i_BFu0s_BFu9i, "BFu31i_BFu0s_BFu9i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu9ll()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu9ll");
    static BFu31i_BFu0s_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu0s_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu31i_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu31i_BFu0s_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu9ll(Test_BFu31i_BFu0s_BFu9ll, "BFu31i_BFu0s_BFu9ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_BFu9s()
{
  {
    init_simple_test("BFu31i_BFu0s_BFu9s");
    static BFu31i_BFu0s_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu0s_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu31i_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu31i_BFu0s_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_BFu9s(Test_BFu31i_BFu0s_BFu9s, "BFu31i_BFu0s_BFu9s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_C()
{
  {
    init_simple_test("BFu31i_BFu0s_C");
    static BFu31i_BFu0s_C lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31i_BFu0s_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_C)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_C");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_C");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0s_C.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_C(Test_BFu31i_BFu0s_C, "BFu31i_BFu0s_C", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_D()
{
  {
    init_simple_test("BFu31i_BFu0s_D");
    static BFu31i_BFu0s_D lv;
    check2(sizeof(lv), 12, "sizeof(BFu31i_BFu0s_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_D)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_D");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_D");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0s_D.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_D(Test_BFu31i_BFu0s_D, "BFu31i_BFu0s_D", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_F()
{
  {
    init_simple_test("BFu31i_BFu0s_F");
    static BFu31i_BFu0s_F lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu0s_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_F)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_F");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_F");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0s_F.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_F(Test_BFu31i_BFu0s_F, "BFu31i_BFu0s_F", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_I()
{
  {
    init_simple_test("BFu31i_BFu0s_I");
    static BFu31i_BFu0s_I lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu0s_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_I)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_I");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_I");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0s_I.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_I(Test_BFu31i_BFu0s_I, "BFu31i_BFu0s_I", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_Ip()
{
  {
    init_simple_test("BFu31i_BFu0s_Ip");
    static BFu31i_BFu0s_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31i_BFu0s_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_Ip");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_Ip");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0s_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_Ip(Test_BFu31i_BFu0s_Ip, "BFu31i_BFu0s_Ip", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_L()
{
  {
    init_simple_test("BFu31i_BFu0s_L");
    static BFu31i_BFu0s_L lv;
    check2(sizeof(lv), 12, "sizeof(BFu31i_BFu0s_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_L)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_L");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_L");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0s_L.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_L(Test_BFu31i_BFu0s_L, "BFu31i_BFu0s_L", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_S()
{
  {
    init_simple_test("BFu31i_BFu0s_S");
    static BFu31i_BFu0s_S lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu0s_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_S)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_S");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_S");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0s_S.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_S(Test_BFu31i_BFu0s_S, "BFu31i_BFu0s_S", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_Uc()
{
  {
    init_simple_test("BFu31i_BFu0s_Uc");
    static BFu31i_BFu0s_Uc lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31i_BFu0s_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_Uc");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_Uc");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0s_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_Uc(Test_BFu31i_BFu0s_Uc, "BFu31i_BFu0s_Uc", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_Ui()
{
  {
    init_simple_test("BFu31i_BFu0s_Ui");
    static BFu31i_BFu0s_Ui lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu0s_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_Ui");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_Ui");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0s_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_Ui(Test_BFu31i_BFu0s_Ui, "BFu31i_BFu0s_Ui", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_Ul()
{
  {
    init_simple_test("BFu31i_BFu0s_Ul");
    static BFu31i_BFu0s_Ul lv;
    check2(sizeof(lv), 12, "sizeof(BFu31i_BFu0s_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_Ul");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_Ul");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0s_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_Ul(Test_BFu31i_BFu0s_Ul, "BFu31i_BFu0s_Ul", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_Us()
{
  {
    init_simple_test("BFu31i_BFu0s_Us");
    static BFu31i_BFu0s_Us lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu0s_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_Us)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_Us");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_Us");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0s_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_Us(Test_BFu31i_BFu0s_Us, "BFu31i_BFu0s_Us", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu0s_Vp()
{
  {
    init_simple_test("BFu31i_BFu0s_Vp");
    static BFu31i_BFu0s_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31i_BFu0s_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu0s_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu0s_Vp");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu0s_Vp");
    check_field_offset(lv, v2, 4, "BFu31i_BFu0s_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu0s_Vp(Test_BFu31i_BFu0s_Vp, "BFu31i_BFu0s_Vp", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu15i_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu15i_BFu0c");
    static BFu31i_BFu15i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu15i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu15i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu15i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "BFu31i_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "BFu31i_BFu15i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu15i_BFu0c(Test_BFu31i_BFu15i_BFu0c, "BFu31i_BFu15i_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu15i_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu15i_BFu0i");
    static BFu31i_BFu15i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu15i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu15i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu15i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "BFu31i_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "BFu31i_BFu15i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu15i_BFu0i(Test_BFu31i_BFu15i_BFu0i, "BFu31i_BFu15i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu15i_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu15i_BFu0ll");
    static BFu31i_BFu15i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu15i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu15i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu15i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "BFu31i_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "BFu31i_BFu15i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu15i_BFu0ll(Test_BFu31i_BFu15i_BFu0ll, "BFu31i_BFu15i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu15i_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu15i_BFu0s");
    static BFu31i_BFu15i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu15i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu15i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu15i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "BFu31i_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "BFu31i_BFu15i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu15i_BFu0s(Test_BFu31i_BFu15i_BFu0s, "BFu31i_BFu15i_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu15ll_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu15ll_BFu0c");
    static BFu31i_BFu15ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu15ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu15ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu15ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "BFu31i_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "BFu31i_BFu15ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu15ll_BFu0c(Test_BFu31i_BFu15ll_BFu0c, "BFu31i_BFu15ll_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu15ll_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu15ll_BFu0i");
    static BFu31i_BFu15ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu15ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu15ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu15ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "BFu31i_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "BFu31i_BFu15ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu15ll_BFu0i(Test_BFu31i_BFu15ll_BFu0i, "BFu31i_BFu15ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu15ll_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu15ll_BFu0ll");
    static BFu31i_BFu15ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu15ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu15ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "BFu31i_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "BFu31i_BFu15ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu15ll_BFu0ll(Test_BFu31i_BFu15ll_BFu0ll, "BFu31i_BFu15ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu15ll_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu15ll_BFu0s");
    static BFu31i_BFu15ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu15ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu15ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu15ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "BFu31i_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "BFu31i_BFu15ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu15ll_BFu0s(Test_BFu31i_BFu15ll_BFu0s, "BFu31i_BFu15ll_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu15s_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu15s_BFu0c");
    static BFu31i_BFu15s_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu15s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu15s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu15s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "BFu31i_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "BFu31i_BFu15s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu15s_BFu0c(Test_BFu31i_BFu15s_BFu0c, "BFu31i_BFu15s_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu15s_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu15s_BFu0i");
    static BFu31i_BFu15s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu15s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu15s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu15s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "BFu31i_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "BFu31i_BFu15s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu15s_BFu0i(Test_BFu31i_BFu15s_BFu0i, "BFu31i_BFu15s_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu15s_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu15s_BFu0ll");
    static BFu31i_BFu15s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu15s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu15s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu15s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "BFu31i_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "BFu31i_BFu15s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu15s_BFu0ll(Test_BFu31i_BFu15s_BFu0ll, "BFu31i_BFu15s_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu15s_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu15s_BFu0s");
    static BFu31i_BFu15s_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu15s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu15s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu15s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "BFu31i_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "BFu31i_BFu15s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu15s_BFu0s(Test_BFu31i_BFu15s_BFu0s, "BFu31i_BFu15s_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu16i_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu16i_BFu0c");
    static BFu31i_BFu16i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu16i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu16i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu16i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "BFu31i_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "BFu31i_BFu16i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu16i_BFu0c(Test_BFu31i_BFu16i_BFu0c, "BFu31i_BFu16i_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu16i_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu16i_BFu0i");
    static BFu31i_BFu16i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu16i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu16i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu16i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "BFu31i_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "BFu31i_BFu16i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu16i_BFu0i(Test_BFu31i_BFu16i_BFu0i, "BFu31i_BFu16i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu16i_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu16i_BFu0ll");
    static BFu31i_BFu16i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu16i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu16i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu16i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "BFu31i_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "BFu31i_BFu16i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu16i_BFu0ll(Test_BFu31i_BFu16i_BFu0ll, "BFu31i_BFu16i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu16i_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu16i_BFu0s");
    static BFu31i_BFu16i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu16i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu16i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu16i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "BFu31i_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "BFu31i_BFu16i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu16i_BFu0s(Test_BFu31i_BFu16i_BFu0s, "BFu31i_BFu16i_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu16ll_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu16ll_BFu0c");
    static BFu31i_BFu16ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu16ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu16ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu16ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "BFu31i_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "BFu31i_BFu16ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu16ll_BFu0c(Test_BFu31i_BFu16ll_BFu0c, "BFu31i_BFu16ll_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu16ll_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu16ll_BFu0i");
    static BFu31i_BFu16ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu16ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu16ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu16ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "BFu31i_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "BFu31i_BFu16ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu16ll_BFu0i(Test_BFu31i_BFu16ll_BFu0i, "BFu31i_BFu16ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu16ll_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu16ll_BFu0ll");
    static BFu31i_BFu16ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu16ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu16ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "BFu31i_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "BFu31i_BFu16ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu16ll_BFu0ll(Test_BFu31i_BFu16ll_BFu0ll, "BFu31i_BFu16ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu16ll_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu16ll_BFu0s");
    static BFu31i_BFu16ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu16ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu16ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu16ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "BFu31i_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "BFu31i_BFu16ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu16ll_BFu0s(Test_BFu31i_BFu16ll_BFu0s, "BFu31i_BFu16ll_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu16s_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu16s_BFu0c");
    static BFu31i_BFu16s_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu16s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu16s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu16s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "BFu31i_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "BFu31i_BFu16s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu16s_BFu0c(Test_BFu31i_BFu16s_BFu0c, "BFu31i_BFu16s_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu16s_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu16s_BFu0i");
    static BFu31i_BFu16s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu16s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu16s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu16s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "BFu31i_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "BFu31i_BFu16s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu16s_BFu0i(Test_BFu31i_BFu16s_BFu0i, "BFu31i_BFu16s_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu16s_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu16s_BFu0ll");
    static BFu31i_BFu16s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu16s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu16s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu16s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "BFu31i_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "BFu31i_BFu16s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu16s_BFu0ll(Test_BFu31i_BFu16s_BFu0ll, "BFu31i_BFu16s_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu16s_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu16s_BFu0s");
    static BFu31i_BFu16s_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu16s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu16s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu16s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "BFu31i_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "BFu31i_BFu16s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu16s_BFu0s(Test_BFu31i_BFu16s_BFu0s, "BFu31i_BFu16s_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu17i_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu17i_BFu0c");
    static BFu31i_BFu17i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu17i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu17i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu17i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "BFu31i_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "BFu31i_BFu17i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu17i_BFu0c(Test_BFu31i_BFu17i_BFu0c, "BFu31i_BFu17i_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu17i_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu17i_BFu0i");
    static BFu31i_BFu17i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu17i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu17i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu17i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "BFu31i_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "BFu31i_BFu17i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu17i_BFu0i(Test_BFu31i_BFu17i_BFu0i, "BFu31i_BFu17i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu17i_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu17i_BFu0ll");
    static BFu31i_BFu17i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu17i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu17i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu17i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "BFu31i_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "BFu31i_BFu17i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu17i_BFu0ll(Test_BFu31i_BFu17i_BFu0ll, "BFu31i_BFu17i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu17i_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu17i_BFu0s");
    static BFu31i_BFu17i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu17i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu17i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu17i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "BFu31i_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "BFu31i_BFu17i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu17i_BFu0s(Test_BFu31i_BFu17i_BFu0s, "BFu31i_BFu17i_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu17ll_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu17ll_BFu0c");
    static BFu31i_BFu17ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu17ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu17ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu17ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "BFu31i_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "BFu31i_BFu17ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu17ll_BFu0c(Test_BFu31i_BFu17ll_BFu0c, "BFu31i_BFu17ll_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu17ll_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu17ll_BFu0i");
    static BFu31i_BFu17ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu17ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu17ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu17ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "BFu31i_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "BFu31i_BFu17ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu17ll_BFu0i(Test_BFu31i_BFu17ll_BFu0i, "BFu31i_BFu17ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu17ll_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu17ll_BFu0ll");
    static BFu31i_BFu17ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu17ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu17ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "BFu31i_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "BFu31i_BFu17ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu17ll_BFu0ll(Test_BFu31i_BFu17ll_BFu0ll, "BFu31i_BFu17ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu17ll_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu17ll_BFu0s");
    static BFu31i_BFu17ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_BFu17ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu17ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu17ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "BFu31i_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "BFu31i_BFu17ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu17ll_BFu0s(Test_BFu31i_BFu17ll_BFu0s, "BFu31i_BFu17ll_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu1c_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu1c_BFu0c");
    static BFu31i_BFu1c_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu31i_BFu1c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu1c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu1c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu1c_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31i_BFu1c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu1c_BFu0c(Test_BFu31i_BFu1c_BFu0c, "BFu31i_BFu1c_BFu0c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu1c_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu1c_BFu0i");
    static BFu31i_BFu1c_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu31i_BFu1c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu1c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu1c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu1c_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31i_BFu1c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu1c_BFu0i(Test_BFu31i_BFu1c_BFu0i, "BFu31i_BFu1c_BFu0i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu1c_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu1c_BFu0ll");
    static BFu31i_BFu1c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu31i_BFu1c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu1c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu1c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu1c_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31i_BFu1c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu1c_BFu0ll(Test_BFu31i_BFu1c_BFu0ll, "BFu31i_BFu1c_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu1c_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu1c_BFu0s");
    static BFu31i_BFu1c_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu31i_BFu1c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu1c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu1c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu1c_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31i_BFu1c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu1c_BFu0s(Test_BFu31i_BFu1c_BFu0s, "BFu31i_BFu1c_BFu0s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu1i_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu1i_BFu0c");
    static BFu31i_BFu1i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu31i_BFu1i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu1i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu1i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu1i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31i_BFu1i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu1i_BFu0c(Test_BFu31i_BFu1i_BFu0c, "BFu31i_BFu1i_BFu0c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu1i_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu1i_BFu0i");
    static BFu31i_BFu1i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu31i_BFu1i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu1i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu1i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu1i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31i_BFu1i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu1i_BFu0i(Test_BFu31i_BFu1i_BFu0i, "BFu31i_BFu1i_BFu0i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu1i_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu1i_BFu0ll");
    static BFu31i_BFu1i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu31i_BFu1i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu1i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu1i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu1i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31i_BFu1i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu1i_BFu0ll(Test_BFu31i_BFu1i_BFu0ll, "BFu31i_BFu1i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu1i_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu1i_BFu0s");
    static BFu31i_BFu1i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu31i_BFu1i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu1i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu1i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu1i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31i_BFu1i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu1i_BFu0s(Test_BFu31i_BFu1i_BFu0s, "BFu31i_BFu1i_BFu0s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu1ll_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu1ll_BFu0c");
    static BFu31i_BFu1ll_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu31i_BFu1ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu1ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu1ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu1ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31i_BFu1ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu1ll_BFu0c(Test_BFu31i_BFu1ll_BFu0c, "BFu31i_BFu1ll_BFu0c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu1ll_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu1ll_BFu0i");
    static BFu31i_BFu1ll_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu31i_BFu1ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu1ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu1ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu1ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31i_BFu1ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu1ll_BFu0i(Test_BFu31i_BFu1ll_BFu0i, "BFu31i_BFu1ll_BFu0i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu1ll_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu1ll_BFu0ll");
    static BFu31i_BFu1ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu31i_BFu1ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu1ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31i_BFu1ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu1ll_BFu0ll(Test_BFu31i_BFu1ll_BFu0ll, "BFu31i_BFu1ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu1ll_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu1ll_BFu0s");
    static BFu31i_BFu1ll_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu31i_BFu1ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu1ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu1ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu1ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31i_BFu1ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu1ll_BFu0s(Test_BFu31i_BFu1ll_BFu0s, "BFu31i_BFu1ll_BFu0s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu1s_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu1s_BFu0c");
    static BFu31i_BFu1s_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu31i_BFu1s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu1s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu1s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu1s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31i_BFu1s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu1s_BFu0c(Test_BFu31i_BFu1s_BFu0c, "BFu31i_BFu1s_BFu0c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu1s_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu1s_BFu0i");
    static BFu31i_BFu1s_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu31i_BFu1s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu1s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu1s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu1s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31i_BFu1s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu1s_BFu0i(Test_BFu31i_BFu1s_BFu0i, "BFu31i_BFu1s_BFu0i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu1s_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu1s_BFu0ll");
    static BFu31i_BFu1s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu31i_BFu1s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu1s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu1s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu1s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31i_BFu1s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu1s_BFu0ll(Test_BFu31i_BFu1s_BFu0ll, "BFu31i_BFu1s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu1s_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu1s_BFu0s");
    static BFu31i_BFu1s_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu31i_BFu1s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu1s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu1s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu1s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31i_BFu1s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu1s_BFu0s(Test_BFu31i_BFu1s_BFu0s, "BFu31i_BFu1s_BFu0s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu31i_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu31i_BFu0c");
    static BFu31i_BFu31i_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu31i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu31i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu31i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "BFu31i_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "BFu31i_BFu31i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu31i_BFu0c(Test_BFu31i_BFu31i_BFu0c, "BFu31i_BFu31i_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu31i_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu31i_BFu0i");
    static BFu31i_BFu31i_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu31i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu31i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu31i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "BFu31i_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "BFu31i_BFu31i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu31i_BFu0i(Test_BFu31i_BFu31i_BFu0i, "BFu31i_BFu31i_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu31i_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu31i_BFu0ll");
    static BFu31i_BFu31i_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu31i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu31i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu31i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "BFu31i_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "BFu31i_BFu31i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu31i_BFu0ll(Test_BFu31i_BFu31i_BFu0ll, "BFu31i_BFu31i_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu31i_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu31i_BFu0s");
    static BFu31i_BFu31i_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu31i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu31i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu31i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "BFu31i_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "BFu31i_BFu31i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu31i_BFu0s(Test_BFu31i_BFu31i_BFu0s, "BFu31i_BFu31i_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu31ll_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu31ll_BFu0c");
    static BFu31i_BFu31ll_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu31ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu31ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu31ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "BFu31i_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "BFu31i_BFu31ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu31ll_BFu0c(Test_BFu31i_BFu31ll_BFu0c, "BFu31i_BFu31ll_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu31ll_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu31ll_BFu0i");
    static BFu31i_BFu31ll_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu31ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu31ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu31ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "BFu31i_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "BFu31i_BFu31ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu31ll_BFu0i(Test_BFu31i_BFu31ll_BFu0i, "BFu31i_BFu31ll_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu31ll_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu31ll_BFu0ll");
    static BFu31i_BFu31ll_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu31ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu31ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "BFu31i_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "BFu31i_BFu31ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu31ll_BFu0ll(Test_BFu31i_BFu31ll_BFu0ll, "BFu31i_BFu31ll_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu31ll_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu31ll_BFu0s");
    static BFu31i_BFu31ll_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu31ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu31ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu31ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "BFu31i_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "BFu31i_BFu31ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu31ll_BFu0s(Test_BFu31i_BFu31ll_BFu0s, "BFu31i_BFu31ll_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu32i_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu32i_BFu0c");
    static BFu31i_BFu32i_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu32i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu32i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu32i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "BFu31i_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "BFu31i_BFu32i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu32i_BFu0c(Test_BFu31i_BFu32i_BFu0c, "BFu31i_BFu32i_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu32i_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu32i_BFu0i");
    static BFu31i_BFu32i_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu32i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu32i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu32i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "BFu31i_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "BFu31i_BFu32i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu32i_BFu0i(Test_BFu31i_BFu32i_BFu0i, "BFu31i_BFu32i_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu32i_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu32i_BFu0ll");
    static BFu31i_BFu32i_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu32i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu32i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu32i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "BFu31i_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "BFu31i_BFu32i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu32i_BFu0ll(Test_BFu31i_BFu32i_BFu0ll, "BFu31i_BFu32i_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu32i_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu32i_BFu0s");
    static BFu31i_BFu32i_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu32i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu32i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu32i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "BFu31i_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "BFu31i_BFu32i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu32i_BFu0s(Test_BFu31i_BFu32i_BFu0s, "BFu31i_BFu32i_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu32ll_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu32ll_BFu0c");
    static BFu31i_BFu32ll_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu32ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu32ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu32ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "BFu31i_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "BFu31i_BFu32ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu32ll_BFu0c(Test_BFu31i_BFu32ll_BFu0c, "BFu31i_BFu32ll_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu32ll_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu32ll_BFu0i");
    static BFu31i_BFu32ll_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu32ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu32ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu32ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "BFu31i_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "BFu31i_BFu32ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu32ll_BFu0i(Test_BFu31i_BFu32ll_BFu0i, "BFu31i_BFu32ll_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu32ll_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu32ll_BFu0ll");
    static BFu31i_BFu32ll_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu32ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu32ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "BFu31i_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "BFu31i_BFu32ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu32ll_BFu0ll(Test_BFu31i_BFu32ll_BFu0ll, "BFu31i_BFu32ll_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu32ll_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu32ll_BFu0s");
    static BFu31i_BFu32ll_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu32ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu32ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu32ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "BFu31i_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "BFu31i_BFu32ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu32ll_BFu0s(Test_BFu31i_BFu32ll_BFu0s, "BFu31i_BFu32ll_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu33_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu33_BFu0c");
    static BFu31i_BFu33_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu33_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu33_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu33_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 33, 1, "BFu31i_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 33, hide_ull(1LL<<32), "BFu31i_BFu33_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu33_BFu0c(Test_BFu31i_BFu33_BFu0c, "BFu31i_BFu33_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu33_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu33_BFu0i");
    static BFu31i_BFu33_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu33_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu33_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu33_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 33, 1, "BFu31i_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 33, hide_ull(1LL<<32), "BFu31i_BFu33_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu33_BFu0i(Test_BFu31i_BFu33_BFu0i, "BFu31i_BFu33_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu33_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu33_BFu0ll");
    static BFu31i_BFu33_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu33_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu33_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu33_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 33, 1, "BFu31i_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 33, hide_ull(1LL<<32), "BFu31i_BFu33_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu33_BFu0ll(Test_BFu31i_BFu33_BFu0ll, "BFu31i_BFu33_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu33_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu33_BFu0s");
    static BFu31i_BFu33_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_BFu33_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu33_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu33_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 33, 1, "BFu31i_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 33, hide_ull(1LL<<32), "BFu31i_BFu33_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu33_BFu0s(Test_BFu31i_BFu33_BFu0s, "BFu31i_BFu33_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu7c_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu7c_BFu0c");
    static BFu31i_BFu7c_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu7c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu7c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu7c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31i_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31i_BFu7c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu7c_BFu0c(Test_BFu31i_BFu7c_BFu0c, "BFu31i_BFu7c_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu7c_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu7c_BFu0i");
    static BFu31i_BFu7c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu7c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu7c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu7c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31i_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31i_BFu7c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu7c_BFu0i(Test_BFu31i_BFu7c_BFu0i, "BFu31i_BFu7c_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu7c_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu7c_BFu0ll");
    static BFu31i_BFu7c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu7c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu7c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu7c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31i_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31i_BFu7c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu7c_BFu0ll(Test_BFu31i_BFu7c_BFu0ll, "BFu31i_BFu7c_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu7c_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu7c_BFu0s");
    static BFu31i_BFu7c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31i_BFu7c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu7c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu7c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31i_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31i_BFu7c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu7c_BFu0s(Test_BFu31i_BFu7c_BFu0s, "BFu31i_BFu7c_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu7i_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu7i_BFu0c");
    static BFu31i_BFu7i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu7i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu7i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu7i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31i_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31i_BFu7i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu7i_BFu0c(Test_BFu31i_BFu7i_BFu0c, "BFu31i_BFu7i_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu7i_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu7i_BFu0i");
    static BFu31i_BFu7i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu7i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu7i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu7i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31i_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31i_BFu7i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu7i_BFu0i(Test_BFu31i_BFu7i_BFu0i, "BFu31i_BFu7i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu7i_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu7i_BFu0ll");
    static BFu31i_BFu7i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu7i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu7i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu7i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31i_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31i_BFu7i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu7i_BFu0ll(Test_BFu31i_BFu7i_BFu0ll, "BFu31i_BFu7i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu7i_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu7i_BFu0s");
    static BFu31i_BFu7i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31i_BFu7i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu7i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu7i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31i_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31i_BFu7i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu7i_BFu0s(Test_BFu31i_BFu7i_BFu0s, "BFu31i_BFu7i_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu7ll_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu7ll_BFu0c");
    static BFu31i_BFu7ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu7ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu7ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu7ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31i_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31i_BFu7ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu7ll_BFu0c(Test_BFu31i_BFu7ll_BFu0c, "BFu31i_BFu7ll_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu7ll_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu7ll_BFu0i");
    static BFu31i_BFu7ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu7ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu7ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu7ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31i_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31i_BFu7ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu7ll_BFu0i(Test_BFu31i_BFu7ll_BFu0i, "BFu31i_BFu7ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu7ll_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu7ll_BFu0ll");
    static BFu31i_BFu7ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu7ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu7ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31i_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31i_BFu7ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu7ll_BFu0ll(Test_BFu31i_BFu7ll_BFu0ll, "BFu31i_BFu7ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu7ll_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu7ll_BFu0s");
    static BFu31i_BFu7ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31i_BFu7ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu7ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu7ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31i_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31i_BFu7ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu7ll_BFu0s(Test_BFu31i_BFu7ll_BFu0s, "BFu31i_BFu7ll_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu7s_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu7s_BFu0c");
    static BFu31i_BFu7s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu7s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu7s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu7s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31i_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31i_BFu7s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu7s_BFu0c(Test_BFu31i_BFu7s_BFu0c, "BFu31i_BFu7s_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu7s_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu7s_BFu0i");
    static BFu31i_BFu7s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu7s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu7s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu7s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31i_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31i_BFu7s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu7s_BFu0i(Test_BFu31i_BFu7s_BFu0i, "BFu31i_BFu7s_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu7s_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu7s_BFu0ll");
    static BFu31i_BFu7s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu7s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu7s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu7s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31i_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31i_BFu7s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu7s_BFu0ll(Test_BFu31i_BFu7s_BFu0ll, "BFu31i_BFu7s_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu7s_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu7s_BFu0s");
    static BFu31i_BFu7s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31i_BFu7s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu7s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu7s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31i_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31i_BFu7s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu7s_BFu0s(Test_BFu31i_BFu7s_BFu0s, "BFu31i_BFu7s_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu8c_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu8c_BFu0c");
    static BFu31i_BFu8c_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu8c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu8c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu8c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31i_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31i_BFu8c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu8c_BFu0c(Test_BFu31i_BFu8c_BFu0c, "BFu31i_BFu8c_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu8c_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu8c_BFu0i");
    static BFu31i_BFu8c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu8c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu8c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu8c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31i_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31i_BFu8c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu8c_BFu0i(Test_BFu31i_BFu8c_BFu0i, "BFu31i_BFu8c_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu8c_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu8c_BFu0ll");
    static BFu31i_BFu8c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu8c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu8c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu8c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31i_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31i_BFu8c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu8c_BFu0ll(Test_BFu31i_BFu8c_BFu0ll, "BFu31i_BFu8c_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu8c_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu8c_BFu0s");
    static BFu31i_BFu8c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31i_BFu8c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu8c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu8c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31i_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31i_BFu8c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu8c_BFu0s(Test_BFu31i_BFu8c_BFu0s, "BFu31i_BFu8c_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu8i_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu8i_BFu0c");
    static BFu31i_BFu8i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu8i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu8i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu8i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31i_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31i_BFu8i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu8i_BFu0c(Test_BFu31i_BFu8i_BFu0c, "BFu31i_BFu8i_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu8i_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu8i_BFu0i");
    static BFu31i_BFu8i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu8i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu8i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu8i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31i_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31i_BFu8i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu8i_BFu0i(Test_BFu31i_BFu8i_BFu0i, "BFu31i_BFu8i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu8i_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu8i_BFu0ll");
    static BFu31i_BFu8i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu8i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu8i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu8i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31i_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31i_BFu8i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu8i_BFu0ll(Test_BFu31i_BFu8i_BFu0ll, "BFu31i_BFu8i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu8i_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu8i_BFu0s");
    static BFu31i_BFu8i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31i_BFu8i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu8i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu8i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31i_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31i_BFu8i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu8i_BFu0s(Test_BFu31i_BFu8i_BFu0s, "BFu31i_BFu8i_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu8ll_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu8ll_BFu0c");
    static BFu31i_BFu8ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu8ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu8ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu8ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31i_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31i_BFu8ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu8ll_BFu0c(Test_BFu31i_BFu8ll_BFu0c, "BFu31i_BFu8ll_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu8ll_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu8ll_BFu0i");
    static BFu31i_BFu8ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu8ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu8ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu8ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31i_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31i_BFu8ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu8ll_BFu0i(Test_BFu31i_BFu8ll_BFu0i, "BFu31i_BFu8ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu8ll_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu8ll_BFu0ll");
    static BFu31i_BFu8ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu8ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu8ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31i_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31i_BFu8ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu8ll_BFu0ll(Test_BFu31i_BFu8ll_BFu0ll, "BFu31i_BFu8ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu8ll_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu8ll_BFu0s");
    static BFu31i_BFu8ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31i_BFu8ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu8ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu8ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31i_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31i_BFu8ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu8ll_BFu0s(Test_BFu31i_BFu8ll_BFu0s, "BFu31i_BFu8ll_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu8s_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu8s_BFu0c");
    static BFu31i_BFu8s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu8s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu8s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu8s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31i_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31i_BFu8s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu8s_BFu0c(Test_BFu31i_BFu8s_BFu0c, "BFu31i_BFu8s_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu8s_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu8s_BFu0i");
    static BFu31i_BFu8s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu8s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu8s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu8s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31i_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31i_BFu8s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu8s_BFu0i(Test_BFu31i_BFu8s_BFu0i, "BFu31i_BFu8s_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu8s_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu8s_BFu0ll");
    static BFu31i_BFu8s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu8s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu8s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu8s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31i_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31i_BFu8s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu8s_BFu0ll(Test_BFu31i_BFu8s_BFu0ll, "BFu31i_BFu8s_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu8s_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu8s_BFu0s");
    static BFu31i_BFu8s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31i_BFu8s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu8s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu8s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31i_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31i_BFu8s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu8s_BFu0s(Test_BFu31i_BFu8s_BFu0s, "BFu31i_BFu8s_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu9i_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu9i_BFu0c");
    static BFu31i_BFu9i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu9i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu9i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu9i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "BFu31i_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "BFu31i_BFu9i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu9i_BFu0c(Test_BFu31i_BFu9i_BFu0c, "BFu31i_BFu9i_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu9i_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu9i_BFu0i");
    static BFu31i_BFu9i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu9i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu9i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu9i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "BFu31i_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "BFu31i_BFu9i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu9i_BFu0i(Test_BFu31i_BFu9i_BFu0i, "BFu31i_BFu9i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu9i_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu9i_BFu0ll");
    static BFu31i_BFu9i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu9i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu9i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu9i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "BFu31i_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "BFu31i_BFu9i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu9i_BFu0ll(Test_BFu31i_BFu9i_BFu0ll, "BFu31i_BFu9i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu9i_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu9i_BFu0s");
    static BFu31i_BFu9i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31i_BFu9i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu9i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu9i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "BFu31i_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "BFu31i_BFu9i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu9i_BFu0s(Test_BFu31i_BFu9i_BFu0s, "BFu31i_BFu9i_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu9ll_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu9ll_BFu0c");
    static BFu31i_BFu9ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu9ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu9ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu9ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "BFu31i_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "BFu31i_BFu9ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu9ll_BFu0c(Test_BFu31i_BFu9ll_BFu0c, "BFu31i_BFu9ll_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu9ll_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu9ll_BFu0i");
    static BFu31i_BFu9ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu9ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu9ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu9ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "BFu31i_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "BFu31i_BFu9ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu9ll_BFu0i(Test_BFu31i_BFu9ll_BFu0i, "BFu31i_BFu9ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu9ll_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu9ll_BFu0ll");
    static BFu31i_BFu9ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu9ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu9ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "BFu31i_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "BFu31i_BFu9ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu9ll_BFu0ll(Test_BFu31i_BFu9ll_BFu0ll, "BFu31i_BFu9ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu9ll_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu9ll_BFu0s");
    static BFu31i_BFu9ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31i_BFu9ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu9ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu9ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "BFu31i_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "BFu31i_BFu9ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu9ll_BFu0s(Test_BFu31i_BFu9ll_BFu0s, "BFu31i_BFu9ll_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu9s_BFu0c()
{
  {
    init_simple_test("BFu31i_BFu9s_BFu0c");
    static BFu31i_BFu9s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_BFu9s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_BFu9s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu9s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "BFu31i_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "BFu31i_BFu9s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu9s_BFu0c(Test_BFu31i_BFu9s_BFu0c, "BFu31i_BFu9s_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu9s_BFu0i()
{
  {
    init_simple_test("BFu31i_BFu9s_BFu0i");
    static BFu31i_BFu9s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu9s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu9s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu9s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "BFu31i_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "BFu31i_BFu9s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu9s_BFu0i(Test_BFu31i_BFu9s_BFu0i, "BFu31i_BFu9s_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu9s_BFu0ll()
{
  {
    init_simple_test("BFu31i_BFu9s_BFu0ll");
    static BFu31i_BFu9s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_BFu9s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu9s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu9s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "BFu31i_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "BFu31i_BFu9s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu9s_BFu0ll(Test_BFu31i_BFu9s_BFu0ll, "BFu31i_BFu9s_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_BFu9s_BFu0s()
{
  {
    init_simple_test("BFu31i_BFu9s_BFu0s");
    static BFu31i_BFu9s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31i_BFu9s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_BFu9s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_BFu9s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "BFu31i_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "BFu31i_BFu9s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31i_BFu9s_BFu0s(Test_BFu31i_BFu9s_BFu0s, "BFu31i_BFu9s_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_C_BFu0c()
{
  {
    init_simple_test("BFu31i_C_BFu0c");
    static BFu31i_C_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_C_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_C_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_C_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_C_BFu0c");
    check_field_offset(lv, v2, 4, "BFu31i_C_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_C_BFu0c(Test_BFu31i_C_BFu0c, "BFu31i_C_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_C_BFu0i()
{
  {
    init_simple_test("BFu31i_C_BFu0i");
    static BFu31i_C_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_C_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_C_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_C_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_C_BFu0i");
    check_field_offset(lv, v2, 4, "BFu31i_C_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_C_BFu0i(Test_BFu31i_C_BFu0i, "BFu31i_C_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_C_BFu0ll()
{
  {
    init_simple_test("BFu31i_C_BFu0ll");
    static BFu31i_C_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_C_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_C_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_C_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_C_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu31i_C_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_C_BFu0ll(Test_BFu31i_C_BFu0ll, "BFu31i_C_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_C_BFu0s()
{
  {
    init_simple_test("BFu31i_C_BFu0s");
    static BFu31i_C_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31i_C_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_C_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_C_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_C_BFu0s");
    check_field_offset(lv, v2, 4, "BFu31i_C_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_C_BFu0s(Test_BFu31i_C_BFu0s, "BFu31i_C_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_D_BFu0c()
{
  {
    init_simple_test("BFu31i_D_BFu0c");
    static BFu31i_D_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(BFu31i_D_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_D_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_D_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_D_BFu0c");
    check_field_offset(lv, v2, 4, "BFu31i_D_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_D_BFu0c(Test_BFu31i_D_BFu0c, "BFu31i_D_BFu0c", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_D_BFu0i()
{
  {
    init_simple_test("BFu31i_D_BFu0i");
    static BFu31i_D_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(BFu31i_D_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_D_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_D_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_D_BFu0i");
    check_field_offset(lv, v2, 4, "BFu31i_D_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_D_BFu0i(Test_BFu31i_D_BFu0i, "BFu31i_D_BFu0i", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_D_BFu0ll()
{
  {
    init_simple_test("BFu31i_D_BFu0ll");
    static BFu31i_D_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu31i_D_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_D_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_D_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_D_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu31i_D_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_D_BFu0ll(Test_BFu31i_D_BFu0ll, "BFu31i_D_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_D_BFu0s()
{
  {
    init_simple_test("BFu31i_D_BFu0s");
    static BFu31i_D_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(BFu31i_D_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_D_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_D_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_D_BFu0s");
    check_field_offset(lv, v2, 4, "BFu31i_D_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_D_BFu0s(Test_BFu31i_D_BFu0s, "BFu31i_D_BFu0s", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_F_BFu0c()
{
  {
    init_simple_test("BFu31i_F_BFu0c");
    static BFu31i_F_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_F_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_F_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_F_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_F_BFu0c");
    check_field_offset(lv, v2, 4, "BFu31i_F_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_F_BFu0c(Test_BFu31i_F_BFu0c, "BFu31i_F_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_F_BFu0i()
{
  {
    init_simple_test("BFu31i_F_BFu0i");
    static BFu31i_F_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_F_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_F_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_F_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_F_BFu0i");
    check_field_offset(lv, v2, 4, "BFu31i_F_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_F_BFu0i(Test_BFu31i_F_BFu0i, "BFu31i_F_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_F_BFu0ll()
{
  {
    init_simple_test("BFu31i_F_BFu0ll");
    static BFu31i_F_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_F_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_F_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_F_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_F_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu31i_F_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_F_BFu0ll(Test_BFu31i_F_BFu0ll, "BFu31i_F_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_F_BFu0s()
{
  {
    init_simple_test("BFu31i_F_BFu0s");
    static BFu31i_F_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_F_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_F_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_F_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_F_BFu0s");
    check_field_offset(lv, v2, 4, "BFu31i_F_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_F_BFu0s(Test_BFu31i_F_BFu0s, "BFu31i_F_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_I_BFu0c()
{
  {
    init_simple_test("BFu31i_I_BFu0c");
    static BFu31i_I_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_I_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_I_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_I_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_I_BFu0c");
    check_field_offset(lv, v2, 4, "BFu31i_I_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_I_BFu0c(Test_BFu31i_I_BFu0c, "BFu31i_I_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_I_BFu0i()
{
  {
    init_simple_test("BFu31i_I_BFu0i");
    static BFu31i_I_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_I_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_I_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_I_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_I_BFu0i");
    check_field_offset(lv, v2, 4, "BFu31i_I_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_I_BFu0i(Test_BFu31i_I_BFu0i, "BFu31i_I_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_I_BFu0ll()
{
  {
    init_simple_test("BFu31i_I_BFu0ll");
    static BFu31i_I_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_I_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_I_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_I_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_I_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu31i_I_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_I_BFu0ll(Test_BFu31i_I_BFu0ll, "BFu31i_I_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_I_BFu0s()
{
  {
    init_simple_test("BFu31i_I_BFu0s");
    static BFu31i_I_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_I_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_I_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_I_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_I_BFu0s");
    check_field_offset(lv, v2, 4, "BFu31i_I_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_I_BFu0s(Test_BFu31i_I_BFu0s, "BFu31i_I_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_Ip_BFu0c()
{
  {
    init_simple_test("BFu31i_Ip_BFu0c");
    static BFu31i_Ip_BFu0c lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31i_Ip_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Ip_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Ip_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Ip_BFu0c");
    check_field_offset(lv, v2, 4, "BFu31i_Ip_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_Ip_BFu0c(Test_BFu31i_Ip_BFu0c, "BFu31i_Ip_BFu0c", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_Ip_BFu0i()
{
  {
    init_simple_test("BFu31i_Ip_BFu0i");
    static BFu31i_Ip_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31i_Ip_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_Ip_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Ip_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Ip_BFu0i");
    check_field_offset(lv, v2, 4, "BFu31i_Ip_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_Ip_BFu0i(Test_BFu31i_Ip_BFu0i, "BFu31i_Ip_BFu0i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_Ip_BFu0ll()
{
  {
    init_simple_test("BFu31i_Ip_BFu0ll");
    static BFu31i_Ip_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu31i_Ip_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_Ip_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Ip_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Ip_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu31i_Ip_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_Ip_BFu0ll(Test_BFu31i_Ip_BFu0ll, "BFu31i_Ip_BFu0ll", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_Ip_BFu0s()
{
  {
    init_simple_test("BFu31i_Ip_BFu0s");
    static BFu31i_Ip_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31i_Ip_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_Ip_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Ip_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Ip_BFu0s");
    check_field_offset(lv, v2, 4, "BFu31i_Ip_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_Ip_BFu0s(Test_BFu31i_Ip_BFu0s, "BFu31i_Ip_BFu0s", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_L_BFu0c()
{
  {
    init_simple_test("BFu31i_L_BFu0c");
    static BFu31i_L_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(BFu31i_L_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_L_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_L_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_L_BFu0c");
    check_field_offset(lv, v2, 4, "BFu31i_L_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_L_BFu0c(Test_BFu31i_L_BFu0c, "BFu31i_L_BFu0c", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_L_BFu0i()
{
  {
    init_simple_test("BFu31i_L_BFu0i");
    static BFu31i_L_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(BFu31i_L_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_L_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_L_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_L_BFu0i");
    check_field_offset(lv, v2, 4, "BFu31i_L_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_L_BFu0i(Test_BFu31i_L_BFu0i, "BFu31i_L_BFu0i", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_L_BFu0ll()
{
  {
    init_simple_test("BFu31i_L_BFu0ll");
    static BFu31i_L_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu31i_L_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_L_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_L_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_L_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu31i_L_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_L_BFu0ll(Test_BFu31i_L_BFu0ll, "BFu31i_L_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_L_BFu0s()
{
  {
    init_simple_test("BFu31i_L_BFu0s");
    static BFu31i_L_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(BFu31i_L_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_L_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_L_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_L_BFu0s");
    check_field_offset(lv, v2, 4, "BFu31i_L_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_L_BFu0s(Test_BFu31i_L_BFu0s, "BFu31i_L_BFu0s", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_S_BFu0c()
{
  {
    init_simple_test("BFu31i_S_BFu0c");
    static BFu31i_S_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_S_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_S_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_S_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_S_BFu0c");
    check_field_offset(lv, v2, 4, "BFu31i_S_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_S_BFu0c(Test_BFu31i_S_BFu0c, "BFu31i_S_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_S_BFu0i()
{
  {
    init_simple_test("BFu31i_S_BFu0i");
    static BFu31i_S_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_S_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_S_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_S_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_S_BFu0i");
    check_field_offset(lv, v2, 4, "BFu31i_S_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_S_BFu0i(Test_BFu31i_S_BFu0i, "BFu31i_S_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_S_BFu0ll()
{
  {
    init_simple_test("BFu31i_S_BFu0ll");
    static BFu31i_S_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_S_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_S_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_S_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_S_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu31i_S_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_S_BFu0ll(Test_BFu31i_S_BFu0ll, "BFu31i_S_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_S_BFu0s()
{
  {
    init_simple_test("BFu31i_S_BFu0s");
    static BFu31i_S_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_S_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_S_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_S_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_S_BFu0s");
    check_field_offset(lv, v2, 4, "BFu31i_S_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_S_BFu0s(Test_BFu31i_S_BFu0s, "BFu31i_S_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_Uc_BFu0c()
{
  {
    init_simple_test("BFu31i_Uc_BFu0c");
    static BFu31i_Uc_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31i_Uc_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Uc_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Uc_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Uc_BFu0c");
    check_field_offset(lv, v2, 4, "BFu31i_Uc_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_Uc_BFu0c(Test_BFu31i_Uc_BFu0c, "BFu31i_Uc_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_Uc_BFu0i()
{
  {
    init_simple_test("BFu31i_Uc_BFu0i");
    static BFu31i_Uc_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_Uc_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_Uc_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Uc_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Uc_BFu0i");
    check_field_offset(lv, v2, 4, "BFu31i_Uc_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_Uc_BFu0i(Test_BFu31i_Uc_BFu0i, "BFu31i_Uc_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_Uc_BFu0ll()
{
  {
    init_simple_test("BFu31i_Uc_BFu0ll");
    static BFu31i_Uc_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_Uc_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_Uc_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Uc_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Uc_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu31i_Uc_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_Uc_BFu0ll(Test_BFu31i_Uc_BFu0ll, "BFu31i_Uc_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_Uc_BFu0s()
{
  {
    init_simple_test("BFu31i_Uc_BFu0s");
    static BFu31i_Uc_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31i_Uc_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_Uc_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Uc_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Uc_BFu0s");
    check_field_offset(lv, v2, 4, "BFu31i_Uc_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_Uc_BFu0s(Test_BFu31i_Uc_BFu0s, "BFu31i_Uc_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_Ui_BFu0c()
{
  {
    init_simple_test("BFu31i_Ui_BFu0c");
    static BFu31i_Ui_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_Ui_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Ui_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Ui_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Ui_BFu0c");
    check_field_offset(lv, v2, 4, "BFu31i_Ui_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_Ui_BFu0c(Test_BFu31i_Ui_BFu0c, "BFu31i_Ui_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_Ui_BFu0i()
{
  {
    init_simple_test("BFu31i_Ui_BFu0i");
    static BFu31i_Ui_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_Ui_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_Ui_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Ui_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Ui_BFu0i");
    check_field_offset(lv, v2, 4, "BFu31i_Ui_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_Ui_BFu0i(Test_BFu31i_Ui_BFu0i, "BFu31i_Ui_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_Ui_BFu0ll()
{
  {
    init_simple_test("BFu31i_Ui_BFu0ll");
    static BFu31i_Ui_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_Ui_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_Ui_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Ui_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Ui_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu31i_Ui_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_Ui_BFu0ll(Test_BFu31i_Ui_BFu0ll, "BFu31i_Ui_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_Ui_BFu0s()
{
  {
    init_simple_test("BFu31i_Ui_BFu0s");
    static BFu31i_Ui_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu31i_Ui_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_Ui_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Ui_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Ui_BFu0s");
    check_field_offset(lv, v2, 4, "BFu31i_Ui_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_Ui_BFu0s(Test_BFu31i_Ui_BFu0s, "BFu31i_Ui_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_Ul_BFu0c()
{
  {
    init_simple_test("BFu31i_Ul_BFu0c");
    static BFu31i_Ul_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(BFu31i_Ul_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Ul_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Ul_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Ul_BFu0c");
    check_field_offset(lv, v2, 4, "BFu31i_Ul_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_Ul_BFu0c(Test_BFu31i_Ul_BFu0c, "BFu31i_Ul_BFu0c", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_Ul_BFu0i()
{
  {
    init_simple_test("BFu31i_Ul_BFu0i");
    static BFu31i_Ul_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(BFu31i_Ul_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_Ul_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Ul_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Ul_BFu0i");
    check_field_offset(lv, v2, 4, "BFu31i_Ul_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_Ul_BFu0i(Test_BFu31i_Ul_BFu0i, "BFu31i_Ul_BFu0i", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_Ul_BFu0ll()
{
  {
    init_simple_test("BFu31i_Ul_BFu0ll");
    static BFu31i_Ul_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu31i_Ul_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_Ul_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Ul_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Ul_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu31i_Ul_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_Ul_BFu0ll(Test_BFu31i_Ul_BFu0ll, "BFu31i_Ul_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_Ul_BFu0s()
{
  {
    init_simple_test("BFu31i_Ul_BFu0s");
    static BFu31i_Ul_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(BFu31i_Ul_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_Ul_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Ul_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Ul_BFu0s");
    check_field_offset(lv, v2, 4, "BFu31i_Ul_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_Ul_BFu0s(Test_BFu31i_Ul_BFu0s, "BFu31i_Ul_BFu0s", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_Us_BFu0c()
{
  {
    init_simple_test("BFu31i_Us_BFu0c");
    static BFu31i_Us_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_Us_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Us_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Us_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Us_BFu0c");
    check_field_offset(lv, v2, 4, "BFu31i_Us_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_Us_BFu0c(Test_BFu31i_Us_BFu0c, "BFu31i_Us_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_Us_BFu0i()
{
  {
    init_simple_test("BFu31i_Us_BFu0i");
    static BFu31i_Us_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_Us_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_Us_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Us_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Us_BFu0i");
    check_field_offset(lv, v2, 4, "BFu31i_Us_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_Us_BFu0i(Test_BFu31i_Us_BFu0i, "BFu31i_Us_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_Us_BFu0ll()
{
  {
    init_simple_test("BFu31i_Us_BFu0ll");
    static BFu31i_Us_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31i_Us_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_Us_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Us_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Us_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu31i_Us_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_Us_BFu0ll(Test_BFu31i_Us_BFu0ll, "BFu31i_Us_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_Us_BFu0s()
{
  {
    init_simple_test("BFu31i_Us_BFu0s");
    static BFu31i_Us_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31i_Us_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_Us_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Us_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Us_BFu0s");
    check_field_offset(lv, v2, 4, "BFu31i_Us_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_Us_BFu0s(Test_BFu31i_Us_BFu0s, "BFu31i_Us_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_Vp_BFu0c()
{
  {
    init_simple_test("BFu31i_Vp_BFu0c");
    static BFu31i_Vp_BFu0c lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31i_Vp_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31i_Vp_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Vp_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Vp_BFu0c");
    check_field_offset(lv, v2, 4, "BFu31i_Vp_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_Vp_BFu0c(Test_BFu31i_Vp_BFu0c, "BFu31i_Vp_BFu0c", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_Vp_BFu0i()
{
  {
    init_simple_test("BFu31i_Vp_BFu0i");
    static BFu31i_Vp_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31i_Vp_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_Vp_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Vp_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Vp_BFu0i");
    check_field_offset(lv, v2, 4, "BFu31i_Vp_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_Vp_BFu0i(Test_BFu31i_Vp_BFu0i, "BFu31i_Vp_BFu0i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_Vp_BFu0ll()
{
  {
    init_simple_test("BFu31i_Vp_BFu0ll");
    static BFu31i_Vp_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu31i_Vp_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_Vp_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Vp_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Vp_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu31i_Vp_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_Vp_BFu0ll(Test_BFu31i_Vp_BFu0ll, "BFu31i_Vp_BFu0ll", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31i_Vp_BFu0s()
{
  {
    init_simple_test("BFu31i_Vp_BFu0s");
    static BFu31i_Vp_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31i_Vp_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31i_Vp_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31i_Vp_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31i_Vp_BFu0s");
    check_field_offset(lv, v2, 4, "BFu31i_Vp_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu31i_Vp_BFu0s(Test_BFu31i_Vp_BFu0s, "BFu31i_Vp_BFu0s", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu0c");
    static BFu31ll_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu31ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c(Test_BFu31ll_BFu0c, "BFu31ll_BFu0c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu0c");
    static BFu31ll_BFu0c_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu31ll_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu0c(Test_BFu31ll_BFu0c_BFu0c, "BFu31ll_BFu0c_BFu0c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu0i");
    static BFu31ll_BFu0c_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu31ll_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu0i(Test_BFu31ll_BFu0c_BFu0i, "BFu31ll_BFu0c_BFu0i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu0ll");
    static BFu31ll_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu31ll_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu0ll(Test_BFu31ll_BFu0c_BFu0ll, "BFu31ll_BFu0c_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu0s");
    static BFu31ll_BFu0c_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu31ll_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu0s(Test_BFu31ll_BFu0c_BFu0s, "BFu31ll_BFu0c_BFu0s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu15i()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu15i");
    static BFu31ll_BFu0c_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu0c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu31ll_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu31ll_BFu0c_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu15i(Test_BFu31ll_BFu0c_BFu15i, "BFu31ll_BFu0c_BFu15i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu15ll()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu15ll");
    static BFu31ll_BFu0c_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu0c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu31ll_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu31ll_BFu0c_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu15ll(Test_BFu31ll_BFu0c_BFu15ll, "BFu31ll_BFu0c_BFu15ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu15s()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu15s");
    static BFu31ll_BFu0c_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu0c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu31ll_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu31ll_BFu0c_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu15s(Test_BFu31ll_BFu0c_BFu15s, "BFu31ll_BFu0c_BFu15s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu16i()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu16i");
    static BFu31ll_BFu0c_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu0c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu31ll_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu31ll_BFu0c_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu16i(Test_BFu31ll_BFu0c_BFu16i, "BFu31ll_BFu0c_BFu16i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu16ll()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu16ll");
    static BFu31ll_BFu0c_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu0c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu31ll_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu31ll_BFu0c_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu16ll(Test_BFu31ll_BFu0c_BFu16ll, "BFu31ll_BFu0c_BFu16ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu16s()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu16s");
    static BFu31ll_BFu0c_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu0c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu31ll_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu31ll_BFu0c_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu16s(Test_BFu31ll_BFu0c_BFu16s, "BFu31ll_BFu0c_BFu16s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu17i()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu17i");
    static BFu31ll_BFu0c_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(BFu31ll_BFu0c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu31ll_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu31ll_BFu0c_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu17i(Test_BFu31ll_BFu0c_BFu17i, "BFu31ll_BFu0c_BFu17i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu17ll()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu17ll");
    static BFu31ll_BFu0c_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(BFu31ll_BFu0c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu31ll_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu31ll_BFu0c_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu17ll(Test_BFu31ll_BFu0c_BFu17ll, "BFu31ll_BFu0c_BFu17ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu1c()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu1c");
    static BFu31ll_BFu0c_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu0c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu1c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu31ll_BFu0c_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu1c(Test_BFu31ll_BFu0c_BFu1c, "BFu31ll_BFu0c_BFu1c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu1i()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu1i");
    static BFu31ll_BFu0c_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu0c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu1i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu31ll_BFu0c_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu1i(Test_BFu31ll_BFu0c_BFu1i, "BFu31ll_BFu0c_BFu1i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu1ll()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu1ll");
    static BFu31ll_BFu0c_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu0c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu1ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu31ll_BFu0c_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu1ll(Test_BFu31ll_BFu0c_BFu1ll, "BFu31ll_BFu0c_BFu1ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu1s()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu1s");
    static BFu31ll_BFu0c_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu0c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu1s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu31ll_BFu0c_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu1s(Test_BFu31ll_BFu0c_BFu1s, "BFu31ll_BFu0c_BFu1s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu31i()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu31i");
    static BFu31ll_BFu0c_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu0c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu31ll_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu31i(Test_BFu31ll_BFu0c_BFu31i, "BFu31ll_BFu0c_BFu31i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu31ll()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu31ll");
    static BFu31ll_BFu0c_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu0c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu31ll_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu31ll(Test_BFu31ll_BFu0c_BFu31ll, "BFu31ll_BFu0c_BFu31ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu32i()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu32i");
    static BFu31ll_BFu0c_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu0c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu31ll_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu31ll_BFu0c_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu32i(Test_BFu31ll_BFu0c_BFu32i, "BFu31ll_BFu0c_BFu32i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu32ll()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu32ll");
    static BFu31ll_BFu0c_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu0c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu31ll_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu31ll_BFu0c_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu32ll(Test_BFu31ll_BFu0c_BFu32ll, "BFu31ll_BFu0c_BFu32ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu33()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu33");
    static BFu31ll_BFu0c_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(BFu31ll_BFu0c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "BFu31ll_BFu0c_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "BFu31ll_BFu0c_BFu33");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu33(Test_BFu31ll_BFu0c_BFu33, "BFu31ll_BFu0c_BFu33", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu7c()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu7c");
    static BFu31ll_BFu0c_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu0c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu31ll_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu31ll_BFu0c_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu7c(Test_BFu31ll_BFu0c_BFu7c, "BFu31ll_BFu0c_BFu7c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu7i()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu7i");
    static BFu31ll_BFu0c_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu0c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu31ll_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu31ll_BFu0c_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu7i(Test_BFu31ll_BFu0c_BFu7i, "BFu31ll_BFu0c_BFu7i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu7ll()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu7ll");
    static BFu31ll_BFu0c_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu0c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu31ll_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu31ll_BFu0c_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu7ll(Test_BFu31ll_BFu0c_BFu7ll, "BFu31ll_BFu0c_BFu7ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu7s()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu7s");
    static BFu31ll_BFu0c_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu0c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu31ll_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu31ll_BFu0c_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu7s(Test_BFu31ll_BFu0c_BFu7s, "BFu31ll_BFu0c_BFu7s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu8c()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu8c");
    static BFu31ll_BFu0c_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu0c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu31ll_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu31ll_BFu0c_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu8c(Test_BFu31ll_BFu0c_BFu8c, "BFu31ll_BFu0c_BFu8c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu8i()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu8i");
    static BFu31ll_BFu0c_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu0c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu31ll_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu31ll_BFu0c_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu8i(Test_BFu31ll_BFu0c_BFu8i, "BFu31ll_BFu0c_BFu8i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu8ll()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu8ll");
    static BFu31ll_BFu0c_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu0c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu31ll_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu31ll_BFu0c_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu8ll(Test_BFu31ll_BFu0c_BFu8ll, "BFu31ll_BFu0c_BFu8ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu8s()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu8s");
    static BFu31ll_BFu0c_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu0c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu31ll_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu31ll_BFu0c_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu8s(Test_BFu31ll_BFu0c_BFu8s, "BFu31ll_BFu0c_BFu8s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu9i()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu9i");
    static BFu31ll_BFu0c_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu0c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu31ll_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu31ll_BFu0c_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu9i(Test_BFu31ll_BFu0c_BFu9i, "BFu31ll_BFu0c_BFu9i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu9ll()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu9ll");
    static BFu31ll_BFu0c_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu0c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu31ll_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu31ll_BFu0c_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu9ll(Test_BFu31ll_BFu0c_BFu9ll, "BFu31ll_BFu0c_BFu9ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_BFu9s()
{
  {
    init_simple_test("BFu31ll_BFu0c_BFu9s");
    static BFu31ll_BFu0c_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu0c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu31ll_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu31ll_BFu0c_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_BFu9s(Test_BFu31ll_BFu0c_BFu9s, "BFu31ll_BFu0c_BFu9s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_C()
{
  {
    init_simple_test("BFu31ll_BFu0c_C");
    static BFu31ll_BFu0c_C lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu0c_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_C)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_C");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_C");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0c_C.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_C(Test_BFu31ll_BFu0c_C, "BFu31ll_BFu0c_C", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_D()
{
  {
    init_simple_test("BFu31ll_BFu0c_D");
    static BFu31ll_BFu0c_D lv;
    check2(sizeof(lv), 12, "sizeof(BFu31ll_BFu0c_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_D)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_D");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_D");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0c_D.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_D(Test_BFu31ll_BFu0c_D, "BFu31ll_BFu0c_D", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_F()
{
  {
    init_simple_test("BFu31ll_BFu0c_F");
    static BFu31ll_BFu0c_F lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu0c_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_F)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_F");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_F");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0c_F.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_F(Test_BFu31ll_BFu0c_F, "BFu31ll_BFu0c_F", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_I()
{
  {
    init_simple_test("BFu31ll_BFu0c_I");
    static BFu31ll_BFu0c_I lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu0c_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_I)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_I");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_I");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0c_I.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_I(Test_BFu31ll_BFu0c_I, "BFu31ll_BFu0c_I", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_Ip()
{
  {
    init_simple_test("BFu31ll_BFu0c_Ip");
    static BFu31ll_BFu0c_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31ll_BFu0c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_Ip");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_Ip");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0c_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_Ip(Test_BFu31ll_BFu0c_Ip, "BFu31ll_BFu0c_Ip", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_L()
{
  {
    init_simple_test("BFu31ll_BFu0c_L");
    static BFu31ll_BFu0c_L lv;
    check2(sizeof(lv), 12, "sizeof(BFu31ll_BFu0c_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_L)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_L");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_L");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0c_L.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_L(Test_BFu31ll_BFu0c_L, "BFu31ll_BFu0c_L", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_S()
{
  {
    init_simple_test("BFu31ll_BFu0c_S");
    static BFu31ll_BFu0c_S lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu0c_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_S)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_S");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_S");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0c_S.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_S(Test_BFu31ll_BFu0c_S, "BFu31ll_BFu0c_S", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_Uc()
{
  {
    init_simple_test("BFu31ll_BFu0c_Uc");
    static BFu31ll_BFu0c_Uc lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu0c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_Uc");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_Uc");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0c_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_Uc(Test_BFu31ll_BFu0c_Uc, "BFu31ll_BFu0c_Uc", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_Ui()
{
  {
    init_simple_test("BFu31ll_BFu0c_Ui");
    static BFu31ll_BFu0c_Ui lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu0c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_Ui");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_Ui");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0c_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_Ui(Test_BFu31ll_BFu0c_Ui, "BFu31ll_BFu0c_Ui", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_Ul()
{
  {
    init_simple_test("BFu31ll_BFu0c_Ul");
    static BFu31ll_BFu0c_Ul lv;
    check2(sizeof(lv), 12, "sizeof(BFu31ll_BFu0c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_Ul");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_Ul");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0c_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_Ul(Test_BFu31ll_BFu0c_Ul, "BFu31ll_BFu0c_Ul", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_Us()
{
  {
    init_simple_test("BFu31ll_BFu0c_Us");
    static BFu31ll_BFu0c_Us lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu0c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_Us)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_Us");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_Us");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0c_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_Us(Test_BFu31ll_BFu0c_Us, "BFu31ll_BFu0c_Us", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0c_Vp()
{
  {
    init_simple_test("BFu31ll_BFu0c_Vp");
    static BFu31ll_BFu0c_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31ll_BFu0c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu0c_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0c_Vp");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0c_Vp");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0c_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0c_Vp(Test_BFu31ll_BFu0c_Vp, "BFu31ll_BFu0c_Vp", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu0i");
    static BFu31ll_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu31ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i(Test_BFu31ll_BFu0i, "BFu31ll_BFu0i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu0c");
    static BFu31ll_BFu0i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu31ll_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu0c(Test_BFu31ll_BFu0i_BFu0c, "BFu31ll_BFu0i_BFu0c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu0i");
    static BFu31ll_BFu0i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu31ll_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu0i(Test_BFu31ll_BFu0i_BFu0i, "BFu31ll_BFu0i_BFu0i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu0ll");
    static BFu31ll_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu31ll_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu0ll(Test_BFu31ll_BFu0i_BFu0ll, "BFu31ll_BFu0i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu0s");
    static BFu31ll_BFu0i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu31ll_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu0s(Test_BFu31ll_BFu0i_BFu0s, "BFu31ll_BFu0i_BFu0s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu15i()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu15i");
    static BFu31ll_BFu0i_BFu15i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31ll_BFu0i_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu31ll_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu31ll_BFu0i_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu15i(Test_BFu31ll_BFu0i_BFu15i, "BFu31ll_BFu0i_BFu15i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu15ll()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu15ll");
    static BFu31ll_BFu0i_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31ll_BFu0i_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu31ll_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu31ll_BFu0i_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu15ll(Test_BFu31ll_BFu0i_BFu15ll, "BFu31ll_BFu0i_BFu15ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu15s()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu15s");
    static BFu31ll_BFu0i_BFu15s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31ll_BFu0i_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu31ll_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu31ll_BFu0i_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu15s(Test_BFu31ll_BFu0i_BFu15s, "BFu31ll_BFu0i_BFu15s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu16i()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu16i");
    static BFu31ll_BFu0i_BFu16i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31ll_BFu0i_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu31ll_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu31ll_BFu0i_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu16i(Test_BFu31ll_BFu0i_BFu16i, "BFu31ll_BFu0i_BFu16i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu16ll()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu16ll");
    static BFu31ll_BFu0i_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31ll_BFu0i_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu31ll_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu31ll_BFu0i_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu16ll(Test_BFu31ll_BFu0i_BFu16ll, "BFu31ll_BFu0i_BFu16ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu16s()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu16s");
    static BFu31ll_BFu0i_BFu16s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31ll_BFu0i_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu31ll_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu31ll_BFu0i_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu16s(Test_BFu31ll_BFu0i_BFu16s, "BFu31ll_BFu0i_BFu16s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu17i()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu17i");
    static BFu31ll_BFu0i_BFu17i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu31ll_BFu0i_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu31ll_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu31ll_BFu0i_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu17i(Test_BFu31ll_BFu0i_BFu17i, "BFu31ll_BFu0i_BFu17i", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu17ll()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu17ll");
    static BFu31ll_BFu0i_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu31ll_BFu0i_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu31ll_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu31ll_BFu0i_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu17ll(Test_BFu31ll_BFu0i_BFu17ll, "BFu31ll_BFu0i_BFu17ll", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu1c()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu1c");
    static BFu31ll_BFu0i_BFu1c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31ll_BFu0i_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu1c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu31ll_BFu0i_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu1c(Test_BFu31ll_BFu0i_BFu1c, "BFu31ll_BFu0i_BFu1c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu1i()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu1i");
    static BFu31ll_BFu0i_BFu1i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31ll_BFu0i_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu1i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu31ll_BFu0i_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu1i(Test_BFu31ll_BFu0i_BFu1i, "BFu31ll_BFu0i_BFu1i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu1ll()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu1ll");
    static BFu31ll_BFu0i_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31ll_BFu0i_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu1ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu31ll_BFu0i_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu1ll(Test_BFu31ll_BFu0i_BFu1ll, "BFu31ll_BFu0i_BFu1ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu1s()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu1s");
    static BFu31ll_BFu0i_BFu1s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31ll_BFu0i_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu1s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu31ll_BFu0i_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu1s(Test_BFu31ll_BFu0i_BFu1s, "BFu31ll_BFu0i_BFu1s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu31i()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu31i");
    static BFu31ll_BFu0i_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu0i_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu31ll_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu31i(Test_BFu31ll_BFu0i_BFu31i, "BFu31ll_BFu0i_BFu31i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu31ll()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu31ll");
    static BFu31ll_BFu0i_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu0i_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu31ll_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu31ll(Test_BFu31ll_BFu0i_BFu31ll, "BFu31ll_BFu0i_BFu31ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu32i()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu32i");
    static BFu31ll_BFu0i_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu0i_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu31ll_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu31ll_BFu0i_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu32i(Test_BFu31ll_BFu0i_BFu32i, "BFu31ll_BFu0i_BFu32i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu32ll()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu32ll");
    static BFu31ll_BFu0i_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu0i_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu31ll_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu31ll_BFu0i_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu32ll(Test_BFu31ll_BFu0i_BFu32ll, "BFu31ll_BFu0i_BFu32ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu33()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu33");
    static BFu31ll_BFu0i_BFu33 lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu31ll_BFu0i_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "BFu31ll_BFu0i_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "BFu31ll_BFu0i_BFu33");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu33(Test_BFu31ll_BFu0i_BFu33, "BFu31ll_BFu0i_BFu33", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu7c()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu7c");
    static BFu31ll_BFu0i_BFu7c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31ll_BFu0i_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu31ll_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu31ll_BFu0i_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu7c(Test_BFu31ll_BFu0i_BFu7c, "BFu31ll_BFu0i_BFu7c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu7i()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu7i");
    static BFu31ll_BFu0i_BFu7i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31ll_BFu0i_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu31ll_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu31ll_BFu0i_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu7i(Test_BFu31ll_BFu0i_BFu7i, "BFu31ll_BFu0i_BFu7i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu7ll()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu7ll");
    static BFu31ll_BFu0i_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31ll_BFu0i_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu31ll_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu31ll_BFu0i_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu7ll(Test_BFu31ll_BFu0i_BFu7ll, "BFu31ll_BFu0i_BFu7ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu7s()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu7s");
    static BFu31ll_BFu0i_BFu7s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31ll_BFu0i_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu31ll_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu31ll_BFu0i_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu7s(Test_BFu31ll_BFu0i_BFu7s, "BFu31ll_BFu0i_BFu7s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu8c()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu8c");
    static BFu31ll_BFu0i_BFu8c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31ll_BFu0i_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu31ll_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu31ll_BFu0i_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu8c(Test_BFu31ll_BFu0i_BFu8c, "BFu31ll_BFu0i_BFu8c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu8i()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu8i");
    static BFu31ll_BFu0i_BFu8i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31ll_BFu0i_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu31ll_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu31ll_BFu0i_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu8i(Test_BFu31ll_BFu0i_BFu8i, "BFu31ll_BFu0i_BFu8i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu8ll()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu8ll");
    static BFu31ll_BFu0i_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31ll_BFu0i_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu31ll_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu31ll_BFu0i_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu8ll(Test_BFu31ll_BFu0i_BFu8ll, "BFu31ll_BFu0i_BFu8ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu8s()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu8s");
    static BFu31ll_BFu0i_BFu8s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31ll_BFu0i_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu31ll_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu31ll_BFu0i_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu8s(Test_BFu31ll_BFu0i_BFu8s, "BFu31ll_BFu0i_BFu8s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu9i()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu9i");
    static BFu31ll_BFu0i_BFu9i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31ll_BFu0i_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu31ll_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu31ll_BFu0i_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu9i(Test_BFu31ll_BFu0i_BFu9i, "BFu31ll_BFu0i_BFu9i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu9ll()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu9ll");
    static BFu31ll_BFu0i_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31ll_BFu0i_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu31ll_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu31ll_BFu0i_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu9ll(Test_BFu31ll_BFu0i_BFu9ll, "BFu31ll_BFu0i_BFu9ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_BFu9s()
{
  {
    init_simple_test("BFu31ll_BFu0i_BFu9s");
    static BFu31ll_BFu0i_BFu9s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31ll_BFu0i_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu31ll_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu31ll_BFu0i_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_BFu9s(Test_BFu31ll_BFu0i_BFu9s, "BFu31ll_BFu0i_BFu9s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_C()
{
  {
    init_simple_test("BFu31ll_BFu0i_C");
    static BFu31ll_BFu0i_C lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31ll_BFu0i_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_C)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_C");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_C");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0i_C.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_C(Test_BFu31ll_BFu0i_C, "BFu31ll_BFu0i_C", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_D()
{
  {
    init_simple_test("BFu31ll_BFu0i_D");
    static BFu31ll_BFu0i_D lv;
    check2(sizeof(lv), 12, "sizeof(BFu31ll_BFu0i_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_D)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_D");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_D");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0i_D.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_D(Test_BFu31ll_BFu0i_D, "BFu31ll_BFu0i_D", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_F()
{
  {
    init_simple_test("BFu31ll_BFu0i_F");
    static BFu31ll_BFu0i_F lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu0i_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_F)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_F");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_F");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0i_F.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_F(Test_BFu31ll_BFu0i_F, "BFu31ll_BFu0i_F", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_I()
{
  {
    init_simple_test("BFu31ll_BFu0i_I");
    static BFu31ll_BFu0i_I lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu0i_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_I)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_I");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_I");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0i_I.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_I(Test_BFu31ll_BFu0i_I, "BFu31ll_BFu0i_I", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_Ip()
{
  {
    init_simple_test("BFu31ll_BFu0i_Ip");
    static BFu31ll_BFu0i_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31ll_BFu0i_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_Ip");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_Ip");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0i_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_Ip(Test_BFu31ll_BFu0i_Ip, "BFu31ll_BFu0i_Ip", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_L()
{
  {
    init_simple_test("BFu31ll_BFu0i_L");
    static BFu31ll_BFu0i_L lv;
    check2(sizeof(lv), 12, "sizeof(BFu31ll_BFu0i_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_L)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_L");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_L");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0i_L.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_L(Test_BFu31ll_BFu0i_L, "BFu31ll_BFu0i_L", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_S()
{
  {
    init_simple_test("BFu31ll_BFu0i_S");
    static BFu31ll_BFu0i_S lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31ll_BFu0i_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_S)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_S");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_S");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0i_S.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_S(Test_BFu31ll_BFu0i_S, "BFu31ll_BFu0i_S", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_Uc()
{
  {
    init_simple_test("BFu31ll_BFu0i_Uc");
    static BFu31ll_BFu0i_Uc lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31ll_BFu0i_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_Uc");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_Uc");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0i_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_Uc(Test_BFu31ll_BFu0i_Uc, "BFu31ll_BFu0i_Uc", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_Ui()
{
  {
    init_simple_test("BFu31ll_BFu0i_Ui");
    static BFu31ll_BFu0i_Ui lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu0i_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_Ui");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_Ui");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0i_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_Ui(Test_BFu31ll_BFu0i_Ui, "BFu31ll_BFu0i_Ui", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_Ul()
{
  {
    init_simple_test("BFu31ll_BFu0i_Ul");
    static BFu31ll_BFu0i_Ul lv;
    check2(sizeof(lv), 12, "sizeof(BFu31ll_BFu0i_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_Ul");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_Ul");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0i_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_Ul(Test_BFu31ll_BFu0i_Ul, "BFu31ll_BFu0i_Ul", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_Us()
{
  {
    init_simple_test("BFu31ll_BFu0i_Us");
    static BFu31ll_BFu0i_Us lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31ll_BFu0i_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_Us)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_Us");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_Us");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0i_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_Us(Test_BFu31ll_BFu0i_Us, "BFu31ll_BFu0i_Us", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0i_Vp()
{
  {
    init_simple_test("BFu31ll_BFu0i_Vp");
    static BFu31ll_BFu0i_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31ll_BFu0i_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0i_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0i_Vp");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0i_Vp");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0i_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0i_Vp(Test_BFu31ll_BFu0i_Vp, "BFu31ll_BFu0i_Vp", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu0ll");
    static BFu31ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu31ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll(Test_BFu31ll_BFu0ll, "BFu31ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu0c");
    static BFu31ll_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu31ll_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu0c(Test_BFu31ll_BFu0ll_BFu0c, "BFu31ll_BFu0ll_BFu0c", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu0i");
    static BFu31ll_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu31ll_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu0i(Test_BFu31ll_BFu0ll_BFu0i, "BFu31ll_BFu0ll_BFu0i", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu0ll");
    static BFu31ll_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu31ll_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu0ll(Test_BFu31ll_BFu0ll_BFu0ll, "BFu31ll_BFu0ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu0s");
    static BFu31ll_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu31ll_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu0s(Test_BFu31ll_BFu0ll_BFu0s, "BFu31ll_BFu0ll_BFu0s", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu15i()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu15i");
    static BFu31ll_BFu0ll_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu31ll_BFu0ll_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "BFu31ll_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "BFu31ll_BFu0ll_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu15i(Test_BFu31ll_BFu0ll_BFu15i, "BFu31ll_BFu0ll_BFu15i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu15ll()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu15ll");
    static BFu31ll_BFu0ll_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu31ll_BFu0ll_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "BFu31ll_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "BFu31ll_BFu0ll_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu15ll(Test_BFu31ll_BFu0ll_BFu15ll, "BFu31ll_BFu0ll_BFu15ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu15s()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu15s");
    static BFu31ll_BFu0ll_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu31ll_BFu0ll_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "BFu31ll_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "BFu31ll_BFu0ll_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu15s(Test_BFu31ll_BFu0ll_BFu15s, "BFu31ll_BFu0ll_BFu15s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu16i()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu16i");
    static BFu31ll_BFu0ll_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu31ll_BFu0ll_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "BFu31ll_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "BFu31ll_BFu0ll_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu16i(Test_BFu31ll_BFu0ll_BFu16i, "BFu31ll_BFu0ll_BFu16i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu16ll()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu16ll");
    static BFu31ll_BFu0ll_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu31ll_BFu0ll_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "BFu31ll_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "BFu31ll_BFu0ll_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu16ll(Test_BFu31ll_BFu0ll_BFu16ll, "BFu31ll_BFu0ll_BFu16ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu16s()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu16s");
    static BFu31ll_BFu0ll_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu31ll_BFu0ll_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "BFu31ll_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "BFu31ll_BFu0ll_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu16s(Test_BFu31ll_BFu0ll_BFu16s, "BFu31ll_BFu0ll_BFu16s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu17i()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu17i");
    static BFu31ll_BFu0ll_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu31ll_BFu0ll_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "BFu31ll_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "BFu31ll_BFu0ll_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu17i(Test_BFu31ll_BFu0ll_BFu17i, "BFu31ll_BFu0ll_BFu17i", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu17ll()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu17ll");
    static BFu31ll_BFu0ll_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu31ll_BFu0ll_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "BFu31ll_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "BFu31ll_BFu0ll_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu17ll(Test_BFu31ll_BFu0ll_BFu17ll, "BFu31ll_BFu0ll_BFu17ll", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu1c()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu1c");
    static BFu31ll_BFu0ll_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu31ll_BFu0ll_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu31ll_BFu0ll_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu1c(Test_BFu31ll_BFu0ll_BFu1c, "BFu31ll_BFu0ll_BFu1c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu1i()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu1i");
    static BFu31ll_BFu0ll_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu31ll_BFu0ll_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu31ll_BFu0ll_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu1i(Test_BFu31ll_BFu0ll_BFu1i, "BFu31ll_BFu0ll_BFu1i", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu1ll()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu1ll");
    static BFu31ll_BFu0ll_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu31ll_BFu0ll_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu31ll_BFu0ll_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu1ll(Test_BFu31ll_BFu0ll_BFu1ll, "BFu31ll_BFu0ll_BFu1ll", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu1s()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu1s");
    static BFu31ll_BFu0ll_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu31ll_BFu0ll_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu31ll_BFu0ll_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu1s(Test_BFu31ll_BFu0ll_BFu1s, "BFu31ll_BFu0ll_BFu1s", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu31i()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu31i");
    static BFu31ll_BFu0ll_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31ll_BFu0ll_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "BFu31ll_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu31i(Test_BFu31ll_BFu0ll_BFu31i, "BFu31ll_BFu0ll_BFu31i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu31ll()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu31ll");
    static BFu31ll_BFu0ll_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31ll_BFu0ll_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "BFu31ll_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu31ll(Test_BFu31ll_BFu0ll_BFu31ll, "BFu31ll_BFu0ll_BFu31ll", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu32i()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu32i");
    static BFu31ll_BFu0ll_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31ll_BFu0ll_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "BFu31ll_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "BFu31ll_BFu0ll_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu32i(Test_BFu31ll_BFu0ll_BFu32i, "BFu31ll_BFu0ll_BFu32i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu32ll()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu32ll");
    static BFu31ll_BFu0ll_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31ll_BFu0ll_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "BFu31ll_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "BFu31ll_BFu0ll_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu32ll(Test_BFu31ll_BFu0ll_BFu32ll, "BFu31ll_BFu0ll_BFu32ll", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu33()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu33");
    static BFu31ll_BFu0ll_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(BFu31ll_BFu0ll_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, 1, "BFu31ll_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, hide_ull(1LL<<32), "BFu31ll_BFu0ll_BFu33");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu33(Test_BFu31ll_BFu0ll_BFu33, "BFu31ll_BFu0ll_BFu33", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu7c()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu7c");
    static BFu31ll_BFu0ll_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu31ll_BFu0ll_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu31ll_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu31ll_BFu0ll_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu7c(Test_BFu31ll_BFu0ll_BFu7c, "BFu31ll_BFu0ll_BFu7c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu7i()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu7i");
    static BFu31ll_BFu0ll_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu31ll_BFu0ll_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu31ll_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu31ll_BFu0ll_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu7i(Test_BFu31ll_BFu0ll_BFu7i, "BFu31ll_BFu0ll_BFu7i", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu7ll()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu7ll");
    static BFu31ll_BFu0ll_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu31ll_BFu0ll_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu31ll_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu31ll_BFu0ll_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu7ll(Test_BFu31ll_BFu0ll_BFu7ll, "BFu31ll_BFu0ll_BFu7ll", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu7s()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu7s");
    static BFu31ll_BFu0ll_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu31ll_BFu0ll_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu31ll_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu31ll_BFu0ll_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu7s(Test_BFu31ll_BFu0ll_BFu7s, "BFu31ll_BFu0ll_BFu7s", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu8c()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu8c");
    static BFu31ll_BFu0ll_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu31ll_BFu0ll_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu31ll_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu31ll_BFu0ll_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu8c(Test_BFu31ll_BFu0ll_BFu8c, "BFu31ll_BFu0ll_BFu8c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu8i()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu8i");
    static BFu31ll_BFu0ll_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu31ll_BFu0ll_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu31ll_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu31ll_BFu0ll_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu8i(Test_BFu31ll_BFu0ll_BFu8i, "BFu31ll_BFu0ll_BFu8i", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu8ll()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu8ll");
    static BFu31ll_BFu0ll_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu31ll_BFu0ll_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu31ll_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu31ll_BFu0ll_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu8ll(Test_BFu31ll_BFu0ll_BFu8ll, "BFu31ll_BFu0ll_BFu8ll", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu8s()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu8s");
    static BFu31ll_BFu0ll_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu31ll_BFu0ll_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu31ll_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu31ll_BFu0ll_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu8s(Test_BFu31ll_BFu0ll_BFu8s, "BFu31ll_BFu0ll_BFu8s", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu9i()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu9i");
    static BFu31ll_BFu0ll_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu31ll_BFu0ll_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "BFu31ll_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "BFu31ll_BFu0ll_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu9i(Test_BFu31ll_BFu0ll_BFu9i, "BFu31ll_BFu0ll_BFu9i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu9ll()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu9ll");
    static BFu31ll_BFu0ll_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu31ll_BFu0ll_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "BFu31ll_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "BFu31ll_BFu0ll_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu9ll(Test_BFu31ll_BFu0ll_BFu9ll, "BFu31ll_BFu0ll_BFu9ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_BFu9s()
{
  {
    init_simple_test("BFu31ll_BFu0ll_BFu9s");
    static BFu31ll_BFu0ll_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu31ll_BFu0ll_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "BFu31ll_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "BFu31ll_BFu0ll_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_BFu9s(Test_BFu31ll_BFu0ll_BFu9s, "BFu31ll_BFu0ll_BFu9s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_C()
{
  {
    init_simple_test("BFu31ll_BFu0ll_C");
    static BFu31ll_BFu0ll_C lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu31ll_BFu0ll_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_C)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_C");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_C");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu31ll_BFu0ll_C.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_C(Test_BFu31ll_BFu0ll_C, "BFu31ll_BFu0ll_C", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_D()
{
  {
    init_simple_test("BFu31ll_BFu0ll_D");
    static BFu31ll_BFu0ll_D lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu31ll_BFu0ll_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_D)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_D");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_D");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu31ll_BFu0ll_D.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_D(Test_BFu31ll_BFu0ll_D, "BFu31ll_BFu0ll_D", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_F()
{
  {
    init_simple_test("BFu31ll_BFu0ll_F");
    static BFu31ll_BFu0ll_F lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31ll_BFu0ll_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_F)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_F");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_F");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu31ll_BFu0ll_F.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_F(Test_BFu31ll_BFu0ll_F, "BFu31ll_BFu0ll_F", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_I()
{
  {
    init_simple_test("BFu31ll_BFu0ll_I");
    static BFu31ll_BFu0ll_I lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31ll_BFu0ll_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_I)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_I");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_I");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu31ll_BFu0ll_I.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_I(Test_BFu31ll_BFu0ll_I, "BFu31ll_BFu0ll_I", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_Ip()
{
  {
    init_simple_test("BFu31ll_BFu0ll_Ip");
    static BFu31ll_BFu0ll_Ip lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu31ll_BFu0ll_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_Ip");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_Ip");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu31ll_BFu0ll_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_Ip(Test_BFu31ll_BFu0ll_Ip, "BFu31ll_BFu0ll_Ip", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_L()
{
  {
    init_simple_test("BFu31ll_BFu0ll_L");
    static BFu31ll_BFu0ll_L lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu31ll_BFu0ll_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_L)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_L");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_L");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu31ll_BFu0ll_L.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_L(Test_BFu31ll_BFu0ll_L, "BFu31ll_BFu0ll_L", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_S()
{
  {
    init_simple_test("BFu31ll_BFu0ll_S");
    static BFu31ll_BFu0ll_S lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu31ll_BFu0ll_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_S)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_S");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_S");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu31ll_BFu0ll_S.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_S(Test_BFu31ll_BFu0ll_S, "BFu31ll_BFu0ll_S", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_Uc()
{
  {
    init_simple_test("BFu31ll_BFu0ll_Uc");
    static BFu31ll_BFu0ll_Uc lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu31ll_BFu0ll_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_Uc");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_Uc");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu31ll_BFu0ll_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_Uc(Test_BFu31ll_BFu0ll_Uc, "BFu31ll_BFu0ll_Uc", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_Ui()
{
  {
    init_simple_test("BFu31ll_BFu0ll_Ui");
    static BFu31ll_BFu0ll_Ui lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31ll_BFu0ll_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_Ui");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_Ui");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu31ll_BFu0ll_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_Ui(Test_BFu31ll_BFu0ll_Ui, "BFu31ll_BFu0ll_Ui", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_Ul()
{
  {
    init_simple_test("BFu31ll_BFu0ll_Ul");
    static BFu31ll_BFu0ll_Ul lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu31ll_BFu0ll_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_Ul");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_Ul");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu31ll_BFu0ll_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_Ul(Test_BFu31ll_BFu0ll_Ul, "BFu31ll_BFu0ll_Ul", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_Us()
{
  {
    init_simple_test("BFu31ll_BFu0ll_Us");
    static BFu31ll_BFu0ll_Us lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu31ll_BFu0ll_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_Us)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_Us");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_Us");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu31ll_BFu0ll_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_Us(Test_BFu31ll_BFu0ll_Us, "BFu31ll_BFu0ll_Us", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0ll_Vp()
{
  {
    init_simple_test("BFu31ll_BFu0ll_Vp");
    static BFu31ll_BFu0ll_Vp lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu31ll_BFu0ll_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0ll_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0ll_Vp");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0ll_Vp");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu31ll_BFu0ll_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0ll_Vp(Test_BFu31ll_BFu0ll_Vp, "BFu31ll_BFu0ll_Vp", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu0s");
    static BFu31ll_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu31ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s(Test_BFu31ll_BFu0s, "BFu31ll_BFu0s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu0c");
    static BFu31ll_BFu0s_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu31ll_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu0c(Test_BFu31ll_BFu0s_BFu0c, "BFu31ll_BFu0s_BFu0c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu0i");
    static BFu31ll_BFu0s_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu31ll_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu0i(Test_BFu31ll_BFu0s_BFu0i, "BFu31ll_BFu0s_BFu0i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu0ll");
    static BFu31ll_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu31ll_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu0ll(Test_BFu31ll_BFu0s_BFu0ll, "BFu31ll_BFu0s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu0s");
    static BFu31ll_BFu0s_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu31ll_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu0s(Test_BFu31ll_BFu0s_BFu0s, "BFu31ll_BFu0s_BFu0s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu15i()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu15i");
    static BFu31ll_BFu0s_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu0s_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu31ll_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu31ll_BFu0s_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu15i(Test_BFu31ll_BFu0s_BFu15i, "BFu31ll_BFu0s_BFu15i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu15ll()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu15ll");
    static BFu31ll_BFu0s_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu0s_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu31ll_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu31ll_BFu0s_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu15ll(Test_BFu31ll_BFu0s_BFu15ll, "BFu31ll_BFu0s_BFu15ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu15s()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu15s");
    static BFu31ll_BFu0s_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu0s_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu31ll_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu31ll_BFu0s_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu15s(Test_BFu31ll_BFu0s_BFu15s, "BFu31ll_BFu0s_BFu15s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu16i()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu16i");
    static BFu31ll_BFu0s_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu0s_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu31ll_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu31ll_BFu0s_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu16i(Test_BFu31ll_BFu0s_BFu16i, "BFu31ll_BFu0s_BFu16i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu16ll()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu16ll");
    static BFu31ll_BFu0s_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu0s_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu31ll_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu31ll_BFu0s_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu16ll(Test_BFu31ll_BFu0s_BFu16ll, "BFu31ll_BFu0s_BFu16ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu16s()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu16s");
    static BFu31ll_BFu0s_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu0s_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu31ll_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu31ll_BFu0s_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu16s(Test_BFu31ll_BFu0s_BFu16s, "BFu31ll_BFu0s_BFu16s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu17i()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu17i");
    static BFu31ll_BFu0s_BFu17i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu31ll_BFu0s_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu31ll_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu31ll_BFu0s_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu17i(Test_BFu31ll_BFu0s_BFu17i, "BFu31ll_BFu0s_BFu17i", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu17ll()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu17ll");
    static BFu31ll_BFu0s_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu31ll_BFu0s_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu31ll_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu31ll_BFu0s_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu17ll(Test_BFu31ll_BFu0s_BFu17ll, "BFu31ll_BFu0s_BFu17ll", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu1c()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu1c");
    static BFu31ll_BFu0s_BFu1c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31ll_BFu0s_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu1c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu31ll_BFu0s_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu1c(Test_BFu31ll_BFu0s_BFu1c, "BFu31ll_BFu0s_BFu1c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu1i()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu1i");
    static BFu31ll_BFu0s_BFu1i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31ll_BFu0s_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu1i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu31ll_BFu0s_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu1i(Test_BFu31ll_BFu0s_BFu1i, "BFu31ll_BFu0s_BFu1i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu1ll()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu1ll");
    static BFu31ll_BFu0s_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31ll_BFu0s_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu1ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu31ll_BFu0s_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu1ll(Test_BFu31ll_BFu0s_BFu1ll, "BFu31ll_BFu0s_BFu1ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu1s()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu1s");
    static BFu31ll_BFu0s_BFu1s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31ll_BFu0s_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu1s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu31ll_BFu0s_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu1s(Test_BFu31ll_BFu0s_BFu1s, "BFu31ll_BFu0s_BFu1s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu31i()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu31i");
    static BFu31ll_BFu0s_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu0s_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu31ll_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu31i(Test_BFu31ll_BFu0s_BFu31i, "BFu31ll_BFu0s_BFu31i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu31ll()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu31ll");
    static BFu31ll_BFu0s_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu0s_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu31ll_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu31ll(Test_BFu31ll_BFu0s_BFu31ll, "BFu31ll_BFu0s_BFu31ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu32i()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu32i");
    static BFu31ll_BFu0s_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu0s_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu31ll_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu31ll_BFu0s_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu32i(Test_BFu31ll_BFu0s_BFu32i, "BFu31ll_BFu0s_BFu32i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu32ll()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu32ll");
    static BFu31ll_BFu0s_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu0s_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu31ll_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu31ll_BFu0s_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu32ll(Test_BFu31ll_BFu0s_BFu32ll, "BFu31ll_BFu0s_BFu32ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu33()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu33");
    static BFu31ll_BFu0s_BFu33 lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu31ll_BFu0s_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "BFu31ll_BFu0s_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "BFu31ll_BFu0s_BFu33");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu33(Test_BFu31ll_BFu0s_BFu33, "BFu31ll_BFu0s_BFu33", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu7c()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu7c");
    static BFu31ll_BFu0s_BFu7c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31ll_BFu0s_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu31ll_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu31ll_BFu0s_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu7c(Test_BFu31ll_BFu0s_BFu7c, "BFu31ll_BFu0s_BFu7c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu7i()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu7i");
    static BFu31ll_BFu0s_BFu7i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31ll_BFu0s_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu31ll_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu31ll_BFu0s_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu7i(Test_BFu31ll_BFu0s_BFu7i, "BFu31ll_BFu0s_BFu7i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu7ll()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu7ll");
    static BFu31ll_BFu0s_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31ll_BFu0s_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu31ll_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu31ll_BFu0s_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu7ll(Test_BFu31ll_BFu0s_BFu7ll, "BFu31ll_BFu0s_BFu7ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu7s()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu7s");
    static BFu31ll_BFu0s_BFu7s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31ll_BFu0s_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu31ll_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu31ll_BFu0s_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu7s(Test_BFu31ll_BFu0s_BFu7s, "BFu31ll_BFu0s_BFu7s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu8c()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu8c");
    static BFu31ll_BFu0s_BFu8c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31ll_BFu0s_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu31ll_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu31ll_BFu0s_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu8c(Test_BFu31ll_BFu0s_BFu8c, "BFu31ll_BFu0s_BFu8c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu8i()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu8i");
    static BFu31ll_BFu0s_BFu8i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31ll_BFu0s_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu31ll_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu31ll_BFu0s_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu8i(Test_BFu31ll_BFu0s_BFu8i, "BFu31ll_BFu0s_BFu8i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu8ll()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu8ll");
    static BFu31ll_BFu0s_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31ll_BFu0s_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu31ll_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu31ll_BFu0s_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu8ll(Test_BFu31ll_BFu0s_BFu8ll, "BFu31ll_BFu0s_BFu8ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu8s()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu8s");
    static BFu31ll_BFu0s_BFu8s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31ll_BFu0s_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu31ll_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu31ll_BFu0s_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu8s(Test_BFu31ll_BFu0s_BFu8s, "BFu31ll_BFu0s_BFu8s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu9i()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu9i");
    static BFu31ll_BFu0s_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu0s_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu31ll_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu31ll_BFu0s_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu9i(Test_BFu31ll_BFu0s_BFu9i, "BFu31ll_BFu0s_BFu9i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu9ll()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu9ll");
    static BFu31ll_BFu0s_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu0s_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu31ll_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu31ll_BFu0s_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu9ll(Test_BFu31ll_BFu0s_BFu9ll, "BFu31ll_BFu0s_BFu9ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_BFu9s()
{
  {
    init_simple_test("BFu31ll_BFu0s_BFu9s");
    static BFu31ll_BFu0s_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu0s_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu31ll_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu31ll_BFu0s_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_BFu9s(Test_BFu31ll_BFu0s_BFu9s, "BFu31ll_BFu0s_BFu9s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_C()
{
  {
    init_simple_test("BFu31ll_BFu0s_C");
    static BFu31ll_BFu0s_C lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31ll_BFu0s_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_C)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_C");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_C");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0s_C.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_C(Test_BFu31ll_BFu0s_C, "BFu31ll_BFu0s_C", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_D()
{
  {
    init_simple_test("BFu31ll_BFu0s_D");
    static BFu31ll_BFu0s_D lv;
    check2(sizeof(lv), 12, "sizeof(BFu31ll_BFu0s_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_D)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_D");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_D");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0s_D.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_D(Test_BFu31ll_BFu0s_D, "BFu31ll_BFu0s_D", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_F()
{
  {
    init_simple_test("BFu31ll_BFu0s_F");
    static BFu31ll_BFu0s_F lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu0s_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_F)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_F");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_F");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0s_F.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_F(Test_BFu31ll_BFu0s_F, "BFu31ll_BFu0s_F", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_I()
{
  {
    init_simple_test("BFu31ll_BFu0s_I");
    static BFu31ll_BFu0s_I lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu0s_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_I)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_I");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_I");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0s_I.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_I(Test_BFu31ll_BFu0s_I, "BFu31ll_BFu0s_I", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_Ip()
{
  {
    init_simple_test("BFu31ll_BFu0s_Ip");
    static BFu31ll_BFu0s_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31ll_BFu0s_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_Ip");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_Ip");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0s_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_Ip(Test_BFu31ll_BFu0s_Ip, "BFu31ll_BFu0s_Ip", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_L()
{
  {
    init_simple_test("BFu31ll_BFu0s_L");
    static BFu31ll_BFu0s_L lv;
    check2(sizeof(lv), 12, "sizeof(BFu31ll_BFu0s_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_L)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_L");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_L");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0s_L.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_L(Test_BFu31ll_BFu0s_L, "BFu31ll_BFu0s_L", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_S()
{
  {
    init_simple_test("BFu31ll_BFu0s_S");
    static BFu31ll_BFu0s_S lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu0s_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_S)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_S");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_S");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0s_S.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_S(Test_BFu31ll_BFu0s_S, "BFu31ll_BFu0s_S", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_Uc()
{
  {
    init_simple_test("BFu31ll_BFu0s_Uc");
    static BFu31ll_BFu0s_Uc lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu31ll_BFu0s_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_Uc");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_Uc");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0s_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_Uc(Test_BFu31ll_BFu0s_Uc, "BFu31ll_BFu0s_Uc", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_Ui()
{
  {
    init_simple_test("BFu31ll_BFu0s_Ui");
    static BFu31ll_BFu0s_Ui lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu0s_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_Ui");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_Ui");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0s_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_Ui(Test_BFu31ll_BFu0s_Ui, "BFu31ll_BFu0s_Ui", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_Ul()
{
  {
    init_simple_test("BFu31ll_BFu0s_Ul");
    static BFu31ll_BFu0s_Ul lv;
    check2(sizeof(lv), 12, "sizeof(BFu31ll_BFu0s_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_Ul");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_Ul");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0s_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_Ul(Test_BFu31ll_BFu0s_Ul, "BFu31ll_BFu0s_Ul", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_Us()
{
  {
    init_simple_test("BFu31ll_BFu0s_Us");
    static BFu31ll_BFu0s_Us lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu0s_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_Us)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_Us");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_Us");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0s_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_Us(Test_BFu31ll_BFu0s_Us, "BFu31ll_BFu0s_Us", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu0s_Vp()
{
  {
    init_simple_test("BFu31ll_BFu0s_Vp");
    static BFu31ll_BFu0s_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31ll_BFu0s_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu0s_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu0s_Vp");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu0s_Vp");
    check_field_offset(lv, v2, 4, "BFu31ll_BFu0s_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu0s_Vp(Test_BFu31ll_BFu0s_Vp, "BFu31ll_BFu0s_Vp", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu15i_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu15i_BFu0c");
    static BFu31ll_BFu15i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu15i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu15i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu15i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "BFu31ll_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "BFu31ll_BFu15i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu15i_BFu0c(Test_BFu31ll_BFu15i_BFu0c, "BFu31ll_BFu15i_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu15i_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu15i_BFu0i");
    static BFu31ll_BFu15i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu15i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu15i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu15i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "BFu31ll_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "BFu31ll_BFu15i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu15i_BFu0i(Test_BFu31ll_BFu15i_BFu0i, "BFu31ll_BFu15i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu15i_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu15i_BFu0ll");
    static BFu31ll_BFu15i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu15i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu15i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu15i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "BFu31ll_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "BFu31ll_BFu15i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu15i_BFu0ll(Test_BFu31ll_BFu15i_BFu0ll, "BFu31ll_BFu15i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu15i_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu15i_BFu0s");
    static BFu31ll_BFu15i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu15i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu15i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu15i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "BFu31ll_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "BFu31ll_BFu15i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu15i_BFu0s(Test_BFu31ll_BFu15i_BFu0s, "BFu31ll_BFu15i_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu15ll_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu15ll_BFu0c");
    static BFu31ll_BFu15ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu15ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu15ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu15ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "BFu31ll_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "BFu31ll_BFu15ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu15ll_BFu0c(Test_BFu31ll_BFu15ll_BFu0c, "BFu31ll_BFu15ll_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu15ll_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu15ll_BFu0i");
    static BFu31ll_BFu15ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu15ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu15ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu15ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "BFu31ll_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "BFu31ll_BFu15ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu15ll_BFu0i(Test_BFu31ll_BFu15ll_BFu0i, "BFu31ll_BFu15ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu15ll_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu15ll_BFu0ll");
    static BFu31ll_BFu15ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu15ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu15ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "BFu31ll_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "BFu31ll_BFu15ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu15ll_BFu0ll(Test_BFu31ll_BFu15ll_BFu0ll, "BFu31ll_BFu15ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu15ll_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu15ll_BFu0s");
    static BFu31ll_BFu15ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu15ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu15ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu15ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "BFu31ll_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "BFu31ll_BFu15ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu15ll_BFu0s(Test_BFu31ll_BFu15ll_BFu0s, "BFu31ll_BFu15ll_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu15s_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu15s_BFu0c");
    static BFu31ll_BFu15s_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu15s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu15s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu15s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "BFu31ll_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "BFu31ll_BFu15s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu15s_BFu0c(Test_BFu31ll_BFu15s_BFu0c, "BFu31ll_BFu15s_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu15s_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu15s_BFu0i");
    static BFu31ll_BFu15s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu15s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu15s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu15s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "BFu31ll_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "BFu31ll_BFu15s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu15s_BFu0i(Test_BFu31ll_BFu15s_BFu0i, "BFu31ll_BFu15s_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu15s_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu15s_BFu0ll");
    static BFu31ll_BFu15s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu15s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu15s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu15s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "BFu31ll_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "BFu31ll_BFu15s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu15s_BFu0ll(Test_BFu31ll_BFu15s_BFu0ll, "BFu31ll_BFu15s_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu15s_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu15s_BFu0s");
    static BFu31ll_BFu15s_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu15s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu15s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu15s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 15, 1, "BFu31ll_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 15, hide_ull(1LL<<14), "BFu31ll_BFu15s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu15s_BFu0s(Test_BFu31ll_BFu15s_BFu0s, "BFu31ll_BFu15s_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu16i_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu16i_BFu0c");
    static BFu31ll_BFu16i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu16i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu16i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu16i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "BFu31ll_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "BFu31ll_BFu16i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu16i_BFu0c(Test_BFu31ll_BFu16i_BFu0c, "BFu31ll_BFu16i_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu16i_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu16i_BFu0i");
    static BFu31ll_BFu16i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu16i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu16i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu16i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "BFu31ll_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "BFu31ll_BFu16i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu16i_BFu0i(Test_BFu31ll_BFu16i_BFu0i, "BFu31ll_BFu16i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu16i_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu16i_BFu0ll");
    static BFu31ll_BFu16i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu16i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu16i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu16i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "BFu31ll_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "BFu31ll_BFu16i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu16i_BFu0ll(Test_BFu31ll_BFu16i_BFu0ll, "BFu31ll_BFu16i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu16i_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu16i_BFu0s");
    static BFu31ll_BFu16i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu16i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu16i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu16i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "BFu31ll_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "BFu31ll_BFu16i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu16i_BFu0s(Test_BFu31ll_BFu16i_BFu0s, "BFu31ll_BFu16i_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu16ll_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu16ll_BFu0c");
    static BFu31ll_BFu16ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu16ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu16ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu16ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "BFu31ll_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "BFu31ll_BFu16ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu16ll_BFu0c(Test_BFu31ll_BFu16ll_BFu0c, "BFu31ll_BFu16ll_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu16ll_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu16ll_BFu0i");
    static BFu31ll_BFu16ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu16ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu16ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu16ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "BFu31ll_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "BFu31ll_BFu16ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu16ll_BFu0i(Test_BFu31ll_BFu16ll_BFu0i, "BFu31ll_BFu16ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu16ll_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu16ll_BFu0ll");
    static BFu31ll_BFu16ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu16ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu16ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "BFu31ll_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "BFu31ll_BFu16ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu16ll_BFu0ll(Test_BFu31ll_BFu16ll_BFu0ll, "BFu31ll_BFu16ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu16ll_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu16ll_BFu0s");
    static BFu31ll_BFu16ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu16ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu16ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu16ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "BFu31ll_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "BFu31ll_BFu16ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu16ll_BFu0s(Test_BFu31ll_BFu16ll_BFu0s, "BFu31ll_BFu16ll_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu16s_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu16s_BFu0c");
    static BFu31ll_BFu16s_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu16s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu16s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu16s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "BFu31ll_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "BFu31ll_BFu16s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu16s_BFu0c(Test_BFu31ll_BFu16s_BFu0c, "BFu31ll_BFu16s_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu16s_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu16s_BFu0i");
    static BFu31ll_BFu16s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu16s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu16s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu16s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "BFu31ll_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "BFu31ll_BFu16s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu16s_BFu0i(Test_BFu31ll_BFu16s_BFu0i, "BFu31ll_BFu16s_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu16s_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu16s_BFu0ll");
    static BFu31ll_BFu16s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu16s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu16s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu16s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "BFu31ll_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "BFu31ll_BFu16s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu16s_BFu0ll(Test_BFu31ll_BFu16s_BFu0ll, "BFu31ll_BFu16s_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu16s_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu16s_BFu0s");
    static BFu31ll_BFu16s_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu16s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu16s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu16s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 16, 1, "BFu31ll_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 16, hide_ull(1LL<<15), "BFu31ll_BFu16s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu16s_BFu0s(Test_BFu31ll_BFu16s_BFu0s, "BFu31ll_BFu16s_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu17i_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu17i_BFu0c");
    static BFu31ll_BFu17i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu17i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu17i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu17i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "BFu31ll_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "BFu31ll_BFu17i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu17i_BFu0c(Test_BFu31ll_BFu17i_BFu0c, "BFu31ll_BFu17i_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu17i_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu17i_BFu0i");
    static BFu31ll_BFu17i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu17i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu17i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu17i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "BFu31ll_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "BFu31ll_BFu17i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu17i_BFu0i(Test_BFu31ll_BFu17i_BFu0i, "BFu31ll_BFu17i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu17i_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu17i_BFu0ll");
    static BFu31ll_BFu17i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu17i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu17i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu17i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "BFu31ll_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "BFu31ll_BFu17i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu17i_BFu0ll(Test_BFu31ll_BFu17i_BFu0ll, "BFu31ll_BFu17i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu17i_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu17i_BFu0s");
    static BFu31ll_BFu17i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu17i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu17i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu17i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "BFu31ll_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "BFu31ll_BFu17i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu17i_BFu0s(Test_BFu31ll_BFu17i_BFu0s, "BFu31ll_BFu17i_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu17ll_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu17ll_BFu0c");
    static BFu31ll_BFu17ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu17ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu17ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu17ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "BFu31ll_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "BFu31ll_BFu17ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu17ll_BFu0c(Test_BFu31ll_BFu17ll_BFu0c, "BFu31ll_BFu17ll_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu17ll_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu17ll_BFu0i");
    static BFu31ll_BFu17ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu17ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu17ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu17ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "BFu31ll_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "BFu31ll_BFu17ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu17ll_BFu0i(Test_BFu31ll_BFu17ll_BFu0i, "BFu31ll_BFu17ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu17ll_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu17ll_BFu0ll");
    static BFu31ll_BFu17ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu17ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu17ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "BFu31ll_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "BFu31ll_BFu17ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu17ll_BFu0ll(Test_BFu31ll_BFu17ll_BFu0ll, "BFu31ll_BFu17ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu17ll_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu17ll_BFu0s");
    static BFu31ll_BFu17ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_BFu17ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu17ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu17ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 17, 1, "BFu31ll_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 17, hide_ull(1LL<<16), "BFu31ll_BFu17ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu17ll_BFu0s(Test_BFu31ll_BFu17ll_BFu0s, "BFu31ll_BFu17ll_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu1c_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu1c_BFu0c");
    static BFu31ll_BFu1c_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu31ll_BFu1c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu1c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu1c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu1c_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31ll_BFu1c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu1c_BFu0c(Test_BFu31ll_BFu1c_BFu0c, "BFu31ll_BFu1c_BFu0c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu1c_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu1c_BFu0i");
    static BFu31ll_BFu1c_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu31ll_BFu1c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu1c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu1c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu1c_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31ll_BFu1c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu1c_BFu0i(Test_BFu31ll_BFu1c_BFu0i, "BFu31ll_BFu1c_BFu0i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu1c_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu1c_BFu0ll");
    static BFu31ll_BFu1c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu31ll_BFu1c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu1c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu1c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu1c_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31ll_BFu1c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu1c_BFu0ll(Test_BFu31ll_BFu1c_BFu0ll, "BFu31ll_BFu1c_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu1c_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu1c_BFu0s");
    static BFu31ll_BFu1c_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu31ll_BFu1c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu1c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu1c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu1c_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31ll_BFu1c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu1c_BFu0s(Test_BFu31ll_BFu1c_BFu0s, "BFu31ll_BFu1c_BFu0s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu1i_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu1i_BFu0c");
    static BFu31ll_BFu1i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu31ll_BFu1i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu1i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu1i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu1i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31ll_BFu1i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu1i_BFu0c(Test_BFu31ll_BFu1i_BFu0c, "BFu31ll_BFu1i_BFu0c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu1i_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu1i_BFu0i");
    static BFu31ll_BFu1i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu31ll_BFu1i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu1i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu1i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu1i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31ll_BFu1i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu1i_BFu0i(Test_BFu31ll_BFu1i_BFu0i, "BFu31ll_BFu1i_BFu0i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu1i_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu1i_BFu0ll");
    static BFu31ll_BFu1i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu31ll_BFu1i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu1i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu1i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu1i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31ll_BFu1i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu1i_BFu0ll(Test_BFu31ll_BFu1i_BFu0ll, "BFu31ll_BFu1i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu1i_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu1i_BFu0s");
    static BFu31ll_BFu1i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu31ll_BFu1i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu1i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu1i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu1i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31ll_BFu1i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu1i_BFu0s(Test_BFu31ll_BFu1i_BFu0s, "BFu31ll_BFu1i_BFu0s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu1ll_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu1ll_BFu0c");
    static BFu31ll_BFu1ll_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu31ll_BFu1ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu1ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu1ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu1ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31ll_BFu1ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu1ll_BFu0c(Test_BFu31ll_BFu1ll_BFu0c, "BFu31ll_BFu1ll_BFu0c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu1ll_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu1ll_BFu0i");
    static BFu31ll_BFu1ll_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu31ll_BFu1ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu1ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu1ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu1ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31ll_BFu1ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu1ll_BFu0i(Test_BFu31ll_BFu1ll_BFu0i, "BFu31ll_BFu1ll_BFu0i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu1ll_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu1ll_BFu0ll");
    static BFu31ll_BFu1ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu31ll_BFu1ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu1ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31ll_BFu1ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu1ll_BFu0ll(Test_BFu31ll_BFu1ll_BFu0ll, "BFu31ll_BFu1ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu1ll_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu1ll_BFu0s");
    static BFu31ll_BFu1ll_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu31ll_BFu1ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu1ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu1ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu1ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31ll_BFu1ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu1ll_BFu0s(Test_BFu31ll_BFu1ll_BFu0s, "BFu31ll_BFu1ll_BFu0s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu1s_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu1s_BFu0c");
    static BFu31ll_BFu1s_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu31ll_BFu1s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu1s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu1s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu1s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31ll_BFu1s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu1s_BFu0c(Test_BFu31ll_BFu1s_BFu0c, "BFu31ll_BFu1s_BFu0c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu1s_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu1s_BFu0i");
    static BFu31ll_BFu1s_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu31ll_BFu1s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu1s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu1s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu1s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31ll_BFu1s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu1s_BFu0i(Test_BFu31ll_BFu1s_BFu0i, "BFu31ll_BFu1s_BFu0i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu1s_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu1s_BFu0ll");
    static BFu31ll_BFu1s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu31ll_BFu1s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu1s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu1s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu1s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31ll_BFu1s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu1s_BFu0ll(Test_BFu31ll_BFu1s_BFu0ll, "BFu31ll_BFu1s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu1s_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu1s_BFu0s");
    static BFu31ll_BFu1s_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu31ll_BFu1s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu1s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu1s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu1s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 1, 1, "BFu31ll_BFu1s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu1s_BFu0s(Test_BFu31ll_BFu1s_BFu0s, "BFu31ll_BFu1s_BFu0s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu31i_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu31i_BFu0c");
    static BFu31ll_BFu31i_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu31i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu31i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu31i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "BFu31ll_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "BFu31ll_BFu31i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu31i_BFu0c(Test_BFu31ll_BFu31i_BFu0c, "BFu31ll_BFu31i_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu31i_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu31i_BFu0i");
    static BFu31ll_BFu31i_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu31i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu31i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu31i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "BFu31ll_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "BFu31ll_BFu31i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu31i_BFu0i(Test_BFu31ll_BFu31i_BFu0i, "BFu31ll_BFu31i_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu31i_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu31i_BFu0ll");
    static BFu31ll_BFu31i_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu31i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu31i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu31i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "BFu31ll_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "BFu31ll_BFu31i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu31i_BFu0ll(Test_BFu31ll_BFu31i_BFu0ll, "BFu31ll_BFu31i_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu31i_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu31i_BFu0s");
    static BFu31ll_BFu31i_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu31i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu31i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu31i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "BFu31ll_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "BFu31ll_BFu31i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu31i_BFu0s(Test_BFu31ll_BFu31i_BFu0s, "BFu31ll_BFu31i_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu31ll_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu31ll_BFu0c");
    static BFu31ll_BFu31ll_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu31ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu31ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu31ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "BFu31ll_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "BFu31ll_BFu31ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu31ll_BFu0c(Test_BFu31ll_BFu31ll_BFu0c, "BFu31ll_BFu31ll_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu31ll_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu31ll_BFu0i");
    static BFu31ll_BFu31ll_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu31ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu31ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu31ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "BFu31ll_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "BFu31ll_BFu31ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu31ll_BFu0i(Test_BFu31ll_BFu31ll_BFu0i, "BFu31ll_BFu31ll_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu31ll_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu31ll_BFu0ll");
    static BFu31ll_BFu31ll_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu31ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu31ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "BFu31ll_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "BFu31ll_BFu31ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu31ll_BFu0ll(Test_BFu31ll_BFu31ll_BFu0ll, "BFu31ll_BFu31ll_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu31ll_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu31ll_BFu0s");
    static BFu31ll_BFu31ll_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu31ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu31ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu31ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 31, 1, "BFu31ll_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 31, hide_ull(1LL<<30), "BFu31ll_BFu31ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu31ll_BFu0s(Test_BFu31ll_BFu31ll_BFu0s, "BFu31ll_BFu31ll_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu32i_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu32i_BFu0c");
    static BFu31ll_BFu32i_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu32i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu32i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu32i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "BFu31ll_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "BFu31ll_BFu32i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu32i_BFu0c(Test_BFu31ll_BFu32i_BFu0c, "BFu31ll_BFu32i_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu32i_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu32i_BFu0i");
    static BFu31ll_BFu32i_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu32i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu32i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu32i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "BFu31ll_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "BFu31ll_BFu32i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu32i_BFu0i(Test_BFu31ll_BFu32i_BFu0i, "BFu31ll_BFu32i_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu32i_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu32i_BFu0ll");
    static BFu31ll_BFu32i_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu32i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu32i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu32i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "BFu31ll_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "BFu31ll_BFu32i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu32i_BFu0ll(Test_BFu31ll_BFu32i_BFu0ll, "BFu31ll_BFu32i_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu32i_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu32i_BFu0s");
    static BFu31ll_BFu32i_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu32i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu32i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu32i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "BFu31ll_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "BFu31ll_BFu32i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu32i_BFu0s(Test_BFu31ll_BFu32i_BFu0s, "BFu31ll_BFu32i_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu32ll_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu32ll_BFu0c");
    static BFu31ll_BFu32ll_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu32ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu32ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu32ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "BFu31ll_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "BFu31ll_BFu32ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu32ll_BFu0c(Test_BFu31ll_BFu32ll_BFu0c, "BFu31ll_BFu32ll_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu32ll_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu32ll_BFu0i");
    static BFu31ll_BFu32ll_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu32ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu32ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu32ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "BFu31ll_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "BFu31ll_BFu32ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu32ll_BFu0i(Test_BFu31ll_BFu32ll_BFu0i, "BFu31ll_BFu32ll_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu32ll_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu32ll_BFu0ll");
    static BFu31ll_BFu32ll_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu32ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu32ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "BFu31ll_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "BFu31ll_BFu32ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu32ll_BFu0ll(Test_BFu31ll_BFu32ll_BFu0ll, "BFu31ll_BFu32ll_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu32ll_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu32ll_BFu0s");
    static BFu31ll_BFu32ll_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu32ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu32ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu32ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 32, 1, "BFu31ll_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 32, hide_ull(1LL<<31), "BFu31ll_BFu32ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu32ll_BFu0s(Test_BFu31ll_BFu32ll_BFu0s, "BFu31ll_BFu32ll_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu33_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu33_BFu0c");
    static BFu31ll_BFu33_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu33_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu33_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu33_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 33, 1, "BFu31ll_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 33, hide_ull(1LL<<32), "BFu31ll_BFu33_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu33_BFu0c(Test_BFu31ll_BFu33_BFu0c, "BFu31ll_BFu33_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu33_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu33_BFu0i");
    static BFu31ll_BFu33_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu33_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu33_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu33_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 33, 1, "BFu31ll_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 33, hide_ull(1LL<<32), "BFu31ll_BFu33_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu33_BFu0i(Test_BFu31ll_BFu33_BFu0i, "BFu31ll_BFu33_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu33_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu33_BFu0ll");
    static BFu31ll_BFu33_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu33_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu33_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu33_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 33, 1, "BFu31ll_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 33, hide_ull(1LL<<32), "BFu31ll_BFu33_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu33_BFu0ll(Test_BFu31ll_BFu33_BFu0ll, "BFu31ll_BFu33_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu33_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu33_BFu0s");
    static BFu31ll_BFu33_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_BFu33_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu33_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu33_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 33, 1, "BFu31ll_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 33, hide_ull(1LL<<32), "BFu31ll_BFu33_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu33_BFu0s(Test_BFu31ll_BFu33_BFu0s, "BFu31ll_BFu33_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu7c_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu7c_BFu0c");
    static BFu31ll_BFu7c_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu7c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu7c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu7c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31ll_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31ll_BFu7c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu7c_BFu0c(Test_BFu31ll_BFu7c_BFu0c, "BFu31ll_BFu7c_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu7c_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu7c_BFu0i");
    static BFu31ll_BFu7c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu7c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu7c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu7c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31ll_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31ll_BFu7c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu7c_BFu0i(Test_BFu31ll_BFu7c_BFu0i, "BFu31ll_BFu7c_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu7c_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu7c_BFu0ll");
    static BFu31ll_BFu7c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu7c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu7c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu7c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31ll_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31ll_BFu7c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu7c_BFu0ll(Test_BFu31ll_BFu7c_BFu0ll, "BFu31ll_BFu7c_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu7c_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu7c_BFu0s");
    static BFu31ll_BFu7c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31ll_BFu7c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu7c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu7c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31ll_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31ll_BFu7c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu7c_BFu0s(Test_BFu31ll_BFu7c_BFu0s, "BFu31ll_BFu7c_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu7i_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu7i_BFu0c");
    static BFu31ll_BFu7i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu7i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu7i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu7i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31ll_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31ll_BFu7i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu7i_BFu0c(Test_BFu31ll_BFu7i_BFu0c, "BFu31ll_BFu7i_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu7i_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu7i_BFu0i");
    static BFu31ll_BFu7i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu7i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu7i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu7i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31ll_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31ll_BFu7i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu7i_BFu0i(Test_BFu31ll_BFu7i_BFu0i, "BFu31ll_BFu7i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu7i_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu7i_BFu0ll");
    static BFu31ll_BFu7i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu7i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu7i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu7i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31ll_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31ll_BFu7i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu7i_BFu0ll(Test_BFu31ll_BFu7i_BFu0ll, "BFu31ll_BFu7i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu7i_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu7i_BFu0s");
    static BFu31ll_BFu7i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31ll_BFu7i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu7i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu7i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31ll_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31ll_BFu7i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu7i_BFu0s(Test_BFu31ll_BFu7i_BFu0s, "BFu31ll_BFu7i_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu7ll_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu7ll_BFu0c");
    static BFu31ll_BFu7ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu7ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu7ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu7ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31ll_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31ll_BFu7ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu7ll_BFu0c(Test_BFu31ll_BFu7ll_BFu0c, "BFu31ll_BFu7ll_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu7ll_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu7ll_BFu0i");
    static BFu31ll_BFu7ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu7ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu7ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu7ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31ll_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31ll_BFu7ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu7ll_BFu0i(Test_BFu31ll_BFu7ll_BFu0i, "BFu31ll_BFu7ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu7ll_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu7ll_BFu0ll");
    static BFu31ll_BFu7ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu7ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu7ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31ll_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31ll_BFu7ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu7ll_BFu0ll(Test_BFu31ll_BFu7ll_BFu0ll, "BFu31ll_BFu7ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu7ll_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu7ll_BFu0s");
    static BFu31ll_BFu7ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31ll_BFu7ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu7ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu7ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31ll_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31ll_BFu7ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu7ll_BFu0s(Test_BFu31ll_BFu7ll_BFu0s, "BFu31ll_BFu7ll_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu7s_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu7s_BFu0c");
    static BFu31ll_BFu7s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu7s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu7s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu7s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31ll_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31ll_BFu7s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu7s_BFu0c(Test_BFu31ll_BFu7s_BFu0c, "BFu31ll_BFu7s_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu7s_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu7s_BFu0i");
    static BFu31ll_BFu7s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu7s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu7s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu7s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31ll_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31ll_BFu7s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu7s_BFu0i(Test_BFu31ll_BFu7s_BFu0i, "BFu31ll_BFu7s_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu7s_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu7s_BFu0ll");
    static BFu31ll_BFu7s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu7s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu7s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu7s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31ll_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31ll_BFu7s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu7s_BFu0ll(Test_BFu31ll_BFu7s_BFu0ll, "BFu31ll_BFu7s_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu7s_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu7s_BFu0s");
    static BFu31ll_BFu7s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31ll_BFu7s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu7s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu7s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, 1, "BFu31ll_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 7, hide_ull(1LL<<6), "BFu31ll_BFu7s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu7s_BFu0s(Test_BFu31ll_BFu7s_BFu0s, "BFu31ll_BFu7s_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu8c_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu8c_BFu0c");
    static BFu31ll_BFu8c_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu8c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu8c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu8c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31ll_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31ll_BFu8c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu8c_BFu0c(Test_BFu31ll_BFu8c_BFu0c, "BFu31ll_BFu8c_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu8c_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu8c_BFu0i");
    static BFu31ll_BFu8c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu8c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu8c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu8c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31ll_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31ll_BFu8c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu8c_BFu0i(Test_BFu31ll_BFu8c_BFu0i, "BFu31ll_BFu8c_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu8c_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu8c_BFu0ll");
    static BFu31ll_BFu8c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu8c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu8c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu8c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31ll_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31ll_BFu8c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu8c_BFu0ll(Test_BFu31ll_BFu8c_BFu0ll, "BFu31ll_BFu8c_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu8c_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu8c_BFu0s");
    static BFu31ll_BFu8c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31ll_BFu8c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu8c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu8c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31ll_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31ll_BFu8c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu8c_BFu0s(Test_BFu31ll_BFu8c_BFu0s, "BFu31ll_BFu8c_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu8i_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu8i_BFu0c");
    static BFu31ll_BFu8i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu8i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu8i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu8i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31ll_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31ll_BFu8i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu8i_BFu0c(Test_BFu31ll_BFu8i_BFu0c, "BFu31ll_BFu8i_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu8i_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu8i_BFu0i");
    static BFu31ll_BFu8i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu8i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu8i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu8i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31ll_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31ll_BFu8i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu8i_BFu0i(Test_BFu31ll_BFu8i_BFu0i, "BFu31ll_BFu8i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu8i_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu8i_BFu0ll");
    static BFu31ll_BFu8i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu8i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu8i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu8i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31ll_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31ll_BFu8i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu8i_BFu0ll(Test_BFu31ll_BFu8i_BFu0ll, "BFu31ll_BFu8i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu8i_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu8i_BFu0s");
    static BFu31ll_BFu8i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31ll_BFu8i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu8i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu8i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31ll_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31ll_BFu8i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu8i_BFu0s(Test_BFu31ll_BFu8i_BFu0s, "BFu31ll_BFu8i_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu8ll_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu8ll_BFu0c");
    static BFu31ll_BFu8ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu8ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu8ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu8ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31ll_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31ll_BFu8ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu8ll_BFu0c(Test_BFu31ll_BFu8ll_BFu0c, "BFu31ll_BFu8ll_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu8ll_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu8ll_BFu0i");
    static BFu31ll_BFu8ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu8ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu8ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu8ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31ll_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31ll_BFu8ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu8ll_BFu0i(Test_BFu31ll_BFu8ll_BFu0i, "BFu31ll_BFu8ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu8ll_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu8ll_BFu0ll");
    static BFu31ll_BFu8ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu8ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu8ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31ll_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31ll_BFu8ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu8ll_BFu0ll(Test_BFu31ll_BFu8ll_BFu0ll, "BFu31ll_BFu8ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu8ll_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu8ll_BFu0s");
    static BFu31ll_BFu8ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31ll_BFu8ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu8ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu8ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31ll_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31ll_BFu8ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu8ll_BFu0s(Test_BFu31ll_BFu8ll_BFu0s, "BFu31ll_BFu8ll_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu8s_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu8s_BFu0c");
    static BFu31ll_BFu8s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu8s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu8s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu8s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31ll_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31ll_BFu8s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu8s_BFu0c(Test_BFu31ll_BFu8s_BFu0c, "BFu31ll_BFu8s_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu8s_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu8s_BFu0i");
    static BFu31ll_BFu8s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu8s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu8s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu8s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31ll_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31ll_BFu8s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu8s_BFu0i(Test_BFu31ll_BFu8s_BFu0i, "BFu31ll_BFu8s_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu8s_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu8s_BFu0ll");
    static BFu31ll_BFu8s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu8s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu8s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu8s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31ll_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31ll_BFu8s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu8s_BFu0ll(Test_BFu31ll_BFu8s_BFu0ll, "BFu31ll_BFu8s_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu8s_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu8s_BFu0s");
    static BFu31ll_BFu8s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31ll_BFu8s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu8s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu8s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, 1, "BFu31ll_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 8, hide_ull(1LL<<7), "BFu31ll_BFu8s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu8s_BFu0s(Test_BFu31ll_BFu8s_BFu0s, "BFu31ll_BFu8s_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu9i_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu9i_BFu0c");
    static BFu31ll_BFu9i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu9i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu9i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu9i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "BFu31ll_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "BFu31ll_BFu9i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu9i_BFu0c(Test_BFu31ll_BFu9i_BFu0c, "BFu31ll_BFu9i_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu9i_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu9i_BFu0i");
    static BFu31ll_BFu9i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu9i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu9i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu9i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "BFu31ll_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "BFu31ll_BFu9i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu9i_BFu0i(Test_BFu31ll_BFu9i_BFu0i, "BFu31ll_BFu9i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu9i_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu9i_BFu0ll");
    static BFu31ll_BFu9i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu9i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu9i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu9i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "BFu31ll_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "BFu31ll_BFu9i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu9i_BFu0ll(Test_BFu31ll_BFu9i_BFu0ll, "BFu31ll_BFu9i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu9i_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu9i_BFu0s");
    static BFu31ll_BFu9i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31ll_BFu9i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu9i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu9i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "BFu31ll_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "BFu31ll_BFu9i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu9i_BFu0s(Test_BFu31ll_BFu9i_BFu0s, "BFu31ll_BFu9i_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu9ll_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu9ll_BFu0c");
    static BFu31ll_BFu9ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu9ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu9ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu9ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "BFu31ll_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "BFu31ll_BFu9ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu9ll_BFu0c(Test_BFu31ll_BFu9ll_BFu0c, "BFu31ll_BFu9ll_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu9ll_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu9ll_BFu0i");
    static BFu31ll_BFu9ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu9ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu9ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu9ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "BFu31ll_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "BFu31ll_BFu9ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu9ll_BFu0i(Test_BFu31ll_BFu9ll_BFu0i, "BFu31ll_BFu9ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu9ll_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu9ll_BFu0ll");
    static BFu31ll_BFu9ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu9ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu9ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "BFu31ll_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "BFu31ll_BFu9ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu9ll_BFu0ll(Test_BFu31ll_BFu9ll_BFu0ll, "BFu31ll_BFu9ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu9ll_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu9ll_BFu0s");
    static BFu31ll_BFu9ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31ll_BFu9ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu9ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu9ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "BFu31ll_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "BFu31ll_BFu9ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu9ll_BFu0s(Test_BFu31ll_BFu9ll_BFu0s, "BFu31ll_BFu9ll_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu9s_BFu0c()
{
  {
    init_simple_test("BFu31ll_BFu9s_BFu0c");
    static BFu31ll_BFu9s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_BFu9s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_BFu9s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu9s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "BFu31ll_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "BFu31ll_BFu9s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu9s_BFu0c(Test_BFu31ll_BFu9s_BFu0c, "BFu31ll_BFu9s_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu9s_BFu0i()
{
  {
    init_simple_test("BFu31ll_BFu9s_BFu0i");
    static BFu31ll_BFu9s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu9s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu9s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu9s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "BFu31ll_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "BFu31ll_BFu9s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu9s_BFu0i(Test_BFu31ll_BFu9s_BFu0i, "BFu31ll_BFu9s_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu9s_BFu0ll()
{
  {
    init_simple_test("BFu31ll_BFu9s_BFu0ll");
    static BFu31ll_BFu9s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_BFu9s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu9s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu9s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "BFu31ll_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "BFu31ll_BFu9s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu9s_BFu0ll(Test_BFu31ll_BFu9s_BFu0ll, "BFu31ll_BFu9s_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_BFu9s_BFu0s()
{
  {
    init_simple_test("BFu31ll_BFu9s_BFu0s");
    static BFu31ll_BFu9s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31ll_BFu9s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_BFu9s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_BFu9s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 9, 1, "BFu31ll_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 3, 7, 9, hide_ull(1LL<<8), "BFu31ll_BFu9s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu31ll_BFu9s_BFu0s(Test_BFu31ll_BFu9s_BFu0s, "BFu31ll_BFu9s_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_C_BFu0c()
{
  {
    init_simple_test("BFu31ll_C_BFu0c");
    static BFu31ll_C_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_C_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_C_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_C_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_C_BFu0c");
    check_field_offset(lv, v2, 4, "BFu31ll_C_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_C_BFu0c(Test_BFu31ll_C_BFu0c, "BFu31ll_C_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_C_BFu0i()
{
  {
    init_simple_test("BFu31ll_C_BFu0i");
    static BFu31ll_C_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_C_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_C_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_C_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_C_BFu0i");
    check_field_offset(lv, v2, 4, "BFu31ll_C_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_C_BFu0i(Test_BFu31ll_C_BFu0i, "BFu31ll_C_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_C_BFu0ll()
{
  {
    init_simple_test("BFu31ll_C_BFu0ll");
    static BFu31ll_C_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_C_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_C_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_C_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_C_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu31ll_C_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_C_BFu0ll(Test_BFu31ll_C_BFu0ll, "BFu31ll_C_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_C_BFu0s()
{
  {
    init_simple_test("BFu31ll_C_BFu0s");
    static BFu31ll_C_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31ll_C_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_C_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_C_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_C_BFu0s");
    check_field_offset(lv, v2, 4, "BFu31ll_C_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_C_BFu0s(Test_BFu31ll_C_BFu0s, "BFu31ll_C_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_D_BFu0c()
{
  {
    init_simple_test("BFu31ll_D_BFu0c");
    static BFu31ll_D_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(BFu31ll_D_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_D_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_D_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_D_BFu0c");
    check_field_offset(lv, v2, 4, "BFu31ll_D_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_D_BFu0c(Test_BFu31ll_D_BFu0c, "BFu31ll_D_BFu0c", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_D_BFu0i()
{
  {
    init_simple_test("BFu31ll_D_BFu0i");
    static BFu31ll_D_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(BFu31ll_D_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_D_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_D_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_D_BFu0i");
    check_field_offset(lv, v2, 4, "BFu31ll_D_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_D_BFu0i(Test_BFu31ll_D_BFu0i, "BFu31ll_D_BFu0i", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_D_BFu0ll()
{
  {
    init_simple_test("BFu31ll_D_BFu0ll");
    static BFu31ll_D_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu31ll_D_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_D_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_D_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_D_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu31ll_D_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_D_BFu0ll(Test_BFu31ll_D_BFu0ll, "BFu31ll_D_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_D_BFu0s()
{
  {
    init_simple_test("BFu31ll_D_BFu0s");
    static BFu31ll_D_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(BFu31ll_D_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_D_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_D_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_D_BFu0s");
    check_field_offset(lv, v2, 4, "BFu31ll_D_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_D_BFu0s(Test_BFu31ll_D_BFu0s, "BFu31ll_D_BFu0s", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_F_BFu0c()
{
  {
    init_simple_test("BFu31ll_F_BFu0c");
    static BFu31ll_F_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_F_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_F_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_F_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_F_BFu0c");
    check_field_offset(lv, v2, 4, "BFu31ll_F_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_F_BFu0c(Test_BFu31ll_F_BFu0c, "BFu31ll_F_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_F_BFu0i()
{
  {
    init_simple_test("BFu31ll_F_BFu0i");
    static BFu31ll_F_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_F_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_F_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_F_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_F_BFu0i");
    check_field_offset(lv, v2, 4, "BFu31ll_F_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_F_BFu0i(Test_BFu31ll_F_BFu0i, "BFu31ll_F_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_F_BFu0ll()
{
  {
    init_simple_test("BFu31ll_F_BFu0ll");
    static BFu31ll_F_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_F_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_F_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_F_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_F_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu31ll_F_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_F_BFu0ll(Test_BFu31ll_F_BFu0ll, "BFu31ll_F_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_F_BFu0s()
{
  {
    init_simple_test("BFu31ll_F_BFu0s");
    static BFu31ll_F_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_F_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_F_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_F_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_F_BFu0s");
    check_field_offset(lv, v2, 4, "BFu31ll_F_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_F_BFu0s(Test_BFu31ll_F_BFu0s, "BFu31ll_F_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_I_BFu0c()
{
  {
    init_simple_test("BFu31ll_I_BFu0c");
    static BFu31ll_I_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_I_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_I_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_I_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_I_BFu0c");
    check_field_offset(lv, v2, 4, "BFu31ll_I_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_I_BFu0c(Test_BFu31ll_I_BFu0c, "BFu31ll_I_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_I_BFu0i()
{
  {
    init_simple_test("BFu31ll_I_BFu0i");
    static BFu31ll_I_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_I_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_I_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_I_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_I_BFu0i");
    check_field_offset(lv, v2, 4, "BFu31ll_I_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_I_BFu0i(Test_BFu31ll_I_BFu0i, "BFu31ll_I_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_I_BFu0ll()
{
  {
    init_simple_test("BFu31ll_I_BFu0ll");
    static BFu31ll_I_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_I_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_I_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_I_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_I_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu31ll_I_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_I_BFu0ll(Test_BFu31ll_I_BFu0ll, "BFu31ll_I_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_I_BFu0s()
{
  {
    init_simple_test("BFu31ll_I_BFu0s");
    static BFu31ll_I_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_I_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_I_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_I_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_I_BFu0s");
    check_field_offset(lv, v2, 4, "BFu31ll_I_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_I_BFu0s(Test_BFu31ll_I_BFu0s, "BFu31ll_I_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_Ip_BFu0c()
{
  {
    init_simple_test("BFu31ll_Ip_BFu0c");
    static BFu31ll_Ip_BFu0c lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31ll_Ip_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Ip_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Ip_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Ip_BFu0c");
    check_field_offset(lv, v2, 4, "BFu31ll_Ip_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_Ip_BFu0c(Test_BFu31ll_Ip_BFu0c, "BFu31ll_Ip_BFu0c", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_Ip_BFu0i()
{
  {
    init_simple_test("BFu31ll_Ip_BFu0i");
    static BFu31ll_Ip_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31ll_Ip_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_Ip_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Ip_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Ip_BFu0i");
    check_field_offset(lv, v2, 4, "BFu31ll_Ip_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_Ip_BFu0i(Test_BFu31ll_Ip_BFu0i, "BFu31ll_Ip_BFu0i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_Ip_BFu0ll()
{
  {
    init_simple_test("BFu31ll_Ip_BFu0ll");
    static BFu31ll_Ip_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu31ll_Ip_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_Ip_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Ip_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Ip_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu31ll_Ip_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_Ip_BFu0ll(Test_BFu31ll_Ip_BFu0ll, "BFu31ll_Ip_BFu0ll", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_Ip_BFu0s()
{
  {
    init_simple_test("BFu31ll_Ip_BFu0s");
    static BFu31ll_Ip_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31ll_Ip_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_Ip_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Ip_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Ip_BFu0s");
    check_field_offset(lv, v2, 4, "BFu31ll_Ip_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_Ip_BFu0s(Test_BFu31ll_Ip_BFu0s, "BFu31ll_Ip_BFu0s", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_L_BFu0c()
{
  {
    init_simple_test("BFu31ll_L_BFu0c");
    static BFu31ll_L_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(BFu31ll_L_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_L_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_L_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_L_BFu0c");
    check_field_offset(lv, v2, 4, "BFu31ll_L_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_L_BFu0c(Test_BFu31ll_L_BFu0c, "BFu31ll_L_BFu0c", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_L_BFu0i()
{
  {
    init_simple_test("BFu31ll_L_BFu0i");
    static BFu31ll_L_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(BFu31ll_L_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_L_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_L_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_L_BFu0i");
    check_field_offset(lv, v2, 4, "BFu31ll_L_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_L_BFu0i(Test_BFu31ll_L_BFu0i, "BFu31ll_L_BFu0i", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_L_BFu0ll()
{
  {
    init_simple_test("BFu31ll_L_BFu0ll");
    static BFu31ll_L_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu31ll_L_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_L_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_L_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_L_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu31ll_L_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_L_BFu0ll(Test_BFu31ll_L_BFu0ll, "BFu31ll_L_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_L_BFu0s()
{
  {
    init_simple_test("BFu31ll_L_BFu0s");
    static BFu31ll_L_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(BFu31ll_L_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_L_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_L_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_L_BFu0s");
    check_field_offset(lv, v2, 4, "BFu31ll_L_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_L_BFu0s(Test_BFu31ll_L_BFu0s, "BFu31ll_L_BFu0s", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_S_BFu0c()
{
  {
    init_simple_test("BFu31ll_S_BFu0c");
    static BFu31ll_S_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_S_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_S_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_S_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_S_BFu0c");
    check_field_offset(lv, v2, 4, "BFu31ll_S_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_S_BFu0c(Test_BFu31ll_S_BFu0c, "BFu31ll_S_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_S_BFu0i()
{
  {
    init_simple_test("BFu31ll_S_BFu0i");
    static BFu31ll_S_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_S_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_S_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_S_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_S_BFu0i");
    check_field_offset(lv, v2, 4, "BFu31ll_S_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_S_BFu0i(Test_BFu31ll_S_BFu0i, "BFu31ll_S_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_S_BFu0ll()
{
  {
    init_simple_test("BFu31ll_S_BFu0ll");
    static BFu31ll_S_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_S_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_S_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_S_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_S_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu31ll_S_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_S_BFu0ll(Test_BFu31ll_S_BFu0ll, "BFu31ll_S_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_S_BFu0s()
{
  {
    init_simple_test("BFu31ll_S_BFu0s");
    static BFu31ll_S_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_S_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_S_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_S_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_S_BFu0s");
    check_field_offset(lv, v2, 4, "BFu31ll_S_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_S_BFu0s(Test_BFu31ll_S_BFu0s, "BFu31ll_S_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_Uc_BFu0c()
{
  {
    init_simple_test("BFu31ll_Uc_BFu0c");
    static BFu31ll_Uc_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu31ll_Uc_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Uc_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Uc_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Uc_BFu0c");
    check_field_offset(lv, v2, 4, "BFu31ll_Uc_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_Uc_BFu0c(Test_BFu31ll_Uc_BFu0c, "BFu31ll_Uc_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_Uc_BFu0i()
{
  {
    init_simple_test("BFu31ll_Uc_BFu0i");
    static BFu31ll_Uc_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_Uc_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_Uc_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Uc_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Uc_BFu0i");
    check_field_offset(lv, v2, 4, "BFu31ll_Uc_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_Uc_BFu0i(Test_BFu31ll_Uc_BFu0i, "BFu31ll_Uc_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_Uc_BFu0ll()
{
  {
    init_simple_test("BFu31ll_Uc_BFu0ll");
    static BFu31ll_Uc_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_Uc_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_Uc_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Uc_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Uc_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu31ll_Uc_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_Uc_BFu0ll(Test_BFu31ll_Uc_BFu0ll, "BFu31ll_Uc_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_Uc_BFu0s()
{
  {
    init_simple_test("BFu31ll_Uc_BFu0s");
    static BFu31ll_Uc_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu31ll_Uc_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_Uc_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Uc_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Uc_BFu0s");
    check_field_offset(lv, v2, 4, "BFu31ll_Uc_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_Uc_BFu0s(Test_BFu31ll_Uc_BFu0s, "BFu31ll_Uc_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_Ui_BFu0c()
{
  {
    init_simple_test("BFu31ll_Ui_BFu0c");
    static BFu31ll_Ui_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_Ui_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Ui_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Ui_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Ui_BFu0c");
    check_field_offset(lv, v2, 4, "BFu31ll_Ui_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_Ui_BFu0c(Test_BFu31ll_Ui_BFu0c, "BFu31ll_Ui_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_Ui_BFu0i()
{
  {
    init_simple_test("BFu31ll_Ui_BFu0i");
    static BFu31ll_Ui_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_Ui_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_Ui_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Ui_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Ui_BFu0i");
    check_field_offset(lv, v2, 4, "BFu31ll_Ui_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_Ui_BFu0i(Test_BFu31ll_Ui_BFu0i, "BFu31ll_Ui_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_Ui_BFu0ll()
{
  {
    init_simple_test("BFu31ll_Ui_BFu0ll");
    static BFu31ll_Ui_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_Ui_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_Ui_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Ui_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Ui_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu31ll_Ui_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_Ui_BFu0ll(Test_BFu31ll_Ui_BFu0ll, "BFu31ll_Ui_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_Ui_BFu0s()
{
  {
    init_simple_test("BFu31ll_Ui_BFu0s");
    static BFu31ll_Ui_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu31ll_Ui_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_Ui_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Ui_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Ui_BFu0s");
    check_field_offset(lv, v2, 4, "BFu31ll_Ui_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_Ui_BFu0s(Test_BFu31ll_Ui_BFu0s, "BFu31ll_Ui_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_Ul_BFu0c()
{
  {
    init_simple_test("BFu31ll_Ul_BFu0c");
    static BFu31ll_Ul_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(BFu31ll_Ul_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Ul_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Ul_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Ul_BFu0c");
    check_field_offset(lv, v2, 4, "BFu31ll_Ul_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_Ul_BFu0c(Test_BFu31ll_Ul_BFu0c, "BFu31ll_Ul_BFu0c", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_Ul_BFu0i()
{
  {
    init_simple_test("BFu31ll_Ul_BFu0i");
    static BFu31ll_Ul_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(BFu31ll_Ul_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_Ul_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Ul_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Ul_BFu0i");
    check_field_offset(lv, v2, 4, "BFu31ll_Ul_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_Ul_BFu0i(Test_BFu31ll_Ul_BFu0i, "BFu31ll_Ul_BFu0i", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_Ul_BFu0ll()
{
  {
    init_simple_test("BFu31ll_Ul_BFu0ll");
    static BFu31ll_Ul_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu31ll_Ul_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_Ul_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Ul_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Ul_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu31ll_Ul_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_Ul_BFu0ll(Test_BFu31ll_Ul_BFu0ll, "BFu31ll_Ul_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_Ul_BFu0s()
{
  {
    init_simple_test("BFu31ll_Ul_BFu0s");
    static BFu31ll_Ul_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(BFu31ll_Ul_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_Ul_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Ul_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Ul_BFu0s");
    check_field_offset(lv, v2, 4, "BFu31ll_Ul_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_Ul_BFu0s(Test_BFu31ll_Ul_BFu0s, "BFu31ll_Ul_BFu0s", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_Us_BFu0c()
{
  {
    init_simple_test("BFu31ll_Us_BFu0c");
    static BFu31ll_Us_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_Us_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Us_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Us_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Us_BFu0c");
    check_field_offset(lv, v2, 4, "BFu31ll_Us_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_Us_BFu0c(Test_BFu31ll_Us_BFu0c, "BFu31ll_Us_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_Us_BFu0i()
{
  {
    init_simple_test("BFu31ll_Us_BFu0i");
    static BFu31ll_Us_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_Us_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_Us_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Us_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Us_BFu0i");
    check_field_offset(lv, v2, 4, "BFu31ll_Us_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_Us_BFu0i(Test_BFu31ll_Us_BFu0i, "BFu31ll_Us_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_Us_BFu0ll()
{
  {
    init_simple_test("BFu31ll_Us_BFu0ll");
    static BFu31ll_Us_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu31ll_Us_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_Us_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Us_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Us_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu31ll_Us_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_Us_BFu0ll(Test_BFu31ll_Us_BFu0ll, "BFu31ll_Us_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_Us_BFu0s()
{
  {
    init_simple_test("BFu31ll_Us_BFu0s");
    static BFu31ll_Us_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu31ll_Us_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_Us_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Us_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Us_BFu0s");
    check_field_offset(lv, v2, 4, "BFu31ll_Us_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_Us_BFu0s(Test_BFu31ll_Us_BFu0s, "BFu31ll_Us_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_Vp_BFu0c()
{
  {
    init_simple_test("BFu31ll_Vp_BFu0c");
    static BFu31ll_Vp_BFu0c lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31ll_Vp_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu31ll_Vp_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Vp_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Vp_BFu0c");
    check_field_offset(lv, v2, 4, "BFu31ll_Vp_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_Vp_BFu0c(Test_BFu31ll_Vp_BFu0c, "BFu31ll_Vp_BFu0c", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_Vp_BFu0i()
{
  {
    init_simple_test("BFu31ll_Vp_BFu0i");
    static BFu31ll_Vp_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31ll_Vp_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_Vp_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Vp_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Vp_BFu0i");
    check_field_offset(lv, v2, 4, "BFu31ll_Vp_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_Vp_BFu0i(Test_BFu31ll_Vp_BFu0i, "BFu31ll_Vp_BFu0i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_Vp_BFu0ll()
{
  {
    init_simple_test("BFu31ll_Vp_BFu0ll");
    static BFu31ll_Vp_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu31ll_Vp_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_Vp_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Vp_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Vp_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu31ll_Vp_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_Vp_BFu0ll(Test_BFu31ll_Vp_BFu0ll, "BFu31ll_Vp_BFu0ll", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu31ll_Vp_BFu0s()
{
  {
    init_simple_test("BFu31ll_Vp_BFu0s");
    static BFu31ll_Vp_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu31ll_Vp_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu31ll_Vp_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 31, 1, "BFu31ll_Vp_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 31, hide_ull(1LL<<30), "BFu31ll_Vp_BFu0s");
    check_field_offset(lv, v2, 4, "BFu31ll_Vp_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu31ll_Vp_BFu0s(Test_BFu31ll_Vp_BFu0s, "BFu31ll_Vp_BFu0s", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu0c");
    static BFu32i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu32i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c(Test_BFu32i_BFu0c, "BFu32i_BFu0c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu0c");
    static BFu32i_BFu0c_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu32i_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu0c(Test_BFu32i_BFu0c_BFu0c, "BFu32i_BFu0c_BFu0c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu0i");
    static BFu32i_BFu0c_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu32i_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu0i(Test_BFu32i_BFu0c_BFu0i, "BFu32i_BFu0c_BFu0i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu0ll");
    static BFu32i_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu32i_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu0ll(Test_BFu32i_BFu0c_BFu0ll, "BFu32i_BFu0c_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu0s");
    static BFu32i_BFu0c_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu32i_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu0s(Test_BFu32i_BFu0c_BFu0s, "BFu32i_BFu0c_BFu0s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu15i()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu15i");
    static BFu32i_BFu0c_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu0c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32i_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32i_BFu0c_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu15i(Test_BFu32i_BFu0c_BFu15i, "BFu32i_BFu0c_BFu15i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu15ll()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu15ll");
    static BFu32i_BFu0c_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu0c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32i_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32i_BFu0c_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu15ll(Test_BFu32i_BFu0c_BFu15ll, "BFu32i_BFu0c_BFu15ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu15s()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu15s");
    static BFu32i_BFu0c_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu0c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32i_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32i_BFu0c_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu15s(Test_BFu32i_BFu0c_BFu15s, "BFu32i_BFu0c_BFu15s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu16i()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu16i");
    static BFu32i_BFu0c_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu0c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32i_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32i_BFu0c_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu16i(Test_BFu32i_BFu0c_BFu16i, "BFu32i_BFu0c_BFu16i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu16ll()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu16ll");
    static BFu32i_BFu0c_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu0c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32i_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32i_BFu0c_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu16ll(Test_BFu32i_BFu0c_BFu16ll, "BFu32i_BFu0c_BFu16ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu16s()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu16s");
    static BFu32i_BFu0c_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu0c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32i_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32i_BFu0c_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu16s(Test_BFu32i_BFu0c_BFu16s, "BFu32i_BFu0c_BFu16s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu17i()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu17i");
    static BFu32i_BFu0c_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(BFu32i_BFu0c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32i_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32i_BFu0c_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu17i(Test_BFu32i_BFu0c_BFu17i, "BFu32i_BFu0c_BFu17i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu17ll()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu17ll");
    static BFu32i_BFu0c_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(BFu32i_BFu0c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32i_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32i_BFu0c_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu17ll(Test_BFu32i_BFu0c_BFu17ll, "BFu32i_BFu0c_BFu17ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu1c()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu1c");
    static BFu32i_BFu0c_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu0c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu1c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu0c_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu1c(Test_BFu32i_BFu0c_BFu1c, "BFu32i_BFu0c_BFu1c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu1i()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu1i");
    static BFu32i_BFu0c_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu0c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu1i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu0c_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu1i(Test_BFu32i_BFu0c_BFu1i, "BFu32i_BFu0c_BFu1i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu1ll()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu1ll");
    static BFu32i_BFu0c_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu0c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu1ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu0c_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu1ll(Test_BFu32i_BFu0c_BFu1ll, "BFu32i_BFu0c_BFu1ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu1s()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu1s");
    static BFu32i_BFu0c_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu0c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu1s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu0c_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu1s(Test_BFu32i_BFu0c_BFu1s, "BFu32i_BFu0c_BFu1s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu31i()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu31i");
    static BFu32i_BFu0c_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu0c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32i_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32i_BFu0c_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu31i(Test_BFu32i_BFu0c_BFu31i, "BFu32i_BFu0c_BFu31i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu31ll()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu31ll");
    static BFu32i_BFu0c_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu0c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32i_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32i_BFu0c_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu31ll(Test_BFu32i_BFu0c_BFu31ll, "BFu32i_BFu0c_BFu31ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu32i()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu32i");
    static BFu32i_BFu0c_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu0c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32i_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu32i(Test_BFu32i_BFu0c_BFu32i, "BFu32i_BFu0c_BFu32i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu32ll()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu32ll");
    static BFu32i_BFu0c_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu0c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32i_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu32ll(Test_BFu32i_BFu0c_BFu32ll, "BFu32i_BFu0c_BFu32ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu33()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu33");
    static BFu32i_BFu0c_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(BFu32i_BFu0c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "BFu32i_BFu0c_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "BFu32i_BFu0c_BFu33");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu33(Test_BFu32i_BFu0c_BFu33, "BFu32i_BFu0c_BFu33", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu7c()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu7c");
    static BFu32i_BFu0c_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu0c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu0c_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu7c(Test_BFu32i_BFu0c_BFu7c, "BFu32i_BFu0c_BFu7c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu7i()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu7i");
    static BFu32i_BFu0c_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu0c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu0c_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu7i(Test_BFu32i_BFu0c_BFu7i, "BFu32i_BFu0c_BFu7i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu7ll()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu7ll");
    static BFu32i_BFu0c_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu0c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu0c_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu7ll(Test_BFu32i_BFu0c_BFu7ll, "BFu32i_BFu0c_BFu7ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu7s()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu7s");
    static BFu32i_BFu0c_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu0c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu0c_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu7s(Test_BFu32i_BFu0c_BFu7s, "BFu32i_BFu0c_BFu7s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu8c()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu8c");
    static BFu32i_BFu0c_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu0c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu0c_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu8c(Test_BFu32i_BFu0c_BFu8c, "BFu32i_BFu0c_BFu8c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu8i()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu8i");
    static BFu32i_BFu0c_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu0c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu0c_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu8i(Test_BFu32i_BFu0c_BFu8i, "BFu32i_BFu0c_BFu8i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu8ll()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu8ll");
    static BFu32i_BFu0c_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu0c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu0c_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu8ll(Test_BFu32i_BFu0c_BFu8ll, "BFu32i_BFu0c_BFu8ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu8s()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu8s");
    static BFu32i_BFu0c_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu0c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu0c_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu8s(Test_BFu32i_BFu0c_BFu8s, "BFu32i_BFu0c_BFu8s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu9i()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu9i");
    static BFu32i_BFu0c_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu0c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32i_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32i_BFu0c_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu9i(Test_BFu32i_BFu0c_BFu9i, "BFu32i_BFu0c_BFu9i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu9ll()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu9ll");
    static BFu32i_BFu0c_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu0c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32i_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32i_BFu0c_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu9ll(Test_BFu32i_BFu0c_BFu9ll, "BFu32i_BFu0c_BFu9ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_BFu9s()
{
  {
    init_simple_test("BFu32i_BFu0c_BFu9s");
    static BFu32i_BFu0c_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu0c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32i_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32i_BFu0c_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_BFu9s(Test_BFu32i_BFu0c_BFu9s, "BFu32i_BFu0c_BFu9s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_C()
{
  {
    init_simple_test("BFu32i_BFu0c_C");
    static BFu32i_BFu0c_C lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu0c_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_C)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_C");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_C");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0c_C.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_C(Test_BFu32i_BFu0c_C, "BFu32i_BFu0c_C", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_D()
{
  {
    init_simple_test("BFu32i_BFu0c_D");
    static BFu32i_BFu0c_D lv;
    check2(sizeof(lv), 12, "sizeof(BFu32i_BFu0c_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_D)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_D");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_D");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0c_D.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_D(Test_BFu32i_BFu0c_D, "BFu32i_BFu0c_D", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_F()
{
  {
    init_simple_test("BFu32i_BFu0c_F");
    static BFu32i_BFu0c_F lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu0c_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_F)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_F");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_F");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0c_F.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_F(Test_BFu32i_BFu0c_F, "BFu32i_BFu0c_F", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_I()
{
  {
    init_simple_test("BFu32i_BFu0c_I");
    static BFu32i_BFu0c_I lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu0c_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_I)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_I");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_I");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0c_I.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_I(Test_BFu32i_BFu0c_I, "BFu32i_BFu0c_I", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_Ip()
{
  {
    init_simple_test("BFu32i_BFu0c_Ip");
    static BFu32i_BFu0c_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32i_BFu0c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_Ip");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_Ip");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0c_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_Ip(Test_BFu32i_BFu0c_Ip, "BFu32i_BFu0c_Ip", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_L()
{
  {
    init_simple_test("BFu32i_BFu0c_L");
    static BFu32i_BFu0c_L lv;
    check2(sizeof(lv), 12, "sizeof(BFu32i_BFu0c_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_L)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_L");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_L");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0c_L.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_L(Test_BFu32i_BFu0c_L, "BFu32i_BFu0c_L", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_S()
{
  {
    init_simple_test("BFu32i_BFu0c_S");
    static BFu32i_BFu0c_S lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu0c_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_S)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_S");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_S");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0c_S.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_S(Test_BFu32i_BFu0c_S, "BFu32i_BFu0c_S", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_Uc()
{
  {
    init_simple_test("BFu32i_BFu0c_Uc");
    static BFu32i_BFu0c_Uc lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu0c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_Uc");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_Uc");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0c_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_Uc(Test_BFu32i_BFu0c_Uc, "BFu32i_BFu0c_Uc", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_Ui()
{
  {
    init_simple_test("BFu32i_BFu0c_Ui");
    static BFu32i_BFu0c_Ui lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu0c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_Ui");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_Ui");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0c_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_Ui(Test_BFu32i_BFu0c_Ui, "BFu32i_BFu0c_Ui", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_Ul()
{
  {
    init_simple_test("BFu32i_BFu0c_Ul");
    static BFu32i_BFu0c_Ul lv;
    check2(sizeof(lv), 12, "sizeof(BFu32i_BFu0c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_Ul");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_Ul");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0c_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_Ul(Test_BFu32i_BFu0c_Ul, "BFu32i_BFu0c_Ul", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_Us()
{
  {
    init_simple_test("BFu32i_BFu0c_Us");
    static BFu32i_BFu0c_Us lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu0c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_Us)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_Us");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_Us");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0c_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_Us(Test_BFu32i_BFu0c_Us, "BFu32i_BFu0c_Us", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0c_Vp()
{
  {
    init_simple_test("BFu32i_BFu0c_Vp");
    static BFu32i_BFu0c_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32i_BFu0c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu0c_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0c_Vp");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0c_Vp");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0c_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0c_Vp(Test_BFu32i_BFu0c_Vp, "BFu32i_BFu0c_Vp", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu0i");
    static BFu32i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu32i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i(Test_BFu32i_BFu0i, "BFu32i_BFu0i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu0c");
    static BFu32i_BFu0i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu32i_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu0c(Test_BFu32i_BFu0i_BFu0c, "BFu32i_BFu0i_BFu0c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu0i");
    static BFu32i_BFu0i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu32i_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu0i(Test_BFu32i_BFu0i_BFu0i, "BFu32i_BFu0i_BFu0i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu0ll");
    static BFu32i_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu32i_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu0ll(Test_BFu32i_BFu0i_BFu0ll, "BFu32i_BFu0i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu0s");
    static BFu32i_BFu0i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu32i_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu0s(Test_BFu32i_BFu0i_BFu0s, "BFu32i_BFu0i_BFu0s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu15i()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu15i");
    static BFu32i_BFu0i_BFu15i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32i_BFu0i_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32i_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32i_BFu0i_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu15i(Test_BFu32i_BFu0i_BFu15i, "BFu32i_BFu0i_BFu15i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu15ll()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu15ll");
    static BFu32i_BFu0i_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32i_BFu0i_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32i_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32i_BFu0i_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu15ll(Test_BFu32i_BFu0i_BFu15ll, "BFu32i_BFu0i_BFu15ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu15s()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu15s");
    static BFu32i_BFu0i_BFu15s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32i_BFu0i_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32i_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32i_BFu0i_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu15s(Test_BFu32i_BFu0i_BFu15s, "BFu32i_BFu0i_BFu15s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu16i()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu16i");
    static BFu32i_BFu0i_BFu16i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32i_BFu0i_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32i_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32i_BFu0i_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu16i(Test_BFu32i_BFu0i_BFu16i, "BFu32i_BFu0i_BFu16i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu16ll()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu16ll");
    static BFu32i_BFu0i_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32i_BFu0i_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32i_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32i_BFu0i_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu16ll(Test_BFu32i_BFu0i_BFu16ll, "BFu32i_BFu0i_BFu16ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu16s()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu16s");
    static BFu32i_BFu0i_BFu16s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32i_BFu0i_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32i_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32i_BFu0i_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu16s(Test_BFu32i_BFu0i_BFu16s, "BFu32i_BFu0i_BFu16s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu17i()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu17i");
    static BFu32i_BFu0i_BFu17i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu32i_BFu0i_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32i_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32i_BFu0i_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu17i(Test_BFu32i_BFu0i_BFu17i, "BFu32i_BFu0i_BFu17i", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu17ll()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu17ll");
    static BFu32i_BFu0i_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu32i_BFu0i_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32i_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32i_BFu0i_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu17ll(Test_BFu32i_BFu0i_BFu17ll, "BFu32i_BFu0i_BFu17ll", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu1c()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu1c");
    static BFu32i_BFu0i_BFu1c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32i_BFu0i_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu1c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu0i_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu1c(Test_BFu32i_BFu0i_BFu1c, "BFu32i_BFu0i_BFu1c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu1i()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu1i");
    static BFu32i_BFu0i_BFu1i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32i_BFu0i_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu1i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu0i_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu1i(Test_BFu32i_BFu0i_BFu1i, "BFu32i_BFu0i_BFu1i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu1ll()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu1ll");
    static BFu32i_BFu0i_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32i_BFu0i_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu1ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu0i_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu1ll(Test_BFu32i_BFu0i_BFu1ll, "BFu32i_BFu0i_BFu1ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu1s()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu1s");
    static BFu32i_BFu0i_BFu1s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32i_BFu0i_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu1s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu0i_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu1s(Test_BFu32i_BFu0i_BFu1s, "BFu32i_BFu0i_BFu1s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu31i()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu31i");
    static BFu32i_BFu0i_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu0i_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32i_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32i_BFu0i_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu31i(Test_BFu32i_BFu0i_BFu31i, "BFu32i_BFu0i_BFu31i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu31ll()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu31ll");
    static BFu32i_BFu0i_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu0i_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32i_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32i_BFu0i_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu31ll(Test_BFu32i_BFu0i_BFu31ll, "BFu32i_BFu0i_BFu31ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu32i()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu32i");
    static BFu32i_BFu0i_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu0i_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32i_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu32i(Test_BFu32i_BFu0i_BFu32i, "BFu32i_BFu0i_BFu32i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu32ll()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu32ll");
    static BFu32i_BFu0i_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu0i_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32i_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu32ll(Test_BFu32i_BFu0i_BFu32ll, "BFu32i_BFu0i_BFu32ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu33()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu33");
    static BFu32i_BFu0i_BFu33 lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu32i_BFu0i_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "BFu32i_BFu0i_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "BFu32i_BFu0i_BFu33");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu33(Test_BFu32i_BFu0i_BFu33, "BFu32i_BFu0i_BFu33", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu7c()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu7c");
    static BFu32i_BFu0i_BFu7c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32i_BFu0i_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu0i_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu7c(Test_BFu32i_BFu0i_BFu7c, "BFu32i_BFu0i_BFu7c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu7i()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu7i");
    static BFu32i_BFu0i_BFu7i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32i_BFu0i_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu0i_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu7i(Test_BFu32i_BFu0i_BFu7i, "BFu32i_BFu0i_BFu7i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu7ll()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu7ll");
    static BFu32i_BFu0i_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32i_BFu0i_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu0i_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu7ll(Test_BFu32i_BFu0i_BFu7ll, "BFu32i_BFu0i_BFu7ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu7s()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu7s");
    static BFu32i_BFu0i_BFu7s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32i_BFu0i_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu0i_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu7s(Test_BFu32i_BFu0i_BFu7s, "BFu32i_BFu0i_BFu7s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu8c()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu8c");
    static BFu32i_BFu0i_BFu8c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32i_BFu0i_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu0i_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu8c(Test_BFu32i_BFu0i_BFu8c, "BFu32i_BFu0i_BFu8c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu8i()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu8i");
    static BFu32i_BFu0i_BFu8i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32i_BFu0i_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu0i_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu8i(Test_BFu32i_BFu0i_BFu8i, "BFu32i_BFu0i_BFu8i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu8ll()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu8ll");
    static BFu32i_BFu0i_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32i_BFu0i_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu0i_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu8ll(Test_BFu32i_BFu0i_BFu8ll, "BFu32i_BFu0i_BFu8ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu8s()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu8s");
    static BFu32i_BFu0i_BFu8s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32i_BFu0i_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu0i_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu8s(Test_BFu32i_BFu0i_BFu8s, "BFu32i_BFu0i_BFu8s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu9i()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu9i");
    static BFu32i_BFu0i_BFu9i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32i_BFu0i_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32i_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32i_BFu0i_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu9i(Test_BFu32i_BFu0i_BFu9i, "BFu32i_BFu0i_BFu9i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu9ll()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu9ll");
    static BFu32i_BFu0i_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32i_BFu0i_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32i_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32i_BFu0i_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu9ll(Test_BFu32i_BFu0i_BFu9ll, "BFu32i_BFu0i_BFu9ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_BFu9s()
{
  {
    init_simple_test("BFu32i_BFu0i_BFu9s");
    static BFu32i_BFu0i_BFu9s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32i_BFu0i_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32i_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32i_BFu0i_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_BFu9s(Test_BFu32i_BFu0i_BFu9s, "BFu32i_BFu0i_BFu9s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_C()
{
  {
    init_simple_test("BFu32i_BFu0i_C");
    static BFu32i_BFu0i_C lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32i_BFu0i_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_C)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_C");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_C");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0i_C.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_C(Test_BFu32i_BFu0i_C, "BFu32i_BFu0i_C", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_D()
{
  {
    init_simple_test("BFu32i_BFu0i_D");
    static BFu32i_BFu0i_D lv;
    check2(sizeof(lv), 12, "sizeof(BFu32i_BFu0i_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_D)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_D");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_D");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0i_D.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_D(Test_BFu32i_BFu0i_D, "BFu32i_BFu0i_D", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_F()
{
  {
    init_simple_test("BFu32i_BFu0i_F");
    static BFu32i_BFu0i_F lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu0i_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_F)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_F");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_F");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0i_F.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_F(Test_BFu32i_BFu0i_F, "BFu32i_BFu0i_F", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_I()
{
  {
    init_simple_test("BFu32i_BFu0i_I");
    static BFu32i_BFu0i_I lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu0i_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_I)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_I");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_I");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0i_I.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_I(Test_BFu32i_BFu0i_I, "BFu32i_BFu0i_I", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_Ip()
{
  {
    init_simple_test("BFu32i_BFu0i_Ip");
    static BFu32i_BFu0i_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32i_BFu0i_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_Ip");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_Ip");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0i_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_Ip(Test_BFu32i_BFu0i_Ip, "BFu32i_BFu0i_Ip", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_L()
{
  {
    init_simple_test("BFu32i_BFu0i_L");
    static BFu32i_BFu0i_L lv;
    check2(sizeof(lv), 12, "sizeof(BFu32i_BFu0i_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_L)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_L");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_L");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0i_L.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_L(Test_BFu32i_BFu0i_L, "BFu32i_BFu0i_L", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_S()
{
  {
    init_simple_test("BFu32i_BFu0i_S");
    static BFu32i_BFu0i_S lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32i_BFu0i_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_S)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_S");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_S");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0i_S.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_S(Test_BFu32i_BFu0i_S, "BFu32i_BFu0i_S", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_Uc()
{
  {
    init_simple_test("BFu32i_BFu0i_Uc");
    static BFu32i_BFu0i_Uc lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32i_BFu0i_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_Uc");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_Uc");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0i_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_Uc(Test_BFu32i_BFu0i_Uc, "BFu32i_BFu0i_Uc", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_Ui()
{
  {
    init_simple_test("BFu32i_BFu0i_Ui");
    static BFu32i_BFu0i_Ui lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu0i_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_Ui");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_Ui");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0i_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_Ui(Test_BFu32i_BFu0i_Ui, "BFu32i_BFu0i_Ui", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_Ul()
{
  {
    init_simple_test("BFu32i_BFu0i_Ul");
    static BFu32i_BFu0i_Ul lv;
    check2(sizeof(lv), 12, "sizeof(BFu32i_BFu0i_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_Ul");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_Ul");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0i_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_Ul(Test_BFu32i_BFu0i_Ul, "BFu32i_BFu0i_Ul", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_Us()
{
  {
    init_simple_test("BFu32i_BFu0i_Us");
    static BFu32i_BFu0i_Us lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32i_BFu0i_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_Us)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_Us");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_Us");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0i_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_Us(Test_BFu32i_BFu0i_Us, "BFu32i_BFu0i_Us", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0i_Vp()
{
  {
    init_simple_test("BFu32i_BFu0i_Vp");
    static BFu32i_BFu0i_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32i_BFu0i_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0i_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0i_Vp");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0i_Vp");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0i_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0i_Vp(Test_BFu32i_BFu0i_Vp, "BFu32i_BFu0i_Vp", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu0ll");
    static BFu32i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu32i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll(Test_BFu32i_BFu0ll, "BFu32i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu0c");
    static BFu32i_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu32i_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu0c(Test_BFu32i_BFu0ll_BFu0c, "BFu32i_BFu0ll_BFu0c", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu0i");
    static BFu32i_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu32i_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu0i(Test_BFu32i_BFu0ll_BFu0i, "BFu32i_BFu0ll_BFu0i", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu0ll");
    static BFu32i_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu32i_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu0ll(Test_BFu32i_BFu0ll_BFu0ll, "BFu32i_BFu0ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu0s");
    static BFu32i_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu32i_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu0s(Test_BFu32i_BFu0ll_BFu0s, "BFu32i_BFu0ll_BFu0s", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu15i()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu15i");
    static BFu32i_BFu0ll_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu32i_BFu0ll_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "BFu32i_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "BFu32i_BFu0ll_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu15i(Test_BFu32i_BFu0ll_BFu15i, "BFu32i_BFu0ll_BFu15i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu15ll()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu15ll");
    static BFu32i_BFu0ll_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu32i_BFu0ll_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "BFu32i_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "BFu32i_BFu0ll_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu15ll(Test_BFu32i_BFu0ll_BFu15ll, "BFu32i_BFu0ll_BFu15ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu15s()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu15s");
    static BFu32i_BFu0ll_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu32i_BFu0ll_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "BFu32i_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "BFu32i_BFu0ll_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu15s(Test_BFu32i_BFu0ll_BFu15s, "BFu32i_BFu0ll_BFu15s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu16i()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu16i");
    static BFu32i_BFu0ll_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu32i_BFu0ll_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "BFu32i_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "BFu32i_BFu0ll_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu16i(Test_BFu32i_BFu0ll_BFu16i, "BFu32i_BFu0ll_BFu16i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu16ll()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu16ll");
    static BFu32i_BFu0ll_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu32i_BFu0ll_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "BFu32i_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "BFu32i_BFu0ll_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu16ll(Test_BFu32i_BFu0ll_BFu16ll, "BFu32i_BFu0ll_BFu16ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu16s()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu16s");
    static BFu32i_BFu0ll_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu32i_BFu0ll_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "BFu32i_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "BFu32i_BFu0ll_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu16s(Test_BFu32i_BFu0ll_BFu16s, "BFu32i_BFu0ll_BFu16s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu17i()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu17i");
    static BFu32i_BFu0ll_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu32i_BFu0ll_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "BFu32i_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "BFu32i_BFu0ll_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu17i(Test_BFu32i_BFu0ll_BFu17i, "BFu32i_BFu0ll_BFu17i", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu17ll()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu17ll");
    static BFu32i_BFu0ll_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu32i_BFu0ll_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "BFu32i_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "BFu32i_BFu0ll_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu17ll(Test_BFu32i_BFu0ll_BFu17ll, "BFu32i_BFu0ll_BFu17ll", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu1c()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu1c");
    static BFu32i_BFu0ll_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu32i_BFu0ll_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu32i_BFu0ll_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu1c(Test_BFu32i_BFu0ll_BFu1c, "BFu32i_BFu0ll_BFu1c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu1i()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu1i");
    static BFu32i_BFu0ll_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu32i_BFu0ll_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu32i_BFu0ll_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu1i(Test_BFu32i_BFu0ll_BFu1i, "BFu32i_BFu0ll_BFu1i", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu1ll()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu1ll");
    static BFu32i_BFu0ll_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu32i_BFu0ll_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu32i_BFu0ll_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu1ll(Test_BFu32i_BFu0ll_BFu1ll, "BFu32i_BFu0ll_BFu1ll", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu1s()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu1s");
    static BFu32i_BFu0ll_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu32i_BFu0ll_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu32i_BFu0ll_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu1s(Test_BFu32i_BFu0ll_BFu1s, "BFu32i_BFu0ll_BFu1s", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu31i()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu31i");
    static BFu32i_BFu0ll_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32i_BFu0ll_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "BFu32i_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "BFu32i_BFu0ll_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu31i(Test_BFu32i_BFu0ll_BFu31i, "BFu32i_BFu0ll_BFu31i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu31ll()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu31ll");
    static BFu32i_BFu0ll_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32i_BFu0ll_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "BFu32i_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "BFu32i_BFu0ll_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu31ll(Test_BFu32i_BFu0ll_BFu31ll, "BFu32i_BFu0ll_BFu31ll", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu32i()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu32i");
    static BFu32i_BFu0ll_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32i_BFu0ll_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "BFu32i_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu32i(Test_BFu32i_BFu0ll_BFu32i, "BFu32i_BFu0ll_BFu32i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu32ll()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu32ll");
    static BFu32i_BFu0ll_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32i_BFu0ll_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "BFu32i_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu32ll(Test_BFu32i_BFu0ll_BFu32ll, "BFu32i_BFu0ll_BFu32ll", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu33()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu33");
    static BFu32i_BFu0ll_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(BFu32i_BFu0ll_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, 1, "BFu32i_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, hide_ull(1LL<<32), "BFu32i_BFu0ll_BFu33");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu33(Test_BFu32i_BFu0ll_BFu33, "BFu32i_BFu0ll_BFu33", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu7c()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu7c");
    static BFu32i_BFu0ll_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu32i_BFu0ll_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu32i_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu32i_BFu0ll_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu7c(Test_BFu32i_BFu0ll_BFu7c, "BFu32i_BFu0ll_BFu7c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu7i()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu7i");
    static BFu32i_BFu0ll_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu32i_BFu0ll_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu32i_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu32i_BFu0ll_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu7i(Test_BFu32i_BFu0ll_BFu7i, "BFu32i_BFu0ll_BFu7i", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu7ll()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu7ll");
    static BFu32i_BFu0ll_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu32i_BFu0ll_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu32i_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu32i_BFu0ll_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu7ll(Test_BFu32i_BFu0ll_BFu7ll, "BFu32i_BFu0ll_BFu7ll", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu7s()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu7s");
    static BFu32i_BFu0ll_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu32i_BFu0ll_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu32i_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu32i_BFu0ll_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu7s(Test_BFu32i_BFu0ll_BFu7s, "BFu32i_BFu0ll_BFu7s", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu8c()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu8c");
    static BFu32i_BFu0ll_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu32i_BFu0ll_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu32i_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu32i_BFu0ll_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu8c(Test_BFu32i_BFu0ll_BFu8c, "BFu32i_BFu0ll_BFu8c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu8i()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu8i");
    static BFu32i_BFu0ll_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu32i_BFu0ll_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu32i_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu32i_BFu0ll_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu8i(Test_BFu32i_BFu0ll_BFu8i, "BFu32i_BFu0ll_BFu8i", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu8ll()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu8ll");
    static BFu32i_BFu0ll_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu32i_BFu0ll_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu32i_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu32i_BFu0ll_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu8ll(Test_BFu32i_BFu0ll_BFu8ll, "BFu32i_BFu0ll_BFu8ll", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu8s()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu8s");
    static BFu32i_BFu0ll_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu32i_BFu0ll_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu32i_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu32i_BFu0ll_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu8s(Test_BFu32i_BFu0ll_BFu8s, "BFu32i_BFu0ll_BFu8s", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu9i()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu9i");
    static BFu32i_BFu0ll_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu32i_BFu0ll_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "BFu32i_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "BFu32i_BFu0ll_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu9i(Test_BFu32i_BFu0ll_BFu9i, "BFu32i_BFu0ll_BFu9i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu9ll()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu9ll");
    static BFu32i_BFu0ll_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu32i_BFu0ll_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "BFu32i_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "BFu32i_BFu0ll_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu9ll(Test_BFu32i_BFu0ll_BFu9ll, "BFu32i_BFu0ll_BFu9ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_BFu9s()
{
  {
    init_simple_test("BFu32i_BFu0ll_BFu9s");
    static BFu32i_BFu0ll_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu32i_BFu0ll_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "BFu32i_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "BFu32i_BFu0ll_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_BFu9s(Test_BFu32i_BFu0ll_BFu9s, "BFu32i_BFu0ll_BFu9s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_C()
{
  {
    init_simple_test("BFu32i_BFu0ll_C");
    static BFu32i_BFu0ll_C lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu32i_BFu0ll_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_C)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_C");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_C");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu32i_BFu0ll_C.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_C(Test_BFu32i_BFu0ll_C, "BFu32i_BFu0ll_C", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_D()
{
  {
    init_simple_test("BFu32i_BFu0ll_D");
    static BFu32i_BFu0ll_D lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu32i_BFu0ll_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_D)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_D");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_D");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu32i_BFu0ll_D.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_D(Test_BFu32i_BFu0ll_D, "BFu32i_BFu0ll_D", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_F()
{
  {
    init_simple_test("BFu32i_BFu0ll_F");
    static BFu32i_BFu0ll_F lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32i_BFu0ll_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_F)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_F");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_F");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu32i_BFu0ll_F.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_F(Test_BFu32i_BFu0ll_F, "BFu32i_BFu0ll_F", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_I()
{
  {
    init_simple_test("BFu32i_BFu0ll_I");
    static BFu32i_BFu0ll_I lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32i_BFu0ll_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_I)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_I");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_I");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu32i_BFu0ll_I.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_I(Test_BFu32i_BFu0ll_I, "BFu32i_BFu0ll_I", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_Ip()
{
  {
    init_simple_test("BFu32i_BFu0ll_Ip");
    static BFu32i_BFu0ll_Ip lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu32i_BFu0ll_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_Ip");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_Ip");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu32i_BFu0ll_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_Ip(Test_BFu32i_BFu0ll_Ip, "BFu32i_BFu0ll_Ip", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_L()
{
  {
    init_simple_test("BFu32i_BFu0ll_L");
    static BFu32i_BFu0ll_L lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu32i_BFu0ll_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_L)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_L");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_L");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu32i_BFu0ll_L.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_L(Test_BFu32i_BFu0ll_L, "BFu32i_BFu0ll_L", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_S()
{
  {
    init_simple_test("BFu32i_BFu0ll_S");
    static BFu32i_BFu0ll_S lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu32i_BFu0ll_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_S)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_S");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_S");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu32i_BFu0ll_S.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_S(Test_BFu32i_BFu0ll_S, "BFu32i_BFu0ll_S", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_Uc()
{
  {
    init_simple_test("BFu32i_BFu0ll_Uc");
    static BFu32i_BFu0ll_Uc lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu32i_BFu0ll_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_Uc");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_Uc");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu32i_BFu0ll_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_Uc(Test_BFu32i_BFu0ll_Uc, "BFu32i_BFu0ll_Uc", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_Ui()
{
  {
    init_simple_test("BFu32i_BFu0ll_Ui");
    static BFu32i_BFu0ll_Ui lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32i_BFu0ll_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_Ui");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_Ui");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu32i_BFu0ll_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_Ui(Test_BFu32i_BFu0ll_Ui, "BFu32i_BFu0ll_Ui", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_Ul()
{
  {
    init_simple_test("BFu32i_BFu0ll_Ul");
    static BFu32i_BFu0ll_Ul lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu32i_BFu0ll_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_Ul");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_Ul");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu32i_BFu0ll_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_Ul(Test_BFu32i_BFu0ll_Ul, "BFu32i_BFu0ll_Ul", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_Us()
{
  {
    init_simple_test("BFu32i_BFu0ll_Us");
    static BFu32i_BFu0ll_Us lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu32i_BFu0ll_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_Us)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_Us");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_Us");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu32i_BFu0ll_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_Us(Test_BFu32i_BFu0ll_Us, "BFu32i_BFu0ll_Us", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0ll_Vp()
{
  {
    init_simple_test("BFu32i_BFu0ll_Vp");
    static BFu32i_BFu0ll_Vp lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu32i_BFu0ll_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0ll_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0ll_Vp");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0ll_Vp");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu32i_BFu0ll_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0ll_Vp(Test_BFu32i_BFu0ll_Vp, "BFu32i_BFu0ll_Vp", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu0s");
    static BFu32i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu32i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s(Test_BFu32i_BFu0s, "BFu32i_BFu0s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu0c");
    static BFu32i_BFu0s_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu32i_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu0c(Test_BFu32i_BFu0s_BFu0c, "BFu32i_BFu0s_BFu0c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu0i");
    static BFu32i_BFu0s_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu32i_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu0i(Test_BFu32i_BFu0s_BFu0i, "BFu32i_BFu0s_BFu0i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu0ll");
    static BFu32i_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu32i_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu0ll(Test_BFu32i_BFu0s_BFu0ll, "BFu32i_BFu0s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu0s");
    static BFu32i_BFu0s_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu32i_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu0s(Test_BFu32i_BFu0s_BFu0s, "BFu32i_BFu0s_BFu0s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu15i()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu15i");
    static BFu32i_BFu0s_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu0s_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32i_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32i_BFu0s_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu15i(Test_BFu32i_BFu0s_BFu15i, "BFu32i_BFu0s_BFu15i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu15ll()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu15ll");
    static BFu32i_BFu0s_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu0s_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32i_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32i_BFu0s_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu15ll(Test_BFu32i_BFu0s_BFu15ll, "BFu32i_BFu0s_BFu15ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu15s()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu15s");
    static BFu32i_BFu0s_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu0s_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32i_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32i_BFu0s_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu15s(Test_BFu32i_BFu0s_BFu15s, "BFu32i_BFu0s_BFu15s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu16i()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu16i");
    static BFu32i_BFu0s_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu0s_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32i_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32i_BFu0s_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu16i(Test_BFu32i_BFu0s_BFu16i, "BFu32i_BFu0s_BFu16i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu16ll()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu16ll");
    static BFu32i_BFu0s_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu0s_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32i_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32i_BFu0s_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu16ll(Test_BFu32i_BFu0s_BFu16ll, "BFu32i_BFu0s_BFu16ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu16s()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu16s");
    static BFu32i_BFu0s_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu0s_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32i_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32i_BFu0s_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu16s(Test_BFu32i_BFu0s_BFu16s, "BFu32i_BFu0s_BFu16s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu17i()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu17i");
    static BFu32i_BFu0s_BFu17i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu32i_BFu0s_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32i_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32i_BFu0s_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu17i(Test_BFu32i_BFu0s_BFu17i, "BFu32i_BFu0s_BFu17i", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu17ll()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu17ll");
    static BFu32i_BFu0s_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu32i_BFu0s_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32i_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32i_BFu0s_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu17ll(Test_BFu32i_BFu0s_BFu17ll, "BFu32i_BFu0s_BFu17ll", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu1c()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu1c");
    static BFu32i_BFu0s_BFu1c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32i_BFu0s_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu1c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu0s_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu1c(Test_BFu32i_BFu0s_BFu1c, "BFu32i_BFu0s_BFu1c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu1i()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu1i");
    static BFu32i_BFu0s_BFu1i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32i_BFu0s_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu1i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu0s_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu1i(Test_BFu32i_BFu0s_BFu1i, "BFu32i_BFu0s_BFu1i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu1ll()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu1ll");
    static BFu32i_BFu0s_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32i_BFu0s_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu1ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu0s_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu1ll(Test_BFu32i_BFu0s_BFu1ll, "BFu32i_BFu0s_BFu1ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu1s()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu1s");
    static BFu32i_BFu0s_BFu1s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32i_BFu0s_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu1s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu0s_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu1s(Test_BFu32i_BFu0s_BFu1s, "BFu32i_BFu0s_BFu1s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu31i()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu31i");
    static BFu32i_BFu0s_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu0s_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32i_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32i_BFu0s_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu31i(Test_BFu32i_BFu0s_BFu31i, "BFu32i_BFu0s_BFu31i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu31ll()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu31ll");
    static BFu32i_BFu0s_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu0s_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32i_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32i_BFu0s_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu31ll(Test_BFu32i_BFu0s_BFu31ll, "BFu32i_BFu0s_BFu31ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu32i()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu32i");
    static BFu32i_BFu0s_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu0s_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32i_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu32i(Test_BFu32i_BFu0s_BFu32i, "BFu32i_BFu0s_BFu32i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu32ll()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu32ll");
    static BFu32i_BFu0s_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu0s_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32i_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu32ll(Test_BFu32i_BFu0s_BFu32ll, "BFu32i_BFu0s_BFu32ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu33()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu33");
    static BFu32i_BFu0s_BFu33 lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu32i_BFu0s_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "BFu32i_BFu0s_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "BFu32i_BFu0s_BFu33");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu33(Test_BFu32i_BFu0s_BFu33, "BFu32i_BFu0s_BFu33", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu7c()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu7c");
    static BFu32i_BFu0s_BFu7c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32i_BFu0s_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu0s_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu7c(Test_BFu32i_BFu0s_BFu7c, "BFu32i_BFu0s_BFu7c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu7i()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu7i");
    static BFu32i_BFu0s_BFu7i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32i_BFu0s_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu0s_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu7i(Test_BFu32i_BFu0s_BFu7i, "BFu32i_BFu0s_BFu7i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu7ll()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu7ll");
    static BFu32i_BFu0s_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32i_BFu0s_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu0s_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu7ll(Test_BFu32i_BFu0s_BFu7ll, "BFu32i_BFu0s_BFu7ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu7s()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu7s");
    static BFu32i_BFu0s_BFu7s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32i_BFu0s_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu0s_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu7s(Test_BFu32i_BFu0s_BFu7s, "BFu32i_BFu0s_BFu7s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu8c()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu8c");
    static BFu32i_BFu0s_BFu8c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32i_BFu0s_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu0s_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu8c(Test_BFu32i_BFu0s_BFu8c, "BFu32i_BFu0s_BFu8c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu8i()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu8i");
    static BFu32i_BFu0s_BFu8i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32i_BFu0s_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu0s_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu8i(Test_BFu32i_BFu0s_BFu8i, "BFu32i_BFu0s_BFu8i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu8ll()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu8ll");
    static BFu32i_BFu0s_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32i_BFu0s_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu0s_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu8ll(Test_BFu32i_BFu0s_BFu8ll, "BFu32i_BFu0s_BFu8ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu8s()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu8s");
    static BFu32i_BFu0s_BFu8s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32i_BFu0s_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu0s_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu8s(Test_BFu32i_BFu0s_BFu8s, "BFu32i_BFu0s_BFu8s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu9i()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu9i");
    static BFu32i_BFu0s_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu0s_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32i_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32i_BFu0s_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu9i(Test_BFu32i_BFu0s_BFu9i, "BFu32i_BFu0s_BFu9i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu9ll()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu9ll");
    static BFu32i_BFu0s_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu0s_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32i_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32i_BFu0s_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu9ll(Test_BFu32i_BFu0s_BFu9ll, "BFu32i_BFu0s_BFu9ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_BFu9s()
{
  {
    init_simple_test("BFu32i_BFu0s_BFu9s");
    static BFu32i_BFu0s_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu0s_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32i_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32i_BFu0s_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_BFu9s(Test_BFu32i_BFu0s_BFu9s, "BFu32i_BFu0s_BFu9s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_C()
{
  {
    init_simple_test("BFu32i_BFu0s_C");
    static BFu32i_BFu0s_C lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32i_BFu0s_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_C)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_C");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_C");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0s_C.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_C(Test_BFu32i_BFu0s_C, "BFu32i_BFu0s_C", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_D()
{
  {
    init_simple_test("BFu32i_BFu0s_D");
    static BFu32i_BFu0s_D lv;
    check2(sizeof(lv), 12, "sizeof(BFu32i_BFu0s_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_D)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_D");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_D");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0s_D.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_D(Test_BFu32i_BFu0s_D, "BFu32i_BFu0s_D", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_F()
{
  {
    init_simple_test("BFu32i_BFu0s_F");
    static BFu32i_BFu0s_F lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu0s_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_F)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_F");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_F");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0s_F.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_F(Test_BFu32i_BFu0s_F, "BFu32i_BFu0s_F", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_I()
{
  {
    init_simple_test("BFu32i_BFu0s_I");
    static BFu32i_BFu0s_I lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu0s_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_I)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_I");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_I");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0s_I.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_I(Test_BFu32i_BFu0s_I, "BFu32i_BFu0s_I", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_Ip()
{
  {
    init_simple_test("BFu32i_BFu0s_Ip");
    static BFu32i_BFu0s_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32i_BFu0s_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_Ip");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_Ip");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0s_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_Ip(Test_BFu32i_BFu0s_Ip, "BFu32i_BFu0s_Ip", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_L()
{
  {
    init_simple_test("BFu32i_BFu0s_L");
    static BFu32i_BFu0s_L lv;
    check2(sizeof(lv), 12, "sizeof(BFu32i_BFu0s_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_L)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_L");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_L");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0s_L.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_L(Test_BFu32i_BFu0s_L, "BFu32i_BFu0s_L", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_S()
{
  {
    init_simple_test("BFu32i_BFu0s_S");
    static BFu32i_BFu0s_S lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu0s_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_S)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_S");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_S");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0s_S.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_S(Test_BFu32i_BFu0s_S, "BFu32i_BFu0s_S", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_Uc()
{
  {
    init_simple_test("BFu32i_BFu0s_Uc");
    static BFu32i_BFu0s_Uc lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32i_BFu0s_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_Uc");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_Uc");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0s_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_Uc(Test_BFu32i_BFu0s_Uc, "BFu32i_BFu0s_Uc", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_Ui()
{
  {
    init_simple_test("BFu32i_BFu0s_Ui");
    static BFu32i_BFu0s_Ui lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu0s_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_Ui");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_Ui");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0s_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_Ui(Test_BFu32i_BFu0s_Ui, "BFu32i_BFu0s_Ui", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_Ul()
{
  {
    init_simple_test("BFu32i_BFu0s_Ul");
    static BFu32i_BFu0s_Ul lv;
    check2(sizeof(lv), 12, "sizeof(BFu32i_BFu0s_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_Ul");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_Ul");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0s_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_Ul(Test_BFu32i_BFu0s_Ul, "BFu32i_BFu0s_Ul", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_Us()
{
  {
    init_simple_test("BFu32i_BFu0s_Us");
    static BFu32i_BFu0s_Us lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu0s_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_Us)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_Us");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_Us");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0s_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_Us(Test_BFu32i_BFu0s_Us, "BFu32i_BFu0s_Us", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu0s_Vp()
{
  {
    init_simple_test("BFu32i_BFu0s_Vp");
    static BFu32i_BFu0s_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32i_BFu0s_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu0s_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu0s_Vp");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu0s_Vp");
    check_field_offset(lv, v2, 4, "BFu32i_BFu0s_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu0s_Vp(Test_BFu32i_BFu0s_Vp, "BFu32i_BFu0s_Vp", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu15i_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu15i_BFu0c");
    static BFu32i_BFu15i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu15i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu15i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu15i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32i_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32i_BFu15i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu15i_BFu0c(Test_BFu32i_BFu15i_BFu0c, "BFu32i_BFu15i_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu15i_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu15i_BFu0i");
    static BFu32i_BFu15i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu15i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu15i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu15i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32i_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32i_BFu15i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu15i_BFu0i(Test_BFu32i_BFu15i_BFu0i, "BFu32i_BFu15i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu15i_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu15i_BFu0ll");
    static BFu32i_BFu15i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu15i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu15i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu15i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32i_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32i_BFu15i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu15i_BFu0ll(Test_BFu32i_BFu15i_BFu0ll, "BFu32i_BFu15i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu15i_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu15i_BFu0s");
    static BFu32i_BFu15i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu15i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu15i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu15i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32i_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32i_BFu15i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu15i_BFu0s(Test_BFu32i_BFu15i_BFu0s, "BFu32i_BFu15i_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu15ll_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu15ll_BFu0c");
    static BFu32i_BFu15ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu15ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu15ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu15ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32i_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32i_BFu15ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu15ll_BFu0c(Test_BFu32i_BFu15ll_BFu0c, "BFu32i_BFu15ll_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu15ll_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu15ll_BFu0i");
    static BFu32i_BFu15ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu15ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu15ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu15ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32i_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32i_BFu15ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu15ll_BFu0i(Test_BFu32i_BFu15ll_BFu0i, "BFu32i_BFu15ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu15ll_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu15ll_BFu0ll");
    static BFu32i_BFu15ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu15ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu15ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32i_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32i_BFu15ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu15ll_BFu0ll(Test_BFu32i_BFu15ll_BFu0ll, "BFu32i_BFu15ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu15ll_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu15ll_BFu0s");
    static BFu32i_BFu15ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu15ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu15ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu15ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32i_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32i_BFu15ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu15ll_BFu0s(Test_BFu32i_BFu15ll_BFu0s, "BFu32i_BFu15ll_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu15s_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu15s_BFu0c");
    static BFu32i_BFu15s_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu15s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu15s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu15s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32i_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32i_BFu15s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu15s_BFu0c(Test_BFu32i_BFu15s_BFu0c, "BFu32i_BFu15s_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu15s_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu15s_BFu0i");
    static BFu32i_BFu15s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu15s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu15s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu15s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32i_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32i_BFu15s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu15s_BFu0i(Test_BFu32i_BFu15s_BFu0i, "BFu32i_BFu15s_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu15s_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu15s_BFu0ll");
    static BFu32i_BFu15s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu15s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu15s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu15s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32i_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32i_BFu15s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu15s_BFu0ll(Test_BFu32i_BFu15s_BFu0ll, "BFu32i_BFu15s_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu15s_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu15s_BFu0s");
    static BFu32i_BFu15s_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu15s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu15s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu15s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32i_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32i_BFu15s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu15s_BFu0s(Test_BFu32i_BFu15s_BFu0s, "BFu32i_BFu15s_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu16i_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu16i_BFu0c");
    static BFu32i_BFu16i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu16i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu16i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu16i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32i_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32i_BFu16i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu16i_BFu0c(Test_BFu32i_BFu16i_BFu0c, "BFu32i_BFu16i_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu16i_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu16i_BFu0i");
    static BFu32i_BFu16i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu16i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu16i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu16i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32i_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32i_BFu16i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu16i_BFu0i(Test_BFu32i_BFu16i_BFu0i, "BFu32i_BFu16i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu16i_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu16i_BFu0ll");
    static BFu32i_BFu16i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu16i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu16i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu16i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32i_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32i_BFu16i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu16i_BFu0ll(Test_BFu32i_BFu16i_BFu0ll, "BFu32i_BFu16i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu16i_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu16i_BFu0s");
    static BFu32i_BFu16i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu16i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu16i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu16i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32i_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32i_BFu16i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu16i_BFu0s(Test_BFu32i_BFu16i_BFu0s, "BFu32i_BFu16i_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu16ll_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu16ll_BFu0c");
    static BFu32i_BFu16ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu16ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu16ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu16ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32i_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32i_BFu16ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu16ll_BFu0c(Test_BFu32i_BFu16ll_BFu0c, "BFu32i_BFu16ll_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu16ll_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu16ll_BFu0i");
    static BFu32i_BFu16ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu16ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu16ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu16ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32i_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32i_BFu16ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu16ll_BFu0i(Test_BFu32i_BFu16ll_BFu0i, "BFu32i_BFu16ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu16ll_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu16ll_BFu0ll");
    static BFu32i_BFu16ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu16ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu16ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32i_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32i_BFu16ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu16ll_BFu0ll(Test_BFu32i_BFu16ll_BFu0ll, "BFu32i_BFu16ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu16ll_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu16ll_BFu0s");
    static BFu32i_BFu16ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu16ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu16ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu16ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32i_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32i_BFu16ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu16ll_BFu0s(Test_BFu32i_BFu16ll_BFu0s, "BFu32i_BFu16ll_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu16s_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu16s_BFu0c");
    static BFu32i_BFu16s_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu16s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu16s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu16s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32i_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32i_BFu16s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu16s_BFu0c(Test_BFu32i_BFu16s_BFu0c, "BFu32i_BFu16s_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu16s_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu16s_BFu0i");
    static BFu32i_BFu16s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu16s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu16s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu16s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32i_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32i_BFu16s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu16s_BFu0i(Test_BFu32i_BFu16s_BFu0i, "BFu32i_BFu16s_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu16s_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu16s_BFu0ll");
    static BFu32i_BFu16s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu16s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu16s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu16s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32i_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32i_BFu16s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu16s_BFu0ll(Test_BFu32i_BFu16s_BFu0ll, "BFu32i_BFu16s_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu16s_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu16s_BFu0s");
    static BFu32i_BFu16s_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu16s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu16s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu16s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32i_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32i_BFu16s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu16s_BFu0s(Test_BFu32i_BFu16s_BFu0s, "BFu32i_BFu16s_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu17i_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu17i_BFu0c");
    static BFu32i_BFu17i_BFu0c lv;
    check2(sizeof(lv), 7, "sizeof(BFu32i_BFu17i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu17i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu17i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32i_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32i_BFu17i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu17i_BFu0c(Test_BFu32i_BFu17i_BFu0c, "BFu32i_BFu17i_BFu0c", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu17i_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu17i_BFu0i");
    static BFu32i_BFu17i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu17i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu17i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu17i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32i_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32i_BFu17i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu17i_BFu0i(Test_BFu32i_BFu17i_BFu0i, "BFu32i_BFu17i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu17i_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu17i_BFu0ll");
    static BFu32i_BFu17i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu17i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu17i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu17i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32i_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32i_BFu17i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu17i_BFu0ll(Test_BFu32i_BFu17i_BFu0ll, "BFu32i_BFu17i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu17i_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu17i_BFu0s");
    static BFu32i_BFu17i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu17i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu17i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu17i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32i_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32i_BFu17i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu17i_BFu0s(Test_BFu32i_BFu17i_BFu0s, "BFu32i_BFu17i_BFu0s", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu17ll_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu17ll_BFu0c");
    static BFu32i_BFu17ll_BFu0c lv;
    check2(sizeof(lv), 7, "sizeof(BFu32i_BFu17ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu17ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu17ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32i_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32i_BFu17ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu17ll_BFu0c(Test_BFu32i_BFu17ll_BFu0c, "BFu32i_BFu17ll_BFu0c", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu17ll_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu17ll_BFu0i");
    static BFu32i_BFu17ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu17ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu17ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu17ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32i_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32i_BFu17ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu17ll_BFu0i(Test_BFu32i_BFu17ll_BFu0i, "BFu32i_BFu17ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu17ll_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu17ll_BFu0ll");
    static BFu32i_BFu17ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu17ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu17ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32i_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32i_BFu17ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu17ll_BFu0ll(Test_BFu32i_BFu17ll_BFu0ll, "BFu32i_BFu17ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu17ll_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu17ll_BFu0s");
    static BFu32i_BFu17ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu17ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu17ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu17ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32i_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32i_BFu17ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu17ll_BFu0s(Test_BFu32i_BFu17ll_BFu0s, "BFu32i_BFu17ll_BFu0s", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu1c_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu1c_BFu0c");
    static BFu32i_BFu1c_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu1c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu1c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu1c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu1c_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu1c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu1c_BFu0c(Test_BFu32i_BFu1c_BFu0c, "BFu32i_BFu1c_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu1c_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu1c_BFu0i");
    static BFu32i_BFu1c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu1c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu1c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu1c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu1c_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu1c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu1c_BFu0i(Test_BFu32i_BFu1c_BFu0i, "BFu32i_BFu1c_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu1c_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu1c_BFu0ll");
    static BFu32i_BFu1c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu1c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu1c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu1c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu1c_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu1c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu1c_BFu0ll(Test_BFu32i_BFu1c_BFu0ll, "BFu32i_BFu1c_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu1c_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu1c_BFu0s");
    static BFu32i_BFu1c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32i_BFu1c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu1c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu1c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu1c_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu1c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu1c_BFu0s(Test_BFu32i_BFu1c_BFu0s, "BFu32i_BFu1c_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu1i_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu1i_BFu0c");
    static BFu32i_BFu1i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu1i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu1i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu1i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu1i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu1i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu1i_BFu0c(Test_BFu32i_BFu1i_BFu0c, "BFu32i_BFu1i_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu1i_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu1i_BFu0i");
    static BFu32i_BFu1i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu1i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu1i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu1i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu1i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu1i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu1i_BFu0i(Test_BFu32i_BFu1i_BFu0i, "BFu32i_BFu1i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu1i_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu1i_BFu0ll");
    static BFu32i_BFu1i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu1i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu1i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu1i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu1i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu1i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu1i_BFu0ll(Test_BFu32i_BFu1i_BFu0ll, "BFu32i_BFu1i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu1i_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu1i_BFu0s");
    static BFu32i_BFu1i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32i_BFu1i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu1i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu1i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu1i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu1i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu1i_BFu0s(Test_BFu32i_BFu1i_BFu0s, "BFu32i_BFu1i_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu1ll_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu1ll_BFu0c");
    static BFu32i_BFu1ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu1ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu1ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu1ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu1ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu1ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu1ll_BFu0c(Test_BFu32i_BFu1ll_BFu0c, "BFu32i_BFu1ll_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu1ll_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu1ll_BFu0i");
    static BFu32i_BFu1ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu1ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu1ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu1ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu1ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu1ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu1ll_BFu0i(Test_BFu32i_BFu1ll_BFu0i, "BFu32i_BFu1ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu1ll_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu1ll_BFu0ll");
    static BFu32i_BFu1ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu1ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu1ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu1ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu1ll_BFu0ll(Test_BFu32i_BFu1ll_BFu0ll, "BFu32i_BFu1ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu1ll_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu1ll_BFu0s");
    static BFu32i_BFu1ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32i_BFu1ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu1ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu1ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu1ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu1ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu1ll_BFu0s(Test_BFu32i_BFu1ll_BFu0s, "BFu32i_BFu1ll_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu1s_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu1s_BFu0c");
    static BFu32i_BFu1s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu1s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu1s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu1s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu1s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu1s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu1s_BFu0c(Test_BFu32i_BFu1s_BFu0c, "BFu32i_BFu1s_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu1s_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu1s_BFu0i");
    static BFu32i_BFu1s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu1s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu1s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu1s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu1s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu1s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu1s_BFu0i(Test_BFu32i_BFu1s_BFu0i, "BFu32i_BFu1s_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu1s_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu1s_BFu0ll");
    static BFu32i_BFu1s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu1s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu1s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu1s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu1s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu1s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu1s_BFu0ll(Test_BFu32i_BFu1s_BFu0ll, "BFu32i_BFu1s_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu1s_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu1s_BFu0s");
    static BFu32i_BFu1s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32i_BFu1s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu1s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu1s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu1s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32i_BFu1s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu1s_BFu0s(Test_BFu32i_BFu1s_BFu0s, "BFu32i_BFu1s_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu31i_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu31i_BFu0c");
    static BFu32i_BFu31i_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu31i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu31i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu31i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32i_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32i_BFu31i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu31i_BFu0c(Test_BFu32i_BFu31i_BFu0c, "BFu32i_BFu31i_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu31i_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu31i_BFu0i");
    static BFu32i_BFu31i_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu31i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu31i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu31i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32i_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32i_BFu31i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu31i_BFu0i(Test_BFu32i_BFu31i_BFu0i, "BFu32i_BFu31i_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu31i_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu31i_BFu0ll");
    static BFu32i_BFu31i_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu31i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu31i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu31i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32i_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32i_BFu31i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu31i_BFu0ll(Test_BFu32i_BFu31i_BFu0ll, "BFu32i_BFu31i_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu31i_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu31i_BFu0s");
    static BFu32i_BFu31i_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu31i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu31i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu31i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32i_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32i_BFu31i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu31i_BFu0s(Test_BFu32i_BFu31i_BFu0s, "BFu32i_BFu31i_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu31ll_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu31ll_BFu0c");
    static BFu32i_BFu31ll_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu31ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu31ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu31ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32i_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32i_BFu31ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu31ll_BFu0c(Test_BFu32i_BFu31ll_BFu0c, "BFu32i_BFu31ll_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu31ll_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu31ll_BFu0i");
    static BFu32i_BFu31ll_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu31ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu31ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu31ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32i_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32i_BFu31ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu31ll_BFu0i(Test_BFu32i_BFu31ll_BFu0i, "BFu32i_BFu31ll_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu31ll_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu31ll_BFu0ll");
    static BFu32i_BFu31ll_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu31ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu31ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32i_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32i_BFu31ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu31ll_BFu0ll(Test_BFu32i_BFu31ll_BFu0ll, "BFu32i_BFu31ll_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu31ll_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu31ll_BFu0s");
    static BFu32i_BFu31ll_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu31ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu31ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu31ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32i_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32i_BFu31ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu31ll_BFu0s(Test_BFu32i_BFu31ll_BFu0s, "BFu32i_BFu31ll_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu32i_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu32i_BFu0c");
    static BFu32i_BFu32i_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu32i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu32i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu32i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32i_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu32i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu32i_BFu0c(Test_BFu32i_BFu32i_BFu0c, "BFu32i_BFu32i_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu32i_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu32i_BFu0i");
    static BFu32i_BFu32i_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu32i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu32i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu32i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32i_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu32i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu32i_BFu0i(Test_BFu32i_BFu32i_BFu0i, "BFu32i_BFu32i_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu32i_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu32i_BFu0ll");
    static BFu32i_BFu32i_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu32i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu32i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu32i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32i_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu32i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu32i_BFu0ll(Test_BFu32i_BFu32i_BFu0ll, "BFu32i_BFu32i_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu32i_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu32i_BFu0s");
    static BFu32i_BFu32i_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu32i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu32i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu32i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32i_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu32i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu32i_BFu0s(Test_BFu32i_BFu32i_BFu0s, "BFu32i_BFu32i_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu32ll_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu32ll_BFu0c");
    static BFu32i_BFu32ll_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu32ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu32ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu32ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32i_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu32ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu32ll_BFu0c(Test_BFu32i_BFu32ll_BFu0c, "BFu32i_BFu32ll_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu32ll_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu32ll_BFu0i");
    static BFu32i_BFu32ll_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu32ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu32ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu32ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32i_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu32ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu32ll_BFu0i(Test_BFu32i_BFu32ll_BFu0i, "BFu32i_BFu32ll_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu32ll_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu32ll_BFu0ll");
    static BFu32i_BFu32ll_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu32ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu32ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32i_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu32ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu32ll_BFu0ll(Test_BFu32i_BFu32ll_BFu0ll, "BFu32i_BFu32ll_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu32ll_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu32ll_BFu0s");
    static BFu32i_BFu32ll_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_BFu32ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu32ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu32ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32i_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu32ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu32ll_BFu0s(Test_BFu32i_BFu32ll_BFu0s, "BFu32i_BFu32ll_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu33_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu33_BFu0c");
    static BFu32i_BFu33_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(BFu32i_BFu33_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu33_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu33_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "BFu32i_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "BFu32i_BFu33_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu33_BFu0c(Test_BFu32i_BFu33_BFu0c, "BFu32i_BFu33_BFu0c", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu33_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu33_BFu0i");
    static BFu32i_BFu33_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu32i_BFu33_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu33_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu33_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "BFu32i_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "BFu32i_BFu33_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu33_BFu0i(Test_BFu32i_BFu33_BFu0i, "BFu32i_BFu33_BFu0i", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu33_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu33_BFu0ll");
    static BFu32i_BFu33_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu32i_BFu33_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu33_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu33_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "BFu32i_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "BFu32i_BFu33_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu33_BFu0ll(Test_BFu32i_BFu33_BFu0ll, "BFu32i_BFu33_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu33_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu33_BFu0s");
    static BFu32i_BFu33_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu32i_BFu33_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu33_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu33_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "BFu32i_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "BFu32i_BFu33_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu33_BFu0s(Test_BFu32i_BFu33_BFu0s, "BFu32i_BFu33_BFu0s", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu7c_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu7c_BFu0c");
    static BFu32i_BFu7c_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu7c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu7c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu7c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu7c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu7c_BFu0c(Test_BFu32i_BFu7c_BFu0c, "BFu32i_BFu7c_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu7c_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu7c_BFu0i");
    static BFu32i_BFu7c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu7c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu7c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu7c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu7c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu7c_BFu0i(Test_BFu32i_BFu7c_BFu0i, "BFu32i_BFu7c_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu7c_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu7c_BFu0ll");
    static BFu32i_BFu7c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu7c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu7c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu7c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu7c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu7c_BFu0ll(Test_BFu32i_BFu7c_BFu0ll, "BFu32i_BFu7c_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu7c_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu7c_BFu0s");
    static BFu32i_BFu7c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32i_BFu7c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu7c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu7c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu7c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu7c_BFu0s(Test_BFu32i_BFu7c_BFu0s, "BFu32i_BFu7c_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu7i_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu7i_BFu0c");
    static BFu32i_BFu7i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu7i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu7i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu7i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu7i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu7i_BFu0c(Test_BFu32i_BFu7i_BFu0c, "BFu32i_BFu7i_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu7i_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu7i_BFu0i");
    static BFu32i_BFu7i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu7i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu7i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu7i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu7i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu7i_BFu0i(Test_BFu32i_BFu7i_BFu0i, "BFu32i_BFu7i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu7i_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu7i_BFu0ll");
    static BFu32i_BFu7i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu7i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu7i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu7i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu7i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu7i_BFu0ll(Test_BFu32i_BFu7i_BFu0ll, "BFu32i_BFu7i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu7i_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu7i_BFu0s");
    static BFu32i_BFu7i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32i_BFu7i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu7i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu7i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu7i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu7i_BFu0s(Test_BFu32i_BFu7i_BFu0s, "BFu32i_BFu7i_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu7ll_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu7ll_BFu0c");
    static BFu32i_BFu7ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu7ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu7ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu7ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu7ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu7ll_BFu0c(Test_BFu32i_BFu7ll_BFu0c, "BFu32i_BFu7ll_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu7ll_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu7ll_BFu0i");
    static BFu32i_BFu7ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu7ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu7ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu7ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu7ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu7ll_BFu0i(Test_BFu32i_BFu7ll_BFu0i, "BFu32i_BFu7ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu7ll_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu7ll_BFu0ll");
    static BFu32i_BFu7ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu7ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu7ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu7ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu7ll_BFu0ll(Test_BFu32i_BFu7ll_BFu0ll, "BFu32i_BFu7ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu7ll_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu7ll_BFu0s");
    static BFu32i_BFu7ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32i_BFu7ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu7ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu7ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu7ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu7ll_BFu0s(Test_BFu32i_BFu7ll_BFu0s, "BFu32i_BFu7ll_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu7s_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu7s_BFu0c");
    static BFu32i_BFu7s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu7s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu7s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu7s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu7s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu7s_BFu0c(Test_BFu32i_BFu7s_BFu0c, "BFu32i_BFu7s_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu7s_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu7s_BFu0i");
    static BFu32i_BFu7s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu7s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu7s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu7s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu7s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu7s_BFu0i(Test_BFu32i_BFu7s_BFu0i, "BFu32i_BFu7s_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu7s_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu7s_BFu0ll");
    static BFu32i_BFu7s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu7s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu7s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu7s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu7s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu7s_BFu0ll(Test_BFu32i_BFu7s_BFu0ll, "BFu32i_BFu7s_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu7s_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu7s_BFu0s");
    static BFu32i_BFu7s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32i_BFu7s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu7s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu7s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32i_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32i_BFu7s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu7s_BFu0s(Test_BFu32i_BFu7s_BFu0s, "BFu32i_BFu7s_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu8c_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu8c_BFu0c");
    static BFu32i_BFu8c_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu8c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu8c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu8c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu8c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu8c_BFu0c(Test_BFu32i_BFu8c_BFu0c, "BFu32i_BFu8c_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu8c_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu8c_BFu0i");
    static BFu32i_BFu8c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu8c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu8c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu8c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu8c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu8c_BFu0i(Test_BFu32i_BFu8c_BFu0i, "BFu32i_BFu8c_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu8c_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu8c_BFu0ll");
    static BFu32i_BFu8c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu8c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu8c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu8c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu8c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu8c_BFu0ll(Test_BFu32i_BFu8c_BFu0ll, "BFu32i_BFu8c_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu8c_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu8c_BFu0s");
    static BFu32i_BFu8c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32i_BFu8c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu8c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu8c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu8c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu8c_BFu0s(Test_BFu32i_BFu8c_BFu0s, "BFu32i_BFu8c_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu8i_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu8i_BFu0c");
    static BFu32i_BFu8i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu8i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu8i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu8i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu8i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu8i_BFu0c(Test_BFu32i_BFu8i_BFu0c, "BFu32i_BFu8i_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu8i_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu8i_BFu0i");
    static BFu32i_BFu8i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu8i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu8i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu8i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu8i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu8i_BFu0i(Test_BFu32i_BFu8i_BFu0i, "BFu32i_BFu8i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu8i_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu8i_BFu0ll");
    static BFu32i_BFu8i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu8i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu8i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu8i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu8i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu8i_BFu0ll(Test_BFu32i_BFu8i_BFu0ll, "BFu32i_BFu8i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu8i_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu8i_BFu0s");
    static BFu32i_BFu8i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32i_BFu8i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu8i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu8i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu8i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu8i_BFu0s(Test_BFu32i_BFu8i_BFu0s, "BFu32i_BFu8i_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu8ll_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu8ll_BFu0c");
    static BFu32i_BFu8ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu8ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu8ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu8ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu8ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu8ll_BFu0c(Test_BFu32i_BFu8ll_BFu0c, "BFu32i_BFu8ll_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu8ll_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu8ll_BFu0i");
    static BFu32i_BFu8ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu8ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu8ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu8ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu8ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu8ll_BFu0i(Test_BFu32i_BFu8ll_BFu0i, "BFu32i_BFu8ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu8ll_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu8ll_BFu0ll");
    static BFu32i_BFu8ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu8ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu8ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu8ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu8ll_BFu0ll(Test_BFu32i_BFu8ll_BFu0ll, "BFu32i_BFu8ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu8ll_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu8ll_BFu0s");
    static BFu32i_BFu8ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32i_BFu8ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu8ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu8ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu8ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu8ll_BFu0s(Test_BFu32i_BFu8ll_BFu0s, "BFu32i_BFu8ll_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu8s_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu8s_BFu0c");
    static BFu32i_BFu8s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_BFu8s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu8s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu8s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu8s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu8s_BFu0c(Test_BFu32i_BFu8s_BFu0c, "BFu32i_BFu8s_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu8s_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu8s_BFu0i");
    static BFu32i_BFu8s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu8s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu8s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu8s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu8s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu8s_BFu0i(Test_BFu32i_BFu8s_BFu0i, "BFu32i_BFu8s_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu8s_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu8s_BFu0ll");
    static BFu32i_BFu8s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu8s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu8s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu8s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu8s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu8s_BFu0ll(Test_BFu32i_BFu8s_BFu0ll, "BFu32i_BFu8s_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu8s_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu8s_BFu0s");
    static BFu32i_BFu8s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32i_BFu8s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu8s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu8s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32i_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32i_BFu8s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu8s_BFu0s(Test_BFu32i_BFu8s_BFu0s, "BFu32i_BFu8s_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu9i_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu9i_BFu0c");
    static BFu32i_BFu9i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu9i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu9i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu9i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32i_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32i_BFu9i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu9i_BFu0c(Test_BFu32i_BFu9i_BFu0c, "BFu32i_BFu9i_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu9i_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu9i_BFu0i");
    static BFu32i_BFu9i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu9i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu9i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu9i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32i_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32i_BFu9i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu9i_BFu0i(Test_BFu32i_BFu9i_BFu0i, "BFu32i_BFu9i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu9i_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu9i_BFu0ll");
    static BFu32i_BFu9i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu9i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu9i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu9i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32i_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32i_BFu9i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu9i_BFu0ll(Test_BFu32i_BFu9i_BFu0ll, "BFu32i_BFu9i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu9i_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu9i_BFu0s");
    static BFu32i_BFu9i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu9i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu9i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu9i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32i_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32i_BFu9i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu9i_BFu0s(Test_BFu32i_BFu9i_BFu0s, "BFu32i_BFu9i_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu9ll_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu9ll_BFu0c");
    static BFu32i_BFu9ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu9ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu9ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu9ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32i_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32i_BFu9ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu9ll_BFu0c(Test_BFu32i_BFu9ll_BFu0c, "BFu32i_BFu9ll_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu9ll_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu9ll_BFu0i");
    static BFu32i_BFu9ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu9ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu9ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu9ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32i_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32i_BFu9ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu9ll_BFu0i(Test_BFu32i_BFu9ll_BFu0i, "BFu32i_BFu9ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu9ll_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu9ll_BFu0ll");
    static BFu32i_BFu9ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu9ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu9ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32i_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32i_BFu9ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu9ll_BFu0ll(Test_BFu32i_BFu9ll_BFu0ll, "BFu32i_BFu9ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu9ll_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu9ll_BFu0s");
    static BFu32i_BFu9ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu9ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu9ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu9ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32i_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32i_BFu9ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu9ll_BFu0s(Test_BFu32i_BFu9ll_BFu0s, "BFu32i_BFu9ll_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu9s_BFu0c()
{
  {
    init_simple_test("BFu32i_BFu9s_BFu0c");
    static BFu32i_BFu9s_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu9s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_BFu9s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu9s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32i_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32i_BFu9s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu9s_BFu0c(Test_BFu32i_BFu9s_BFu0c, "BFu32i_BFu9s_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu9s_BFu0i()
{
  {
    init_simple_test("BFu32i_BFu9s_BFu0i");
    static BFu32i_BFu9s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu9s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu9s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu9s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32i_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32i_BFu9s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu9s_BFu0i(Test_BFu32i_BFu9s_BFu0i, "BFu32i_BFu9s_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu9s_BFu0ll()
{
  {
    init_simple_test("BFu32i_BFu9s_BFu0ll");
    static BFu32i_BFu9s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_BFu9s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu9s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu9s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32i_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32i_BFu9s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu9s_BFu0ll(Test_BFu32i_BFu9s_BFu0ll, "BFu32i_BFu9s_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_BFu9s_BFu0s()
{
  {
    init_simple_test("BFu32i_BFu9s_BFu0s");
    static BFu32i_BFu9s_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_BFu9s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_BFu9s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_BFu9s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32i_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32i_BFu9s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32i_BFu9s_BFu0s(Test_BFu32i_BFu9s_BFu0s, "BFu32i_BFu9s_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_C_BFu0c()
{
  {
    init_simple_test("BFu32i_C_BFu0c");
    static BFu32i_C_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_C_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_C_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_C_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_C_BFu0c");
    check_field_offset(lv, v2, 4, "BFu32i_C_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_C_BFu0c(Test_BFu32i_C_BFu0c, "BFu32i_C_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_C_BFu0i()
{
  {
    init_simple_test("BFu32i_C_BFu0i");
    static BFu32i_C_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_C_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_C_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_C_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_C_BFu0i");
    check_field_offset(lv, v2, 4, "BFu32i_C_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_C_BFu0i(Test_BFu32i_C_BFu0i, "BFu32i_C_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_C_BFu0ll()
{
  {
    init_simple_test("BFu32i_C_BFu0ll");
    static BFu32i_C_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_C_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_C_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_C_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_C_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu32i_C_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_C_BFu0ll(Test_BFu32i_C_BFu0ll, "BFu32i_C_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_C_BFu0s()
{
  {
    init_simple_test("BFu32i_C_BFu0s");
    static BFu32i_C_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32i_C_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_C_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_C_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_C_BFu0s");
    check_field_offset(lv, v2, 4, "BFu32i_C_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_C_BFu0s(Test_BFu32i_C_BFu0s, "BFu32i_C_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_D_BFu0c()
{
  {
    init_simple_test("BFu32i_D_BFu0c");
    static BFu32i_D_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(BFu32i_D_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_D_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_D_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_D_BFu0c");
    check_field_offset(lv, v2, 4, "BFu32i_D_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_D_BFu0c(Test_BFu32i_D_BFu0c, "BFu32i_D_BFu0c", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_D_BFu0i()
{
  {
    init_simple_test("BFu32i_D_BFu0i");
    static BFu32i_D_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(BFu32i_D_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_D_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_D_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_D_BFu0i");
    check_field_offset(lv, v2, 4, "BFu32i_D_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_D_BFu0i(Test_BFu32i_D_BFu0i, "BFu32i_D_BFu0i", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_D_BFu0ll()
{
  {
    init_simple_test("BFu32i_D_BFu0ll");
    static BFu32i_D_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu32i_D_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_D_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_D_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_D_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu32i_D_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_D_BFu0ll(Test_BFu32i_D_BFu0ll, "BFu32i_D_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_D_BFu0s()
{
  {
    init_simple_test("BFu32i_D_BFu0s");
    static BFu32i_D_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(BFu32i_D_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_D_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_D_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_D_BFu0s");
    check_field_offset(lv, v2, 4, "BFu32i_D_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_D_BFu0s(Test_BFu32i_D_BFu0s, "BFu32i_D_BFu0s", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_F_BFu0c()
{
  {
    init_simple_test("BFu32i_F_BFu0c");
    static BFu32i_F_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_F_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_F_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_F_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_F_BFu0c");
    check_field_offset(lv, v2, 4, "BFu32i_F_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_F_BFu0c(Test_BFu32i_F_BFu0c, "BFu32i_F_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_F_BFu0i()
{
  {
    init_simple_test("BFu32i_F_BFu0i");
    static BFu32i_F_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_F_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_F_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_F_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_F_BFu0i");
    check_field_offset(lv, v2, 4, "BFu32i_F_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_F_BFu0i(Test_BFu32i_F_BFu0i, "BFu32i_F_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_F_BFu0ll()
{
  {
    init_simple_test("BFu32i_F_BFu0ll");
    static BFu32i_F_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_F_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_F_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_F_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_F_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu32i_F_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_F_BFu0ll(Test_BFu32i_F_BFu0ll, "BFu32i_F_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_F_BFu0s()
{
  {
    init_simple_test("BFu32i_F_BFu0s");
    static BFu32i_F_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_F_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_F_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_F_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_F_BFu0s");
    check_field_offset(lv, v2, 4, "BFu32i_F_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_F_BFu0s(Test_BFu32i_F_BFu0s, "BFu32i_F_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_I_BFu0c()
{
  {
    init_simple_test("BFu32i_I_BFu0c");
    static BFu32i_I_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_I_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_I_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_I_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_I_BFu0c");
    check_field_offset(lv, v2, 4, "BFu32i_I_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_I_BFu0c(Test_BFu32i_I_BFu0c, "BFu32i_I_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_I_BFu0i()
{
  {
    init_simple_test("BFu32i_I_BFu0i");
    static BFu32i_I_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_I_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_I_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_I_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_I_BFu0i");
    check_field_offset(lv, v2, 4, "BFu32i_I_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_I_BFu0i(Test_BFu32i_I_BFu0i, "BFu32i_I_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_I_BFu0ll()
{
  {
    init_simple_test("BFu32i_I_BFu0ll");
    static BFu32i_I_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_I_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_I_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_I_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_I_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu32i_I_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_I_BFu0ll(Test_BFu32i_I_BFu0ll, "BFu32i_I_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_I_BFu0s()
{
  {
    init_simple_test("BFu32i_I_BFu0s");
    static BFu32i_I_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_I_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_I_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_I_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_I_BFu0s");
    check_field_offset(lv, v2, 4, "BFu32i_I_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_I_BFu0s(Test_BFu32i_I_BFu0s, "BFu32i_I_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_Ip_BFu0c()
{
  {
    init_simple_test("BFu32i_Ip_BFu0c");
    static BFu32i_Ip_BFu0c lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32i_Ip_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Ip_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Ip_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Ip_BFu0c");
    check_field_offset(lv, v2, 4, "BFu32i_Ip_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_Ip_BFu0c(Test_BFu32i_Ip_BFu0c, "BFu32i_Ip_BFu0c", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_Ip_BFu0i()
{
  {
    init_simple_test("BFu32i_Ip_BFu0i");
    static BFu32i_Ip_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32i_Ip_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_Ip_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Ip_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Ip_BFu0i");
    check_field_offset(lv, v2, 4, "BFu32i_Ip_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_Ip_BFu0i(Test_BFu32i_Ip_BFu0i, "BFu32i_Ip_BFu0i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_Ip_BFu0ll()
{
  {
    init_simple_test("BFu32i_Ip_BFu0ll");
    static BFu32i_Ip_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu32i_Ip_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_Ip_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Ip_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Ip_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu32i_Ip_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_Ip_BFu0ll(Test_BFu32i_Ip_BFu0ll, "BFu32i_Ip_BFu0ll", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_Ip_BFu0s()
{
  {
    init_simple_test("BFu32i_Ip_BFu0s");
    static BFu32i_Ip_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32i_Ip_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_Ip_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Ip_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Ip_BFu0s");
    check_field_offset(lv, v2, 4, "BFu32i_Ip_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_Ip_BFu0s(Test_BFu32i_Ip_BFu0s, "BFu32i_Ip_BFu0s", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_L_BFu0c()
{
  {
    init_simple_test("BFu32i_L_BFu0c");
    static BFu32i_L_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(BFu32i_L_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_L_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_L_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_L_BFu0c");
    check_field_offset(lv, v2, 4, "BFu32i_L_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_L_BFu0c(Test_BFu32i_L_BFu0c, "BFu32i_L_BFu0c", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_L_BFu0i()
{
  {
    init_simple_test("BFu32i_L_BFu0i");
    static BFu32i_L_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(BFu32i_L_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_L_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_L_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_L_BFu0i");
    check_field_offset(lv, v2, 4, "BFu32i_L_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_L_BFu0i(Test_BFu32i_L_BFu0i, "BFu32i_L_BFu0i", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_L_BFu0ll()
{
  {
    init_simple_test("BFu32i_L_BFu0ll");
    static BFu32i_L_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu32i_L_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_L_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_L_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_L_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu32i_L_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_L_BFu0ll(Test_BFu32i_L_BFu0ll, "BFu32i_L_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_L_BFu0s()
{
  {
    init_simple_test("BFu32i_L_BFu0s");
    static BFu32i_L_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(BFu32i_L_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_L_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_L_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_L_BFu0s");
    check_field_offset(lv, v2, 4, "BFu32i_L_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_L_BFu0s(Test_BFu32i_L_BFu0s, "BFu32i_L_BFu0s", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_S_BFu0c()
{
  {
    init_simple_test("BFu32i_S_BFu0c");
    static BFu32i_S_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_S_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_S_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_S_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_S_BFu0c");
    check_field_offset(lv, v2, 4, "BFu32i_S_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_S_BFu0c(Test_BFu32i_S_BFu0c, "BFu32i_S_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_S_BFu0i()
{
  {
    init_simple_test("BFu32i_S_BFu0i");
    static BFu32i_S_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_S_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_S_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_S_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_S_BFu0i");
    check_field_offset(lv, v2, 4, "BFu32i_S_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_S_BFu0i(Test_BFu32i_S_BFu0i, "BFu32i_S_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_S_BFu0ll()
{
  {
    init_simple_test("BFu32i_S_BFu0ll");
    static BFu32i_S_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_S_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_S_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_S_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_S_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu32i_S_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_S_BFu0ll(Test_BFu32i_S_BFu0ll, "BFu32i_S_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_S_BFu0s()
{
  {
    init_simple_test("BFu32i_S_BFu0s");
    static BFu32i_S_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_S_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_S_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_S_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_S_BFu0s");
    check_field_offset(lv, v2, 4, "BFu32i_S_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_S_BFu0s(Test_BFu32i_S_BFu0s, "BFu32i_S_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_Uc_BFu0c()
{
  {
    init_simple_test("BFu32i_Uc_BFu0c");
    static BFu32i_Uc_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32i_Uc_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Uc_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Uc_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Uc_BFu0c");
    check_field_offset(lv, v2, 4, "BFu32i_Uc_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_Uc_BFu0c(Test_BFu32i_Uc_BFu0c, "BFu32i_Uc_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_Uc_BFu0i()
{
  {
    init_simple_test("BFu32i_Uc_BFu0i");
    static BFu32i_Uc_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_Uc_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_Uc_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Uc_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Uc_BFu0i");
    check_field_offset(lv, v2, 4, "BFu32i_Uc_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_Uc_BFu0i(Test_BFu32i_Uc_BFu0i, "BFu32i_Uc_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_Uc_BFu0ll()
{
  {
    init_simple_test("BFu32i_Uc_BFu0ll");
    static BFu32i_Uc_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_Uc_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_Uc_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Uc_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Uc_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu32i_Uc_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_Uc_BFu0ll(Test_BFu32i_Uc_BFu0ll, "BFu32i_Uc_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_Uc_BFu0s()
{
  {
    init_simple_test("BFu32i_Uc_BFu0s");
    static BFu32i_Uc_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32i_Uc_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_Uc_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Uc_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Uc_BFu0s");
    check_field_offset(lv, v2, 4, "BFu32i_Uc_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_Uc_BFu0s(Test_BFu32i_Uc_BFu0s, "BFu32i_Uc_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_Ui_BFu0c()
{
  {
    init_simple_test("BFu32i_Ui_BFu0c");
    static BFu32i_Ui_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_Ui_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Ui_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Ui_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Ui_BFu0c");
    check_field_offset(lv, v2, 4, "BFu32i_Ui_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_Ui_BFu0c(Test_BFu32i_Ui_BFu0c, "BFu32i_Ui_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_Ui_BFu0i()
{
  {
    init_simple_test("BFu32i_Ui_BFu0i");
    static BFu32i_Ui_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_Ui_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_Ui_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Ui_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Ui_BFu0i");
    check_field_offset(lv, v2, 4, "BFu32i_Ui_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_Ui_BFu0i(Test_BFu32i_Ui_BFu0i, "BFu32i_Ui_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_Ui_BFu0ll()
{
  {
    init_simple_test("BFu32i_Ui_BFu0ll");
    static BFu32i_Ui_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_Ui_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_Ui_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Ui_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Ui_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu32i_Ui_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_Ui_BFu0ll(Test_BFu32i_Ui_BFu0ll, "BFu32i_Ui_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_Ui_BFu0s()
{
  {
    init_simple_test("BFu32i_Ui_BFu0s");
    static BFu32i_Ui_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu32i_Ui_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_Ui_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Ui_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Ui_BFu0s");
    check_field_offset(lv, v2, 4, "BFu32i_Ui_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_Ui_BFu0s(Test_BFu32i_Ui_BFu0s, "BFu32i_Ui_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_Ul_BFu0c()
{
  {
    init_simple_test("BFu32i_Ul_BFu0c");
    static BFu32i_Ul_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(BFu32i_Ul_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Ul_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Ul_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Ul_BFu0c");
    check_field_offset(lv, v2, 4, "BFu32i_Ul_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_Ul_BFu0c(Test_BFu32i_Ul_BFu0c, "BFu32i_Ul_BFu0c", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_Ul_BFu0i()
{
  {
    init_simple_test("BFu32i_Ul_BFu0i");
    static BFu32i_Ul_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(BFu32i_Ul_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_Ul_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Ul_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Ul_BFu0i");
    check_field_offset(lv, v2, 4, "BFu32i_Ul_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_Ul_BFu0i(Test_BFu32i_Ul_BFu0i, "BFu32i_Ul_BFu0i", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_Ul_BFu0ll()
{
  {
    init_simple_test("BFu32i_Ul_BFu0ll");
    static BFu32i_Ul_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu32i_Ul_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_Ul_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Ul_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Ul_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu32i_Ul_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_Ul_BFu0ll(Test_BFu32i_Ul_BFu0ll, "BFu32i_Ul_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_Ul_BFu0s()
{
  {
    init_simple_test("BFu32i_Ul_BFu0s");
    static BFu32i_Ul_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(BFu32i_Ul_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_Ul_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Ul_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Ul_BFu0s");
    check_field_offset(lv, v2, 4, "BFu32i_Ul_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_Ul_BFu0s(Test_BFu32i_Ul_BFu0s, "BFu32i_Ul_BFu0s", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_Us_BFu0c()
{
  {
    init_simple_test("BFu32i_Us_BFu0c");
    static BFu32i_Us_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_Us_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Us_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Us_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Us_BFu0c");
    check_field_offset(lv, v2, 4, "BFu32i_Us_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_Us_BFu0c(Test_BFu32i_Us_BFu0c, "BFu32i_Us_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_Us_BFu0i()
{
  {
    init_simple_test("BFu32i_Us_BFu0i");
    static BFu32i_Us_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_Us_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_Us_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Us_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Us_BFu0i");
    check_field_offset(lv, v2, 4, "BFu32i_Us_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_Us_BFu0i(Test_BFu32i_Us_BFu0i, "BFu32i_Us_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_Us_BFu0ll()
{
  {
    init_simple_test("BFu32i_Us_BFu0ll");
    static BFu32i_Us_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32i_Us_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_Us_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Us_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Us_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu32i_Us_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_Us_BFu0ll(Test_BFu32i_Us_BFu0ll, "BFu32i_Us_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_Us_BFu0s()
{
  {
    init_simple_test("BFu32i_Us_BFu0s");
    static BFu32i_Us_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32i_Us_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_Us_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Us_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Us_BFu0s");
    check_field_offset(lv, v2, 4, "BFu32i_Us_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_Us_BFu0s(Test_BFu32i_Us_BFu0s, "BFu32i_Us_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_Vp_BFu0c()
{
  {
    init_simple_test("BFu32i_Vp_BFu0c");
    static BFu32i_Vp_BFu0c lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32i_Vp_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32i_Vp_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Vp_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Vp_BFu0c");
    check_field_offset(lv, v2, 4, "BFu32i_Vp_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_Vp_BFu0c(Test_BFu32i_Vp_BFu0c, "BFu32i_Vp_BFu0c", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_Vp_BFu0i()
{
  {
    init_simple_test("BFu32i_Vp_BFu0i");
    static BFu32i_Vp_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32i_Vp_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_Vp_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Vp_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Vp_BFu0i");
    check_field_offset(lv, v2, 4, "BFu32i_Vp_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_Vp_BFu0i(Test_BFu32i_Vp_BFu0i, "BFu32i_Vp_BFu0i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_Vp_BFu0ll()
{
  {
    init_simple_test("BFu32i_Vp_BFu0ll");
    static BFu32i_Vp_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu32i_Vp_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_Vp_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Vp_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Vp_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu32i_Vp_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_Vp_BFu0ll(Test_BFu32i_Vp_BFu0ll, "BFu32i_Vp_BFu0ll", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32i_Vp_BFu0s()
{
  {
    init_simple_test("BFu32i_Vp_BFu0s");
    static BFu32i_Vp_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32i_Vp_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32i_Vp_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32i_Vp_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32i_Vp_BFu0s");
    check_field_offset(lv, v2, 4, "BFu32i_Vp_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu32i_Vp_BFu0s(Test_BFu32i_Vp_BFu0s, "BFu32i_Vp_BFu0s", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu0c");
    static BFu32ll_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu32ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c(Test_BFu32ll_BFu0c, "BFu32ll_BFu0c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu0c");
    static BFu32ll_BFu0c_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu32ll_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu0c(Test_BFu32ll_BFu0c_BFu0c, "BFu32ll_BFu0c_BFu0c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu0i");
    static BFu32ll_BFu0c_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu32ll_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu0i(Test_BFu32ll_BFu0c_BFu0i, "BFu32ll_BFu0c_BFu0i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu0ll");
    static BFu32ll_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu32ll_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu0ll(Test_BFu32ll_BFu0c_BFu0ll, "BFu32ll_BFu0c_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu0s");
    static BFu32ll_BFu0c_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu32ll_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu0s(Test_BFu32ll_BFu0c_BFu0s, "BFu32ll_BFu0c_BFu0s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu15i()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu15i");
    static BFu32ll_BFu0c_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu0c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32ll_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32ll_BFu0c_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu15i(Test_BFu32ll_BFu0c_BFu15i, "BFu32ll_BFu0c_BFu15i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu15ll()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu15ll");
    static BFu32ll_BFu0c_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu0c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32ll_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32ll_BFu0c_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu15ll(Test_BFu32ll_BFu0c_BFu15ll, "BFu32ll_BFu0c_BFu15ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu15s()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu15s");
    static BFu32ll_BFu0c_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu0c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32ll_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32ll_BFu0c_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu15s(Test_BFu32ll_BFu0c_BFu15s, "BFu32ll_BFu0c_BFu15s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu16i()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu16i");
    static BFu32ll_BFu0c_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu0c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32ll_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32ll_BFu0c_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu16i(Test_BFu32ll_BFu0c_BFu16i, "BFu32ll_BFu0c_BFu16i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu16ll()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu16ll");
    static BFu32ll_BFu0c_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu0c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32ll_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32ll_BFu0c_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu16ll(Test_BFu32ll_BFu0c_BFu16ll, "BFu32ll_BFu0c_BFu16ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu16s()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu16s");
    static BFu32ll_BFu0c_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu0c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32ll_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32ll_BFu0c_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu16s(Test_BFu32ll_BFu0c_BFu16s, "BFu32ll_BFu0c_BFu16s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu17i()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu17i");
    static BFu32ll_BFu0c_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(BFu32ll_BFu0c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32ll_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32ll_BFu0c_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu17i(Test_BFu32ll_BFu0c_BFu17i, "BFu32ll_BFu0c_BFu17i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu17ll()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu17ll");
    static BFu32ll_BFu0c_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(BFu32ll_BFu0c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32ll_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32ll_BFu0c_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu17ll(Test_BFu32ll_BFu0c_BFu17ll, "BFu32ll_BFu0c_BFu17ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu1c()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu1c");
    static BFu32ll_BFu0c_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu0c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu1c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu0c_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu1c(Test_BFu32ll_BFu0c_BFu1c, "BFu32ll_BFu0c_BFu1c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu1i()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu1i");
    static BFu32ll_BFu0c_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu0c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu1i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu0c_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu1i(Test_BFu32ll_BFu0c_BFu1i, "BFu32ll_BFu0c_BFu1i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu1ll()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu1ll");
    static BFu32ll_BFu0c_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu0c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu1ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu0c_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu1ll(Test_BFu32ll_BFu0c_BFu1ll, "BFu32ll_BFu0c_BFu1ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu1s()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu1s");
    static BFu32ll_BFu0c_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu0c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu1s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu0c_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu1s(Test_BFu32ll_BFu0c_BFu1s, "BFu32ll_BFu0c_BFu1s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu31i()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu31i");
    static BFu32ll_BFu0c_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu0c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32ll_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32ll_BFu0c_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu31i(Test_BFu32ll_BFu0c_BFu31i, "BFu32ll_BFu0c_BFu31i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu31ll()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu31ll");
    static BFu32ll_BFu0c_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu0c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32ll_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32ll_BFu0c_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu31ll(Test_BFu32ll_BFu0c_BFu31ll, "BFu32ll_BFu0c_BFu31ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu32i()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu32i");
    static BFu32ll_BFu0c_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu0c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32ll_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu32i(Test_BFu32ll_BFu0c_BFu32i, "BFu32ll_BFu0c_BFu32i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu32ll()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu32ll");
    static BFu32ll_BFu0c_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu0c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32ll_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu32ll(Test_BFu32ll_BFu0c_BFu32ll, "BFu32ll_BFu0c_BFu32ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu33()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu33");
    static BFu32ll_BFu0c_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(BFu32ll_BFu0c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "BFu32ll_BFu0c_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "BFu32ll_BFu0c_BFu33");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu33(Test_BFu32ll_BFu0c_BFu33, "BFu32ll_BFu0c_BFu33", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu7c()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu7c");
    static BFu32ll_BFu0c_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu0c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu0c_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu7c(Test_BFu32ll_BFu0c_BFu7c, "BFu32ll_BFu0c_BFu7c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu7i()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu7i");
    static BFu32ll_BFu0c_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu0c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu0c_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu7i(Test_BFu32ll_BFu0c_BFu7i, "BFu32ll_BFu0c_BFu7i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu7ll()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu7ll");
    static BFu32ll_BFu0c_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu0c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu0c_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu7ll(Test_BFu32ll_BFu0c_BFu7ll, "BFu32ll_BFu0c_BFu7ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu7s()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu7s");
    static BFu32ll_BFu0c_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu0c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu0c_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu7s(Test_BFu32ll_BFu0c_BFu7s, "BFu32ll_BFu0c_BFu7s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu8c()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu8c");
    static BFu32ll_BFu0c_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu0c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu0c_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu8c(Test_BFu32ll_BFu0c_BFu8c, "BFu32ll_BFu0c_BFu8c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu8i()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu8i");
    static BFu32ll_BFu0c_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu0c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu0c_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu8i(Test_BFu32ll_BFu0c_BFu8i, "BFu32ll_BFu0c_BFu8i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu8ll()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu8ll");
    static BFu32ll_BFu0c_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu0c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu0c_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu8ll(Test_BFu32ll_BFu0c_BFu8ll, "BFu32ll_BFu0c_BFu8ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu8s()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu8s");
    static BFu32ll_BFu0c_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu0c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu0c_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu8s(Test_BFu32ll_BFu0c_BFu8s, "BFu32ll_BFu0c_BFu8s", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu9i()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu9i");
    static BFu32ll_BFu0c_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu0c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32ll_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32ll_BFu0c_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu9i(Test_BFu32ll_BFu0c_BFu9i, "BFu32ll_BFu0c_BFu9i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu9ll()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu9ll");
    static BFu32ll_BFu0c_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu0c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32ll_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32ll_BFu0c_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu9ll(Test_BFu32ll_BFu0c_BFu9ll, "BFu32ll_BFu0c_BFu9ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_BFu9s()
{
  {
    init_simple_test("BFu32ll_BFu0c_BFu9s");
    static BFu32ll_BFu0c_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu0c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32ll_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32ll_BFu0c_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_BFu9s(Test_BFu32ll_BFu0c_BFu9s, "BFu32ll_BFu0c_BFu9s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_C()
{
  {
    init_simple_test("BFu32ll_BFu0c_C");
    static BFu32ll_BFu0c_C lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu0c_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_C)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_C");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_C");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0c_C.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_C(Test_BFu32ll_BFu0c_C, "BFu32ll_BFu0c_C", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_D()
{
  {
    init_simple_test("BFu32ll_BFu0c_D");
    static BFu32ll_BFu0c_D lv;
    check2(sizeof(lv), 12, "sizeof(BFu32ll_BFu0c_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_D)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_D");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_D");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0c_D.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_D(Test_BFu32ll_BFu0c_D, "BFu32ll_BFu0c_D", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_F()
{
  {
    init_simple_test("BFu32ll_BFu0c_F");
    static BFu32ll_BFu0c_F lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu0c_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_F)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_F");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_F");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0c_F.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_F(Test_BFu32ll_BFu0c_F, "BFu32ll_BFu0c_F", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_I()
{
  {
    init_simple_test("BFu32ll_BFu0c_I");
    static BFu32ll_BFu0c_I lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu0c_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_I)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_I");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_I");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0c_I.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_I(Test_BFu32ll_BFu0c_I, "BFu32ll_BFu0c_I", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_Ip()
{
  {
    init_simple_test("BFu32ll_BFu0c_Ip");
    static BFu32ll_BFu0c_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32ll_BFu0c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_Ip");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_Ip");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0c_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_Ip(Test_BFu32ll_BFu0c_Ip, "BFu32ll_BFu0c_Ip", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_L()
{
  {
    init_simple_test("BFu32ll_BFu0c_L");
    static BFu32ll_BFu0c_L lv;
    check2(sizeof(lv), 12, "sizeof(BFu32ll_BFu0c_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_L)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_L");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_L");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0c_L.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_L(Test_BFu32ll_BFu0c_L, "BFu32ll_BFu0c_L", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_S()
{
  {
    init_simple_test("BFu32ll_BFu0c_S");
    static BFu32ll_BFu0c_S lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu0c_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_S)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_S");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_S");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0c_S.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_S(Test_BFu32ll_BFu0c_S, "BFu32ll_BFu0c_S", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_Uc()
{
  {
    init_simple_test("BFu32ll_BFu0c_Uc");
    static BFu32ll_BFu0c_Uc lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu0c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_Uc");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_Uc");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0c_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_Uc(Test_BFu32ll_BFu0c_Uc, "BFu32ll_BFu0c_Uc", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_Ui()
{
  {
    init_simple_test("BFu32ll_BFu0c_Ui");
    static BFu32ll_BFu0c_Ui lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu0c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_Ui");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_Ui");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0c_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_Ui(Test_BFu32ll_BFu0c_Ui, "BFu32ll_BFu0c_Ui", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_Ul()
{
  {
    init_simple_test("BFu32ll_BFu0c_Ul");
    static BFu32ll_BFu0c_Ul lv;
    check2(sizeof(lv), 12, "sizeof(BFu32ll_BFu0c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_Ul");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_Ul");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0c_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_Ul(Test_BFu32ll_BFu0c_Ul, "BFu32ll_BFu0c_Ul", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_Us()
{
  {
    init_simple_test("BFu32ll_BFu0c_Us");
    static BFu32ll_BFu0c_Us lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu0c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_Us)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_Us");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_Us");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0c_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_Us(Test_BFu32ll_BFu0c_Us, "BFu32ll_BFu0c_Us", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0c_Vp()
{
  {
    init_simple_test("BFu32ll_BFu0c_Vp");
    static BFu32ll_BFu0c_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32ll_BFu0c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu0c_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0c_Vp");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0c_Vp");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0c_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0c_Vp(Test_BFu32ll_BFu0c_Vp, "BFu32ll_BFu0c_Vp", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu0i");
    static BFu32ll_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu32ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i(Test_BFu32ll_BFu0i, "BFu32ll_BFu0i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu0c");
    static BFu32ll_BFu0i_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu32ll_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu0c(Test_BFu32ll_BFu0i_BFu0c, "BFu32ll_BFu0i_BFu0c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu0i");
    static BFu32ll_BFu0i_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu32ll_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu0i(Test_BFu32ll_BFu0i_BFu0i, "BFu32ll_BFu0i_BFu0i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu0ll");
    static BFu32ll_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu32ll_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu0ll(Test_BFu32ll_BFu0i_BFu0ll, "BFu32ll_BFu0i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu0s");
    static BFu32ll_BFu0i_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu32ll_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu0s(Test_BFu32ll_BFu0i_BFu0s, "BFu32ll_BFu0i_BFu0s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu15i()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu15i");
    static BFu32ll_BFu0i_BFu15i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32ll_BFu0i_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32ll_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32ll_BFu0i_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu15i(Test_BFu32ll_BFu0i_BFu15i, "BFu32ll_BFu0i_BFu15i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu15ll()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu15ll");
    static BFu32ll_BFu0i_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32ll_BFu0i_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32ll_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32ll_BFu0i_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu15ll(Test_BFu32ll_BFu0i_BFu15ll, "BFu32ll_BFu0i_BFu15ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu15s()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu15s");
    static BFu32ll_BFu0i_BFu15s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32ll_BFu0i_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32ll_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32ll_BFu0i_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu15s(Test_BFu32ll_BFu0i_BFu15s, "BFu32ll_BFu0i_BFu15s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu16i()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu16i");
    static BFu32ll_BFu0i_BFu16i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32ll_BFu0i_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32ll_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32ll_BFu0i_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu16i(Test_BFu32ll_BFu0i_BFu16i, "BFu32ll_BFu0i_BFu16i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu16ll()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu16ll");
    static BFu32ll_BFu0i_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32ll_BFu0i_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32ll_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32ll_BFu0i_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu16ll(Test_BFu32ll_BFu0i_BFu16ll, "BFu32ll_BFu0i_BFu16ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu16s()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu16s");
    static BFu32ll_BFu0i_BFu16s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32ll_BFu0i_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32ll_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32ll_BFu0i_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu16s(Test_BFu32ll_BFu0i_BFu16s, "BFu32ll_BFu0i_BFu16s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu17i()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu17i");
    static BFu32ll_BFu0i_BFu17i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu32ll_BFu0i_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32ll_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32ll_BFu0i_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu17i(Test_BFu32ll_BFu0i_BFu17i, "BFu32ll_BFu0i_BFu17i", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu17ll()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu17ll");
    static BFu32ll_BFu0i_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu32ll_BFu0i_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32ll_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32ll_BFu0i_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu17ll(Test_BFu32ll_BFu0i_BFu17ll, "BFu32ll_BFu0i_BFu17ll", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu1c()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu1c");
    static BFu32ll_BFu0i_BFu1c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32ll_BFu0i_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu1c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu0i_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu1c(Test_BFu32ll_BFu0i_BFu1c, "BFu32ll_BFu0i_BFu1c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu1i()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu1i");
    static BFu32ll_BFu0i_BFu1i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32ll_BFu0i_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu1i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu0i_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu1i(Test_BFu32ll_BFu0i_BFu1i, "BFu32ll_BFu0i_BFu1i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu1ll()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu1ll");
    static BFu32ll_BFu0i_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32ll_BFu0i_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu1ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu0i_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu1ll(Test_BFu32ll_BFu0i_BFu1ll, "BFu32ll_BFu0i_BFu1ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu1s()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu1s");
    static BFu32ll_BFu0i_BFu1s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32ll_BFu0i_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu1s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu0i_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu1s(Test_BFu32ll_BFu0i_BFu1s, "BFu32ll_BFu0i_BFu1s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu31i()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu31i");
    static BFu32ll_BFu0i_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu0i_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32ll_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32ll_BFu0i_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu31i(Test_BFu32ll_BFu0i_BFu31i, "BFu32ll_BFu0i_BFu31i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu31ll()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu31ll");
    static BFu32ll_BFu0i_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu0i_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32ll_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32ll_BFu0i_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu31ll(Test_BFu32ll_BFu0i_BFu31ll, "BFu32ll_BFu0i_BFu31ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu32i()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu32i");
    static BFu32ll_BFu0i_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu0i_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32ll_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu32i(Test_BFu32ll_BFu0i_BFu32i, "BFu32ll_BFu0i_BFu32i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu32ll()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu32ll");
    static BFu32ll_BFu0i_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu0i_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32ll_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu32ll(Test_BFu32ll_BFu0i_BFu32ll, "BFu32ll_BFu0i_BFu32ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu33()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu33");
    static BFu32ll_BFu0i_BFu33 lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu32ll_BFu0i_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "BFu32ll_BFu0i_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "BFu32ll_BFu0i_BFu33");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu33(Test_BFu32ll_BFu0i_BFu33, "BFu32ll_BFu0i_BFu33", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu7c()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu7c");
    static BFu32ll_BFu0i_BFu7c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32ll_BFu0i_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu0i_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu7c(Test_BFu32ll_BFu0i_BFu7c, "BFu32ll_BFu0i_BFu7c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu7i()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu7i");
    static BFu32ll_BFu0i_BFu7i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32ll_BFu0i_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu0i_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu7i(Test_BFu32ll_BFu0i_BFu7i, "BFu32ll_BFu0i_BFu7i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu7ll()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu7ll");
    static BFu32ll_BFu0i_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32ll_BFu0i_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu0i_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu7ll(Test_BFu32ll_BFu0i_BFu7ll, "BFu32ll_BFu0i_BFu7ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu7s()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu7s");
    static BFu32ll_BFu0i_BFu7s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32ll_BFu0i_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu0i_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu7s(Test_BFu32ll_BFu0i_BFu7s, "BFu32ll_BFu0i_BFu7s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu8c()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu8c");
    static BFu32ll_BFu0i_BFu8c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32ll_BFu0i_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu0i_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu8c(Test_BFu32ll_BFu0i_BFu8c, "BFu32ll_BFu0i_BFu8c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu8i()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu8i");
    static BFu32ll_BFu0i_BFu8i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32ll_BFu0i_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu0i_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu8i(Test_BFu32ll_BFu0i_BFu8i, "BFu32ll_BFu0i_BFu8i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu8ll()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu8ll");
    static BFu32ll_BFu0i_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32ll_BFu0i_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu0i_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu8ll(Test_BFu32ll_BFu0i_BFu8ll, "BFu32ll_BFu0i_BFu8ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu8s()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu8s");
    static BFu32ll_BFu0i_BFu8s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32ll_BFu0i_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu0i_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu8s(Test_BFu32ll_BFu0i_BFu8s, "BFu32ll_BFu0i_BFu8s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu9i()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu9i");
    static BFu32ll_BFu0i_BFu9i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32ll_BFu0i_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32ll_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32ll_BFu0i_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu9i(Test_BFu32ll_BFu0i_BFu9i, "BFu32ll_BFu0i_BFu9i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu9ll()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu9ll");
    static BFu32ll_BFu0i_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32ll_BFu0i_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32ll_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32ll_BFu0i_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu9ll(Test_BFu32ll_BFu0i_BFu9ll, "BFu32ll_BFu0i_BFu9ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_BFu9s()
{
  {
    init_simple_test("BFu32ll_BFu0i_BFu9s");
    static BFu32ll_BFu0i_BFu9s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32ll_BFu0i_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32ll_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32ll_BFu0i_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_BFu9s(Test_BFu32ll_BFu0i_BFu9s, "BFu32ll_BFu0i_BFu9s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_C()
{
  {
    init_simple_test("BFu32ll_BFu0i_C");
    static BFu32ll_BFu0i_C lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32ll_BFu0i_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_C)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_C");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_C");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0i_C.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_C(Test_BFu32ll_BFu0i_C, "BFu32ll_BFu0i_C", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_D()
{
  {
    init_simple_test("BFu32ll_BFu0i_D");
    static BFu32ll_BFu0i_D lv;
    check2(sizeof(lv), 12, "sizeof(BFu32ll_BFu0i_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_D)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_D");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_D");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0i_D.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_D(Test_BFu32ll_BFu0i_D, "BFu32ll_BFu0i_D", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_F()
{
  {
    init_simple_test("BFu32ll_BFu0i_F");
    static BFu32ll_BFu0i_F lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu0i_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_F)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_F");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_F");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0i_F.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_F(Test_BFu32ll_BFu0i_F, "BFu32ll_BFu0i_F", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_I()
{
  {
    init_simple_test("BFu32ll_BFu0i_I");
    static BFu32ll_BFu0i_I lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu0i_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_I)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_I");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_I");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0i_I.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_I(Test_BFu32ll_BFu0i_I, "BFu32ll_BFu0i_I", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_Ip()
{
  {
    init_simple_test("BFu32ll_BFu0i_Ip");
    static BFu32ll_BFu0i_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32ll_BFu0i_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_Ip");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_Ip");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0i_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_Ip(Test_BFu32ll_BFu0i_Ip, "BFu32ll_BFu0i_Ip", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_L()
{
  {
    init_simple_test("BFu32ll_BFu0i_L");
    static BFu32ll_BFu0i_L lv;
    check2(sizeof(lv), 12, "sizeof(BFu32ll_BFu0i_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_L)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_L");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_L");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0i_L.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_L(Test_BFu32ll_BFu0i_L, "BFu32ll_BFu0i_L", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_S()
{
  {
    init_simple_test("BFu32ll_BFu0i_S");
    static BFu32ll_BFu0i_S lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32ll_BFu0i_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_S)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_S");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_S");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0i_S.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_S(Test_BFu32ll_BFu0i_S, "BFu32ll_BFu0i_S", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_Uc()
{
  {
    init_simple_test("BFu32ll_BFu0i_Uc");
    static BFu32ll_BFu0i_Uc lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32ll_BFu0i_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_Uc");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_Uc");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0i_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_Uc(Test_BFu32ll_BFu0i_Uc, "BFu32ll_BFu0i_Uc", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_Ui()
{
  {
    init_simple_test("BFu32ll_BFu0i_Ui");
    static BFu32ll_BFu0i_Ui lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu0i_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_Ui");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_Ui");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0i_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_Ui(Test_BFu32ll_BFu0i_Ui, "BFu32ll_BFu0i_Ui", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_Ul()
{
  {
    init_simple_test("BFu32ll_BFu0i_Ul");
    static BFu32ll_BFu0i_Ul lv;
    check2(sizeof(lv), 12, "sizeof(BFu32ll_BFu0i_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_Ul");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_Ul");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0i_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_Ul(Test_BFu32ll_BFu0i_Ul, "BFu32ll_BFu0i_Ul", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_Us()
{
  {
    init_simple_test("BFu32ll_BFu0i_Us");
    static BFu32ll_BFu0i_Us lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32ll_BFu0i_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_Us)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_Us");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_Us");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0i_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_Us(Test_BFu32ll_BFu0i_Us, "BFu32ll_BFu0i_Us", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0i_Vp()
{
  {
    init_simple_test("BFu32ll_BFu0i_Vp");
    static BFu32ll_BFu0i_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32ll_BFu0i_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0i_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0i_Vp");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0i_Vp");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0i_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0i_Vp(Test_BFu32ll_BFu0i_Vp, "BFu32ll_BFu0i_Vp", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu0ll");
    static BFu32ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu32ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll(Test_BFu32ll_BFu0ll, "BFu32ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu0c");
    static BFu32ll_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu32ll_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu0c(Test_BFu32ll_BFu0ll_BFu0c, "BFu32ll_BFu0ll_BFu0c", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu0i");
    static BFu32ll_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu32ll_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu0i(Test_BFu32ll_BFu0ll_BFu0i, "BFu32ll_BFu0ll_BFu0i", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu0ll");
    static BFu32ll_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu32ll_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu0ll(Test_BFu32ll_BFu0ll_BFu0ll, "BFu32ll_BFu0ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu0s");
    static BFu32ll_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu32ll_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu0s(Test_BFu32ll_BFu0ll_BFu0s, "BFu32ll_BFu0ll_BFu0s", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu15i()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu15i");
    static BFu32ll_BFu0ll_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu32ll_BFu0ll_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "BFu32ll_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "BFu32ll_BFu0ll_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu15i(Test_BFu32ll_BFu0ll_BFu15i, "BFu32ll_BFu0ll_BFu15i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu15ll()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu15ll");
    static BFu32ll_BFu0ll_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu32ll_BFu0ll_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "BFu32ll_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "BFu32ll_BFu0ll_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu15ll(Test_BFu32ll_BFu0ll_BFu15ll, "BFu32ll_BFu0ll_BFu15ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu15s()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu15s");
    static BFu32ll_BFu0ll_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu32ll_BFu0ll_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "BFu32ll_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "BFu32ll_BFu0ll_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu15s(Test_BFu32ll_BFu0ll_BFu15s, "BFu32ll_BFu0ll_BFu15s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu16i()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu16i");
    static BFu32ll_BFu0ll_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu32ll_BFu0ll_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "BFu32ll_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "BFu32ll_BFu0ll_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu16i(Test_BFu32ll_BFu0ll_BFu16i, "BFu32ll_BFu0ll_BFu16i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu16ll()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu16ll");
    static BFu32ll_BFu0ll_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu32ll_BFu0ll_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "BFu32ll_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "BFu32ll_BFu0ll_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu16ll(Test_BFu32ll_BFu0ll_BFu16ll, "BFu32ll_BFu0ll_BFu16ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu16s()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu16s");
    static BFu32ll_BFu0ll_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu32ll_BFu0ll_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "BFu32ll_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "BFu32ll_BFu0ll_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu16s(Test_BFu32ll_BFu0ll_BFu16s, "BFu32ll_BFu0ll_BFu16s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu17i()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu17i");
    static BFu32ll_BFu0ll_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu32ll_BFu0ll_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "BFu32ll_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "BFu32ll_BFu0ll_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu17i(Test_BFu32ll_BFu0ll_BFu17i, "BFu32ll_BFu0ll_BFu17i", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu17ll()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu17ll");
    static BFu32ll_BFu0ll_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu32ll_BFu0ll_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "BFu32ll_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "BFu32ll_BFu0ll_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu17ll(Test_BFu32ll_BFu0ll_BFu17ll, "BFu32ll_BFu0ll_BFu17ll", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu1c()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu1c");
    static BFu32ll_BFu0ll_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu32ll_BFu0ll_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu32ll_BFu0ll_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu1c(Test_BFu32ll_BFu0ll_BFu1c, "BFu32ll_BFu0ll_BFu1c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu1i()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu1i");
    static BFu32ll_BFu0ll_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu32ll_BFu0ll_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu32ll_BFu0ll_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu1i(Test_BFu32ll_BFu0ll_BFu1i, "BFu32ll_BFu0ll_BFu1i", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu1ll()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu1ll");
    static BFu32ll_BFu0ll_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu32ll_BFu0ll_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu32ll_BFu0ll_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu1ll(Test_BFu32ll_BFu0ll_BFu1ll, "BFu32ll_BFu0ll_BFu1ll", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu1s()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu1s");
    static BFu32ll_BFu0ll_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu32ll_BFu0ll_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu32ll_BFu0ll_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu1s(Test_BFu32ll_BFu0ll_BFu1s, "BFu32ll_BFu0ll_BFu1s", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu31i()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu31i");
    static BFu32ll_BFu0ll_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32ll_BFu0ll_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "BFu32ll_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "BFu32ll_BFu0ll_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu31i(Test_BFu32ll_BFu0ll_BFu31i, "BFu32ll_BFu0ll_BFu31i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu31ll()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu31ll");
    static BFu32ll_BFu0ll_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32ll_BFu0ll_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "BFu32ll_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "BFu32ll_BFu0ll_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu31ll(Test_BFu32ll_BFu0ll_BFu31ll, "BFu32ll_BFu0ll_BFu31ll", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu32i()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu32i");
    static BFu32ll_BFu0ll_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32ll_BFu0ll_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "BFu32ll_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu32i(Test_BFu32ll_BFu0ll_BFu32i, "BFu32ll_BFu0ll_BFu32i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu32ll()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu32ll");
    static BFu32ll_BFu0ll_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32ll_BFu0ll_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "BFu32ll_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu32ll(Test_BFu32ll_BFu0ll_BFu32ll, "BFu32ll_BFu0ll_BFu32ll", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu33()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu33");
    static BFu32ll_BFu0ll_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(BFu32ll_BFu0ll_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, 1, "BFu32ll_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, hide_ull(1LL<<32), "BFu32ll_BFu0ll_BFu33");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu33(Test_BFu32ll_BFu0ll_BFu33, "BFu32ll_BFu0ll_BFu33", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu7c()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu7c");
    static BFu32ll_BFu0ll_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu32ll_BFu0ll_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu32ll_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu0ll_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu7c(Test_BFu32ll_BFu0ll_BFu7c, "BFu32ll_BFu0ll_BFu7c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu7i()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu7i");
    static BFu32ll_BFu0ll_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu32ll_BFu0ll_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu32ll_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu0ll_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu7i(Test_BFu32ll_BFu0ll_BFu7i, "BFu32ll_BFu0ll_BFu7i", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu7ll()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu7ll");
    static BFu32ll_BFu0ll_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu32ll_BFu0ll_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu32ll_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu0ll_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu7ll(Test_BFu32ll_BFu0ll_BFu7ll, "BFu32ll_BFu0ll_BFu7ll", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu7s()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu7s");
    static BFu32ll_BFu0ll_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu32ll_BFu0ll_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu32ll_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu0ll_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu7s(Test_BFu32ll_BFu0ll_BFu7s, "BFu32ll_BFu0ll_BFu7s", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu8c()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu8c");
    static BFu32ll_BFu0ll_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu32ll_BFu0ll_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu32ll_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu0ll_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu8c(Test_BFu32ll_BFu0ll_BFu8c, "BFu32ll_BFu0ll_BFu8c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu8i()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu8i");
    static BFu32ll_BFu0ll_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu32ll_BFu0ll_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu32ll_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu0ll_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu8i(Test_BFu32ll_BFu0ll_BFu8i, "BFu32ll_BFu0ll_BFu8i", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu8ll()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu8ll");
    static BFu32ll_BFu0ll_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu32ll_BFu0ll_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu32ll_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu0ll_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu8ll(Test_BFu32ll_BFu0ll_BFu8ll, "BFu32ll_BFu0ll_BFu8ll", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu8s()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu8s");
    static BFu32ll_BFu0ll_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu32ll_BFu0ll_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu32ll_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu0ll_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu8s(Test_BFu32ll_BFu0ll_BFu8s, "BFu32ll_BFu0ll_BFu8s", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu9i()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu9i");
    static BFu32ll_BFu0ll_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu32ll_BFu0ll_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "BFu32ll_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "BFu32ll_BFu0ll_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu9i(Test_BFu32ll_BFu0ll_BFu9i, "BFu32ll_BFu0ll_BFu9i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu9ll()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu9ll");
    static BFu32ll_BFu0ll_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu32ll_BFu0ll_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "BFu32ll_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "BFu32ll_BFu0ll_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu9ll(Test_BFu32ll_BFu0ll_BFu9ll, "BFu32ll_BFu0ll_BFu9ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_BFu9s()
{
  {
    init_simple_test("BFu32ll_BFu0ll_BFu9s");
    static BFu32ll_BFu0ll_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu32ll_BFu0ll_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "BFu32ll_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "BFu32ll_BFu0ll_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_BFu9s(Test_BFu32ll_BFu0ll_BFu9s, "BFu32ll_BFu0ll_BFu9s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_C()
{
  {
    init_simple_test("BFu32ll_BFu0ll_C");
    static BFu32ll_BFu0ll_C lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu32ll_BFu0ll_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_C)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_C");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_C");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu32ll_BFu0ll_C.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_C(Test_BFu32ll_BFu0ll_C, "BFu32ll_BFu0ll_C", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_D()
{
  {
    init_simple_test("BFu32ll_BFu0ll_D");
    static BFu32ll_BFu0ll_D lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu32ll_BFu0ll_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_D)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_D");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_D");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu32ll_BFu0ll_D.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_D(Test_BFu32ll_BFu0ll_D, "BFu32ll_BFu0ll_D", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_F()
{
  {
    init_simple_test("BFu32ll_BFu0ll_F");
    static BFu32ll_BFu0ll_F lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32ll_BFu0ll_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_F)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_F");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_F");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu32ll_BFu0ll_F.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_F(Test_BFu32ll_BFu0ll_F, "BFu32ll_BFu0ll_F", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_I()
{
  {
    init_simple_test("BFu32ll_BFu0ll_I");
    static BFu32ll_BFu0ll_I lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32ll_BFu0ll_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_I)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_I");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_I");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu32ll_BFu0ll_I.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_I(Test_BFu32ll_BFu0ll_I, "BFu32ll_BFu0ll_I", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_Ip()
{
  {
    init_simple_test("BFu32ll_BFu0ll_Ip");
    static BFu32ll_BFu0ll_Ip lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu32ll_BFu0ll_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_Ip");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_Ip");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu32ll_BFu0ll_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_Ip(Test_BFu32ll_BFu0ll_Ip, "BFu32ll_BFu0ll_Ip", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_L()
{
  {
    init_simple_test("BFu32ll_BFu0ll_L");
    static BFu32ll_BFu0ll_L lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu32ll_BFu0ll_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_L)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_L");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_L");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu32ll_BFu0ll_L.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_L(Test_BFu32ll_BFu0ll_L, "BFu32ll_BFu0ll_L", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_S()
{
  {
    init_simple_test("BFu32ll_BFu0ll_S");
    static BFu32ll_BFu0ll_S lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu32ll_BFu0ll_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_S)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_S");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_S");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu32ll_BFu0ll_S.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_S(Test_BFu32ll_BFu0ll_S, "BFu32ll_BFu0ll_S", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_Uc()
{
  {
    init_simple_test("BFu32ll_BFu0ll_Uc");
    static BFu32ll_BFu0ll_Uc lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu32ll_BFu0ll_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_Uc");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_Uc");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu32ll_BFu0ll_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_Uc(Test_BFu32ll_BFu0ll_Uc, "BFu32ll_BFu0ll_Uc", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_Ui()
{
  {
    init_simple_test("BFu32ll_BFu0ll_Ui");
    static BFu32ll_BFu0ll_Ui lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32ll_BFu0ll_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_Ui");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_Ui");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu32ll_BFu0ll_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_Ui(Test_BFu32ll_BFu0ll_Ui, "BFu32ll_BFu0ll_Ui", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_Ul()
{
  {
    init_simple_test("BFu32ll_BFu0ll_Ul");
    static BFu32ll_BFu0ll_Ul lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu32ll_BFu0ll_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_Ul");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_Ul");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu32ll_BFu0ll_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_Ul(Test_BFu32ll_BFu0ll_Ul, "BFu32ll_BFu0ll_Ul", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_Us()
{
  {
    init_simple_test("BFu32ll_BFu0ll_Us");
    static BFu32ll_BFu0ll_Us lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu32ll_BFu0ll_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_Us)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_Us");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_Us");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu32ll_BFu0ll_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_Us(Test_BFu32ll_BFu0ll_Us, "BFu32ll_BFu0ll_Us", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0ll_Vp()
{
  {
    init_simple_test("BFu32ll_BFu0ll_Vp");
    static BFu32ll_BFu0ll_Vp lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu32ll_BFu0ll_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0ll_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0ll_Vp");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0ll_Vp");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu32ll_BFu0ll_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0ll_Vp(Test_BFu32ll_BFu0ll_Vp, "BFu32ll_BFu0ll_Vp", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu0s");
    static BFu32ll_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu32ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s(Test_BFu32ll_BFu0s, "BFu32ll_BFu0s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu0c");
    static BFu32ll_BFu0s_BFu0c lv;
    check2(sizeof(lv), 4, "sizeof(BFu32ll_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu0c(Test_BFu32ll_BFu0s_BFu0c, "BFu32ll_BFu0s_BFu0c", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu0i");
    static BFu32ll_BFu0s_BFu0i lv;
    check2(sizeof(lv), 4, "sizeof(BFu32ll_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu0i(Test_BFu32ll_BFu0s_BFu0i, "BFu32ll_BFu0s_BFu0i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu0ll");
    static BFu32ll_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu32ll_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu0ll(Test_BFu32ll_BFu0s_BFu0ll, "BFu32ll_BFu0s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu0s");
    static BFu32ll_BFu0s_BFu0s lv;
    check2(sizeof(lv), 4, "sizeof(BFu32ll_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu0s(Test_BFu32ll_BFu0s_BFu0s, "BFu32ll_BFu0s_BFu0s", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu15i()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu15i");
    static BFu32ll_BFu0s_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu0s_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32ll_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32ll_BFu0s_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu15i(Test_BFu32ll_BFu0s_BFu15i, "BFu32ll_BFu0s_BFu15i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu15ll()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu15ll");
    static BFu32ll_BFu0s_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu0s_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32ll_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32ll_BFu0s_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu15ll(Test_BFu32ll_BFu0s_BFu15ll, "BFu32ll_BFu0s_BFu15ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu15s()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu15s");
    static BFu32ll_BFu0s_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu0s_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32ll_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32ll_BFu0s_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu15s(Test_BFu32ll_BFu0s_BFu15s, "BFu32ll_BFu0s_BFu15s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu16i()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu16i");
    static BFu32ll_BFu0s_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu0s_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32ll_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32ll_BFu0s_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu16i(Test_BFu32ll_BFu0s_BFu16i, "BFu32ll_BFu0s_BFu16i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu16ll()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu16ll");
    static BFu32ll_BFu0s_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu0s_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32ll_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32ll_BFu0s_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu16ll(Test_BFu32ll_BFu0s_BFu16ll, "BFu32ll_BFu0s_BFu16ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu16s()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu16s");
    static BFu32ll_BFu0s_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu0s_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32ll_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32ll_BFu0s_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu16s(Test_BFu32ll_BFu0s_BFu16s, "BFu32ll_BFu0s_BFu16s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu17i()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu17i");
    static BFu32ll_BFu0s_BFu17i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu32ll_BFu0s_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32ll_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32ll_BFu0s_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu17i(Test_BFu32ll_BFu0s_BFu17i, "BFu32ll_BFu0s_BFu17i", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu17ll()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu17ll");
    static BFu32ll_BFu0s_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu32ll_BFu0s_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32ll_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32ll_BFu0s_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu17ll(Test_BFu32ll_BFu0s_BFu17ll, "BFu32ll_BFu0s_BFu17ll", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu1c()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu1c");
    static BFu32ll_BFu0s_BFu1c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32ll_BFu0s_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu1c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu0s_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu1c(Test_BFu32ll_BFu0s_BFu1c, "BFu32ll_BFu0s_BFu1c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu1i()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu1i");
    static BFu32ll_BFu0s_BFu1i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32ll_BFu0s_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu1i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu0s_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu1i(Test_BFu32ll_BFu0s_BFu1i, "BFu32ll_BFu0s_BFu1i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu1ll()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu1ll");
    static BFu32ll_BFu0s_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32ll_BFu0s_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu1ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu0s_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu1ll(Test_BFu32ll_BFu0s_BFu1ll, "BFu32ll_BFu0s_BFu1ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu1s()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu1s");
    static BFu32ll_BFu0s_BFu1s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32ll_BFu0s_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu1s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu0s_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu1s(Test_BFu32ll_BFu0s_BFu1s, "BFu32ll_BFu0s_BFu1s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu31i()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu31i");
    static BFu32ll_BFu0s_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu0s_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32ll_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32ll_BFu0s_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu31i(Test_BFu32ll_BFu0s_BFu31i, "BFu32ll_BFu0s_BFu31i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu31ll()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu31ll");
    static BFu32ll_BFu0s_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu0s_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32ll_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32ll_BFu0s_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu31ll(Test_BFu32ll_BFu0s_BFu31ll, "BFu32ll_BFu0s_BFu31ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu32i()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu32i");
    static BFu32ll_BFu0s_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu0s_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32ll_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu32i(Test_BFu32ll_BFu0s_BFu32i, "BFu32ll_BFu0s_BFu32i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu32ll()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu32ll");
    static BFu32ll_BFu0s_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu0s_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32ll_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu32ll(Test_BFu32ll_BFu0s_BFu32ll, "BFu32ll_BFu0s_BFu32ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu33()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu33");
    static BFu32ll_BFu0s_BFu33 lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu32ll_BFu0s_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "BFu32ll_BFu0s_BFu33");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "BFu32ll_BFu0s_BFu33");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu33(Test_BFu32ll_BFu0s_BFu33, "BFu32ll_BFu0s_BFu33", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu7c()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu7c");
    static BFu32ll_BFu0s_BFu7c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32ll_BFu0s_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu0s_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu7c(Test_BFu32ll_BFu0s_BFu7c, "BFu32ll_BFu0s_BFu7c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu7i()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu7i");
    static BFu32ll_BFu0s_BFu7i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32ll_BFu0s_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu0s_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu7i(Test_BFu32ll_BFu0s_BFu7i, "BFu32ll_BFu0s_BFu7i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu7ll()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu7ll");
    static BFu32ll_BFu0s_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32ll_BFu0s_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu0s_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu7ll(Test_BFu32ll_BFu0s_BFu7ll, "BFu32ll_BFu0s_BFu7ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu7s()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu7s");
    static BFu32ll_BFu0s_BFu7s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32ll_BFu0s_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu0s_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu7s(Test_BFu32ll_BFu0s_BFu7s, "BFu32ll_BFu0s_BFu7s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu8c()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu8c");
    static BFu32ll_BFu0s_BFu8c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32ll_BFu0s_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu0s_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu8c(Test_BFu32ll_BFu0s_BFu8c, "BFu32ll_BFu0s_BFu8c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu8i()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu8i");
    static BFu32ll_BFu0s_BFu8i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32ll_BFu0s_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu0s_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu8i(Test_BFu32ll_BFu0s_BFu8i, "BFu32ll_BFu0s_BFu8i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu8ll()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu8ll");
    static BFu32ll_BFu0s_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32ll_BFu0s_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu0s_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu8ll(Test_BFu32ll_BFu0s_BFu8ll, "BFu32ll_BFu0s_BFu8ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu8s()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu8s");
    static BFu32ll_BFu0s_BFu8s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32ll_BFu0s_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu0s_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu8s(Test_BFu32ll_BFu0s_BFu8s, "BFu32ll_BFu0s_BFu8s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu9i()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu9i");
    static BFu32ll_BFu0s_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu0s_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32ll_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32ll_BFu0s_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu9i(Test_BFu32ll_BFu0s_BFu9i, "BFu32ll_BFu0s_BFu9i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu9ll()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu9ll");
    static BFu32ll_BFu0s_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu0s_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32ll_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32ll_BFu0s_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu9ll(Test_BFu32ll_BFu0s_BFu9ll, "BFu32ll_BFu0s_BFu9ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_BFu9s()
{
  {
    init_simple_test("BFu32ll_BFu0s_BFu9s");
    static BFu32ll_BFu0s_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu0s_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32ll_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32ll_BFu0s_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_BFu9s(Test_BFu32ll_BFu0s_BFu9s, "BFu32ll_BFu0s_BFu9s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_C()
{
  {
    init_simple_test("BFu32ll_BFu0s_C");
    static BFu32ll_BFu0s_C lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32ll_BFu0s_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_C)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_C");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_C");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0s_C.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_C(Test_BFu32ll_BFu0s_C, "BFu32ll_BFu0s_C", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_D()
{
  {
    init_simple_test("BFu32ll_BFu0s_D");
    static BFu32ll_BFu0s_D lv;
    check2(sizeof(lv), 12, "sizeof(BFu32ll_BFu0s_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_D)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_D");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_D");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0s_D.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_D(Test_BFu32ll_BFu0s_D, "BFu32ll_BFu0s_D", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_F()
{
  {
    init_simple_test("BFu32ll_BFu0s_F");
    static BFu32ll_BFu0s_F lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu0s_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_F)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_F");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_F");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0s_F.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_F(Test_BFu32ll_BFu0s_F, "BFu32ll_BFu0s_F", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_I()
{
  {
    init_simple_test("BFu32ll_BFu0s_I");
    static BFu32ll_BFu0s_I lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu0s_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_I)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_I");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_I");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0s_I.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_I(Test_BFu32ll_BFu0s_I, "BFu32ll_BFu0s_I", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_Ip()
{
  {
    init_simple_test("BFu32ll_BFu0s_Ip");
    static BFu32ll_BFu0s_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32ll_BFu0s_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_Ip");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_Ip");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0s_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_Ip(Test_BFu32ll_BFu0s_Ip, "BFu32ll_BFu0s_Ip", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_L()
{
  {
    init_simple_test("BFu32ll_BFu0s_L");
    static BFu32ll_BFu0s_L lv;
    check2(sizeof(lv), 12, "sizeof(BFu32ll_BFu0s_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_L)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_L");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_L");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0s_L.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_L(Test_BFu32ll_BFu0s_L, "BFu32ll_BFu0s_L", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_S()
{
  {
    init_simple_test("BFu32ll_BFu0s_S");
    static BFu32ll_BFu0s_S lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu0s_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_S)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_S");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_S");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0s_S.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_S(Test_BFu32ll_BFu0s_S, "BFu32ll_BFu0s_S", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_Uc()
{
  {
    init_simple_test("BFu32ll_BFu0s_Uc");
    static BFu32ll_BFu0s_Uc lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu32ll_BFu0s_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_Uc");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_Uc");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0s_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_Uc(Test_BFu32ll_BFu0s_Uc, "BFu32ll_BFu0s_Uc", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_Ui()
{
  {
    init_simple_test("BFu32ll_BFu0s_Ui");
    static BFu32ll_BFu0s_Ui lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu0s_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_Ui");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_Ui");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0s_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_Ui(Test_BFu32ll_BFu0s_Ui, "BFu32ll_BFu0s_Ui", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_Ul()
{
  {
    init_simple_test("BFu32ll_BFu0s_Ul");
    static BFu32ll_BFu0s_Ul lv;
    check2(sizeof(lv), 12, "sizeof(BFu32ll_BFu0s_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_Ul");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_Ul");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0s_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_Ul(Test_BFu32ll_BFu0s_Ul, "BFu32ll_BFu0s_Ul", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_Us()
{
  {
    init_simple_test("BFu32ll_BFu0s_Us");
    static BFu32ll_BFu0s_Us lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu0s_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_Us)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_Us");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_Us");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0s_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_Us(Test_BFu32ll_BFu0s_Us, "BFu32ll_BFu0s_Us", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu0s_Vp()
{
  {
    init_simple_test("BFu32ll_BFu0s_Vp");
    static BFu32ll_BFu0s_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32ll_BFu0s_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu0s_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu0s_Vp");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu0s_Vp");
    check_field_offset(lv, v2, 4, "BFu32ll_BFu0s_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu0s_Vp(Test_BFu32ll_BFu0s_Vp, "BFu32ll_BFu0s_Vp", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu15i_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu15i_BFu0c");
    static BFu32ll_BFu15i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu15i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu15i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu15i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32ll_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32ll_BFu15i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu15i_BFu0c(Test_BFu32ll_BFu15i_BFu0c, "BFu32ll_BFu15i_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu15i_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu15i_BFu0i");
    static BFu32ll_BFu15i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu15i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu15i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu15i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32ll_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32ll_BFu15i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu15i_BFu0i(Test_BFu32ll_BFu15i_BFu0i, "BFu32ll_BFu15i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu15i_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu15i_BFu0ll");
    static BFu32ll_BFu15i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu15i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu15i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu15i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32ll_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32ll_BFu15i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu15i_BFu0ll(Test_BFu32ll_BFu15i_BFu0ll, "BFu32ll_BFu15i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu15i_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu15i_BFu0s");
    static BFu32ll_BFu15i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu15i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu15i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu15i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32ll_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32ll_BFu15i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu15i_BFu0s(Test_BFu32ll_BFu15i_BFu0s, "BFu32ll_BFu15i_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu15ll_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu15ll_BFu0c");
    static BFu32ll_BFu15ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu15ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu15ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu15ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32ll_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32ll_BFu15ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu15ll_BFu0c(Test_BFu32ll_BFu15ll_BFu0c, "BFu32ll_BFu15ll_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu15ll_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu15ll_BFu0i");
    static BFu32ll_BFu15ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu15ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu15ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu15ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32ll_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32ll_BFu15ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu15ll_BFu0i(Test_BFu32ll_BFu15ll_BFu0i, "BFu32ll_BFu15ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu15ll_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu15ll_BFu0ll");
    static BFu32ll_BFu15ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu15ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu15ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32ll_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32ll_BFu15ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu15ll_BFu0ll(Test_BFu32ll_BFu15ll_BFu0ll, "BFu32ll_BFu15ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu15ll_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu15ll_BFu0s");
    static BFu32ll_BFu15ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu15ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu15ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu15ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32ll_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32ll_BFu15ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu15ll_BFu0s(Test_BFu32ll_BFu15ll_BFu0s, "BFu32ll_BFu15ll_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu15s_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu15s_BFu0c");
    static BFu32ll_BFu15s_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu15s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu15s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu15s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32ll_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32ll_BFu15s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu15s_BFu0c(Test_BFu32ll_BFu15s_BFu0c, "BFu32ll_BFu15s_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu15s_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu15s_BFu0i");
    static BFu32ll_BFu15s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu15s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu15s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu15s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32ll_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32ll_BFu15s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu15s_BFu0i(Test_BFu32ll_BFu15s_BFu0i, "BFu32ll_BFu15s_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu15s_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu15s_BFu0ll");
    static BFu32ll_BFu15s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu15s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu15s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu15s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32ll_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32ll_BFu15s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu15s_BFu0ll(Test_BFu32ll_BFu15s_BFu0ll, "BFu32ll_BFu15s_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu15s_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu15s_BFu0s");
    static BFu32ll_BFu15s_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu15s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu15s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu15s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 15, 1, "BFu32ll_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 15, hide_ull(1LL<<14), "BFu32ll_BFu15s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu15s_BFu0s(Test_BFu32ll_BFu15s_BFu0s, "BFu32ll_BFu15s_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu16i_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu16i_BFu0c");
    static BFu32ll_BFu16i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu16i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu16i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu16i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32ll_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32ll_BFu16i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu16i_BFu0c(Test_BFu32ll_BFu16i_BFu0c, "BFu32ll_BFu16i_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu16i_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu16i_BFu0i");
    static BFu32ll_BFu16i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu16i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu16i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu16i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32ll_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32ll_BFu16i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu16i_BFu0i(Test_BFu32ll_BFu16i_BFu0i, "BFu32ll_BFu16i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu16i_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu16i_BFu0ll");
    static BFu32ll_BFu16i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu16i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu16i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu16i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32ll_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32ll_BFu16i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu16i_BFu0ll(Test_BFu32ll_BFu16i_BFu0ll, "BFu32ll_BFu16i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu16i_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu16i_BFu0s");
    static BFu32ll_BFu16i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu16i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu16i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu16i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32ll_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32ll_BFu16i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu16i_BFu0s(Test_BFu32ll_BFu16i_BFu0s, "BFu32ll_BFu16i_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu16ll_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu16ll_BFu0c");
    static BFu32ll_BFu16ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu16ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu16ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu16ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32ll_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32ll_BFu16ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu16ll_BFu0c(Test_BFu32ll_BFu16ll_BFu0c, "BFu32ll_BFu16ll_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu16ll_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu16ll_BFu0i");
    static BFu32ll_BFu16ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu16ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu16ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu16ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32ll_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32ll_BFu16ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu16ll_BFu0i(Test_BFu32ll_BFu16ll_BFu0i, "BFu32ll_BFu16ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu16ll_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu16ll_BFu0ll");
    static BFu32ll_BFu16ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu16ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu16ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32ll_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32ll_BFu16ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu16ll_BFu0ll(Test_BFu32ll_BFu16ll_BFu0ll, "BFu32ll_BFu16ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu16ll_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu16ll_BFu0s");
    static BFu32ll_BFu16ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu16ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu16ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu16ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32ll_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32ll_BFu16ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu16ll_BFu0s(Test_BFu32ll_BFu16ll_BFu0s, "BFu32ll_BFu16ll_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu16s_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu16s_BFu0c");
    static BFu32ll_BFu16s_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu16s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu16s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu16s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32ll_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32ll_BFu16s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu16s_BFu0c(Test_BFu32ll_BFu16s_BFu0c, "BFu32ll_BFu16s_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu16s_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu16s_BFu0i");
    static BFu32ll_BFu16s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu16s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu16s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu16s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32ll_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32ll_BFu16s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu16s_BFu0i(Test_BFu32ll_BFu16s_BFu0i, "BFu32ll_BFu16s_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu16s_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu16s_BFu0ll");
    static BFu32ll_BFu16s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu16s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu16s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu16s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32ll_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32ll_BFu16s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu16s_BFu0ll(Test_BFu32ll_BFu16s_BFu0ll, "BFu32ll_BFu16s_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu16s_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu16s_BFu0s");
    static BFu32ll_BFu16s_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu16s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu16s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu16s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 16, 1, "BFu32ll_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 16, hide_ull(1LL<<15), "BFu32ll_BFu16s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu16s_BFu0s(Test_BFu32ll_BFu16s_BFu0s, "BFu32ll_BFu16s_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu17i_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu17i_BFu0c");
    static BFu32ll_BFu17i_BFu0c lv;
    check2(sizeof(lv), 7, "sizeof(BFu32ll_BFu17i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu17i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu17i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32ll_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32ll_BFu17i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu17i_BFu0c(Test_BFu32ll_BFu17i_BFu0c, "BFu32ll_BFu17i_BFu0c", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu17i_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu17i_BFu0i");
    static BFu32ll_BFu17i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu17i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu17i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu17i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32ll_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32ll_BFu17i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu17i_BFu0i(Test_BFu32ll_BFu17i_BFu0i, "BFu32ll_BFu17i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu17i_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu17i_BFu0ll");
    static BFu32ll_BFu17i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu17i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu17i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu17i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32ll_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32ll_BFu17i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu17i_BFu0ll(Test_BFu32ll_BFu17i_BFu0ll, "BFu32ll_BFu17i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu17i_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu17i_BFu0s");
    static BFu32ll_BFu17i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu17i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu17i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu17i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32ll_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32ll_BFu17i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu17i_BFu0s(Test_BFu32ll_BFu17i_BFu0s, "BFu32ll_BFu17i_BFu0s", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu17ll_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu17ll_BFu0c");
    static BFu32ll_BFu17ll_BFu0c lv;
    check2(sizeof(lv), 7, "sizeof(BFu32ll_BFu17ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu17ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu17ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32ll_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32ll_BFu17ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu17ll_BFu0c(Test_BFu32ll_BFu17ll_BFu0c, "BFu32ll_BFu17ll_BFu0c", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu17ll_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu17ll_BFu0i");
    static BFu32ll_BFu17ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu17ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu17ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu17ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32ll_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32ll_BFu17ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu17ll_BFu0i(Test_BFu32ll_BFu17ll_BFu0i, "BFu32ll_BFu17ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu17ll_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu17ll_BFu0ll");
    static BFu32ll_BFu17ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu17ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu17ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32ll_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32ll_BFu17ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu17ll_BFu0ll(Test_BFu32ll_BFu17ll_BFu0ll, "BFu32ll_BFu17ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu17ll_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu17ll_BFu0s");
    static BFu32ll_BFu17ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu17ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu17ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu17ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 17, 1, "BFu32ll_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 17, hide_ull(1LL<<16), "BFu32ll_BFu17ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu17ll_BFu0s(Test_BFu32ll_BFu17ll_BFu0s, "BFu32ll_BFu17ll_BFu0s", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu1c_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu1c_BFu0c");
    static BFu32ll_BFu1c_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu1c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu1c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu1c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu1c_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu1c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu1c_BFu0c(Test_BFu32ll_BFu1c_BFu0c, "BFu32ll_BFu1c_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu1c_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu1c_BFu0i");
    static BFu32ll_BFu1c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu1c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu1c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu1c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu1c_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu1c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu1c_BFu0i(Test_BFu32ll_BFu1c_BFu0i, "BFu32ll_BFu1c_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu1c_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu1c_BFu0ll");
    static BFu32ll_BFu1c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu1c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu1c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu1c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu1c_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu1c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu1c_BFu0ll(Test_BFu32ll_BFu1c_BFu0ll, "BFu32ll_BFu1c_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu1c_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu1c_BFu0s");
    static BFu32ll_BFu1c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32ll_BFu1c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu1c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu1c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu1c_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu1c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu1c_BFu0s(Test_BFu32ll_BFu1c_BFu0s, "BFu32ll_BFu1c_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu1i_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu1i_BFu0c");
    static BFu32ll_BFu1i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu1i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu1i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu1i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu1i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu1i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu1i_BFu0c(Test_BFu32ll_BFu1i_BFu0c, "BFu32ll_BFu1i_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu1i_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu1i_BFu0i");
    static BFu32ll_BFu1i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu1i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu1i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu1i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu1i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu1i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu1i_BFu0i(Test_BFu32ll_BFu1i_BFu0i, "BFu32ll_BFu1i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu1i_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu1i_BFu0ll");
    static BFu32ll_BFu1i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu1i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu1i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu1i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu1i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu1i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu1i_BFu0ll(Test_BFu32ll_BFu1i_BFu0ll, "BFu32ll_BFu1i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu1i_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu1i_BFu0s");
    static BFu32ll_BFu1i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32ll_BFu1i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu1i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu1i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu1i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu1i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu1i_BFu0s(Test_BFu32ll_BFu1i_BFu0s, "BFu32ll_BFu1i_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu1ll_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu1ll_BFu0c");
    static BFu32ll_BFu1ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu1ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu1ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu1ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu1ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu1ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu1ll_BFu0c(Test_BFu32ll_BFu1ll_BFu0c, "BFu32ll_BFu1ll_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu1ll_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu1ll_BFu0i");
    static BFu32ll_BFu1ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu1ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu1ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu1ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu1ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu1ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu1ll_BFu0i(Test_BFu32ll_BFu1ll_BFu0i, "BFu32ll_BFu1ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu1ll_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu1ll_BFu0ll");
    static BFu32ll_BFu1ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu1ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu1ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu1ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu1ll_BFu0ll(Test_BFu32ll_BFu1ll_BFu0ll, "BFu32ll_BFu1ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu1ll_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu1ll_BFu0s");
    static BFu32ll_BFu1ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32ll_BFu1ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu1ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu1ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu1ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu1ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu1ll_BFu0s(Test_BFu32ll_BFu1ll_BFu0s, "BFu32ll_BFu1ll_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu1s_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu1s_BFu0c");
    static BFu32ll_BFu1s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu1s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu1s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu1s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu1s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu1s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu1s_BFu0c(Test_BFu32ll_BFu1s_BFu0c, "BFu32ll_BFu1s_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu1s_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu1s_BFu0i");
    static BFu32ll_BFu1s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu1s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu1s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu1s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu1s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu1s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu1s_BFu0i(Test_BFu32ll_BFu1s_BFu0i, "BFu32ll_BFu1s_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu1s_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu1s_BFu0ll");
    static BFu32ll_BFu1s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu1s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu1s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu1s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu1s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu1s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu1s_BFu0ll(Test_BFu32ll_BFu1s_BFu0ll, "BFu32ll_BFu1s_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu1s_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu1s_BFu0s");
    static BFu32ll_BFu1s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32ll_BFu1s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu1s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu1s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu1s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 1, 1, "BFu32ll_BFu1s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu1s_BFu0s(Test_BFu32ll_BFu1s_BFu0s, "BFu32ll_BFu1s_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu31i_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu31i_BFu0c");
    static BFu32ll_BFu31i_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu31i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu31i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu31i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32ll_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32ll_BFu31i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu31i_BFu0c(Test_BFu32ll_BFu31i_BFu0c, "BFu32ll_BFu31i_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu31i_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu31i_BFu0i");
    static BFu32ll_BFu31i_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu31i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu31i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu31i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32ll_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32ll_BFu31i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu31i_BFu0i(Test_BFu32ll_BFu31i_BFu0i, "BFu32ll_BFu31i_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu31i_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu31i_BFu0ll");
    static BFu32ll_BFu31i_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu31i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu31i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu31i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32ll_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32ll_BFu31i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu31i_BFu0ll(Test_BFu32ll_BFu31i_BFu0ll, "BFu32ll_BFu31i_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu31i_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu31i_BFu0s");
    static BFu32ll_BFu31i_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu31i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu31i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu31i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32ll_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32ll_BFu31i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu31i_BFu0s(Test_BFu32ll_BFu31i_BFu0s, "BFu32ll_BFu31i_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu31ll_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu31ll_BFu0c");
    static BFu32ll_BFu31ll_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu31ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu31ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu31ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32ll_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32ll_BFu31ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu31ll_BFu0c(Test_BFu32ll_BFu31ll_BFu0c, "BFu32ll_BFu31ll_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu31ll_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu31ll_BFu0i");
    static BFu32ll_BFu31ll_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu31ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu31ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu31ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32ll_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32ll_BFu31ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu31ll_BFu0i(Test_BFu32ll_BFu31ll_BFu0i, "BFu32ll_BFu31ll_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu31ll_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu31ll_BFu0ll");
    static BFu32ll_BFu31ll_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu31ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu31ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32ll_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32ll_BFu31ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu31ll_BFu0ll(Test_BFu32ll_BFu31ll_BFu0ll, "BFu32ll_BFu31ll_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu31ll_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu31ll_BFu0s");
    static BFu32ll_BFu31ll_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu31ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu31ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu31ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 31, 1, "BFu32ll_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 31, hide_ull(1LL<<30), "BFu32ll_BFu31ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu31ll_BFu0s(Test_BFu32ll_BFu31ll_BFu0s, "BFu32ll_BFu31ll_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu32i_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu32i_BFu0c");
    static BFu32ll_BFu32i_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu32i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu32i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu32i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32ll_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu32i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu32i_BFu0c(Test_BFu32ll_BFu32i_BFu0c, "BFu32ll_BFu32i_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu32i_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu32i_BFu0i");
    static BFu32ll_BFu32i_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu32i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu32i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu32i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32ll_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu32i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu32i_BFu0i(Test_BFu32ll_BFu32i_BFu0i, "BFu32ll_BFu32i_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu32i_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu32i_BFu0ll");
    static BFu32ll_BFu32i_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu32i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu32i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu32i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32ll_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu32i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu32i_BFu0ll(Test_BFu32ll_BFu32i_BFu0ll, "BFu32ll_BFu32i_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu32i_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu32i_BFu0s");
    static BFu32ll_BFu32i_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu32i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu32i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu32i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32ll_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu32i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu32i_BFu0s(Test_BFu32ll_BFu32i_BFu0s, "BFu32ll_BFu32i_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu32ll_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu32ll_BFu0c");
    static BFu32ll_BFu32ll_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu32ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu32ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu32ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32ll_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu32ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu32ll_BFu0c(Test_BFu32ll_BFu32ll_BFu0c, "BFu32ll_BFu32ll_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu32ll_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu32ll_BFu0i");
    static BFu32ll_BFu32ll_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu32ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu32ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu32ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32ll_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu32ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu32ll_BFu0i(Test_BFu32ll_BFu32ll_BFu0i, "BFu32ll_BFu32ll_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu32ll_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu32ll_BFu0ll");
    static BFu32ll_BFu32ll_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu32ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu32ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32ll_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu32ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu32ll_BFu0ll(Test_BFu32ll_BFu32ll_BFu0ll, "BFu32ll_BFu32ll_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu32ll_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu32ll_BFu0s");
    static BFu32ll_BFu32ll_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_BFu32ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu32ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu32ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 32, 1, "BFu32ll_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu32ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu32ll_BFu0s(Test_BFu32ll_BFu32ll_BFu0s, "BFu32ll_BFu32ll_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu33_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu33_BFu0c");
    static BFu32ll_BFu33_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(BFu32ll_BFu33_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu33_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu33_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "BFu32ll_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "BFu32ll_BFu33_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu33_BFu0c(Test_BFu32ll_BFu33_BFu0c, "BFu32ll_BFu33_BFu0c", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu33_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu33_BFu0i");
    static BFu32ll_BFu33_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu32ll_BFu33_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu33_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu33_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "BFu32ll_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "BFu32ll_BFu33_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu33_BFu0i(Test_BFu32ll_BFu33_BFu0i, "BFu32ll_BFu33_BFu0i", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu33_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu33_BFu0ll");
    static BFu32ll_BFu33_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu32ll_BFu33_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu33_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu33_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "BFu32ll_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "BFu32ll_BFu33_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu33_BFu0ll(Test_BFu32ll_BFu33_BFu0ll, "BFu32ll_BFu33_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu33_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu33_BFu0s");
    static BFu32ll_BFu33_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu32ll_BFu33_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu33_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu33_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 33, 1, "BFu32ll_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 33, hide_ull(1LL<<32), "BFu32ll_BFu33_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu33_BFu0s(Test_BFu32ll_BFu33_BFu0s, "BFu32ll_BFu33_BFu0s", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu7c_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu7c_BFu0c");
    static BFu32ll_BFu7c_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu7c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu7c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu7c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu7c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu7c_BFu0c(Test_BFu32ll_BFu7c_BFu0c, "BFu32ll_BFu7c_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu7c_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu7c_BFu0i");
    static BFu32ll_BFu7c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu7c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu7c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu7c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu7c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu7c_BFu0i(Test_BFu32ll_BFu7c_BFu0i, "BFu32ll_BFu7c_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu7c_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu7c_BFu0ll");
    static BFu32ll_BFu7c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu7c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu7c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu7c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu7c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu7c_BFu0ll(Test_BFu32ll_BFu7c_BFu0ll, "BFu32ll_BFu7c_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu7c_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu7c_BFu0s");
    static BFu32ll_BFu7c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32ll_BFu7c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu7c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu7c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu7c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu7c_BFu0s(Test_BFu32ll_BFu7c_BFu0s, "BFu32ll_BFu7c_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu7i_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu7i_BFu0c");
    static BFu32ll_BFu7i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu7i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu7i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu7i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu7i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu7i_BFu0c(Test_BFu32ll_BFu7i_BFu0c, "BFu32ll_BFu7i_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu7i_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu7i_BFu0i");
    static BFu32ll_BFu7i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu7i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu7i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu7i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu7i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu7i_BFu0i(Test_BFu32ll_BFu7i_BFu0i, "BFu32ll_BFu7i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu7i_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu7i_BFu0ll");
    static BFu32ll_BFu7i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu7i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu7i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu7i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu7i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu7i_BFu0ll(Test_BFu32ll_BFu7i_BFu0ll, "BFu32ll_BFu7i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu7i_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu7i_BFu0s");
    static BFu32ll_BFu7i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32ll_BFu7i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu7i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu7i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu7i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu7i_BFu0s(Test_BFu32ll_BFu7i_BFu0s, "BFu32ll_BFu7i_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu7ll_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu7ll_BFu0c");
    static BFu32ll_BFu7ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu7ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu7ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu7ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu7ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu7ll_BFu0c(Test_BFu32ll_BFu7ll_BFu0c, "BFu32ll_BFu7ll_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu7ll_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu7ll_BFu0i");
    static BFu32ll_BFu7ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu7ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu7ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu7ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu7ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu7ll_BFu0i(Test_BFu32ll_BFu7ll_BFu0i, "BFu32ll_BFu7ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu7ll_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu7ll_BFu0ll");
    static BFu32ll_BFu7ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu7ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu7ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu7ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu7ll_BFu0ll(Test_BFu32ll_BFu7ll_BFu0ll, "BFu32ll_BFu7ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu7ll_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu7ll_BFu0s");
    static BFu32ll_BFu7ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32ll_BFu7ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu7ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu7ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu7ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu7ll_BFu0s(Test_BFu32ll_BFu7ll_BFu0s, "BFu32ll_BFu7ll_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu7s_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu7s_BFu0c");
    static BFu32ll_BFu7s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu7s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu7s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu7s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu7s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu7s_BFu0c(Test_BFu32ll_BFu7s_BFu0c, "BFu32ll_BFu7s_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu7s_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu7s_BFu0i");
    static BFu32ll_BFu7s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu7s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu7s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu7s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu7s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu7s_BFu0i(Test_BFu32ll_BFu7s_BFu0i, "BFu32ll_BFu7s_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu7s_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu7s_BFu0ll");
    static BFu32ll_BFu7s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu7s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu7s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu7s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu7s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu7s_BFu0ll(Test_BFu32ll_BFu7s_BFu0ll, "BFu32ll_BFu7s_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu7s_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu7s_BFu0s");
    static BFu32ll_BFu7s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32ll_BFu7s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu7s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu7s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, 1, "BFu32ll_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 7, hide_ull(1LL<<6), "BFu32ll_BFu7s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu7s_BFu0s(Test_BFu32ll_BFu7s_BFu0s, "BFu32ll_BFu7s_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu8c_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu8c_BFu0c");
    static BFu32ll_BFu8c_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu8c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu8c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu8c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu8c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu8c_BFu0c(Test_BFu32ll_BFu8c_BFu0c, "BFu32ll_BFu8c_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu8c_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu8c_BFu0i");
    static BFu32ll_BFu8c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu8c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu8c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu8c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu8c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu8c_BFu0i(Test_BFu32ll_BFu8c_BFu0i, "BFu32ll_BFu8c_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu8c_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu8c_BFu0ll");
    static BFu32ll_BFu8c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu8c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu8c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu8c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu8c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu8c_BFu0ll(Test_BFu32ll_BFu8c_BFu0ll, "BFu32ll_BFu8c_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu8c_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu8c_BFu0s");
    static BFu32ll_BFu8c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32ll_BFu8c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu8c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu8c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu8c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu8c_BFu0s(Test_BFu32ll_BFu8c_BFu0s, "BFu32ll_BFu8c_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu8i_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu8i_BFu0c");
    static BFu32ll_BFu8i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu8i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu8i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu8i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu8i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu8i_BFu0c(Test_BFu32ll_BFu8i_BFu0c, "BFu32ll_BFu8i_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu8i_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu8i_BFu0i");
    static BFu32ll_BFu8i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu8i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu8i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu8i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu8i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu8i_BFu0i(Test_BFu32ll_BFu8i_BFu0i, "BFu32ll_BFu8i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu8i_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu8i_BFu0ll");
    static BFu32ll_BFu8i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu8i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu8i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu8i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu8i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu8i_BFu0ll(Test_BFu32ll_BFu8i_BFu0ll, "BFu32ll_BFu8i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu8i_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu8i_BFu0s");
    static BFu32ll_BFu8i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32ll_BFu8i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu8i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu8i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu8i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu8i_BFu0s(Test_BFu32ll_BFu8i_BFu0s, "BFu32ll_BFu8i_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu8ll_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu8ll_BFu0c");
    static BFu32ll_BFu8ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu8ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu8ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu8ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu8ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu8ll_BFu0c(Test_BFu32ll_BFu8ll_BFu0c, "BFu32ll_BFu8ll_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu8ll_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu8ll_BFu0i");
    static BFu32ll_BFu8ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu8ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu8ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu8ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu8ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu8ll_BFu0i(Test_BFu32ll_BFu8ll_BFu0i, "BFu32ll_BFu8ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu8ll_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu8ll_BFu0ll");
    static BFu32ll_BFu8ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu8ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu8ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu8ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu8ll_BFu0ll(Test_BFu32ll_BFu8ll_BFu0ll, "BFu32ll_BFu8ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu8ll_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu8ll_BFu0s");
    static BFu32ll_BFu8ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32ll_BFu8ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu8ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu8ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu8ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu8ll_BFu0s(Test_BFu32ll_BFu8ll_BFu0s, "BFu32ll_BFu8ll_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu8s_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu8s_BFu0c");
    static BFu32ll_BFu8s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_BFu8s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu8s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu8s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu8s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu8s_BFu0c(Test_BFu32ll_BFu8s_BFu0c, "BFu32ll_BFu8s_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu8s_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu8s_BFu0i");
    static BFu32ll_BFu8s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu8s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu8s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu8s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu8s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu8s_BFu0i(Test_BFu32ll_BFu8s_BFu0i, "BFu32ll_BFu8s_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu8s_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu8s_BFu0ll");
    static BFu32ll_BFu8s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu8s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu8s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu8s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu8s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu8s_BFu0ll(Test_BFu32ll_BFu8s_BFu0ll, "BFu32ll_BFu8s_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu8s_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu8s_BFu0s");
    static BFu32ll_BFu8s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32ll_BFu8s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu8s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu8s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, 1, "BFu32ll_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 8, hide_ull(1LL<<7), "BFu32ll_BFu8s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu8s_BFu0s(Test_BFu32ll_BFu8s_BFu0s, "BFu32ll_BFu8s_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu9i_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu9i_BFu0c");
    static BFu32ll_BFu9i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu9i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu9i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu9i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32ll_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32ll_BFu9i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu9i_BFu0c(Test_BFu32ll_BFu9i_BFu0c, "BFu32ll_BFu9i_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu9i_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu9i_BFu0i");
    static BFu32ll_BFu9i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu9i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu9i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu9i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32ll_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32ll_BFu9i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu9i_BFu0i(Test_BFu32ll_BFu9i_BFu0i, "BFu32ll_BFu9i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu9i_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu9i_BFu0ll");
    static BFu32ll_BFu9i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu9i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu9i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu9i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32ll_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32ll_BFu9i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu9i_BFu0ll(Test_BFu32ll_BFu9i_BFu0ll, "BFu32ll_BFu9i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu9i_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu9i_BFu0s");
    static BFu32ll_BFu9i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu9i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu9i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu9i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32ll_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32ll_BFu9i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu9i_BFu0s(Test_BFu32ll_BFu9i_BFu0s, "BFu32ll_BFu9i_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu9ll_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu9ll_BFu0c");
    static BFu32ll_BFu9ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu9ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu9ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu9ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32ll_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32ll_BFu9ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu9ll_BFu0c(Test_BFu32ll_BFu9ll_BFu0c, "BFu32ll_BFu9ll_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu9ll_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu9ll_BFu0i");
    static BFu32ll_BFu9ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu9ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu9ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu9ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32ll_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32ll_BFu9ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu9ll_BFu0i(Test_BFu32ll_BFu9ll_BFu0i, "BFu32ll_BFu9ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu9ll_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu9ll_BFu0ll");
    static BFu32ll_BFu9ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu9ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu9ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32ll_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32ll_BFu9ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu9ll_BFu0ll(Test_BFu32ll_BFu9ll_BFu0ll, "BFu32ll_BFu9ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu9ll_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu9ll_BFu0s");
    static BFu32ll_BFu9ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu9ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu9ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu9ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32ll_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32ll_BFu9ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu9ll_BFu0s(Test_BFu32ll_BFu9ll_BFu0s, "BFu32ll_BFu9ll_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu9s_BFu0c()
{
  {
    init_simple_test("BFu32ll_BFu9s_BFu0c");
    static BFu32ll_BFu9s_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu9s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_BFu9s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu9s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32ll_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32ll_BFu9s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu9s_BFu0c(Test_BFu32ll_BFu9s_BFu0c, "BFu32ll_BFu9s_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu9s_BFu0i()
{
  {
    init_simple_test("BFu32ll_BFu9s_BFu0i");
    static BFu32ll_BFu9s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu9s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu9s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu9s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32ll_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32ll_BFu9s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu9s_BFu0i(Test_BFu32ll_BFu9s_BFu0i, "BFu32ll_BFu9s_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu9s_BFu0ll()
{
  {
    init_simple_test("BFu32ll_BFu9s_BFu0ll");
    static BFu32ll_BFu9s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_BFu9s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu9s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu9s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32ll_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32ll_BFu9s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu9s_BFu0ll(Test_BFu32ll_BFu9s_BFu0ll, "BFu32ll_BFu9s_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_BFu9s_BFu0s()
{
  {
    init_simple_test("BFu32ll_BFu9s_BFu0s");
    static BFu32ll_BFu9s_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_BFu9s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_BFu9s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_BFu9s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 9, 1, "BFu32ll_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 4, 0, 9, hide_ull(1LL<<8), "BFu32ll_BFu9s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu32ll_BFu9s_BFu0s(Test_BFu32ll_BFu9s_BFu0s, "BFu32ll_BFu9s_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_C_BFu0c()
{
  {
    init_simple_test("BFu32ll_C_BFu0c");
    static BFu32ll_C_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_C_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_C_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_C_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_C_BFu0c");
    check_field_offset(lv, v2, 4, "BFu32ll_C_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_C_BFu0c(Test_BFu32ll_C_BFu0c, "BFu32ll_C_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_C_BFu0i()
{
  {
    init_simple_test("BFu32ll_C_BFu0i");
    static BFu32ll_C_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_C_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_C_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_C_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_C_BFu0i");
    check_field_offset(lv, v2, 4, "BFu32ll_C_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_C_BFu0i(Test_BFu32ll_C_BFu0i, "BFu32ll_C_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_C_BFu0ll()
{
  {
    init_simple_test("BFu32ll_C_BFu0ll");
    static BFu32ll_C_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_C_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_C_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_C_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_C_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu32ll_C_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_C_BFu0ll(Test_BFu32ll_C_BFu0ll, "BFu32ll_C_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_C_BFu0s()
{
  {
    init_simple_test("BFu32ll_C_BFu0s");
    static BFu32ll_C_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32ll_C_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_C_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_C_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_C_BFu0s");
    check_field_offset(lv, v2, 4, "BFu32ll_C_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_C_BFu0s(Test_BFu32ll_C_BFu0s, "BFu32ll_C_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_D_BFu0c()
{
  {
    init_simple_test("BFu32ll_D_BFu0c");
    static BFu32ll_D_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(BFu32ll_D_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_D_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_D_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_D_BFu0c");
    check_field_offset(lv, v2, 4, "BFu32ll_D_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_D_BFu0c(Test_BFu32ll_D_BFu0c, "BFu32ll_D_BFu0c", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_D_BFu0i()
{
  {
    init_simple_test("BFu32ll_D_BFu0i");
    static BFu32ll_D_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(BFu32ll_D_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_D_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_D_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_D_BFu0i");
    check_field_offset(lv, v2, 4, "BFu32ll_D_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_D_BFu0i(Test_BFu32ll_D_BFu0i, "BFu32ll_D_BFu0i", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_D_BFu0ll()
{
  {
    init_simple_test("BFu32ll_D_BFu0ll");
    static BFu32ll_D_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu32ll_D_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_D_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_D_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_D_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu32ll_D_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_D_BFu0ll(Test_BFu32ll_D_BFu0ll, "BFu32ll_D_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_D_BFu0s()
{
  {
    init_simple_test("BFu32ll_D_BFu0s");
    static BFu32ll_D_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(BFu32ll_D_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_D_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_D_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_D_BFu0s");
    check_field_offset(lv, v2, 4, "BFu32ll_D_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_D_BFu0s(Test_BFu32ll_D_BFu0s, "BFu32ll_D_BFu0s", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_F_BFu0c()
{
  {
    init_simple_test("BFu32ll_F_BFu0c");
    static BFu32ll_F_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_F_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_F_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_F_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_F_BFu0c");
    check_field_offset(lv, v2, 4, "BFu32ll_F_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_F_BFu0c(Test_BFu32ll_F_BFu0c, "BFu32ll_F_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_F_BFu0i()
{
  {
    init_simple_test("BFu32ll_F_BFu0i");
    static BFu32ll_F_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_F_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_F_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_F_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_F_BFu0i");
    check_field_offset(lv, v2, 4, "BFu32ll_F_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_F_BFu0i(Test_BFu32ll_F_BFu0i, "BFu32ll_F_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_F_BFu0ll()
{
  {
    init_simple_test("BFu32ll_F_BFu0ll");
    static BFu32ll_F_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_F_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_F_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_F_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_F_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu32ll_F_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_F_BFu0ll(Test_BFu32ll_F_BFu0ll, "BFu32ll_F_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_F_BFu0s()
{
  {
    init_simple_test("BFu32ll_F_BFu0s");
    static BFu32ll_F_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_F_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_F_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_F_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_F_BFu0s");
    check_field_offset(lv, v2, 4, "BFu32ll_F_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_F_BFu0s(Test_BFu32ll_F_BFu0s, "BFu32ll_F_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_I_BFu0c()
{
  {
    init_simple_test("BFu32ll_I_BFu0c");
    static BFu32ll_I_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_I_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_I_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_I_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_I_BFu0c");
    check_field_offset(lv, v2, 4, "BFu32ll_I_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_I_BFu0c(Test_BFu32ll_I_BFu0c, "BFu32ll_I_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_I_BFu0i()
{
  {
    init_simple_test("BFu32ll_I_BFu0i");
    static BFu32ll_I_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_I_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_I_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_I_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_I_BFu0i");
    check_field_offset(lv, v2, 4, "BFu32ll_I_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_I_BFu0i(Test_BFu32ll_I_BFu0i, "BFu32ll_I_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_I_BFu0ll()
{
  {
    init_simple_test("BFu32ll_I_BFu0ll");
    static BFu32ll_I_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_I_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_I_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_I_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_I_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu32ll_I_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_I_BFu0ll(Test_BFu32ll_I_BFu0ll, "BFu32ll_I_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_I_BFu0s()
{
  {
    init_simple_test("BFu32ll_I_BFu0s");
    static BFu32ll_I_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_I_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_I_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_I_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_I_BFu0s");
    check_field_offset(lv, v2, 4, "BFu32ll_I_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_I_BFu0s(Test_BFu32ll_I_BFu0s, "BFu32ll_I_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_Ip_BFu0c()
{
  {
    init_simple_test("BFu32ll_Ip_BFu0c");
    static BFu32ll_Ip_BFu0c lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32ll_Ip_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Ip_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Ip_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Ip_BFu0c");
    check_field_offset(lv, v2, 4, "BFu32ll_Ip_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_Ip_BFu0c(Test_BFu32ll_Ip_BFu0c, "BFu32ll_Ip_BFu0c", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_Ip_BFu0i()
{
  {
    init_simple_test("BFu32ll_Ip_BFu0i");
    static BFu32ll_Ip_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32ll_Ip_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_Ip_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Ip_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Ip_BFu0i");
    check_field_offset(lv, v2, 4, "BFu32ll_Ip_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_Ip_BFu0i(Test_BFu32ll_Ip_BFu0i, "BFu32ll_Ip_BFu0i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_Ip_BFu0ll()
{
  {
    init_simple_test("BFu32ll_Ip_BFu0ll");
    static BFu32ll_Ip_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu32ll_Ip_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_Ip_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Ip_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Ip_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu32ll_Ip_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_Ip_BFu0ll(Test_BFu32ll_Ip_BFu0ll, "BFu32ll_Ip_BFu0ll", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_Ip_BFu0s()
{
  {
    init_simple_test("BFu32ll_Ip_BFu0s");
    static BFu32ll_Ip_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32ll_Ip_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_Ip_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Ip_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Ip_BFu0s");
    check_field_offset(lv, v2, 4, "BFu32ll_Ip_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_Ip_BFu0s(Test_BFu32ll_Ip_BFu0s, "BFu32ll_Ip_BFu0s", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_L_BFu0c()
{
  {
    init_simple_test("BFu32ll_L_BFu0c");
    static BFu32ll_L_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(BFu32ll_L_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_L_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_L_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_L_BFu0c");
    check_field_offset(lv, v2, 4, "BFu32ll_L_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_L_BFu0c(Test_BFu32ll_L_BFu0c, "BFu32ll_L_BFu0c", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_L_BFu0i()
{
  {
    init_simple_test("BFu32ll_L_BFu0i");
    static BFu32ll_L_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(BFu32ll_L_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_L_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_L_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_L_BFu0i");
    check_field_offset(lv, v2, 4, "BFu32ll_L_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_L_BFu0i(Test_BFu32ll_L_BFu0i, "BFu32ll_L_BFu0i", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_L_BFu0ll()
{
  {
    init_simple_test("BFu32ll_L_BFu0ll");
    static BFu32ll_L_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu32ll_L_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_L_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_L_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_L_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu32ll_L_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_L_BFu0ll(Test_BFu32ll_L_BFu0ll, "BFu32ll_L_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_L_BFu0s()
{
  {
    init_simple_test("BFu32ll_L_BFu0s");
    static BFu32ll_L_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(BFu32ll_L_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_L_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_L_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_L_BFu0s");
    check_field_offset(lv, v2, 4, "BFu32ll_L_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_L_BFu0s(Test_BFu32ll_L_BFu0s, "BFu32ll_L_BFu0s", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_S_BFu0c()
{
  {
    init_simple_test("BFu32ll_S_BFu0c");
    static BFu32ll_S_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_S_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_S_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_S_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_S_BFu0c");
    check_field_offset(lv, v2, 4, "BFu32ll_S_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_S_BFu0c(Test_BFu32ll_S_BFu0c, "BFu32ll_S_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_S_BFu0i()
{
  {
    init_simple_test("BFu32ll_S_BFu0i");
    static BFu32ll_S_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_S_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_S_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_S_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_S_BFu0i");
    check_field_offset(lv, v2, 4, "BFu32ll_S_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_S_BFu0i(Test_BFu32ll_S_BFu0i, "BFu32ll_S_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_S_BFu0ll()
{
  {
    init_simple_test("BFu32ll_S_BFu0ll");
    static BFu32ll_S_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_S_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_S_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_S_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_S_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu32ll_S_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_S_BFu0ll(Test_BFu32ll_S_BFu0ll, "BFu32ll_S_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_S_BFu0s()
{
  {
    init_simple_test("BFu32ll_S_BFu0s");
    static BFu32ll_S_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_S_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_S_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_S_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_S_BFu0s");
    check_field_offset(lv, v2, 4, "BFu32ll_S_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_S_BFu0s(Test_BFu32ll_S_BFu0s, "BFu32ll_S_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_Uc_BFu0c()
{
  {
    init_simple_test("BFu32ll_Uc_BFu0c");
    static BFu32ll_Uc_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu32ll_Uc_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Uc_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Uc_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Uc_BFu0c");
    check_field_offset(lv, v2, 4, "BFu32ll_Uc_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_Uc_BFu0c(Test_BFu32ll_Uc_BFu0c, "BFu32ll_Uc_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_Uc_BFu0i()
{
  {
    init_simple_test("BFu32ll_Uc_BFu0i");
    static BFu32ll_Uc_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_Uc_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_Uc_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Uc_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Uc_BFu0i");
    check_field_offset(lv, v2, 4, "BFu32ll_Uc_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_Uc_BFu0i(Test_BFu32ll_Uc_BFu0i, "BFu32ll_Uc_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_Uc_BFu0ll()
{
  {
    init_simple_test("BFu32ll_Uc_BFu0ll");
    static BFu32ll_Uc_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_Uc_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_Uc_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Uc_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Uc_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu32ll_Uc_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_Uc_BFu0ll(Test_BFu32ll_Uc_BFu0ll, "BFu32ll_Uc_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_Uc_BFu0s()
{
  {
    init_simple_test("BFu32ll_Uc_BFu0s");
    static BFu32ll_Uc_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu32ll_Uc_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_Uc_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Uc_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Uc_BFu0s");
    check_field_offset(lv, v2, 4, "BFu32ll_Uc_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_Uc_BFu0s(Test_BFu32ll_Uc_BFu0s, "BFu32ll_Uc_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_Ui_BFu0c()
{
  {
    init_simple_test("BFu32ll_Ui_BFu0c");
    static BFu32ll_Ui_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_Ui_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Ui_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Ui_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Ui_BFu0c");
    check_field_offset(lv, v2, 4, "BFu32ll_Ui_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_Ui_BFu0c(Test_BFu32ll_Ui_BFu0c, "BFu32ll_Ui_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_Ui_BFu0i()
{
  {
    init_simple_test("BFu32ll_Ui_BFu0i");
    static BFu32ll_Ui_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_Ui_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_Ui_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Ui_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Ui_BFu0i");
    check_field_offset(lv, v2, 4, "BFu32ll_Ui_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_Ui_BFu0i(Test_BFu32ll_Ui_BFu0i, "BFu32ll_Ui_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_Ui_BFu0ll()
{
  {
    init_simple_test("BFu32ll_Ui_BFu0ll");
    static BFu32ll_Ui_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_Ui_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_Ui_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Ui_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Ui_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu32ll_Ui_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_Ui_BFu0ll(Test_BFu32ll_Ui_BFu0ll, "BFu32ll_Ui_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_Ui_BFu0s()
{
  {
    init_simple_test("BFu32ll_Ui_BFu0s");
    static BFu32ll_Ui_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu32ll_Ui_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_Ui_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Ui_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Ui_BFu0s");
    check_field_offset(lv, v2, 4, "BFu32ll_Ui_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_Ui_BFu0s(Test_BFu32ll_Ui_BFu0s, "BFu32ll_Ui_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_Ul_BFu0c()
{
  {
    init_simple_test("BFu32ll_Ul_BFu0c");
    static BFu32ll_Ul_BFu0c lv;
    check2(sizeof(lv), 12, "sizeof(BFu32ll_Ul_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Ul_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Ul_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Ul_BFu0c");
    check_field_offset(lv, v2, 4, "BFu32ll_Ul_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_Ul_BFu0c(Test_BFu32ll_Ul_BFu0c, "BFu32ll_Ul_BFu0c", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_Ul_BFu0i()
{
  {
    init_simple_test("BFu32ll_Ul_BFu0i");
    static BFu32ll_Ul_BFu0i lv;
    check2(sizeof(lv), 12, "sizeof(BFu32ll_Ul_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_Ul_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Ul_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Ul_BFu0i");
    check_field_offset(lv, v2, 4, "BFu32ll_Ul_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_Ul_BFu0i(Test_BFu32ll_Ul_BFu0i, "BFu32ll_Ul_BFu0i", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_Ul_BFu0ll()
{
  {
    init_simple_test("BFu32ll_Ul_BFu0ll");
    static BFu32ll_Ul_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu32ll_Ul_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_Ul_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Ul_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Ul_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu32ll_Ul_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_Ul_BFu0ll(Test_BFu32ll_Ul_BFu0ll, "BFu32ll_Ul_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_Ul_BFu0s()
{
  {
    init_simple_test("BFu32ll_Ul_BFu0s");
    static BFu32ll_Ul_BFu0s lv;
    check2(sizeof(lv), 12, "sizeof(BFu32ll_Ul_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_Ul_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Ul_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Ul_BFu0s");
    check_field_offset(lv, v2, 4, "BFu32ll_Ul_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_Ul_BFu0s(Test_BFu32ll_Ul_BFu0s, "BFu32ll_Ul_BFu0s", 12);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_Us_BFu0c()
{
  {
    init_simple_test("BFu32ll_Us_BFu0c");
    static BFu32ll_Us_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_Us_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Us_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Us_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Us_BFu0c");
    check_field_offset(lv, v2, 4, "BFu32ll_Us_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_Us_BFu0c(Test_BFu32ll_Us_BFu0c, "BFu32ll_Us_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_Us_BFu0i()
{
  {
    init_simple_test("BFu32ll_Us_BFu0i");
    static BFu32ll_Us_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_Us_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_Us_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Us_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Us_BFu0i");
    check_field_offset(lv, v2, 4, "BFu32ll_Us_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_Us_BFu0i(Test_BFu32ll_Us_BFu0i, "BFu32ll_Us_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_Us_BFu0ll()
{
  {
    init_simple_test("BFu32ll_Us_BFu0ll");
    static BFu32ll_Us_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu32ll_Us_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_Us_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Us_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Us_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu32ll_Us_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_Us_BFu0ll(Test_BFu32ll_Us_BFu0ll, "BFu32ll_Us_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_Us_BFu0s()
{
  {
    init_simple_test("BFu32ll_Us_BFu0s");
    static BFu32ll_Us_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu32ll_Us_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_Us_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Us_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Us_BFu0s");
    check_field_offset(lv, v2, 4, "BFu32ll_Us_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_Us_BFu0s(Test_BFu32ll_Us_BFu0s, "BFu32ll_Us_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_Vp_BFu0c()
{
  {
    init_simple_test("BFu32ll_Vp_BFu0c");
    static BFu32ll_Vp_BFu0c lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32ll_Vp_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu32ll_Vp_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Vp_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Vp_BFu0c");
    check_field_offset(lv, v2, 4, "BFu32ll_Vp_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_Vp_BFu0c(Test_BFu32ll_Vp_BFu0c, "BFu32ll_Vp_BFu0c", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_Vp_BFu0i()
{
  {
    init_simple_test("BFu32ll_Vp_BFu0i");
    static BFu32ll_Vp_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32ll_Vp_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_Vp_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Vp_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Vp_BFu0i");
    check_field_offset(lv, v2, 4, "BFu32ll_Vp_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_Vp_BFu0i(Test_BFu32ll_Vp_BFu0i, "BFu32ll_Vp_BFu0i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_Vp_BFu0ll()
{
  {
    init_simple_test("BFu32ll_Vp_BFu0ll");
    static BFu32ll_Vp_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu32ll_Vp_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_Vp_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Vp_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Vp_BFu0ll");
    check_field_offset(lv, v2, 4, "BFu32ll_Vp_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_Vp_BFu0ll(Test_BFu32ll_Vp_BFu0ll, "BFu32ll_Vp_BFu0ll", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu32ll_Vp_BFu0s()
{
  {
    init_simple_test("BFu32ll_Vp_BFu0s");
    static BFu32ll_Vp_BFu0s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu32ll_Vp_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu32ll_Vp_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 32, 1, "BFu32ll_Vp_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 32, hide_ull(1LL<<31), "BFu32ll_Vp_BFu0s");
    check_field_offset(lv, v2, 4, "BFu32ll_Vp_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu32ll_Vp_BFu0s(Test_BFu32ll_Vp_BFu0s, "BFu32ll_Vp_BFu0s", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c()
{
  {
    init_simple_test("BFu33_BFu0c");
    static BFu33_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu33_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c(Test_BFu33_BFu0c, "BFu33_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu0c()
{
  {
    init_simple_test("BFu33_BFu0c_BFu0c");
    static BFu33_BFu0c_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu33_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu0c(Test_BFu33_BFu0c_BFu0c, "BFu33_BFu0c_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu0i()
{
  {
    init_simple_test("BFu33_BFu0c_BFu0i");
    static BFu33_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu0i(Test_BFu33_BFu0c_BFu0i, "BFu33_BFu0c_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu0c_BFu0ll");
    static BFu33_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu0ll(Test_BFu33_BFu0c_BFu0ll, "BFu33_BFu0c_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu0s()
{
  {
    init_simple_test("BFu33_BFu0c_BFu0s");
    static BFu33_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu33_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu0s(Test_BFu33_BFu0c_BFu0s, "BFu33_BFu0c_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu15i()
{
  {
    init_simple_test("BFu33_BFu0c_BFu15i");
    static BFu33_BFu0c_BFu15i lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_BFu0c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, 5, 0, 15, 1, "BFu33_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, 5, 0, 15, hide_ull(1LL<<14), "BFu33_BFu0c_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu15i(Test_BFu33_BFu0c_BFu15i, "BFu33_BFu0c_BFu15i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu15ll()
{
  {
    init_simple_test("BFu33_BFu0c_BFu15ll");
    static BFu33_BFu0c_BFu15ll lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_BFu0c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, 5, 0, 15, 1, "BFu33_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, 5, 0, 15, hide_ull(1LL<<14), "BFu33_BFu0c_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu15ll(Test_BFu33_BFu0c_BFu15ll, "BFu33_BFu0c_BFu15ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu15s()
{
  {
    init_simple_test("BFu33_BFu0c_BFu15s");
    static BFu33_BFu0c_BFu15s lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_BFu0c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, 5, 0, 15, 1, "BFu33_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, 5, 0, 15, hide_ull(1LL<<14), "BFu33_BFu0c_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu15s(Test_BFu33_BFu0c_BFu15s, "BFu33_BFu0c_BFu15s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu16i()
{
  {
    init_simple_test("BFu33_BFu0c_BFu16i");
    static BFu33_BFu0c_BFu16i lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_BFu0c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, 5, 0, 16, 1, "BFu33_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, 5, 0, 16, hide_ull(1LL<<15), "BFu33_BFu0c_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu16i(Test_BFu33_BFu0c_BFu16i, "BFu33_BFu0c_BFu16i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu16ll()
{
  {
    init_simple_test("BFu33_BFu0c_BFu16ll");
    static BFu33_BFu0c_BFu16ll lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_BFu0c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, 5, 0, 16, 1, "BFu33_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, 5, 0, 16, hide_ull(1LL<<15), "BFu33_BFu0c_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu16ll(Test_BFu33_BFu0c_BFu16ll, "BFu33_BFu0c_BFu16ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu16s()
{
  {
    init_simple_test("BFu33_BFu0c_BFu16s");
    static BFu33_BFu0c_BFu16s lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_BFu0c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, 5, 0, 16, 1, "BFu33_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, 5, 0, 16, hide_ull(1LL<<15), "BFu33_BFu0c_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu16s(Test_BFu33_BFu0c_BFu16s, "BFu33_BFu0c_BFu16s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu17i()
{
  {
    init_simple_test("BFu33_BFu0c_BFu17i");
    static BFu33_BFu0c_BFu17i lv;
    check2(sizeof(lv), 8, "sizeof(BFu33_BFu0c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, 5, 0, 17, 1, "BFu33_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, 5, 0, 17, hide_ull(1LL<<16), "BFu33_BFu0c_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu17i(Test_BFu33_BFu0c_BFu17i, "BFu33_BFu0c_BFu17i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu17ll()
{
  {
    init_simple_test("BFu33_BFu0c_BFu17ll");
    static BFu33_BFu0c_BFu17ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu33_BFu0c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, 5, 0, 17, 1, "BFu33_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, 5, 0, 17, hide_ull(1LL<<16), "BFu33_BFu0c_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu17ll(Test_BFu33_BFu0c_BFu17ll, "BFu33_BFu0c_BFu17ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu1c()
{
  {
    init_simple_test("BFu33_BFu0c_BFu1c");
    static BFu33_BFu0c_BFu1c lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu0c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu1c");
    set_bf_and_test(lv, v2, 5, 0, 1, 1, "BFu33_BFu0c_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu1c(Test_BFu33_BFu0c_BFu1c, "BFu33_BFu0c_BFu1c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu1i()
{
  {
    init_simple_test("BFu33_BFu0c_BFu1i");
    static BFu33_BFu0c_BFu1i lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu0c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu1i");
    set_bf_and_test(lv, v2, 5, 0, 1, 1, "BFu33_BFu0c_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu1i(Test_BFu33_BFu0c_BFu1i, "BFu33_BFu0c_BFu1i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu1ll()
{
  {
    init_simple_test("BFu33_BFu0c_BFu1ll");
    static BFu33_BFu0c_BFu1ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu0c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu1ll");
    set_bf_and_test(lv, v2, 5, 0, 1, 1, "BFu33_BFu0c_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu1ll(Test_BFu33_BFu0c_BFu1ll, "BFu33_BFu0c_BFu1ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu1s()
{
  {
    init_simple_test("BFu33_BFu0c_BFu1s");
    static BFu33_BFu0c_BFu1s lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu0c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu1s");
    set_bf_and_test(lv, v2, 5, 0, 1, 1, "BFu33_BFu0c_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu1s(Test_BFu33_BFu0c_BFu1s, "BFu33_BFu0c_BFu1s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu31i()
{
  {
    init_simple_test("BFu33_BFu0c_BFu31i");
    static BFu33_BFu0c_BFu31i lv;
    check2(sizeof(lv), 9, "sizeof(BFu33_BFu0c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, 5, 0, 31, 1, "BFu33_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, 5, 0, 31, hide_ull(1LL<<30), "BFu33_BFu0c_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu31i(Test_BFu33_BFu0c_BFu31i, "BFu33_BFu0c_BFu31i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu31ll()
{
  {
    init_simple_test("BFu33_BFu0c_BFu31ll");
    static BFu33_BFu0c_BFu31ll lv;
    check2(sizeof(lv), 9, "sizeof(BFu33_BFu0c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, 5, 0, 31, 1, "BFu33_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, 5, 0, 31, hide_ull(1LL<<30), "BFu33_BFu0c_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu31ll(Test_BFu33_BFu0c_BFu31ll, "BFu33_BFu0c_BFu31ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu32i()
{
  {
    init_simple_test("BFu33_BFu0c_BFu32i");
    static BFu33_BFu0c_BFu32i lv;
    check2(sizeof(lv), 9, "sizeof(BFu33_BFu0c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, 5, 0, 32, 1, "BFu33_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, 5, 0, 32, hide_ull(1LL<<31), "BFu33_BFu0c_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu32i(Test_BFu33_BFu0c_BFu32i, "BFu33_BFu0c_BFu32i", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu32ll()
{
  {
    init_simple_test("BFu33_BFu0c_BFu32ll");
    static BFu33_BFu0c_BFu32ll lv;
    check2(sizeof(lv), 9, "sizeof(BFu33_BFu0c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, 5, 0, 32, 1, "BFu33_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, 5, 0, 32, hide_ull(1LL<<31), "BFu33_BFu0c_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu32ll(Test_BFu33_BFu0c_BFu32ll, "BFu33_BFu0c_BFu32ll", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu33()
{
  {
    init_simple_test("BFu33_BFu0c_BFu33");
    static BFu33_BFu0c_BFu33 lv;
    check2(sizeof(lv), 10, "sizeof(BFu33_BFu0c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu33");
    set_bf_and_test(lv, v2, 5, 0, 33, 1, "BFu33_BFu0c_BFu33");
    set_bf_and_test(lv, v2, 5, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu33");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu33(Test_BFu33_BFu0c_BFu33, "BFu33_BFu0c_BFu33", 10);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu7c()
{
  {
    init_simple_test("BFu33_BFu0c_BFu7c");
    static BFu33_BFu0c_BFu7c lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu0c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, 5, 0, 7, 1, "BFu33_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, 5, 0, 7, hide_ull(1LL<<6), "BFu33_BFu0c_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu7c(Test_BFu33_BFu0c_BFu7c, "BFu33_BFu0c_BFu7c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu7i()
{
  {
    init_simple_test("BFu33_BFu0c_BFu7i");
    static BFu33_BFu0c_BFu7i lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu0c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, 5, 0, 7, 1, "BFu33_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, 5, 0, 7, hide_ull(1LL<<6), "BFu33_BFu0c_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu7i(Test_BFu33_BFu0c_BFu7i, "BFu33_BFu0c_BFu7i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu7ll()
{
  {
    init_simple_test("BFu33_BFu0c_BFu7ll");
    static BFu33_BFu0c_BFu7ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu0c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, 5, 0, 7, 1, "BFu33_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, 5, 0, 7, hide_ull(1LL<<6), "BFu33_BFu0c_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu7ll(Test_BFu33_BFu0c_BFu7ll, "BFu33_BFu0c_BFu7ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu7s()
{
  {
    init_simple_test("BFu33_BFu0c_BFu7s");
    static BFu33_BFu0c_BFu7s lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu0c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, 5, 0, 7, 1, "BFu33_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, 5, 0, 7, hide_ull(1LL<<6), "BFu33_BFu0c_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu7s(Test_BFu33_BFu0c_BFu7s, "BFu33_BFu0c_BFu7s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu8c()
{
  {
    init_simple_test("BFu33_BFu0c_BFu8c");
    static BFu33_BFu0c_BFu8c lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu0c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, 5, 0, 8, 1, "BFu33_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, 5, 0, 8, hide_ull(1LL<<7), "BFu33_BFu0c_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu8c(Test_BFu33_BFu0c_BFu8c, "BFu33_BFu0c_BFu8c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu8i()
{
  {
    init_simple_test("BFu33_BFu0c_BFu8i");
    static BFu33_BFu0c_BFu8i lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu0c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, 5, 0, 8, 1, "BFu33_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, 5, 0, 8, hide_ull(1LL<<7), "BFu33_BFu0c_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu8i(Test_BFu33_BFu0c_BFu8i, "BFu33_BFu0c_BFu8i", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu8ll()
{
  {
    init_simple_test("BFu33_BFu0c_BFu8ll");
    static BFu33_BFu0c_BFu8ll lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu0c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, 5, 0, 8, 1, "BFu33_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, 5, 0, 8, hide_ull(1LL<<7), "BFu33_BFu0c_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu8ll(Test_BFu33_BFu0c_BFu8ll, "BFu33_BFu0c_BFu8ll", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu8s()
{
  {
    init_simple_test("BFu33_BFu0c_BFu8s");
    static BFu33_BFu0c_BFu8s lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu0c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, 5, 0, 8, 1, "BFu33_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, 5, 0, 8, hide_ull(1LL<<7), "BFu33_BFu0c_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu8s(Test_BFu33_BFu0c_BFu8s, "BFu33_BFu0c_BFu8s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu9i()
{
  {
    init_simple_test("BFu33_BFu0c_BFu9i");
    static BFu33_BFu0c_BFu9i lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_BFu0c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, 5, 0, 9, 1, "BFu33_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, 5, 0, 9, hide_ull(1LL<<8), "BFu33_BFu0c_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu9i(Test_BFu33_BFu0c_BFu9i, "BFu33_BFu0c_BFu9i", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu9ll()
{
  {
    init_simple_test("BFu33_BFu0c_BFu9ll");
    static BFu33_BFu0c_BFu9ll lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_BFu0c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, 5, 0, 9, 1, "BFu33_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, 5, 0, 9, hide_ull(1LL<<8), "BFu33_BFu0c_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu9ll(Test_BFu33_BFu0c_BFu9ll, "BFu33_BFu0c_BFu9ll", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_BFu9s()
{
  {
    init_simple_test("BFu33_BFu0c_BFu9s");
    static BFu33_BFu0c_BFu9s lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_BFu0c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, 5, 0, 9, 1, "BFu33_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, 5, 0, 9, hide_ull(1LL<<8), "BFu33_BFu0c_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_BFu9s(Test_BFu33_BFu0c_BFu9s, "BFu33_BFu0c_BFu9s", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_C()
{
  {
    init_simple_test("BFu33_BFu0c_C");
    static BFu33_BFu0c_C lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu0c_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_C)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_C");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_C");
    check_field_offset(lv, v2, 5, "BFu33_BFu0c_C.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_C(Test_BFu33_BFu0c_C, "BFu33_BFu0c_C", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_D()
{
  {
    init_simple_test("BFu33_BFu0c_D");
    static BFu33_BFu0c_D lv;
    check2(sizeof(lv), 13, "sizeof(BFu33_BFu0c_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_D)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_D");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_D");
    check_field_offset(lv, v2, 5, "BFu33_BFu0c_D.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_D(Test_BFu33_BFu0c_D, "BFu33_BFu0c_D", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_F()
{
  {
    init_simple_test("BFu33_BFu0c_F");
    static BFu33_BFu0c_F lv;
    check2(sizeof(lv), 9, "sizeof(BFu33_BFu0c_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_F)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_F");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_F");
    check_field_offset(lv, v2, 5, "BFu33_BFu0c_F.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_F(Test_BFu33_BFu0c_F, "BFu33_BFu0c_F", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_I()
{
  {
    init_simple_test("BFu33_BFu0c_I");
    static BFu33_BFu0c_I lv;
    check2(sizeof(lv), 9, "sizeof(BFu33_BFu0c_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_I)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_I");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_I");
    check_field_offset(lv, v2, 5, "BFu33_BFu0c_I.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_I(Test_BFu33_BFu0c_I, "BFu33_BFu0c_I", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_Ip()
{
  {
    init_simple_test("BFu33_BFu0c_Ip");
    static BFu33_BFu0c_Ip lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(BFu33_BFu0c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_Ip");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_Ip");
    check_field_offset(lv, v2, 5, "BFu33_BFu0c_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_Ip(Test_BFu33_BFu0c_Ip, "BFu33_BFu0c_Ip", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_L()
{
  {
    init_simple_test("BFu33_BFu0c_L");
    static BFu33_BFu0c_L lv;
    check2(sizeof(lv), 13, "sizeof(BFu33_BFu0c_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_L)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_L");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_L");
    check_field_offset(lv, v2, 5, "BFu33_BFu0c_L.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_L(Test_BFu33_BFu0c_L, "BFu33_BFu0c_L", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_S()
{
  {
    init_simple_test("BFu33_BFu0c_S");
    static BFu33_BFu0c_S lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_BFu0c_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_S)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_S");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_S");
    check_field_offset(lv, v2, 5, "BFu33_BFu0c_S.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_S(Test_BFu33_BFu0c_S, "BFu33_BFu0c_S", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_Uc()
{
  {
    init_simple_test("BFu33_BFu0c_Uc");
    static BFu33_BFu0c_Uc lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu0c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_Uc");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_Uc");
    check_field_offset(lv, v2, 5, "BFu33_BFu0c_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_Uc(Test_BFu33_BFu0c_Uc, "BFu33_BFu0c_Uc", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_Ui()
{
  {
    init_simple_test("BFu33_BFu0c_Ui");
    static BFu33_BFu0c_Ui lv;
    check2(sizeof(lv), 9, "sizeof(BFu33_BFu0c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_Ui");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_Ui");
    check_field_offset(lv, v2, 5, "BFu33_BFu0c_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_Ui(Test_BFu33_BFu0c_Ui, "BFu33_BFu0c_Ui", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_Ul()
{
  {
    init_simple_test("BFu33_BFu0c_Ul");
    static BFu33_BFu0c_Ul lv;
    check2(sizeof(lv), 13, "sizeof(BFu33_BFu0c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_Ul");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_Ul");
    check_field_offset(lv, v2, 5, "BFu33_BFu0c_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_Ul(Test_BFu33_BFu0c_Ul, "BFu33_BFu0c_Ul", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_Us()
{
  {
    init_simple_test("BFu33_BFu0c_Us");
    static BFu33_BFu0c_Us lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_BFu0c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_Us)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_Us");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_Us");
    check_field_offset(lv, v2, 5, "BFu33_BFu0c_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_Us(Test_BFu33_BFu0c_Us, "BFu33_BFu0c_Us", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0c_Vp()
{
  {
    init_simple_test("BFu33_BFu0c_Vp");
    static BFu33_BFu0c_Vp lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(BFu33_BFu0c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu0c_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0c_Vp");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0c_Vp");
    check_field_offset(lv, v2, 5, "BFu33_BFu0c_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0c_Vp(Test_BFu33_BFu0c_Vp, "BFu33_BFu0c_Vp", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i()
{
  {
    init_simple_test("BFu33_BFu0i");
    static BFu33_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i(Test_BFu33_BFu0i, "BFu33_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu0c()
{
  {
    init_simple_test("BFu33_BFu0i_BFu0c");
    static BFu33_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu0c(Test_BFu33_BFu0i_BFu0c, "BFu33_BFu0i_BFu0c", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu0i()
{
  {
    init_simple_test("BFu33_BFu0i_BFu0i");
    static BFu33_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu0i(Test_BFu33_BFu0i_BFu0i, "BFu33_BFu0i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu0i_BFu0ll");
    static BFu33_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu0ll(Test_BFu33_BFu0i_BFu0ll, "BFu33_BFu0i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu0s()
{
  {
    init_simple_test("BFu33_BFu0i_BFu0s");
    static BFu33_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu0s(Test_BFu33_BFu0i_BFu0s, "BFu33_BFu0i_BFu0s", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu15i()
{
  {
    init_simple_test("BFu33_BFu0i_BFu15i");
    static BFu33_BFu0i_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu0i_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 15, 1, "BFu33_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 15, hide_ull(1LL<<14), "BFu33_BFu0i_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu15i(Test_BFu33_BFu0i_BFu15i, "BFu33_BFu0i_BFu15i", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu15ll()
{
  {
    init_simple_test("BFu33_BFu0i_BFu15ll");
    static BFu33_BFu0i_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu0i_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 15, 1, "BFu33_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 15, hide_ull(1LL<<14), "BFu33_BFu0i_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu15ll(Test_BFu33_BFu0i_BFu15ll, "BFu33_BFu0i_BFu15ll", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu15s()
{
  {
    init_simple_test("BFu33_BFu0i_BFu15s");
    static BFu33_BFu0i_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu0i_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 15, 1, "BFu33_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 15, hide_ull(1LL<<14), "BFu33_BFu0i_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu15s(Test_BFu33_BFu0i_BFu15s, "BFu33_BFu0i_BFu15s", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu16i()
{
  {
    init_simple_test("BFu33_BFu0i_BFu16i");
    static BFu33_BFu0i_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu0i_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 16, 1, "BFu33_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 16, hide_ull(1LL<<15), "BFu33_BFu0i_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu16i(Test_BFu33_BFu0i_BFu16i, "BFu33_BFu0i_BFu16i", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu16ll()
{
  {
    init_simple_test("BFu33_BFu0i_BFu16ll");
    static BFu33_BFu0i_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu0i_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 16, 1, "BFu33_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 16, hide_ull(1LL<<15), "BFu33_BFu0i_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu16ll(Test_BFu33_BFu0i_BFu16ll, "BFu33_BFu0i_BFu16ll", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu16s()
{
  {
    init_simple_test("BFu33_BFu0i_BFu16s");
    static BFu33_BFu0i_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu0i_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 16, 1, "BFu33_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 16, hide_ull(1LL<<15), "BFu33_BFu0i_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu16s(Test_BFu33_BFu0i_BFu16s, "BFu33_BFu0i_BFu16s", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu17i()
{
  {
    init_simple_test("BFu33_BFu0i_BFu17i");
    static BFu33_BFu0i_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,11), "sizeof(BFu33_BFu0i_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 17, 1, "BFu33_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 17, hide_ull(1LL<<16), "BFu33_BFu0i_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu17i(Test_BFu33_BFu0i_BFu17i, "BFu33_BFu0i_BFu17i", ABISELECT(11,11));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu17ll()
{
  {
    init_simple_test("BFu33_BFu0i_BFu17ll");
    static BFu33_BFu0i_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,11), "sizeof(BFu33_BFu0i_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 17, 1, "BFu33_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 17, hide_ull(1LL<<16), "BFu33_BFu0i_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu17ll(Test_BFu33_BFu0i_BFu17ll, "BFu33_BFu0i_BFu17ll", ABISELECT(11,11));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu1c()
{
  {
    init_simple_test("BFu33_BFu0i_BFu1c");
    static BFu33_BFu0i_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu33_BFu0i_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 1, 1, "BFu33_BFu0i_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu1c(Test_BFu33_BFu0i_BFu1c, "BFu33_BFu0i_BFu1c", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu1i()
{
  {
    init_simple_test("BFu33_BFu0i_BFu1i");
    static BFu33_BFu0i_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu33_BFu0i_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 1, 1, "BFu33_BFu0i_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu1i(Test_BFu33_BFu0i_BFu1i, "BFu33_BFu0i_BFu1i", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu1ll()
{
  {
    init_simple_test("BFu33_BFu0i_BFu1ll");
    static BFu33_BFu0i_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu33_BFu0i_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 1, 1, "BFu33_BFu0i_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu1ll(Test_BFu33_BFu0i_BFu1ll, "BFu33_BFu0i_BFu1ll", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu1s()
{
  {
    init_simple_test("BFu33_BFu0i_BFu1s");
    static BFu33_BFu0i_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu33_BFu0i_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 1, 1, "BFu33_BFu0i_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu1s(Test_BFu33_BFu0i_BFu1s, "BFu33_BFu0i_BFu1s", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu31i()
{
  {
    init_simple_test("BFu33_BFu0i_BFu31i");
    static BFu33_BFu0i_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu33_BFu0i_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 31, 1, "BFu33_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 31, hide_ull(1LL<<30), "BFu33_BFu0i_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu31i(Test_BFu33_BFu0i_BFu31i, "BFu33_BFu0i_BFu31i", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu31ll()
{
  {
    init_simple_test("BFu33_BFu0i_BFu31ll");
    static BFu33_BFu0i_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu33_BFu0i_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 31, 1, "BFu33_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 31, hide_ull(1LL<<30), "BFu33_BFu0i_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu31ll(Test_BFu33_BFu0i_BFu31ll, "BFu33_BFu0i_BFu31ll", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu32i()
{
  {
    init_simple_test("BFu33_BFu0i_BFu32i");
    static BFu33_BFu0i_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu33_BFu0i_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 32, 1, "BFu33_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 32, hide_ull(1LL<<31), "BFu33_BFu0i_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu32i(Test_BFu33_BFu0i_BFu32i, "BFu33_BFu0i_BFu32i", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu32ll()
{
  {
    init_simple_test("BFu33_BFu0i_BFu32ll");
    static BFu33_BFu0i_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu33_BFu0i_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 32, 1, "BFu33_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 32, hide_ull(1LL<<31), "BFu33_BFu0i_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu32ll(Test_BFu33_BFu0i_BFu32ll, "BFu33_BFu0i_BFu32ll", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu33()
{
  {
    init_simple_test("BFu33_BFu0i_BFu33");
    static BFu33_BFu0i_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,13), "sizeof(BFu33_BFu0i_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 33, 1, "BFu33_BFu0i_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu33");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu33(Test_BFu33_BFu0i_BFu33, "BFu33_BFu0i_BFu33", ABISELECT(13,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu7c()
{
  {
    init_simple_test("BFu33_BFu0i_BFu7c");
    static BFu33_BFu0i_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu33_BFu0i_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 7, 1, "BFu33_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 7, hide_ull(1LL<<6), "BFu33_BFu0i_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu7c(Test_BFu33_BFu0i_BFu7c, "BFu33_BFu0i_BFu7c", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu7i()
{
  {
    init_simple_test("BFu33_BFu0i_BFu7i");
    static BFu33_BFu0i_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu33_BFu0i_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 7, 1, "BFu33_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 7, hide_ull(1LL<<6), "BFu33_BFu0i_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu7i(Test_BFu33_BFu0i_BFu7i, "BFu33_BFu0i_BFu7i", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu7ll()
{
  {
    init_simple_test("BFu33_BFu0i_BFu7ll");
    static BFu33_BFu0i_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu33_BFu0i_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 7, 1, "BFu33_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 7, hide_ull(1LL<<6), "BFu33_BFu0i_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu7ll(Test_BFu33_BFu0i_BFu7ll, "BFu33_BFu0i_BFu7ll", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu7s()
{
  {
    init_simple_test("BFu33_BFu0i_BFu7s");
    static BFu33_BFu0i_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu33_BFu0i_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 7, 1, "BFu33_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 7, hide_ull(1LL<<6), "BFu33_BFu0i_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu7s(Test_BFu33_BFu0i_BFu7s, "BFu33_BFu0i_BFu7s", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu8c()
{
  {
    init_simple_test("BFu33_BFu0i_BFu8c");
    static BFu33_BFu0i_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu33_BFu0i_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 8, 1, "BFu33_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 8, hide_ull(1LL<<7), "BFu33_BFu0i_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu8c(Test_BFu33_BFu0i_BFu8c, "BFu33_BFu0i_BFu8c", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu8i()
{
  {
    init_simple_test("BFu33_BFu0i_BFu8i");
    static BFu33_BFu0i_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu33_BFu0i_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 8, 1, "BFu33_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 8, hide_ull(1LL<<7), "BFu33_BFu0i_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu8i(Test_BFu33_BFu0i_BFu8i, "BFu33_BFu0i_BFu8i", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu8ll()
{
  {
    init_simple_test("BFu33_BFu0i_BFu8ll");
    static BFu33_BFu0i_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu33_BFu0i_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 8, 1, "BFu33_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 8, hide_ull(1LL<<7), "BFu33_BFu0i_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu8ll(Test_BFu33_BFu0i_BFu8ll, "BFu33_BFu0i_BFu8ll", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu8s()
{
  {
    init_simple_test("BFu33_BFu0i_BFu8s");
    static BFu33_BFu0i_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu33_BFu0i_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 8, 1, "BFu33_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 8, hide_ull(1LL<<7), "BFu33_BFu0i_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu8s(Test_BFu33_BFu0i_BFu8s, "BFu33_BFu0i_BFu8s", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu9i()
{
  {
    init_simple_test("BFu33_BFu0i_BFu9i");
    static BFu33_BFu0i_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu0i_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 9, 1, "BFu33_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 9, hide_ull(1LL<<8), "BFu33_BFu0i_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu9i(Test_BFu33_BFu0i_BFu9i, "BFu33_BFu0i_BFu9i", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu9ll()
{
  {
    init_simple_test("BFu33_BFu0i_BFu9ll");
    static BFu33_BFu0i_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu0i_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 9, 1, "BFu33_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 9, hide_ull(1LL<<8), "BFu33_BFu0i_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu9ll(Test_BFu33_BFu0i_BFu9ll, "BFu33_BFu0i_BFu9ll", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_BFu9s()
{
  {
    init_simple_test("BFu33_BFu0i_BFu9s");
    static BFu33_BFu0i_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu0i_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 9, 1, "BFu33_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 9, hide_ull(1LL<<8), "BFu33_BFu0i_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_BFu9s(Test_BFu33_BFu0i_BFu9s, "BFu33_BFu0i_BFu9s", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_C()
{
  {
    init_simple_test("BFu33_BFu0i_C");
    static BFu33_BFu0i_C lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu33_BFu0i_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_C)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_C");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_C");
    check_field_offset(lv, v2, ABISELECT(8,8), "BFu33_BFu0i_C.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_C(Test_BFu33_BFu0i_C, "BFu33_BFu0i_C", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_D()
{
  {
    init_simple_test("BFu33_BFu0i_D");
    static BFu33_BFu0i_D lv;
    check2(sizeof(lv), ABISELECT(16,16), "sizeof(BFu33_BFu0i_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_D)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_D");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_D");
    check_field_offset(lv, v2, ABISELECT(8,8), "BFu33_BFu0i_D.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_D(Test_BFu33_BFu0i_D, "BFu33_BFu0i_D", ABISELECT(16,16));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_F()
{
  {
    init_simple_test("BFu33_BFu0i_F");
    static BFu33_BFu0i_F lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu33_BFu0i_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_F)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_F");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_F");
    check_field_offset(lv, v2, ABISELECT(8,8), "BFu33_BFu0i_F.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_F(Test_BFu33_BFu0i_F, "BFu33_BFu0i_F", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_I()
{
  {
    init_simple_test("BFu33_BFu0i_I");
    static BFu33_BFu0i_I lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu33_BFu0i_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_I)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_I");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_I");
    check_field_offset(lv, v2, ABISELECT(8,8), "BFu33_BFu0i_I.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_I(Test_BFu33_BFu0i_I, "BFu33_BFu0i_I", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_Ip()
{
  {
    init_simple_test("BFu33_BFu0i_Ip");
    static BFu33_BFu0i_Ip lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu33_BFu0i_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_Ip");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_Ip");
    check_field_offset(lv, v2, ABISELECT(8,8), "BFu33_BFu0i_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_Ip(Test_BFu33_BFu0i_Ip, "BFu33_BFu0i_Ip", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_L()
{
  {
    init_simple_test("BFu33_BFu0i_L");
    static BFu33_BFu0i_L lv;
    check2(sizeof(lv), ABISELECT(16,16), "sizeof(BFu33_BFu0i_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_L)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_L");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_L");
    check_field_offset(lv, v2, ABISELECT(8,8), "BFu33_BFu0i_L.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_L(Test_BFu33_BFu0i_L, "BFu33_BFu0i_L", ABISELECT(16,16));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_S()
{
  {
    init_simple_test("BFu33_BFu0i_S");
    static BFu33_BFu0i_S lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu0i_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_S)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_S");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_S");
    check_field_offset(lv, v2, ABISELECT(8,8), "BFu33_BFu0i_S.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_S(Test_BFu33_BFu0i_S, "BFu33_BFu0i_S", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_Uc()
{
  {
    init_simple_test("BFu33_BFu0i_Uc");
    static BFu33_BFu0i_Uc lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu33_BFu0i_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_Uc");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_Uc");
    check_field_offset(lv, v2, ABISELECT(8,8), "BFu33_BFu0i_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_Uc(Test_BFu33_BFu0i_Uc, "BFu33_BFu0i_Uc", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_Ui()
{
  {
    init_simple_test("BFu33_BFu0i_Ui");
    static BFu33_BFu0i_Ui lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu33_BFu0i_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_Ui");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_Ui");
    check_field_offset(lv, v2, ABISELECT(8,8), "BFu33_BFu0i_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_Ui(Test_BFu33_BFu0i_Ui, "BFu33_BFu0i_Ui", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_Ul()
{
  {
    init_simple_test("BFu33_BFu0i_Ul");
    static BFu33_BFu0i_Ul lv;
    check2(sizeof(lv), ABISELECT(16,16), "sizeof(BFu33_BFu0i_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_Ul");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_Ul");
    check_field_offset(lv, v2, ABISELECT(8,8), "BFu33_BFu0i_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_Ul(Test_BFu33_BFu0i_Ul, "BFu33_BFu0i_Ul", ABISELECT(16,16));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_Us()
{
  {
    init_simple_test("BFu33_BFu0i_Us");
    static BFu33_BFu0i_Us lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu0i_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_Us)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_Us");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_Us");
    check_field_offset(lv, v2, ABISELECT(8,8), "BFu33_BFu0i_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_Us(Test_BFu33_BFu0i_Us, "BFu33_BFu0i_Us", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0i_Vp()
{
  {
    init_simple_test("BFu33_BFu0i_Vp");
    static BFu33_BFu0i_Vp lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu33_BFu0i_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0i_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0i_Vp");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0i_Vp");
    check_field_offset(lv, v2, ABISELECT(8,8), "BFu33_BFu0i_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0i_Vp(Test_BFu33_BFu0i_Vp, "BFu33_BFu0i_Vp", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu0ll");
    static BFu33_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll(Test_BFu33_BFu0ll, "BFu33_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu0c");
    static BFu33_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu0c(Test_BFu33_BFu0ll_BFu0c, "BFu33_BFu0ll_BFu0c", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu0i");
    static BFu33_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu0i(Test_BFu33_BFu0ll_BFu0i, "BFu33_BFu0ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu0ll");
    static BFu33_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu0ll(Test_BFu33_BFu0ll_BFu0ll, "BFu33_BFu0ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu0s");
    static BFu33_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu0s(Test_BFu33_BFu0ll_BFu0s, "BFu33_BFu0ll_BFu0s", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu15i()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu15i");
    static BFu33_BFu0ll_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu0ll_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 15, 1, "BFu33_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 15, hide_ull(1LL<<14), "BFu33_BFu0ll_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu15i(Test_BFu33_BFu0ll_BFu15i, "BFu33_BFu0ll_BFu15i", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu15ll()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu15ll");
    static BFu33_BFu0ll_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu0ll_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 15, 1, "BFu33_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 15, hide_ull(1LL<<14), "BFu33_BFu0ll_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu15ll(Test_BFu33_BFu0ll_BFu15ll, "BFu33_BFu0ll_BFu15ll", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu15s()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu15s");
    static BFu33_BFu0ll_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu0ll_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 15, 1, "BFu33_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 15, hide_ull(1LL<<14), "BFu33_BFu0ll_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu15s(Test_BFu33_BFu0ll_BFu15s, "BFu33_BFu0ll_BFu15s", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu16i()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu16i");
    static BFu33_BFu0ll_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu0ll_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 16, 1, "BFu33_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 16, hide_ull(1LL<<15), "BFu33_BFu0ll_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu16i(Test_BFu33_BFu0ll_BFu16i, "BFu33_BFu0ll_BFu16i", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu16ll()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu16ll");
    static BFu33_BFu0ll_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu0ll_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 16, 1, "BFu33_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 16, hide_ull(1LL<<15), "BFu33_BFu0ll_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu16ll(Test_BFu33_BFu0ll_BFu16ll, "BFu33_BFu0ll_BFu16ll", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu16s()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu16s");
    static BFu33_BFu0ll_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu0ll_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 16, 1, "BFu33_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 16, hide_ull(1LL<<15), "BFu33_BFu0ll_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu16s(Test_BFu33_BFu0ll_BFu16s, "BFu33_BFu0ll_BFu16s", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu17i()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu17i");
    static BFu33_BFu0ll_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,11), "sizeof(BFu33_BFu0ll_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 17, 1, "BFu33_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 17, hide_ull(1LL<<16), "BFu33_BFu0ll_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu17i(Test_BFu33_BFu0ll_BFu17i, "BFu33_BFu0ll_BFu17i", ABISELECT(11,11));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu17ll()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu17ll");
    static BFu33_BFu0ll_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,11), "sizeof(BFu33_BFu0ll_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 17, 1, "BFu33_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 17, hide_ull(1LL<<16), "BFu33_BFu0ll_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu17ll(Test_BFu33_BFu0ll_BFu17ll, "BFu33_BFu0ll_BFu17ll", ABISELECT(11,11));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu1c()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu1c");
    static BFu33_BFu0ll_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu33_BFu0ll_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 1, 1, "BFu33_BFu0ll_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu1c(Test_BFu33_BFu0ll_BFu1c, "BFu33_BFu0ll_BFu1c", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu1i()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu1i");
    static BFu33_BFu0ll_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu33_BFu0ll_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 1, 1, "BFu33_BFu0ll_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu1i(Test_BFu33_BFu0ll_BFu1i, "BFu33_BFu0ll_BFu1i", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu1ll()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu1ll");
    static BFu33_BFu0ll_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu33_BFu0ll_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 1, 1, "BFu33_BFu0ll_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu1ll(Test_BFu33_BFu0ll_BFu1ll, "BFu33_BFu0ll_BFu1ll", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu1s()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu1s");
    static BFu33_BFu0ll_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu33_BFu0ll_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 1, 1, "BFu33_BFu0ll_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu1s(Test_BFu33_BFu0ll_BFu1s, "BFu33_BFu0ll_BFu1s", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu31i()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu31i");
    static BFu33_BFu0ll_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu33_BFu0ll_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 31, 1, "BFu33_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 31, hide_ull(1LL<<30), "BFu33_BFu0ll_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu31i(Test_BFu33_BFu0ll_BFu31i, "BFu33_BFu0ll_BFu31i", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu31ll()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu31ll");
    static BFu33_BFu0ll_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu33_BFu0ll_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 31, 1, "BFu33_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 31, hide_ull(1LL<<30), "BFu33_BFu0ll_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu31ll(Test_BFu33_BFu0ll_BFu31ll, "BFu33_BFu0ll_BFu31ll", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu32i()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu32i");
    static BFu33_BFu0ll_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu33_BFu0ll_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 32, 1, "BFu33_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 32, hide_ull(1LL<<31), "BFu33_BFu0ll_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu32i(Test_BFu33_BFu0ll_BFu32i, "BFu33_BFu0ll_BFu32i", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu32ll()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu32ll");
    static BFu33_BFu0ll_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu33_BFu0ll_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 32, 1, "BFu33_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 32, hide_ull(1LL<<31), "BFu33_BFu0ll_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu32ll(Test_BFu33_BFu0ll_BFu32ll, "BFu33_BFu0ll_BFu32ll", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu33()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu33");
    static BFu33_BFu0ll_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,13), "sizeof(BFu33_BFu0ll_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 33, 1, "BFu33_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu33");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu33(Test_BFu33_BFu0ll_BFu33, "BFu33_BFu0ll_BFu33", ABISELECT(13,13));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu7c()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu7c");
    static BFu33_BFu0ll_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu33_BFu0ll_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 7, 1, "BFu33_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 7, hide_ull(1LL<<6), "BFu33_BFu0ll_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu7c(Test_BFu33_BFu0ll_BFu7c, "BFu33_BFu0ll_BFu7c", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu7i()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu7i");
    static BFu33_BFu0ll_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu33_BFu0ll_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 7, 1, "BFu33_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 7, hide_ull(1LL<<6), "BFu33_BFu0ll_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu7i(Test_BFu33_BFu0ll_BFu7i, "BFu33_BFu0ll_BFu7i", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu7ll()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu7ll");
    static BFu33_BFu0ll_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu33_BFu0ll_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 7, 1, "BFu33_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 7, hide_ull(1LL<<6), "BFu33_BFu0ll_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu7ll(Test_BFu33_BFu0ll_BFu7ll, "BFu33_BFu0ll_BFu7ll", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu7s()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu7s");
    static BFu33_BFu0ll_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu33_BFu0ll_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 7, 1, "BFu33_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 7, hide_ull(1LL<<6), "BFu33_BFu0ll_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu7s(Test_BFu33_BFu0ll_BFu7s, "BFu33_BFu0ll_BFu7s", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu8c()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu8c");
    static BFu33_BFu0ll_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu33_BFu0ll_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 8, 1, "BFu33_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 8, hide_ull(1LL<<7), "BFu33_BFu0ll_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu8c(Test_BFu33_BFu0ll_BFu8c, "BFu33_BFu0ll_BFu8c", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu8i()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu8i");
    static BFu33_BFu0ll_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu33_BFu0ll_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 8, 1, "BFu33_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 8, hide_ull(1LL<<7), "BFu33_BFu0ll_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu8i(Test_BFu33_BFu0ll_BFu8i, "BFu33_BFu0ll_BFu8i", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu8ll()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu8ll");
    static BFu33_BFu0ll_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu33_BFu0ll_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 8, 1, "BFu33_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 8, hide_ull(1LL<<7), "BFu33_BFu0ll_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu8ll(Test_BFu33_BFu0ll_BFu8ll, "BFu33_BFu0ll_BFu8ll", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu8s()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu8s");
    static BFu33_BFu0ll_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu33_BFu0ll_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 8, 1, "BFu33_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 8, hide_ull(1LL<<7), "BFu33_BFu0ll_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu8s(Test_BFu33_BFu0ll_BFu8s, "BFu33_BFu0ll_BFu8s", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu9i()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu9i");
    static BFu33_BFu0ll_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu0ll_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 9, 1, "BFu33_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 9, hide_ull(1LL<<8), "BFu33_BFu0ll_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu9i(Test_BFu33_BFu0ll_BFu9i, "BFu33_BFu0ll_BFu9i", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu9ll()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu9ll");
    static BFu33_BFu0ll_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu0ll_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 9, 1, "BFu33_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 9, hide_ull(1LL<<8), "BFu33_BFu0ll_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu9ll(Test_BFu33_BFu0ll_BFu9ll, "BFu33_BFu0ll_BFu9ll", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_BFu9s()
{
  {
    init_simple_test("BFu33_BFu0ll_BFu9s");
    static BFu33_BFu0ll_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu0ll_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 9, 1, "BFu33_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,8), 0, 9, hide_ull(1LL<<8), "BFu33_BFu0ll_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_BFu9s(Test_BFu33_BFu0ll_BFu9s, "BFu33_BFu0ll_BFu9s", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_C()
{
  {
    init_simple_test("BFu33_BFu0ll_C");
    static BFu33_BFu0ll_C lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu33_BFu0ll_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_C)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_C");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_C");
    check_field_offset(lv, v2, ABISELECT(8,8), "BFu33_BFu0ll_C.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_C(Test_BFu33_BFu0ll_C, "BFu33_BFu0ll_C", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_D()
{
  {
    init_simple_test("BFu33_BFu0ll_D");
    static BFu33_BFu0ll_D lv;
    check2(sizeof(lv), ABISELECT(16,16), "sizeof(BFu33_BFu0ll_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_D)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_D");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_D");
    check_field_offset(lv, v2, ABISELECT(8,8), "BFu33_BFu0ll_D.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_D(Test_BFu33_BFu0ll_D, "BFu33_BFu0ll_D", ABISELECT(16,16));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_F()
{
  {
    init_simple_test("BFu33_BFu0ll_F");
    static BFu33_BFu0ll_F lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu33_BFu0ll_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_F)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_F");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_F");
    check_field_offset(lv, v2, ABISELECT(8,8), "BFu33_BFu0ll_F.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_F(Test_BFu33_BFu0ll_F, "BFu33_BFu0ll_F", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_I()
{
  {
    init_simple_test("BFu33_BFu0ll_I");
    static BFu33_BFu0ll_I lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu33_BFu0ll_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_I)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_I");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_I");
    check_field_offset(lv, v2, ABISELECT(8,8), "BFu33_BFu0ll_I.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_I(Test_BFu33_BFu0ll_I, "BFu33_BFu0ll_I", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_Ip()
{
  {
    init_simple_test("BFu33_BFu0ll_Ip");
    static BFu33_BFu0ll_Ip lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu33_BFu0ll_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_Ip");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_Ip");
    check_field_offset(lv, v2, ABISELECT(8,8), "BFu33_BFu0ll_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_Ip(Test_BFu33_BFu0ll_Ip, "BFu33_BFu0ll_Ip", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_L()
{
  {
    init_simple_test("BFu33_BFu0ll_L");
    static BFu33_BFu0ll_L lv;
    check2(sizeof(lv), ABISELECT(16,16), "sizeof(BFu33_BFu0ll_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_L)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_L");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_L");
    check_field_offset(lv, v2, ABISELECT(8,8), "BFu33_BFu0ll_L.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_L(Test_BFu33_BFu0ll_L, "BFu33_BFu0ll_L", ABISELECT(16,16));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_S()
{
  {
    init_simple_test("BFu33_BFu0ll_S");
    static BFu33_BFu0ll_S lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu0ll_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_S)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_S");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_S");
    check_field_offset(lv, v2, ABISELECT(8,8), "BFu33_BFu0ll_S.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_S(Test_BFu33_BFu0ll_S, "BFu33_BFu0ll_S", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_Uc()
{
  {
    init_simple_test("BFu33_BFu0ll_Uc");
    static BFu33_BFu0ll_Uc lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu33_BFu0ll_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_Uc");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_Uc");
    check_field_offset(lv, v2, ABISELECT(8,8), "BFu33_BFu0ll_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_Uc(Test_BFu33_BFu0ll_Uc, "BFu33_BFu0ll_Uc", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_Ui()
{
  {
    init_simple_test("BFu33_BFu0ll_Ui");
    static BFu33_BFu0ll_Ui lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu33_BFu0ll_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_Ui");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_Ui");
    check_field_offset(lv, v2, ABISELECT(8,8), "BFu33_BFu0ll_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_Ui(Test_BFu33_BFu0ll_Ui, "BFu33_BFu0ll_Ui", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_Ul()
{
  {
    init_simple_test("BFu33_BFu0ll_Ul");
    static BFu33_BFu0ll_Ul lv;
    check2(sizeof(lv), ABISELECT(16,16), "sizeof(BFu33_BFu0ll_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_Ul");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_Ul");
    check_field_offset(lv, v2, ABISELECT(8,8), "BFu33_BFu0ll_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_Ul(Test_BFu33_BFu0ll_Ul, "BFu33_BFu0ll_Ul", ABISELECT(16,16));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_Us()
{
  {
    init_simple_test("BFu33_BFu0ll_Us");
    static BFu33_BFu0ll_Us lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu0ll_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_Us)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_Us");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_Us");
    check_field_offset(lv, v2, ABISELECT(8,8), "BFu33_BFu0ll_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_Us(Test_BFu33_BFu0ll_Us, "BFu33_BFu0ll_Us", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0ll_Vp()
{
  {
    init_simple_test("BFu33_BFu0ll_Vp");
    static BFu33_BFu0ll_Vp lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu33_BFu0ll_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0ll_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0ll_Vp");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0ll_Vp");
    check_field_offset(lv, v2, ABISELECT(8,8), "BFu33_BFu0ll_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0ll_Vp(Test_BFu33_BFu0ll_Vp, "BFu33_BFu0ll_Vp", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s()
{
  {
    init_simple_test("BFu33_BFu0s");
    static BFu33_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu33_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s(Test_BFu33_BFu0s, "BFu33_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu0c()
{
  {
    init_simple_test("BFu33_BFu0s_BFu0c");
    static BFu33_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu33_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu0c(Test_BFu33_BFu0s_BFu0c, "BFu33_BFu0s_BFu0c", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu0i()
{
  {
    init_simple_test("BFu33_BFu0s_BFu0i");
    static BFu33_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu0i(Test_BFu33_BFu0s_BFu0i, "BFu33_BFu0s_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu0s_BFu0ll");
    static BFu33_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu0ll(Test_BFu33_BFu0s_BFu0ll, "BFu33_BFu0s_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu0s()
{
  {
    init_simple_test("BFu33_BFu0s_BFu0s");
    static BFu33_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu33_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu0s(Test_BFu33_BFu0s_BFu0s, "BFu33_BFu0s_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu15i()
{
  {
    init_simple_test("BFu33_BFu0s_BFu15i");
    static BFu33_BFu0s_BFu15i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu0s_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 15, 1, "BFu33_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 15, hide_ull(1LL<<14), "BFu33_BFu0s_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu15i(Test_BFu33_BFu0s_BFu15i, "BFu33_BFu0s_BFu15i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu15ll()
{
  {
    init_simple_test("BFu33_BFu0s_BFu15ll");
    static BFu33_BFu0s_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu0s_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 15, 1, "BFu33_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 15, hide_ull(1LL<<14), "BFu33_BFu0s_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu15ll(Test_BFu33_BFu0s_BFu15ll, "BFu33_BFu0s_BFu15ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu15s()
{
  {
    init_simple_test("BFu33_BFu0s_BFu15s");
    static BFu33_BFu0s_BFu15s lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu0s_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 15, 1, "BFu33_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 15, hide_ull(1LL<<14), "BFu33_BFu0s_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu15s(Test_BFu33_BFu0s_BFu15s, "BFu33_BFu0s_BFu15s", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu16i()
{
  {
    init_simple_test("BFu33_BFu0s_BFu16i");
    static BFu33_BFu0s_BFu16i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu0s_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 16, 1, "BFu33_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 16, hide_ull(1LL<<15), "BFu33_BFu0s_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu16i(Test_BFu33_BFu0s_BFu16i, "BFu33_BFu0s_BFu16i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu16ll()
{
  {
    init_simple_test("BFu33_BFu0s_BFu16ll");
    static BFu33_BFu0s_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu0s_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 16, 1, "BFu33_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 16, hide_ull(1LL<<15), "BFu33_BFu0s_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu16ll(Test_BFu33_BFu0s_BFu16ll, "BFu33_BFu0s_BFu16ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu16s()
{
  {
    init_simple_test("BFu33_BFu0s_BFu16s");
    static BFu33_BFu0s_BFu16s lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu0s_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 16, 1, "BFu33_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 16, hide_ull(1LL<<15), "BFu33_BFu0s_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu16s(Test_BFu33_BFu0s_BFu16s, "BFu33_BFu0s_BFu16s", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu17i()
{
  {
    init_simple_test("BFu33_BFu0s_BFu17i");
    static BFu33_BFu0s_BFu17i lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu33_BFu0s_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 17, 1, "BFu33_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 17, hide_ull(1LL<<16), "BFu33_BFu0s_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu17i(Test_BFu33_BFu0s_BFu17i, "BFu33_BFu0s_BFu17i", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu17ll()
{
  {
    init_simple_test("BFu33_BFu0s_BFu17ll");
    static BFu33_BFu0s_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu33_BFu0s_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 17, 1, "BFu33_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 17, hide_ull(1LL<<16), "BFu33_BFu0s_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu17ll(Test_BFu33_BFu0s_BFu17ll, "BFu33_BFu0s_BFu17ll", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu1c()
{
  {
    init_simple_test("BFu33_BFu0s_BFu1c");
    static BFu33_BFu0s_BFu1c lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu33_BFu0s_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 1, 1, "BFu33_BFu0s_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu1c(Test_BFu33_BFu0s_BFu1c, "BFu33_BFu0s_BFu1c", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu1i()
{
  {
    init_simple_test("BFu33_BFu0s_BFu1i");
    static BFu33_BFu0s_BFu1i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu33_BFu0s_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 1, 1, "BFu33_BFu0s_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu1i(Test_BFu33_BFu0s_BFu1i, "BFu33_BFu0s_BFu1i", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu1ll()
{
  {
    init_simple_test("BFu33_BFu0s_BFu1ll");
    static BFu33_BFu0s_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu33_BFu0s_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 1, 1, "BFu33_BFu0s_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu1ll(Test_BFu33_BFu0s_BFu1ll, "BFu33_BFu0s_BFu1ll", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu1s()
{
  {
    init_simple_test("BFu33_BFu0s_BFu1s");
    static BFu33_BFu0s_BFu1s lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu33_BFu0s_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 1, 1, "BFu33_BFu0s_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu1s(Test_BFu33_BFu0s_BFu1s, "BFu33_BFu0s_BFu1s", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu31i()
{
  {
    init_simple_test("BFu33_BFu0s_BFu31i");
    static BFu33_BFu0s_BFu31i lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu0s_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 31, 1, "BFu33_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 31, hide_ull(1LL<<30), "BFu33_BFu0s_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu31i(Test_BFu33_BFu0s_BFu31i, "BFu33_BFu0s_BFu31i", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu31ll()
{
  {
    init_simple_test("BFu33_BFu0s_BFu31ll");
    static BFu33_BFu0s_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu0s_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 31, 1, "BFu33_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 31, hide_ull(1LL<<30), "BFu33_BFu0s_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu31ll(Test_BFu33_BFu0s_BFu31ll, "BFu33_BFu0s_BFu31ll", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu32i()
{
  {
    init_simple_test("BFu33_BFu0s_BFu32i");
    static BFu33_BFu0s_BFu32i lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu0s_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 32, 1, "BFu33_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 32, hide_ull(1LL<<31), "BFu33_BFu0s_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu32i(Test_BFu33_BFu0s_BFu32i, "BFu33_BFu0s_BFu32i", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu32ll()
{
  {
    init_simple_test("BFu33_BFu0s_BFu32ll");
    static BFu33_BFu0s_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu0s_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 32, 1, "BFu33_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 32, hide_ull(1LL<<31), "BFu33_BFu0s_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu32ll(Test_BFu33_BFu0s_BFu32ll, "BFu33_BFu0s_BFu32ll", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu33()
{
  {
    init_simple_test("BFu33_BFu0s_BFu33");
    static BFu33_BFu0s_BFu33 lv;
    check2(sizeof(lv), ABISELECT(11,11), "sizeof(BFu33_BFu0s_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 33, 1, "BFu33_BFu0s_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu33");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu33(Test_BFu33_BFu0s_BFu33, "BFu33_BFu0s_BFu33", ABISELECT(11,11));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu7c()
{
  {
    init_simple_test("BFu33_BFu0s_BFu7c");
    static BFu33_BFu0s_BFu7c lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu33_BFu0s_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 7, 1, "BFu33_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 7, hide_ull(1LL<<6), "BFu33_BFu0s_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu7c(Test_BFu33_BFu0s_BFu7c, "BFu33_BFu0s_BFu7c", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu7i()
{
  {
    init_simple_test("BFu33_BFu0s_BFu7i");
    static BFu33_BFu0s_BFu7i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu33_BFu0s_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 7, 1, "BFu33_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 7, hide_ull(1LL<<6), "BFu33_BFu0s_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu7i(Test_BFu33_BFu0s_BFu7i, "BFu33_BFu0s_BFu7i", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu7ll()
{
  {
    init_simple_test("BFu33_BFu0s_BFu7ll");
    static BFu33_BFu0s_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu33_BFu0s_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 7, 1, "BFu33_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 7, hide_ull(1LL<<6), "BFu33_BFu0s_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu7ll(Test_BFu33_BFu0s_BFu7ll, "BFu33_BFu0s_BFu7ll", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu7s()
{
  {
    init_simple_test("BFu33_BFu0s_BFu7s");
    static BFu33_BFu0s_BFu7s lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu33_BFu0s_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 7, 1, "BFu33_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 7, hide_ull(1LL<<6), "BFu33_BFu0s_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu7s(Test_BFu33_BFu0s_BFu7s, "BFu33_BFu0s_BFu7s", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu8c()
{
  {
    init_simple_test("BFu33_BFu0s_BFu8c");
    static BFu33_BFu0s_BFu8c lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu33_BFu0s_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 8, 1, "BFu33_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 8, hide_ull(1LL<<7), "BFu33_BFu0s_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu8c(Test_BFu33_BFu0s_BFu8c, "BFu33_BFu0s_BFu8c", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu8i()
{
  {
    init_simple_test("BFu33_BFu0s_BFu8i");
    static BFu33_BFu0s_BFu8i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu33_BFu0s_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 8, 1, "BFu33_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 8, hide_ull(1LL<<7), "BFu33_BFu0s_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu8i(Test_BFu33_BFu0s_BFu8i, "BFu33_BFu0s_BFu8i", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu8ll()
{
  {
    init_simple_test("BFu33_BFu0s_BFu8ll");
    static BFu33_BFu0s_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu33_BFu0s_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 8, 1, "BFu33_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 8, hide_ull(1LL<<7), "BFu33_BFu0s_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu8ll(Test_BFu33_BFu0s_BFu8ll, "BFu33_BFu0s_BFu8ll", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu8s()
{
  {
    init_simple_test("BFu33_BFu0s_BFu8s");
    static BFu33_BFu0s_BFu8s lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu33_BFu0s_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 8, 1, "BFu33_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 8, hide_ull(1LL<<7), "BFu33_BFu0s_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu8s(Test_BFu33_BFu0s_BFu8s, "BFu33_BFu0s_BFu8s", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu9i()
{
  {
    init_simple_test("BFu33_BFu0s_BFu9i");
    static BFu33_BFu0s_BFu9i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu0s_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 9, 1, "BFu33_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 9, hide_ull(1LL<<8), "BFu33_BFu0s_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu9i(Test_BFu33_BFu0s_BFu9i, "BFu33_BFu0s_BFu9i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu9ll()
{
  {
    init_simple_test("BFu33_BFu0s_BFu9ll");
    static BFu33_BFu0s_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu0s_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 9, 1, "BFu33_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 9, hide_ull(1LL<<8), "BFu33_BFu0s_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu9ll(Test_BFu33_BFu0s_BFu9ll, "BFu33_BFu0s_BFu9ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_BFu9s()
{
  {
    init_simple_test("BFu33_BFu0s_BFu9s");
    static BFu33_BFu0s_BFu9s lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu0s_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 9, 1, "BFu33_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(6,6), 0, 9, hide_ull(1LL<<8), "BFu33_BFu0s_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_BFu9s(Test_BFu33_BFu0s_BFu9s, "BFu33_BFu0s_BFu9s", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_C()
{
  {
    init_simple_test("BFu33_BFu0s_C");
    static BFu33_BFu0s_C lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu33_BFu0s_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_C)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_C");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_C");
    check_field_offset(lv, v2, ABISELECT(6,6), "BFu33_BFu0s_C.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_C(Test_BFu33_BFu0s_C, "BFu33_BFu0s_C", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_D()
{
  {
    init_simple_test("BFu33_BFu0s_D");
    static BFu33_BFu0s_D lv;
    check2(sizeof(lv), ABISELECT(14,14), "sizeof(BFu33_BFu0s_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_D)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_D");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_D");
    check_field_offset(lv, v2, ABISELECT(6,6), "BFu33_BFu0s_D.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_D(Test_BFu33_BFu0s_D, "BFu33_BFu0s_D", ABISELECT(14,14));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_F()
{
  {
    init_simple_test("BFu33_BFu0s_F");
    static BFu33_BFu0s_F lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu0s_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_F)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_F");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_F");
    check_field_offset(lv, v2, ABISELECT(6,6), "BFu33_BFu0s_F.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_F(Test_BFu33_BFu0s_F, "BFu33_BFu0s_F", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_I()
{
  {
    init_simple_test("BFu33_BFu0s_I");
    static BFu33_BFu0s_I lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu0s_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_I)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_I");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_I");
    check_field_offset(lv, v2, ABISELECT(6,6), "BFu33_BFu0s_I.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_I(Test_BFu33_BFu0s_I, "BFu33_BFu0s_I", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_Ip()
{
  {
    init_simple_test("BFu33_BFu0s_Ip");
    static BFu33_BFu0s_Ip lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(BFu33_BFu0s_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_Ip");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_Ip");
    check_field_offset(lv, v2, ABISELECT(6,6), "BFu33_BFu0s_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_Ip(Test_BFu33_BFu0s_Ip, "BFu33_BFu0s_Ip", ABISELECT(14,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_L()
{
  {
    init_simple_test("BFu33_BFu0s_L");
    static BFu33_BFu0s_L lv;
    check2(sizeof(lv), ABISELECT(14,14), "sizeof(BFu33_BFu0s_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_L)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_L");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_L");
    check_field_offset(lv, v2, ABISELECT(6,6), "BFu33_BFu0s_L.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_L(Test_BFu33_BFu0s_L, "BFu33_BFu0s_L", ABISELECT(14,14));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_S()
{
  {
    init_simple_test("BFu33_BFu0s_S");
    static BFu33_BFu0s_S lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu0s_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_S)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_S");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_S");
    check_field_offset(lv, v2, ABISELECT(6,6), "BFu33_BFu0s_S.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_S(Test_BFu33_BFu0s_S, "BFu33_BFu0s_S", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_Uc()
{
  {
    init_simple_test("BFu33_BFu0s_Uc");
    static BFu33_BFu0s_Uc lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu33_BFu0s_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_Uc");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_Uc");
    check_field_offset(lv, v2, ABISELECT(6,6), "BFu33_BFu0s_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_Uc(Test_BFu33_BFu0s_Uc, "BFu33_BFu0s_Uc", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_Ui()
{
  {
    init_simple_test("BFu33_BFu0s_Ui");
    static BFu33_BFu0s_Ui lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu0s_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_Ui");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_Ui");
    check_field_offset(lv, v2, ABISELECT(6,6), "BFu33_BFu0s_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_Ui(Test_BFu33_BFu0s_Ui, "BFu33_BFu0s_Ui", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_Ul()
{
  {
    init_simple_test("BFu33_BFu0s_Ul");
    static BFu33_BFu0s_Ul lv;
    check2(sizeof(lv), ABISELECT(14,14), "sizeof(BFu33_BFu0s_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_Ul");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_Ul");
    check_field_offset(lv, v2, ABISELECT(6,6), "BFu33_BFu0s_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_Ul(Test_BFu33_BFu0s_Ul, "BFu33_BFu0s_Ul", ABISELECT(14,14));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_Us()
{
  {
    init_simple_test("BFu33_BFu0s_Us");
    static BFu33_BFu0s_Us lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu0s_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_Us)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_Us");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_Us");
    check_field_offset(lv, v2, ABISELECT(6,6), "BFu33_BFu0s_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_Us(Test_BFu33_BFu0s_Us, "BFu33_BFu0s_Us", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu0s_Vp()
{
  {
    init_simple_test("BFu33_BFu0s_Vp");
    static BFu33_BFu0s_Vp lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(BFu33_BFu0s_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu0s_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu0s_Vp");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu0s_Vp");
    check_field_offset(lv, v2, ABISELECT(6,6), "BFu33_BFu0s_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu33_BFu0s_Vp(Test_BFu33_BFu0s_Vp, "BFu33_BFu0s_Vp", ABISELECT(14,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu15i_BFu0c()
{
  {
    init_simple_test("BFu33_BFu15i_BFu0c");
    static BFu33_BFu15i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu15i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu15i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu15i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 15, 1, "BFu33_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 15, hide_ull(1LL<<14), "BFu33_BFu15i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu15i_BFu0c(Test_BFu33_BFu15i_BFu0c, "BFu33_BFu15i_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu15i_BFu0i()
{
  {
    init_simple_test("BFu33_BFu15i_BFu0i");
    static BFu33_BFu15i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu15i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu15i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu15i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 15, 1, "BFu33_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 15, hide_ull(1LL<<14), "BFu33_BFu15i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu15i_BFu0i(Test_BFu33_BFu15i_BFu0i, "BFu33_BFu15i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu15i_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu15i_BFu0ll");
    static BFu33_BFu15i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu15i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu15i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu15i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 15, 1, "BFu33_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 15, hide_ull(1LL<<14), "BFu33_BFu15i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu15i_BFu0ll(Test_BFu33_BFu15i_BFu0ll, "BFu33_BFu15i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu15i_BFu0s()
{
  {
    init_simple_test("BFu33_BFu15i_BFu0s");
    static BFu33_BFu15i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu15i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu15i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu15i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 15, 1, "BFu33_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 15, hide_ull(1LL<<14), "BFu33_BFu15i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu15i_BFu0s(Test_BFu33_BFu15i_BFu0s, "BFu33_BFu15i_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu15ll_BFu0c()
{
  {
    init_simple_test("BFu33_BFu15ll_BFu0c");
    static BFu33_BFu15ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu15ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu15ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu15ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 15, 1, "BFu33_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 15, hide_ull(1LL<<14), "BFu33_BFu15ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu15ll_BFu0c(Test_BFu33_BFu15ll_BFu0c, "BFu33_BFu15ll_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu15ll_BFu0i()
{
  {
    init_simple_test("BFu33_BFu15ll_BFu0i");
    static BFu33_BFu15ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu15ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu15ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu15ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 15, 1, "BFu33_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 15, hide_ull(1LL<<14), "BFu33_BFu15ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu15ll_BFu0i(Test_BFu33_BFu15ll_BFu0i, "BFu33_BFu15ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu15ll_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu15ll_BFu0ll");
    static BFu33_BFu15ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu15ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu15ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 15, 1, "BFu33_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 15, hide_ull(1LL<<14), "BFu33_BFu15ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu15ll_BFu0ll(Test_BFu33_BFu15ll_BFu0ll, "BFu33_BFu15ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu15ll_BFu0s()
{
  {
    init_simple_test("BFu33_BFu15ll_BFu0s");
    static BFu33_BFu15ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu15ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu15ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu15ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 15, 1, "BFu33_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 15, hide_ull(1LL<<14), "BFu33_BFu15ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu15ll_BFu0s(Test_BFu33_BFu15ll_BFu0s, "BFu33_BFu15ll_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu15s_BFu0c()
{
  {
    init_simple_test("BFu33_BFu15s_BFu0c");
    static BFu33_BFu15s_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu15s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu15s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu15s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 15, 1, "BFu33_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 15, hide_ull(1LL<<14), "BFu33_BFu15s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu15s_BFu0c(Test_BFu33_BFu15s_BFu0c, "BFu33_BFu15s_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu15s_BFu0i()
{
  {
    init_simple_test("BFu33_BFu15s_BFu0i");
    static BFu33_BFu15s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu15s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu15s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu15s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 15, 1, "BFu33_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 15, hide_ull(1LL<<14), "BFu33_BFu15s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu15s_BFu0i(Test_BFu33_BFu15s_BFu0i, "BFu33_BFu15s_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu15s_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu15s_BFu0ll");
    static BFu33_BFu15s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu15s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu15s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu15s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 15, 1, "BFu33_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 15, hide_ull(1LL<<14), "BFu33_BFu15s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu15s_BFu0ll(Test_BFu33_BFu15s_BFu0ll, "BFu33_BFu15s_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu15s_BFu0s()
{
  {
    init_simple_test("BFu33_BFu15s_BFu0s");
    static BFu33_BFu15s_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu15s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu15s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu15s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 15, 1, "BFu33_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 15, hide_ull(1LL<<14), "BFu33_BFu15s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu15s_BFu0s(Test_BFu33_BFu15s_BFu0s, "BFu33_BFu15s_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu16i_BFu0c()
{
  {
    init_simple_test("BFu33_BFu16i_BFu0c");
    static BFu33_BFu16i_BFu0c lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_BFu16i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu16i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu16i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 16, 1, "BFu33_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 16, hide_ull(1LL<<15), "BFu33_BFu16i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu16i_BFu0c(Test_BFu33_BFu16i_BFu0c, "BFu33_BFu16i_BFu0c", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu16i_BFu0i()
{
  {
    init_simple_test("BFu33_BFu16i_BFu0i");
    static BFu33_BFu16i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu16i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu16i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu16i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 16, 1, "BFu33_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 16, hide_ull(1LL<<15), "BFu33_BFu16i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu16i_BFu0i(Test_BFu33_BFu16i_BFu0i, "BFu33_BFu16i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu16i_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu16i_BFu0ll");
    static BFu33_BFu16i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu16i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu16i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu16i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 16, 1, "BFu33_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 16, hide_ull(1LL<<15), "BFu33_BFu16i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu16i_BFu0ll(Test_BFu33_BFu16i_BFu0ll, "BFu33_BFu16i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu16i_BFu0s()
{
  {
    init_simple_test("BFu33_BFu16i_BFu0s");
    static BFu33_BFu16i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu16i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu16i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu16i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 16, 1, "BFu33_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 16, hide_ull(1LL<<15), "BFu33_BFu16i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu16i_BFu0s(Test_BFu33_BFu16i_BFu0s, "BFu33_BFu16i_BFu0s", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu16ll_BFu0c()
{
  {
    init_simple_test("BFu33_BFu16ll_BFu0c");
    static BFu33_BFu16ll_BFu0c lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_BFu16ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu16ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu16ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 16, 1, "BFu33_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 16, hide_ull(1LL<<15), "BFu33_BFu16ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu16ll_BFu0c(Test_BFu33_BFu16ll_BFu0c, "BFu33_BFu16ll_BFu0c", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu16ll_BFu0i()
{
  {
    init_simple_test("BFu33_BFu16ll_BFu0i");
    static BFu33_BFu16ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu16ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu16ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu16ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 16, 1, "BFu33_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 16, hide_ull(1LL<<15), "BFu33_BFu16ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu16ll_BFu0i(Test_BFu33_BFu16ll_BFu0i, "BFu33_BFu16ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu16ll_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu16ll_BFu0ll");
    static BFu33_BFu16ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu16ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu16ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 16, 1, "BFu33_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 16, hide_ull(1LL<<15), "BFu33_BFu16ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu16ll_BFu0ll(Test_BFu33_BFu16ll_BFu0ll, "BFu33_BFu16ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu16ll_BFu0s()
{
  {
    init_simple_test("BFu33_BFu16ll_BFu0s");
    static BFu33_BFu16ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu16ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu16ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu16ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 16, 1, "BFu33_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 16, hide_ull(1LL<<15), "BFu33_BFu16ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu16ll_BFu0s(Test_BFu33_BFu16ll_BFu0s, "BFu33_BFu16ll_BFu0s", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu16s_BFu0c()
{
  {
    init_simple_test("BFu33_BFu16s_BFu0c");
    static BFu33_BFu16s_BFu0c lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_BFu16s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu16s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu16s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 16, 1, "BFu33_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 16, hide_ull(1LL<<15), "BFu33_BFu16s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu16s_BFu0c(Test_BFu33_BFu16s_BFu0c, "BFu33_BFu16s_BFu0c", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu16s_BFu0i()
{
  {
    init_simple_test("BFu33_BFu16s_BFu0i");
    static BFu33_BFu16s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu16s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu16s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu16s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 16, 1, "BFu33_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 16, hide_ull(1LL<<15), "BFu33_BFu16s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu16s_BFu0i(Test_BFu33_BFu16s_BFu0i, "BFu33_BFu16s_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu16s_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu16s_BFu0ll");
    static BFu33_BFu16s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu16s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu16s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu16s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 16, 1, "BFu33_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 16, hide_ull(1LL<<15), "BFu33_BFu16s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu16s_BFu0ll(Test_BFu33_BFu16s_BFu0ll, "BFu33_BFu16s_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu16s_BFu0s()
{
  {
    init_simple_test("BFu33_BFu16s_BFu0s");
    static BFu33_BFu16s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu16s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu16s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu16s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 16, 1, "BFu33_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 16, hide_ull(1LL<<15), "BFu33_BFu16s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu16s_BFu0s(Test_BFu33_BFu16s_BFu0s, "BFu33_BFu16s_BFu0s", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu17i_BFu0c()
{
  {
    init_simple_test("BFu33_BFu17i_BFu0c");
    static BFu33_BFu17i_BFu0c lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_BFu17i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu17i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu17i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 17, 1, "BFu33_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 17, hide_ull(1LL<<16), "BFu33_BFu17i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu17i_BFu0c(Test_BFu33_BFu17i_BFu0c, "BFu33_BFu17i_BFu0c", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu17i_BFu0i()
{
  {
    init_simple_test("BFu33_BFu17i_BFu0i");
    static BFu33_BFu17i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu17i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu17i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu17i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 17, 1, "BFu33_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 17, hide_ull(1LL<<16), "BFu33_BFu17i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu17i_BFu0i(Test_BFu33_BFu17i_BFu0i, "BFu33_BFu17i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu17i_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu17i_BFu0ll");
    static BFu33_BFu17i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu17i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu17i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu17i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 17, 1, "BFu33_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 17, hide_ull(1LL<<16), "BFu33_BFu17i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu17i_BFu0ll(Test_BFu33_BFu17i_BFu0ll, "BFu33_BFu17i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu17i_BFu0s()
{
  {
    init_simple_test("BFu33_BFu17i_BFu0s");
    static BFu33_BFu17i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu17i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu17i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu17i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 17, 1, "BFu33_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 17, hide_ull(1LL<<16), "BFu33_BFu17i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu17i_BFu0s(Test_BFu33_BFu17i_BFu0s, "BFu33_BFu17i_BFu0s", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu17ll_BFu0c()
{
  {
    init_simple_test("BFu33_BFu17ll_BFu0c");
    static BFu33_BFu17ll_BFu0c lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_BFu17ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu17ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu17ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 17, 1, "BFu33_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 17, hide_ull(1LL<<16), "BFu33_BFu17ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu17ll_BFu0c(Test_BFu33_BFu17ll_BFu0c, "BFu33_BFu17ll_BFu0c", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu17ll_BFu0i()
{
  {
    init_simple_test("BFu33_BFu17ll_BFu0i");
    static BFu33_BFu17ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu17ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu17ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu17ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 17, 1, "BFu33_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 17, hide_ull(1LL<<16), "BFu33_BFu17ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu17ll_BFu0i(Test_BFu33_BFu17ll_BFu0i, "BFu33_BFu17ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu17ll_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu17ll_BFu0ll");
    static BFu33_BFu17ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu17ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu17ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 17, 1, "BFu33_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 17, hide_ull(1LL<<16), "BFu33_BFu17ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu17ll_BFu0ll(Test_BFu33_BFu17ll_BFu0ll, "BFu33_BFu17ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu17ll_BFu0s()
{
  {
    init_simple_test("BFu33_BFu17ll_BFu0s");
    static BFu33_BFu17ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu17ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu17ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu17ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 17, 1, "BFu33_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 17, hide_ull(1LL<<16), "BFu33_BFu17ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu17ll_BFu0s(Test_BFu33_BFu17ll_BFu0s, "BFu33_BFu17ll_BFu0s", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu1c_BFu0c()
{
  {
    init_simple_test("BFu33_BFu1c_BFu0c");
    static BFu33_BFu1c_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu33_BFu1c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu1c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu1c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu1c_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 1, 1, "BFu33_BFu1c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu1c_BFu0c(Test_BFu33_BFu1c_BFu0c, "BFu33_BFu1c_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu1c_BFu0i()
{
  {
    init_simple_test("BFu33_BFu1c_BFu0i");
    static BFu33_BFu1c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu1c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu1c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu1c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu1c_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 1, 1, "BFu33_BFu1c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu1c_BFu0i(Test_BFu33_BFu1c_BFu0i, "BFu33_BFu1c_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu1c_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu1c_BFu0ll");
    static BFu33_BFu1c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu1c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu1c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu1c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu1c_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 1, 1, "BFu33_BFu1c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu1c_BFu0ll(Test_BFu33_BFu1c_BFu0ll, "BFu33_BFu1c_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu1c_BFu0s()
{
  {
    init_simple_test("BFu33_BFu1c_BFu0s");
    static BFu33_BFu1c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu33_BFu1c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu1c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu1c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu1c_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 1, 1, "BFu33_BFu1c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu1c_BFu0s(Test_BFu33_BFu1c_BFu0s, "BFu33_BFu1c_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu1i_BFu0c()
{
  {
    init_simple_test("BFu33_BFu1i_BFu0c");
    static BFu33_BFu1i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu33_BFu1i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu1i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu1i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu1i_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 1, 1, "BFu33_BFu1i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu1i_BFu0c(Test_BFu33_BFu1i_BFu0c, "BFu33_BFu1i_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu1i_BFu0i()
{
  {
    init_simple_test("BFu33_BFu1i_BFu0i");
    static BFu33_BFu1i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu1i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu1i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu1i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu1i_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 1, 1, "BFu33_BFu1i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu1i_BFu0i(Test_BFu33_BFu1i_BFu0i, "BFu33_BFu1i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu1i_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu1i_BFu0ll");
    static BFu33_BFu1i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu1i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu1i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu1i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu1i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 1, 1, "BFu33_BFu1i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu1i_BFu0ll(Test_BFu33_BFu1i_BFu0ll, "BFu33_BFu1i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu1i_BFu0s()
{
  {
    init_simple_test("BFu33_BFu1i_BFu0s");
    static BFu33_BFu1i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu33_BFu1i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu1i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu1i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu1i_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 1, 1, "BFu33_BFu1i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu1i_BFu0s(Test_BFu33_BFu1i_BFu0s, "BFu33_BFu1i_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu1ll_BFu0c()
{
  {
    init_simple_test("BFu33_BFu1ll_BFu0c");
    static BFu33_BFu1ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu33_BFu1ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu1ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu1ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu1ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 1, 1, "BFu33_BFu1ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu1ll_BFu0c(Test_BFu33_BFu1ll_BFu0c, "BFu33_BFu1ll_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu1ll_BFu0i()
{
  {
    init_simple_test("BFu33_BFu1ll_BFu0i");
    static BFu33_BFu1ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu1ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu1ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu1ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu1ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 1, 1, "BFu33_BFu1ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu1ll_BFu0i(Test_BFu33_BFu1ll_BFu0i, "BFu33_BFu1ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu1ll_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu1ll_BFu0ll");
    static BFu33_BFu1ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu1ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu1ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 1, 1, "BFu33_BFu1ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu1ll_BFu0ll(Test_BFu33_BFu1ll_BFu0ll, "BFu33_BFu1ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu1ll_BFu0s()
{
  {
    init_simple_test("BFu33_BFu1ll_BFu0s");
    static BFu33_BFu1ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu33_BFu1ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu1ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu1ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu1ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 1, 1, "BFu33_BFu1ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu1ll_BFu0s(Test_BFu33_BFu1ll_BFu0s, "BFu33_BFu1ll_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu1s_BFu0c()
{
  {
    init_simple_test("BFu33_BFu1s_BFu0c");
    static BFu33_BFu1s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu33_BFu1s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu1s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu1s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu1s_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 1, 1, "BFu33_BFu1s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu1s_BFu0c(Test_BFu33_BFu1s_BFu0c, "BFu33_BFu1s_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu1s_BFu0i()
{
  {
    init_simple_test("BFu33_BFu1s_BFu0i");
    static BFu33_BFu1s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu1s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu1s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu1s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu1s_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 1, 1, "BFu33_BFu1s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu1s_BFu0i(Test_BFu33_BFu1s_BFu0i, "BFu33_BFu1s_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu1s_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu1s_BFu0ll");
    static BFu33_BFu1s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu1s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu1s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu1s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu1s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 1, 1, "BFu33_BFu1s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu1s_BFu0ll(Test_BFu33_BFu1s_BFu0ll, "BFu33_BFu1s_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu1s_BFu0s()
{
  {
    init_simple_test("BFu33_BFu1s_BFu0s");
    static BFu33_BFu1s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu33_BFu1s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu1s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu1s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu1s_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 1, 1, "BFu33_BFu1s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu1s_BFu0s(Test_BFu33_BFu1s_BFu0s, "BFu33_BFu1s_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu31i_BFu0c()
{
  {
    init_simple_test("BFu33_BFu31i_BFu0c");
    static BFu33_BFu31i_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu33_BFu31i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu31i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu31i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 31, 1, "BFu33_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 31, hide_ull(1LL<<30), "BFu33_BFu31i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu31i_BFu0c(Test_BFu33_BFu31i_BFu0c, "BFu33_BFu31i_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu31i_BFu0i()
{
  {
    init_simple_test("BFu33_BFu31i_BFu0i");
    static BFu33_BFu31i_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu33_BFu31i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu31i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu31i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 31, 1, "BFu33_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 31, hide_ull(1LL<<30), "BFu33_BFu31i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu31i_BFu0i(Test_BFu33_BFu31i_BFu0i, "BFu33_BFu31i_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu31i_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu31i_BFu0ll");
    static BFu33_BFu31i_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu33_BFu31i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu31i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu31i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 31, 1, "BFu33_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 31, hide_ull(1LL<<30), "BFu33_BFu31i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu31i_BFu0ll(Test_BFu33_BFu31i_BFu0ll, "BFu33_BFu31i_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu31i_BFu0s()
{
  {
    init_simple_test("BFu33_BFu31i_BFu0s");
    static BFu33_BFu31i_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu33_BFu31i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu31i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu31i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 31, 1, "BFu33_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 31, hide_ull(1LL<<30), "BFu33_BFu31i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu31i_BFu0s(Test_BFu33_BFu31i_BFu0s, "BFu33_BFu31i_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu31ll_BFu0c()
{
  {
    init_simple_test("BFu33_BFu31ll_BFu0c");
    static BFu33_BFu31ll_BFu0c lv;
    check2(sizeof(lv), 8, "sizeof(BFu33_BFu31ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu31ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu31ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 31, 1, "BFu33_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 31, hide_ull(1LL<<30), "BFu33_BFu31ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu31ll_BFu0c(Test_BFu33_BFu31ll_BFu0c, "BFu33_BFu31ll_BFu0c", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu31ll_BFu0i()
{
  {
    init_simple_test("BFu33_BFu31ll_BFu0i");
    static BFu33_BFu31ll_BFu0i lv;
    check2(sizeof(lv), 8, "sizeof(BFu33_BFu31ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu31ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu31ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 31, 1, "BFu33_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 31, hide_ull(1LL<<30), "BFu33_BFu31ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu31ll_BFu0i(Test_BFu33_BFu31ll_BFu0i, "BFu33_BFu31ll_BFu0i", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu31ll_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu31ll_BFu0ll");
    static BFu33_BFu31ll_BFu0ll lv;
    check2(sizeof(lv), 8, "sizeof(BFu33_BFu31ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu31ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 31, 1, "BFu33_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 31, hide_ull(1LL<<30), "BFu33_BFu31ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu31ll_BFu0ll(Test_BFu33_BFu31ll_BFu0ll, "BFu33_BFu31ll_BFu0ll", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu31ll_BFu0s()
{
  {
    init_simple_test("BFu33_BFu31ll_BFu0s");
    static BFu33_BFu31ll_BFu0s lv;
    check2(sizeof(lv), 8, "sizeof(BFu33_BFu31ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu31ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu31ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 31, 1, "BFu33_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 31, hide_ull(1LL<<30), "BFu33_BFu31ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu31ll_BFu0s(Test_BFu33_BFu31ll_BFu0s, "BFu33_BFu31ll_BFu0s", 8);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu32i_BFu0c()
{
  {
    init_simple_test("BFu33_BFu32i_BFu0c");
    static BFu33_BFu32i_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(BFu33_BFu32i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu32i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu32i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 32, 1, "BFu33_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 32, hide_ull(1LL<<31), "BFu33_BFu32i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu32i_BFu0c(Test_BFu33_BFu32i_BFu0c, "BFu33_BFu32i_BFu0c", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu32i_BFu0i()
{
  {
    init_simple_test("BFu33_BFu32i_BFu0i");
    static BFu33_BFu32i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu33_BFu32i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu32i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu32i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 32, 1, "BFu33_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 32, hide_ull(1LL<<31), "BFu33_BFu32i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu32i_BFu0i(Test_BFu33_BFu32i_BFu0i, "BFu33_BFu32i_BFu0i", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu32i_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu32i_BFu0ll");
    static BFu33_BFu32i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu33_BFu32i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu32i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu32i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 32, 1, "BFu33_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 32, hide_ull(1LL<<31), "BFu33_BFu32i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu32i_BFu0ll(Test_BFu33_BFu32i_BFu0ll, "BFu33_BFu32i_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu32i_BFu0s()
{
  {
    init_simple_test("BFu33_BFu32i_BFu0s");
    static BFu33_BFu32i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu32i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu32i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu32i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 32, 1, "BFu33_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 32, hide_ull(1LL<<31), "BFu33_BFu32i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu32i_BFu0s(Test_BFu33_BFu32i_BFu0s, "BFu33_BFu32i_BFu0s", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu32ll_BFu0c()
{
  {
    init_simple_test("BFu33_BFu32ll_BFu0c");
    static BFu33_BFu32ll_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(BFu33_BFu32ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu32ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu32ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 32, 1, "BFu33_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 32, hide_ull(1LL<<31), "BFu33_BFu32ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu32ll_BFu0c(Test_BFu33_BFu32ll_BFu0c, "BFu33_BFu32ll_BFu0c", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu32ll_BFu0i()
{
  {
    init_simple_test("BFu33_BFu32ll_BFu0i");
    static BFu33_BFu32ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu33_BFu32ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu32ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu32ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 32, 1, "BFu33_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 32, hide_ull(1LL<<31), "BFu33_BFu32ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu32ll_BFu0i(Test_BFu33_BFu32ll_BFu0i, "BFu33_BFu32ll_BFu0i", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu32ll_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu32ll_BFu0ll");
    static BFu33_BFu32ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu33_BFu32ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu32ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 32, 1, "BFu33_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 32, hide_ull(1LL<<31), "BFu33_BFu32ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu32ll_BFu0ll(Test_BFu33_BFu32ll_BFu0ll, "BFu33_BFu32ll_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu32ll_BFu0s()
{
  {
    init_simple_test("BFu33_BFu32ll_BFu0s");
    static BFu33_BFu32ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu32ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu32ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu32ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 32, 1, "BFu33_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 32, hide_ull(1LL<<31), "BFu33_BFu32ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu32ll_BFu0s(Test_BFu33_BFu32ll_BFu0s, "BFu33_BFu32ll_BFu0s", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu33_BFu0c()
{
  {
    init_simple_test("BFu33_BFu33_BFu0c");
    static BFu33_BFu33_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(BFu33_BFu33_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu33_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu33_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 33, 1, "BFu33_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 33, hide_ull(1LL<<32), "BFu33_BFu33_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu33_BFu0c(Test_BFu33_BFu33_BFu0c, "BFu33_BFu33_BFu0c", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu33_BFu0i()
{
  {
    init_simple_test("BFu33_BFu33_BFu0i");
    static BFu33_BFu33_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu33_BFu33_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu33_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu33_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 33, 1, "BFu33_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 33, hide_ull(1LL<<32), "BFu33_BFu33_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu33_BFu0i(Test_BFu33_BFu33_BFu0i, "BFu33_BFu33_BFu0i", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu33_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu33_BFu0ll");
    static BFu33_BFu33_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu33_BFu33_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu33_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu33_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 33, 1, "BFu33_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 33, hide_ull(1LL<<32), "BFu33_BFu33_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu33_BFu0ll(Test_BFu33_BFu33_BFu0ll, "BFu33_BFu33_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu33_BFu0s()
{
  {
    init_simple_test("BFu33_BFu33_BFu0s");
    static BFu33_BFu33_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_BFu33_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu33_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu33_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 33, 1, "BFu33_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 33, hide_ull(1LL<<32), "BFu33_BFu33_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu33_BFu0s(Test_BFu33_BFu33_BFu0s, "BFu33_BFu33_BFu0s", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu7c_BFu0c()
{
  {
    init_simple_test("BFu33_BFu7c_BFu0c");
    static BFu33_BFu7c_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu33_BFu7c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu7c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu7c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 7, 1, "BFu33_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 7, hide_ull(1LL<<6), "BFu33_BFu7c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu7c_BFu0c(Test_BFu33_BFu7c_BFu0c, "BFu33_BFu7c_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu7c_BFu0i()
{
  {
    init_simple_test("BFu33_BFu7c_BFu0i");
    static BFu33_BFu7c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu7c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu7c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu7c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 7, 1, "BFu33_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 7, hide_ull(1LL<<6), "BFu33_BFu7c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu7c_BFu0i(Test_BFu33_BFu7c_BFu0i, "BFu33_BFu7c_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu7c_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu7c_BFu0ll");
    static BFu33_BFu7c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu7c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu7c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu7c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 7, 1, "BFu33_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 7, hide_ull(1LL<<6), "BFu33_BFu7c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu7c_BFu0ll(Test_BFu33_BFu7c_BFu0ll, "BFu33_BFu7c_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu7c_BFu0s()
{
  {
    init_simple_test("BFu33_BFu7c_BFu0s");
    static BFu33_BFu7c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu33_BFu7c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu7c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu7c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 7, 1, "BFu33_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 7, hide_ull(1LL<<6), "BFu33_BFu7c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu7c_BFu0s(Test_BFu33_BFu7c_BFu0s, "BFu33_BFu7c_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu7i_BFu0c()
{
  {
    init_simple_test("BFu33_BFu7i_BFu0c");
    static BFu33_BFu7i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu33_BFu7i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu7i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu7i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 7, 1, "BFu33_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 7, hide_ull(1LL<<6), "BFu33_BFu7i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu7i_BFu0c(Test_BFu33_BFu7i_BFu0c, "BFu33_BFu7i_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu7i_BFu0i()
{
  {
    init_simple_test("BFu33_BFu7i_BFu0i");
    static BFu33_BFu7i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu7i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu7i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu7i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 7, 1, "BFu33_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 7, hide_ull(1LL<<6), "BFu33_BFu7i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu7i_BFu0i(Test_BFu33_BFu7i_BFu0i, "BFu33_BFu7i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu7i_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu7i_BFu0ll");
    static BFu33_BFu7i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu7i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu7i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu7i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 7, 1, "BFu33_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 7, hide_ull(1LL<<6), "BFu33_BFu7i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu7i_BFu0ll(Test_BFu33_BFu7i_BFu0ll, "BFu33_BFu7i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu7i_BFu0s()
{
  {
    init_simple_test("BFu33_BFu7i_BFu0s");
    static BFu33_BFu7i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu33_BFu7i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu7i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu7i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 7, 1, "BFu33_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 7, hide_ull(1LL<<6), "BFu33_BFu7i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu7i_BFu0s(Test_BFu33_BFu7i_BFu0s, "BFu33_BFu7i_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu7ll_BFu0c()
{
  {
    init_simple_test("BFu33_BFu7ll_BFu0c");
    static BFu33_BFu7ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu33_BFu7ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu7ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu7ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 7, 1, "BFu33_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 7, hide_ull(1LL<<6), "BFu33_BFu7ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu7ll_BFu0c(Test_BFu33_BFu7ll_BFu0c, "BFu33_BFu7ll_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu7ll_BFu0i()
{
  {
    init_simple_test("BFu33_BFu7ll_BFu0i");
    static BFu33_BFu7ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu7ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu7ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu7ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 7, 1, "BFu33_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 7, hide_ull(1LL<<6), "BFu33_BFu7ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu7ll_BFu0i(Test_BFu33_BFu7ll_BFu0i, "BFu33_BFu7ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu7ll_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu7ll_BFu0ll");
    static BFu33_BFu7ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu7ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu7ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 7, 1, "BFu33_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 7, hide_ull(1LL<<6), "BFu33_BFu7ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu7ll_BFu0ll(Test_BFu33_BFu7ll_BFu0ll, "BFu33_BFu7ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu7ll_BFu0s()
{
  {
    init_simple_test("BFu33_BFu7ll_BFu0s");
    static BFu33_BFu7ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu33_BFu7ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu7ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu7ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 7, 1, "BFu33_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 7, hide_ull(1LL<<6), "BFu33_BFu7ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu7ll_BFu0s(Test_BFu33_BFu7ll_BFu0s, "BFu33_BFu7ll_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu7s_BFu0c()
{
  {
    init_simple_test("BFu33_BFu7s_BFu0c");
    static BFu33_BFu7s_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu33_BFu7s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu7s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu7s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 7, 1, "BFu33_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 7, hide_ull(1LL<<6), "BFu33_BFu7s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu7s_BFu0c(Test_BFu33_BFu7s_BFu0c, "BFu33_BFu7s_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu7s_BFu0i()
{
  {
    init_simple_test("BFu33_BFu7s_BFu0i");
    static BFu33_BFu7s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu7s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu7s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu7s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 7, 1, "BFu33_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 7, hide_ull(1LL<<6), "BFu33_BFu7s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu7s_BFu0i(Test_BFu33_BFu7s_BFu0i, "BFu33_BFu7s_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu7s_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu7s_BFu0ll");
    static BFu33_BFu7s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu7s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu7s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu7s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 7, 1, "BFu33_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 7, hide_ull(1LL<<6), "BFu33_BFu7s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu7s_BFu0ll(Test_BFu33_BFu7s_BFu0ll, "BFu33_BFu7s_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu7s_BFu0s()
{
  {
    init_simple_test("BFu33_BFu7s_BFu0s");
    static BFu33_BFu7s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu33_BFu7s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu7s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu7s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 7, 1, "BFu33_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 7, hide_ull(1LL<<6), "BFu33_BFu7s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu7s_BFu0s(Test_BFu33_BFu7s_BFu0s, "BFu33_BFu7s_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu8c_BFu0c()
{
  {
    init_simple_test("BFu33_BFu8c_BFu0c");
    static BFu33_BFu8c_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu8c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu8c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu8c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 8, 1, "BFu33_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 8, hide_ull(1LL<<7), "BFu33_BFu8c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu8c_BFu0c(Test_BFu33_BFu8c_BFu0c, "BFu33_BFu8c_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu8c_BFu0i()
{
  {
    init_simple_test("BFu33_BFu8c_BFu0i");
    static BFu33_BFu8c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu8c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu8c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu8c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 8, 1, "BFu33_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 8, hide_ull(1LL<<7), "BFu33_BFu8c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu8c_BFu0i(Test_BFu33_BFu8c_BFu0i, "BFu33_BFu8c_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu8c_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu8c_BFu0ll");
    static BFu33_BFu8c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu8c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu8c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu8c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 8, 1, "BFu33_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 8, hide_ull(1LL<<7), "BFu33_BFu8c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu8c_BFu0ll(Test_BFu33_BFu8c_BFu0ll, "BFu33_BFu8c_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu8c_BFu0s()
{
  {
    init_simple_test("BFu33_BFu8c_BFu0s");
    static BFu33_BFu8c_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu8c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu8c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu8c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 8, 1, "BFu33_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 8, hide_ull(1LL<<7), "BFu33_BFu8c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu8c_BFu0s(Test_BFu33_BFu8c_BFu0s, "BFu33_BFu8c_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu8i_BFu0c()
{
  {
    init_simple_test("BFu33_BFu8i_BFu0c");
    static BFu33_BFu8i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu8i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu8i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu8i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 8, 1, "BFu33_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 8, hide_ull(1LL<<7), "BFu33_BFu8i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu8i_BFu0c(Test_BFu33_BFu8i_BFu0c, "BFu33_BFu8i_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu8i_BFu0i()
{
  {
    init_simple_test("BFu33_BFu8i_BFu0i");
    static BFu33_BFu8i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu8i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu8i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu8i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 8, 1, "BFu33_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 8, hide_ull(1LL<<7), "BFu33_BFu8i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu8i_BFu0i(Test_BFu33_BFu8i_BFu0i, "BFu33_BFu8i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu8i_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu8i_BFu0ll");
    static BFu33_BFu8i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu8i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu8i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu8i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 8, 1, "BFu33_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 8, hide_ull(1LL<<7), "BFu33_BFu8i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu8i_BFu0ll(Test_BFu33_BFu8i_BFu0ll, "BFu33_BFu8i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu8i_BFu0s()
{
  {
    init_simple_test("BFu33_BFu8i_BFu0s");
    static BFu33_BFu8i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu8i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu8i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu8i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 8, 1, "BFu33_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 8, hide_ull(1LL<<7), "BFu33_BFu8i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu8i_BFu0s(Test_BFu33_BFu8i_BFu0s, "BFu33_BFu8i_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu8ll_BFu0c()
{
  {
    init_simple_test("BFu33_BFu8ll_BFu0c");
    static BFu33_BFu8ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu8ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu8ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu8ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 8, 1, "BFu33_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 8, hide_ull(1LL<<7), "BFu33_BFu8ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu8ll_BFu0c(Test_BFu33_BFu8ll_BFu0c, "BFu33_BFu8ll_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu8ll_BFu0i()
{
  {
    init_simple_test("BFu33_BFu8ll_BFu0i");
    static BFu33_BFu8ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu8ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu8ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu8ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 8, 1, "BFu33_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 8, hide_ull(1LL<<7), "BFu33_BFu8ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu8ll_BFu0i(Test_BFu33_BFu8ll_BFu0i, "BFu33_BFu8ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu8ll_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu8ll_BFu0ll");
    static BFu33_BFu8ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu8ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu8ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 8, 1, "BFu33_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 8, hide_ull(1LL<<7), "BFu33_BFu8ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu8ll_BFu0ll(Test_BFu33_BFu8ll_BFu0ll, "BFu33_BFu8ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu8ll_BFu0s()
{
  {
    init_simple_test("BFu33_BFu8ll_BFu0s");
    static BFu33_BFu8ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu8ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu8ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu8ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 8, 1, "BFu33_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 8, hide_ull(1LL<<7), "BFu33_BFu8ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu8ll_BFu0s(Test_BFu33_BFu8ll_BFu0s, "BFu33_BFu8ll_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu8s_BFu0c()
{
  {
    init_simple_test("BFu33_BFu8s_BFu0c");
    static BFu33_BFu8s_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu8s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu8s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu8s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 8, 1, "BFu33_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 8, hide_ull(1LL<<7), "BFu33_BFu8s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu8s_BFu0c(Test_BFu33_BFu8s_BFu0c, "BFu33_BFu8s_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu8s_BFu0i()
{
  {
    init_simple_test("BFu33_BFu8s_BFu0i");
    static BFu33_BFu8s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu8s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu8s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu8s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 8, 1, "BFu33_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 8, hide_ull(1LL<<7), "BFu33_BFu8s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu8s_BFu0i(Test_BFu33_BFu8s_BFu0i, "BFu33_BFu8s_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu8s_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu8s_BFu0ll");
    static BFu33_BFu8s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu8s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu8s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu8s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 8, 1, "BFu33_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 8, hide_ull(1LL<<7), "BFu33_BFu8s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu8s_BFu0ll(Test_BFu33_BFu8s_BFu0ll, "BFu33_BFu8s_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu8s_BFu0s()
{
  {
    init_simple_test("BFu33_BFu8s_BFu0s");
    static BFu33_BFu8s_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu8s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu8s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu8s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 8, 1, "BFu33_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 8, hide_ull(1LL<<7), "BFu33_BFu8s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu8s_BFu0s(Test_BFu33_BFu8s_BFu0s, "BFu33_BFu8s_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu9i_BFu0c()
{
  {
    init_simple_test("BFu33_BFu9i_BFu0c");
    static BFu33_BFu9i_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu9i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu9i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu9i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 9, 1, "BFu33_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 9, hide_ull(1LL<<8), "BFu33_BFu9i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu9i_BFu0c(Test_BFu33_BFu9i_BFu0c, "BFu33_BFu9i_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu9i_BFu0i()
{
  {
    init_simple_test("BFu33_BFu9i_BFu0i");
    static BFu33_BFu9i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu9i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu9i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu9i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 9, 1, "BFu33_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 9, hide_ull(1LL<<8), "BFu33_BFu9i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu9i_BFu0i(Test_BFu33_BFu9i_BFu0i, "BFu33_BFu9i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu9i_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu9i_BFu0ll");
    static BFu33_BFu9i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu9i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu9i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu9i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 9, 1, "BFu33_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 9, hide_ull(1LL<<8), "BFu33_BFu9i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu9i_BFu0ll(Test_BFu33_BFu9i_BFu0ll, "BFu33_BFu9i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu9i_BFu0s()
{
  {
    init_simple_test("BFu33_BFu9i_BFu0s");
    static BFu33_BFu9i_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu9i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu9i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu9i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 9, 1, "BFu33_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 9, hide_ull(1LL<<8), "BFu33_BFu9i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu9i_BFu0s(Test_BFu33_BFu9i_BFu0s, "BFu33_BFu9i_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu9ll_BFu0c()
{
  {
    init_simple_test("BFu33_BFu9ll_BFu0c");
    static BFu33_BFu9ll_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu9ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu9ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu9ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 9, 1, "BFu33_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 9, hide_ull(1LL<<8), "BFu33_BFu9ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu9ll_BFu0c(Test_BFu33_BFu9ll_BFu0c, "BFu33_BFu9ll_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu9ll_BFu0i()
{
  {
    init_simple_test("BFu33_BFu9ll_BFu0i");
    static BFu33_BFu9ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu9ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu9ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu9ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 9, 1, "BFu33_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 9, hide_ull(1LL<<8), "BFu33_BFu9ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu9ll_BFu0i(Test_BFu33_BFu9ll_BFu0i, "BFu33_BFu9ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu9ll_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu9ll_BFu0ll");
    static BFu33_BFu9ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu9ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu9ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 9, 1, "BFu33_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 9, hide_ull(1LL<<8), "BFu33_BFu9ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu9ll_BFu0ll(Test_BFu33_BFu9ll_BFu0ll, "BFu33_BFu9ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu9ll_BFu0s()
{
  {
    init_simple_test("BFu33_BFu9ll_BFu0s");
    static BFu33_BFu9ll_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu9ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu9ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu9ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 9, 1, "BFu33_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 9, hide_ull(1LL<<8), "BFu33_BFu9ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu9ll_BFu0s(Test_BFu33_BFu9ll_BFu0s, "BFu33_BFu9ll_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu9s_BFu0c()
{
  {
    init_simple_test("BFu33_BFu9s_BFu0c");
    static BFu33_BFu9s_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu9s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_BFu9s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu9s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 9, 1, "BFu33_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 4, 1, 9, hide_ull(1LL<<8), "BFu33_BFu9s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu33_BFu9s_BFu0c(Test_BFu33_BFu9s_BFu0c, "BFu33_BFu9s_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu9s_BFu0i()
{
  {
    init_simple_test("BFu33_BFu9s_BFu0i");
    static BFu33_BFu9s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu9s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu9s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu9s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 9, 1, "BFu33_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 4, 1, 9, hide_ull(1LL<<8), "BFu33_BFu9s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu33_BFu9s_BFu0i(Test_BFu33_BFu9s_BFu0i, "BFu33_BFu9s_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu9s_BFu0ll()
{
  {
    init_simple_test("BFu33_BFu9s_BFu0ll");
    static BFu33_BFu9s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_BFu9s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu9s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu9s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 9, 1, "BFu33_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 4, 1, 9, hide_ull(1LL<<8), "BFu33_BFu9s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu33_BFu9s_BFu0ll(Test_BFu33_BFu9s_BFu0ll, "BFu33_BFu9s_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_BFu9s_BFu0s()
{
  {
    init_simple_test("BFu33_BFu9s_BFu0s");
    static BFu33_BFu9s_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_BFu9s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_BFu9s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_BFu9s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 9, 1, "BFu33_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 4, 1, 9, hide_ull(1LL<<8), "BFu33_BFu9s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu33_BFu9s_BFu0s(Test_BFu33_BFu9s_BFu0s, "BFu33_BFu9s_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_C_BFu0c()
{
  {
    init_simple_test("BFu33_C_BFu0c");
    static BFu33_C_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_C_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_C_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_C_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_C_BFu0c");
    check_field_offset(lv, v2, 5, "BFu33_C_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu33_C_BFu0c(Test_BFu33_C_BFu0c, "BFu33_C_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_C_BFu0i()
{
  {
    init_simple_test("BFu33_C_BFu0i");
    static BFu33_C_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_C_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_C_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_C_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_C_BFu0i");
    check_field_offset(lv, v2, 5, "BFu33_C_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu33_C_BFu0i(Test_BFu33_C_BFu0i, "BFu33_C_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_C_BFu0ll()
{
  {
    init_simple_test("BFu33_C_BFu0ll");
    static BFu33_C_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_C_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_C_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_C_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_C_BFu0ll");
    check_field_offset(lv, v2, 5, "BFu33_C_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu33_C_BFu0ll(Test_BFu33_C_BFu0ll, "BFu33_C_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_C_BFu0s()
{
  {
    init_simple_test("BFu33_C_BFu0s");
    static BFu33_C_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_C_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_C_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_C_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_C_BFu0s");
    check_field_offset(lv, v2, 5, "BFu33_C_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu33_C_BFu0s(Test_BFu33_C_BFu0s, "BFu33_C_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_D_BFu0c()
{
  {
    init_simple_test("BFu33_D_BFu0c");
    static BFu33_D_BFu0c lv;
    check2(sizeof(lv), 13, "sizeof(BFu33_D_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_D_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_D_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_D_BFu0c");
    check_field_offset(lv, v2, 5, "BFu33_D_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu33_D_BFu0c(Test_BFu33_D_BFu0c, "BFu33_D_BFu0c", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_D_BFu0i()
{
  {
    init_simple_test("BFu33_D_BFu0i");
    static BFu33_D_BFu0i lv;
    check2(sizeof(lv), ABISELECT(16,16), "sizeof(BFu33_D_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_D_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_D_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_D_BFu0i");
    check_field_offset(lv, v2, 5, "BFu33_D_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu33_D_BFu0i(Test_BFu33_D_BFu0i, "BFu33_D_BFu0i", ABISELECT(16,16));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_D_BFu0ll()
{
  {
    init_simple_test("BFu33_D_BFu0ll");
    static BFu33_D_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,16), "sizeof(BFu33_D_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_D_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_D_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_D_BFu0ll");
    check_field_offset(lv, v2, 5, "BFu33_D_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu33_D_BFu0ll(Test_BFu33_D_BFu0ll, "BFu33_D_BFu0ll", ABISELECT(16,16));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_D_BFu0s()
{
  {
    init_simple_test("BFu33_D_BFu0s");
    static BFu33_D_BFu0s lv;
    check2(sizeof(lv), ABISELECT(14,14), "sizeof(BFu33_D_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_D_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_D_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_D_BFu0s");
    check_field_offset(lv, v2, 5, "BFu33_D_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu33_D_BFu0s(Test_BFu33_D_BFu0s, "BFu33_D_BFu0s", ABISELECT(14,14));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_F_BFu0c()
{
  {
    init_simple_test("BFu33_F_BFu0c");
    static BFu33_F_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(BFu33_F_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_F_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_F_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_F_BFu0c");
    check_field_offset(lv, v2, 5, "BFu33_F_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu33_F_BFu0c(Test_BFu33_F_BFu0c, "BFu33_F_BFu0c", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_F_BFu0i()
{
  {
    init_simple_test("BFu33_F_BFu0i");
    static BFu33_F_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu33_F_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_F_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_F_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_F_BFu0i");
    check_field_offset(lv, v2, 5, "BFu33_F_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu33_F_BFu0i(Test_BFu33_F_BFu0i, "BFu33_F_BFu0i", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_F_BFu0ll()
{
  {
    init_simple_test("BFu33_F_BFu0ll");
    static BFu33_F_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu33_F_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_F_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_F_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_F_BFu0ll");
    check_field_offset(lv, v2, 5, "BFu33_F_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu33_F_BFu0ll(Test_BFu33_F_BFu0ll, "BFu33_F_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_F_BFu0s()
{
  {
    init_simple_test("BFu33_F_BFu0s");
    static BFu33_F_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_F_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_F_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_F_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_F_BFu0s");
    check_field_offset(lv, v2, 5, "BFu33_F_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu33_F_BFu0s(Test_BFu33_F_BFu0s, "BFu33_F_BFu0s", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_I_BFu0c()
{
  {
    init_simple_test("BFu33_I_BFu0c");
    static BFu33_I_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(BFu33_I_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_I_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_I_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_I_BFu0c");
    check_field_offset(lv, v2, 5, "BFu33_I_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu33_I_BFu0c(Test_BFu33_I_BFu0c, "BFu33_I_BFu0c", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_I_BFu0i()
{
  {
    init_simple_test("BFu33_I_BFu0i");
    static BFu33_I_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu33_I_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_I_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_I_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_I_BFu0i");
    check_field_offset(lv, v2, 5, "BFu33_I_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu33_I_BFu0i(Test_BFu33_I_BFu0i, "BFu33_I_BFu0i", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_I_BFu0ll()
{
  {
    init_simple_test("BFu33_I_BFu0ll");
    static BFu33_I_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu33_I_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_I_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_I_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_I_BFu0ll");
    check_field_offset(lv, v2, 5, "BFu33_I_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu33_I_BFu0ll(Test_BFu33_I_BFu0ll, "BFu33_I_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_I_BFu0s()
{
  {
    init_simple_test("BFu33_I_BFu0s");
    static BFu33_I_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_I_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_I_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_I_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_I_BFu0s");
    check_field_offset(lv, v2, 5, "BFu33_I_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu33_I_BFu0s(Test_BFu33_I_BFu0s, "BFu33_I_BFu0s", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_Ip_BFu0c()
{
  {
    init_simple_test("BFu33_Ip_BFu0c");
    static BFu33_Ip_BFu0c lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(BFu33_Ip_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Ip_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Ip_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Ip_BFu0c");
    check_field_offset(lv, v2, 5, "BFu33_Ip_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu33_Ip_BFu0c(Test_BFu33_Ip_BFu0c, "BFu33_Ip_BFu0c", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_Ip_BFu0i()
{
  {
    init_simple_test("BFu33_Ip_BFu0i");
    static BFu33_Ip_BFu0i lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu33_Ip_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_Ip_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Ip_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Ip_BFu0i");
    check_field_offset(lv, v2, 5, "BFu33_Ip_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu33_Ip_BFu0i(Test_BFu33_Ip_BFu0i, "BFu33_Ip_BFu0i", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_Ip_BFu0ll()
{
  {
    init_simple_test("BFu33_Ip_BFu0ll");
    static BFu33_Ip_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu33_Ip_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_Ip_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Ip_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Ip_BFu0ll");
    check_field_offset(lv, v2, 5, "BFu33_Ip_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu33_Ip_BFu0ll(Test_BFu33_Ip_BFu0ll, "BFu33_Ip_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_Ip_BFu0s()
{
  {
    init_simple_test("BFu33_Ip_BFu0s");
    static BFu33_Ip_BFu0s lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(BFu33_Ip_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_Ip_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Ip_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Ip_BFu0s");
    check_field_offset(lv, v2, 5, "BFu33_Ip_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu33_Ip_BFu0s(Test_BFu33_Ip_BFu0s, "BFu33_Ip_BFu0s", ABISELECT(14,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_L_BFu0c()
{
  {
    init_simple_test("BFu33_L_BFu0c");
    static BFu33_L_BFu0c lv;
    check2(sizeof(lv), 13, "sizeof(BFu33_L_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_L_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_L_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_L_BFu0c");
    check_field_offset(lv, v2, 5, "BFu33_L_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu33_L_BFu0c(Test_BFu33_L_BFu0c, "BFu33_L_BFu0c", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_L_BFu0i()
{
  {
    init_simple_test("BFu33_L_BFu0i");
    static BFu33_L_BFu0i lv;
    check2(sizeof(lv), ABISELECT(16,16), "sizeof(BFu33_L_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_L_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_L_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_L_BFu0i");
    check_field_offset(lv, v2, 5, "BFu33_L_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu33_L_BFu0i(Test_BFu33_L_BFu0i, "BFu33_L_BFu0i", ABISELECT(16,16));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_L_BFu0ll()
{
  {
    init_simple_test("BFu33_L_BFu0ll");
    static BFu33_L_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,16), "sizeof(BFu33_L_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_L_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_L_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_L_BFu0ll");
    check_field_offset(lv, v2, 5, "BFu33_L_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu33_L_BFu0ll(Test_BFu33_L_BFu0ll, "BFu33_L_BFu0ll", ABISELECT(16,16));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_L_BFu0s()
{
  {
    init_simple_test("BFu33_L_BFu0s");
    static BFu33_L_BFu0s lv;
    check2(sizeof(lv), ABISELECT(14,14), "sizeof(BFu33_L_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_L_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_L_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_L_BFu0s");
    check_field_offset(lv, v2, 5, "BFu33_L_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu33_L_BFu0s(Test_BFu33_L_BFu0s, "BFu33_L_BFu0s", ABISELECT(14,14));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_S_BFu0c()
{
  {
    init_simple_test("BFu33_S_BFu0c");
    static BFu33_S_BFu0c lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_S_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_S_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_S_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_S_BFu0c");
    check_field_offset(lv, v2, 5, "BFu33_S_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu33_S_BFu0c(Test_BFu33_S_BFu0c, "BFu33_S_BFu0c", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_S_BFu0i()
{
  {
    init_simple_test("BFu33_S_BFu0i");
    static BFu33_S_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_S_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_S_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_S_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_S_BFu0i");
    check_field_offset(lv, v2, 5, "BFu33_S_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu33_S_BFu0i(Test_BFu33_S_BFu0i, "BFu33_S_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_S_BFu0ll()
{
  {
    init_simple_test("BFu33_S_BFu0ll");
    static BFu33_S_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_S_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_S_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_S_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_S_BFu0ll");
    check_field_offset(lv, v2, 5, "BFu33_S_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu33_S_BFu0ll(Test_BFu33_S_BFu0ll, "BFu33_S_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_S_BFu0s()
{
  {
    init_simple_test("BFu33_S_BFu0s");
    static BFu33_S_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_S_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_S_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_S_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_S_BFu0s");
    check_field_offset(lv, v2, 5, "BFu33_S_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu33_S_BFu0s(Test_BFu33_S_BFu0s, "BFu33_S_BFu0s", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_Uc_BFu0c()
{
  {
    init_simple_test("BFu33_Uc_BFu0c");
    static BFu33_Uc_BFu0c lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_Uc_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Uc_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Uc_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Uc_BFu0c");
    check_field_offset(lv, v2, 5, "BFu33_Uc_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu33_Uc_BFu0c(Test_BFu33_Uc_BFu0c, "BFu33_Uc_BFu0c", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_Uc_BFu0i()
{
  {
    init_simple_test("BFu33_Uc_BFu0i");
    static BFu33_Uc_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_Uc_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_Uc_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Uc_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Uc_BFu0i");
    check_field_offset(lv, v2, 5, "BFu33_Uc_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu33_Uc_BFu0i(Test_BFu33_Uc_BFu0i, "BFu33_Uc_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_Uc_BFu0ll()
{
  {
    init_simple_test("BFu33_Uc_BFu0ll");
    static BFu33_Uc_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_Uc_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_Uc_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Uc_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Uc_BFu0ll");
    check_field_offset(lv, v2, 5, "BFu33_Uc_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu33_Uc_BFu0ll(Test_BFu33_Uc_BFu0ll, "BFu33_Uc_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_Uc_BFu0s()
{
  {
    init_simple_test("BFu33_Uc_BFu0s");
    static BFu33_Uc_BFu0s lv;
    check2(sizeof(lv), 6, "sizeof(BFu33_Uc_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_Uc_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Uc_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Uc_BFu0s");
    check_field_offset(lv, v2, 5, "BFu33_Uc_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu33_Uc_BFu0s(Test_BFu33_Uc_BFu0s, "BFu33_Uc_BFu0s", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_Ui_BFu0c()
{
  {
    init_simple_test("BFu33_Ui_BFu0c");
    static BFu33_Ui_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(BFu33_Ui_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Ui_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Ui_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Ui_BFu0c");
    check_field_offset(lv, v2, 5, "BFu33_Ui_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu33_Ui_BFu0c(Test_BFu33_Ui_BFu0c, "BFu33_Ui_BFu0c", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_Ui_BFu0i()
{
  {
    init_simple_test("BFu33_Ui_BFu0i");
    static BFu33_Ui_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu33_Ui_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_Ui_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Ui_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Ui_BFu0i");
    check_field_offset(lv, v2, 5, "BFu33_Ui_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu33_Ui_BFu0i(Test_BFu33_Ui_BFu0i, "BFu33_Ui_BFu0i", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_Ui_BFu0ll()
{
  {
    init_simple_test("BFu33_Ui_BFu0ll");
    static BFu33_Ui_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu33_Ui_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_Ui_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Ui_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Ui_BFu0ll");
    check_field_offset(lv, v2, 5, "BFu33_Ui_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu33_Ui_BFu0ll(Test_BFu33_Ui_BFu0ll, "BFu33_Ui_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_Ui_BFu0s()
{
  {
    init_simple_test("BFu33_Ui_BFu0s");
    static BFu33_Ui_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu33_Ui_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_Ui_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Ui_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Ui_BFu0s");
    check_field_offset(lv, v2, 5, "BFu33_Ui_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu33_Ui_BFu0s(Test_BFu33_Ui_BFu0s, "BFu33_Ui_BFu0s", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_Ul_BFu0c()
{
  {
    init_simple_test("BFu33_Ul_BFu0c");
    static BFu33_Ul_BFu0c lv;
    check2(sizeof(lv), 13, "sizeof(BFu33_Ul_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Ul_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Ul_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Ul_BFu0c");
    check_field_offset(lv, v2, 5, "BFu33_Ul_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu33_Ul_BFu0c(Test_BFu33_Ul_BFu0c, "BFu33_Ul_BFu0c", 13);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_Ul_BFu0i()
{
  {
    init_simple_test("BFu33_Ul_BFu0i");
    static BFu33_Ul_BFu0i lv;
    check2(sizeof(lv), ABISELECT(16,16), "sizeof(BFu33_Ul_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_Ul_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Ul_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Ul_BFu0i");
    check_field_offset(lv, v2, 5, "BFu33_Ul_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu33_Ul_BFu0i(Test_BFu33_Ul_BFu0i, "BFu33_Ul_BFu0i", ABISELECT(16,16));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_Ul_BFu0ll()
{
  {
    init_simple_test("BFu33_Ul_BFu0ll");
    static BFu33_Ul_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,16), "sizeof(BFu33_Ul_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_Ul_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Ul_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Ul_BFu0ll");
    check_field_offset(lv, v2, 5, "BFu33_Ul_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu33_Ul_BFu0ll(Test_BFu33_Ul_BFu0ll, "BFu33_Ul_BFu0ll", ABISELECT(16,16));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_Ul_BFu0s()
{
  {
    init_simple_test("BFu33_Ul_BFu0s");
    static BFu33_Ul_BFu0s lv;
    check2(sizeof(lv), ABISELECT(14,14), "sizeof(BFu33_Ul_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_Ul_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Ul_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Ul_BFu0s");
    check_field_offset(lv, v2, 5, "BFu33_Ul_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu33_Ul_BFu0s(Test_BFu33_Ul_BFu0s, "BFu33_Ul_BFu0s", ABISELECT(14,14));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_Us_BFu0c()
{
  {
    init_simple_test("BFu33_Us_BFu0c");
    static BFu33_Us_BFu0c lv;
    check2(sizeof(lv), 7, "sizeof(BFu33_Us_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Us_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Us_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Us_BFu0c");
    check_field_offset(lv, v2, 5, "BFu33_Us_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu33_Us_BFu0c(Test_BFu33_Us_BFu0c, "BFu33_Us_BFu0c", 7);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_Us_BFu0i()
{
  {
    init_simple_test("BFu33_Us_BFu0i");
    static BFu33_Us_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_Us_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_Us_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Us_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Us_BFu0i");
    check_field_offset(lv, v2, 5, "BFu33_Us_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu33_Us_BFu0i(Test_BFu33_Us_BFu0i, "BFu33_Us_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_Us_BFu0ll()
{
  {
    init_simple_test("BFu33_Us_BFu0ll");
    static BFu33_Us_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_Us_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_Us_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Us_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Us_BFu0ll");
    check_field_offset(lv, v2, 5, "BFu33_Us_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu33_Us_BFu0ll(Test_BFu33_Us_BFu0ll, "BFu33_Us_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_Us_BFu0s()
{
  {
    init_simple_test("BFu33_Us_BFu0s");
    static BFu33_Us_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu33_Us_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_Us_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Us_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Us_BFu0s");
    check_field_offset(lv, v2, 5, "BFu33_Us_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu33_Us_BFu0s(Test_BFu33_Us_BFu0s, "BFu33_Us_BFu0s", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_Vp_BFu0c()
{
  {
    init_simple_test("BFu33_Vp_BFu0c");
    static BFu33_Vp_BFu0c lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(BFu33_Vp_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu33_Vp_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Vp_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Vp_BFu0c");
    check_field_offset(lv, v2, 5, "BFu33_Vp_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu33_Vp_BFu0c(Test_BFu33_Vp_BFu0c, "BFu33_Vp_BFu0c", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_Vp_BFu0i()
{
  {
    init_simple_test("BFu33_Vp_BFu0i");
    static BFu33_Vp_BFu0i lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu33_Vp_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_Vp_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Vp_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Vp_BFu0i");
    check_field_offset(lv, v2, 5, "BFu33_Vp_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu33_Vp_BFu0i(Test_BFu33_Vp_BFu0i, "BFu33_Vp_BFu0i", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_Vp_BFu0ll()
{
  {
    init_simple_test("BFu33_Vp_BFu0ll");
    static BFu33_Vp_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu33_Vp_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_Vp_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Vp_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Vp_BFu0ll");
    check_field_offset(lv, v2, 5, "BFu33_Vp_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu33_Vp_BFu0ll(Test_BFu33_Vp_BFu0ll, "BFu33_Vp_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu33_Vp_BFu0s()
{
  {
    init_simple_test("BFu33_Vp_BFu0s");
    static BFu33_Vp_BFu0s lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(BFu33_Vp_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu33_Vp_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 33, 1, "BFu33_Vp_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 33, hide_ull(1LL<<32), "BFu33_Vp_BFu0s");
    check_field_offset(lv, v2, 5, "BFu33_Vp_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu33_Vp_BFu0s(Test_BFu33_Vp_BFu0s, "BFu33_Vp_BFu0s", ABISELECT(14,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu0c");
    static BFu7c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu7c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c(Test_BFu7c_BFu0c, "BFu7c_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu0c");
    static BFu7c_BFu0c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu7c_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu0c(Test_BFu7c_BFu0c_BFu0c, "BFu7c_BFu0c_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu0i");
    static BFu7c_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu0i(Test_BFu7c_BFu0c_BFu0i, "BFu7c_BFu0c_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu0ll");
    static BFu7c_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu0ll(Test_BFu7c_BFu0c_BFu0ll, "BFu7c_BFu0c_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu0s");
    static BFu7c_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu7c_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu0s(Test_BFu7c_BFu0c_BFu0s, "BFu7c_BFu0c_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu15i()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu15i");
    static BFu7c_BFu0c_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_BFu0c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "BFu7c_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "BFu7c_BFu0c_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu15i(Test_BFu7c_BFu0c_BFu15i, "BFu7c_BFu0c_BFu15i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu15ll()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu15ll");
    static BFu7c_BFu0c_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_BFu0c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "BFu7c_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "BFu7c_BFu0c_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu15ll(Test_BFu7c_BFu0c_BFu15ll, "BFu7c_BFu0c_BFu15ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu15s()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu15s");
    static BFu7c_BFu0c_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_BFu0c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "BFu7c_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "BFu7c_BFu0c_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu15s(Test_BFu7c_BFu0c_BFu15s, "BFu7c_BFu0c_BFu15s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu16i()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu16i");
    static BFu7c_BFu0c_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_BFu0c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "BFu7c_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "BFu7c_BFu0c_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu16i(Test_BFu7c_BFu0c_BFu16i, "BFu7c_BFu0c_BFu16i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu16ll()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu16ll");
    static BFu7c_BFu0c_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_BFu0c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "BFu7c_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "BFu7c_BFu0c_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu16ll(Test_BFu7c_BFu0c_BFu16ll, "BFu7c_BFu0c_BFu16ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu16s()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu16s");
    static BFu7c_BFu0c_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_BFu0c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "BFu7c_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "BFu7c_BFu0c_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu16s(Test_BFu7c_BFu0c_BFu16s, "BFu7c_BFu0c_BFu16s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu17i()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu17i");
    static BFu7c_BFu0c_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(BFu7c_BFu0c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "BFu7c_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "BFu7c_BFu0c_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu17i(Test_BFu7c_BFu0c_BFu17i, "BFu7c_BFu0c_BFu17i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu17ll()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu17ll");
    static BFu7c_BFu0c_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu7c_BFu0c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "BFu7c_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "BFu7c_BFu0c_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu17ll(Test_BFu7c_BFu0c_BFu17ll, "BFu7c_BFu0c_BFu17ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu1c()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu1c");
    static BFu7c_BFu0c_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu0c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu7c_BFu0c_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu1c(Test_BFu7c_BFu0c_BFu1c, "BFu7c_BFu0c_BFu1c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu1i()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu1i");
    static BFu7c_BFu0c_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu0c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu7c_BFu0c_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu1i(Test_BFu7c_BFu0c_BFu1i, "BFu7c_BFu0c_BFu1i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu1ll()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu1ll");
    static BFu7c_BFu0c_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu0c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu7c_BFu0c_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu1ll(Test_BFu7c_BFu0c_BFu1ll, "BFu7c_BFu0c_BFu1ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu1s()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu1s");
    static BFu7c_BFu0c_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu0c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu7c_BFu0c_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu1s(Test_BFu7c_BFu0c_BFu1s, "BFu7c_BFu0c_BFu1s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu31i()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu31i");
    static BFu7c_BFu0c_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(BFu7c_BFu0c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "BFu7c_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "BFu7c_BFu0c_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu31i(Test_BFu7c_BFu0c_BFu31i, "BFu7c_BFu0c_BFu31i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu31ll()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu31ll");
    static BFu7c_BFu0c_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu7c_BFu0c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "BFu7c_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "BFu7c_BFu0c_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu31ll(Test_BFu7c_BFu0c_BFu31ll, "BFu7c_BFu0c_BFu31ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu32i()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu32i");
    static BFu7c_BFu0c_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(BFu7c_BFu0c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "BFu7c_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "BFu7c_BFu0c_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu32i(Test_BFu7c_BFu0c_BFu32i, "BFu7c_BFu0c_BFu32i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu32ll()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu32ll");
    static BFu7c_BFu0c_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu7c_BFu0c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "BFu7c_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "BFu7c_BFu0c_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu32ll(Test_BFu7c_BFu0c_BFu32ll, "BFu7c_BFu0c_BFu32ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu33()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu33");
    static BFu7c_BFu0c_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(BFu7c_BFu0c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "BFu7c_BFu0c_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "BFu7c_BFu0c_BFu33");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu33(Test_BFu7c_BFu0c_BFu33, "BFu7c_BFu0c_BFu33", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu7c()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu7c");
    static BFu7c_BFu0c_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu0c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu7c_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu7c(Test_BFu7c_BFu0c_BFu7c, "BFu7c_BFu0c_BFu7c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu7i()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu7i");
    static BFu7c_BFu0c_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu0c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu7c_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu7i(Test_BFu7c_BFu0c_BFu7i, "BFu7c_BFu0c_BFu7i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu7ll()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu7ll");
    static BFu7c_BFu0c_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu0c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu7c_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu7ll(Test_BFu7c_BFu0c_BFu7ll, "BFu7c_BFu0c_BFu7ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu7s()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu7s");
    static BFu7c_BFu0c_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu0c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu7c_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu7s(Test_BFu7c_BFu0c_BFu7s, "BFu7c_BFu0c_BFu7s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu8c()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu8c");
    static BFu7c_BFu0c_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu0c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu7c_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu7c_BFu0c_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu8c(Test_BFu7c_BFu0c_BFu8c, "BFu7c_BFu0c_BFu8c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu8i()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu8i");
    static BFu7c_BFu0c_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu0c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu7c_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu7c_BFu0c_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu8i(Test_BFu7c_BFu0c_BFu8i, "BFu7c_BFu0c_BFu8i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu8ll()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu8ll");
    static BFu7c_BFu0c_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu0c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu7c_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu7c_BFu0c_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu8ll(Test_BFu7c_BFu0c_BFu8ll, "BFu7c_BFu0c_BFu8ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu8s()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu8s");
    static BFu7c_BFu0c_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu0c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu7c_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu7c_BFu0c_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu8s(Test_BFu7c_BFu0c_BFu8s, "BFu7c_BFu0c_BFu8s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu9i()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu9i");
    static BFu7c_BFu0c_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_BFu0c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "BFu7c_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "BFu7c_BFu0c_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu9i(Test_BFu7c_BFu0c_BFu9i, "BFu7c_BFu0c_BFu9i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu9ll()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu9ll");
    static BFu7c_BFu0c_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_BFu0c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "BFu7c_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "BFu7c_BFu0c_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu9ll(Test_BFu7c_BFu0c_BFu9ll, "BFu7c_BFu0c_BFu9ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_BFu9s()
{
  {
    init_simple_test("BFu7c_BFu0c_BFu9s");
    static BFu7c_BFu0c_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_BFu0c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "BFu7c_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "BFu7c_BFu0c_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_BFu9s(Test_BFu7c_BFu0c_BFu9s, "BFu7c_BFu0c_BFu9s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_C()
{
  {
    init_simple_test("BFu7c_BFu0c_C");
    static BFu7c_BFu0c_C lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu0c_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_C)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_C");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_C");
    check_field_offset(lv, v2, 1, "BFu7c_BFu0c_C.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_C(Test_BFu7c_BFu0c_C, "BFu7c_BFu0c_C", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_D()
{
  {
    init_simple_test("BFu7c_BFu0c_D");
    static BFu7c_BFu0c_D lv;
    check2(sizeof(lv), 9, "sizeof(BFu7c_BFu0c_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_D)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_D");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_D");
    check_field_offset(lv, v2, 1, "BFu7c_BFu0c_D.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_D(Test_BFu7c_BFu0c_D, "BFu7c_BFu0c_D", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_F()
{
  {
    init_simple_test("BFu7c_BFu0c_F");
    static BFu7c_BFu0c_F lv;
    check2(sizeof(lv), 5, "sizeof(BFu7c_BFu0c_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_F)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_F");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_F");
    check_field_offset(lv, v2, 1, "BFu7c_BFu0c_F.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_F(Test_BFu7c_BFu0c_F, "BFu7c_BFu0c_F", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_I()
{
  {
    init_simple_test("BFu7c_BFu0c_I");
    static BFu7c_BFu0c_I lv;
    check2(sizeof(lv), 5, "sizeof(BFu7c_BFu0c_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_I)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_I");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_I");
    check_field_offset(lv, v2, 1, "BFu7c_BFu0c_I.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_I(Test_BFu7c_BFu0c_I, "BFu7c_BFu0c_I", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_Ip()
{
  {
    init_simple_test("BFu7c_BFu0c_Ip");
    static BFu7c_BFu0c_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7c_BFu0c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_Ip");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_Ip");
    check_field_offset(lv, v2, 1, "BFu7c_BFu0c_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_Ip(Test_BFu7c_BFu0c_Ip, "BFu7c_BFu0c_Ip", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_L()
{
  {
    init_simple_test("BFu7c_BFu0c_L");
    static BFu7c_BFu0c_L lv;
    check2(sizeof(lv), 9, "sizeof(BFu7c_BFu0c_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_L)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_L");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_L");
    check_field_offset(lv, v2, 1, "BFu7c_BFu0c_L.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_L(Test_BFu7c_BFu0c_L, "BFu7c_BFu0c_L", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_S()
{
  {
    init_simple_test("BFu7c_BFu0c_S");
    static BFu7c_BFu0c_S lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_BFu0c_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_S)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_S");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_S");
    check_field_offset(lv, v2, 1, "BFu7c_BFu0c_S.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_S(Test_BFu7c_BFu0c_S, "BFu7c_BFu0c_S", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_Uc()
{
  {
    init_simple_test("BFu7c_BFu0c_Uc");
    static BFu7c_BFu0c_Uc lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu0c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_Uc");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_Uc");
    check_field_offset(lv, v2, 1, "BFu7c_BFu0c_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_Uc(Test_BFu7c_BFu0c_Uc, "BFu7c_BFu0c_Uc", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_Ui()
{
  {
    init_simple_test("BFu7c_BFu0c_Ui");
    static BFu7c_BFu0c_Ui lv;
    check2(sizeof(lv), 5, "sizeof(BFu7c_BFu0c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_Ui");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_Ui");
    check_field_offset(lv, v2, 1, "BFu7c_BFu0c_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_Ui(Test_BFu7c_BFu0c_Ui, "BFu7c_BFu0c_Ui", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_Ul()
{
  {
    init_simple_test("BFu7c_BFu0c_Ul");
    static BFu7c_BFu0c_Ul lv;
    check2(sizeof(lv), 9, "sizeof(BFu7c_BFu0c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_Ul");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_Ul");
    check_field_offset(lv, v2, 1, "BFu7c_BFu0c_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_Ul(Test_BFu7c_BFu0c_Ul, "BFu7c_BFu0c_Ul", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_Us()
{
  {
    init_simple_test("BFu7c_BFu0c_Us");
    static BFu7c_BFu0c_Us lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_BFu0c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_Us)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_Us");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_Us");
    check_field_offset(lv, v2, 1, "BFu7c_BFu0c_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_Us(Test_BFu7c_BFu0c_Us, "BFu7c_BFu0c_Us", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0c_Vp()
{
  {
    init_simple_test("BFu7c_BFu0c_Vp");
    static BFu7c_BFu0c_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7c_BFu0c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu0c_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0c_Vp");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0c_Vp");
    check_field_offset(lv, v2, 1, "BFu7c_BFu0c_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0c_Vp(Test_BFu7c_BFu0c_Vp, "BFu7c_BFu0c_Vp", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu0i");
    static BFu7c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i(Test_BFu7c_BFu0i, "BFu7c_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu0c");
    static BFu7c_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu0c(Test_BFu7c_BFu0i_BFu0c, "BFu7c_BFu0i_BFu0c", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu0i");
    static BFu7c_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu0i(Test_BFu7c_BFu0i_BFu0i, "BFu7c_BFu0i_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu0ll");
    static BFu7c_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu0ll(Test_BFu7c_BFu0i_BFu0ll, "BFu7c_BFu0i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu0s");
    static BFu7c_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu0s(Test_BFu7c_BFu0i_BFu0s, "BFu7c_BFu0i_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu15i()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu15i");
    static BFu7c_BFu0i_BFu15i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7c_BFu0i_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, 1, "BFu7c_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, hide_ull(1LL<<14), "BFu7c_BFu0i_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu15i(Test_BFu7c_BFu0i_BFu15i, "BFu7c_BFu0i_BFu15i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu15ll()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu15ll");
    static BFu7c_BFu0i_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7c_BFu0i_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, 1, "BFu7c_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, hide_ull(1LL<<14), "BFu7c_BFu0i_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu15ll(Test_BFu7c_BFu0i_BFu15ll, "BFu7c_BFu0i_BFu15ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu15s()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu15s");
    static BFu7c_BFu0i_BFu15s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7c_BFu0i_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, 1, "BFu7c_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, hide_ull(1LL<<14), "BFu7c_BFu0i_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu15s(Test_BFu7c_BFu0i_BFu15s, "BFu7c_BFu0i_BFu15s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu16i()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu16i");
    static BFu7c_BFu0i_BFu16i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7c_BFu0i_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, 1, "BFu7c_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, hide_ull(1LL<<15), "BFu7c_BFu0i_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu16i(Test_BFu7c_BFu0i_BFu16i, "BFu7c_BFu0i_BFu16i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu16ll()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu16ll");
    static BFu7c_BFu0i_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7c_BFu0i_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, 1, "BFu7c_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, hide_ull(1LL<<15), "BFu7c_BFu0i_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu16ll(Test_BFu7c_BFu0i_BFu16ll, "BFu7c_BFu0i_BFu16ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu16s()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu16s");
    static BFu7c_BFu0i_BFu16s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7c_BFu0i_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, 1, "BFu7c_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, hide_ull(1LL<<15), "BFu7c_BFu0i_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu16s(Test_BFu7c_BFu0i_BFu16s, "BFu7c_BFu0i_BFu16s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu17i()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu17i");
    static BFu7c_BFu0i_BFu17i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu7c_BFu0i_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 17, 1, "BFu7c_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 17, hide_ull(1LL<<16), "BFu7c_BFu0i_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu17i(Test_BFu7c_BFu0i_BFu17i, "BFu7c_BFu0i_BFu17i", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu17ll()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu17ll");
    static BFu7c_BFu0i_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu7c_BFu0i_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 17, 1, "BFu7c_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 17, hide_ull(1LL<<16), "BFu7c_BFu0i_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu17ll(Test_BFu7c_BFu0i_BFu17ll, "BFu7c_BFu0i_BFu17ll", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu1c()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu1c");
    static BFu7c_BFu0i_BFu1c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7c_BFu0i_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 1, 1, "BFu7c_BFu0i_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu1c(Test_BFu7c_BFu0i_BFu1c, "BFu7c_BFu0i_BFu1c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu1i()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu1i");
    static BFu7c_BFu0i_BFu1i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7c_BFu0i_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 1, 1, "BFu7c_BFu0i_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu1i(Test_BFu7c_BFu0i_BFu1i, "BFu7c_BFu0i_BFu1i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu1ll()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu1ll");
    static BFu7c_BFu0i_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7c_BFu0i_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 1, 1, "BFu7c_BFu0i_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu1ll(Test_BFu7c_BFu0i_BFu1ll, "BFu7c_BFu0i_BFu1ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu1s()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu1s");
    static BFu7c_BFu0i_BFu1s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7c_BFu0i_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 1, 1, "BFu7c_BFu0i_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu1s(Test_BFu7c_BFu0i_BFu1s, "BFu7c_BFu0i_BFu1s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu31i()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu31i");
    static BFu7c_BFu0i_BFu31i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7c_BFu0i_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 31, 1, "BFu7c_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 31, hide_ull(1LL<<30), "BFu7c_BFu0i_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu31i(Test_BFu7c_BFu0i_BFu31i, "BFu7c_BFu0i_BFu31i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu31ll()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu31ll");
    static BFu7c_BFu0i_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7c_BFu0i_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 31, 1, "BFu7c_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 31, hide_ull(1LL<<30), "BFu7c_BFu0i_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu31ll(Test_BFu7c_BFu0i_BFu31ll, "BFu7c_BFu0i_BFu31ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu32i()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu32i");
    static BFu7c_BFu0i_BFu32i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7c_BFu0i_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 32, 1, "BFu7c_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 32, hide_ull(1LL<<31), "BFu7c_BFu0i_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu32i(Test_BFu7c_BFu0i_BFu32i, "BFu7c_BFu0i_BFu32i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu32ll()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu32ll");
    static BFu7c_BFu0i_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7c_BFu0i_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 32, 1, "BFu7c_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 32, hide_ull(1LL<<31), "BFu7c_BFu0i_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu32ll(Test_BFu7c_BFu0i_BFu32ll, "BFu7c_BFu0i_BFu32ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu33()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu33");
    static BFu7c_BFu0i_BFu33 lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu7c_BFu0i_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 33, 1, "BFu7c_BFu0i_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 33, hide_ull(1LL<<32), "BFu7c_BFu0i_BFu33");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu33(Test_BFu7c_BFu0i_BFu33, "BFu7c_BFu0i_BFu33", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu7c()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu7c");
    static BFu7c_BFu0i_BFu7c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7c_BFu0i_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, 1, "BFu7c_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu7c(Test_BFu7c_BFu0i_BFu7c, "BFu7c_BFu0i_BFu7c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu7i()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu7i");
    static BFu7c_BFu0i_BFu7i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7c_BFu0i_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, 1, "BFu7c_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu7i(Test_BFu7c_BFu0i_BFu7i, "BFu7c_BFu0i_BFu7i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu7ll()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu7ll");
    static BFu7c_BFu0i_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7c_BFu0i_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, 1, "BFu7c_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu7ll(Test_BFu7c_BFu0i_BFu7ll, "BFu7c_BFu0i_BFu7ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu7s()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu7s");
    static BFu7c_BFu0i_BFu7s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7c_BFu0i_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, 1, "BFu7c_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu7s(Test_BFu7c_BFu0i_BFu7s, "BFu7c_BFu0i_BFu7s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu8c()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu8c");
    static BFu7c_BFu0i_BFu8c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7c_BFu0i_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, 1, "BFu7c_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, hide_ull(1LL<<7), "BFu7c_BFu0i_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu8c(Test_BFu7c_BFu0i_BFu8c, "BFu7c_BFu0i_BFu8c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu8i()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu8i");
    static BFu7c_BFu0i_BFu8i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7c_BFu0i_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, 1, "BFu7c_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, hide_ull(1LL<<7), "BFu7c_BFu0i_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu8i(Test_BFu7c_BFu0i_BFu8i, "BFu7c_BFu0i_BFu8i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu8ll()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu8ll");
    static BFu7c_BFu0i_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7c_BFu0i_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, 1, "BFu7c_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, hide_ull(1LL<<7), "BFu7c_BFu0i_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu8ll(Test_BFu7c_BFu0i_BFu8ll, "BFu7c_BFu0i_BFu8ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu8s()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu8s");
    static BFu7c_BFu0i_BFu8s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7c_BFu0i_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, 1, "BFu7c_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, hide_ull(1LL<<7), "BFu7c_BFu0i_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu8s(Test_BFu7c_BFu0i_BFu8s, "BFu7c_BFu0i_BFu8s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu9i()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu9i");
    static BFu7c_BFu0i_BFu9i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7c_BFu0i_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, 1, "BFu7c_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, hide_ull(1LL<<8), "BFu7c_BFu0i_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu9i(Test_BFu7c_BFu0i_BFu9i, "BFu7c_BFu0i_BFu9i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu9ll()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu9ll");
    static BFu7c_BFu0i_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7c_BFu0i_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, 1, "BFu7c_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, hide_ull(1LL<<8), "BFu7c_BFu0i_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu9ll(Test_BFu7c_BFu0i_BFu9ll, "BFu7c_BFu0i_BFu9ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_BFu9s()
{
  {
    init_simple_test("BFu7c_BFu0i_BFu9s");
    static BFu7c_BFu0i_BFu9s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7c_BFu0i_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, 1, "BFu7c_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, hide_ull(1LL<<8), "BFu7c_BFu0i_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_BFu9s(Test_BFu7c_BFu0i_BFu9s, "BFu7c_BFu0i_BFu9s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_C()
{
  {
    init_simple_test("BFu7c_BFu0i_C");
    static BFu7c_BFu0i_C lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7c_BFu0i_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_C)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_C");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_C");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu7c_BFu0i_C.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_C(Test_BFu7c_BFu0i_C, "BFu7c_BFu0i_C", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_D()
{
  {
    init_simple_test("BFu7c_BFu0i_D");
    static BFu7c_BFu0i_D lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu7c_BFu0i_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_D)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_D");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_D");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu7c_BFu0i_D.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_D(Test_BFu7c_BFu0i_D, "BFu7c_BFu0i_D", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_F()
{
  {
    init_simple_test("BFu7c_BFu0i_F");
    static BFu7c_BFu0i_F lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7c_BFu0i_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_F)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_F");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_F");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu7c_BFu0i_F.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_F(Test_BFu7c_BFu0i_F, "BFu7c_BFu0i_F", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_I()
{
  {
    init_simple_test("BFu7c_BFu0i_I");
    static BFu7c_BFu0i_I lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7c_BFu0i_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_I)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_I");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_I");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu7c_BFu0i_I.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_I(Test_BFu7c_BFu0i_I, "BFu7c_BFu0i_I", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_Ip()
{
  {
    init_simple_test("BFu7c_BFu0i_Ip");
    static BFu7c_BFu0i_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu7c_BFu0i_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_Ip");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_Ip");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu7c_BFu0i_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_Ip(Test_BFu7c_BFu0i_Ip, "BFu7c_BFu0i_Ip", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_L()
{
  {
    init_simple_test("BFu7c_BFu0i_L");
    static BFu7c_BFu0i_L lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu7c_BFu0i_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_L)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_L");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_L");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu7c_BFu0i_L.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_L(Test_BFu7c_BFu0i_L, "BFu7c_BFu0i_L", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_S()
{
  {
    init_simple_test("BFu7c_BFu0i_S");
    static BFu7c_BFu0i_S lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7c_BFu0i_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_S)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_S");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_S");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu7c_BFu0i_S.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_S(Test_BFu7c_BFu0i_S, "BFu7c_BFu0i_S", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_Uc()
{
  {
    init_simple_test("BFu7c_BFu0i_Uc");
    static BFu7c_BFu0i_Uc lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7c_BFu0i_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_Uc");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_Uc");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu7c_BFu0i_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_Uc(Test_BFu7c_BFu0i_Uc, "BFu7c_BFu0i_Uc", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_Ui()
{
  {
    init_simple_test("BFu7c_BFu0i_Ui");
    static BFu7c_BFu0i_Ui lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7c_BFu0i_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_Ui");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_Ui");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu7c_BFu0i_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_Ui(Test_BFu7c_BFu0i_Ui, "BFu7c_BFu0i_Ui", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_Ul()
{
  {
    init_simple_test("BFu7c_BFu0i_Ul");
    static BFu7c_BFu0i_Ul lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu7c_BFu0i_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_Ul");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_Ul");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu7c_BFu0i_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_Ul(Test_BFu7c_BFu0i_Ul, "BFu7c_BFu0i_Ul", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_Us()
{
  {
    init_simple_test("BFu7c_BFu0i_Us");
    static BFu7c_BFu0i_Us lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7c_BFu0i_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_Us)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_Us");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_Us");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu7c_BFu0i_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_Us(Test_BFu7c_BFu0i_Us, "BFu7c_BFu0i_Us", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0i_Vp()
{
  {
    init_simple_test("BFu7c_BFu0i_Vp");
    static BFu7c_BFu0i_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu7c_BFu0i_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0i_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0i_Vp");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0i_Vp");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu7c_BFu0i_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0i_Vp(Test_BFu7c_BFu0i_Vp, "BFu7c_BFu0i_Vp", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu0ll");
    static BFu7c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll(Test_BFu7c_BFu0ll, "BFu7c_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu0c");
    static BFu7c_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu0c(Test_BFu7c_BFu0ll_BFu0c, "BFu7c_BFu0ll_BFu0c", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu0i");
    static BFu7c_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu0i(Test_BFu7c_BFu0ll_BFu0i, "BFu7c_BFu0ll_BFu0i", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu0ll");
    static BFu7c_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu0ll(Test_BFu7c_BFu0ll_BFu0ll, "BFu7c_BFu0ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu0s");
    static BFu7c_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu0s(Test_BFu7c_BFu0ll_BFu0s, "BFu7c_BFu0ll_BFu0s", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu15i()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu15i");
    static BFu7c_BFu0ll_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu7c_BFu0ll_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "BFu7c_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "BFu7c_BFu0ll_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu15i(Test_BFu7c_BFu0ll_BFu15i, "BFu7c_BFu0ll_BFu15i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu15ll()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu15ll");
    static BFu7c_BFu0ll_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu7c_BFu0ll_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "BFu7c_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "BFu7c_BFu0ll_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu15ll(Test_BFu7c_BFu0ll_BFu15ll, "BFu7c_BFu0ll_BFu15ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu15s()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu15s");
    static BFu7c_BFu0ll_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu7c_BFu0ll_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "BFu7c_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "BFu7c_BFu0ll_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu15s(Test_BFu7c_BFu0ll_BFu15s, "BFu7c_BFu0ll_BFu15s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu16i()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu16i");
    static BFu7c_BFu0ll_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu7c_BFu0ll_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "BFu7c_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "BFu7c_BFu0ll_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu16i(Test_BFu7c_BFu0ll_BFu16i, "BFu7c_BFu0ll_BFu16i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu16ll()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu16ll");
    static BFu7c_BFu0ll_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu7c_BFu0ll_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "BFu7c_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "BFu7c_BFu0ll_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu16ll(Test_BFu7c_BFu0ll_BFu16ll, "BFu7c_BFu0ll_BFu16ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu16s()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu16s");
    static BFu7c_BFu0ll_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu7c_BFu0ll_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "BFu7c_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "BFu7c_BFu0ll_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu16s(Test_BFu7c_BFu0ll_BFu16s, "BFu7c_BFu0ll_BFu16s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu17i()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu17i");
    static BFu7c_BFu0ll_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu7c_BFu0ll_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "BFu7c_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "BFu7c_BFu0ll_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu17i(Test_BFu7c_BFu0ll_BFu17i, "BFu7c_BFu0ll_BFu17i", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu17ll()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu17ll");
    static BFu7c_BFu0ll_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu7c_BFu0ll_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "BFu7c_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "BFu7c_BFu0ll_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu17ll(Test_BFu7c_BFu0ll_BFu17ll, "BFu7c_BFu0ll_BFu17ll", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu1c()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu1c");
    static BFu7c_BFu0ll_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7c_BFu0ll_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu7c_BFu0ll_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu1c(Test_BFu7c_BFu0ll_BFu1c, "BFu7c_BFu0ll_BFu1c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu1i()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu1i");
    static BFu7c_BFu0ll_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7c_BFu0ll_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu7c_BFu0ll_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu1i(Test_BFu7c_BFu0ll_BFu1i, "BFu7c_BFu0ll_BFu1i", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu1ll()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu1ll");
    static BFu7c_BFu0ll_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7c_BFu0ll_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu7c_BFu0ll_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu1ll(Test_BFu7c_BFu0ll_BFu1ll, "BFu7c_BFu0ll_BFu1ll", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu1s()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu1s");
    static BFu7c_BFu0ll_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7c_BFu0ll_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu7c_BFu0ll_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu1s(Test_BFu7c_BFu0ll_BFu1s, "BFu7c_BFu0ll_BFu1s", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu31i()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu31i");
    static BFu7c_BFu0ll_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu7c_BFu0ll_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "BFu7c_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "BFu7c_BFu0ll_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu31i(Test_BFu7c_BFu0ll_BFu31i, "BFu7c_BFu0ll_BFu31i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu31ll()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu31ll");
    static BFu7c_BFu0ll_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu7c_BFu0ll_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "BFu7c_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "BFu7c_BFu0ll_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu31ll(Test_BFu7c_BFu0ll_BFu31ll, "BFu7c_BFu0ll_BFu31ll", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu32i()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu32i");
    static BFu7c_BFu0ll_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu7c_BFu0ll_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "BFu7c_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "BFu7c_BFu0ll_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu32i(Test_BFu7c_BFu0ll_BFu32i, "BFu7c_BFu0ll_BFu32i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu32ll()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu32ll");
    static BFu7c_BFu0ll_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu7c_BFu0ll_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "BFu7c_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "BFu7c_BFu0ll_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu32ll(Test_BFu7c_BFu0ll_BFu32ll, "BFu7c_BFu0ll_BFu32ll", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu33()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu33");
    static BFu7c_BFu0ll_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(BFu7c_BFu0ll_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, 1, "BFu7c_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, hide_ull(1LL<<32), "BFu7c_BFu0ll_BFu33");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu33(Test_BFu7c_BFu0ll_BFu33, "BFu7c_BFu0ll_BFu33", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu7c()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu7c");
    static BFu7c_BFu0ll_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7c_BFu0ll_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu7c_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu7c(Test_BFu7c_BFu0ll_BFu7c, "BFu7c_BFu0ll_BFu7c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu7i()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu7i");
    static BFu7c_BFu0ll_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7c_BFu0ll_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu7c_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu7i(Test_BFu7c_BFu0ll_BFu7i, "BFu7c_BFu0ll_BFu7i", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu7ll()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu7ll");
    static BFu7c_BFu0ll_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7c_BFu0ll_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu7c_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu7ll(Test_BFu7c_BFu0ll_BFu7ll, "BFu7c_BFu0ll_BFu7ll", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu7s()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu7s");
    static BFu7c_BFu0ll_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7c_BFu0ll_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu7c_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu7s(Test_BFu7c_BFu0ll_BFu7s, "BFu7c_BFu0ll_BFu7s", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu8c()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu8c");
    static BFu7c_BFu0ll_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7c_BFu0ll_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu7c_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu7c_BFu0ll_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu8c(Test_BFu7c_BFu0ll_BFu8c, "BFu7c_BFu0ll_BFu8c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu8i()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu8i");
    static BFu7c_BFu0ll_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7c_BFu0ll_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu7c_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu7c_BFu0ll_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu8i(Test_BFu7c_BFu0ll_BFu8i, "BFu7c_BFu0ll_BFu8i", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu8ll()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu8ll");
    static BFu7c_BFu0ll_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7c_BFu0ll_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu7c_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu7c_BFu0ll_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu8ll(Test_BFu7c_BFu0ll_BFu8ll, "BFu7c_BFu0ll_BFu8ll", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu8s()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu8s");
    static BFu7c_BFu0ll_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7c_BFu0ll_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu7c_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu7c_BFu0ll_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu8s(Test_BFu7c_BFu0ll_BFu8s, "BFu7c_BFu0ll_BFu8s", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu9i()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu9i");
    static BFu7c_BFu0ll_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu7c_BFu0ll_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "BFu7c_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "BFu7c_BFu0ll_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu9i(Test_BFu7c_BFu0ll_BFu9i, "BFu7c_BFu0ll_BFu9i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu9ll()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu9ll");
    static BFu7c_BFu0ll_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu7c_BFu0ll_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "BFu7c_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "BFu7c_BFu0ll_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu9ll(Test_BFu7c_BFu0ll_BFu9ll, "BFu7c_BFu0ll_BFu9ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_BFu9s()
{
  {
    init_simple_test("BFu7c_BFu0ll_BFu9s");
    static BFu7c_BFu0ll_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu7c_BFu0ll_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "BFu7c_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "BFu7c_BFu0ll_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_BFu9s(Test_BFu7c_BFu0ll_BFu9s, "BFu7c_BFu0ll_BFu9s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_C()
{
  {
    init_simple_test("BFu7c_BFu0ll_C");
    static BFu7c_BFu0ll_C lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7c_BFu0ll_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_C)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_C");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_C");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu7c_BFu0ll_C.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_C(Test_BFu7c_BFu0ll_C, "BFu7c_BFu0ll_C", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_D()
{
  {
    init_simple_test("BFu7c_BFu0ll_D");
    static BFu7c_BFu0ll_D lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu7c_BFu0ll_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_D)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_D");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_D");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu7c_BFu0ll_D.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_D(Test_BFu7c_BFu0ll_D, "BFu7c_BFu0ll_D", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_F()
{
  {
    init_simple_test("BFu7c_BFu0ll_F");
    static BFu7c_BFu0ll_F lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu7c_BFu0ll_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_F)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_F");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_F");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu7c_BFu0ll_F.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_F(Test_BFu7c_BFu0ll_F, "BFu7c_BFu0ll_F", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_I()
{
  {
    init_simple_test("BFu7c_BFu0ll_I");
    static BFu7c_BFu0ll_I lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu7c_BFu0ll_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_I)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_I");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_I");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu7c_BFu0ll_I.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_I(Test_BFu7c_BFu0ll_I, "BFu7c_BFu0ll_I", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_Ip()
{
  {
    init_simple_test("BFu7c_BFu0ll_Ip");
    static BFu7c_BFu0ll_Ip lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu7c_BFu0ll_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_Ip");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_Ip");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu7c_BFu0ll_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_Ip(Test_BFu7c_BFu0ll_Ip, "BFu7c_BFu0ll_Ip", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_L()
{
  {
    init_simple_test("BFu7c_BFu0ll_L");
    static BFu7c_BFu0ll_L lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu7c_BFu0ll_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_L)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_L");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_L");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu7c_BFu0ll_L.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_L(Test_BFu7c_BFu0ll_L, "BFu7c_BFu0ll_L", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_S()
{
  {
    init_simple_test("BFu7c_BFu0ll_S");
    static BFu7c_BFu0ll_S lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu7c_BFu0ll_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_S)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_S");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_S");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu7c_BFu0ll_S.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_S(Test_BFu7c_BFu0ll_S, "BFu7c_BFu0ll_S", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_Uc()
{
  {
    init_simple_test("BFu7c_BFu0ll_Uc");
    static BFu7c_BFu0ll_Uc lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7c_BFu0ll_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_Uc");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_Uc");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu7c_BFu0ll_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_Uc(Test_BFu7c_BFu0ll_Uc, "BFu7c_BFu0ll_Uc", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_Ui()
{
  {
    init_simple_test("BFu7c_BFu0ll_Ui");
    static BFu7c_BFu0ll_Ui lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu7c_BFu0ll_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_Ui");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_Ui");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu7c_BFu0ll_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_Ui(Test_BFu7c_BFu0ll_Ui, "BFu7c_BFu0ll_Ui", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_Ul()
{
  {
    init_simple_test("BFu7c_BFu0ll_Ul");
    static BFu7c_BFu0ll_Ul lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu7c_BFu0ll_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_Ul");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_Ul");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu7c_BFu0ll_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_Ul(Test_BFu7c_BFu0ll_Ul, "BFu7c_BFu0ll_Ul", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_Us()
{
  {
    init_simple_test("BFu7c_BFu0ll_Us");
    static BFu7c_BFu0ll_Us lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu7c_BFu0ll_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_Us)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_Us");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_Us");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu7c_BFu0ll_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_Us(Test_BFu7c_BFu0ll_Us, "BFu7c_BFu0ll_Us", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0ll_Vp()
{
  {
    init_simple_test("BFu7c_BFu0ll_Vp");
    static BFu7c_BFu0ll_Vp lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu7c_BFu0ll_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0ll_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0ll_Vp");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0ll_Vp");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu7c_BFu0ll_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0ll_Vp(Test_BFu7c_BFu0ll_Vp, "BFu7c_BFu0ll_Vp", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu0s");
    static BFu7c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu7c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s(Test_BFu7c_BFu0s, "BFu7c_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu0c");
    static BFu7c_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu7c_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu0c(Test_BFu7c_BFu0s_BFu0c, "BFu7c_BFu0s_BFu0c", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu0i");
    static BFu7c_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu0i(Test_BFu7c_BFu0s_BFu0i, "BFu7c_BFu0s_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu0ll");
    static BFu7c_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu0ll(Test_BFu7c_BFu0s_BFu0ll, "BFu7c_BFu0s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu0s");
    static BFu7c_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu7c_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu0s(Test_BFu7c_BFu0s_BFu0s, "BFu7c_BFu0s_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu15i()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu15i");
    static BFu7c_BFu0s_BFu15i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu0s_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, 1, "BFu7c_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, hide_ull(1LL<<14), "BFu7c_BFu0s_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu15i(Test_BFu7c_BFu0s_BFu15i, "BFu7c_BFu0s_BFu15i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu15ll()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu15ll");
    static BFu7c_BFu0s_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu0s_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, 1, "BFu7c_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, hide_ull(1LL<<14), "BFu7c_BFu0s_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu15ll(Test_BFu7c_BFu0s_BFu15ll, "BFu7c_BFu0s_BFu15ll", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu15s()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu15s");
    static BFu7c_BFu0s_BFu15s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu0s_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, 1, "BFu7c_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, hide_ull(1LL<<14), "BFu7c_BFu0s_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu15s(Test_BFu7c_BFu0s_BFu15s, "BFu7c_BFu0s_BFu15s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu16i()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu16i");
    static BFu7c_BFu0s_BFu16i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu0s_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, 1, "BFu7c_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, hide_ull(1LL<<15), "BFu7c_BFu0s_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu16i(Test_BFu7c_BFu0s_BFu16i, "BFu7c_BFu0s_BFu16i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu16ll()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu16ll");
    static BFu7c_BFu0s_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu0s_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, 1, "BFu7c_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, hide_ull(1LL<<15), "BFu7c_BFu0s_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu16ll(Test_BFu7c_BFu0s_BFu16ll, "BFu7c_BFu0s_BFu16ll", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu16s()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu16s");
    static BFu7c_BFu0s_BFu16s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu0s_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, 1, "BFu7c_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, hide_ull(1LL<<15), "BFu7c_BFu0s_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu16s(Test_BFu7c_BFu0s_BFu16s, "BFu7c_BFu0s_BFu16s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu17i()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu17i");
    static BFu7c_BFu0s_BFu17i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7c_BFu0s_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 17, 1, "BFu7c_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 17, hide_ull(1LL<<16), "BFu7c_BFu0s_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu17i(Test_BFu7c_BFu0s_BFu17i, "BFu7c_BFu0s_BFu17i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu17ll()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu17ll");
    static BFu7c_BFu0s_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7c_BFu0s_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 17, 1, "BFu7c_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 17, hide_ull(1LL<<16), "BFu7c_BFu0s_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu17ll(Test_BFu7c_BFu0s_BFu17ll, "BFu7c_BFu0s_BFu17ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu1c()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu1c");
    static BFu7c_BFu0s_BFu1c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu7c_BFu0s_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 1, 1, "BFu7c_BFu0s_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu1c(Test_BFu7c_BFu0s_BFu1c, "BFu7c_BFu0s_BFu1c", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu1i()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu1i");
    static BFu7c_BFu0s_BFu1i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu7c_BFu0s_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 1, 1, "BFu7c_BFu0s_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu1i(Test_BFu7c_BFu0s_BFu1i, "BFu7c_BFu0s_BFu1i", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu1ll()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu1ll");
    static BFu7c_BFu0s_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu7c_BFu0s_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 1, 1, "BFu7c_BFu0s_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu1ll(Test_BFu7c_BFu0s_BFu1ll, "BFu7c_BFu0s_BFu1ll", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu1s()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu1s");
    static BFu7c_BFu0s_BFu1s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu7c_BFu0s_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 1, 1, "BFu7c_BFu0s_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu1s(Test_BFu7c_BFu0s_BFu1s, "BFu7c_BFu0s_BFu1s", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu31i()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu31i");
    static BFu7c_BFu0s_BFu31i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7c_BFu0s_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 31, 1, "BFu7c_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 31, hide_ull(1LL<<30), "BFu7c_BFu0s_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu31i(Test_BFu7c_BFu0s_BFu31i, "BFu7c_BFu0s_BFu31i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu31ll()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu31ll");
    static BFu7c_BFu0s_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7c_BFu0s_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 31, 1, "BFu7c_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 31, hide_ull(1LL<<30), "BFu7c_BFu0s_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu31ll(Test_BFu7c_BFu0s_BFu31ll, "BFu7c_BFu0s_BFu31ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu32i()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu32i");
    static BFu7c_BFu0s_BFu32i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7c_BFu0s_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 32, 1, "BFu7c_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 32, hide_ull(1LL<<31), "BFu7c_BFu0s_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu32i(Test_BFu7c_BFu0s_BFu32i, "BFu7c_BFu0s_BFu32i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu32ll()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu32ll");
    static BFu7c_BFu0s_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7c_BFu0s_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 32, 1, "BFu7c_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 32, hide_ull(1LL<<31), "BFu7c_BFu0s_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu32ll(Test_BFu7c_BFu0s_BFu32ll, "BFu7c_BFu0s_BFu32ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu33()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu33");
    static BFu7c_BFu0s_BFu33 lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu7c_BFu0s_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 33, 1, "BFu7c_BFu0s_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 33, hide_ull(1LL<<32), "BFu7c_BFu0s_BFu33");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu33(Test_BFu7c_BFu0s_BFu33, "BFu7c_BFu0s_BFu33", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu7c()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu7c");
    static BFu7c_BFu0s_BFu7c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu7c_BFu0s_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, 1, "BFu7c_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu7c(Test_BFu7c_BFu0s_BFu7c, "BFu7c_BFu0s_BFu7c", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu7i()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu7i");
    static BFu7c_BFu0s_BFu7i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu7c_BFu0s_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, 1, "BFu7c_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu7i(Test_BFu7c_BFu0s_BFu7i, "BFu7c_BFu0s_BFu7i", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu7ll()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu7ll");
    static BFu7c_BFu0s_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu7c_BFu0s_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, 1, "BFu7c_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu7ll(Test_BFu7c_BFu0s_BFu7ll, "BFu7c_BFu0s_BFu7ll", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu7s()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu7s");
    static BFu7c_BFu0s_BFu7s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu7c_BFu0s_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, 1, "BFu7c_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu7s(Test_BFu7c_BFu0s_BFu7s, "BFu7c_BFu0s_BFu7s", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu8c()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu8c");
    static BFu7c_BFu0s_BFu8c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu7c_BFu0s_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, 1, "BFu7c_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, hide_ull(1LL<<7), "BFu7c_BFu0s_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu8c(Test_BFu7c_BFu0s_BFu8c, "BFu7c_BFu0s_BFu8c", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu8i()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu8i");
    static BFu7c_BFu0s_BFu8i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu7c_BFu0s_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, 1, "BFu7c_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, hide_ull(1LL<<7), "BFu7c_BFu0s_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu8i(Test_BFu7c_BFu0s_BFu8i, "BFu7c_BFu0s_BFu8i", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu8ll()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu8ll");
    static BFu7c_BFu0s_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu7c_BFu0s_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, 1, "BFu7c_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, hide_ull(1LL<<7), "BFu7c_BFu0s_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu8ll(Test_BFu7c_BFu0s_BFu8ll, "BFu7c_BFu0s_BFu8ll", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu8s()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu8s");
    static BFu7c_BFu0s_BFu8s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu7c_BFu0s_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, 1, "BFu7c_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, hide_ull(1LL<<7), "BFu7c_BFu0s_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu8s(Test_BFu7c_BFu0s_BFu8s, "BFu7c_BFu0s_BFu8s", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu9i()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu9i");
    static BFu7c_BFu0s_BFu9i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu0s_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, 1, "BFu7c_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, hide_ull(1LL<<8), "BFu7c_BFu0s_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu9i(Test_BFu7c_BFu0s_BFu9i, "BFu7c_BFu0s_BFu9i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu9ll()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu9ll");
    static BFu7c_BFu0s_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu0s_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, 1, "BFu7c_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, hide_ull(1LL<<8), "BFu7c_BFu0s_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu9ll(Test_BFu7c_BFu0s_BFu9ll, "BFu7c_BFu0s_BFu9ll", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_BFu9s()
{
  {
    init_simple_test("BFu7c_BFu0s_BFu9s");
    static BFu7c_BFu0s_BFu9s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu0s_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, 1, "BFu7c_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, hide_ull(1LL<<8), "BFu7c_BFu0s_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_BFu9s(Test_BFu7c_BFu0s_BFu9s, "BFu7c_BFu0s_BFu9s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_C()
{
  {
    init_simple_test("BFu7c_BFu0s_C");
    static BFu7c_BFu0s_C lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu7c_BFu0s_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_C)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_C");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_C");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu7c_BFu0s_C.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_C(Test_BFu7c_BFu0s_C, "BFu7c_BFu0s_C", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_D()
{
  {
    init_simple_test("BFu7c_BFu0s_D");
    static BFu7c_BFu0s_D lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu7c_BFu0s_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_D)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_D");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_D");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu7c_BFu0s_D.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_D(Test_BFu7c_BFu0s_D, "BFu7c_BFu0s_D", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_F()
{
  {
    init_simple_test("BFu7c_BFu0s_F");
    static BFu7c_BFu0s_F lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7c_BFu0s_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_F)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_F");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_F");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu7c_BFu0s_F.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_F(Test_BFu7c_BFu0s_F, "BFu7c_BFu0s_F", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_I()
{
  {
    init_simple_test("BFu7c_BFu0s_I");
    static BFu7c_BFu0s_I lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7c_BFu0s_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_I)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_I");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_I");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu7c_BFu0s_I.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_I(Test_BFu7c_BFu0s_I, "BFu7c_BFu0s_I", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_Ip()
{
  {
    init_simple_test("BFu7c_BFu0s_Ip");
    static BFu7c_BFu0s_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu7c_BFu0s_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_Ip");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_Ip");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu7c_BFu0s_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_Ip(Test_BFu7c_BFu0s_Ip, "BFu7c_BFu0s_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_L()
{
  {
    init_simple_test("BFu7c_BFu0s_L");
    static BFu7c_BFu0s_L lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu7c_BFu0s_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_L)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_L");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_L");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu7c_BFu0s_L.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_L(Test_BFu7c_BFu0s_L, "BFu7c_BFu0s_L", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_S()
{
  {
    init_simple_test("BFu7c_BFu0s_S");
    static BFu7c_BFu0s_S lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu0s_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_S)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_S");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_S");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu7c_BFu0s_S.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_S(Test_BFu7c_BFu0s_S, "BFu7c_BFu0s_S", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_Uc()
{
  {
    init_simple_test("BFu7c_BFu0s_Uc");
    static BFu7c_BFu0s_Uc lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu7c_BFu0s_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_Uc");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_Uc");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu7c_BFu0s_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_Uc(Test_BFu7c_BFu0s_Uc, "BFu7c_BFu0s_Uc", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_Ui()
{
  {
    init_simple_test("BFu7c_BFu0s_Ui");
    static BFu7c_BFu0s_Ui lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7c_BFu0s_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_Ui");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_Ui");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu7c_BFu0s_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_Ui(Test_BFu7c_BFu0s_Ui, "BFu7c_BFu0s_Ui", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_Ul()
{
  {
    init_simple_test("BFu7c_BFu0s_Ul");
    static BFu7c_BFu0s_Ul lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu7c_BFu0s_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_Ul");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_Ul");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu7c_BFu0s_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_Ul(Test_BFu7c_BFu0s_Ul, "BFu7c_BFu0s_Ul", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_Us()
{
  {
    init_simple_test("BFu7c_BFu0s_Us");
    static BFu7c_BFu0s_Us lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu0s_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_Us)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_Us");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_Us");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu7c_BFu0s_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_Us(Test_BFu7c_BFu0s_Us, "BFu7c_BFu0s_Us", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu0s_Vp()
{
  {
    init_simple_test("BFu7c_BFu0s_Vp");
    static BFu7c_BFu0s_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu7c_BFu0s_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu0s_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu0s_Vp");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu0s_Vp");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu7c_BFu0s_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu0s_Vp(Test_BFu7c_BFu0s_Vp, "BFu7c_BFu0s_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu15i_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu15i_BFu0c");
    static BFu7c_BFu15i_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_BFu15i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu15i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu15i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7c_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7c_BFu15i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu15i_BFu0c(Test_BFu7c_BFu15i_BFu0c, "BFu7c_BFu15i_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu15i_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu15i_BFu0i");
    static BFu7c_BFu15i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu15i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu15i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu15i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7c_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7c_BFu15i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu15i_BFu0i(Test_BFu7c_BFu15i_BFu0i, "BFu7c_BFu15i_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu15i_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu15i_BFu0ll");
    static BFu7c_BFu15i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_BFu15i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu15i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu15i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7c_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7c_BFu15i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu15i_BFu0ll(Test_BFu7c_BFu15i_BFu0ll, "BFu7c_BFu15i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu15i_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu15i_BFu0s");
    static BFu7c_BFu15i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu15i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu15i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu15i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7c_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7c_BFu15i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu15i_BFu0s(Test_BFu7c_BFu15i_BFu0s, "BFu7c_BFu15i_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu15ll_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu15ll_BFu0c");
    static BFu7c_BFu15ll_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_BFu15ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu15ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu15ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7c_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7c_BFu15ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu15ll_BFu0c(Test_BFu7c_BFu15ll_BFu0c, "BFu7c_BFu15ll_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu15ll_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu15ll_BFu0i");
    static BFu7c_BFu15ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu15ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu15ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu15ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7c_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7c_BFu15ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu15ll_BFu0i(Test_BFu7c_BFu15ll_BFu0i, "BFu7c_BFu15ll_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu15ll_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu15ll_BFu0ll");
    static BFu7c_BFu15ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_BFu15ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu15ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7c_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7c_BFu15ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu15ll_BFu0ll(Test_BFu7c_BFu15ll_BFu0ll, "BFu7c_BFu15ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu15ll_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu15ll_BFu0s");
    static BFu7c_BFu15ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu15ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu15ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu15ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7c_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7c_BFu15ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu15ll_BFu0s(Test_BFu7c_BFu15ll_BFu0s, "BFu7c_BFu15ll_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu15s_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu15s_BFu0c");
    static BFu7c_BFu15s_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_BFu15s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu15s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu15s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7c_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7c_BFu15s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu15s_BFu0c(Test_BFu7c_BFu15s_BFu0c, "BFu7c_BFu15s_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu15s_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu15s_BFu0i");
    static BFu7c_BFu15s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu15s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu15s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu15s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7c_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7c_BFu15s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu15s_BFu0i(Test_BFu7c_BFu15s_BFu0i, "BFu7c_BFu15s_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu15s_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu15s_BFu0ll");
    static BFu7c_BFu15s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_BFu15s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu15s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu15s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7c_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7c_BFu15s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu15s_BFu0ll(Test_BFu7c_BFu15s_BFu0ll, "BFu7c_BFu15s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu15s_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu15s_BFu0s");
    static BFu7c_BFu15s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu15s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu15s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu15s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7c_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7c_BFu15s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu15s_BFu0s(Test_BFu7c_BFu15s_BFu0s, "BFu7c_BFu15s_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu16i_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu16i_BFu0c");
    static BFu7c_BFu16i_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_BFu16i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu16i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu16i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7c_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7c_BFu16i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu16i_BFu0c(Test_BFu7c_BFu16i_BFu0c, "BFu7c_BFu16i_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu16i_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu16i_BFu0i");
    static BFu7c_BFu16i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu16i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu16i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu16i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7c_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7c_BFu16i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu16i_BFu0i(Test_BFu7c_BFu16i_BFu0i, "BFu7c_BFu16i_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu16i_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu16i_BFu0ll");
    static BFu7c_BFu16i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_BFu16i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu16i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu16i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7c_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7c_BFu16i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu16i_BFu0ll(Test_BFu7c_BFu16i_BFu0ll, "BFu7c_BFu16i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu16i_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu16i_BFu0s");
    static BFu7c_BFu16i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu16i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu16i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu16i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7c_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7c_BFu16i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu16i_BFu0s(Test_BFu7c_BFu16i_BFu0s, "BFu7c_BFu16i_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu16ll_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu16ll_BFu0c");
    static BFu7c_BFu16ll_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_BFu16ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu16ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu16ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7c_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7c_BFu16ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu16ll_BFu0c(Test_BFu7c_BFu16ll_BFu0c, "BFu7c_BFu16ll_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu16ll_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu16ll_BFu0i");
    static BFu7c_BFu16ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu16ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu16ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu16ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7c_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7c_BFu16ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu16ll_BFu0i(Test_BFu7c_BFu16ll_BFu0i, "BFu7c_BFu16ll_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu16ll_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu16ll_BFu0ll");
    static BFu7c_BFu16ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_BFu16ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu16ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7c_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7c_BFu16ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu16ll_BFu0ll(Test_BFu7c_BFu16ll_BFu0ll, "BFu7c_BFu16ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu16ll_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu16ll_BFu0s");
    static BFu7c_BFu16ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu16ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu16ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu16ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7c_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7c_BFu16ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu16ll_BFu0s(Test_BFu7c_BFu16ll_BFu0s, "BFu7c_BFu16ll_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu16s_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu16s_BFu0c");
    static BFu7c_BFu16s_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_BFu16s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu16s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu16s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7c_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7c_BFu16s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu16s_BFu0c(Test_BFu7c_BFu16s_BFu0c, "BFu7c_BFu16s_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu16s_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu16s_BFu0i");
    static BFu7c_BFu16s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu16s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu16s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu16s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7c_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7c_BFu16s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu16s_BFu0i(Test_BFu7c_BFu16s_BFu0i, "BFu7c_BFu16s_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu16s_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu16s_BFu0ll");
    static BFu7c_BFu16s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_BFu16s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu16s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu16s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7c_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7c_BFu16s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu16s_BFu0ll(Test_BFu7c_BFu16s_BFu0ll, "BFu7c_BFu16s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu16s_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu16s_BFu0s");
    static BFu7c_BFu16s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu16s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu16s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu16s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7c_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7c_BFu16s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu16s_BFu0s(Test_BFu7c_BFu16s_BFu0s, "BFu7c_BFu16s_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu17i_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu17i_BFu0c");
    static BFu7c_BFu17i_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_BFu17i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu17i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu17i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "BFu7c_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "BFu7c_BFu17i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu17i_BFu0c(Test_BFu7c_BFu17i_BFu0c, "BFu7c_BFu17i_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu17i_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu17i_BFu0i");
    static BFu7c_BFu17i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu17i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu17i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu17i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "BFu7c_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "BFu7c_BFu17i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu17i_BFu0i(Test_BFu7c_BFu17i_BFu0i, "BFu7c_BFu17i_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu17i_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu17i_BFu0ll");
    static BFu7c_BFu17i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_BFu17i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu17i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu17i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "BFu7c_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "BFu7c_BFu17i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu17i_BFu0ll(Test_BFu7c_BFu17i_BFu0ll, "BFu7c_BFu17i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu17i_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu17i_BFu0s");
    static BFu7c_BFu17i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu17i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu17i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu17i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "BFu7c_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "BFu7c_BFu17i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu17i_BFu0s(Test_BFu7c_BFu17i_BFu0s, "BFu7c_BFu17i_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu17ll_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu17ll_BFu0c");
    static BFu7c_BFu17ll_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_BFu17ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu17ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu17ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "BFu7c_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "BFu7c_BFu17ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu17ll_BFu0c(Test_BFu7c_BFu17ll_BFu0c, "BFu7c_BFu17ll_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu17ll_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu17ll_BFu0i");
    static BFu7c_BFu17ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu17ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu17ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu17ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "BFu7c_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "BFu7c_BFu17ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu17ll_BFu0i(Test_BFu7c_BFu17ll_BFu0i, "BFu7c_BFu17ll_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu17ll_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu17ll_BFu0ll");
    static BFu7c_BFu17ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_BFu17ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu17ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "BFu7c_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "BFu7c_BFu17ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu17ll_BFu0ll(Test_BFu7c_BFu17ll_BFu0ll, "BFu7c_BFu17ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu17ll_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu17ll_BFu0s");
    static BFu7c_BFu17ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu17ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu17ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu17ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "BFu7c_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "BFu7c_BFu17ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu17ll_BFu0s(Test_BFu7c_BFu17ll_BFu0s, "BFu7c_BFu17ll_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu1c_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu1c_BFu0c");
    static BFu7c_BFu1c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu7c_BFu1c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu1c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu1c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu1c_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7c_BFu1c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu1c_BFu0c(Test_BFu7c_BFu1c_BFu0c, "BFu7c_BFu1c_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu1c_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu1c_BFu0i");
    static BFu7c_BFu1c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu1c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu1c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu1c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu1c_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7c_BFu1c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu1c_BFu0i(Test_BFu7c_BFu1c_BFu0i, "BFu7c_BFu1c_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu1c_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu1c_BFu0ll");
    static BFu7c_BFu1c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_BFu1c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu1c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu1c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu1c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7c_BFu1c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu1c_BFu0ll(Test_BFu7c_BFu1c_BFu0ll, "BFu7c_BFu1c_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu1c_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu1c_BFu0s");
    static BFu7c_BFu1c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu7c_BFu1c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu1c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu1c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu1c_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7c_BFu1c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu1c_BFu0s(Test_BFu7c_BFu1c_BFu0s, "BFu7c_BFu1c_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu1i_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu1i_BFu0c");
    static BFu7c_BFu1i_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu7c_BFu1i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu1i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu1i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu1i_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7c_BFu1i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu1i_BFu0c(Test_BFu7c_BFu1i_BFu0c, "BFu7c_BFu1i_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu1i_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu1i_BFu0i");
    static BFu7c_BFu1i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu1i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu1i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu1i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu1i_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7c_BFu1i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu1i_BFu0i(Test_BFu7c_BFu1i_BFu0i, "BFu7c_BFu1i_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu1i_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu1i_BFu0ll");
    static BFu7c_BFu1i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_BFu1i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu1i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu1i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu1i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7c_BFu1i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu1i_BFu0ll(Test_BFu7c_BFu1i_BFu0ll, "BFu7c_BFu1i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu1i_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu1i_BFu0s");
    static BFu7c_BFu1i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu7c_BFu1i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu1i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu1i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu1i_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7c_BFu1i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu1i_BFu0s(Test_BFu7c_BFu1i_BFu0s, "BFu7c_BFu1i_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu1ll_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu1ll_BFu0c");
    static BFu7c_BFu1ll_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu7c_BFu1ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu1ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu1ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu1ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7c_BFu1ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu1ll_BFu0c(Test_BFu7c_BFu1ll_BFu0c, "BFu7c_BFu1ll_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu1ll_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu1ll_BFu0i");
    static BFu7c_BFu1ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu1ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu1ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu1ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu1ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7c_BFu1ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu1ll_BFu0i(Test_BFu7c_BFu1ll_BFu0i, "BFu7c_BFu1ll_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu1ll_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu1ll_BFu0ll");
    static BFu7c_BFu1ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_BFu1ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu1ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7c_BFu1ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu1ll_BFu0ll(Test_BFu7c_BFu1ll_BFu0ll, "BFu7c_BFu1ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu1ll_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu1ll_BFu0s");
    static BFu7c_BFu1ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu7c_BFu1ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu1ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu1ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu1ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7c_BFu1ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu1ll_BFu0s(Test_BFu7c_BFu1ll_BFu0s, "BFu7c_BFu1ll_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu1s_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu1s_BFu0c");
    static BFu7c_BFu1s_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu7c_BFu1s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu1s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu1s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu1s_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7c_BFu1s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu1s_BFu0c(Test_BFu7c_BFu1s_BFu0c, "BFu7c_BFu1s_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu1s_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu1s_BFu0i");
    static BFu7c_BFu1s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu1s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu1s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu1s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu1s_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7c_BFu1s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu1s_BFu0i(Test_BFu7c_BFu1s_BFu0i, "BFu7c_BFu1s_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu1s_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu1s_BFu0ll");
    static BFu7c_BFu1s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_BFu1s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu1s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu1s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu1s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7c_BFu1s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu1s_BFu0ll(Test_BFu7c_BFu1s_BFu0ll, "BFu7c_BFu1s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu1s_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu1s_BFu0s");
    static BFu7c_BFu1s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu7c_BFu1s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu1s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu1s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu1s_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7c_BFu1s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu1s_BFu0s(Test_BFu7c_BFu1s_BFu0s, "BFu7c_BFu1s_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu31i_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu31i_BFu0c");
    static BFu7c_BFu31i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu7c_BFu31i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu31i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu31i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "BFu7c_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "BFu7c_BFu31i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu31i_BFu0c(Test_BFu7c_BFu31i_BFu0c, "BFu7c_BFu31i_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu31i_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu31i_BFu0i");
    static BFu7c_BFu31i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7c_BFu31i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu31i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu31i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "BFu7c_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "BFu7c_BFu31i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu31i_BFu0i(Test_BFu7c_BFu31i_BFu0i, "BFu7c_BFu31i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu31i_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu31i_BFu0ll");
    static BFu7c_BFu31i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7c_BFu31i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu31i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu31i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "BFu7c_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "BFu7c_BFu31i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu31i_BFu0ll(Test_BFu7c_BFu31i_BFu0ll, "BFu7c_BFu31i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu31i_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu31i_BFu0s");
    static BFu7c_BFu31i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7c_BFu31i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu31i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu31i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "BFu7c_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "BFu7c_BFu31i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu31i_BFu0s(Test_BFu7c_BFu31i_BFu0s, "BFu7c_BFu31i_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu31ll_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu31ll_BFu0c");
    static BFu7c_BFu31ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu7c_BFu31ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu31ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu31ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "BFu7c_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "BFu7c_BFu31ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu31ll_BFu0c(Test_BFu7c_BFu31ll_BFu0c, "BFu7c_BFu31ll_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu31ll_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu31ll_BFu0i");
    static BFu7c_BFu31ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7c_BFu31ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu31ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu31ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "BFu7c_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "BFu7c_BFu31ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu31ll_BFu0i(Test_BFu7c_BFu31ll_BFu0i, "BFu7c_BFu31ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu31ll_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu31ll_BFu0ll");
    static BFu7c_BFu31ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7c_BFu31ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu31ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "BFu7c_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "BFu7c_BFu31ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu31ll_BFu0ll(Test_BFu7c_BFu31ll_BFu0ll, "BFu7c_BFu31ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu31ll_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu31ll_BFu0s");
    static BFu7c_BFu31ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7c_BFu31ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu31ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu31ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "BFu7c_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "BFu7c_BFu31ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu31ll_BFu0s(Test_BFu7c_BFu31ll_BFu0s, "BFu7c_BFu31ll_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu32i_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu32i_BFu0c");
    static BFu7c_BFu32i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu7c_BFu32i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu32i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu32i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "BFu7c_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "BFu7c_BFu32i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu32i_BFu0c(Test_BFu7c_BFu32i_BFu0c, "BFu7c_BFu32i_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu32i_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu32i_BFu0i");
    static BFu7c_BFu32i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7c_BFu32i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu32i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu32i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "BFu7c_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "BFu7c_BFu32i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu32i_BFu0i(Test_BFu7c_BFu32i_BFu0i, "BFu7c_BFu32i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu32i_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu32i_BFu0ll");
    static BFu7c_BFu32i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7c_BFu32i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu32i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu32i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "BFu7c_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "BFu7c_BFu32i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu32i_BFu0ll(Test_BFu7c_BFu32i_BFu0ll, "BFu7c_BFu32i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu32i_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu32i_BFu0s");
    static BFu7c_BFu32i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7c_BFu32i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu32i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu32i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "BFu7c_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "BFu7c_BFu32i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu32i_BFu0s(Test_BFu7c_BFu32i_BFu0s, "BFu7c_BFu32i_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu32ll_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu32ll_BFu0c");
    static BFu7c_BFu32ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu7c_BFu32ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu32ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu32ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "BFu7c_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "BFu7c_BFu32ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu32ll_BFu0c(Test_BFu7c_BFu32ll_BFu0c, "BFu7c_BFu32ll_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu32ll_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu32ll_BFu0i");
    static BFu7c_BFu32ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7c_BFu32ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu32ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu32ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "BFu7c_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "BFu7c_BFu32ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu32ll_BFu0i(Test_BFu7c_BFu32ll_BFu0i, "BFu7c_BFu32ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu32ll_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu32ll_BFu0ll");
    static BFu7c_BFu32ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7c_BFu32ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu32ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "BFu7c_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "BFu7c_BFu32ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu32ll_BFu0ll(Test_BFu7c_BFu32ll_BFu0ll, "BFu7c_BFu32ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu32ll_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu32ll_BFu0s");
    static BFu7c_BFu32ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7c_BFu32ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu32ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu32ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "BFu7c_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "BFu7c_BFu32ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu32ll_BFu0s(Test_BFu7c_BFu32ll_BFu0s, "BFu7c_BFu32ll_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu33_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu33_BFu0c");
    static BFu7c_BFu33_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu7c_BFu33_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu33_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu33_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 33, 1, "BFu7c_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 33, hide_ull(1LL<<32), "BFu7c_BFu33_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu33_BFu0c(Test_BFu7c_BFu33_BFu0c, "BFu7c_BFu33_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu33_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu33_BFu0i");
    static BFu7c_BFu33_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7c_BFu33_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu33_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu33_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 33, 1, "BFu7c_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 33, hide_ull(1LL<<32), "BFu7c_BFu33_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu33_BFu0i(Test_BFu7c_BFu33_BFu0i, "BFu7c_BFu33_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu33_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu33_BFu0ll");
    static BFu7c_BFu33_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7c_BFu33_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu33_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu33_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 33, 1, "BFu7c_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 33, hide_ull(1LL<<32), "BFu7c_BFu33_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu33_BFu0ll(Test_BFu7c_BFu33_BFu0ll, "BFu7c_BFu33_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu33_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu33_BFu0s");
    static BFu7c_BFu33_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7c_BFu33_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu33_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu33_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 33, 1, "BFu7c_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 33, hide_ull(1LL<<32), "BFu7c_BFu33_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu33_BFu0s(Test_BFu7c_BFu33_BFu0s, "BFu7c_BFu33_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu7c_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu7c_BFu0c");
    static BFu7c_BFu7c_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu7c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu7c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu7c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7c_BFu7c_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7c_BFu7c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu7c_BFu0c(Test_BFu7c_BFu7c_BFu0c, "BFu7c_BFu7c_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu7c_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu7c_BFu0i");
    static BFu7c_BFu7c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu7c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu7c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu7c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7c_BFu7c_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7c_BFu7c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu7c_BFu0i(Test_BFu7c_BFu7c_BFu0i, "BFu7c_BFu7c_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu7c_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu7c_BFu0ll");
    static BFu7c_BFu7c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_BFu7c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu7c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu7c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7c_BFu7c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7c_BFu7c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu7c_BFu0ll(Test_BFu7c_BFu7c_BFu0ll, "BFu7c_BFu7c_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu7c_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu7c_BFu0s");
    static BFu7c_BFu7c_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu7c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu7c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu7c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7c_BFu7c_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7c_BFu7c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu7c_BFu0s(Test_BFu7c_BFu7c_BFu0s, "BFu7c_BFu7c_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu7i_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu7i_BFu0c");
    static BFu7c_BFu7i_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu7i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu7i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu7i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7c_BFu7i_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7c_BFu7i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu7i_BFu0c(Test_BFu7c_BFu7i_BFu0c, "BFu7c_BFu7i_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu7i_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu7i_BFu0i");
    static BFu7c_BFu7i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu7i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu7i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu7i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7c_BFu7i_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7c_BFu7i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu7i_BFu0i(Test_BFu7c_BFu7i_BFu0i, "BFu7c_BFu7i_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu7i_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu7i_BFu0ll");
    static BFu7c_BFu7i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_BFu7i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu7i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu7i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7c_BFu7i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7c_BFu7i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu7i_BFu0ll(Test_BFu7c_BFu7i_BFu0ll, "BFu7c_BFu7i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu7i_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu7i_BFu0s");
    static BFu7c_BFu7i_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu7i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu7i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu7i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7c_BFu7i_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7c_BFu7i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu7i_BFu0s(Test_BFu7c_BFu7i_BFu0s, "BFu7c_BFu7i_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu7ll_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu7ll_BFu0c");
    static BFu7c_BFu7ll_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu7ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu7ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu7ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7c_BFu7ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7c_BFu7ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu7ll_BFu0c(Test_BFu7c_BFu7ll_BFu0c, "BFu7c_BFu7ll_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu7ll_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu7ll_BFu0i");
    static BFu7c_BFu7ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu7ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu7ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu7ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7c_BFu7ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7c_BFu7ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu7ll_BFu0i(Test_BFu7c_BFu7ll_BFu0i, "BFu7c_BFu7ll_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu7ll_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu7ll_BFu0ll");
    static BFu7c_BFu7ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_BFu7ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu7ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7c_BFu7ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7c_BFu7ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu7ll_BFu0ll(Test_BFu7c_BFu7ll_BFu0ll, "BFu7c_BFu7ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu7ll_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu7ll_BFu0s");
    static BFu7c_BFu7ll_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu7ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu7ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu7ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7c_BFu7ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7c_BFu7ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu7ll_BFu0s(Test_BFu7c_BFu7ll_BFu0s, "BFu7c_BFu7ll_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu7s_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu7s_BFu0c");
    static BFu7c_BFu7s_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu7s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu7s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu7s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7c_BFu7s_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7c_BFu7s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu7s_BFu0c(Test_BFu7c_BFu7s_BFu0c, "BFu7c_BFu7s_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu7s_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu7s_BFu0i");
    static BFu7c_BFu7s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu7s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu7s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu7s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7c_BFu7s_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7c_BFu7s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu7s_BFu0i(Test_BFu7c_BFu7s_BFu0i, "BFu7c_BFu7s_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu7s_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu7s_BFu0ll");
    static BFu7c_BFu7s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_BFu7s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu7s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu7s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7c_BFu7s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7c_BFu7s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu7s_BFu0ll(Test_BFu7c_BFu7s_BFu0ll, "BFu7c_BFu7s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu7s_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu7s_BFu0s");
    static BFu7c_BFu7s_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu7s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu7s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu7s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 7, 1, "BFu7c_BFu7s_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 7, hide_ull(1LL<<6), "BFu7c_BFu7s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu7s_BFu0s(Test_BFu7c_BFu7s_BFu0s, "BFu7c_BFu7s_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu8c_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu8c_BFu0c");
    static BFu7c_BFu8c_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu8c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu8c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu8c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7c_BFu8c_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7c_BFu8c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu8c_BFu0c(Test_BFu7c_BFu8c_BFu0c, "BFu7c_BFu8c_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu8c_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu8c_BFu0i");
    static BFu7c_BFu8c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu8c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu8c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu8c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7c_BFu8c_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7c_BFu8c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu8c_BFu0i(Test_BFu7c_BFu8c_BFu0i, "BFu7c_BFu8c_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu8c_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu8c_BFu0ll");
    static BFu7c_BFu8c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_BFu8c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu8c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu8c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7c_BFu8c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7c_BFu8c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu8c_BFu0ll(Test_BFu7c_BFu8c_BFu0ll, "BFu7c_BFu8c_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu8c_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu8c_BFu0s");
    static BFu7c_BFu8c_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu8c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu8c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu8c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7c_BFu8c_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7c_BFu8c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu8c_BFu0s(Test_BFu7c_BFu8c_BFu0s, "BFu7c_BFu8c_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu8i_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu8i_BFu0c");
    static BFu7c_BFu8i_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu8i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu8i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu8i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7c_BFu8i_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7c_BFu8i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu8i_BFu0c(Test_BFu7c_BFu8i_BFu0c, "BFu7c_BFu8i_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu8i_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu8i_BFu0i");
    static BFu7c_BFu8i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu8i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu8i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu8i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7c_BFu8i_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7c_BFu8i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu8i_BFu0i(Test_BFu7c_BFu8i_BFu0i, "BFu7c_BFu8i_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu8i_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu8i_BFu0ll");
    static BFu7c_BFu8i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_BFu8i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu8i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu8i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7c_BFu8i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7c_BFu8i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu8i_BFu0ll(Test_BFu7c_BFu8i_BFu0ll, "BFu7c_BFu8i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu8i_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu8i_BFu0s");
    static BFu7c_BFu8i_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu8i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu8i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu8i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7c_BFu8i_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7c_BFu8i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu8i_BFu0s(Test_BFu7c_BFu8i_BFu0s, "BFu7c_BFu8i_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu8ll_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu8ll_BFu0c");
    static BFu7c_BFu8ll_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu8ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu8ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu8ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7c_BFu8ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7c_BFu8ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu8ll_BFu0c(Test_BFu7c_BFu8ll_BFu0c, "BFu7c_BFu8ll_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu8ll_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu8ll_BFu0i");
    static BFu7c_BFu8ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu8ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu8ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu8ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7c_BFu8ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7c_BFu8ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu8ll_BFu0i(Test_BFu7c_BFu8ll_BFu0i, "BFu7c_BFu8ll_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu8ll_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu8ll_BFu0ll");
    static BFu7c_BFu8ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_BFu8ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu8ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7c_BFu8ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7c_BFu8ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu8ll_BFu0ll(Test_BFu7c_BFu8ll_BFu0ll, "BFu7c_BFu8ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu8ll_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu8ll_BFu0s");
    static BFu7c_BFu8ll_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu8ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu8ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu8ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7c_BFu8ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7c_BFu8ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu8ll_BFu0s(Test_BFu7c_BFu8ll_BFu0s, "BFu7c_BFu8ll_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu8s_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu8s_BFu0c");
    static BFu7c_BFu8s_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu8s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu8s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu8s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7c_BFu8s_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7c_BFu8s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu8s_BFu0c(Test_BFu7c_BFu8s_BFu0c, "BFu7c_BFu8s_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu8s_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu8s_BFu0i");
    static BFu7c_BFu8s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu8s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu8s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu8s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7c_BFu8s_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7c_BFu8s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu8s_BFu0i(Test_BFu7c_BFu8s_BFu0i, "BFu7c_BFu8s_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu8s_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu8s_BFu0ll");
    static BFu7c_BFu8s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_BFu8s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu8s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu8s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7c_BFu8s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7c_BFu8s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu8s_BFu0ll(Test_BFu7c_BFu8s_BFu0ll, "BFu7c_BFu8s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu8s_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu8s_BFu0s");
    static BFu7c_BFu8s_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu8s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu8s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu8s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 8, 1, "BFu7c_BFu8s_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 8, hide_ull(1LL<<7), "BFu7c_BFu8s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu8s_BFu0s(Test_BFu7c_BFu8s_BFu0s, "BFu7c_BFu8s_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu9i_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu9i_BFu0c");
    static BFu7c_BFu9i_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu9i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu9i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu9i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "BFu7c_BFu9i_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "BFu7c_BFu9i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu9i_BFu0c(Test_BFu7c_BFu9i_BFu0c, "BFu7c_BFu9i_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu9i_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu9i_BFu0i");
    static BFu7c_BFu9i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu9i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu9i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu9i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "BFu7c_BFu9i_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "BFu7c_BFu9i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu9i_BFu0i(Test_BFu7c_BFu9i_BFu0i, "BFu7c_BFu9i_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu9i_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu9i_BFu0ll");
    static BFu7c_BFu9i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_BFu9i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu9i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu9i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "BFu7c_BFu9i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "BFu7c_BFu9i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu9i_BFu0ll(Test_BFu7c_BFu9i_BFu0ll, "BFu7c_BFu9i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu9i_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu9i_BFu0s");
    static BFu7c_BFu9i_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu9i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu9i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu9i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "BFu7c_BFu9i_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "BFu7c_BFu9i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu9i_BFu0s(Test_BFu7c_BFu9i_BFu0s, "BFu7c_BFu9i_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu9ll_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu9ll_BFu0c");
    static BFu7c_BFu9ll_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu9ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu9ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu9ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "BFu7c_BFu9ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "BFu7c_BFu9ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu9ll_BFu0c(Test_BFu7c_BFu9ll_BFu0c, "BFu7c_BFu9ll_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu9ll_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu9ll_BFu0i");
    static BFu7c_BFu9ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu9ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu9ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu9ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "BFu7c_BFu9ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "BFu7c_BFu9ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu9ll_BFu0i(Test_BFu7c_BFu9ll_BFu0i, "BFu7c_BFu9ll_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu9ll_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu9ll_BFu0ll");
    static BFu7c_BFu9ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_BFu9ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu9ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "BFu7c_BFu9ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "BFu7c_BFu9ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu9ll_BFu0ll(Test_BFu7c_BFu9ll_BFu0ll, "BFu7c_BFu9ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu9ll_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu9ll_BFu0s");
    static BFu7c_BFu9ll_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu9ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu9ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu9ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "BFu7c_BFu9ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "BFu7c_BFu9ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu9ll_BFu0s(Test_BFu7c_BFu9ll_BFu0s, "BFu7c_BFu9ll_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu9s_BFu0c()
{
  {
    init_simple_test("BFu7c_BFu9s_BFu0c");
    static BFu7c_BFu9s_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu9s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_BFu9s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu9s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "BFu7c_BFu9s_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "BFu7c_BFu9s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu9s_BFu0c(Test_BFu7c_BFu9s_BFu0c, "BFu7c_BFu9s_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu9s_BFu0i()
{
  {
    init_simple_test("BFu7c_BFu9s_BFu0i");
    static BFu7c_BFu9s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_BFu9s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu9s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu9s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "BFu7c_BFu9s_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "BFu7c_BFu9s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu9s_BFu0i(Test_BFu7c_BFu9s_BFu0i, "BFu7c_BFu9s_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu9s_BFu0ll()
{
  {
    init_simple_test("BFu7c_BFu9s_BFu0ll");
    static BFu7c_BFu9s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_BFu9s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu9s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu9s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "BFu7c_BFu9s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "BFu7c_BFu9s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu9s_BFu0ll(Test_BFu7c_BFu9s_BFu0ll, "BFu7c_BFu9s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_BFu9s_BFu0s()
{
  {
    init_simple_test("BFu7c_BFu9s_BFu0s");
    static BFu7c_BFu9s_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_BFu9s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_BFu9s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_BFu9s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 9, 1, "BFu7c_BFu9s_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 9, hide_ull(1LL<<8), "BFu7c_BFu9s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7c_BFu9s_BFu0s(Test_BFu7c_BFu9s_BFu0s, "BFu7c_BFu9s_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_C_BFu0c()
{
  {
    init_simple_test("BFu7c_C_BFu0c");
    static BFu7c_C_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_C_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_C_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_C_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_C_BFu0c");
    check_field_offset(lv, v2, 1, "BFu7c_C_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_C_BFu0c(Test_BFu7c_C_BFu0c, "BFu7c_C_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_C_BFu0i()
{
  {
    init_simple_test("BFu7c_C_BFu0i");
    static BFu7c_C_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_C_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_C_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_C_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_C_BFu0i");
    check_field_offset(lv, v2, 1, "BFu7c_C_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_C_BFu0i(Test_BFu7c_C_BFu0i, "BFu7c_C_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_C_BFu0ll()
{
  {
    init_simple_test("BFu7c_C_BFu0ll");
    static BFu7c_C_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_C_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_C_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_C_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_C_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu7c_C_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_C_BFu0ll(Test_BFu7c_C_BFu0ll, "BFu7c_C_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_C_BFu0s()
{
  {
    init_simple_test("BFu7c_C_BFu0s");
    static BFu7c_C_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_C_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_C_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_C_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_C_BFu0s");
    check_field_offset(lv, v2, 1, "BFu7c_C_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_C_BFu0s(Test_BFu7c_C_BFu0s, "BFu7c_C_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_D_BFu0c()
{
  {
    init_simple_test("BFu7c_D_BFu0c");
    static BFu7c_D_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(BFu7c_D_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_D_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_D_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_D_BFu0c");
    check_field_offset(lv, v2, 1, "BFu7c_D_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_D_BFu0c(Test_BFu7c_D_BFu0c, "BFu7c_D_BFu0c", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_D_BFu0i()
{
  {
    init_simple_test("BFu7c_D_BFu0i");
    static BFu7c_D_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu7c_D_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_D_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_D_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_D_BFu0i");
    check_field_offset(lv, v2, 1, "BFu7c_D_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_D_BFu0i(Test_BFu7c_D_BFu0i, "BFu7c_D_BFu0i", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_D_BFu0ll()
{
  {
    init_simple_test("BFu7c_D_BFu0ll");
    static BFu7c_D_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu7c_D_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_D_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_D_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_D_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu7c_D_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_D_BFu0ll(Test_BFu7c_D_BFu0ll, "BFu7c_D_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_D_BFu0s()
{
  {
    init_simple_test("BFu7c_D_BFu0s");
    static BFu7c_D_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu7c_D_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_D_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_D_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_D_BFu0s");
    check_field_offset(lv, v2, 1, "BFu7c_D_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_D_BFu0s(Test_BFu7c_D_BFu0s, "BFu7c_D_BFu0s", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_F_BFu0c()
{
  {
    init_simple_test("BFu7c_F_BFu0c");
    static BFu7c_F_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu7c_F_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_F_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_F_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_F_BFu0c");
    check_field_offset(lv, v2, 1, "BFu7c_F_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_F_BFu0c(Test_BFu7c_F_BFu0c, "BFu7c_F_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_F_BFu0i()
{
  {
    init_simple_test("BFu7c_F_BFu0i");
    static BFu7c_F_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7c_F_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_F_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_F_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_F_BFu0i");
    check_field_offset(lv, v2, 1, "BFu7c_F_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_F_BFu0i(Test_BFu7c_F_BFu0i, "BFu7c_F_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_F_BFu0ll()
{
  {
    init_simple_test("BFu7c_F_BFu0ll");
    static BFu7c_F_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7c_F_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_F_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_F_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_F_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu7c_F_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_F_BFu0ll(Test_BFu7c_F_BFu0ll, "BFu7c_F_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_F_BFu0s()
{
  {
    init_simple_test("BFu7c_F_BFu0s");
    static BFu7c_F_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7c_F_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_F_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_F_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_F_BFu0s");
    check_field_offset(lv, v2, 1, "BFu7c_F_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_F_BFu0s(Test_BFu7c_F_BFu0s, "BFu7c_F_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_I_BFu0c()
{
  {
    init_simple_test("BFu7c_I_BFu0c");
    static BFu7c_I_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu7c_I_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_I_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_I_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_I_BFu0c");
    check_field_offset(lv, v2, 1, "BFu7c_I_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_I_BFu0c(Test_BFu7c_I_BFu0c, "BFu7c_I_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_I_BFu0i()
{
  {
    init_simple_test("BFu7c_I_BFu0i");
    static BFu7c_I_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7c_I_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_I_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_I_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_I_BFu0i");
    check_field_offset(lv, v2, 1, "BFu7c_I_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_I_BFu0i(Test_BFu7c_I_BFu0i, "BFu7c_I_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_I_BFu0ll()
{
  {
    init_simple_test("BFu7c_I_BFu0ll");
    static BFu7c_I_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7c_I_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_I_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_I_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_I_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu7c_I_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_I_BFu0ll(Test_BFu7c_I_BFu0ll, "BFu7c_I_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_I_BFu0s()
{
  {
    init_simple_test("BFu7c_I_BFu0s");
    static BFu7c_I_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7c_I_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_I_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_I_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_I_BFu0s");
    check_field_offset(lv, v2, 1, "BFu7c_I_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_I_BFu0s(Test_BFu7c_I_BFu0s, "BFu7c_I_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_Ip_BFu0c()
{
  {
    init_simple_test("BFu7c_Ip_BFu0c");
    static BFu7c_Ip_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7c_Ip_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Ip_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Ip_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Ip_BFu0c");
    check_field_offset(lv, v2, 1, "BFu7c_Ip_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_Ip_BFu0c(Test_BFu7c_Ip_BFu0c, "BFu7c_Ip_BFu0c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_Ip_BFu0i()
{
  {
    init_simple_test("BFu7c_Ip_BFu0i");
    static BFu7c_Ip_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu7c_Ip_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_Ip_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Ip_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Ip_BFu0i");
    check_field_offset(lv, v2, 1, "BFu7c_Ip_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_Ip_BFu0i(Test_BFu7c_Ip_BFu0i, "BFu7c_Ip_BFu0i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_Ip_BFu0ll()
{
  {
    init_simple_test("BFu7c_Ip_BFu0ll");
    static BFu7c_Ip_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu7c_Ip_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_Ip_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Ip_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Ip_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu7c_Ip_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_Ip_BFu0ll(Test_BFu7c_Ip_BFu0ll, "BFu7c_Ip_BFu0ll", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_Ip_BFu0s()
{
  {
    init_simple_test("BFu7c_Ip_BFu0s");
    static BFu7c_Ip_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu7c_Ip_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_Ip_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Ip_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Ip_BFu0s");
    check_field_offset(lv, v2, 1, "BFu7c_Ip_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_Ip_BFu0s(Test_BFu7c_Ip_BFu0s, "BFu7c_Ip_BFu0s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_L_BFu0c()
{
  {
    init_simple_test("BFu7c_L_BFu0c");
    static BFu7c_L_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(BFu7c_L_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_L_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_L_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_L_BFu0c");
    check_field_offset(lv, v2, 1, "BFu7c_L_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_L_BFu0c(Test_BFu7c_L_BFu0c, "BFu7c_L_BFu0c", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_L_BFu0i()
{
  {
    init_simple_test("BFu7c_L_BFu0i");
    static BFu7c_L_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu7c_L_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_L_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_L_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_L_BFu0i");
    check_field_offset(lv, v2, 1, "BFu7c_L_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_L_BFu0i(Test_BFu7c_L_BFu0i, "BFu7c_L_BFu0i", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_L_BFu0ll()
{
  {
    init_simple_test("BFu7c_L_BFu0ll");
    static BFu7c_L_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu7c_L_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_L_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_L_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_L_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu7c_L_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_L_BFu0ll(Test_BFu7c_L_BFu0ll, "BFu7c_L_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_L_BFu0s()
{
  {
    init_simple_test("BFu7c_L_BFu0s");
    static BFu7c_L_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu7c_L_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_L_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_L_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_L_BFu0s");
    check_field_offset(lv, v2, 1, "BFu7c_L_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_L_BFu0s(Test_BFu7c_L_BFu0s, "BFu7c_L_BFu0s", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_S_BFu0c()
{
  {
    init_simple_test("BFu7c_S_BFu0c");
    static BFu7c_S_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_S_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_S_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_S_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_S_BFu0c");
    check_field_offset(lv, v2, 1, "BFu7c_S_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_S_BFu0c(Test_BFu7c_S_BFu0c, "BFu7c_S_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_S_BFu0i()
{
  {
    init_simple_test("BFu7c_S_BFu0i");
    static BFu7c_S_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_S_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_S_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_S_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_S_BFu0i");
    check_field_offset(lv, v2, 1, "BFu7c_S_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_S_BFu0i(Test_BFu7c_S_BFu0i, "BFu7c_S_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_S_BFu0ll()
{
  {
    init_simple_test("BFu7c_S_BFu0ll");
    static BFu7c_S_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_S_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_S_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_S_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_S_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu7c_S_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_S_BFu0ll(Test_BFu7c_S_BFu0ll, "BFu7c_S_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_S_BFu0s()
{
  {
    init_simple_test("BFu7c_S_BFu0s");
    static BFu7c_S_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_S_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_S_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_S_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_S_BFu0s");
    check_field_offset(lv, v2, 1, "BFu7c_S_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_S_BFu0s(Test_BFu7c_S_BFu0s, "BFu7c_S_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_Uc_BFu0c()
{
  {
    init_simple_test("BFu7c_Uc_BFu0c");
    static BFu7c_Uc_BFu0c lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_Uc_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Uc_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Uc_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Uc_BFu0c");
    check_field_offset(lv, v2, 1, "BFu7c_Uc_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_Uc_BFu0c(Test_BFu7c_Uc_BFu0c, "BFu7c_Uc_BFu0c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_Uc_BFu0i()
{
  {
    init_simple_test("BFu7c_Uc_BFu0i");
    static BFu7c_Uc_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_Uc_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_Uc_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Uc_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Uc_BFu0i");
    check_field_offset(lv, v2, 1, "BFu7c_Uc_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_Uc_BFu0i(Test_BFu7c_Uc_BFu0i, "BFu7c_Uc_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_Uc_BFu0ll()
{
  {
    init_simple_test("BFu7c_Uc_BFu0ll");
    static BFu7c_Uc_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_Uc_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_Uc_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Uc_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Uc_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu7c_Uc_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_Uc_BFu0ll(Test_BFu7c_Uc_BFu0ll, "BFu7c_Uc_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_Uc_BFu0s()
{
  {
    init_simple_test("BFu7c_Uc_BFu0s");
    static BFu7c_Uc_BFu0s lv;
    check2(sizeof(lv), 2, "sizeof(BFu7c_Uc_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_Uc_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Uc_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Uc_BFu0s");
    check_field_offset(lv, v2, 1, "BFu7c_Uc_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_Uc_BFu0s(Test_BFu7c_Uc_BFu0s, "BFu7c_Uc_BFu0s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_Ui_BFu0c()
{
  {
    init_simple_test("BFu7c_Ui_BFu0c");
    static BFu7c_Ui_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu7c_Ui_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Ui_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Ui_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Ui_BFu0c");
    check_field_offset(lv, v2, 1, "BFu7c_Ui_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_Ui_BFu0c(Test_BFu7c_Ui_BFu0c, "BFu7c_Ui_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_Ui_BFu0i()
{
  {
    init_simple_test("BFu7c_Ui_BFu0i");
    static BFu7c_Ui_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7c_Ui_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_Ui_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Ui_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Ui_BFu0i");
    check_field_offset(lv, v2, 1, "BFu7c_Ui_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_Ui_BFu0i(Test_BFu7c_Ui_BFu0i, "BFu7c_Ui_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_Ui_BFu0ll()
{
  {
    init_simple_test("BFu7c_Ui_BFu0ll");
    static BFu7c_Ui_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7c_Ui_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_Ui_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Ui_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Ui_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu7c_Ui_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_Ui_BFu0ll(Test_BFu7c_Ui_BFu0ll, "BFu7c_Ui_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_Ui_BFu0s()
{
  {
    init_simple_test("BFu7c_Ui_BFu0s");
    static BFu7c_Ui_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7c_Ui_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_Ui_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Ui_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Ui_BFu0s");
    check_field_offset(lv, v2, 1, "BFu7c_Ui_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_Ui_BFu0s(Test_BFu7c_Ui_BFu0s, "BFu7c_Ui_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_Ul_BFu0c()
{
  {
    init_simple_test("BFu7c_Ul_BFu0c");
    static BFu7c_Ul_BFu0c lv;
    check2(sizeof(lv), 9, "sizeof(BFu7c_Ul_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Ul_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Ul_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Ul_BFu0c");
    check_field_offset(lv, v2, 1, "BFu7c_Ul_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_Ul_BFu0c(Test_BFu7c_Ul_BFu0c, "BFu7c_Ul_BFu0c", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_Ul_BFu0i()
{
  {
    init_simple_test("BFu7c_Ul_BFu0i");
    static BFu7c_Ul_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu7c_Ul_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_Ul_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Ul_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Ul_BFu0i");
    check_field_offset(lv, v2, 1, "BFu7c_Ul_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_Ul_BFu0i(Test_BFu7c_Ul_BFu0i, "BFu7c_Ul_BFu0i", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_Ul_BFu0ll()
{
  {
    init_simple_test("BFu7c_Ul_BFu0ll");
    static BFu7c_Ul_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu7c_Ul_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_Ul_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Ul_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Ul_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu7c_Ul_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_Ul_BFu0ll(Test_BFu7c_Ul_BFu0ll, "BFu7c_Ul_BFu0ll", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_Ul_BFu0s()
{
  {
    init_simple_test("BFu7c_Ul_BFu0s");
    static BFu7c_Ul_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu7c_Ul_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_Ul_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Ul_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Ul_BFu0s");
    check_field_offset(lv, v2, 1, "BFu7c_Ul_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_Ul_BFu0s(Test_BFu7c_Ul_BFu0s, "BFu7c_Ul_BFu0s", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_Us_BFu0c()
{
  {
    init_simple_test("BFu7c_Us_BFu0c");
    static BFu7c_Us_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu7c_Us_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Us_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Us_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Us_BFu0c");
    check_field_offset(lv, v2, 1, "BFu7c_Us_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_Us_BFu0c(Test_BFu7c_Us_BFu0c, "BFu7c_Us_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_Us_BFu0i()
{
  {
    init_simple_test("BFu7c_Us_BFu0i");
    static BFu7c_Us_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_Us_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_Us_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Us_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Us_BFu0i");
    check_field_offset(lv, v2, 1, "BFu7c_Us_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_Us_BFu0i(Test_BFu7c_Us_BFu0i, "BFu7c_Us_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_Us_BFu0ll()
{
  {
    init_simple_test("BFu7c_Us_BFu0ll");
    static BFu7c_Us_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7c_Us_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_Us_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Us_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Us_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu7c_Us_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_Us_BFu0ll(Test_BFu7c_Us_BFu0ll, "BFu7c_Us_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_Us_BFu0s()
{
  {
    init_simple_test("BFu7c_Us_BFu0s");
    static BFu7c_Us_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7c_Us_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_Us_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Us_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Us_BFu0s");
    check_field_offset(lv, v2, 1, "BFu7c_Us_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_Us_BFu0s(Test_BFu7c_Us_BFu0s, "BFu7c_Us_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_Vp_BFu0c()
{
  {
    init_simple_test("BFu7c_Vp_BFu0c");
    static BFu7c_Vp_BFu0c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7c_Vp_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7c_Vp_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Vp_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Vp_BFu0c");
    check_field_offset(lv, v2, 1, "BFu7c_Vp_BFu0c.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_Vp_BFu0c(Test_BFu7c_Vp_BFu0c, "BFu7c_Vp_BFu0c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_Vp_BFu0i()
{
  {
    init_simple_test("BFu7c_Vp_BFu0i");
    static BFu7c_Vp_BFu0i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu7c_Vp_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_Vp_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Vp_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Vp_BFu0i");
    check_field_offset(lv, v2, 1, "BFu7c_Vp_BFu0i.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_Vp_BFu0i(Test_BFu7c_Vp_BFu0i, "BFu7c_Vp_BFu0i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_Vp_BFu0ll()
{
  {
    init_simple_test("BFu7c_Vp_BFu0ll");
    static BFu7c_Vp_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu7c_Vp_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_Vp_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Vp_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Vp_BFu0ll");
    check_field_offset(lv, v2, 1, "BFu7c_Vp_BFu0ll.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_Vp_BFu0ll(Test_BFu7c_Vp_BFu0ll, "BFu7c_Vp_BFu0ll", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7c_Vp_BFu0s()
{
  {
    init_simple_test("BFu7c_Vp_BFu0s");
    static BFu7c_Vp_BFu0s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu7c_Vp_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7c_Vp_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7c_Vp_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7c_Vp_BFu0s");
    check_field_offset(lv, v2, 1, "BFu7c_Vp_BFu0s.v2");
  }
}
static Arrange_To_Call_Me vBFu7c_Vp_BFu0s(Test_BFu7c_Vp_BFu0s, "BFu7c_Vp_BFu0s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c()
{
  {
    init_simple_test("BFu7i_BFu0c");
    static BFu7i_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu7i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c(Test_BFu7i_BFu0c, "BFu7i_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu0c()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu0c");
    static BFu7i_BFu0c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu7i_BFu0c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu0c(Test_BFu7i_BFu0c_BFu0c, "BFu7i_BFu0c_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu0i()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu0i");
    static BFu7i_BFu0c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu0c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu0i(Test_BFu7i_BFu0c_BFu0i, "BFu7i_BFu0c_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu0ll()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu0ll");
    static BFu7i_BFu0c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7i_BFu0c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu0ll(Test_BFu7i_BFu0c_BFu0ll, "BFu7i_BFu0c_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu0s()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu0s");
    static BFu7i_BFu0c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu7i_BFu0c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu0s(Test_BFu7i_BFu0c_BFu0s, "BFu7i_BFu0c_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu15i()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu15i");
    static BFu7i_BFu0c_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_BFu0c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "BFu7i_BFu0c_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "BFu7i_BFu0c_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu15i(Test_BFu7i_BFu0c_BFu15i, "BFu7i_BFu0c_BFu15i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu15ll()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu15ll");
    static BFu7i_BFu0c_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_BFu0c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "BFu7i_BFu0c_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "BFu7i_BFu0c_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu15ll(Test_BFu7i_BFu0c_BFu15ll, "BFu7i_BFu0c_BFu15ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu15s()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu15s");
    static BFu7i_BFu0c_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_BFu0c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "BFu7i_BFu0c_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "BFu7i_BFu0c_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu15s(Test_BFu7i_BFu0c_BFu15s, "BFu7i_BFu0c_BFu15s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu16i()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu16i");
    static BFu7i_BFu0c_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_BFu0c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "BFu7i_BFu0c_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "BFu7i_BFu0c_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu16i(Test_BFu7i_BFu0c_BFu16i, "BFu7i_BFu0c_BFu16i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu16ll()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu16ll");
    static BFu7i_BFu0c_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_BFu0c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "BFu7i_BFu0c_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "BFu7i_BFu0c_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu16ll(Test_BFu7i_BFu0c_BFu16ll, "BFu7i_BFu0c_BFu16ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu16s()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu16s");
    static BFu7i_BFu0c_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_BFu0c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "BFu7i_BFu0c_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "BFu7i_BFu0c_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu16s(Test_BFu7i_BFu0c_BFu16s, "BFu7i_BFu0c_BFu16s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu17i()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu17i");
    static BFu7i_BFu0c_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(BFu7i_BFu0c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "BFu7i_BFu0c_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "BFu7i_BFu0c_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu17i(Test_BFu7i_BFu0c_BFu17i, "BFu7i_BFu0c_BFu17i", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu17ll()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu17ll");
    static BFu7i_BFu0c_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(BFu7i_BFu0c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "BFu7i_BFu0c_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "BFu7i_BFu0c_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu17ll(Test_BFu7i_BFu0c_BFu17ll, "BFu7i_BFu0c_BFu17ll", 4);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu1c()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu1c");
    static BFu7i_BFu0c_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_BFu0c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu7i_BFu0c_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu1c(Test_BFu7i_BFu0c_BFu1c, "BFu7i_BFu0c_BFu1c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu1i()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu1i");
    static BFu7i_BFu0c_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_BFu0c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu7i_BFu0c_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu1i(Test_BFu7i_BFu0c_BFu1i, "BFu7i_BFu0c_BFu1i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu1ll()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu1ll");
    static BFu7i_BFu0c_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_BFu0c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu7i_BFu0c_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu1ll(Test_BFu7i_BFu0c_BFu1ll, "BFu7i_BFu0c_BFu1ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu1s()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu1s");
    static BFu7i_BFu0c_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_BFu0c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "BFu7i_BFu0c_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu1s(Test_BFu7i_BFu0c_BFu1s, "BFu7i_BFu0c_BFu1s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu31i()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu31i");
    static BFu7i_BFu0c_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(BFu7i_BFu0c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "BFu7i_BFu0c_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "BFu7i_BFu0c_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu31i(Test_BFu7i_BFu0c_BFu31i, "BFu7i_BFu0c_BFu31i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu31ll()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu31ll");
    static BFu7i_BFu0c_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu7i_BFu0c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "BFu7i_BFu0c_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "BFu7i_BFu0c_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu31ll(Test_BFu7i_BFu0c_BFu31ll, "BFu7i_BFu0c_BFu31ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu32i()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu32i");
    static BFu7i_BFu0c_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(BFu7i_BFu0c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "BFu7i_BFu0c_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "BFu7i_BFu0c_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu32i(Test_BFu7i_BFu0c_BFu32i, "BFu7i_BFu0c_BFu32i", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu32ll()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu32ll");
    static BFu7i_BFu0c_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(BFu7i_BFu0c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "BFu7i_BFu0c_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "BFu7i_BFu0c_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu32ll(Test_BFu7i_BFu0c_BFu32ll, "BFu7i_BFu0c_BFu32ll", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu33()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu33");
    static BFu7i_BFu0c_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(BFu7i_BFu0c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "BFu7i_BFu0c_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "BFu7i_BFu0c_BFu33");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu33(Test_BFu7i_BFu0c_BFu33, "BFu7i_BFu0c_BFu33", 6);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu7c()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu7c");
    static BFu7i_BFu0c_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_BFu0c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu7i_BFu0c_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu7c(Test_BFu7i_BFu0c_BFu7c, "BFu7i_BFu0c_BFu7c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu7i()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu7i");
    static BFu7i_BFu0c_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_BFu0c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu7i_BFu0c_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu7i(Test_BFu7i_BFu0c_BFu7i, "BFu7i_BFu0c_BFu7i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu7ll()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu7ll");
    static BFu7i_BFu0c_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_BFu0c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu7i_BFu0c_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu7ll(Test_BFu7i_BFu0c_BFu7ll, "BFu7i_BFu0c_BFu7ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu7s()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu7s");
    static BFu7i_BFu0c_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_BFu0c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "BFu7i_BFu0c_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu7s(Test_BFu7i_BFu0c_BFu7s, "BFu7i_BFu0c_BFu7s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu8c()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu8c");
    static BFu7i_BFu0c_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_BFu0c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu7i_BFu0c_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu7i_BFu0c_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu8c(Test_BFu7i_BFu0c_BFu8c, "BFu7i_BFu0c_BFu8c", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu8i()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu8i");
    static BFu7i_BFu0c_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_BFu0c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu7i_BFu0c_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu7i_BFu0c_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu8i(Test_BFu7i_BFu0c_BFu8i, "BFu7i_BFu0c_BFu8i", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu8ll()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu8ll");
    static BFu7i_BFu0c_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_BFu0c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu7i_BFu0c_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu7i_BFu0c_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu8ll(Test_BFu7i_BFu0c_BFu8ll, "BFu7i_BFu0c_BFu8ll", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu8s()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu8s");
    static BFu7i_BFu0c_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_BFu0c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "BFu7i_BFu0c_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "BFu7i_BFu0c_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu8s(Test_BFu7i_BFu0c_BFu8s, "BFu7i_BFu0c_BFu8s", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu9i()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu9i");
    static BFu7i_BFu0c_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_BFu0c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "BFu7i_BFu0c_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "BFu7i_BFu0c_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu9i(Test_BFu7i_BFu0c_BFu9i, "BFu7i_BFu0c_BFu9i", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu9ll()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu9ll");
    static BFu7i_BFu0c_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_BFu0c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "BFu7i_BFu0c_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "BFu7i_BFu0c_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu9ll(Test_BFu7i_BFu0c_BFu9ll, "BFu7i_BFu0c_BFu9ll", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_BFu9s()
{
  {
    init_simple_test("BFu7i_BFu0c_BFu9s");
    static BFu7i_BFu0c_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_BFu0c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "BFu7i_BFu0c_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "BFu7i_BFu0c_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_BFu9s(Test_BFu7i_BFu0c_BFu9s, "BFu7i_BFu0c_BFu9s", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_C()
{
  {
    init_simple_test("BFu7i_BFu0c_C");
    static BFu7i_BFu0c_C lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_BFu0c_C)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_C)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_C");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_C");
    check_field_offset(lv, v2, 1, "BFu7i_BFu0c_C.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_C(Test_BFu7i_BFu0c_C, "BFu7i_BFu0c_C", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_D()
{
  {
    init_simple_test("BFu7i_BFu0c_D");
    static BFu7i_BFu0c_D lv;
    check2(sizeof(lv), 9, "sizeof(BFu7i_BFu0c_D)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_D)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_D");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_D");
    check_field_offset(lv, v2, 1, "BFu7i_BFu0c_D.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_D(Test_BFu7i_BFu0c_D, "BFu7i_BFu0c_D", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_F()
{
  {
    init_simple_test("BFu7i_BFu0c_F");
    static BFu7i_BFu0c_F lv;
    check2(sizeof(lv), 5, "sizeof(BFu7i_BFu0c_F)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_F)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_F");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_F");
    check_field_offset(lv, v2, 1, "BFu7i_BFu0c_F.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_F(Test_BFu7i_BFu0c_F, "BFu7i_BFu0c_F", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_I()
{
  {
    init_simple_test("BFu7i_BFu0c_I");
    static BFu7i_BFu0c_I lv;
    check2(sizeof(lv), 5, "sizeof(BFu7i_BFu0c_I)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_I)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_I");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_I");
    check_field_offset(lv, v2, 1, "BFu7i_BFu0c_I.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_I(Test_BFu7i_BFu0c_I, "BFu7i_BFu0c_I", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_Ip()
{
  {
    init_simple_test("BFu7i_BFu0c_Ip");
    static BFu7i_BFu0c_Ip lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7i_BFu0c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_Ip");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_Ip");
    check_field_offset(lv, v2, 1, "BFu7i_BFu0c_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_Ip(Test_BFu7i_BFu0c_Ip, "BFu7i_BFu0c_Ip", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_L()
{
  {
    init_simple_test("BFu7i_BFu0c_L");
    static BFu7i_BFu0c_L lv;
    check2(sizeof(lv), 9, "sizeof(BFu7i_BFu0c_L)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_L)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_L");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_L");
    check_field_offset(lv, v2, 1, "BFu7i_BFu0c_L.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_L(Test_BFu7i_BFu0c_L, "BFu7i_BFu0c_L", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_S()
{
  {
    init_simple_test("BFu7i_BFu0c_S");
    static BFu7i_BFu0c_S lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_BFu0c_S)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_S)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_S");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_S");
    check_field_offset(lv, v2, 1, "BFu7i_BFu0c_S.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_S(Test_BFu7i_BFu0c_S, "BFu7i_BFu0c_S", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_Uc()
{
  {
    init_simple_test("BFu7i_BFu0c_Uc");
    static BFu7i_BFu0c_Uc lv;
    check2(sizeof(lv), 2, "sizeof(BFu7i_BFu0c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_Uc");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_Uc");
    check_field_offset(lv, v2, 1, "BFu7i_BFu0c_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_Uc(Test_BFu7i_BFu0c_Uc, "BFu7i_BFu0c_Uc", 2);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_Ui()
{
  {
    init_simple_test("BFu7i_BFu0c_Ui");
    static BFu7i_BFu0c_Ui lv;
    check2(sizeof(lv), 5, "sizeof(BFu7i_BFu0c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_Ui");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_Ui");
    check_field_offset(lv, v2, 1, "BFu7i_BFu0c_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_Ui(Test_BFu7i_BFu0c_Ui, "BFu7i_BFu0c_Ui", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_Ul()
{
  {
    init_simple_test("BFu7i_BFu0c_Ul");
    static BFu7i_BFu0c_Ul lv;
    check2(sizeof(lv), 9, "sizeof(BFu7i_BFu0c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_Ul");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_Ul");
    check_field_offset(lv, v2, 1, "BFu7i_BFu0c_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_Ul(Test_BFu7i_BFu0c_Ul, "BFu7i_BFu0c_Ul", 9);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_Us()
{
  {
    init_simple_test("BFu7i_BFu0c_Us");
    static BFu7i_BFu0c_Us lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_BFu0c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_Us)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_Us");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_Us");
    check_field_offset(lv, v2, 1, "BFu7i_BFu0c_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_Us(Test_BFu7i_BFu0c_Us, "BFu7i_BFu0c_Us", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0c_Vp()
{
  {
    init_simple_test("BFu7i_BFu0c_Vp");
    static BFu7i_BFu0c_Vp lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7i_BFu0c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu0c_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0c_Vp");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0c_Vp");
    check_field_offset(lv, v2, 1, "BFu7i_BFu0c_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0c_Vp(Test_BFu7i_BFu0c_Vp, "BFu7i_BFu0c_Vp", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i()
{
  {
    init_simple_test("BFu7i_BFu0i");
    static BFu7i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i(Test_BFu7i_BFu0i, "BFu7i_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu0c()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu0c");
    static BFu7i_BFu0i_BFu0c lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu0i_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu0c(Test_BFu7i_BFu0i_BFu0c, "BFu7i_BFu0i_BFu0c", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu0i()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu0i");
    static BFu7i_BFu0i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu0i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu0i(Test_BFu7i_BFu0i_BFu0i, "BFu7i_BFu0i_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu0ll()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu0ll");
    static BFu7i_BFu0i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7i_BFu0i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu0ll(Test_BFu7i_BFu0i_BFu0ll, "BFu7i_BFu0i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu0s()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu0s");
    static BFu7i_BFu0i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu0i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu0s(Test_BFu7i_BFu0i_BFu0s, "BFu7i_BFu0i_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu15i()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu15i");
    static BFu7i_BFu0i_BFu15i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7i_BFu0i_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, 1, "BFu7i_BFu0i_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, hide_ull(1LL<<14), "BFu7i_BFu0i_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu15i(Test_BFu7i_BFu0i_BFu15i, "BFu7i_BFu0i_BFu15i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu15ll()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu15ll");
    static BFu7i_BFu0i_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7i_BFu0i_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, 1, "BFu7i_BFu0i_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, hide_ull(1LL<<14), "BFu7i_BFu0i_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu15ll(Test_BFu7i_BFu0i_BFu15ll, "BFu7i_BFu0i_BFu15ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu15s()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu15s");
    static BFu7i_BFu0i_BFu15s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7i_BFu0i_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, 1, "BFu7i_BFu0i_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 15, hide_ull(1LL<<14), "BFu7i_BFu0i_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu15s(Test_BFu7i_BFu0i_BFu15s, "BFu7i_BFu0i_BFu15s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu16i()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu16i");
    static BFu7i_BFu0i_BFu16i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7i_BFu0i_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, 1, "BFu7i_BFu0i_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, hide_ull(1LL<<15), "BFu7i_BFu0i_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu16i(Test_BFu7i_BFu0i_BFu16i, "BFu7i_BFu0i_BFu16i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu16ll()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu16ll");
    static BFu7i_BFu0i_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7i_BFu0i_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, 1, "BFu7i_BFu0i_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, hide_ull(1LL<<15), "BFu7i_BFu0i_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu16ll(Test_BFu7i_BFu0i_BFu16ll, "BFu7i_BFu0i_BFu16ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu16s()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu16s");
    static BFu7i_BFu0i_BFu16s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7i_BFu0i_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, 1, "BFu7i_BFu0i_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 16, hide_ull(1LL<<15), "BFu7i_BFu0i_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu16s(Test_BFu7i_BFu0i_BFu16s, "BFu7i_BFu0i_BFu16s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu17i()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu17i");
    static BFu7i_BFu0i_BFu17i lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu7i_BFu0i_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 17, 1, "BFu7i_BFu0i_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 17, hide_ull(1LL<<16), "BFu7i_BFu0i_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu17i(Test_BFu7i_BFu0i_BFu17i, "BFu7i_BFu0i_BFu17i", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu17ll()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu17ll");
    static BFu7i_BFu0i_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu7i_BFu0i_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 17, 1, "BFu7i_BFu0i_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 17, hide_ull(1LL<<16), "BFu7i_BFu0i_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu17ll(Test_BFu7i_BFu0i_BFu17ll, "BFu7i_BFu0i_BFu17ll", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu1c()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu1c");
    static BFu7i_BFu0i_BFu1c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7i_BFu0i_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 1, 1, "BFu7i_BFu0i_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu1c(Test_BFu7i_BFu0i_BFu1c, "BFu7i_BFu0i_BFu1c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu1i()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu1i");
    static BFu7i_BFu0i_BFu1i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7i_BFu0i_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 1, 1, "BFu7i_BFu0i_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu1i(Test_BFu7i_BFu0i_BFu1i, "BFu7i_BFu0i_BFu1i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu1ll()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu1ll");
    static BFu7i_BFu0i_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7i_BFu0i_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 1, 1, "BFu7i_BFu0i_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu1ll(Test_BFu7i_BFu0i_BFu1ll, "BFu7i_BFu0i_BFu1ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu1s()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu1s");
    static BFu7i_BFu0i_BFu1s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7i_BFu0i_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 1, 1, "BFu7i_BFu0i_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu1s(Test_BFu7i_BFu0i_BFu1s, "BFu7i_BFu0i_BFu1s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu31i()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu31i");
    static BFu7i_BFu0i_BFu31i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7i_BFu0i_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 31, 1, "BFu7i_BFu0i_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 31, hide_ull(1LL<<30), "BFu7i_BFu0i_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu31i(Test_BFu7i_BFu0i_BFu31i, "BFu7i_BFu0i_BFu31i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu31ll()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu31ll");
    static BFu7i_BFu0i_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7i_BFu0i_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 31, 1, "BFu7i_BFu0i_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 31, hide_ull(1LL<<30), "BFu7i_BFu0i_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu31ll(Test_BFu7i_BFu0i_BFu31ll, "BFu7i_BFu0i_BFu31ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu32i()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu32i");
    static BFu7i_BFu0i_BFu32i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7i_BFu0i_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 32, 1, "BFu7i_BFu0i_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 32, hide_ull(1LL<<31), "BFu7i_BFu0i_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu32i(Test_BFu7i_BFu0i_BFu32i, "BFu7i_BFu0i_BFu32i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu32ll()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu32ll");
    static BFu7i_BFu0i_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7i_BFu0i_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 32, 1, "BFu7i_BFu0i_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 32, hide_ull(1LL<<31), "BFu7i_BFu0i_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu32ll(Test_BFu7i_BFu0i_BFu32ll, "BFu7i_BFu0i_BFu32ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu33()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu33");
    static BFu7i_BFu0i_BFu33 lv;
    check2(sizeof(lv), ABISELECT(9,9), "sizeof(BFu7i_BFu0i_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 33, 1, "BFu7i_BFu0i_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 33, hide_ull(1LL<<32), "BFu7i_BFu0i_BFu33");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu33(Test_BFu7i_BFu0i_BFu33, "BFu7i_BFu0i_BFu33", ABISELECT(9,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu7c()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu7c");
    static BFu7i_BFu0i_BFu7c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7i_BFu0i_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, 1, "BFu7i_BFu0i_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu7c(Test_BFu7i_BFu0i_BFu7c, "BFu7i_BFu0i_BFu7c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu7i()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu7i");
    static BFu7i_BFu0i_BFu7i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7i_BFu0i_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, 1, "BFu7i_BFu0i_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu7i(Test_BFu7i_BFu0i_BFu7i, "BFu7i_BFu0i_BFu7i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu7ll()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu7ll");
    static BFu7i_BFu0i_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7i_BFu0i_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, 1, "BFu7i_BFu0i_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu7ll(Test_BFu7i_BFu0i_BFu7ll, "BFu7i_BFu0i_BFu7ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu7s()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu7s");
    static BFu7i_BFu0i_BFu7s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7i_BFu0i_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, 1, "BFu7i_BFu0i_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu7s(Test_BFu7i_BFu0i_BFu7s, "BFu7i_BFu0i_BFu7s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu8c()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu8c");
    static BFu7i_BFu0i_BFu8c lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7i_BFu0i_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, 1, "BFu7i_BFu0i_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, hide_ull(1LL<<7), "BFu7i_BFu0i_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu8c(Test_BFu7i_BFu0i_BFu8c, "BFu7i_BFu0i_BFu8c", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu8i()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu8i");
    static BFu7i_BFu0i_BFu8i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7i_BFu0i_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, 1, "BFu7i_BFu0i_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, hide_ull(1LL<<7), "BFu7i_BFu0i_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu8i(Test_BFu7i_BFu0i_BFu8i, "BFu7i_BFu0i_BFu8i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu8ll()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu8ll");
    static BFu7i_BFu0i_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7i_BFu0i_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, 1, "BFu7i_BFu0i_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, hide_ull(1LL<<7), "BFu7i_BFu0i_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu8ll(Test_BFu7i_BFu0i_BFu8ll, "BFu7i_BFu0i_BFu8ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu8s()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu8s");
    static BFu7i_BFu0i_BFu8s lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7i_BFu0i_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, 1, "BFu7i_BFu0i_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 8, hide_ull(1LL<<7), "BFu7i_BFu0i_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu8s(Test_BFu7i_BFu0i_BFu8s, "BFu7i_BFu0i_BFu8s", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu9i()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu9i");
    static BFu7i_BFu0i_BFu9i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7i_BFu0i_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, 1, "BFu7i_BFu0i_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, hide_ull(1LL<<8), "BFu7i_BFu0i_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu9i(Test_BFu7i_BFu0i_BFu9i, "BFu7i_BFu0i_BFu9i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu9ll()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu9ll");
    static BFu7i_BFu0i_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7i_BFu0i_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, 1, "BFu7i_BFu0i_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, hide_ull(1LL<<8), "BFu7i_BFu0i_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu9ll(Test_BFu7i_BFu0i_BFu9ll, "BFu7i_BFu0i_BFu9ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_BFu9s()
{
  {
    init_simple_test("BFu7i_BFu0i_BFu9s");
    static BFu7i_BFu0i_BFu9s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7i_BFu0i_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, 1, "BFu7i_BFu0i_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(4,4), 0, 9, hide_ull(1LL<<8), "BFu7i_BFu0i_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_BFu9s(Test_BFu7i_BFu0i_BFu9s, "BFu7i_BFu0i_BFu9s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_C()
{
  {
    init_simple_test("BFu7i_BFu0i_C");
    static BFu7i_BFu0i_C lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7i_BFu0i_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_C)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_C");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_C");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu7i_BFu0i_C.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_C(Test_BFu7i_BFu0i_C, "BFu7i_BFu0i_C", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_D()
{
  {
    init_simple_test("BFu7i_BFu0i_D");
    static BFu7i_BFu0i_D lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu7i_BFu0i_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_D)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_D");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_D");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu7i_BFu0i_D.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_D(Test_BFu7i_BFu0i_D, "BFu7i_BFu0i_D", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_F()
{
  {
    init_simple_test("BFu7i_BFu0i_F");
    static BFu7i_BFu0i_F lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7i_BFu0i_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_F)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_F");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_F");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu7i_BFu0i_F.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_F(Test_BFu7i_BFu0i_F, "BFu7i_BFu0i_F", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_I()
{
  {
    init_simple_test("BFu7i_BFu0i_I");
    static BFu7i_BFu0i_I lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7i_BFu0i_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_I)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_I");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_I");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu7i_BFu0i_I.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_I(Test_BFu7i_BFu0i_I, "BFu7i_BFu0i_I", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_Ip()
{
  {
    init_simple_test("BFu7i_BFu0i_Ip");
    static BFu7i_BFu0i_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu7i_BFu0i_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_Ip");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_Ip");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu7i_BFu0i_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_Ip(Test_BFu7i_BFu0i_Ip, "BFu7i_BFu0i_Ip", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_L()
{
  {
    init_simple_test("BFu7i_BFu0i_L");
    static BFu7i_BFu0i_L lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu7i_BFu0i_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_L)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_L");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_L");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu7i_BFu0i_L.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_L(Test_BFu7i_BFu0i_L, "BFu7i_BFu0i_L", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_S()
{
  {
    init_simple_test("BFu7i_BFu0i_S");
    static BFu7i_BFu0i_S lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7i_BFu0i_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_S)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_S");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_S");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu7i_BFu0i_S.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_S(Test_BFu7i_BFu0i_S, "BFu7i_BFu0i_S", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_Uc()
{
  {
    init_simple_test("BFu7i_BFu0i_Uc");
    static BFu7i_BFu0i_Uc lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7i_BFu0i_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_Uc");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_Uc");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu7i_BFu0i_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_Uc(Test_BFu7i_BFu0i_Uc, "BFu7i_BFu0i_Uc", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_Ui()
{
  {
    init_simple_test("BFu7i_BFu0i_Ui");
    static BFu7i_BFu0i_Ui lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7i_BFu0i_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_Ui");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_Ui");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu7i_BFu0i_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_Ui(Test_BFu7i_BFu0i_Ui, "BFu7i_BFu0i_Ui", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_Ul()
{
  {
    init_simple_test("BFu7i_BFu0i_Ul");
    static BFu7i_BFu0i_Ul lv;
    check2(sizeof(lv), ABISELECT(12,12), "sizeof(BFu7i_BFu0i_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_Ul");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_Ul");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu7i_BFu0i_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_Ul(Test_BFu7i_BFu0i_Ul, "BFu7i_BFu0i_Ul", ABISELECT(12,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_Us()
{
  {
    init_simple_test("BFu7i_BFu0i_Us");
    static BFu7i_BFu0i_Us lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7i_BFu0i_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_Us)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_Us");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_Us");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu7i_BFu0i_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_Us(Test_BFu7i_BFu0i_Us, "BFu7i_BFu0i_Us", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0i_Vp()
{
  {
    init_simple_test("BFu7i_BFu0i_Vp");
    static BFu7i_BFu0i_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu7i_BFu0i_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0i_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0i_Vp");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0i_Vp");
    check_field_offset(lv, v2, ABISELECT(4,4), "BFu7i_BFu0i_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0i_Vp(Test_BFu7i_BFu0i_Vp, "BFu7i_BFu0i_Vp", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll()
{
  {
    init_simple_test("BFu7i_BFu0ll");
    static BFu7i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll(Test_BFu7i_BFu0ll, "BFu7i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu0c()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu0c");
    static BFu7i_BFu0ll_BFu0c lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7i_BFu0ll_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu0c(Test_BFu7i_BFu0ll_BFu0c, "BFu7i_BFu0ll_BFu0c", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu0i()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu0i");
    static BFu7i_BFu0ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7i_BFu0ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu0i(Test_BFu7i_BFu0ll_BFu0i, "BFu7i_BFu0ll_BFu0i", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu0ll()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu0ll");
    static BFu7i_BFu0ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7i_BFu0ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu0ll(Test_BFu7i_BFu0ll_BFu0ll, "BFu7i_BFu0ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu0s()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu0s");
    static BFu7i_BFu0ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7i_BFu0ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu0s(Test_BFu7i_BFu0ll_BFu0s, "BFu7i_BFu0ll_BFu0s", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu15i()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu15i");
    static BFu7i_BFu0ll_BFu15i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu7i_BFu0ll_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "BFu7i_BFu0ll_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "BFu7i_BFu0ll_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu15i(Test_BFu7i_BFu0ll_BFu15i, "BFu7i_BFu0ll_BFu15i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu15ll()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu15ll");
    static BFu7i_BFu0ll_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu7i_BFu0ll_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "BFu7i_BFu0ll_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "BFu7i_BFu0ll_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu15ll(Test_BFu7i_BFu0ll_BFu15ll, "BFu7i_BFu0ll_BFu15ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu15s()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu15s");
    static BFu7i_BFu0ll_BFu15s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu7i_BFu0ll_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, 1, "BFu7i_BFu0ll_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 15, hide_ull(1LL<<14), "BFu7i_BFu0ll_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu15s(Test_BFu7i_BFu0ll_BFu15s, "BFu7i_BFu0ll_BFu15s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu16i()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu16i");
    static BFu7i_BFu0ll_BFu16i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu7i_BFu0ll_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "BFu7i_BFu0ll_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "BFu7i_BFu0ll_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu16i(Test_BFu7i_BFu0ll_BFu16i, "BFu7i_BFu0ll_BFu16i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu16ll()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu16ll");
    static BFu7i_BFu0ll_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu7i_BFu0ll_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "BFu7i_BFu0ll_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "BFu7i_BFu0ll_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu16ll(Test_BFu7i_BFu0ll_BFu16ll, "BFu7i_BFu0ll_BFu16ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu16s()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu16s");
    static BFu7i_BFu0ll_BFu16s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu7i_BFu0ll_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, 1, "BFu7i_BFu0ll_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 16, hide_ull(1LL<<15), "BFu7i_BFu0ll_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu16s(Test_BFu7i_BFu0ll_BFu16s, "BFu7i_BFu0ll_BFu16s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu17i()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu17i");
    static BFu7i_BFu0ll_BFu17i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu7i_BFu0ll_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "BFu7i_BFu0ll_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "BFu7i_BFu0ll_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu17i(Test_BFu7i_BFu0ll_BFu17i, "BFu7i_BFu0ll_BFu17i", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu17ll()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu17ll");
    static BFu7i_BFu0ll_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(BFu7i_BFu0ll_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, 1, "BFu7i_BFu0ll_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 17, hide_ull(1LL<<16), "BFu7i_BFu0ll_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu17ll(Test_BFu7i_BFu0ll_BFu17ll, "BFu7i_BFu0ll_BFu17ll", ABISELECT(11,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu1c()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu1c");
    static BFu7i_BFu0ll_BFu1c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7i_BFu0ll_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu7i_BFu0ll_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu1c(Test_BFu7i_BFu0ll_BFu1c, "BFu7i_BFu0ll_BFu1c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu1i()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu1i");
    static BFu7i_BFu0ll_BFu1i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7i_BFu0ll_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu7i_BFu0ll_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu1i(Test_BFu7i_BFu0ll_BFu1i, "BFu7i_BFu0ll_BFu1i", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu1ll()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu1ll");
    static BFu7i_BFu0ll_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7i_BFu0ll_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu7i_BFu0ll_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu1ll(Test_BFu7i_BFu0ll_BFu1ll, "BFu7i_BFu0ll_BFu1ll", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu1s()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu1s");
    static BFu7i_BFu0ll_BFu1s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7i_BFu0ll_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 1, 1, "BFu7i_BFu0ll_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu1s(Test_BFu7i_BFu0ll_BFu1s, "BFu7i_BFu0ll_BFu1s", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu31i()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu31i");
    static BFu7i_BFu0ll_BFu31i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu7i_BFu0ll_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "BFu7i_BFu0ll_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "BFu7i_BFu0ll_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu31i(Test_BFu7i_BFu0ll_BFu31i, "BFu7i_BFu0ll_BFu31i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu31ll()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu31ll");
    static BFu7i_BFu0ll_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu7i_BFu0ll_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, 1, "BFu7i_BFu0ll_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 31, hide_ull(1LL<<30), "BFu7i_BFu0ll_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu31ll(Test_BFu7i_BFu0ll_BFu31ll, "BFu7i_BFu0ll_BFu31ll", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu32i()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu32i");
    static BFu7i_BFu0ll_BFu32i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu7i_BFu0ll_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "BFu7i_BFu0ll_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "BFu7i_BFu0ll_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu32i(Test_BFu7i_BFu0ll_BFu32i, "BFu7i_BFu0ll_BFu32i", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu32ll()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu32ll");
    static BFu7i_BFu0ll_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu7i_BFu0ll_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, 1, "BFu7i_BFu0ll_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 32, hide_ull(1LL<<31), "BFu7i_BFu0ll_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu32ll(Test_BFu7i_BFu0ll_BFu32ll, "BFu7i_BFu0ll_BFu32ll", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu33()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu33");
    static BFu7i_BFu0ll_BFu33 lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(BFu7i_BFu0ll_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, 1, "BFu7i_BFu0ll_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 33, hide_ull(1LL<<32), "BFu7i_BFu0ll_BFu33");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu33(Test_BFu7i_BFu0ll_BFu33, "BFu7i_BFu0ll_BFu33", ABISELECT(13,9));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu7c()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu7c");
    static BFu7i_BFu0ll_BFu7c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7i_BFu0ll_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu7i_BFu0ll_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu7c(Test_BFu7i_BFu0ll_BFu7c, "BFu7i_BFu0ll_BFu7c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu7i()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu7i");
    static BFu7i_BFu0ll_BFu7i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7i_BFu0ll_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu7i_BFu0ll_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu7i(Test_BFu7i_BFu0ll_BFu7i, "BFu7i_BFu0ll_BFu7i", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu7ll()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu7ll");
    static BFu7i_BFu0ll_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7i_BFu0ll_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu7i_BFu0ll_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu7ll(Test_BFu7i_BFu0ll_BFu7ll, "BFu7i_BFu0ll_BFu7ll", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu7s()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu7s");
    static BFu7i_BFu0ll_BFu7s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7i_BFu0ll_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, 1, "BFu7i_BFu0ll_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu7s(Test_BFu7i_BFu0ll_BFu7s, "BFu7i_BFu0ll_BFu7s", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu8c()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu8c");
    static BFu7i_BFu0ll_BFu8c lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7i_BFu0ll_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu7i_BFu0ll_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu7i_BFu0ll_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu8c(Test_BFu7i_BFu0ll_BFu8c, "BFu7i_BFu0ll_BFu8c", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu8i()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu8i");
    static BFu7i_BFu0ll_BFu8i lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7i_BFu0ll_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu7i_BFu0ll_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu7i_BFu0ll_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu8i(Test_BFu7i_BFu0ll_BFu8i, "BFu7i_BFu0ll_BFu8i", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu8ll()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu8ll");
    static BFu7i_BFu0ll_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7i_BFu0ll_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu7i_BFu0ll_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu7i_BFu0ll_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu8ll(Test_BFu7i_BFu0ll_BFu8ll, "BFu7i_BFu0ll_BFu8ll", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu8s()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu8s");
    static BFu7i_BFu0ll_BFu8s lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7i_BFu0ll_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, 1, "BFu7i_BFu0ll_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 8, hide_ull(1LL<<7), "BFu7i_BFu0ll_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu8s(Test_BFu7i_BFu0ll_BFu8s, "BFu7i_BFu0ll_BFu8s", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu9i()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu9i");
    static BFu7i_BFu0ll_BFu9i lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu7i_BFu0ll_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "BFu7i_BFu0ll_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "BFu7i_BFu0ll_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu9i(Test_BFu7i_BFu0ll_BFu9i, "BFu7i_BFu0ll_BFu9i", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu9ll()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu9ll");
    static BFu7i_BFu0ll_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu7i_BFu0ll_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "BFu7i_BFu0ll_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "BFu7i_BFu0ll_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu9ll(Test_BFu7i_BFu0ll_BFu9ll, "BFu7i_BFu0ll_BFu9ll", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_BFu9s()
{
  {
    init_simple_test("BFu7i_BFu0ll_BFu9s");
    static BFu7i_BFu0ll_BFu9s lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu7i_BFu0ll_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, 1, "BFu7i_BFu0ll_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(8,4), 0, 9, hide_ull(1LL<<8), "BFu7i_BFu0ll_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_BFu9s(Test_BFu7i_BFu0ll_BFu9s, "BFu7i_BFu0ll_BFu9s", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_C()
{
  {
    init_simple_test("BFu7i_BFu0ll_C");
    static BFu7i_BFu0ll_C lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7i_BFu0ll_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_C)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_C");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_C");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu7i_BFu0ll_C.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_C(Test_BFu7i_BFu0ll_C, "BFu7i_BFu0ll_C", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_D()
{
  {
    init_simple_test("BFu7i_BFu0ll_D");
    static BFu7i_BFu0ll_D lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu7i_BFu0ll_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_D)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_D");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_D");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu7i_BFu0ll_D.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_D(Test_BFu7i_BFu0ll_D, "BFu7i_BFu0ll_D", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_F()
{
  {
    init_simple_test("BFu7i_BFu0ll_F");
    static BFu7i_BFu0ll_F lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu7i_BFu0ll_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_F)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_F");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_F");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu7i_BFu0ll_F.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_F(Test_BFu7i_BFu0ll_F, "BFu7i_BFu0ll_F", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_I()
{
  {
    init_simple_test("BFu7i_BFu0ll_I");
    static BFu7i_BFu0ll_I lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu7i_BFu0ll_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_I)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_I");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_I");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu7i_BFu0ll_I.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_I(Test_BFu7i_BFu0ll_I, "BFu7i_BFu0ll_I", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_Ip()
{
  {
    init_simple_test("BFu7i_BFu0ll_Ip");
    static BFu7i_BFu0ll_Ip lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu7i_BFu0ll_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_Ip");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_Ip");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu7i_BFu0ll_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_Ip(Test_BFu7i_BFu0ll_Ip, "BFu7i_BFu0ll_Ip", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_L()
{
  {
    init_simple_test("BFu7i_BFu0ll_L");
    static BFu7i_BFu0ll_L lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu7i_BFu0ll_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_L)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_L");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_L");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu7i_BFu0ll_L.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_L(Test_BFu7i_BFu0ll_L, "BFu7i_BFu0ll_L", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_S()
{
  {
    init_simple_test("BFu7i_BFu0ll_S");
    static BFu7i_BFu0ll_S lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu7i_BFu0ll_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_S)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_S");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_S");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu7i_BFu0ll_S.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_S(Test_BFu7i_BFu0ll_S, "BFu7i_BFu0ll_S", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_Uc()
{
  {
    init_simple_test("BFu7i_BFu0ll_Uc");
    static BFu7i_BFu0ll_Uc lv;
    check2(sizeof(lv), ABISELECT(9,5), "sizeof(BFu7i_BFu0ll_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_Uc");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_Uc");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu7i_BFu0ll_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_Uc(Test_BFu7i_BFu0ll_Uc, "BFu7i_BFu0ll_Uc", ABISELECT(9,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_Ui()
{
  {
    init_simple_test("BFu7i_BFu0ll_Ui");
    static BFu7i_BFu0ll_Ui lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(BFu7i_BFu0ll_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_Ui");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_Ui");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu7i_BFu0ll_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_Ui(Test_BFu7i_BFu0ll_Ui, "BFu7i_BFu0ll_Ui", ABISELECT(12,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_Ul()
{
  {
    init_simple_test("BFu7i_BFu0ll_Ul");
    static BFu7i_BFu0ll_Ul lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(BFu7i_BFu0ll_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_Ul");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_Ul");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu7i_BFu0ll_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_Ul(Test_BFu7i_BFu0ll_Ul, "BFu7i_BFu0ll_Ul", ABISELECT(16,12));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_Us()
{
  {
    init_simple_test("BFu7i_BFu0ll_Us");
    static BFu7i_BFu0ll_Us lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu7i_BFu0ll_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_Us)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_Us");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_Us");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu7i_BFu0ll_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_Us(Test_BFu7i_BFu0ll_Us, "BFu7i_BFu0ll_Us", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0ll_Vp()
{
  {
    init_simple_test("BFu7i_BFu0ll_Vp");
    static BFu7i_BFu0ll_Vp lv;
    check2(sizeof(lv), ABISELECT(16,8), "sizeof(BFu7i_BFu0ll_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0ll_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0ll_Vp");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0ll_Vp");
    check_field_offset(lv, v2, ABISELECT(8,4), "BFu7i_BFu0ll_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0ll_Vp(Test_BFu7i_BFu0ll_Vp, "BFu7i_BFu0ll_Vp", ABISELECT(16,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s()
{
  {
    init_simple_test("BFu7i_BFu0s");
    static BFu7i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu7i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s(Test_BFu7i_BFu0s, "BFu7i_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu0c()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu0c");
    static BFu7i_BFu0s_BFu0c lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu7i_BFu0s_BFu0c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu0c(Test_BFu7i_BFu0s_BFu0c, "BFu7i_BFu0s_BFu0c", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu0i()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu0i");
    static BFu7i_BFu0s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu0s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu0i(Test_BFu7i_BFu0s_BFu0i, "BFu7i_BFu0s_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu0ll()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu0ll");
    static BFu7i_BFu0s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7i_BFu0s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu0ll(Test_BFu7i_BFu0s_BFu0ll, "BFu7i_BFu0s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu0s()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu0s");
    static BFu7i_BFu0s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu7i_BFu0s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu0s(Test_BFu7i_BFu0s_BFu0s, "BFu7i_BFu0s_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu15i()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu15i");
    static BFu7i_BFu0s_BFu15i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu0s_BFu15i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu15i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu15i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, 1, "BFu7i_BFu0s_BFu15i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, hide_ull(1LL<<14), "BFu7i_BFu0s_BFu15i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu15i(Test_BFu7i_BFu0s_BFu15i, "BFu7i_BFu0s_BFu15i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu15ll()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu15ll");
    static BFu7i_BFu0s_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu0s_BFu15ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu15ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu15ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, 1, "BFu7i_BFu0s_BFu15ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, hide_ull(1LL<<14), "BFu7i_BFu0s_BFu15ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu15ll(Test_BFu7i_BFu0s_BFu15ll, "BFu7i_BFu0s_BFu15ll", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu15s()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu15s");
    static BFu7i_BFu0s_BFu15s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu0s_BFu15s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu15s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu15s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, 1, "BFu7i_BFu0s_BFu15s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 15, hide_ull(1LL<<14), "BFu7i_BFu0s_BFu15s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu15s(Test_BFu7i_BFu0s_BFu15s, "BFu7i_BFu0s_BFu15s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu16i()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu16i");
    static BFu7i_BFu0s_BFu16i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu0s_BFu16i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu16i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu16i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, 1, "BFu7i_BFu0s_BFu16i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, hide_ull(1LL<<15), "BFu7i_BFu0s_BFu16i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu16i(Test_BFu7i_BFu0s_BFu16i, "BFu7i_BFu0s_BFu16i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu16ll()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu16ll");
    static BFu7i_BFu0s_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu0s_BFu16ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu16ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu16ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, 1, "BFu7i_BFu0s_BFu16ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, hide_ull(1LL<<15), "BFu7i_BFu0s_BFu16ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu16ll(Test_BFu7i_BFu0s_BFu16ll, "BFu7i_BFu0s_BFu16ll", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu16s()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu16s");
    static BFu7i_BFu0s_BFu16s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu0s_BFu16s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu16s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu16s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, 1, "BFu7i_BFu0s_BFu16s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 16, hide_ull(1LL<<15), "BFu7i_BFu0s_BFu16s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu16s(Test_BFu7i_BFu0s_BFu16s, "BFu7i_BFu0s_BFu16s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu17i()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu17i");
    static BFu7i_BFu0s_BFu17i lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7i_BFu0s_BFu17i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu17i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu17i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 17, 1, "BFu7i_BFu0s_BFu17i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 17, hide_ull(1LL<<16), "BFu7i_BFu0s_BFu17i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu17i(Test_BFu7i_BFu0s_BFu17i, "BFu7i_BFu0s_BFu17i", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu17ll()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu17ll");
    static BFu7i_BFu0s_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(5,5), "sizeof(BFu7i_BFu0s_BFu17ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu17ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu17ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 17, 1, "BFu7i_BFu0s_BFu17ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 17, hide_ull(1LL<<16), "BFu7i_BFu0s_BFu17ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu17ll(Test_BFu7i_BFu0s_BFu17ll, "BFu7i_BFu0s_BFu17ll", ABISELECT(5,5));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu1c()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu1c");
    static BFu7i_BFu0s_BFu1c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu7i_BFu0s_BFu1c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu1c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu1c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu1c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 1, 1, "BFu7i_BFu0s_BFu1c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu1c(Test_BFu7i_BFu0s_BFu1c, "BFu7i_BFu0s_BFu1c", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu1i()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu1i");
    static BFu7i_BFu0s_BFu1i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu7i_BFu0s_BFu1i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu1i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu1i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu1i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 1, 1, "BFu7i_BFu0s_BFu1i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu1i(Test_BFu7i_BFu0s_BFu1i, "BFu7i_BFu0s_BFu1i", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu1ll()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu1ll");
    static BFu7i_BFu0s_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu7i_BFu0s_BFu1ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu1ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu1ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu1ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 1, 1, "BFu7i_BFu0s_BFu1ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu1ll(Test_BFu7i_BFu0s_BFu1ll, "BFu7i_BFu0s_BFu1ll", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu1s()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu1s");
    static BFu7i_BFu0s_BFu1s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu7i_BFu0s_BFu1s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu1s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu1s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu1s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 1, 1, "BFu7i_BFu0s_BFu1s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu1s(Test_BFu7i_BFu0s_BFu1s, "BFu7i_BFu0s_BFu1s", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu31i()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu31i");
    static BFu7i_BFu0s_BFu31i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7i_BFu0s_BFu31i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu31i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu31i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 31, 1, "BFu7i_BFu0s_BFu31i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 31, hide_ull(1LL<<30), "BFu7i_BFu0s_BFu31i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu31i(Test_BFu7i_BFu0s_BFu31i, "BFu7i_BFu0s_BFu31i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu31ll()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu31ll");
    static BFu7i_BFu0s_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7i_BFu0s_BFu31ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu31ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu31ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 31, 1, "BFu7i_BFu0s_BFu31ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 31, hide_ull(1LL<<30), "BFu7i_BFu0s_BFu31ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu31ll(Test_BFu7i_BFu0s_BFu31ll, "BFu7i_BFu0s_BFu31ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu32i()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu32i");
    static BFu7i_BFu0s_BFu32i lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7i_BFu0s_BFu32i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu32i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu32i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 32, 1, "BFu7i_BFu0s_BFu32i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 32, hide_ull(1LL<<31), "BFu7i_BFu0s_BFu32i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu32i(Test_BFu7i_BFu0s_BFu32i, "BFu7i_BFu0s_BFu32i", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu32ll()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu32ll");
    static BFu7i_BFu0s_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7i_BFu0s_BFu32ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu32ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu32ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 32, 1, "BFu7i_BFu0s_BFu32ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 32, hide_ull(1LL<<31), "BFu7i_BFu0s_BFu32ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu32ll(Test_BFu7i_BFu0s_BFu32ll, "BFu7i_BFu0s_BFu32ll", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu33()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu33");
    static BFu7i_BFu0s_BFu33 lv;
    check2(sizeof(lv), ABISELECT(7,7), "sizeof(BFu7i_BFu0s_BFu33)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu33)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu33");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 33, 1, "BFu7i_BFu0s_BFu33");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 33, hide_ull(1LL<<32), "BFu7i_BFu0s_BFu33");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu33(Test_BFu7i_BFu0s_BFu33, "BFu7i_BFu0s_BFu33", ABISELECT(7,7));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu7c()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu7c");
    static BFu7i_BFu0s_BFu7c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu7i_BFu0s_BFu7c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu7c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu7c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, 1, "BFu7i_BFu0s_BFu7c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu7c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu7c(Test_BFu7i_BFu0s_BFu7c, "BFu7i_BFu0s_BFu7c", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu7i()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu7i");
    static BFu7i_BFu0s_BFu7i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu7i_BFu0s_BFu7i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu7i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu7i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, 1, "BFu7i_BFu0s_BFu7i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu7i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu7i(Test_BFu7i_BFu0s_BFu7i, "BFu7i_BFu0s_BFu7i", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu7ll()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu7ll");
    static BFu7i_BFu0s_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu7i_BFu0s_BFu7ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu7ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu7ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, 1, "BFu7i_BFu0s_BFu7ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu7ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu7ll(Test_BFu7i_BFu0s_BFu7ll, "BFu7i_BFu0s_BFu7ll", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu7s()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu7s");
    static BFu7i_BFu0s_BFu7s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu7i_BFu0s_BFu7s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu7s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu7s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, 1, "BFu7i_BFu0s_BFu7s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu7s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu7s(Test_BFu7i_BFu0s_BFu7s, "BFu7i_BFu0s_BFu7s", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu8c()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu8c");
    static BFu7i_BFu0s_BFu8c lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu7i_BFu0s_BFu8c)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu8c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu8c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, 1, "BFu7i_BFu0s_BFu8c");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, hide_ull(1LL<<7), "BFu7i_BFu0s_BFu8c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu8c(Test_BFu7i_BFu0s_BFu8c, "BFu7i_BFu0s_BFu8c", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu8i()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu8i");
    static BFu7i_BFu0s_BFu8i lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu7i_BFu0s_BFu8i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu8i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu8i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, 1, "BFu7i_BFu0s_BFu8i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, hide_ull(1LL<<7), "BFu7i_BFu0s_BFu8i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu8i(Test_BFu7i_BFu0s_BFu8i, "BFu7i_BFu0s_BFu8i", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu8ll()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu8ll");
    static BFu7i_BFu0s_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu7i_BFu0s_BFu8ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu8ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu8ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, 1, "BFu7i_BFu0s_BFu8ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, hide_ull(1LL<<7), "BFu7i_BFu0s_BFu8ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu8ll(Test_BFu7i_BFu0s_BFu8ll, "BFu7i_BFu0s_BFu8ll", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu8s()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu8s");
    static BFu7i_BFu0s_BFu8s lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu7i_BFu0s_BFu8s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu8s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu8s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, 1, "BFu7i_BFu0s_BFu8s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 8, hide_ull(1LL<<7), "BFu7i_BFu0s_BFu8s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu8s(Test_BFu7i_BFu0s_BFu8s, "BFu7i_BFu0s_BFu8s", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu9i()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu9i");
    static BFu7i_BFu0s_BFu9i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu0s_BFu9i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu9i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu9i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, 1, "BFu7i_BFu0s_BFu9i");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, hide_ull(1LL<<8), "BFu7i_BFu0s_BFu9i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu9i(Test_BFu7i_BFu0s_BFu9i, "BFu7i_BFu0s_BFu9i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu9ll()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu9ll");
    static BFu7i_BFu0s_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu0s_BFu9ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu9ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu9ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, 1, "BFu7i_BFu0s_BFu9ll");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, hide_ull(1LL<<8), "BFu7i_BFu0s_BFu9ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu9ll(Test_BFu7i_BFu0s_BFu9ll, "BFu7i_BFu0s_BFu9ll", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_BFu9s()
{
  {
    init_simple_test("BFu7i_BFu0s_BFu9s");
    static BFu7i_BFu0s_BFu9s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu0s_BFu9s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_BFu9s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_BFu9s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, 1, "BFu7i_BFu0s_BFu9s");
    set_bf_and_test(lv, v2, ABISELECT(2,2), 0, 9, hide_ull(1LL<<8), "BFu7i_BFu0s_BFu9s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_BFu9s(Test_BFu7i_BFu0s_BFu9s, "BFu7i_BFu0s_BFu9s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_C()
{
  {
    init_simple_test("BFu7i_BFu0s_C");
    static BFu7i_BFu0s_C lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu7i_BFu0s_C)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_C)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_C");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_C");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu7i_BFu0s_C.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_C(Test_BFu7i_BFu0s_C, "BFu7i_BFu0s_C", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_D()
{
  {
    init_simple_test("BFu7i_BFu0s_D");
    static BFu7i_BFu0s_D lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu7i_BFu0s_D)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_D)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_D");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_D");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu7i_BFu0s_D.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_D(Test_BFu7i_BFu0s_D, "BFu7i_BFu0s_D", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_F()
{
  {
    init_simple_test("BFu7i_BFu0s_F");
    static BFu7i_BFu0s_F lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7i_BFu0s_F)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_F)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_F");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_F");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu7i_BFu0s_F.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_F(Test_BFu7i_BFu0s_F, "BFu7i_BFu0s_F", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_I()
{
  {
    init_simple_test("BFu7i_BFu0s_I");
    static BFu7i_BFu0s_I lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7i_BFu0s_I)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_I)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_I");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_I");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu7i_BFu0s_I.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_I(Test_BFu7i_BFu0s_I, "BFu7i_BFu0s_I", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_Ip()
{
  {
    init_simple_test("BFu7i_BFu0s_Ip");
    static BFu7i_BFu0s_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu7i_BFu0s_Ip)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_Ip)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_Ip");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_Ip");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu7i_BFu0s_Ip.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_Ip(Test_BFu7i_BFu0s_Ip, "BFu7i_BFu0s_Ip", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_L()
{
  {
    init_simple_test("BFu7i_BFu0s_L");
    static BFu7i_BFu0s_L lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu7i_BFu0s_L)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_L)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_L");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_L");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu7i_BFu0s_L.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_L(Test_BFu7i_BFu0s_L, "BFu7i_BFu0s_L", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_S()
{
  {
    init_simple_test("BFu7i_BFu0s_S");
    static BFu7i_BFu0s_S lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu0s_S)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_S)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_S");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_S");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu7i_BFu0s_S.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_S(Test_BFu7i_BFu0s_S, "BFu7i_BFu0s_S", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_Uc()
{
  {
    init_simple_test("BFu7i_BFu0s_Uc");
    static BFu7i_BFu0s_Uc lv;
    check2(sizeof(lv), ABISELECT(3,3), "sizeof(BFu7i_BFu0s_Uc)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_Uc)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_Uc");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_Uc");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu7i_BFu0s_Uc.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_Uc(Test_BFu7i_BFu0s_Uc, "BFu7i_BFu0s_Uc", ABISELECT(3,3));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_Ui()
{
  {
    init_simple_test("BFu7i_BFu0s_Ui");
    static BFu7i_BFu0s_Ui lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7i_BFu0s_Ui)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_Ui)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_Ui");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_Ui");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu7i_BFu0s_Ui.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_Ui(Test_BFu7i_BFu0s_Ui, "BFu7i_BFu0s_Ui", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_Ul()
{
  {
    init_simple_test("BFu7i_BFu0s_Ul");
    static BFu7i_BFu0s_Ul lv;
    check2(sizeof(lv), ABISELECT(10,10), "sizeof(BFu7i_BFu0s_Ul)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_Ul)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_Ul");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_Ul");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu7i_BFu0s_Ul.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_Ul(Test_BFu7i_BFu0s_Ul, "BFu7i_BFu0s_Ul", ABISELECT(10,10));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_Us()
{
  {
    init_simple_test("BFu7i_BFu0s_Us");
    static BFu7i_BFu0s_Us lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu0s_Us)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_Us)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_Us");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_Us");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu7i_BFu0s_Us.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_Us(Test_BFu7i_BFu0s_Us, "BFu7i_BFu0s_Us", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu0s_Vp()
{
  {
    init_simple_test("BFu7i_BFu0s_Vp");
    static BFu7i_BFu0s_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(BFu7i_BFu0s_Vp)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu0s_Vp)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu0s_Vp");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu0s_Vp");
    check_field_offset(lv, v2, ABISELECT(2,2), "BFu7i_BFu0s_Vp.v2");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu0s_Vp(Test_BFu7i_BFu0s_Vp, "BFu7i_BFu0s_Vp", ABISELECT(10,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu15i_BFu0c()
{
  {
    init_simple_test("BFu7i_BFu15i_BFu0c");
    static BFu7i_BFu15i_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_BFu15i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu15i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu15i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7i_BFu15i_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7i_BFu15i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu15i_BFu0c(Test_BFu7i_BFu15i_BFu0c, "BFu7i_BFu15i_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu15i_BFu0i()
{
  {
    init_simple_test("BFu7i_BFu15i_BFu0i");
    static BFu7i_BFu15i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu15i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu15i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu15i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7i_BFu15i_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7i_BFu15i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu15i_BFu0i(Test_BFu7i_BFu15i_BFu0i, "BFu7i_BFu15i_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu15i_BFu0ll()
{
  {
    init_simple_test("BFu7i_BFu15i_BFu0ll");
    static BFu7i_BFu15i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7i_BFu15i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu15i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu15i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7i_BFu15i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7i_BFu15i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu15i_BFu0ll(Test_BFu7i_BFu15i_BFu0ll, "BFu7i_BFu15i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu15i_BFu0s()
{
  {
    init_simple_test("BFu7i_BFu15i_BFu0s");
    static BFu7i_BFu15i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu15i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu15i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu15i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7i_BFu15i_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7i_BFu15i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu15i_BFu0s(Test_BFu7i_BFu15i_BFu0s, "BFu7i_BFu15i_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu15ll_BFu0c()
{
  {
    init_simple_test("BFu7i_BFu15ll_BFu0c");
    static BFu7i_BFu15ll_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_BFu15ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu15ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu15ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7i_BFu15ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7i_BFu15ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu15ll_BFu0c(Test_BFu7i_BFu15ll_BFu0c, "BFu7i_BFu15ll_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu15ll_BFu0i()
{
  {
    init_simple_test("BFu7i_BFu15ll_BFu0i");
    static BFu7i_BFu15ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu15ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu15ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu15ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7i_BFu15ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7i_BFu15ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu15ll_BFu0i(Test_BFu7i_BFu15ll_BFu0i, "BFu7i_BFu15ll_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu15ll_BFu0ll()
{
  {
    init_simple_test("BFu7i_BFu15ll_BFu0ll");
    static BFu7i_BFu15ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7i_BFu15ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu15ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7i_BFu15ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7i_BFu15ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu15ll_BFu0ll(Test_BFu7i_BFu15ll_BFu0ll, "BFu7i_BFu15ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu15ll_BFu0s()
{
  {
    init_simple_test("BFu7i_BFu15ll_BFu0s");
    static BFu7i_BFu15ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu15ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu15ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu15ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7i_BFu15ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7i_BFu15ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu15ll_BFu0s(Test_BFu7i_BFu15ll_BFu0s, "BFu7i_BFu15ll_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu15s_BFu0c()
{
  {
    init_simple_test("BFu7i_BFu15s_BFu0c");
    static BFu7i_BFu15s_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_BFu15s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu15s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu15s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7i_BFu15s_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7i_BFu15s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu15s_BFu0c(Test_BFu7i_BFu15s_BFu0c, "BFu7i_BFu15s_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu15s_BFu0i()
{
  {
    init_simple_test("BFu7i_BFu15s_BFu0i");
    static BFu7i_BFu15s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu15s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu15s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu15s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7i_BFu15s_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7i_BFu15s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu15s_BFu0i(Test_BFu7i_BFu15s_BFu0i, "BFu7i_BFu15s_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu15s_BFu0ll()
{
  {
    init_simple_test("BFu7i_BFu15s_BFu0ll");
    static BFu7i_BFu15s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7i_BFu15s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu15s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu15s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7i_BFu15s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7i_BFu15s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu15s_BFu0ll(Test_BFu7i_BFu15s_BFu0ll, "BFu7i_BFu15s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu15s_BFu0s()
{
  {
    init_simple_test("BFu7i_BFu15s_BFu0s");
    static BFu7i_BFu15s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu15s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu15s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu15s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 15, 1, "BFu7i_BFu15s_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 15, hide_ull(1LL<<14), "BFu7i_BFu15s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu15s_BFu0s(Test_BFu7i_BFu15s_BFu0s, "BFu7i_BFu15s_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu16i_BFu0c()
{
  {
    init_simple_test("BFu7i_BFu16i_BFu0c");
    static BFu7i_BFu16i_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_BFu16i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu16i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu16i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7i_BFu16i_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7i_BFu16i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu16i_BFu0c(Test_BFu7i_BFu16i_BFu0c, "BFu7i_BFu16i_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu16i_BFu0i()
{
  {
    init_simple_test("BFu7i_BFu16i_BFu0i");
    static BFu7i_BFu16i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu16i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu16i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu16i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7i_BFu16i_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7i_BFu16i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu16i_BFu0i(Test_BFu7i_BFu16i_BFu0i, "BFu7i_BFu16i_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu16i_BFu0ll()
{
  {
    init_simple_test("BFu7i_BFu16i_BFu0ll");
    static BFu7i_BFu16i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7i_BFu16i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu16i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu16i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7i_BFu16i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7i_BFu16i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu16i_BFu0ll(Test_BFu7i_BFu16i_BFu0ll, "BFu7i_BFu16i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu16i_BFu0s()
{
  {
    init_simple_test("BFu7i_BFu16i_BFu0s");
    static BFu7i_BFu16i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu16i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu16i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu16i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7i_BFu16i_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7i_BFu16i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu16i_BFu0s(Test_BFu7i_BFu16i_BFu0s, "BFu7i_BFu16i_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu16ll_BFu0c()
{
  {
    init_simple_test("BFu7i_BFu16ll_BFu0c");
    static BFu7i_BFu16ll_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_BFu16ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu16ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu16ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7i_BFu16ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7i_BFu16ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu16ll_BFu0c(Test_BFu7i_BFu16ll_BFu0c, "BFu7i_BFu16ll_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu16ll_BFu0i()
{
  {
    init_simple_test("BFu7i_BFu16ll_BFu0i");
    static BFu7i_BFu16ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu16ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu16ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu16ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7i_BFu16ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7i_BFu16ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu16ll_BFu0i(Test_BFu7i_BFu16ll_BFu0i, "BFu7i_BFu16ll_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu16ll_BFu0ll()
{
  {
    init_simple_test("BFu7i_BFu16ll_BFu0ll");
    static BFu7i_BFu16ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7i_BFu16ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu16ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7i_BFu16ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7i_BFu16ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu16ll_BFu0ll(Test_BFu7i_BFu16ll_BFu0ll, "BFu7i_BFu16ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu16ll_BFu0s()
{
  {
    init_simple_test("BFu7i_BFu16ll_BFu0s");
    static BFu7i_BFu16ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu16ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu16ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu16ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7i_BFu16ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7i_BFu16ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu16ll_BFu0s(Test_BFu7i_BFu16ll_BFu0s, "BFu7i_BFu16ll_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu16s_BFu0c()
{
  {
    init_simple_test("BFu7i_BFu16s_BFu0c");
    static BFu7i_BFu16s_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_BFu16s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu16s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu16s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7i_BFu16s_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7i_BFu16s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu16s_BFu0c(Test_BFu7i_BFu16s_BFu0c, "BFu7i_BFu16s_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu16s_BFu0i()
{
  {
    init_simple_test("BFu7i_BFu16s_BFu0i");
    static BFu7i_BFu16s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu16s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu16s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu16s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7i_BFu16s_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7i_BFu16s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu16s_BFu0i(Test_BFu7i_BFu16s_BFu0i, "BFu7i_BFu16s_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu16s_BFu0ll()
{
  {
    init_simple_test("BFu7i_BFu16s_BFu0ll");
    static BFu7i_BFu16s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7i_BFu16s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu16s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu16s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7i_BFu16s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7i_BFu16s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu16s_BFu0ll(Test_BFu7i_BFu16s_BFu0ll, "BFu7i_BFu16s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu16s_BFu0s()
{
  {
    init_simple_test("BFu7i_BFu16s_BFu0s");
    static BFu7i_BFu16s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu16s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu16s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu16s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 16, 1, "BFu7i_BFu16s_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 16, hide_ull(1LL<<15), "BFu7i_BFu16s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu16s_BFu0s(Test_BFu7i_BFu16s_BFu0s, "BFu7i_BFu16s_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu17i_BFu0c()
{
  {
    init_simple_test("BFu7i_BFu17i_BFu0c");
    static BFu7i_BFu17i_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_BFu17i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu17i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu17i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "BFu7i_BFu17i_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "BFu7i_BFu17i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu17i_BFu0c(Test_BFu7i_BFu17i_BFu0c, "BFu7i_BFu17i_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu17i_BFu0i()
{
  {
    init_simple_test("BFu7i_BFu17i_BFu0i");
    static BFu7i_BFu17i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu17i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu17i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu17i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "BFu7i_BFu17i_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "BFu7i_BFu17i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu17i_BFu0i(Test_BFu7i_BFu17i_BFu0i, "BFu7i_BFu17i_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu17i_BFu0ll()
{
  {
    init_simple_test("BFu7i_BFu17i_BFu0ll");
    static BFu7i_BFu17i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7i_BFu17i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu17i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu17i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "BFu7i_BFu17i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "BFu7i_BFu17i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu17i_BFu0ll(Test_BFu7i_BFu17i_BFu0ll, "BFu7i_BFu17i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu17i_BFu0s()
{
  {
    init_simple_test("BFu7i_BFu17i_BFu0s");
    static BFu7i_BFu17i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu17i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu17i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu17i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "BFu7i_BFu17i_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "BFu7i_BFu17i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu17i_BFu0s(Test_BFu7i_BFu17i_BFu0s, "BFu7i_BFu17i_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu17ll_BFu0c()
{
  {
    init_simple_test("BFu7i_BFu17ll_BFu0c");
    static BFu7i_BFu17ll_BFu0c lv;
    check2(sizeof(lv), 3, "sizeof(BFu7i_BFu17ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu17ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu17ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "BFu7i_BFu17ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "BFu7i_BFu17ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu17ll_BFu0c(Test_BFu7i_BFu17ll_BFu0c, "BFu7i_BFu17ll_BFu0c", 3);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu17ll_BFu0i()
{
  {
    init_simple_test("BFu7i_BFu17ll_BFu0i");
    static BFu7i_BFu17ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu17ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu17ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu17ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "BFu7i_BFu17ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "BFu7i_BFu17ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu17ll_BFu0i(Test_BFu7i_BFu17ll_BFu0i, "BFu7i_BFu17ll_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu17ll_BFu0ll()
{
  {
    init_simple_test("BFu7i_BFu17ll_BFu0ll");
    static BFu7i_BFu17ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7i_BFu17ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu17ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "BFu7i_BFu17ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "BFu7i_BFu17ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu17ll_BFu0ll(Test_BFu7i_BFu17ll_BFu0ll, "BFu7i_BFu17ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu17ll_BFu0s()
{
  {
    init_simple_test("BFu7i_BFu17ll_BFu0s");
    static BFu7i_BFu17ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu17ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu17ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu17ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 17, 1, "BFu7i_BFu17ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 17, hide_ull(1LL<<16), "BFu7i_BFu17ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu17ll_BFu0s(Test_BFu7i_BFu17ll_BFu0s, "BFu7i_BFu17ll_BFu0s", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu1c_BFu0c()
{
  {
    init_simple_test("BFu7i_BFu1c_BFu0c");
    static BFu7i_BFu1c_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu7i_BFu1c_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu1c_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu1c_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu1c_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7i_BFu1c_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu1c_BFu0c(Test_BFu7i_BFu1c_BFu0c, "BFu7i_BFu1c_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu1c_BFu0i()
{
  {
    init_simple_test("BFu7i_BFu1c_BFu0i");
    static BFu7i_BFu1c_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu1c_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu1c_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu1c_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu1c_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7i_BFu1c_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu1c_BFu0i(Test_BFu7i_BFu1c_BFu0i, "BFu7i_BFu1c_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu1c_BFu0ll()
{
  {
    init_simple_test("BFu7i_BFu1c_BFu0ll");
    static BFu7i_BFu1c_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7i_BFu1c_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu1c_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu1c_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu1c_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7i_BFu1c_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu1c_BFu0ll(Test_BFu7i_BFu1c_BFu0ll, "BFu7i_BFu1c_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu1c_BFu0s()
{
  {
    init_simple_test("BFu7i_BFu1c_BFu0s");
    static BFu7i_BFu1c_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu7i_BFu1c_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu1c_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu1c_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu1c_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7i_BFu1c_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu1c_BFu0s(Test_BFu7i_BFu1c_BFu0s, "BFu7i_BFu1c_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu1i_BFu0c()
{
  {
    init_simple_test("BFu7i_BFu1i_BFu0c");
    static BFu7i_BFu1i_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu7i_BFu1i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu1i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu1i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu1i_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7i_BFu1i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu1i_BFu0c(Test_BFu7i_BFu1i_BFu0c, "BFu7i_BFu1i_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu1i_BFu0i()
{
  {
    init_simple_test("BFu7i_BFu1i_BFu0i");
    static BFu7i_BFu1i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu1i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu1i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu1i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu1i_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7i_BFu1i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu1i_BFu0i(Test_BFu7i_BFu1i_BFu0i, "BFu7i_BFu1i_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu1i_BFu0ll()
{
  {
    init_simple_test("BFu7i_BFu1i_BFu0ll");
    static BFu7i_BFu1i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7i_BFu1i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu1i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu1i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu1i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7i_BFu1i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu1i_BFu0ll(Test_BFu7i_BFu1i_BFu0ll, "BFu7i_BFu1i_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu1i_BFu0s()
{
  {
    init_simple_test("BFu7i_BFu1i_BFu0s");
    static BFu7i_BFu1i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu7i_BFu1i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu1i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu1i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu1i_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7i_BFu1i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu1i_BFu0s(Test_BFu7i_BFu1i_BFu0s, "BFu7i_BFu1i_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu1ll_BFu0c()
{
  {
    init_simple_test("BFu7i_BFu1ll_BFu0c");
    static BFu7i_BFu1ll_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu7i_BFu1ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu1ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu1ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu1ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7i_BFu1ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu1ll_BFu0c(Test_BFu7i_BFu1ll_BFu0c, "BFu7i_BFu1ll_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu1ll_BFu0i()
{
  {
    init_simple_test("BFu7i_BFu1ll_BFu0i");
    static BFu7i_BFu1ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu1ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu1ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu1ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu1ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7i_BFu1ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu1ll_BFu0i(Test_BFu7i_BFu1ll_BFu0i, "BFu7i_BFu1ll_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu1ll_BFu0ll()
{
  {
    init_simple_test("BFu7i_BFu1ll_BFu0ll");
    static BFu7i_BFu1ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7i_BFu1ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu1ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu1ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7i_BFu1ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu1ll_BFu0ll(Test_BFu7i_BFu1ll_BFu0ll, "BFu7i_BFu1ll_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu1ll_BFu0s()
{
  {
    init_simple_test("BFu7i_BFu1ll_BFu0s");
    static BFu7i_BFu1ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu7i_BFu1ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu1ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu1ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu1ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7i_BFu1ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu1ll_BFu0s(Test_BFu7i_BFu1ll_BFu0s, "BFu7i_BFu1ll_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu1s_BFu0c()
{
  {
    init_simple_test("BFu7i_BFu1s_BFu0c");
    static BFu7i_BFu1s_BFu0c lv;
    check2(sizeof(lv), 1, "sizeof(BFu7i_BFu1s_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu1s_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu1s_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu1s_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7i_BFu1s_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu1s_BFu0c(Test_BFu7i_BFu1s_BFu0c, "BFu7i_BFu1s_BFu0c", 1);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu1s_BFu0i()
{
  {
    init_simple_test("BFu7i_BFu1s_BFu0i");
    static BFu7i_BFu1s_BFu0i lv;
    check2(sizeof(lv), ABISELECT(4,4), "sizeof(BFu7i_BFu1s_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu1s_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu1s_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu1s_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7i_BFu1s_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu1s_BFu0i(Test_BFu7i_BFu1s_BFu0i, "BFu7i_BFu1s_BFu0i", ABISELECT(4,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu1s_BFu0ll()
{
  {
    init_simple_test("BFu7i_BFu1s_BFu0ll");
    static BFu7i_BFu1s_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,4), "sizeof(BFu7i_BFu1s_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu1s_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu1s_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu1s_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7i_BFu1s_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu1s_BFu0ll(Test_BFu7i_BFu1s_BFu0ll, "BFu7i_BFu1s_BFu0ll", ABISELECT(8,4));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu1s_BFu0s()
{
  {
    init_simple_test("BFu7i_BFu1s_BFu0s");
    static BFu7i_BFu1s_BFu0s lv;
    check2(sizeof(lv), ABISELECT(2,2), "sizeof(BFu7i_BFu1s_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu1s_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu1s_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu1s_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 1, 1, "BFu7i_BFu1s_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu1s_BFu0s(Test_BFu7i_BFu1s_BFu0s, "BFu7i_BFu1s_BFu0s", ABISELECT(2,2));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu31i_BFu0c()
{
  {
    init_simple_test("BFu7i_BFu31i_BFu0c");
    static BFu7i_BFu31i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu7i_BFu31i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu31i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu31i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "BFu7i_BFu31i_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "BFu7i_BFu31i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu31i_BFu0c(Test_BFu7i_BFu31i_BFu0c, "BFu7i_BFu31i_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu31i_BFu0i()
{
  {
    init_simple_test("BFu7i_BFu31i_BFu0i");
    static BFu7i_BFu31i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7i_BFu31i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu31i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu31i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "BFu7i_BFu31i_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "BFu7i_BFu31i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu31i_BFu0i(Test_BFu7i_BFu31i_BFu0i, "BFu7i_BFu31i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu31i_BFu0ll()
{
  {
    init_simple_test("BFu7i_BFu31i_BFu0ll");
    static BFu7i_BFu31i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7i_BFu31i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu31i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu31i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "BFu7i_BFu31i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "BFu7i_BFu31i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu31i_BFu0ll(Test_BFu7i_BFu31i_BFu0ll, "BFu7i_BFu31i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu31i_BFu0s()
{
  {
    init_simple_test("BFu7i_BFu31i_BFu0s");
    static BFu7i_BFu31i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7i_BFu31i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu31i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu31i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "BFu7i_BFu31i_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "BFu7i_BFu31i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu31i_BFu0s(Test_BFu7i_BFu31i_BFu0s, "BFu7i_BFu31i_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu31ll_BFu0c()
{
  {
    init_simple_test("BFu7i_BFu31ll_BFu0c");
    static BFu7i_BFu31ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu7i_BFu31ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu31ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu31ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "BFu7i_BFu31ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "BFu7i_BFu31ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu31ll_BFu0c(Test_BFu7i_BFu31ll_BFu0c, "BFu7i_BFu31ll_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu31ll_BFu0i()
{
  {
    init_simple_test("BFu7i_BFu31ll_BFu0i");
    static BFu7i_BFu31ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7i_BFu31ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu31ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu31ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "BFu7i_BFu31ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "BFu7i_BFu31ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu31ll_BFu0i(Test_BFu7i_BFu31ll_BFu0i, "BFu7i_BFu31ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu31ll_BFu0ll()
{
  {
    init_simple_test("BFu7i_BFu31ll_BFu0ll");
    static BFu7i_BFu31ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7i_BFu31ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu31ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "BFu7i_BFu31ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "BFu7i_BFu31ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu31ll_BFu0ll(Test_BFu7i_BFu31ll_BFu0ll, "BFu7i_BFu31ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu31ll_BFu0s()
{
  {
    init_simple_test("BFu7i_BFu31ll_BFu0s");
    static BFu7i_BFu31ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7i_BFu31ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu31ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu31ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 31, 1, "BFu7i_BFu31ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 31, hide_ull(1LL<<30), "BFu7i_BFu31ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu31ll_BFu0s(Test_BFu7i_BFu31ll_BFu0s, "BFu7i_BFu31ll_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu32i_BFu0c()
{
  {
    init_simple_test("BFu7i_BFu32i_BFu0c");
    static BFu7i_BFu32i_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu7i_BFu32i_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu32i_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu32i_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "BFu7i_BFu32i_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "BFu7i_BFu32i_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu32i_BFu0c(Test_BFu7i_BFu32i_BFu0c, "BFu7i_BFu32i_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu32i_BFu0i()
{
  {
    init_simple_test("BFu7i_BFu32i_BFu0i");
    static BFu7i_BFu32i_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7i_BFu32i_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu32i_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu32i_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "BFu7i_BFu32i_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "BFu7i_BFu32i_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu32i_BFu0i(Test_BFu7i_BFu32i_BFu0i, "BFu7i_BFu32i_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu32i_BFu0ll()
{
  {
    init_simple_test("BFu7i_BFu32i_BFu0ll");
    static BFu7i_BFu32i_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7i_BFu32i_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu32i_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu32i_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "BFu7i_BFu32i_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "BFu7i_BFu32i_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu32i_BFu0ll(Test_BFu7i_BFu32i_BFu0ll, "BFu7i_BFu32i_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu32i_BFu0s()
{
  {
    init_simple_test("BFu7i_BFu32i_BFu0s");
    static BFu7i_BFu32i_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7i_BFu32i_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu32i_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu32i_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "BFu7i_BFu32i_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "BFu7i_BFu32i_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu32i_BFu0s(Test_BFu7i_BFu32i_BFu0s, "BFu7i_BFu32i_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu32ll_BFu0c()
{
  {
    init_simple_test("BFu7i_BFu32ll_BFu0c");
    static BFu7i_BFu32ll_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu7i_BFu32ll_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu32ll_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu32ll_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "BFu7i_BFu32ll_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "BFu7i_BFu32ll_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu32ll_BFu0c(Test_BFu7i_BFu32ll_BFu0c, "BFu7i_BFu32ll_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu32ll_BFu0i()
{
  {
    init_simple_test("BFu7i_BFu32ll_BFu0i");
    static BFu7i_BFu32ll_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7i_BFu32ll_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu32ll_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu32ll_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "BFu7i_BFu32ll_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "BFu7i_BFu32ll_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu32ll_BFu0i(Test_BFu7i_BFu32ll_BFu0i, "BFu7i_BFu32ll_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu32ll_BFu0ll()
{
  {
    init_simple_test("BFu7i_BFu32ll_BFu0ll");
    static BFu7i_BFu32ll_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7i_BFu32ll_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu32ll_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "BFu7i_BFu32ll_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "BFu7i_BFu32ll_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu32ll_BFu0ll(Test_BFu7i_BFu32ll_BFu0ll, "BFu7i_BFu32ll_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu32ll_BFu0s()
{
  {
    init_simple_test("BFu7i_BFu32ll_BFu0s");
    static BFu7i_BFu32ll_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7i_BFu32ll_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu32ll_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu32ll_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 32, 1, "BFu7i_BFu32ll_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 32, hide_ull(1LL<<31), "BFu7i_BFu32ll_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu32ll_BFu0s(Test_BFu7i_BFu32ll_BFu0s, "BFu7i_BFu32ll_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu33_BFu0c()
{
  {
    init_simple_test("BFu7i_BFu33_BFu0c");
    static BFu7i_BFu33_BFu0c lv;
    check2(sizeof(lv), 5, "sizeof(BFu7i_BFu33_BFu0c)");
    check2(__alignof__(lv), 1, "__alignof__(BFu7i_BFu33_BFu0c)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu33_BFu0c");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 33, 1, "BFu7i_BFu33_BFu0c");
    set_bf_and_test(lv, v2, 0, 7, 33, hide_ull(1LL<<32), "BFu7i_BFu33_BFu0c");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu33_BFu0c(Test_BFu7i_BFu33_BFu0c, "BFu7i_BFu33_BFu0c", 5);

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu33_BFu0i()
{
  {
    init_simple_test("BFu7i_BFu33_BFu0i");
    static BFu7i_BFu33_BFu0i lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7i_BFu33_BFu0i)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu33_BFu0i)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu33_BFu0i");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 33, 1, "BFu7i_BFu33_BFu0i");
    set_bf_and_test(lv, v2, 0, 7, 33, hide_ull(1LL<<32), "BFu7i_BFu33_BFu0i");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu33_BFu0i(Test_BFu7i_BFu33_BFu0i, "BFu7i_BFu33_BFu0i", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu33_BFu0ll()
{
  {
    init_simple_test("BFu7i_BFu33_BFu0ll");
    static BFu7i_BFu33_BFu0ll lv;
    check2(sizeof(lv), ABISELECT(8,8), "sizeof(BFu7i_BFu33_BFu0ll)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu33_BFu0ll)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu33_BFu0ll");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 33, 1, "BFu7i_BFu33_BFu0ll");
    set_bf_and_test(lv, v2, 0, 7, 33, hide_ull(1LL<<32), "BFu7i_BFu33_BFu0ll");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu33_BFu0ll(Test_BFu7i_BFu33_BFu0ll, "BFu7i_BFu33_BFu0ll", ABISELECT(8,8));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

#ifdef __cplusplus


static void Test_BFu7i_BFu33_BFu0s()
{
  {
    init_simple_test("BFu7i_BFu33_BFu0s");
    static BFu7i_BFu33_BFu0s lv;
    check2(sizeof(lv), ABISELECT(6,6), "sizeof(BFu7i_BFu33_BFu0s)");
    check2(__alignof__(lv), ABISELECT(1,1), "__alignof__(BFu7i_BFu33_BFu0s)");
    set_bf_and_test(lv, v1, 0, 0, 7, 1, "BFu7i_BFu33_BFu0s");
    set_bf_and_test(lv, v1, 0, 0, 7, hide_ull(1LL<<6), "BFu7i_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 33, 1, "BFu7i_BFu33_BFu0s");
    set_bf_and_test(lv, v2, 0, 7, 33, hide_ull(1LL<<32), "BFu7i_BFu33_BFu0s");
  }
}
static Arrange_To_Call_Me vBFu7i_BFu33_BFu0s(Test_BFu7i_BFu33_BFu0s, "BFu7i_BFu33_BFu0s", ABISELECT(6,6));

#else // __cplusplus

#endif // __cplusplus

//============================================================================

