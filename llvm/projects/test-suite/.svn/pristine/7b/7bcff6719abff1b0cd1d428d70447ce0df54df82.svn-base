// This file is distributed under the University of Illinois Open Source License.
// See LICENSE.TXT for details.
// RUN: c_compiler -c -o %t1.o -I "common" "common/testsuite.c"
// RUN: c_compiler -c %s -I "common" -o %t2.o
// RUN: linker -o %t1%exeext  %t1.o %t2.o
// RUN: runtool %t1%exeext | checker "TEST PASSED"
// RUN: cxx_compiler cxx_rtti -c %s -I "common" -o %t2.o
// RUN: linker -o %t2%exeext  %t1.o %t2.o
// RUN: runtool %t2%exeext | checker "TEST PASSED"
#include "testsuite.h"
struct __attribute__((packed)) aL_Ui_BFu16i { long long v1; unsigned int v2; unsigned int v3:16; };
struct __attribute__((packed)) aL_Ui_BFu16ll { long long v1; unsigned int v2; unsigned long long v3:16; };
struct __attribute__((packed)) aL_Ui_BFu16s { long long v1; unsigned int v2; unsigned short v3:16; };
struct __attribute__((packed)) aL_Ui_BFu17i { long long v1; unsigned int v2; unsigned int v3:17; };
struct __attribute__((packed)) aL_Ui_BFu17ll { long long v1; unsigned int v2; unsigned long long v3:17; };
struct __attribute__((packed)) aL_Ui_BFu1c { long long v1; unsigned int v2; unsigned char v3:1; };
struct __attribute__((packed)) aL_Ui_BFu1i { long long v1; unsigned int v2; unsigned int v3:1; };
struct __attribute__((packed)) aL_Ui_BFu1ll { long long v1; unsigned int v2; unsigned long long v3:1; };
struct __attribute__((packed)) aL_Ui_BFu1s { long long v1; unsigned int v2; unsigned short v3:1; };
struct __attribute__((packed)) aL_Ui_BFu31i { long long v1; unsigned int v2; unsigned int v3:31; };
struct __attribute__((packed)) aL_Ui_BFu31ll { long long v1; unsigned int v2; unsigned long long v3:31; };
struct __attribute__((packed)) aL_Ui_BFu32i { long long v1; unsigned int v2; unsigned int v3:32; };
struct __attribute__((packed)) aL_Ui_BFu32ll { long long v1; unsigned int v2; unsigned long long v3:32; };
struct __attribute__((packed)) aL_Ui_BFu33 { long long v1; unsigned int v2; unsigned long long v3:33; };
struct __attribute__((packed)) aL_Ui_BFu7c { long long v1; unsigned int v2; unsigned char v3:7; };
struct __attribute__((packed)) aL_Ui_BFu7i { long long v1; unsigned int v2; unsigned int v3:7; };
struct __attribute__((packed)) aL_Ui_BFu7ll { long long v1; unsigned int v2; unsigned long long v3:7; };
struct __attribute__((packed)) aL_Ui_BFu7s { long long v1; unsigned int v2; unsigned short v3:7; };
struct __attribute__((packed)) aL_Ui_BFu8c { long long v1; unsigned int v2; unsigned char v3:8; };
struct __attribute__((packed)) aL_Ui_BFu8i { long long v1; unsigned int v2; unsigned int v3:8; };
struct __attribute__((packed)) aL_Ui_BFu8ll { long long v1; unsigned int v2; unsigned long long v3:8; };
struct __attribute__((packed)) aL_Ui_BFu8s { long long v1; unsigned int v2; unsigned short v3:8; };
struct __attribute__((packed)) aL_Ui_BFu9i { long long v1; unsigned int v2; unsigned int v3:9; };
struct __attribute__((packed)) aL_Ui_BFu9ll { long long v1; unsigned int v2; unsigned long long v3:9; };
struct __attribute__((packed)) aL_Ui_BFu9s { long long v1; unsigned int v2; unsigned short v3:9; };
struct __attribute__((packed)) aL_Ui_C { long long v1; unsigned int v2; char v3; };
struct __attribute__((packed)) aL_Ui_D { long long v1; unsigned int v2; double v3; };
struct __attribute__((packed)) aL_Ui_F { long long v1; unsigned int v2; float v3; };
struct __attribute__((packed)) aL_Ui_I { long long v1; unsigned int v2; int v3; };
struct __attribute__((packed)) aL_Ui_Ip { long long v1; unsigned int v2; int * v3; };
struct __attribute__((packed)) aL_Ui_L { long long v1; unsigned int v2; long long v3; };
struct __attribute__((packed)) aL_Ui_S { long long v1; unsigned int v2; short v3; };
struct __attribute__((packed)) aL_Ui_Uc { long long v1; unsigned int v2; unsigned char v3; };
struct __attribute__((packed)) aL_Ui_Ui { long long v1; unsigned int v2; unsigned int v3; };
struct __attribute__((packed)) aL_Ui_Ul { long long v1; unsigned int v2; unsigned long long v3; };
struct __attribute__((packed)) aL_Ui_Us { long long v1; unsigned int v2; unsigned short v3; };
struct __attribute__((packed)) aL_Ui_Vp { long long v1; unsigned int v2; void * v3; };
struct __attribute__((packed)) aL_Ul { long long v1; unsigned long long v2; };
struct __attribute__((packed)) aL_Ul_BFu15i { long long v1; unsigned long long v2; unsigned int v3:15; };
struct __attribute__((packed)) aL_Ul_BFu15ll { long long v1; unsigned long long v2; unsigned long long v3:15; };
struct __attribute__((packed)) aL_Ul_BFu15s { long long v1; unsigned long long v2; unsigned short v3:15; };
struct __attribute__((packed)) aL_Ul_BFu16i { long long v1; unsigned long long v2; unsigned int v3:16; };
struct __attribute__((packed)) aL_Ul_BFu16ll { long long v1; unsigned long long v2; unsigned long long v3:16; };
struct __attribute__((packed)) aL_Ul_BFu16s { long long v1; unsigned long long v2; unsigned short v3:16; };
struct __attribute__((packed)) aL_Ul_BFu17i { long long v1; unsigned long long v2; unsigned int v3:17; };
struct __attribute__((packed)) aL_Ul_BFu17ll { long long v1; unsigned long long v2; unsigned long long v3:17; };
struct __attribute__((packed)) aL_Ul_BFu1c { long long v1; unsigned long long v2; unsigned char v3:1; };
struct __attribute__((packed)) aL_Ul_BFu1i { long long v1; unsigned long long v2; unsigned int v3:1; };
struct __attribute__((packed)) aL_Ul_BFu1ll { long long v1; unsigned long long v2; unsigned long long v3:1; };
struct __attribute__((packed)) aL_Ul_BFu1s { long long v1; unsigned long long v2; unsigned short v3:1; };
struct __attribute__((packed)) aL_Ul_BFu31i { long long v1; unsigned long long v2; unsigned int v3:31; };
struct __attribute__((packed)) aL_Ul_BFu31ll { long long v1; unsigned long long v2; unsigned long long v3:31; };
struct __attribute__((packed)) aL_Ul_BFu32i { long long v1; unsigned long long v2; unsigned int v3:32; };
struct __attribute__((packed)) aL_Ul_BFu32ll { long long v1; unsigned long long v2; unsigned long long v3:32; };
struct __attribute__((packed)) aL_Ul_BFu33 { long long v1; unsigned long long v2; unsigned long long v3:33; };
struct __attribute__((packed)) aL_Ul_BFu7c { long long v1; unsigned long long v2; unsigned char v3:7; };
struct __attribute__((packed)) aL_Ul_BFu7i { long long v1; unsigned long long v2; unsigned int v3:7; };
struct __attribute__((packed)) aL_Ul_BFu7ll { long long v1; unsigned long long v2; unsigned long long v3:7; };
struct __attribute__((packed)) aL_Ul_BFu7s { long long v1; unsigned long long v2; unsigned short v3:7; };
struct __attribute__((packed)) aL_Ul_BFu8c { long long v1; unsigned long long v2; unsigned char v3:8; };
struct __attribute__((packed)) aL_Ul_BFu8i { long long v1; unsigned long long v2; unsigned int v3:8; };
struct __attribute__((packed)) aL_Ul_BFu8ll { long long v1; unsigned long long v2; unsigned long long v3:8; };
struct __attribute__((packed)) aL_Ul_BFu8s { long long v1; unsigned long long v2; unsigned short v3:8; };
struct __attribute__((packed)) aL_Ul_BFu9i { long long v1; unsigned long long v2; unsigned int v3:9; };
struct __attribute__((packed)) aL_Ul_BFu9ll { long long v1; unsigned long long v2; unsigned long long v3:9; };
struct __attribute__((packed)) aL_Ul_BFu9s { long long v1; unsigned long long v2; unsigned short v3:9; };
struct __attribute__((packed)) aL_Ul_C { long long v1; unsigned long long v2; char v3; };
struct __attribute__((packed)) aL_Ul_D { long long v1; unsigned long long v2; double v3; };
struct __attribute__((packed)) aL_Ul_F { long long v1; unsigned long long v2; float v3; };
struct __attribute__((packed)) aL_Ul_I { long long v1; unsigned long long v2; int v3; };
struct __attribute__((packed)) aL_Ul_Ip { long long v1; unsigned long long v2; int * v3; };
struct __attribute__((packed)) aL_Ul_L { long long v1; unsigned long long v2; long long v3; };
struct __attribute__((packed)) aL_Ul_S { long long v1; unsigned long long v2; short v3; };
struct __attribute__((packed)) aL_Ul_Uc { long long v1; unsigned long long v2; unsigned char v3; };
struct __attribute__((packed)) aL_Ul_Ui { long long v1; unsigned long long v2; unsigned int v3; };
struct __attribute__((packed)) aL_Ul_Ul { long long v1; unsigned long long v2; unsigned long long v3; };
struct __attribute__((packed)) aL_Ul_Us { long long v1; unsigned long long v2; unsigned short v3; };
struct __attribute__((packed)) aL_Ul_Vp { long long v1; unsigned long long v2; void * v3; };
struct __attribute__((packed)) aL_Us { long long v1; unsigned short v2; };
struct __attribute__((packed)) aL_Us_BFu15i { long long v1; unsigned short v2; unsigned int v3:15; };
struct __attribute__((packed)) aL_Us_BFu15ll { long long v1; unsigned short v2; unsigned long long v3:15; };
struct __attribute__((packed)) aL_Us_BFu15s { long long v1; unsigned short v2; unsigned short v3:15; };
struct __attribute__((packed)) aL_Us_BFu16i { long long v1; unsigned short v2; unsigned int v3:16; };
struct __attribute__((packed)) aL_Us_BFu16ll { long long v1; unsigned short v2; unsigned long long v3:16; };
struct __attribute__((packed)) aL_Us_BFu16s { long long v1; unsigned short v2; unsigned short v3:16; };
struct __attribute__((packed)) aL_Us_BFu17i { long long v1; unsigned short v2; unsigned int v3:17; };
struct __attribute__((packed)) aL_Us_BFu17ll { long long v1; unsigned short v2; unsigned long long v3:17; };
struct __attribute__((packed)) aL_Us_BFu1c { long long v1; unsigned short v2; unsigned char v3:1; };
struct __attribute__((packed)) aL_Us_BFu1i { long long v1; unsigned short v2; unsigned int v3:1; };
struct __attribute__((packed)) aL_Us_BFu1ll { long long v1; unsigned short v2; unsigned long long v3:1; };
struct __attribute__((packed)) aL_Us_BFu1s { long long v1; unsigned short v2; unsigned short v3:1; };
struct __attribute__((packed)) aL_Us_BFu31i { long long v1; unsigned short v2; unsigned int v3:31; };
struct __attribute__((packed)) aL_Us_BFu31ll { long long v1; unsigned short v2; unsigned long long v3:31; };
struct __attribute__((packed)) aL_Us_BFu32i { long long v1; unsigned short v2; unsigned int v3:32; };
struct __attribute__((packed)) aL_Us_BFu32ll { long long v1; unsigned short v2; unsigned long long v3:32; };
struct __attribute__((packed)) aL_Us_BFu33 { long long v1; unsigned short v2; unsigned long long v3:33; };
struct __attribute__((packed)) aL_Us_BFu7c { long long v1; unsigned short v2; unsigned char v3:7; };
struct __attribute__((packed)) aL_Us_BFu7i { long long v1; unsigned short v2; unsigned int v3:7; };
struct __attribute__((packed)) aL_Us_BFu7ll { long long v1; unsigned short v2; unsigned long long v3:7; };
struct __attribute__((packed)) aL_Us_BFu7s { long long v1; unsigned short v2; unsigned short v3:7; };
struct __attribute__((packed)) aL_Us_BFu8c { long long v1; unsigned short v2; unsigned char v3:8; };
struct __attribute__((packed)) aL_Us_BFu8i { long long v1; unsigned short v2; unsigned int v3:8; };
struct __attribute__((packed)) aL_Us_BFu8ll { long long v1; unsigned short v2; unsigned long long v3:8; };
struct __attribute__((packed)) aL_Us_BFu8s { long long v1; unsigned short v2; unsigned short v3:8; };
struct __attribute__((packed)) aL_Us_BFu9i { long long v1; unsigned short v2; unsigned int v3:9; };
struct __attribute__((packed)) aL_Us_BFu9ll { long long v1; unsigned short v2; unsigned long long v3:9; };
struct __attribute__((packed)) aL_Us_BFu9s { long long v1; unsigned short v2; unsigned short v3:9; };
struct __attribute__((packed)) aL_Us_C { long long v1; unsigned short v2; char v3; };
struct __attribute__((packed)) aL_Us_D { long long v1; unsigned short v2; double v3; };
struct __attribute__((packed)) aL_Us_F { long long v1; unsigned short v2; float v3; };
struct __attribute__((packed)) aL_Us_I { long long v1; unsigned short v2; int v3; };
struct __attribute__((packed)) aL_Us_Ip { long long v1; unsigned short v2; int * v3; };
struct __attribute__((packed)) aL_Us_L { long long v1; unsigned short v2; long long v3; };
struct __attribute__((packed)) aL_Us_S { long long v1; unsigned short v2; short v3; };
struct __attribute__((packed)) aL_Us_Uc { long long v1; unsigned short v2; unsigned char v3; };
struct __attribute__((packed)) aL_Us_Ui { long long v1; unsigned short v2; unsigned int v3; };
struct __attribute__((packed)) aL_Us_Ul { long long v1; unsigned short v2; unsigned long long v3; };
struct __attribute__((packed)) aL_Us_Us { long long v1; unsigned short v2; unsigned short v3; };
struct __attribute__((packed)) aL_Us_Vp { long long v1; unsigned short v2; void * v3; };
struct __attribute__((packed)) aL_Vp { long long v1; void * v2; };
struct __attribute__((packed)) aL_Vp_BFu15i { long long v1; void * v2; unsigned int v3:15; };
struct __attribute__((packed)) aL_Vp_BFu15ll { long long v1; void * v2; unsigned long long v3:15; };
struct __attribute__((packed)) aL_Vp_BFu15s { long long v1; void * v2; unsigned short v3:15; };
struct __attribute__((packed)) aL_Vp_BFu16i { long long v1; void * v2; unsigned int v3:16; };
struct __attribute__((packed)) aL_Vp_BFu16ll { long long v1; void * v2; unsigned long long v3:16; };
struct __attribute__((packed)) aL_Vp_BFu16s { long long v1; void * v2; unsigned short v3:16; };
struct __attribute__((packed)) aL_Vp_BFu17i { long long v1; void * v2; unsigned int v3:17; };
struct __attribute__((packed)) aL_Vp_BFu17ll { long long v1; void * v2; unsigned long long v3:17; };
struct __attribute__((packed)) aL_Vp_BFu1c { long long v1; void * v2; unsigned char v3:1; };
struct __attribute__((packed)) aL_Vp_BFu1i { long long v1; void * v2; unsigned int v3:1; };
struct __attribute__((packed)) aL_Vp_BFu1ll { long long v1; void * v2; unsigned long long v3:1; };
struct __attribute__((packed)) aL_Vp_BFu1s { long long v1; void * v2; unsigned short v3:1; };
struct __attribute__((packed)) aL_Vp_BFu31i { long long v1; void * v2; unsigned int v3:31; };
struct __attribute__((packed)) aL_Vp_BFu31ll { long long v1; void * v2; unsigned long long v3:31; };
struct __attribute__((packed)) aL_Vp_BFu32i { long long v1; void * v2; unsigned int v3:32; };
struct __attribute__((packed)) aL_Vp_BFu32ll { long long v1; void * v2; unsigned long long v3:32; };
struct __attribute__((packed)) aL_Vp_BFu33 { long long v1; void * v2; unsigned long long v3:33; };
struct __attribute__((packed)) aL_Vp_BFu7c { long long v1; void * v2; unsigned char v3:7; };
struct __attribute__((packed)) aL_Vp_BFu7i { long long v1; void * v2; unsigned int v3:7; };
struct __attribute__((packed)) aL_Vp_BFu7ll { long long v1; void * v2; unsigned long long v3:7; };
struct __attribute__((packed)) aL_Vp_BFu7s { long long v1; void * v2; unsigned short v3:7; };
struct __attribute__((packed)) aL_Vp_BFu8c { long long v1; void * v2; unsigned char v3:8; };
struct __attribute__((packed)) aL_Vp_BFu8i { long long v1; void * v2; unsigned int v3:8; };
struct __attribute__((packed)) aL_Vp_BFu8ll { long long v1; void * v2; unsigned long long v3:8; };
struct __attribute__((packed)) aL_Vp_BFu8s { long long v1; void * v2; unsigned short v3:8; };
struct __attribute__((packed)) aL_Vp_BFu9i { long long v1; void * v2; unsigned int v3:9; };
struct __attribute__((packed)) aL_Vp_BFu9ll { long long v1; void * v2; unsigned long long v3:9; };
struct __attribute__((packed)) aL_Vp_BFu9s { long long v1; void * v2; unsigned short v3:9; };
struct __attribute__((packed)) aL_Vp_C { long long v1; void * v2; char v3; };
struct __attribute__((packed)) aL_Vp_D { long long v1; void * v2; double v3; };
struct __attribute__((packed)) aL_Vp_F { long long v1; void * v2; float v3; };
struct __attribute__((packed)) aL_Vp_I { long long v1; void * v2; int v3; };
struct __attribute__((packed)) aL_Vp_Ip { long long v1; void * v2; int * v3; };
struct __attribute__((packed)) aL_Vp_L { long long v1; void * v2; long long v3; };
struct __attribute__((packed)) aL_Vp_S { long long v1; void * v2; short v3; };
struct __attribute__((packed)) aL_Vp_Uc { long long v1; void * v2; unsigned char v3; };
struct __attribute__((packed)) aL_Vp_Ui { long long v1; void * v2; unsigned int v3; };
struct __attribute__((packed)) aL_Vp_Ul { long long v1; void * v2; unsigned long long v3; };
struct __attribute__((packed)) aL_Vp_Us { long long v1; void * v2; unsigned short v3; };
struct __attribute__((packed)) aL_Vp_Vp { long long v1; void * v2; void * v3; };
struct __attribute__((packed)) aS { short v1; };
struct __attribute__((packed)) aS_BFu15i { short v1; unsigned int v2:15; };
struct __attribute__((packed)) aS_BFu15i_BFu15i { short v1; unsigned int v2:15; unsigned int v3:15; };
struct __attribute__((packed)) aS_BFu15i_BFu15ll { short v1; unsigned int v2:15; unsigned long long v3:15; };
struct __attribute__((packed)) aS_BFu15i_BFu15s { short v1; unsigned int v2:15; unsigned short v3:15; };
struct __attribute__((packed)) aS_BFu15i_BFu16i { short v1; unsigned int v2:15; unsigned int v3:16; };
struct __attribute__((packed)) aS_BFu15i_BFu16ll { short v1; unsigned int v2:15; unsigned long long v3:16; };
struct __attribute__((packed)) aS_BFu15i_BFu16s { short v1; unsigned int v2:15; unsigned short v3:16; };
struct __attribute__((packed)) aS_BFu15i_BFu17i { short v1; unsigned int v2:15; unsigned int v3:17; };
struct __attribute__((packed)) aS_BFu15i_BFu17ll { short v1; unsigned int v2:15; unsigned long long v3:17; };
struct __attribute__((packed)) aS_BFu15i_BFu1c { short v1; unsigned int v2:15; unsigned char v3:1; };
struct __attribute__((packed)) aS_BFu15i_BFu1i { short v1; unsigned int v2:15; unsigned int v3:1; };
struct __attribute__((packed)) aS_BFu15i_BFu1ll { short v1; unsigned int v2:15; unsigned long long v3:1; };
struct __attribute__((packed)) aS_BFu15i_BFu1s { short v1; unsigned int v2:15; unsigned short v3:1; };
struct __attribute__((packed)) aS_BFu15i_BFu31i { short v1; unsigned int v2:15; unsigned int v3:31; };
struct __attribute__((packed)) aS_BFu15i_BFu31ll { short v1; unsigned int v2:15; unsigned long long v3:31; };
struct __attribute__((packed)) aS_BFu15i_BFu32i { short v1; unsigned int v2:15; unsigned int v3:32; };
struct __attribute__((packed)) aS_BFu15i_BFu32ll { short v1; unsigned int v2:15; unsigned long long v3:32; };
struct __attribute__((packed)) aS_BFu15i_BFu33 { short v1; unsigned int v2:15; unsigned long long v3:33; };
struct __attribute__((packed)) aS_BFu15i_BFu7c { short v1; unsigned int v2:15; unsigned char v3:7; };
struct __attribute__((packed)) aS_BFu15i_BFu7i { short v1; unsigned int v2:15; unsigned int v3:7; };
struct __attribute__((packed)) aS_BFu15i_BFu7ll { short v1; unsigned int v2:15; unsigned long long v3:7; };
struct __attribute__((packed)) aS_BFu15i_BFu7s { short v1; unsigned int v2:15; unsigned short v3:7; };
struct __attribute__((packed)) aS_BFu15i_BFu8c { short v1; unsigned int v2:15; unsigned char v3:8; };
struct __attribute__((packed)) aS_BFu15i_BFu8i { short v1; unsigned int v2:15; unsigned int v3:8; };
struct __attribute__((packed)) aS_BFu15i_BFu8ll { short v1; unsigned int v2:15; unsigned long long v3:8; };
struct __attribute__((packed)) aS_BFu15i_BFu8s { short v1; unsigned int v2:15; unsigned short v3:8; };
struct __attribute__((packed)) aS_BFu15i_BFu9i { short v1; unsigned int v2:15; unsigned int v3:9; };
struct __attribute__((packed)) aS_BFu15i_BFu9ll { short v1; unsigned int v2:15; unsigned long long v3:9; };
struct __attribute__((packed)) aS_BFu15i_BFu9s { short v1; unsigned int v2:15; unsigned short v3:9; };
struct __attribute__((packed)) aS_BFu15i_C { short v1; unsigned int v2:15; char v3; };
struct __attribute__((packed)) aS_BFu15i_D { short v1; unsigned int v2:15; double v3; };
struct __attribute__((packed)) aS_BFu15i_F { short v1; unsigned int v2:15; float v3; };
struct __attribute__((packed)) aS_BFu15i_I { short v1; unsigned int v2:15; int v3; };
struct __attribute__((packed)) aS_BFu15i_Ip { short v1; unsigned int v2:15; int * v3; };
struct __attribute__((packed)) aS_BFu15i_L { short v1; unsigned int v2:15; long long v3; };
struct __attribute__((packed)) aS_BFu15i_S { short v1; unsigned int v2:15; short v3; };
struct __attribute__((packed)) aS_BFu15i_Uc { short v1; unsigned int v2:15; unsigned char v3; };
struct __attribute__((packed)) aS_BFu15i_Ui { short v1; unsigned int v2:15; unsigned int v3; };
struct __attribute__((packed)) aS_BFu15i_Ul { short v1; unsigned int v2:15; unsigned long long v3; };
struct __attribute__((packed)) aS_BFu15i_Us { short v1; unsigned int v2:15; unsigned short v3; };
struct __attribute__((packed)) aS_BFu15i_Vp { short v1; unsigned int v2:15; void * v3; };
struct __attribute__((packed)) aS_BFu15ll { short v1; unsigned long long v2:15; };
struct __attribute__((packed)) aS_BFu15ll_BFu15i { short v1; unsigned long long v2:15; unsigned int v3:15; };
struct __attribute__((packed)) aS_BFu15ll_BFu15ll { short v1; unsigned long long v2:15; unsigned long long v3:15; };
struct __attribute__((packed)) aS_BFu15ll_BFu15s { short v1; unsigned long long v2:15; unsigned short v3:15; };
struct __attribute__((packed)) aS_BFu15ll_BFu16i { short v1; unsigned long long v2:15; unsigned int v3:16; };
struct __attribute__((packed)) aS_BFu15ll_BFu16ll { short v1; unsigned long long v2:15; unsigned long long v3:16; };
struct __attribute__((packed)) aS_BFu15ll_BFu16s { short v1; unsigned long long v2:15; unsigned short v3:16; };
struct __attribute__((packed)) aS_BFu15ll_BFu17i { short v1; unsigned long long v2:15; unsigned int v3:17; };
struct __attribute__((packed)) aS_BFu15ll_BFu17ll { short v1; unsigned long long v2:15; unsigned long long v3:17; };
struct __attribute__((packed)) aS_BFu15ll_BFu1c { short v1; unsigned long long v2:15; unsigned char v3:1; };
struct __attribute__((packed)) aS_BFu15ll_BFu1i { short v1; unsigned long long v2:15; unsigned int v3:1; };
struct __attribute__((packed)) aS_BFu15ll_BFu1ll { short v1; unsigned long long v2:15; unsigned long long v3:1; };
struct __attribute__((packed)) aS_BFu15ll_BFu1s { short v1; unsigned long long v2:15; unsigned short v3:1; };
struct __attribute__((packed)) aS_BFu15ll_BFu31i { short v1; unsigned long long v2:15; unsigned int v3:31; };
struct __attribute__((packed)) aS_BFu15ll_BFu31ll { short v1; unsigned long long v2:15; unsigned long long v3:31; };
struct __attribute__((packed)) aS_BFu15ll_BFu32i { short v1; unsigned long long v2:15; unsigned int v3:32; };
struct __attribute__((packed)) aS_BFu15ll_BFu32ll { short v1; unsigned long long v2:15; unsigned long long v3:32; };
struct __attribute__((packed)) aS_BFu15ll_BFu33 { short v1; unsigned long long v2:15; unsigned long long v3:33; };
struct __attribute__((packed)) aS_BFu15ll_BFu7c { short v1; unsigned long long v2:15; unsigned char v3:7; };
struct __attribute__((packed)) aS_BFu15ll_BFu7i { short v1; unsigned long long v2:15; unsigned int v3:7; };
struct __attribute__((packed)) aS_BFu15ll_BFu7ll { short v1; unsigned long long v2:15; unsigned long long v3:7; };
struct __attribute__((packed)) aS_BFu15ll_BFu7s { short v1; unsigned long long v2:15; unsigned short v3:7; };
struct __attribute__((packed)) aS_BFu15ll_BFu8c { short v1; unsigned long long v2:15; unsigned char v3:8; };
struct __attribute__((packed)) aS_BFu15ll_BFu8i { short v1; unsigned long long v2:15; unsigned int v3:8; };
struct __attribute__((packed)) aS_BFu15ll_BFu8ll { short v1; unsigned long long v2:15; unsigned long long v3:8; };
struct __attribute__((packed)) aS_BFu15ll_BFu8s { short v1; unsigned long long v2:15; unsigned short v3:8; };
struct __attribute__((packed)) aS_BFu15ll_BFu9i { short v1; unsigned long long v2:15; unsigned int v3:9; };
struct __attribute__((packed)) aS_BFu15ll_BFu9ll { short v1; unsigned long long v2:15; unsigned long long v3:9; };
struct __attribute__((packed)) aS_BFu15ll_BFu9s { short v1; unsigned long long v2:15; unsigned short v3:9; };
struct __attribute__((packed)) aS_BFu15ll_C { short v1; unsigned long long v2:15; char v3; };
struct __attribute__((packed)) aS_BFu15ll_D { short v1; unsigned long long v2:15; double v3; };
struct __attribute__((packed)) aS_BFu15ll_F { short v1; unsigned long long v2:15; float v3; };
struct __attribute__((packed)) aS_BFu15ll_I { short v1; unsigned long long v2:15; int v3; };
struct __attribute__((packed)) aS_BFu15ll_Ip { short v1; unsigned long long v2:15; int * v3; };
struct __attribute__((packed)) aS_BFu15ll_L { short v1; unsigned long long v2:15; long long v3; };
struct __attribute__((packed)) aS_BFu15ll_S { short v1; unsigned long long v2:15; short v3; };
struct __attribute__((packed)) aS_BFu15ll_Uc { short v1; unsigned long long v2:15; unsigned char v3; };
struct __attribute__((packed)) aS_BFu15ll_Ui { short v1; unsigned long long v2:15; unsigned int v3; };
struct __attribute__((packed)) aS_BFu15ll_Ul { short v1; unsigned long long v2:15; unsigned long long v3; };
struct __attribute__((packed)) aS_BFu15ll_Us { short v1; unsigned long long v2:15; unsigned short v3; };
struct __attribute__((packed)) aS_BFu15ll_Vp { short v1; unsigned long long v2:15; void * v3; };
struct __attribute__((packed)) aS_BFu15s { short v1; unsigned short v2:15; };
struct __attribute__((packed)) aS_BFu15s_BFu15i { short v1; unsigned short v2:15; unsigned int v3:15; };
struct __attribute__((packed)) aS_BFu15s_BFu15ll { short v1; unsigned short v2:15; unsigned long long v3:15; };
struct __attribute__((packed)) aS_BFu15s_BFu15s { short v1; unsigned short v2:15; unsigned short v3:15; };
struct __attribute__((packed)) aS_BFu15s_BFu16i { short v1; unsigned short v2:15; unsigned int v3:16; };
struct __attribute__((packed)) aS_BFu15s_BFu16ll { short v1; unsigned short v2:15; unsigned long long v3:16; };
struct __attribute__((packed)) aS_BFu15s_BFu16s { short v1; unsigned short v2:15; unsigned short v3:16; };
struct __attribute__((packed)) aS_BFu15s_BFu17i { short v1; unsigned short v2:15; unsigned int v3:17; };
struct __attribute__((packed)) aS_BFu15s_BFu17ll { short v1; unsigned short v2:15; unsigned long long v3:17; };
struct __attribute__((packed)) aS_BFu15s_BFu1c { short v1; unsigned short v2:15; unsigned char v3:1; };
struct __attribute__((packed)) aS_BFu15s_BFu1i { short v1; unsigned short v2:15; unsigned int v3:1; };
struct __attribute__((packed)) aS_BFu15s_BFu1ll { short v1; unsigned short v2:15; unsigned long long v3:1; };
struct __attribute__((packed)) aS_BFu15s_BFu1s { short v1; unsigned short v2:15; unsigned short v3:1; };
struct __attribute__((packed)) aS_BFu15s_BFu31i { short v1; unsigned short v2:15; unsigned int v3:31; };
struct __attribute__((packed)) aS_BFu15s_BFu31ll { short v1; unsigned short v2:15; unsigned long long v3:31; };
struct __attribute__((packed)) aS_BFu15s_BFu32i { short v1; unsigned short v2:15; unsigned int v3:32; };
struct __attribute__((packed)) aS_BFu15s_BFu32ll { short v1; unsigned short v2:15; unsigned long long v3:32; };
struct __attribute__((packed)) aS_BFu15s_BFu33 { short v1; unsigned short v2:15; unsigned long long v3:33; };
struct __attribute__((packed)) aS_BFu15s_BFu7c { short v1; unsigned short v2:15; unsigned char v3:7; };
struct __attribute__((packed)) aS_BFu15s_BFu7i { short v1; unsigned short v2:15; unsigned int v3:7; };
struct __attribute__((packed)) aS_BFu15s_BFu7ll { short v1; unsigned short v2:15; unsigned long long v3:7; };
struct __attribute__((packed)) aS_BFu15s_BFu7s { short v1; unsigned short v2:15; unsigned short v3:7; };
struct __attribute__((packed)) aS_BFu15s_BFu8c { short v1; unsigned short v2:15; unsigned char v3:8; };
struct __attribute__((packed)) aS_BFu15s_BFu8i { short v1; unsigned short v2:15; unsigned int v3:8; };
struct __attribute__((packed)) aS_BFu15s_BFu8ll { short v1; unsigned short v2:15; unsigned long long v3:8; };
struct __attribute__((packed)) aS_BFu15s_BFu8s { short v1; unsigned short v2:15; unsigned short v3:8; };
struct __attribute__((packed)) aS_BFu15s_BFu9i { short v1; unsigned short v2:15; unsigned int v3:9; };
struct __attribute__((packed)) aS_BFu15s_BFu9ll { short v1; unsigned short v2:15; unsigned long long v3:9; };
struct __attribute__((packed)) aS_BFu15s_BFu9s { short v1; unsigned short v2:15; unsigned short v3:9; };
struct __attribute__((packed)) aS_BFu15s_C { short v1; unsigned short v2:15; char v3; };
struct __attribute__((packed)) aS_BFu15s_D { short v1; unsigned short v2:15; double v3; };
struct __attribute__((packed)) aS_BFu15s_F { short v1; unsigned short v2:15; float v3; };
struct __attribute__((packed)) aS_BFu15s_I { short v1; unsigned short v2:15; int v3; };
struct __attribute__((packed)) aS_BFu15s_Ip { short v1; unsigned short v2:15; int * v3; };
struct __attribute__((packed)) aS_BFu15s_L { short v1; unsigned short v2:15; long long v3; };
struct __attribute__((packed)) aS_BFu15s_S { short v1; unsigned short v2:15; short v3; };
struct __attribute__((packed)) aS_BFu15s_Uc { short v1; unsigned short v2:15; unsigned char v3; };
struct __attribute__((packed)) aS_BFu15s_Ui { short v1; unsigned short v2:15; unsigned int v3; };
struct __attribute__((packed)) aS_BFu15s_Ul { short v1; unsigned short v2:15; unsigned long long v3; };
struct __attribute__((packed)) aS_BFu15s_Us { short v1; unsigned short v2:15; unsigned short v3; };
struct __attribute__((packed)) aS_BFu15s_Vp { short v1; unsigned short v2:15; void * v3; };
struct __attribute__((packed)) aS_BFu16i { short v1; unsigned int v2:16; };
struct __attribute__((packed)) aS_BFu16i_BFu15i { short v1; unsigned int v2:16; unsigned int v3:15; };
struct __attribute__((packed)) aS_BFu16i_BFu15ll { short v1; unsigned int v2:16; unsigned long long v3:15; };
struct __attribute__((packed)) aS_BFu16i_BFu15s { short v1; unsigned int v2:16; unsigned short v3:15; };
struct __attribute__((packed)) aS_BFu16i_BFu16i { short v1; unsigned int v2:16; unsigned int v3:16; };
struct __attribute__((packed)) aS_BFu16i_BFu16ll { short v1; unsigned int v2:16; unsigned long long v3:16; };
struct __attribute__((packed)) aS_BFu16i_BFu16s { short v1; unsigned int v2:16; unsigned short v3:16; };
struct __attribute__((packed)) aS_BFu16i_BFu17i { short v1; unsigned int v2:16; unsigned int v3:17; };
struct __attribute__((packed)) aS_BFu16i_BFu17ll { short v1; unsigned int v2:16; unsigned long long v3:17; };
struct __attribute__((packed)) aS_BFu16i_BFu1c { short v1; unsigned int v2:16; unsigned char v3:1; };
struct __attribute__((packed)) aS_BFu16i_BFu1i { short v1; unsigned int v2:16; unsigned int v3:1; };
struct __attribute__((packed)) aS_BFu16i_BFu1ll { short v1; unsigned int v2:16; unsigned long long v3:1; };
struct __attribute__((packed)) aS_BFu16i_BFu1s { short v1; unsigned int v2:16; unsigned short v3:1; };
struct __attribute__((packed)) aS_BFu16i_BFu31i { short v1; unsigned int v2:16; unsigned int v3:31; };
struct __attribute__((packed)) aS_BFu16i_BFu31ll { short v1; unsigned int v2:16; unsigned long long v3:31; };
struct __attribute__((packed)) aS_BFu16i_BFu32i { short v1; unsigned int v2:16; unsigned int v3:32; };
struct __attribute__((packed)) aS_BFu16i_BFu32ll { short v1; unsigned int v2:16; unsigned long long v3:32; };
struct __attribute__((packed)) aS_BFu16i_BFu33 { short v1; unsigned int v2:16; unsigned long long v3:33; };
struct __attribute__((packed)) aS_BFu16i_BFu7c { short v1; unsigned int v2:16; unsigned char v3:7; };
struct __attribute__((packed)) aS_BFu16i_BFu7i { short v1; unsigned int v2:16; unsigned int v3:7; };
struct __attribute__((packed)) aS_BFu16i_BFu7ll { short v1; unsigned int v2:16; unsigned long long v3:7; };
struct __attribute__((packed)) aS_BFu16i_BFu7s { short v1; unsigned int v2:16; unsigned short v3:7; };
struct __attribute__((packed)) aS_BFu16i_BFu8c { short v1; unsigned int v2:16; unsigned char v3:8; };
struct __attribute__((packed)) aS_BFu16i_BFu8i { short v1; unsigned int v2:16; unsigned int v3:8; };
struct __attribute__((packed)) aS_BFu16i_BFu8ll { short v1; unsigned int v2:16; unsigned long long v3:8; };
struct __attribute__((packed)) aS_BFu16i_BFu8s { short v1; unsigned int v2:16; unsigned short v3:8; };
struct __attribute__((packed)) aS_BFu16i_BFu9i { short v1; unsigned int v2:16; unsigned int v3:9; };
struct __attribute__((packed)) aS_BFu16i_BFu9ll { short v1; unsigned int v2:16; unsigned long long v3:9; };
struct __attribute__((packed)) aS_BFu16i_BFu9s { short v1; unsigned int v2:16; unsigned short v3:9; };
struct __attribute__((packed)) aS_BFu16i_C { short v1; unsigned int v2:16; char v3; };
struct __attribute__((packed)) aS_BFu16i_D { short v1; unsigned int v2:16; double v3; };
struct __attribute__((packed)) aS_BFu16i_F { short v1; unsigned int v2:16; float v3; };
struct __attribute__((packed)) aS_BFu16i_I { short v1; unsigned int v2:16; int v3; };
struct __attribute__((packed)) aS_BFu16i_Ip { short v1; unsigned int v2:16; int * v3; };
struct __attribute__((packed)) aS_BFu16i_L { short v1; unsigned int v2:16; long long v3; };
struct __attribute__((packed)) aS_BFu16i_S { short v1; unsigned int v2:16; short v3; };
struct __attribute__((packed)) aS_BFu16i_Uc { short v1; unsigned int v2:16; unsigned char v3; };
struct __attribute__((packed)) aS_BFu16i_Ui { short v1; unsigned int v2:16; unsigned int v3; };
struct __attribute__((packed)) aS_BFu16i_Ul { short v1; unsigned int v2:16; unsigned long long v3; };
struct __attribute__((packed)) aS_BFu16i_Us { short v1; unsigned int v2:16; unsigned short v3; };
struct __attribute__((packed)) aS_BFu16i_Vp { short v1; unsigned int v2:16; void * v3; };
struct __attribute__((packed)) aS_BFu16ll { short v1; unsigned long long v2:16; };
struct __attribute__((packed)) aS_BFu16ll_BFu15i { short v1; unsigned long long v2:16; unsigned int v3:15; };
struct __attribute__((packed)) aS_BFu16ll_BFu15ll { short v1; unsigned long long v2:16; unsigned long long v3:15; };
struct __attribute__((packed)) aS_BFu16ll_BFu15s { short v1; unsigned long long v2:16; unsigned short v3:15; };
struct __attribute__((packed)) aS_BFu16ll_BFu16i { short v1; unsigned long long v2:16; unsigned int v3:16; };
struct __attribute__((packed)) aS_BFu16ll_BFu16ll { short v1; unsigned long long v2:16; unsigned long long v3:16; };
struct __attribute__((packed)) aS_BFu16ll_BFu16s { short v1; unsigned long long v2:16; unsigned short v3:16; };
struct __attribute__((packed)) aS_BFu16ll_BFu17i { short v1; unsigned long long v2:16; unsigned int v3:17; };
struct __attribute__((packed)) aS_BFu16ll_BFu17ll { short v1; unsigned long long v2:16; unsigned long long v3:17; };
struct __attribute__((packed)) aS_BFu16ll_BFu1c { short v1; unsigned long long v2:16; unsigned char v3:1; };
struct __attribute__((packed)) aS_BFu16ll_BFu1i { short v1; unsigned long long v2:16; unsigned int v3:1; };
struct __attribute__((packed)) aS_BFu16ll_BFu1ll { short v1; unsigned long long v2:16; unsigned long long v3:1; };
struct __attribute__((packed)) aS_BFu16ll_BFu1s { short v1; unsigned long long v2:16; unsigned short v3:1; };
struct __attribute__((packed)) aS_BFu16ll_BFu31i { short v1; unsigned long long v2:16; unsigned int v3:31; };
struct __attribute__((packed)) aS_BFu16ll_BFu31ll { short v1; unsigned long long v2:16; unsigned long long v3:31; };
struct __attribute__((packed)) aS_BFu16ll_BFu32i { short v1; unsigned long long v2:16; unsigned int v3:32; };
struct __attribute__((packed)) aS_BFu16ll_BFu32ll { short v1; unsigned long long v2:16; unsigned long long v3:32; };
struct __attribute__((packed)) aS_BFu16ll_BFu33 { short v1; unsigned long long v2:16; unsigned long long v3:33; };
struct __attribute__((packed)) aS_BFu16ll_BFu7c { short v1; unsigned long long v2:16; unsigned char v3:7; };
struct __attribute__((packed)) aS_BFu16ll_BFu7i { short v1; unsigned long long v2:16; unsigned int v3:7; };
struct __attribute__((packed)) aS_BFu16ll_BFu7ll { short v1; unsigned long long v2:16; unsigned long long v3:7; };
struct __attribute__((packed)) aS_BFu16ll_BFu7s { short v1; unsigned long long v2:16; unsigned short v3:7; };
struct __attribute__((packed)) aS_BFu16ll_BFu8c { short v1; unsigned long long v2:16; unsigned char v3:8; };
struct __attribute__((packed)) aS_BFu16ll_BFu8i { short v1; unsigned long long v2:16; unsigned int v3:8; };
struct __attribute__((packed)) aS_BFu16ll_BFu8ll { short v1; unsigned long long v2:16; unsigned long long v3:8; };
struct __attribute__((packed)) aS_BFu16ll_BFu8s { short v1; unsigned long long v2:16; unsigned short v3:8; };
struct __attribute__((packed)) aS_BFu16ll_BFu9i { short v1; unsigned long long v2:16; unsigned int v3:9; };
struct __attribute__((packed)) aS_BFu16ll_BFu9ll { short v1; unsigned long long v2:16; unsigned long long v3:9; };
struct __attribute__((packed)) aS_BFu16ll_BFu9s { short v1; unsigned long long v2:16; unsigned short v3:9; };
struct __attribute__((packed)) aS_BFu16ll_C { short v1; unsigned long long v2:16; char v3; };
struct __attribute__((packed)) aS_BFu16ll_D { short v1; unsigned long long v2:16; double v3; };
struct __attribute__((packed)) aS_BFu16ll_F { short v1; unsigned long long v2:16; float v3; };
struct __attribute__((packed)) aS_BFu16ll_I { short v1; unsigned long long v2:16; int v3; };
struct __attribute__((packed)) aS_BFu16ll_Ip { short v1; unsigned long long v2:16; int * v3; };
struct __attribute__((packed)) aS_BFu16ll_L { short v1; unsigned long long v2:16; long long v3; };
struct __attribute__((packed)) aS_BFu16ll_S { short v1; unsigned long long v2:16; short v3; };
struct __attribute__((packed)) aS_BFu16ll_Uc { short v1; unsigned long long v2:16; unsigned char v3; };
struct __attribute__((packed)) aS_BFu16ll_Ui { short v1; unsigned long long v2:16; unsigned int v3; };
struct __attribute__((packed)) aS_BFu16ll_Ul { short v1; unsigned long long v2:16; unsigned long long v3; };
struct __attribute__((packed)) aS_BFu16ll_Us { short v1; unsigned long long v2:16; unsigned short v3; };
struct __attribute__((packed)) aS_BFu16ll_Vp { short v1; unsigned long long v2:16; void * v3; };
struct __attribute__((packed)) aS_BFu16s { short v1; unsigned short v2:16; };
struct __attribute__((packed)) aS_BFu16s_BFu15i { short v1; unsigned short v2:16; unsigned int v3:15; };
struct __attribute__((packed)) aS_BFu16s_BFu15ll { short v1; unsigned short v2:16; unsigned long long v3:15; };
struct __attribute__((packed)) aS_BFu16s_BFu15s { short v1; unsigned short v2:16; unsigned short v3:15; };
struct __attribute__((packed)) aS_BFu16s_BFu16i { short v1; unsigned short v2:16; unsigned int v3:16; };
struct __attribute__((packed)) aS_BFu16s_BFu16ll { short v1; unsigned short v2:16; unsigned long long v3:16; };
struct __attribute__((packed)) aS_BFu16s_BFu16s { short v1; unsigned short v2:16; unsigned short v3:16; };
struct __attribute__((packed)) aS_BFu16s_BFu17i { short v1; unsigned short v2:16; unsigned int v3:17; };
struct __attribute__((packed)) aS_BFu16s_BFu17ll { short v1; unsigned short v2:16; unsigned long long v3:17; };
struct __attribute__((packed)) aS_BFu16s_BFu1c { short v1; unsigned short v2:16; unsigned char v3:1; };
struct __attribute__((packed)) aS_BFu16s_BFu1i { short v1; unsigned short v2:16; unsigned int v3:1; };
struct __attribute__((packed)) aS_BFu16s_BFu1ll { short v1; unsigned short v2:16; unsigned long long v3:1; };
struct __attribute__((packed)) aS_BFu16s_BFu1s { short v1; unsigned short v2:16; unsigned short v3:1; };
struct __attribute__((packed)) aS_BFu16s_BFu31i { short v1; unsigned short v2:16; unsigned int v3:31; };
struct __attribute__((packed)) aS_BFu16s_BFu31ll { short v1; unsigned short v2:16; unsigned long long v3:31; };
struct __attribute__((packed)) aS_BFu16s_BFu32i { short v1; unsigned short v2:16; unsigned int v3:32; };
struct __attribute__((packed)) aS_BFu16s_BFu32ll { short v1; unsigned short v2:16; unsigned long long v3:32; };
struct __attribute__((packed)) aS_BFu16s_BFu33 { short v1; unsigned short v2:16; unsigned long long v3:33; };
struct __attribute__((packed)) aS_BFu16s_BFu7c { short v1; unsigned short v2:16; unsigned char v3:7; };
struct __attribute__((packed)) aS_BFu16s_BFu7i { short v1; unsigned short v2:16; unsigned int v3:7; };
struct __attribute__((packed)) aS_BFu16s_BFu7ll { short v1; unsigned short v2:16; unsigned long long v3:7; };
struct __attribute__((packed)) aS_BFu16s_BFu7s { short v1; unsigned short v2:16; unsigned short v3:7; };
struct __attribute__((packed)) aS_BFu16s_BFu8c { short v1; unsigned short v2:16; unsigned char v3:8; };
struct __attribute__((packed)) aS_BFu16s_BFu8i { short v1; unsigned short v2:16; unsigned int v3:8; };
struct __attribute__((packed)) aS_BFu16s_BFu8ll { short v1; unsigned short v2:16; unsigned long long v3:8; };
struct __attribute__((packed)) aS_BFu16s_BFu8s { short v1; unsigned short v2:16; unsigned short v3:8; };
struct __attribute__((packed)) aS_BFu16s_BFu9i { short v1; unsigned short v2:16; unsigned int v3:9; };
struct __attribute__((packed)) aS_BFu16s_BFu9ll { short v1; unsigned short v2:16; unsigned long long v3:9; };
struct __attribute__((packed)) aS_BFu16s_BFu9s { short v1; unsigned short v2:16; unsigned short v3:9; };
struct __attribute__((packed)) aS_BFu16s_C { short v1; unsigned short v2:16; char v3; };
struct __attribute__((packed)) aS_BFu16s_D { short v1; unsigned short v2:16; double v3; };
struct __attribute__((packed)) aS_BFu16s_F { short v1; unsigned short v2:16; float v3; };
struct __attribute__((packed)) aS_BFu16s_I { short v1; unsigned short v2:16; int v3; };
struct __attribute__((packed)) aS_BFu16s_Ip { short v1; unsigned short v2:16; int * v3; };
struct __attribute__((packed)) aS_BFu16s_L { short v1; unsigned short v2:16; long long v3; };
struct __attribute__((packed)) aS_BFu16s_S { short v1; unsigned short v2:16; short v3; };
struct __attribute__((packed)) aS_BFu16s_Uc { short v1; unsigned short v2:16; unsigned char v3; };
struct __attribute__((packed)) aS_BFu16s_Ui { short v1; unsigned short v2:16; unsigned int v3; };
struct __attribute__((packed)) aS_BFu16s_Ul { short v1; unsigned short v2:16; unsigned long long v3; };
struct __attribute__((packed)) aS_BFu16s_Us { short v1; unsigned short v2:16; unsigned short v3; };
struct __attribute__((packed)) aS_BFu16s_Vp { short v1; unsigned short v2:16; void * v3; };
struct __attribute__((packed)) aS_BFu17i { short v1; unsigned int v2:17; };
struct __attribute__((packed)) aS_BFu17i_BFu15i { short v1; unsigned int v2:17; unsigned int v3:15; };
struct __attribute__((packed)) aS_BFu17i_BFu15ll { short v1; unsigned int v2:17; unsigned long long v3:15; };
struct __attribute__((packed)) aS_BFu17i_BFu15s { short v1; unsigned int v2:17; unsigned short v3:15; };
struct __attribute__((packed)) aS_BFu17i_BFu16i { short v1; unsigned int v2:17; unsigned int v3:16; };
struct __attribute__((packed)) aS_BFu17i_BFu16ll { short v1; unsigned int v2:17; unsigned long long v3:16; };
struct __attribute__((packed)) aS_BFu17i_BFu16s { short v1; unsigned int v2:17; unsigned short v3:16; };
struct __attribute__((packed)) aS_BFu17i_BFu17i { short v1; unsigned int v2:17; unsigned int v3:17; };
struct __attribute__((packed)) aS_BFu17i_BFu17ll { short v1; unsigned int v2:17; unsigned long long v3:17; };
struct __attribute__((packed)) aS_BFu17i_BFu1c { short v1; unsigned int v2:17; unsigned char v3:1; };
struct __attribute__((packed)) aS_BFu17i_BFu1i { short v1; unsigned int v2:17; unsigned int v3:1; };
struct __attribute__((packed)) aS_BFu17i_BFu1ll { short v1; unsigned int v2:17; unsigned long long v3:1; };
struct __attribute__((packed)) aS_BFu17i_BFu1s { short v1; unsigned int v2:17; unsigned short v3:1; };
struct __attribute__((packed)) aS_BFu17i_BFu31i { short v1; unsigned int v2:17; unsigned int v3:31; };
struct __attribute__((packed)) aS_BFu17i_BFu31ll { short v1; unsigned int v2:17; unsigned long long v3:31; };
struct __attribute__((packed)) aS_BFu17i_BFu32i { short v1; unsigned int v2:17; unsigned int v3:32; };
struct __attribute__((packed)) aS_BFu17i_BFu32ll { short v1; unsigned int v2:17; unsigned long long v3:32; };
struct __attribute__((packed)) aS_BFu17i_BFu33 { short v1; unsigned int v2:17; unsigned long long v3:33; };
struct __attribute__((packed)) aS_BFu17i_BFu7c { short v1; unsigned int v2:17; unsigned char v3:7; };
struct __attribute__((packed)) aS_BFu17i_BFu7i { short v1; unsigned int v2:17; unsigned int v3:7; };
struct __attribute__((packed)) aS_BFu17i_BFu7ll { short v1; unsigned int v2:17; unsigned long long v3:7; };
struct __attribute__((packed)) aS_BFu17i_BFu7s { short v1; unsigned int v2:17; unsigned short v3:7; };
struct __attribute__((packed)) aS_BFu17i_BFu8c { short v1; unsigned int v2:17; unsigned char v3:8; };
struct __attribute__((packed)) aS_BFu17i_BFu8i { short v1; unsigned int v2:17; unsigned int v3:8; };
struct __attribute__((packed)) aS_BFu17i_BFu8ll { short v1; unsigned int v2:17; unsigned long long v3:8; };
struct __attribute__((packed)) aS_BFu17i_BFu8s { short v1; unsigned int v2:17; unsigned short v3:8; };
struct __attribute__((packed)) aS_BFu17i_BFu9i { short v1; unsigned int v2:17; unsigned int v3:9; };
struct __attribute__((packed)) aS_BFu17i_BFu9ll { short v1; unsigned int v2:17; unsigned long long v3:9; };
struct __attribute__((packed)) aS_BFu17i_BFu9s { short v1; unsigned int v2:17; unsigned short v3:9; };
struct __attribute__((packed)) aS_BFu17i_C { short v1; unsigned int v2:17; char v3; };
struct __attribute__((packed)) aS_BFu17i_D { short v1; unsigned int v2:17; double v3; };
struct __attribute__((packed)) aS_BFu17i_F { short v1; unsigned int v2:17; float v3; };
struct __attribute__((packed)) aS_BFu17i_I { short v1; unsigned int v2:17; int v3; };
struct __attribute__((packed)) aS_BFu17i_Ip { short v1; unsigned int v2:17; int * v3; };
struct __attribute__((packed)) aS_BFu17i_L { short v1; unsigned int v2:17; long long v3; };
struct __attribute__((packed)) aS_BFu17i_S { short v1; unsigned int v2:17; short v3; };
struct __attribute__((packed)) aS_BFu17i_Uc { short v1; unsigned int v2:17; unsigned char v3; };
struct __attribute__((packed)) aS_BFu17i_Ui { short v1; unsigned int v2:17; unsigned int v3; };
struct __attribute__((packed)) aS_BFu17i_Ul { short v1; unsigned int v2:17; unsigned long long v3; };
struct __attribute__((packed)) aS_BFu17i_Us { short v1; unsigned int v2:17; unsigned short v3; };
struct __attribute__((packed)) aS_BFu17i_Vp { short v1; unsigned int v2:17; void * v3; };
struct __attribute__((packed)) aS_BFu17ll { short v1; unsigned long long v2:17; };
struct __attribute__((packed)) aS_BFu17ll_BFu15i { short v1; unsigned long long v2:17; unsigned int v3:15; };
struct __attribute__((packed)) aS_BFu17ll_BFu15ll { short v1; unsigned long long v2:17; unsigned long long v3:15; };
struct __attribute__((packed)) aS_BFu17ll_BFu15s { short v1; unsigned long long v2:17; unsigned short v3:15; };
struct __attribute__((packed)) aS_BFu17ll_BFu16i { short v1; unsigned long long v2:17; unsigned int v3:16; };
struct __attribute__((packed)) aS_BFu17ll_BFu16ll { short v1; unsigned long long v2:17; unsigned long long v3:16; };
struct __attribute__((packed)) aS_BFu17ll_BFu16s { short v1; unsigned long long v2:17; unsigned short v3:16; };
struct __attribute__((packed)) aS_BFu17ll_BFu17i { short v1; unsigned long long v2:17; unsigned int v3:17; };
struct __attribute__((packed)) aS_BFu17ll_BFu17ll { short v1; unsigned long long v2:17; unsigned long long v3:17; };
struct __attribute__((packed)) aS_BFu17ll_BFu1c { short v1; unsigned long long v2:17; unsigned char v3:1; };
struct __attribute__((packed)) aS_BFu17ll_BFu1i { short v1; unsigned long long v2:17; unsigned int v3:1; };
struct __attribute__((packed)) aS_BFu17ll_BFu1ll { short v1; unsigned long long v2:17; unsigned long long v3:1; };
struct __attribute__((packed)) aS_BFu17ll_BFu1s { short v1; unsigned long long v2:17; unsigned short v3:1; };
struct __attribute__((packed)) aS_BFu17ll_BFu31i { short v1; unsigned long long v2:17; unsigned int v3:31; };
struct __attribute__((packed)) aS_BFu17ll_BFu31ll { short v1; unsigned long long v2:17; unsigned long long v3:31; };
struct __attribute__((packed)) aS_BFu17ll_BFu32i { short v1; unsigned long long v2:17; unsigned int v3:32; };
struct __attribute__((packed)) aS_BFu17ll_BFu32ll { short v1; unsigned long long v2:17; unsigned long long v3:32; };
struct __attribute__((packed)) aS_BFu17ll_BFu33 { short v1; unsigned long long v2:17; unsigned long long v3:33; };
struct __attribute__((packed)) aS_BFu17ll_BFu7c { short v1; unsigned long long v2:17; unsigned char v3:7; };
struct __attribute__((packed)) aS_BFu17ll_BFu7i { short v1; unsigned long long v2:17; unsigned int v3:7; };
struct __attribute__((packed)) aS_BFu17ll_BFu7ll { short v1; unsigned long long v2:17; unsigned long long v3:7; };
struct __attribute__((packed)) aS_BFu17ll_BFu7s { short v1; unsigned long long v2:17; unsigned short v3:7; };
struct __attribute__((packed)) aS_BFu17ll_BFu8c { short v1; unsigned long long v2:17; unsigned char v3:8; };
struct __attribute__((packed)) aS_BFu17ll_BFu8i { short v1; unsigned long long v2:17; unsigned int v3:8; };
struct __attribute__((packed)) aS_BFu17ll_BFu8ll { short v1; unsigned long long v2:17; unsigned long long v3:8; };
struct __attribute__((packed)) aS_BFu17ll_BFu8s { short v1; unsigned long long v2:17; unsigned short v3:8; };
struct __attribute__((packed)) aS_BFu17ll_BFu9i { short v1; unsigned long long v2:17; unsigned int v3:9; };
struct __attribute__((packed)) aS_BFu17ll_BFu9ll { short v1; unsigned long long v2:17; unsigned long long v3:9; };
struct __attribute__((packed)) aS_BFu17ll_BFu9s { short v1; unsigned long long v2:17; unsigned short v3:9; };
struct __attribute__((packed)) aS_BFu17ll_C { short v1; unsigned long long v2:17; char v3; };
struct __attribute__((packed)) aS_BFu17ll_D { short v1; unsigned long long v2:17; double v3; };
struct __attribute__((packed)) aS_BFu17ll_F { short v1; unsigned long long v2:17; float v3; };
struct __attribute__((packed)) aS_BFu17ll_I { short v1; unsigned long long v2:17; int v3; };
struct __attribute__((packed)) aS_BFu17ll_Ip { short v1; unsigned long long v2:17; int * v3; };
struct __attribute__((packed)) aS_BFu17ll_L { short v1; unsigned long long v2:17; long long v3; };
struct __attribute__((packed)) aS_BFu17ll_S { short v1; unsigned long long v2:17; short v3; };
struct __attribute__((packed)) aS_BFu17ll_Uc { short v1; unsigned long long v2:17; unsigned char v3; };
struct __attribute__((packed)) aS_BFu17ll_Ui { short v1; unsigned long long v2:17; unsigned int v3; };
struct __attribute__((packed)) aS_BFu17ll_Ul { short v1; unsigned long long v2:17; unsigned long long v3; };
struct __attribute__((packed)) aS_BFu17ll_Us { short v1; unsigned long long v2:17; unsigned short v3; };
struct __attribute__((packed)) aS_BFu17ll_Vp { short v1; unsigned long long v2:17; void * v3; };
struct __attribute__((packed)) aS_BFu1c { short v1; unsigned char v2:1; };
struct __attribute__((packed)) aS_BFu1c_BFu15i { short v1; unsigned char v2:1; unsigned int v3:15; };
struct __attribute__((packed)) aS_BFu1c_BFu15ll { short v1; unsigned char v2:1; unsigned long long v3:15; };
struct __attribute__((packed)) aS_BFu1c_BFu15s { short v1; unsigned char v2:1; unsigned short v3:15; };
struct __attribute__((packed)) aS_BFu1c_BFu16i { short v1; unsigned char v2:1; unsigned int v3:16; };
struct __attribute__((packed)) aS_BFu1c_BFu16ll { short v1; unsigned char v2:1; unsigned long long v3:16; };
struct __attribute__((packed)) aS_BFu1c_BFu16s { short v1; unsigned char v2:1; unsigned short v3:16; };
struct __attribute__((packed)) aS_BFu1c_BFu17i { short v1; unsigned char v2:1; unsigned int v3:17; };
struct __attribute__((packed)) aS_BFu1c_BFu17ll { short v1; unsigned char v2:1; unsigned long long v3:17; };
struct __attribute__((packed)) aS_BFu1c_BFu1c { short v1; unsigned char v2:1; unsigned char v3:1; };
struct __attribute__((packed)) aS_BFu1c_BFu1i { short v1; unsigned char v2:1; unsigned int v3:1; };
struct __attribute__((packed)) aS_BFu1c_BFu1ll { short v1; unsigned char v2:1; unsigned long long v3:1; };
struct __attribute__((packed)) aS_BFu1c_BFu1s { short v1; unsigned char v2:1; unsigned short v3:1; };
struct __attribute__((packed)) aS_BFu1c_BFu31i { short v1; unsigned char v2:1; unsigned int v3:31; };
struct __attribute__((packed)) aS_BFu1c_BFu31ll { short v1; unsigned char v2:1; unsigned long long v3:31; };
struct __attribute__((packed)) aS_BFu1c_BFu32i { short v1; unsigned char v2:1; unsigned int v3:32; };
struct __attribute__((packed)) aS_BFu1c_BFu32ll { short v1; unsigned char v2:1; unsigned long long v3:32; };
struct __attribute__((packed)) aS_BFu1c_BFu33 { short v1; unsigned char v2:1; unsigned long long v3:33; };
struct __attribute__((packed)) aS_BFu1c_BFu7c { short v1; unsigned char v2:1; unsigned char v3:7; };
struct __attribute__((packed)) aS_BFu1c_BFu7i { short v1; unsigned char v2:1; unsigned int v3:7; };
struct __attribute__((packed)) aS_BFu1c_BFu7ll { short v1; unsigned char v2:1; unsigned long long v3:7; };
struct __attribute__((packed)) aS_BFu1c_BFu7s { short v1; unsigned char v2:1; unsigned short v3:7; };
struct __attribute__((packed)) aS_BFu1c_BFu8c { short v1; unsigned char v2:1; unsigned char v3:8; };
struct __attribute__((packed)) aS_BFu1c_BFu8i { short v1; unsigned char v2:1; unsigned int v3:8; };
struct __attribute__((packed)) aS_BFu1c_BFu8ll { short v1; unsigned char v2:1; unsigned long long v3:8; };
struct __attribute__((packed)) aS_BFu1c_BFu8s { short v1; unsigned char v2:1; unsigned short v3:8; };
struct __attribute__((packed)) aS_BFu1c_BFu9i { short v1; unsigned char v2:1; unsigned int v3:9; };
struct __attribute__((packed)) aS_BFu1c_BFu9ll { short v1; unsigned char v2:1; unsigned long long v3:9; };
struct __attribute__((packed)) aS_BFu1c_BFu9s { short v1; unsigned char v2:1; unsigned short v3:9; };
struct __attribute__((packed)) aS_BFu1c_C { short v1; unsigned char v2:1; char v3; };
struct __attribute__((packed)) aS_BFu1c_D { short v1; unsigned char v2:1; double v3; };
struct __attribute__((packed)) aS_BFu1c_F { short v1; unsigned char v2:1; float v3; };
struct __attribute__((packed)) aS_BFu1c_I { short v1; unsigned char v2:1; int v3; };
struct __attribute__((packed)) aS_BFu1c_Ip { short v1; unsigned char v2:1; int * v3; };
struct __attribute__((packed)) aS_BFu1c_L { short v1; unsigned char v2:1; long long v3; };
struct __attribute__((packed)) aS_BFu1c_S { short v1; unsigned char v2:1; short v3; };
struct __attribute__((packed)) aS_BFu1c_Uc { short v1; unsigned char v2:1; unsigned char v3; };
struct __attribute__((packed)) aS_BFu1c_Ui { short v1; unsigned char v2:1; unsigned int v3; };
struct __attribute__((packed)) aS_BFu1c_Ul { short v1; unsigned char v2:1; unsigned long long v3; };
struct __attribute__((packed)) aS_BFu1c_Us { short v1; unsigned char v2:1; unsigned short v3; };
struct __attribute__((packed)) aS_BFu1c_Vp { short v1; unsigned char v2:1; void * v3; };
struct __attribute__((packed)) aS_BFu1i { short v1; unsigned int v2:1; };
struct __attribute__((packed)) aS_BFu1i_BFu15i { short v1; unsigned int v2:1; unsigned int v3:15; };
struct __attribute__((packed)) aS_BFu1i_BFu15ll { short v1; unsigned int v2:1; unsigned long long v3:15; };
struct __attribute__((packed)) aS_BFu1i_BFu15s { short v1; unsigned int v2:1; unsigned short v3:15; };
struct __attribute__((packed)) aS_BFu1i_BFu16i { short v1; unsigned int v2:1; unsigned int v3:16; };
struct __attribute__((packed)) aS_BFu1i_BFu16ll { short v1; unsigned int v2:1; unsigned long long v3:16; };
struct __attribute__((packed)) aS_BFu1i_BFu16s { short v1; unsigned int v2:1; unsigned short v3:16; };
struct __attribute__((packed)) aS_BFu1i_BFu17i { short v1; unsigned int v2:1; unsigned int v3:17; };
struct __attribute__((packed)) aS_BFu1i_BFu17ll { short v1; unsigned int v2:1; unsigned long long v3:17; };
struct __attribute__((packed)) aS_BFu1i_BFu1c { short v1; unsigned int v2:1; unsigned char v3:1; };
struct __attribute__((packed)) aS_BFu1i_BFu1i { short v1; unsigned int v2:1; unsigned int v3:1; };
struct __attribute__((packed)) aS_BFu1i_BFu1ll { short v1; unsigned int v2:1; unsigned long long v3:1; };
struct __attribute__((packed)) aS_BFu1i_BFu1s { short v1; unsigned int v2:1; unsigned short v3:1; };
struct __attribute__((packed)) aS_BFu1i_BFu31i { short v1; unsigned int v2:1; unsigned int v3:31; };
struct __attribute__((packed)) aS_BFu1i_BFu31ll { short v1; unsigned int v2:1; unsigned long long v3:31; };
struct __attribute__((packed)) aS_BFu1i_BFu32i { short v1; unsigned int v2:1; unsigned int v3:32; };
struct __attribute__((packed)) aS_BFu1i_BFu32ll { short v1; unsigned int v2:1; unsigned long long v3:32; };
struct __attribute__((packed)) aS_BFu1i_BFu33 { short v1; unsigned int v2:1; unsigned long long v3:33; };
struct __attribute__((packed)) aS_BFu1i_BFu7c { short v1; unsigned int v2:1; unsigned char v3:7; };
struct __attribute__((packed)) aS_BFu1i_BFu7i { short v1; unsigned int v2:1; unsigned int v3:7; };
struct __attribute__((packed)) aS_BFu1i_BFu7ll { short v1; unsigned int v2:1; unsigned long long v3:7; };
struct __attribute__((packed)) aS_BFu1i_BFu7s { short v1; unsigned int v2:1; unsigned short v3:7; };
struct __attribute__((packed)) aS_BFu1i_BFu8c { short v1; unsigned int v2:1; unsigned char v3:8; };
struct __attribute__((packed)) aS_BFu1i_BFu8i { short v1; unsigned int v2:1; unsigned int v3:8; };
struct __attribute__((packed)) aS_BFu1i_BFu8ll { short v1; unsigned int v2:1; unsigned long long v3:8; };
struct __attribute__((packed)) aS_BFu1i_BFu8s { short v1; unsigned int v2:1; unsigned short v3:8; };
struct __attribute__((packed)) aS_BFu1i_BFu9i { short v1; unsigned int v2:1; unsigned int v3:9; };
struct __attribute__((packed)) aS_BFu1i_BFu9ll { short v1; unsigned int v2:1; unsigned long long v3:9; };
struct __attribute__((packed)) aS_BFu1i_BFu9s { short v1; unsigned int v2:1; unsigned short v3:9; };
struct __attribute__((packed)) aS_BFu1i_C { short v1; unsigned int v2:1; char v3; };
struct __attribute__((packed)) aS_BFu1i_D { short v1; unsigned int v2:1; double v3; };
struct __attribute__((packed)) aS_BFu1i_F { short v1; unsigned int v2:1; float v3; };
struct __attribute__((packed)) aS_BFu1i_I { short v1; unsigned int v2:1; int v3; };
struct __attribute__((packed)) aS_BFu1i_Ip { short v1; unsigned int v2:1; int * v3; };
struct __attribute__((packed)) aS_BFu1i_L { short v1; unsigned int v2:1; long long v3; };
struct __attribute__((packed)) aS_BFu1i_S { short v1; unsigned int v2:1; short v3; };
struct __attribute__((packed)) aS_BFu1i_Uc { short v1; unsigned int v2:1; unsigned char v3; };
struct __attribute__((packed)) aS_BFu1i_Ui { short v1; unsigned int v2:1; unsigned int v3; };
struct __attribute__((packed)) aS_BFu1i_Ul { short v1; unsigned int v2:1; unsigned long long v3; };
struct __attribute__((packed)) aS_BFu1i_Us { short v1; unsigned int v2:1; unsigned short v3; };
struct __attribute__((packed)) aS_BFu1i_Vp { short v1; unsigned int v2:1; void * v3; };
struct __attribute__((packed)) aS_BFu1ll { short v1; unsigned long long v2:1; };
struct __attribute__((packed)) aS_BFu1ll_BFu15i { short v1; unsigned long long v2:1; unsigned int v3:15; };
struct __attribute__((packed)) aS_BFu1ll_BFu15ll { short v1; unsigned long long v2:1; unsigned long long v3:15; };
struct __attribute__((packed)) aS_BFu1ll_BFu15s { short v1; unsigned long long v2:1; unsigned short v3:15; };
struct __attribute__((packed)) aS_BFu1ll_BFu16i { short v1; unsigned long long v2:1; unsigned int v3:16; };
struct __attribute__((packed)) aS_BFu1ll_BFu16ll { short v1; unsigned long long v2:1; unsigned long long v3:16; };
struct __attribute__((packed)) aS_BFu1ll_BFu16s { short v1; unsigned long long v2:1; unsigned short v3:16; };
struct __attribute__((packed)) aS_BFu1ll_BFu17i { short v1; unsigned long long v2:1; unsigned int v3:17; };
struct __attribute__((packed)) aS_BFu1ll_BFu17ll { short v1; unsigned long long v2:1; unsigned long long v3:17; };
struct __attribute__((packed)) aS_BFu1ll_BFu1c { short v1; unsigned long long v2:1; unsigned char v3:1; };
struct __attribute__((packed)) aS_BFu1ll_BFu1i { short v1; unsigned long long v2:1; unsigned int v3:1; };
struct __attribute__((packed)) aS_BFu1ll_BFu1ll { short v1; unsigned long long v2:1; unsigned long long v3:1; };
struct __attribute__((packed)) aS_BFu1ll_BFu1s { short v1; unsigned long long v2:1; unsigned short v3:1; };
struct __attribute__((packed)) aS_BFu1ll_BFu31i { short v1; unsigned long long v2:1; unsigned int v3:31; };
struct __attribute__((packed)) aS_BFu1ll_BFu31ll { short v1; unsigned long long v2:1; unsigned long long v3:31; };
struct __attribute__((packed)) aS_BFu1ll_BFu32i { short v1; unsigned long long v2:1; unsigned int v3:32; };
struct __attribute__((packed)) aS_BFu1ll_BFu32ll { short v1; unsigned long long v2:1; unsigned long long v3:32; };
struct __attribute__((packed)) aS_BFu1ll_BFu33 { short v1; unsigned long long v2:1; unsigned long long v3:33; };
struct __attribute__((packed)) aS_BFu1ll_BFu7c { short v1; unsigned long long v2:1; unsigned char v3:7; };
struct __attribute__((packed)) aS_BFu1ll_BFu7i { short v1; unsigned long long v2:1; unsigned int v3:7; };
struct __attribute__((packed)) aS_BFu1ll_BFu7ll { short v1; unsigned long long v2:1; unsigned long long v3:7; };
struct __attribute__((packed)) aS_BFu1ll_BFu7s { short v1; unsigned long long v2:1; unsigned short v3:7; };
struct __attribute__((packed)) aS_BFu1ll_BFu8c { short v1; unsigned long long v2:1; unsigned char v3:8; };
struct __attribute__((packed)) aS_BFu1ll_BFu8i { short v1; unsigned long long v2:1; unsigned int v3:8; };
struct __attribute__((packed)) aS_BFu1ll_BFu8ll { short v1; unsigned long long v2:1; unsigned long long v3:8; };
struct __attribute__((packed)) aS_BFu1ll_BFu8s { short v1; unsigned long long v2:1; unsigned short v3:8; };
struct __attribute__((packed)) aS_BFu1ll_BFu9i { short v1; unsigned long long v2:1; unsigned int v3:9; };
struct __attribute__((packed)) aS_BFu1ll_BFu9ll { short v1; unsigned long long v2:1; unsigned long long v3:9; };
struct __attribute__((packed)) aS_BFu1ll_BFu9s { short v1; unsigned long long v2:1; unsigned short v3:9; };
struct __attribute__((packed)) aS_BFu1ll_C { short v1; unsigned long long v2:1; char v3; };
struct __attribute__((packed)) aS_BFu1ll_D { short v1; unsigned long long v2:1; double v3; };
struct __attribute__((packed)) aS_BFu1ll_F { short v1; unsigned long long v2:1; float v3; };
struct __attribute__((packed)) aS_BFu1ll_I { short v1; unsigned long long v2:1; int v3; };
struct __attribute__((packed)) aS_BFu1ll_Ip { short v1; unsigned long long v2:1; int * v3; };
struct __attribute__((packed)) aS_BFu1ll_L { short v1; unsigned long long v2:1; long long v3; };
struct __attribute__((packed)) aS_BFu1ll_S { short v1; unsigned long long v2:1; short v3; };
struct __attribute__((packed)) aS_BFu1ll_Uc { short v1; unsigned long long v2:1; unsigned char v3; };
struct __attribute__((packed)) aS_BFu1ll_Ui { short v1; unsigned long long v2:1; unsigned int v3; };
struct __attribute__((packed)) aS_BFu1ll_Ul { short v1; unsigned long long v2:1; unsigned long long v3; };
struct __attribute__((packed)) aS_BFu1ll_Us { short v1; unsigned long long v2:1; unsigned short v3; };
struct __attribute__((packed)) aS_BFu1ll_Vp { short v1; unsigned long long v2:1; void * v3; };
struct __attribute__((packed)) aS_BFu1s { short v1; unsigned short v2:1; };
struct __attribute__((packed)) aS_BFu1s_BFu15i { short v1; unsigned short v2:1; unsigned int v3:15; };
struct __attribute__((packed)) aS_BFu1s_BFu15ll { short v1; unsigned short v2:1; unsigned long long v3:15; };
struct __attribute__((packed)) aS_BFu1s_BFu15s { short v1; unsigned short v2:1; unsigned short v3:15; };
struct __attribute__((packed)) aS_BFu1s_BFu16i { short v1; unsigned short v2:1; unsigned int v3:16; };
struct __attribute__((packed)) aS_BFu1s_BFu16ll { short v1; unsigned short v2:1; unsigned long long v3:16; };
struct __attribute__((packed)) aS_BFu1s_BFu16s { short v1; unsigned short v2:1; unsigned short v3:16; };
struct __attribute__((packed)) aS_BFu1s_BFu17i { short v1; unsigned short v2:1; unsigned int v3:17; };
struct __attribute__((packed)) aS_BFu1s_BFu17ll { short v1; unsigned short v2:1; unsigned long long v3:17; };
struct __attribute__((packed)) aS_BFu1s_BFu1c { short v1; unsigned short v2:1; unsigned char v3:1; };
struct __attribute__((packed)) aS_BFu1s_BFu1i { short v1; unsigned short v2:1; unsigned int v3:1; };
struct __attribute__((packed)) aS_BFu1s_BFu1ll { short v1; unsigned short v2:1; unsigned long long v3:1; };
struct __attribute__((packed)) aS_BFu1s_BFu1s { short v1; unsigned short v2:1; unsigned short v3:1; };
struct __attribute__((packed)) aS_BFu1s_BFu31i { short v1; unsigned short v2:1; unsigned int v3:31; };
struct __attribute__((packed)) aS_BFu1s_BFu31ll { short v1; unsigned short v2:1; unsigned long long v3:31; };
struct __attribute__((packed)) aS_BFu1s_BFu32i { short v1; unsigned short v2:1; unsigned int v3:32; };
struct __attribute__((packed)) aS_BFu1s_BFu32ll { short v1; unsigned short v2:1; unsigned long long v3:32; };
struct __attribute__((packed)) aS_BFu1s_BFu33 { short v1; unsigned short v2:1; unsigned long long v3:33; };
struct __attribute__((packed)) aS_BFu1s_BFu7c { short v1; unsigned short v2:1; unsigned char v3:7; };
struct __attribute__((packed)) aS_BFu1s_BFu7i { short v1; unsigned short v2:1; unsigned int v3:7; };
struct __attribute__((packed)) aS_BFu1s_BFu7ll { short v1; unsigned short v2:1; unsigned long long v3:7; };
struct __attribute__((packed)) aS_BFu1s_BFu7s { short v1; unsigned short v2:1; unsigned short v3:7; };
struct __attribute__((packed)) aS_BFu1s_BFu8c { short v1; unsigned short v2:1; unsigned char v3:8; };
struct __attribute__((packed)) aS_BFu1s_BFu8i { short v1; unsigned short v2:1; unsigned int v3:8; };
struct __attribute__((packed)) aS_BFu1s_BFu8ll { short v1; unsigned short v2:1; unsigned long long v3:8; };
struct __attribute__((packed)) aS_BFu1s_BFu8s { short v1; unsigned short v2:1; unsigned short v3:8; };
struct __attribute__((packed)) aS_BFu1s_BFu9i { short v1; unsigned short v2:1; unsigned int v3:9; };
struct __attribute__((packed)) aS_BFu1s_BFu9ll { short v1; unsigned short v2:1; unsigned long long v3:9; };
struct __attribute__((packed)) aS_BFu1s_BFu9s { short v1; unsigned short v2:1; unsigned short v3:9; };
struct __attribute__((packed)) aS_BFu1s_C { short v1; unsigned short v2:1; char v3; };
struct __attribute__((packed)) aS_BFu1s_D { short v1; unsigned short v2:1; double v3; };
struct __attribute__((packed)) aS_BFu1s_F { short v1; unsigned short v2:1; float v3; };
struct __attribute__((packed)) aS_BFu1s_I { short v1; unsigned short v2:1; int v3; };
struct __attribute__((packed)) aS_BFu1s_Ip { short v1; unsigned short v2:1; int * v3; };
struct __attribute__((packed)) aS_BFu1s_L { short v1; unsigned short v2:1; long long v3; };
struct __attribute__((packed)) aS_BFu1s_S { short v1; unsigned short v2:1; short v3; };
struct __attribute__((packed)) aS_BFu1s_Uc { short v1; unsigned short v2:1; unsigned char v3; };
struct __attribute__((packed)) aS_BFu1s_Ui { short v1; unsigned short v2:1; unsigned int v3; };
struct __attribute__((packed)) aS_BFu1s_Ul { short v1; unsigned short v2:1; unsigned long long v3; };
struct __attribute__((packed)) aS_BFu1s_Us { short v1; unsigned short v2:1; unsigned short v3; };
struct __attribute__((packed)) aS_BFu1s_Vp { short v1; unsigned short v2:1; void * v3; };
struct __attribute__((packed)) aS_BFu31i { short v1; unsigned int v2:31; };
struct __attribute__((packed)) aS_BFu31i_BFu15i { short v1; unsigned int v2:31; unsigned int v3:15; };
struct __attribute__((packed)) aS_BFu31i_BFu15ll { short v1; unsigned int v2:31; unsigned long long v3:15; };
struct __attribute__((packed)) aS_BFu31i_BFu15s { short v1; unsigned int v2:31; unsigned short v3:15; };
struct __attribute__((packed)) aS_BFu31i_BFu16i { short v1; unsigned int v2:31; unsigned int v3:16; };
struct __attribute__((packed)) aS_BFu31i_BFu16ll { short v1; unsigned int v2:31; unsigned long long v3:16; };
struct __attribute__((packed)) aS_BFu31i_BFu16s { short v1; unsigned int v2:31; unsigned short v3:16; };
struct __attribute__((packed)) aS_BFu31i_BFu17i { short v1; unsigned int v2:31; unsigned int v3:17; };
struct __attribute__((packed)) aS_BFu31i_BFu17ll { short v1; unsigned int v2:31; unsigned long long v3:17; };
struct __attribute__((packed)) aS_BFu31i_BFu1c { short v1; unsigned int v2:31; unsigned char v3:1; };
struct __attribute__((packed)) aS_BFu31i_BFu1i { short v1; unsigned int v2:31; unsigned int v3:1; };
struct __attribute__((packed)) aS_BFu31i_BFu1ll { short v1; unsigned int v2:31; unsigned long long v3:1; };
struct __attribute__((packed)) aS_BFu31i_BFu1s { short v1; unsigned int v2:31; unsigned short v3:1; };
struct __attribute__((packed)) aS_BFu31i_BFu31i { short v1; unsigned int v2:31; unsigned int v3:31; };
struct __attribute__((packed)) aS_BFu31i_BFu31ll { short v1; unsigned int v2:31; unsigned long long v3:31; };
struct __attribute__((packed)) aS_BFu31i_BFu32i { short v1; unsigned int v2:31; unsigned int v3:32; };
struct __attribute__((packed)) aS_BFu31i_BFu32ll { short v1; unsigned int v2:31; unsigned long long v3:32; };
struct __attribute__((packed)) aS_BFu31i_BFu33 { short v1; unsigned int v2:31; unsigned long long v3:33; };
struct __attribute__((packed)) aS_BFu31i_BFu7c { short v1; unsigned int v2:31; unsigned char v3:7; };
struct __attribute__((packed)) aS_BFu31i_BFu7i { short v1; unsigned int v2:31; unsigned int v3:7; };
struct __attribute__((packed)) aS_BFu31i_BFu7ll { short v1; unsigned int v2:31; unsigned long long v3:7; };
struct __attribute__((packed)) aS_BFu31i_BFu7s { short v1; unsigned int v2:31; unsigned short v3:7; };
struct __attribute__((packed)) aS_BFu31i_BFu8c { short v1; unsigned int v2:31; unsigned char v3:8; };
struct __attribute__((packed)) aS_BFu31i_BFu8i { short v1; unsigned int v2:31; unsigned int v3:8; };
struct __attribute__((packed)) aS_BFu31i_BFu8ll { short v1; unsigned int v2:31; unsigned long long v3:8; };
struct __attribute__((packed)) aS_BFu31i_BFu8s { short v1; unsigned int v2:31; unsigned short v3:8; };
struct __attribute__((packed)) aS_BFu31i_BFu9i { short v1; unsigned int v2:31; unsigned int v3:9; };
struct __attribute__((packed)) aS_BFu31i_BFu9ll { short v1; unsigned int v2:31; unsigned long long v3:9; };
struct __attribute__((packed)) aS_BFu31i_BFu9s { short v1; unsigned int v2:31; unsigned short v3:9; };
struct __attribute__((packed)) aS_BFu31i_C { short v1; unsigned int v2:31; char v3; };
struct __attribute__((packed)) aS_BFu31i_D { short v1; unsigned int v2:31; double v3; };
struct __attribute__((packed)) aS_BFu31i_F { short v1; unsigned int v2:31; float v3; };
struct __attribute__((packed)) aS_BFu31i_I { short v1; unsigned int v2:31; int v3; };
struct __attribute__((packed)) aS_BFu31i_Ip { short v1; unsigned int v2:31; int * v3; };
struct __attribute__((packed)) aS_BFu31i_L { short v1; unsigned int v2:31; long long v3; };
struct __attribute__((packed)) aS_BFu31i_S { short v1; unsigned int v2:31; short v3; };
struct __attribute__((packed)) aS_BFu31i_Uc { short v1; unsigned int v2:31; unsigned char v3; };
struct __attribute__((packed)) aS_BFu31i_Ui { short v1; unsigned int v2:31; unsigned int v3; };
struct __attribute__((packed)) aS_BFu31i_Ul { short v1; unsigned int v2:31; unsigned long long v3; };
struct __attribute__((packed)) aS_BFu31i_Us { short v1; unsigned int v2:31; unsigned short v3; };
struct __attribute__((packed)) aS_BFu31i_Vp { short v1; unsigned int v2:31; void * v3; };
struct __attribute__((packed)) aS_BFu31ll { short v1; unsigned long long v2:31; };
struct __attribute__((packed)) aS_BFu31ll_BFu15i { short v1; unsigned long long v2:31; unsigned int v3:15; };
struct __attribute__((packed)) aS_BFu31ll_BFu15ll { short v1; unsigned long long v2:31; unsigned long long v3:15; };
struct __attribute__((packed)) aS_BFu31ll_BFu15s { short v1; unsigned long long v2:31; unsigned short v3:15; };
struct __attribute__((packed)) aS_BFu31ll_BFu16i { short v1; unsigned long long v2:31; unsigned int v3:16; };
struct __attribute__((packed)) aS_BFu31ll_BFu16ll { short v1; unsigned long long v2:31; unsigned long long v3:16; };
struct __attribute__((packed)) aS_BFu31ll_BFu16s { short v1; unsigned long long v2:31; unsigned short v3:16; };
struct __attribute__((packed)) aS_BFu31ll_BFu17i { short v1; unsigned long long v2:31; unsigned int v3:17; };
struct __attribute__((packed)) aS_BFu31ll_BFu17ll { short v1; unsigned long long v2:31; unsigned long long v3:17; };
struct __attribute__((packed)) aS_BFu31ll_BFu1c { short v1; unsigned long long v2:31; unsigned char v3:1; };
struct __attribute__((packed)) aS_BFu31ll_BFu1i { short v1; unsigned long long v2:31; unsigned int v3:1; };
struct __attribute__((packed)) aS_BFu31ll_BFu1ll { short v1; unsigned long long v2:31; unsigned long long v3:1; };
struct __attribute__((packed)) aS_BFu31ll_BFu1s { short v1; unsigned long long v2:31; unsigned short v3:1; };
struct __attribute__((packed)) aS_BFu31ll_BFu31i { short v1; unsigned long long v2:31; unsigned int v3:31; };
struct __attribute__((packed)) aS_BFu31ll_BFu31ll { short v1; unsigned long long v2:31; unsigned long long v3:31; };
struct __attribute__((packed)) aS_BFu31ll_BFu32i { short v1; unsigned long long v2:31; unsigned int v3:32; };
struct __attribute__((packed)) aS_BFu31ll_BFu32ll { short v1; unsigned long long v2:31; unsigned long long v3:32; };
struct __attribute__((packed)) aS_BFu31ll_BFu33 { short v1; unsigned long long v2:31; unsigned long long v3:33; };
struct __attribute__((packed)) aS_BFu31ll_BFu7c { short v1; unsigned long long v2:31; unsigned char v3:7; };
struct __attribute__((packed)) aS_BFu31ll_BFu7i { short v1; unsigned long long v2:31; unsigned int v3:7; };
struct __attribute__((packed)) aS_BFu31ll_BFu7ll { short v1; unsigned long long v2:31; unsigned long long v3:7; };
struct __attribute__((packed)) aS_BFu31ll_BFu7s { short v1; unsigned long long v2:31; unsigned short v3:7; };
struct __attribute__((packed)) aS_BFu31ll_BFu8c { short v1; unsigned long long v2:31; unsigned char v3:8; };
struct __attribute__((packed)) aS_BFu31ll_BFu8i { short v1; unsigned long long v2:31; unsigned int v3:8; };
struct __attribute__((packed)) aS_BFu31ll_BFu8ll { short v1; unsigned long long v2:31; unsigned long long v3:8; };
struct __attribute__((packed)) aS_BFu31ll_BFu8s { short v1; unsigned long long v2:31; unsigned short v3:8; };
struct __attribute__((packed)) aS_BFu31ll_BFu9i { short v1; unsigned long long v2:31; unsigned int v3:9; };
struct __attribute__((packed)) aS_BFu31ll_BFu9ll { short v1; unsigned long long v2:31; unsigned long long v3:9; };
struct __attribute__((packed)) aS_BFu31ll_BFu9s { short v1; unsigned long long v2:31; unsigned short v3:9; };
struct __attribute__((packed)) aS_BFu31ll_C { short v1; unsigned long long v2:31; char v3; };
struct __attribute__((packed)) aS_BFu31ll_D { short v1; unsigned long long v2:31; double v3; };
struct __attribute__((packed)) aS_BFu31ll_F { short v1; unsigned long long v2:31; float v3; };
struct __attribute__((packed)) aS_BFu31ll_I { short v1; unsigned long long v2:31; int v3; };
struct __attribute__((packed)) aS_BFu31ll_Ip { short v1; unsigned long long v2:31; int * v3; };
struct __attribute__((packed)) aS_BFu31ll_L { short v1; unsigned long long v2:31; long long v3; };
struct __attribute__((packed)) aS_BFu31ll_S { short v1; unsigned long long v2:31; short v3; };
struct __attribute__((packed)) aS_BFu31ll_Uc { short v1; unsigned long long v2:31; unsigned char v3; };
struct __attribute__((packed)) aS_BFu31ll_Ui { short v1; unsigned long long v2:31; unsigned int v3; };
struct __attribute__((packed)) aS_BFu31ll_Ul { short v1; unsigned long long v2:31; unsigned long long v3; };
struct __attribute__((packed)) aS_BFu31ll_Us { short v1; unsigned long long v2:31; unsigned short v3; };
struct __attribute__((packed)) aS_BFu31ll_Vp { short v1; unsigned long long v2:31; void * v3; };
struct __attribute__((packed)) aS_BFu32i { short v1; unsigned int v2:32; };
struct __attribute__((packed)) aS_BFu32i_BFu15i { short v1; unsigned int v2:32; unsigned int v3:15; };
struct __attribute__((packed)) aS_BFu32i_BFu15ll { short v1; unsigned int v2:32; unsigned long long v3:15; };
struct __attribute__((packed)) aS_BFu32i_BFu15s { short v1; unsigned int v2:32; unsigned short v3:15; };
struct __attribute__((packed)) aS_BFu32i_BFu16i { short v1; unsigned int v2:32; unsigned int v3:16; };
struct __attribute__((packed)) aS_BFu32i_BFu16ll { short v1; unsigned int v2:32; unsigned long long v3:16; };
struct __attribute__((packed)) aS_BFu32i_BFu16s { short v1; unsigned int v2:32; unsigned short v3:16; };
struct __attribute__((packed)) aS_BFu32i_BFu17i { short v1; unsigned int v2:32; unsigned int v3:17; };
struct __attribute__((packed)) aS_BFu32i_BFu17ll { short v1; unsigned int v2:32; unsigned long long v3:17; };
struct __attribute__((packed)) aS_BFu32i_BFu1c { short v1; unsigned int v2:32; unsigned char v3:1; };
struct __attribute__((packed)) aS_BFu32i_BFu1i { short v1; unsigned int v2:32; unsigned int v3:1; };
struct __attribute__((packed)) aS_BFu32i_BFu1ll { short v1; unsigned int v2:32; unsigned long long v3:1; };
struct __attribute__((packed)) aS_BFu32i_BFu1s { short v1; unsigned int v2:32; unsigned short v3:1; };
struct __attribute__((packed)) aS_BFu32i_BFu31i { short v1; unsigned int v2:32; unsigned int v3:31; };
struct __attribute__((packed)) aS_BFu32i_BFu31ll { short v1; unsigned int v2:32; unsigned long long v3:31; };
struct __attribute__((packed)) aS_BFu32i_BFu32i { short v1; unsigned int v2:32; unsigned int v3:32; };
struct __attribute__((packed)) aS_BFu32i_BFu32ll { short v1; unsigned int v2:32; unsigned long long v3:32; };
struct __attribute__((packed)) aS_BFu32i_BFu33 { short v1; unsigned int v2:32; unsigned long long v3:33; };
struct __attribute__((packed)) aS_BFu32i_BFu7c { short v1; unsigned int v2:32; unsigned char v3:7; };
struct __attribute__((packed)) aS_BFu32i_BFu7i { short v1; unsigned int v2:32; unsigned int v3:7; };
struct __attribute__((packed)) aS_BFu32i_BFu7ll { short v1; unsigned int v2:32; unsigned long long v3:7; };
struct __attribute__((packed)) aS_BFu32i_BFu7s { short v1; unsigned int v2:32; unsigned short v3:7; };
struct __attribute__((packed)) aS_BFu32i_BFu8c { short v1; unsigned int v2:32; unsigned char v3:8; };
struct __attribute__((packed)) aS_BFu32i_BFu8i { short v1; unsigned int v2:32; unsigned int v3:8; };
struct __attribute__((packed)) aS_BFu32i_BFu8ll { short v1; unsigned int v2:32; unsigned long long v3:8; };
struct __attribute__((packed)) aS_BFu32i_BFu8s { short v1; unsigned int v2:32; unsigned short v3:8; };
struct __attribute__((packed)) aS_BFu32i_BFu9i { short v1; unsigned int v2:32; unsigned int v3:9; };
struct __attribute__((packed)) aS_BFu32i_BFu9ll { short v1; unsigned int v2:32; unsigned long long v3:9; };
struct __attribute__((packed)) aS_BFu32i_BFu9s { short v1; unsigned int v2:32; unsigned short v3:9; };
struct __attribute__((packed)) aS_BFu32i_C { short v1; unsigned int v2:32; char v3; };
struct __attribute__((packed)) aS_BFu32i_D { short v1; unsigned int v2:32; double v3; };
struct __attribute__((packed)) aS_BFu32i_F { short v1; unsigned int v2:32; float v3; };
struct __attribute__((packed)) aS_BFu32i_I { short v1; unsigned int v2:32; int v3; };
struct __attribute__((packed)) aS_BFu32i_Ip { short v1; unsigned int v2:32; int * v3; };
struct __attribute__((packed)) aS_BFu32i_L { short v1; unsigned int v2:32; long long v3; };
struct __attribute__((packed)) aS_BFu32i_S { short v1; unsigned int v2:32; short v3; };
struct __attribute__((packed)) aS_BFu32i_Uc { short v1; unsigned int v2:32; unsigned char v3; };
struct __attribute__((packed)) aS_BFu32i_Ui { short v1; unsigned int v2:32; unsigned int v3; };
struct __attribute__((packed)) aS_BFu32i_Ul { short v1; unsigned int v2:32; unsigned long long v3; };
struct __attribute__((packed)) aS_BFu32i_Us { short v1; unsigned int v2:32; unsigned short v3; };
struct __attribute__((packed)) aS_BFu32i_Vp { short v1; unsigned int v2:32; void * v3; };
struct __attribute__((packed)) aS_BFu32ll { short v1; unsigned long long v2:32; };
struct __attribute__((packed)) aS_BFu32ll_BFu15i { short v1; unsigned long long v2:32; unsigned int v3:15; };
struct __attribute__((packed)) aS_BFu32ll_BFu15ll { short v1; unsigned long long v2:32; unsigned long long v3:15; };
struct __attribute__((packed)) aS_BFu32ll_BFu15s { short v1; unsigned long long v2:32; unsigned short v3:15; };
struct __attribute__((packed)) aS_BFu32ll_BFu16i { short v1; unsigned long long v2:32; unsigned int v3:16; };
struct __attribute__((packed)) aS_BFu32ll_BFu16ll { short v1; unsigned long long v2:32; unsigned long long v3:16; };
struct __attribute__((packed)) aS_BFu32ll_BFu16s { short v1; unsigned long long v2:32; unsigned short v3:16; };
struct __attribute__((packed)) aS_BFu32ll_BFu17i { short v1; unsigned long long v2:32; unsigned int v3:17; };
struct __attribute__((packed)) aS_BFu32ll_BFu17ll { short v1; unsigned long long v2:32; unsigned long long v3:17; };
struct __attribute__((packed)) aS_BFu32ll_BFu1c { short v1; unsigned long long v2:32; unsigned char v3:1; };
struct __attribute__((packed)) aS_BFu32ll_BFu1i { short v1; unsigned long long v2:32; unsigned int v3:1; };
struct __attribute__((packed)) aS_BFu32ll_BFu1ll { short v1; unsigned long long v2:32; unsigned long long v3:1; };
struct __attribute__((packed)) aS_BFu32ll_BFu1s { short v1; unsigned long long v2:32; unsigned short v3:1; };
struct __attribute__((packed)) aS_BFu32ll_BFu31i { short v1; unsigned long long v2:32; unsigned int v3:31; };
struct __attribute__((packed)) aS_BFu32ll_BFu31ll { short v1; unsigned long long v2:32; unsigned long long v3:31; };
struct __attribute__((packed)) aS_BFu32ll_BFu32i { short v1; unsigned long long v2:32; unsigned int v3:32; };
struct __attribute__((packed)) aS_BFu32ll_BFu32ll { short v1; unsigned long long v2:32; unsigned long long v3:32; };
struct __attribute__((packed)) aS_BFu32ll_BFu33 { short v1; unsigned long long v2:32; unsigned long long v3:33; };
struct __attribute__((packed)) aS_BFu32ll_BFu7c { short v1; unsigned long long v2:32; unsigned char v3:7; };
struct __attribute__((packed)) aS_BFu32ll_BFu7i { short v1; unsigned long long v2:32; unsigned int v3:7; };
struct __attribute__((packed)) aS_BFu32ll_BFu7ll { short v1; unsigned long long v2:32; unsigned long long v3:7; };
struct __attribute__((packed)) aS_BFu32ll_BFu7s { short v1; unsigned long long v2:32; unsigned short v3:7; };
struct __attribute__((packed)) aS_BFu32ll_BFu8c { short v1; unsigned long long v2:32; unsigned char v3:8; };
struct __attribute__((packed)) aS_BFu32ll_BFu8i { short v1; unsigned long long v2:32; unsigned int v3:8; };
struct __attribute__((packed)) aS_BFu32ll_BFu8ll { short v1; unsigned long long v2:32; unsigned long long v3:8; };
struct __attribute__((packed)) aS_BFu32ll_BFu8s { short v1; unsigned long long v2:32; unsigned short v3:8; };
struct __attribute__((packed)) aS_BFu32ll_BFu9i { short v1; unsigned long long v2:32; unsigned int v3:9; };
struct __attribute__((packed)) aS_BFu32ll_BFu9ll { short v1; unsigned long long v2:32; unsigned long long v3:9; };
struct __attribute__((packed)) aS_BFu32ll_BFu9s { short v1; unsigned long long v2:32; unsigned short v3:9; };
struct __attribute__((packed)) aS_BFu32ll_C { short v1; unsigned long long v2:32; char v3; };
struct __attribute__((packed)) aS_BFu32ll_D { short v1; unsigned long long v2:32; double v3; };
struct __attribute__((packed)) aS_BFu32ll_F { short v1; unsigned long long v2:32; float v3; };
struct __attribute__((packed)) aS_BFu32ll_I { short v1; unsigned long long v2:32; int v3; };
struct __attribute__((packed)) aS_BFu32ll_Ip { short v1; unsigned long long v2:32; int * v3; };
struct __attribute__((packed)) aS_BFu32ll_L { short v1; unsigned long long v2:32; long long v3; };
struct __attribute__((packed)) aS_BFu32ll_S { short v1; unsigned long long v2:32; short v3; };
struct __attribute__((packed)) aS_BFu32ll_Uc { short v1; unsigned long long v2:32; unsigned char v3; };
struct __attribute__((packed)) aS_BFu32ll_Ui { short v1; unsigned long long v2:32; unsigned int v3; };
struct __attribute__((packed)) aS_BFu32ll_Ul { short v1; unsigned long long v2:32; unsigned long long v3; };
struct __attribute__((packed)) aS_BFu32ll_Us { short v1; unsigned long long v2:32; unsigned short v3; };
struct __attribute__((packed)) aS_BFu32ll_Vp { short v1; unsigned long long v2:32; void * v3; };
struct __attribute__((packed)) aS_BFu33 { short v1; unsigned long long v2:33; };
struct __attribute__((packed)) aS_BFu33_BFu15i { short v1; unsigned long long v2:33; unsigned int v3:15; };
struct __attribute__((packed)) aS_BFu33_BFu15ll { short v1; unsigned long long v2:33; unsigned long long v3:15; };
struct __attribute__((packed)) aS_BFu33_BFu15s { short v1; unsigned long long v2:33; unsigned short v3:15; };
struct __attribute__((packed)) aS_BFu33_BFu16i { short v1; unsigned long long v2:33; unsigned int v3:16; };
struct __attribute__((packed)) aS_BFu33_BFu16ll { short v1; unsigned long long v2:33; unsigned long long v3:16; };
struct __attribute__((packed)) aS_BFu33_BFu16s { short v1; unsigned long long v2:33; unsigned short v3:16; };
struct __attribute__((packed)) aS_BFu33_BFu17i { short v1; unsigned long long v2:33; unsigned int v3:17; };
struct __attribute__((packed)) aS_BFu33_BFu17ll { short v1; unsigned long long v2:33; unsigned long long v3:17; };
struct __attribute__((packed)) aS_BFu33_BFu1c { short v1; unsigned long long v2:33; unsigned char v3:1; };
struct __attribute__((packed)) aS_BFu33_BFu1i { short v1; unsigned long long v2:33; unsigned int v3:1; };
struct __attribute__((packed)) aS_BFu33_BFu1ll { short v1; unsigned long long v2:33; unsigned long long v3:1; };
struct __attribute__((packed)) aS_BFu33_BFu1s { short v1; unsigned long long v2:33; unsigned short v3:1; };
struct __attribute__((packed)) aS_BFu33_BFu31i { short v1; unsigned long long v2:33; unsigned int v3:31; };
struct __attribute__((packed)) aS_BFu33_BFu31ll { short v1; unsigned long long v2:33; unsigned long long v3:31; };
struct __attribute__((packed)) aS_BFu33_BFu32i { short v1; unsigned long long v2:33; unsigned int v3:32; };
struct __attribute__((packed)) aS_BFu33_BFu32ll { short v1; unsigned long long v2:33; unsigned long long v3:32; };
struct __attribute__((packed)) aS_BFu33_BFu33 { short v1; unsigned long long v2:33; unsigned long long v3:33; };
struct __attribute__((packed)) aS_BFu33_BFu7c { short v1; unsigned long long v2:33; unsigned char v3:7; };
struct __attribute__((packed)) aS_BFu33_BFu7i { short v1; unsigned long long v2:33; unsigned int v3:7; };
struct __attribute__((packed)) aS_BFu33_BFu7ll { short v1; unsigned long long v2:33; unsigned long long v3:7; };
struct __attribute__((packed)) aS_BFu33_BFu7s { short v1; unsigned long long v2:33; unsigned short v3:7; };
struct __attribute__((packed)) aS_BFu33_BFu8c { short v1; unsigned long long v2:33; unsigned char v3:8; };
struct __attribute__((packed)) aS_BFu33_BFu8i { short v1; unsigned long long v2:33; unsigned int v3:8; };
struct __attribute__((packed)) aS_BFu33_BFu8ll { short v1; unsigned long long v2:33; unsigned long long v3:8; };
struct __attribute__((packed)) aS_BFu33_BFu8s { short v1; unsigned long long v2:33; unsigned short v3:8; };
struct __attribute__((packed)) aS_BFu33_BFu9i { short v1; unsigned long long v2:33; unsigned int v3:9; };
struct __attribute__((packed)) aS_BFu33_BFu9ll { short v1; unsigned long long v2:33; unsigned long long v3:9; };
struct __attribute__((packed)) aS_BFu33_BFu9s { short v1; unsigned long long v2:33; unsigned short v3:9; };
struct __attribute__((packed)) aS_BFu33_C { short v1; unsigned long long v2:33; char v3; };
struct __attribute__((packed)) aS_BFu33_D { short v1; unsigned long long v2:33; double v3; };
struct __attribute__((packed)) aS_BFu33_F { short v1; unsigned long long v2:33; float v3; };
struct __attribute__((packed)) aS_BFu33_I { short v1; unsigned long long v2:33; int v3; };
struct __attribute__((packed)) aS_BFu33_Ip { short v1; unsigned long long v2:33; int * v3; };
struct __attribute__((packed)) aS_BFu33_L { short v1; unsigned long long v2:33; long long v3; };
struct __attribute__((packed)) aS_BFu33_S { short v1; unsigned long long v2:33; short v3; };
struct __attribute__((packed)) aS_BFu33_Uc { short v1; unsigned long long v2:33; unsigned char v3; };
struct __attribute__((packed)) aS_BFu33_Ui { short v1; unsigned long long v2:33; unsigned int v3; };
struct __attribute__((packed)) aS_BFu33_Ul { short v1; unsigned long long v2:33; unsigned long long v3; };
struct __attribute__((packed)) aS_BFu33_Us { short v1; unsigned long long v2:33; unsigned short v3; };
struct __attribute__((packed)) aS_BFu33_Vp { short v1; unsigned long long v2:33; void * v3; };
struct __attribute__((packed)) aS_BFu7c { short v1; unsigned char v2:7; };
struct __attribute__((packed)) aS_BFu7c_BFu15i { short v1; unsigned char v2:7; unsigned int v3:15; };
struct __attribute__((packed)) aS_BFu7c_BFu15ll { short v1; unsigned char v2:7; unsigned long long v3:15; };
struct __attribute__((packed)) aS_BFu7c_BFu15s { short v1; unsigned char v2:7; unsigned short v3:15; };
struct __attribute__((packed)) aS_BFu7c_BFu16i { short v1; unsigned char v2:7; unsigned int v3:16; };
struct __attribute__((packed)) aS_BFu7c_BFu16ll { short v1; unsigned char v2:7; unsigned long long v3:16; };
struct __attribute__((packed)) aS_BFu7c_BFu16s { short v1; unsigned char v2:7; unsigned short v3:16; };
struct __attribute__((packed)) aS_BFu7c_BFu17i { short v1; unsigned char v2:7; unsigned int v3:17; };
struct __attribute__((packed)) aS_BFu7c_BFu17ll { short v1; unsigned char v2:7; unsigned long long v3:17; };
struct __attribute__((packed)) aS_BFu7c_BFu1c { short v1; unsigned char v2:7; unsigned char v3:1; };
struct __attribute__((packed)) aS_BFu7c_BFu1i { short v1; unsigned char v2:7; unsigned int v3:1; };
struct __attribute__((packed)) aS_BFu7c_BFu1ll { short v1; unsigned char v2:7; unsigned long long v3:1; };
struct __attribute__((packed)) aS_BFu7c_BFu1s { short v1; unsigned char v2:7; unsigned short v3:1; };
struct __attribute__((packed)) aS_BFu7c_BFu31i { short v1; unsigned char v2:7; unsigned int v3:31; };
struct __attribute__((packed)) aS_BFu7c_BFu31ll { short v1; unsigned char v2:7; unsigned long long v3:31; };
struct __attribute__((packed)) aS_BFu7c_BFu32i { short v1; unsigned char v2:7; unsigned int v3:32; };
struct __attribute__((packed)) aS_BFu7c_BFu32ll { short v1; unsigned char v2:7; unsigned long long v3:32; };
struct __attribute__((packed)) aS_BFu7c_BFu33 { short v1; unsigned char v2:7; unsigned long long v3:33; };
struct __attribute__((packed)) aS_BFu7c_BFu7c { short v1; unsigned char v2:7; unsigned char v3:7; };
struct __attribute__((packed)) aS_BFu7c_BFu7i { short v1; unsigned char v2:7; unsigned int v3:7; };
struct __attribute__((packed)) aS_BFu7c_BFu7ll { short v1; unsigned char v2:7; unsigned long long v3:7; };
struct __attribute__((packed)) aS_BFu7c_BFu7s { short v1; unsigned char v2:7; unsigned short v3:7; };
struct __attribute__((packed)) aS_BFu7c_BFu8c { short v1; unsigned char v2:7; unsigned char v3:8; };
struct __attribute__((packed)) aS_BFu7c_BFu8i { short v1; unsigned char v2:7; unsigned int v3:8; };
struct __attribute__((packed)) aS_BFu7c_BFu8ll { short v1; unsigned char v2:7; unsigned long long v3:8; };
struct __attribute__((packed)) aS_BFu7c_BFu8s { short v1; unsigned char v2:7; unsigned short v3:8; };
struct __attribute__((packed)) aS_BFu7c_BFu9i { short v1; unsigned char v2:7; unsigned int v3:9; };
struct __attribute__((packed)) aS_BFu7c_BFu9ll { short v1; unsigned char v2:7; unsigned long long v3:9; };
struct __attribute__((packed)) aS_BFu7c_BFu9s { short v1; unsigned char v2:7; unsigned short v3:9; };
struct __attribute__((packed)) aS_BFu7c_C { short v1; unsigned char v2:7; char v3; };
struct __attribute__((packed)) aS_BFu7c_D { short v1; unsigned char v2:7; double v3; };
struct __attribute__((packed)) aS_BFu7c_F { short v1; unsigned char v2:7; float v3; };
struct __attribute__((packed)) aS_BFu7c_I { short v1; unsigned char v2:7; int v3; };
struct __attribute__((packed)) aS_BFu7c_Ip { short v1; unsigned char v2:7; int * v3; };
struct __attribute__((packed)) aS_BFu7c_L { short v1; unsigned char v2:7; long long v3; };
struct __attribute__((packed)) aS_BFu7c_S { short v1; unsigned char v2:7; short v3; };
struct __attribute__((packed)) aS_BFu7c_Uc { short v1; unsigned char v2:7; unsigned char v3; };
struct __attribute__((packed)) aS_BFu7c_Ui { short v1; unsigned char v2:7; unsigned int v3; };
struct __attribute__((packed)) aS_BFu7c_Ul { short v1; unsigned char v2:7; unsigned long long v3; };
struct __attribute__((packed)) aS_BFu7c_Us { short v1; unsigned char v2:7; unsigned short v3; };
struct __attribute__((packed)) aS_BFu7c_Vp { short v1; unsigned char v2:7; void * v3; };
struct __attribute__((packed)) aS_BFu7i { short v1; unsigned int v2:7; };
struct __attribute__((packed)) aS_BFu7i_BFu15i { short v1; unsigned int v2:7; unsigned int v3:15; };
struct __attribute__((packed)) aS_BFu7i_BFu15ll { short v1; unsigned int v2:7; unsigned long long v3:15; };
struct __attribute__((packed)) aS_BFu7i_BFu15s { short v1; unsigned int v2:7; unsigned short v3:15; };
struct __attribute__((packed)) aS_BFu7i_BFu16i { short v1; unsigned int v2:7; unsigned int v3:16; };
struct __attribute__((packed)) aS_BFu7i_BFu16ll { short v1; unsigned int v2:7; unsigned long long v3:16; };
struct __attribute__((packed)) aS_BFu7i_BFu16s { short v1; unsigned int v2:7; unsigned short v3:16; };
struct __attribute__((packed)) aS_BFu7i_BFu17i { short v1; unsigned int v2:7; unsigned int v3:17; };
struct __attribute__((packed)) aS_BFu7i_BFu17ll { short v1; unsigned int v2:7; unsigned long long v3:17; };
struct __attribute__((packed)) aS_BFu7i_BFu1c { short v1; unsigned int v2:7; unsigned char v3:1; };
struct __attribute__((packed)) aS_BFu7i_BFu1i { short v1; unsigned int v2:7; unsigned int v3:1; };
struct __attribute__((packed)) aS_BFu7i_BFu1ll { short v1; unsigned int v2:7; unsigned long long v3:1; };
struct __attribute__((packed)) aS_BFu7i_BFu1s { short v1; unsigned int v2:7; unsigned short v3:1; };
struct __attribute__((packed)) aS_BFu7i_BFu31i { short v1; unsigned int v2:7; unsigned int v3:31; };
struct __attribute__((packed)) aS_BFu7i_BFu31ll { short v1; unsigned int v2:7; unsigned long long v3:31; };
struct __attribute__((packed)) aS_BFu7i_BFu32i { short v1; unsigned int v2:7; unsigned int v3:32; };
struct __attribute__((packed)) aS_BFu7i_BFu32ll { short v1; unsigned int v2:7; unsigned long long v3:32; };
struct __attribute__((packed)) aS_BFu7i_BFu33 { short v1; unsigned int v2:7; unsigned long long v3:33; };
struct __attribute__((packed)) aS_BFu7i_BFu7c { short v1; unsigned int v2:7; unsigned char v3:7; };
struct __attribute__((packed)) aS_BFu7i_BFu7i { short v1; unsigned int v2:7; unsigned int v3:7; };
struct __attribute__((packed)) aS_BFu7i_BFu7ll { short v1; unsigned int v2:7; unsigned long long v3:7; };
struct __attribute__((packed)) aS_BFu7i_BFu7s { short v1; unsigned int v2:7; unsigned short v3:7; };
struct __attribute__((packed)) aS_BFu7i_BFu8c { short v1; unsigned int v2:7; unsigned char v3:8; };
struct __attribute__((packed)) aS_BFu7i_BFu8i { short v1; unsigned int v2:7; unsigned int v3:8; };
struct __attribute__((packed)) aS_BFu7i_BFu8ll { short v1; unsigned int v2:7; unsigned long long v3:8; };
struct __attribute__((packed)) aS_BFu7i_BFu8s { short v1; unsigned int v2:7; unsigned short v3:8; };
struct __attribute__((packed)) aS_BFu7i_BFu9i { short v1; unsigned int v2:7; unsigned int v3:9; };
struct __attribute__((packed)) aS_BFu7i_BFu9ll { short v1; unsigned int v2:7; unsigned long long v3:9; };
struct __attribute__((packed)) aS_BFu7i_BFu9s { short v1; unsigned int v2:7; unsigned short v3:9; };
struct __attribute__((packed)) aS_BFu7i_C { short v1; unsigned int v2:7; char v3; };
struct __attribute__((packed)) aS_BFu7i_D { short v1; unsigned int v2:7; double v3; };
struct __attribute__((packed)) aS_BFu7i_F { short v1; unsigned int v2:7; float v3; };
struct __attribute__((packed)) aS_BFu7i_I { short v1; unsigned int v2:7; int v3; };
struct __attribute__((packed)) aS_BFu7i_Ip { short v1; unsigned int v2:7; int * v3; };
struct __attribute__((packed)) aS_BFu7i_L { short v1; unsigned int v2:7; long long v3; };
struct __attribute__((packed)) aS_BFu7i_S { short v1; unsigned int v2:7; short v3; };
struct __attribute__((packed)) aS_BFu7i_Uc { short v1; unsigned int v2:7; unsigned char v3; };
struct __attribute__((packed)) aS_BFu7i_Ui { short v1; unsigned int v2:7; unsigned int v3; };
struct __attribute__((packed)) aS_BFu7i_Ul { short v1; unsigned int v2:7; unsigned long long v3; };
struct __attribute__((packed)) aS_BFu7i_Us { short v1; unsigned int v2:7; unsigned short v3; };
struct __attribute__((packed)) aS_BFu7i_Vp { short v1; unsigned int v2:7; void * v3; };
struct __attribute__((packed)) aS_BFu7ll { short v1; unsigned long long v2:7; };
struct __attribute__((packed)) aS_BFu7ll_BFu15i { short v1; unsigned long long v2:7; unsigned int v3:15; };
struct __attribute__((packed)) aS_BFu7ll_BFu15ll { short v1; unsigned long long v2:7; unsigned long long v3:15; };
struct __attribute__((packed)) aS_BFu7ll_BFu15s { short v1; unsigned long long v2:7; unsigned short v3:15; };
struct __attribute__((packed)) aS_BFu7ll_BFu16i { short v1; unsigned long long v2:7; unsigned int v3:16; };
struct __attribute__((packed)) aS_BFu7ll_BFu16ll { short v1; unsigned long long v2:7; unsigned long long v3:16; };
struct __attribute__((packed)) aS_BFu7ll_BFu16s { short v1; unsigned long long v2:7; unsigned short v3:16; };
struct __attribute__((packed)) aS_BFu7ll_BFu17i { short v1; unsigned long long v2:7; unsigned int v3:17; };
struct __attribute__((packed)) aS_BFu7ll_BFu17ll { short v1; unsigned long long v2:7; unsigned long long v3:17; };
struct __attribute__((packed)) aS_BFu7ll_BFu1c { short v1; unsigned long long v2:7; unsigned char v3:1; };
struct __attribute__((packed)) aS_BFu7ll_BFu1i { short v1; unsigned long long v2:7; unsigned int v3:1; };
struct __attribute__((packed)) aS_BFu7ll_BFu1ll { short v1; unsigned long long v2:7; unsigned long long v3:1; };
struct __attribute__((packed)) aS_BFu7ll_BFu1s { short v1; unsigned long long v2:7; unsigned short v3:1; };
struct __attribute__((packed)) aS_BFu7ll_BFu31i { short v1; unsigned long long v2:7; unsigned int v3:31; };
struct __attribute__((packed)) aS_BFu7ll_BFu31ll { short v1; unsigned long long v2:7; unsigned long long v3:31; };
struct __attribute__((packed)) aS_BFu7ll_BFu32i { short v1; unsigned long long v2:7; unsigned int v3:32; };
struct __attribute__((packed)) aS_BFu7ll_BFu32ll { short v1; unsigned long long v2:7; unsigned long long v3:32; };
struct __attribute__((packed)) aS_BFu7ll_BFu33 { short v1; unsigned long long v2:7; unsigned long long v3:33; };
struct __attribute__((packed)) aS_BFu7ll_BFu7c { short v1; unsigned long long v2:7; unsigned char v3:7; };
struct __attribute__((packed)) aS_BFu7ll_BFu7i { short v1; unsigned long long v2:7; unsigned int v3:7; };
struct __attribute__((packed)) aS_BFu7ll_BFu7ll { short v1; unsigned long long v2:7; unsigned long long v3:7; };
struct __attribute__((packed)) aS_BFu7ll_BFu7s { short v1; unsigned long long v2:7; unsigned short v3:7; };
struct __attribute__((packed)) aS_BFu7ll_BFu8c { short v1; unsigned long long v2:7; unsigned char v3:8; };
struct __attribute__((packed)) aS_BFu7ll_BFu8i { short v1; unsigned long long v2:7; unsigned int v3:8; };
struct __attribute__((packed)) aS_BFu7ll_BFu8ll { short v1; unsigned long long v2:7; unsigned long long v3:8; };
struct __attribute__((packed)) aS_BFu7ll_BFu8s { short v1; unsigned long long v2:7; unsigned short v3:8; };
struct __attribute__((packed)) aS_BFu7ll_BFu9i { short v1; unsigned long long v2:7; unsigned int v3:9; };
struct __attribute__((packed)) aS_BFu7ll_BFu9ll { short v1; unsigned long long v2:7; unsigned long long v3:9; };
struct __attribute__((packed)) aS_BFu7ll_BFu9s { short v1; unsigned long long v2:7; unsigned short v3:9; };
struct __attribute__((packed)) aS_BFu7ll_C { short v1; unsigned long long v2:7; char v3; };
struct __attribute__((packed)) aS_BFu7ll_D { short v1; unsigned long long v2:7; double v3; };
struct __attribute__((packed)) aS_BFu7ll_F { short v1; unsigned long long v2:7; float v3; };
struct __attribute__((packed)) aS_BFu7ll_I { short v1; unsigned long long v2:7; int v3; };
struct __attribute__((packed)) aS_BFu7ll_Ip { short v1; unsigned long long v2:7; int * v3; };
struct __attribute__((packed)) aS_BFu7ll_L { short v1; unsigned long long v2:7; long long v3; };
struct __attribute__((packed)) aS_BFu7ll_S { short v1; unsigned long long v2:7; short v3; };
struct __attribute__((packed)) aS_BFu7ll_Uc { short v1; unsigned long long v2:7; unsigned char v3; };
struct __attribute__((packed)) aS_BFu7ll_Ui { short v1; unsigned long long v2:7; unsigned int v3; };
struct __attribute__((packed)) aS_BFu7ll_Ul { short v1; unsigned long long v2:7; unsigned long long v3; };
struct __attribute__((packed)) aS_BFu7ll_Us { short v1; unsigned long long v2:7; unsigned short v3; };
struct __attribute__((packed)) aS_BFu7ll_Vp { short v1; unsigned long long v2:7; void * v3; };
struct __attribute__((packed)) aS_BFu7s { short v1; unsigned short v2:7; };
struct __attribute__((packed)) aS_BFu7s_BFu15i { short v1; unsigned short v2:7; unsigned int v3:15; };
struct __attribute__((packed)) aS_BFu7s_BFu15ll { short v1; unsigned short v2:7; unsigned long long v3:15; };
struct __attribute__((packed)) aS_BFu7s_BFu15s { short v1; unsigned short v2:7; unsigned short v3:15; };
struct __attribute__((packed)) aS_BFu7s_BFu16i { short v1; unsigned short v2:7; unsigned int v3:16; };
struct __attribute__((packed)) aS_BFu7s_BFu16ll { short v1; unsigned short v2:7; unsigned long long v3:16; };
struct __attribute__((packed)) aS_BFu7s_BFu16s { short v1; unsigned short v2:7; unsigned short v3:16; };
struct __attribute__((packed)) aS_BFu7s_BFu17i { short v1; unsigned short v2:7; unsigned int v3:17; };
struct __attribute__((packed)) aS_BFu7s_BFu17ll { short v1; unsigned short v2:7; unsigned long long v3:17; };
struct __attribute__((packed)) aS_BFu7s_BFu1c { short v1; unsigned short v2:7; unsigned char v3:1; };
struct __attribute__((packed)) aS_BFu7s_BFu1i { short v1; unsigned short v2:7; unsigned int v3:1; };
struct __attribute__((packed)) aS_BFu7s_BFu1ll { short v1; unsigned short v2:7; unsigned long long v3:1; };
struct __attribute__((packed)) aS_BFu7s_BFu1s { short v1; unsigned short v2:7; unsigned short v3:1; };
struct __attribute__((packed)) aS_BFu7s_BFu31i { short v1; unsigned short v2:7; unsigned int v3:31; };
struct __attribute__((packed)) aS_BFu7s_BFu31ll { short v1; unsigned short v2:7; unsigned long long v3:31; };
struct __attribute__((packed)) aS_BFu7s_BFu32i { short v1; unsigned short v2:7; unsigned int v3:32; };
struct __attribute__((packed)) aS_BFu7s_BFu32ll { short v1; unsigned short v2:7; unsigned long long v3:32; };
struct __attribute__((packed)) aS_BFu7s_BFu33 { short v1; unsigned short v2:7; unsigned long long v3:33; };
struct __attribute__((packed)) aS_BFu7s_BFu7c { short v1; unsigned short v2:7; unsigned char v3:7; };
struct __attribute__((packed)) aS_BFu7s_BFu7i { short v1; unsigned short v2:7; unsigned int v3:7; };
struct __attribute__((packed)) aS_BFu7s_BFu7ll { short v1; unsigned short v2:7; unsigned long long v3:7; };
struct __attribute__((packed)) aS_BFu7s_BFu7s { short v1; unsigned short v2:7; unsigned short v3:7; };
struct __attribute__((packed)) aS_BFu7s_BFu8c { short v1; unsigned short v2:7; unsigned char v3:8; };
struct __attribute__((packed)) aS_BFu7s_BFu8i { short v1; unsigned short v2:7; unsigned int v3:8; };
struct __attribute__((packed)) aS_BFu7s_BFu8ll { short v1; unsigned short v2:7; unsigned long long v3:8; };
struct __attribute__((packed)) aS_BFu7s_BFu8s { short v1; unsigned short v2:7; unsigned short v3:8; };
struct __attribute__((packed)) aS_BFu7s_BFu9i { short v1; unsigned short v2:7; unsigned int v3:9; };
struct __attribute__((packed)) aS_BFu7s_BFu9ll { short v1; unsigned short v2:7; unsigned long long v3:9; };
struct __attribute__((packed)) aS_BFu7s_BFu9s { short v1; unsigned short v2:7; unsigned short v3:9; };
struct __attribute__((packed)) aS_BFu7s_C { short v1; unsigned short v2:7; char v3; };
struct __attribute__((packed)) aS_BFu7s_D { short v1; unsigned short v2:7; double v3; };
struct __attribute__((packed)) aS_BFu7s_F { short v1; unsigned short v2:7; float v3; };
struct __attribute__((packed)) aS_BFu7s_I { short v1; unsigned short v2:7; int v3; };
struct __attribute__((packed)) aS_BFu7s_Ip { short v1; unsigned short v2:7; int * v3; };
struct __attribute__((packed)) aS_BFu7s_L { short v1; unsigned short v2:7; long long v3; };
struct __attribute__((packed)) aS_BFu7s_S { short v1; unsigned short v2:7; short v3; };
struct __attribute__((packed)) aS_BFu7s_Uc { short v1; unsigned short v2:7; unsigned char v3; };
struct __attribute__((packed)) aS_BFu7s_Ui { short v1; unsigned short v2:7; unsigned int v3; };
struct __attribute__((packed)) aS_BFu7s_Ul { short v1; unsigned short v2:7; unsigned long long v3; };
struct __attribute__((packed)) aS_BFu7s_Us { short v1; unsigned short v2:7; unsigned short v3; };
struct __attribute__((packed)) aS_BFu7s_Vp { short v1; unsigned short v2:7; void * v3; };
struct __attribute__((packed)) aS_BFu8c { short v1; unsigned char v2:8; };
struct __attribute__((packed)) aS_BFu8c_BFu15i { short v1; unsigned char v2:8; unsigned int v3:15; };
struct __attribute__((packed)) aS_BFu8c_BFu15ll { short v1; unsigned char v2:8; unsigned long long v3:15; };
struct __attribute__((packed)) aS_BFu8c_BFu15s { short v1; unsigned char v2:8; unsigned short v3:15; };
struct __attribute__((packed)) aS_BFu8c_BFu16i { short v1; unsigned char v2:8; unsigned int v3:16; };
struct __attribute__((packed)) aS_BFu8c_BFu16ll { short v1; unsigned char v2:8; unsigned long long v3:16; };
struct __attribute__((packed)) aS_BFu8c_BFu16s { short v1; unsigned char v2:8; unsigned short v3:16; };
struct __attribute__((packed)) aS_BFu8c_BFu17i { short v1; unsigned char v2:8; unsigned int v3:17; };
struct __attribute__((packed)) aS_BFu8c_BFu17ll { short v1; unsigned char v2:8; unsigned long long v3:17; };
struct __attribute__((packed)) aS_BFu8c_BFu1c { short v1; unsigned char v2:8; unsigned char v3:1; };
struct __attribute__((packed)) aS_BFu8c_BFu1i { short v1; unsigned char v2:8; unsigned int v3:1; };
struct __attribute__((packed)) aS_BFu8c_BFu1ll { short v1; unsigned char v2:8; unsigned long long v3:1; };
struct __attribute__((packed)) aS_BFu8c_BFu1s { short v1; unsigned char v2:8; unsigned short v3:1; };
struct __attribute__((packed)) aS_BFu8c_BFu31i { short v1; unsigned char v2:8; unsigned int v3:31; };
struct __attribute__((packed)) aS_BFu8c_BFu31ll { short v1; unsigned char v2:8; unsigned long long v3:31; };
struct __attribute__((packed)) aS_BFu8c_BFu32i { short v1; unsigned char v2:8; unsigned int v3:32; };
struct __attribute__((packed)) aS_BFu8c_BFu32ll { short v1; unsigned char v2:8; unsigned long long v3:32; };
struct __attribute__((packed)) aS_BFu8c_BFu33 { short v1; unsigned char v2:8; unsigned long long v3:33; };
struct __attribute__((packed)) aS_BFu8c_BFu7c { short v1; unsigned char v2:8; unsigned char v3:7; };
struct __attribute__((packed)) aS_BFu8c_BFu7i { short v1; unsigned char v2:8; unsigned int v3:7; };
struct __attribute__((packed)) aS_BFu8c_BFu7ll { short v1; unsigned char v2:8; unsigned long long v3:7; };
struct __attribute__((packed)) aS_BFu8c_BFu7s { short v1; unsigned char v2:8; unsigned short v3:7; };
struct __attribute__((packed)) aS_BFu8c_BFu8c { short v1; unsigned char v2:8; unsigned char v3:8; };
struct __attribute__((packed)) aS_BFu8c_BFu8i { short v1; unsigned char v2:8; unsigned int v3:8; };
struct __attribute__((packed)) aS_BFu8c_BFu8ll { short v1; unsigned char v2:8; unsigned long long v3:8; };
struct __attribute__((packed)) aS_BFu8c_BFu8s { short v1; unsigned char v2:8; unsigned short v3:8; };
struct __attribute__((packed)) aS_BFu8c_BFu9i { short v1; unsigned char v2:8; unsigned int v3:9; };
struct __attribute__((packed)) aS_BFu8c_BFu9ll { short v1; unsigned char v2:8; unsigned long long v3:9; };
struct __attribute__((packed)) aS_BFu8c_BFu9s { short v1; unsigned char v2:8; unsigned short v3:9; };
struct __attribute__((packed)) aS_BFu8c_C { short v1; unsigned char v2:8; char v3; };
struct __attribute__((packed)) aS_BFu8c_D { short v1; unsigned char v2:8; double v3; };
struct __attribute__((packed)) aS_BFu8c_F { short v1; unsigned char v2:8; float v3; };
struct __attribute__((packed)) aS_BFu8c_I { short v1; unsigned char v2:8; int v3; };
struct __attribute__((packed)) aS_BFu8c_Ip { short v1; unsigned char v2:8; int * v3; };
struct __attribute__((packed)) aS_BFu8c_L { short v1; unsigned char v2:8; long long v3; };
struct __attribute__((packed)) aS_BFu8c_S { short v1; unsigned char v2:8; short v3; };
struct __attribute__((packed)) aS_BFu8c_Uc { short v1; unsigned char v2:8; unsigned char v3; };
struct __attribute__((packed)) aS_BFu8c_Ui { short v1; unsigned char v2:8; unsigned int v3; };
struct __attribute__((packed)) aS_BFu8c_Ul { short v1; unsigned char v2:8; unsigned long long v3; };
struct __attribute__((packed)) aS_BFu8c_Us { short v1; unsigned char v2:8; unsigned short v3; };
struct __attribute__((packed)) aS_BFu8c_Vp { short v1; unsigned char v2:8; void * v3; };
struct __attribute__((packed)) aS_BFu8i { short v1; unsigned int v2:8; };
struct __attribute__((packed)) aS_BFu8i_BFu15i { short v1; unsigned int v2:8; unsigned int v3:15; };
struct __attribute__((packed)) aS_BFu8i_BFu15ll { short v1; unsigned int v2:8; unsigned long long v3:15; };
struct __attribute__((packed)) aS_BFu8i_BFu15s { short v1; unsigned int v2:8; unsigned short v3:15; };
struct __attribute__((packed)) aS_BFu8i_BFu16i { short v1; unsigned int v2:8; unsigned int v3:16; };
struct __attribute__((packed)) aS_BFu8i_BFu16ll { short v1; unsigned int v2:8; unsigned long long v3:16; };
struct __attribute__((packed)) aS_BFu8i_BFu16s { short v1; unsigned int v2:8; unsigned short v3:16; };
struct __attribute__((packed)) aS_BFu8i_BFu17i { short v1; unsigned int v2:8; unsigned int v3:17; };
struct __attribute__((packed)) aS_BFu8i_BFu17ll { short v1; unsigned int v2:8; unsigned long long v3:17; };
struct __attribute__((packed)) aS_BFu8i_BFu1c { short v1; unsigned int v2:8; unsigned char v3:1; };
struct __attribute__((packed)) aS_BFu8i_BFu1i { short v1; unsigned int v2:8; unsigned int v3:1; };
struct __attribute__((packed)) aS_BFu8i_BFu1ll { short v1; unsigned int v2:8; unsigned long long v3:1; };
struct __attribute__((packed)) aS_BFu8i_BFu1s { short v1; unsigned int v2:8; unsigned short v3:1; };
struct __attribute__((packed)) aS_BFu8i_BFu31i { short v1; unsigned int v2:8; unsigned int v3:31; };
struct __attribute__((packed)) aS_BFu8i_BFu31ll { short v1; unsigned int v2:8; unsigned long long v3:31; };
struct __attribute__((packed)) aS_BFu8i_BFu32i { short v1; unsigned int v2:8; unsigned int v3:32; };
struct __attribute__((packed)) aS_BFu8i_BFu32ll { short v1; unsigned int v2:8; unsigned long long v3:32; };
struct __attribute__((packed)) aS_BFu8i_BFu33 { short v1; unsigned int v2:8; unsigned long long v3:33; };
struct __attribute__((packed)) aS_BFu8i_BFu7c { short v1; unsigned int v2:8; unsigned char v3:7; };
struct __attribute__((packed)) aS_BFu8i_BFu7i { short v1; unsigned int v2:8; unsigned int v3:7; };
struct __attribute__((packed)) aS_BFu8i_BFu7ll { short v1; unsigned int v2:8; unsigned long long v3:7; };
struct __attribute__((packed)) aS_BFu8i_BFu7s { short v1; unsigned int v2:8; unsigned short v3:7; };
struct __attribute__((packed)) aS_BFu8i_BFu8c { short v1; unsigned int v2:8; unsigned char v3:8; };
struct __attribute__((packed)) aS_BFu8i_BFu8i { short v1; unsigned int v2:8; unsigned int v3:8; };
struct __attribute__((packed)) aS_BFu8i_BFu8ll { short v1; unsigned int v2:8; unsigned long long v3:8; };
struct __attribute__((packed)) aS_BFu8i_BFu8s { short v1; unsigned int v2:8; unsigned short v3:8; };
struct __attribute__((packed)) aS_BFu8i_BFu9i { short v1; unsigned int v2:8; unsigned int v3:9; };
struct __attribute__((packed)) aS_BFu8i_BFu9ll { short v1; unsigned int v2:8; unsigned long long v3:9; };
struct __attribute__((packed)) aS_BFu8i_BFu9s { short v1; unsigned int v2:8; unsigned short v3:9; };
struct __attribute__((packed)) aS_BFu8i_C { short v1; unsigned int v2:8; char v3; };
struct __attribute__((packed)) aS_BFu8i_D { short v1; unsigned int v2:8; double v3; };
struct __attribute__((packed)) aS_BFu8i_F { short v1; unsigned int v2:8; float v3; };
struct __attribute__((packed)) aS_BFu8i_I { short v1; unsigned int v2:8; int v3; };
struct __attribute__((packed)) aS_BFu8i_Ip { short v1; unsigned int v2:8; int * v3; };
struct __attribute__((packed)) aS_BFu8i_L { short v1; unsigned int v2:8; long long v3; };
struct __attribute__((packed)) aS_BFu8i_S { short v1; unsigned int v2:8; short v3; };
struct __attribute__((packed)) aS_BFu8i_Uc { short v1; unsigned int v2:8; unsigned char v3; };
struct __attribute__((packed)) aS_BFu8i_Ui { short v1; unsigned int v2:8; unsigned int v3; };
struct __attribute__((packed)) aS_BFu8i_Ul { short v1; unsigned int v2:8; unsigned long long v3; };
struct __attribute__((packed)) aS_BFu8i_Us { short v1; unsigned int v2:8; unsigned short v3; };
struct __attribute__((packed)) aS_BFu8i_Vp { short v1; unsigned int v2:8; void * v3; };
struct __attribute__((packed)) aS_BFu8ll { short v1; unsigned long long v2:8; };
struct __attribute__((packed)) aS_BFu8ll_BFu15i { short v1; unsigned long long v2:8; unsigned int v3:15; };
struct __attribute__((packed)) aS_BFu8ll_BFu15ll { short v1; unsigned long long v2:8; unsigned long long v3:15; };
struct __attribute__((packed)) aS_BFu8ll_BFu15s { short v1; unsigned long long v2:8; unsigned short v3:15; };
struct __attribute__((packed)) aS_BFu8ll_BFu16i { short v1; unsigned long long v2:8; unsigned int v3:16; };
struct __attribute__((packed)) aS_BFu8ll_BFu16ll { short v1; unsigned long long v2:8; unsigned long long v3:16; };
struct __attribute__((packed)) aS_BFu8ll_BFu16s { short v1; unsigned long long v2:8; unsigned short v3:16; };
struct __attribute__((packed)) aS_BFu8ll_BFu17i { short v1; unsigned long long v2:8; unsigned int v3:17; };
struct __attribute__((packed)) aS_BFu8ll_BFu17ll { short v1; unsigned long long v2:8; unsigned long long v3:17; };
struct __attribute__((packed)) aS_BFu8ll_BFu1c { short v1; unsigned long long v2:8; unsigned char v3:1; };
struct __attribute__((packed)) aS_BFu8ll_BFu1i { short v1; unsigned long long v2:8; unsigned int v3:1; };
struct __attribute__((packed)) aS_BFu8ll_BFu1ll { short v1; unsigned long long v2:8; unsigned long long v3:1; };
struct __attribute__((packed)) aS_BFu8ll_BFu1s { short v1; unsigned long long v2:8; unsigned short v3:1; };
struct __attribute__((packed)) aS_BFu8ll_BFu31i { short v1; unsigned long long v2:8; unsigned int v3:31; };
struct __attribute__((packed)) aS_BFu8ll_BFu31ll { short v1; unsigned long long v2:8; unsigned long long v3:31; };
struct __attribute__((packed)) aS_BFu8ll_BFu32i { short v1; unsigned long long v2:8; unsigned int v3:32; };
struct __attribute__((packed)) aS_BFu8ll_BFu32ll { short v1; unsigned long long v2:8; unsigned long long v3:32; };
struct __attribute__((packed)) aS_BFu8ll_BFu33 { short v1; unsigned long long v2:8; unsigned long long v3:33; };
struct __attribute__((packed)) aS_BFu8ll_BFu7c { short v1; unsigned long long v2:8; unsigned char v3:7; };
struct __attribute__((packed)) aS_BFu8ll_BFu7i { short v1; unsigned long long v2:8; unsigned int v3:7; };
struct __attribute__((packed)) aS_BFu8ll_BFu7ll { short v1; unsigned long long v2:8; unsigned long long v3:7; };
struct __attribute__((packed)) aS_BFu8ll_BFu7s { short v1; unsigned long long v2:8; unsigned short v3:7; };
struct __attribute__((packed)) aS_BFu8ll_BFu8c { short v1; unsigned long long v2:8; unsigned char v3:8; };
struct __attribute__((packed)) aS_BFu8ll_BFu8i { short v1; unsigned long long v2:8; unsigned int v3:8; };
struct __attribute__((packed)) aS_BFu8ll_BFu8ll { short v1; unsigned long long v2:8; unsigned long long v3:8; };
struct __attribute__((packed)) aS_BFu8ll_BFu8s { short v1; unsigned long long v2:8; unsigned short v3:8; };
struct __attribute__((packed)) aS_BFu8ll_BFu9i { short v1; unsigned long long v2:8; unsigned int v3:9; };
struct __attribute__((packed)) aS_BFu8ll_BFu9ll { short v1; unsigned long long v2:8; unsigned long long v3:9; };
struct __attribute__((packed)) aS_BFu8ll_BFu9s { short v1; unsigned long long v2:8; unsigned short v3:9; };
struct __attribute__((packed)) aS_BFu8ll_C { short v1; unsigned long long v2:8; char v3; };
struct __attribute__((packed)) aS_BFu8ll_D { short v1; unsigned long long v2:8; double v3; };
struct __attribute__((packed)) aS_BFu8ll_F { short v1; unsigned long long v2:8; float v3; };
struct __attribute__((packed)) aS_BFu8ll_I { short v1; unsigned long long v2:8; int v3; };
struct __attribute__((packed)) aS_BFu8ll_Ip { short v1; unsigned long long v2:8; int * v3; };
struct __attribute__((packed)) aS_BFu8ll_L { short v1; unsigned long long v2:8; long long v3; };
struct __attribute__((packed)) aS_BFu8ll_S { short v1; unsigned long long v2:8; short v3; };
struct __attribute__((packed)) aS_BFu8ll_Uc { short v1; unsigned long long v2:8; unsigned char v3; };
struct __attribute__((packed)) aS_BFu8ll_Ui { short v1; unsigned long long v2:8; unsigned int v3; };
struct __attribute__((packed)) aS_BFu8ll_Ul { short v1; unsigned long long v2:8; unsigned long long v3; };
struct __attribute__((packed)) aS_BFu8ll_Us { short v1; unsigned long long v2:8; unsigned short v3; };
struct __attribute__((packed)) aS_BFu8ll_Vp { short v1; unsigned long long v2:8; void * v3; };
struct __attribute__((packed)) aS_BFu8s { short v1; unsigned short v2:8; };
struct __attribute__((packed)) aS_BFu8s_BFu15i { short v1; unsigned short v2:8; unsigned int v3:15; };
struct __attribute__((packed)) aS_BFu8s_BFu15ll { short v1; unsigned short v2:8; unsigned long long v3:15; };
struct __attribute__((packed)) aS_BFu8s_BFu15s { short v1; unsigned short v2:8; unsigned short v3:15; };
struct __attribute__((packed)) aS_BFu8s_BFu16i { short v1; unsigned short v2:8; unsigned int v3:16; };
struct __attribute__((packed)) aS_BFu8s_BFu16ll { short v1; unsigned short v2:8; unsigned long long v3:16; };
struct __attribute__((packed)) aS_BFu8s_BFu16s { short v1; unsigned short v2:8; unsigned short v3:16; };
struct __attribute__((packed)) aS_BFu8s_BFu17i { short v1; unsigned short v2:8; unsigned int v3:17; };
struct __attribute__((packed)) aS_BFu8s_BFu17ll { short v1; unsigned short v2:8; unsigned long long v3:17; };
struct __attribute__((packed)) aS_BFu8s_BFu1c { short v1; unsigned short v2:8; unsigned char v3:1; };
struct __attribute__((packed)) aS_BFu8s_BFu1i { short v1; unsigned short v2:8; unsigned int v3:1; };
struct __attribute__((packed)) aS_BFu8s_BFu1ll { short v1; unsigned short v2:8; unsigned long long v3:1; };
struct __attribute__((packed)) aS_BFu8s_BFu1s { short v1; unsigned short v2:8; unsigned short v3:1; };
struct __attribute__((packed)) aS_BFu8s_BFu31i { short v1; unsigned short v2:8; unsigned int v3:31; };
struct __attribute__((packed)) aS_BFu8s_BFu31ll { short v1; unsigned short v2:8; unsigned long long v3:31; };
struct __attribute__((packed)) aS_BFu8s_BFu32i { short v1; unsigned short v2:8; unsigned int v3:32; };
struct __attribute__((packed)) aS_BFu8s_BFu32ll { short v1; unsigned short v2:8; unsigned long long v3:32; };
struct __attribute__((packed)) aS_BFu8s_BFu33 { short v1; unsigned short v2:8; unsigned long long v3:33; };
struct __attribute__((packed)) aS_BFu8s_BFu7c { short v1; unsigned short v2:8; unsigned char v3:7; };
struct __attribute__((packed)) aS_BFu8s_BFu7i { short v1; unsigned short v2:8; unsigned int v3:7; };
struct __attribute__((packed)) aS_BFu8s_BFu7ll { short v1; unsigned short v2:8; unsigned long long v3:7; };
struct __attribute__((packed)) aS_BFu8s_BFu7s { short v1; unsigned short v2:8; unsigned short v3:7; };
struct __attribute__((packed)) aS_BFu8s_BFu8c { short v1; unsigned short v2:8; unsigned char v3:8; };
struct __attribute__((packed)) aS_BFu8s_BFu8i { short v1; unsigned short v2:8; unsigned int v3:8; };
struct __attribute__((packed)) aS_BFu8s_BFu8ll { short v1; unsigned short v2:8; unsigned long long v3:8; };
struct __attribute__((packed)) aS_BFu8s_BFu8s { short v1; unsigned short v2:8; unsigned short v3:8; };
struct __attribute__((packed)) aS_BFu8s_BFu9i { short v1; unsigned short v2:8; unsigned int v3:9; };
struct __attribute__((packed)) aS_BFu8s_BFu9ll { short v1; unsigned short v2:8; unsigned long long v3:9; };
struct __attribute__((packed)) aS_BFu8s_BFu9s { short v1; unsigned short v2:8; unsigned short v3:9; };
struct __attribute__((packed)) aS_BFu8s_C { short v1; unsigned short v2:8; char v3; };
struct __attribute__((packed)) aS_BFu8s_D { short v1; unsigned short v2:8; double v3; };
struct __attribute__((packed)) aS_BFu8s_F { short v1; unsigned short v2:8; float v3; };
struct __attribute__((packed)) aS_BFu8s_I { short v1; unsigned short v2:8; int v3; };
struct __attribute__((packed)) aS_BFu8s_Ip { short v1; unsigned short v2:8; int * v3; };
struct __attribute__((packed)) aS_BFu8s_L { short v1; unsigned short v2:8; long long v3; };
struct __attribute__((packed)) aS_BFu8s_S { short v1; unsigned short v2:8; short v3; };
struct __attribute__((packed)) aS_BFu8s_Uc { short v1; unsigned short v2:8; unsigned char v3; };
struct __attribute__((packed)) aS_BFu8s_Ui { short v1; unsigned short v2:8; unsigned int v3; };
struct __attribute__((packed)) aS_BFu8s_Ul { short v1; unsigned short v2:8; unsigned long long v3; };
struct __attribute__((packed)) aS_BFu8s_Us { short v1; unsigned short v2:8; unsigned short v3; };
struct __attribute__((packed)) aS_BFu8s_Vp { short v1; unsigned short v2:8; void * v3; };
struct __attribute__((packed)) aS_BFu9i { short v1; unsigned int v2:9; };
struct __attribute__((packed)) aS_BFu9i_BFu15i { short v1; unsigned int v2:9; unsigned int v3:15; };
struct __attribute__((packed)) aS_BFu9i_BFu15ll { short v1; unsigned int v2:9; unsigned long long v3:15; };
struct __attribute__((packed)) aS_BFu9i_BFu15s { short v1; unsigned int v2:9; unsigned short v3:15; };
struct __attribute__((packed)) aS_BFu9i_BFu16i { short v1; unsigned int v2:9; unsigned int v3:16; };
struct __attribute__((packed)) aS_BFu9i_BFu16ll { short v1; unsigned int v2:9; unsigned long long v3:16; };
struct __attribute__((packed)) aS_BFu9i_BFu16s { short v1; unsigned int v2:9; unsigned short v3:16; };
struct __attribute__((packed)) aS_BFu9i_BFu17i { short v1; unsigned int v2:9; unsigned int v3:17; };
struct __attribute__((packed)) aS_BFu9i_BFu17ll { short v1; unsigned int v2:9; unsigned long long v3:17; };
struct __attribute__((packed)) aS_BFu9i_BFu1c { short v1; unsigned int v2:9; unsigned char v3:1; };
struct __attribute__((packed)) aS_BFu9i_BFu1i { short v1; unsigned int v2:9; unsigned int v3:1; };
struct __attribute__((packed)) aS_BFu9i_BFu1ll { short v1; unsigned int v2:9; unsigned long long v3:1; };
struct __attribute__((packed)) aS_BFu9i_BFu1s { short v1; unsigned int v2:9; unsigned short v3:1; };
struct __attribute__((packed)) aS_BFu9i_BFu31i { short v1; unsigned int v2:9; unsigned int v3:31; };
struct __attribute__((packed)) aS_BFu9i_BFu31ll { short v1; unsigned int v2:9; unsigned long long v3:31; };
struct __attribute__((packed)) aS_BFu9i_BFu32i { short v1; unsigned int v2:9; unsigned int v3:32; };
struct __attribute__((packed)) aS_BFu9i_BFu32ll { short v1; unsigned int v2:9; unsigned long long v3:32; };
struct __attribute__((packed)) aS_BFu9i_BFu33 { short v1; unsigned int v2:9; unsigned long long v3:33; };
struct __attribute__((packed)) aS_BFu9i_BFu7c { short v1; unsigned int v2:9; unsigned char v3:7; };
struct __attribute__((packed)) aS_BFu9i_BFu7i { short v1; unsigned int v2:9; unsigned int v3:7; };
struct __attribute__((packed)) aS_BFu9i_BFu7ll { short v1; unsigned int v2:9; unsigned long long v3:7; };
struct __attribute__((packed)) aS_BFu9i_BFu7s { short v1; unsigned int v2:9; unsigned short v3:7; };
struct __attribute__((packed)) aS_BFu9i_BFu8c { short v1; unsigned int v2:9; unsigned char v3:8; };
struct __attribute__((packed)) aS_BFu9i_BFu8i { short v1; unsigned int v2:9; unsigned int v3:8; };
struct __attribute__((packed)) aS_BFu9i_BFu8ll { short v1; unsigned int v2:9; unsigned long long v3:8; };
struct __attribute__((packed)) aS_BFu9i_BFu8s { short v1; unsigned int v2:9; unsigned short v3:8; };
struct __attribute__((packed)) aS_BFu9i_BFu9i { short v1; unsigned int v2:9; unsigned int v3:9; };
struct __attribute__((packed)) aS_BFu9i_BFu9ll { short v1; unsigned int v2:9; unsigned long long v3:9; };
struct __attribute__((packed)) aS_BFu9i_BFu9s { short v1; unsigned int v2:9; unsigned short v3:9; };
struct __attribute__((packed)) aS_BFu9i_C { short v1; unsigned int v2:9; char v3; };
struct __attribute__((packed)) aS_BFu9i_D { short v1; unsigned int v2:9; double v3; };
struct __attribute__((packed)) aS_BFu9i_F { short v1; unsigned int v2:9; float v3; };
struct __attribute__((packed)) aS_BFu9i_I { short v1; unsigned int v2:9; int v3; };
struct __attribute__((packed)) aS_BFu9i_Ip { short v1; unsigned int v2:9; int * v3; };
struct __attribute__((packed)) aS_BFu9i_L { short v1; unsigned int v2:9; long long v3; };
struct __attribute__((packed)) aS_BFu9i_S { short v1; unsigned int v2:9; short v3; };
struct __attribute__((packed)) aS_BFu9i_Uc { short v1; unsigned int v2:9; unsigned char v3; };
struct __attribute__((packed)) aS_BFu9i_Ui { short v1; unsigned int v2:9; unsigned int v3; };
struct __attribute__((packed)) aS_BFu9i_Ul { short v1; unsigned int v2:9; unsigned long long v3; };
struct __attribute__((packed)) aS_BFu9i_Us { short v1; unsigned int v2:9; unsigned short v3; };
struct __attribute__((packed)) aS_BFu9i_Vp { short v1; unsigned int v2:9; void * v3; };
struct __attribute__((packed)) aS_BFu9ll { short v1; unsigned long long v2:9; };
struct __attribute__((packed)) aS_BFu9ll_BFu15i { short v1; unsigned long long v2:9; unsigned int v3:15; };
struct __attribute__((packed)) aS_BFu9ll_BFu15ll { short v1; unsigned long long v2:9; unsigned long long v3:15; };
struct __attribute__((packed)) aS_BFu9ll_BFu15s { short v1; unsigned long long v2:9; unsigned short v3:15; };
struct __attribute__((packed)) aS_BFu9ll_BFu16i { short v1; unsigned long long v2:9; unsigned int v3:16; };
struct __attribute__((packed)) aS_BFu9ll_BFu16ll { short v1; unsigned long long v2:9; unsigned long long v3:16; };
struct __attribute__((packed)) aS_BFu9ll_BFu16s { short v1; unsigned long long v2:9; unsigned short v3:16; };
struct __attribute__((packed)) aS_BFu9ll_BFu17i { short v1; unsigned long long v2:9; unsigned int v3:17; };
struct __attribute__((packed)) aS_BFu9ll_BFu17ll { short v1; unsigned long long v2:9; unsigned long long v3:17; };
struct __attribute__((packed)) aS_BFu9ll_BFu1c { short v1; unsigned long long v2:9; unsigned char v3:1; };
struct __attribute__((packed)) aS_BFu9ll_BFu1i { short v1; unsigned long long v2:9; unsigned int v3:1; };
struct __attribute__((packed)) aS_BFu9ll_BFu1ll { short v1; unsigned long long v2:9; unsigned long long v3:1; };
struct __attribute__((packed)) aS_BFu9ll_BFu1s { short v1; unsigned long long v2:9; unsigned short v3:1; };
struct __attribute__((packed)) aS_BFu9ll_BFu31i { short v1; unsigned long long v2:9; unsigned int v3:31; };
struct __attribute__((packed)) aS_BFu9ll_BFu31ll { short v1; unsigned long long v2:9; unsigned long long v3:31; };
struct __attribute__((packed)) aS_BFu9ll_BFu32i { short v1; unsigned long long v2:9; unsigned int v3:32; };
struct __attribute__((packed)) aS_BFu9ll_BFu32ll { short v1; unsigned long long v2:9; unsigned long long v3:32; };
struct __attribute__((packed)) aS_BFu9ll_BFu33 { short v1; unsigned long long v2:9; unsigned long long v3:33; };
struct __attribute__((packed)) aS_BFu9ll_BFu7c { short v1; unsigned long long v2:9; unsigned char v3:7; };
struct __attribute__((packed)) aS_BFu9ll_BFu7i { short v1; unsigned long long v2:9; unsigned int v3:7; };
struct __attribute__((packed)) aS_BFu9ll_BFu7ll { short v1; unsigned long long v2:9; unsigned long long v3:7; };
struct __attribute__((packed)) aS_BFu9ll_BFu7s { short v1; unsigned long long v2:9; unsigned short v3:7; };
struct __attribute__((packed)) aS_BFu9ll_BFu8c { short v1; unsigned long long v2:9; unsigned char v3:8; };
struct __attribute__((packed)) aS_BFu9ll_BFu8i { short v1; unsigned long long v2:9; unsigned int v3:8; };
struct __attribute__((packed)) aS_BFu9ll_BFu8ll { short v1; unsigned long long v2:9; unsigned long long v3:8; };
struct __attribute__((packed)) aS_BFu9ll_BFu8s { short v1; unsigned long long v2:9; unsigned short v3:8; };
struct __attribute__((packed)) aS_BFu9ll_BFu9i { short v1; unsigned long long v2:9; unsigned int v3:9; };
struct __attribute__((packed)) aS_BFu9ll_BFu9ll { short v1; unsigned long long v2:9; unsigned long long v3:9; };
struct __attribute__((packed)) aS_BFu9ll_BFu9s { short v1; unsigned long long v2:9; unsigned short v3:9; };
struct __attribute__((packed)) aS_BFu9ll_C { short v1; unsigned long long v2:9; char v3; };
struct __attribute__((packed)) aS_BFu9ll_D { short v1; unsigned long long v2:9; double v3; };
struct __attribute__((packed)) aS_BFu9ll_F { short v1; unsigned long long v2:9; float v3; };
struct __attribute__((packed)) aS_BFu9ll_I { short v1; unsigned long long v2:9; int v3; };
struct __attribute__((packed)) aS_BFu9ll_Ip { short v1; unsigned long long v2:9; int * v3; };
struct __attribute__((packed)) aS_BFu9ll_L { short v1; unsigned long long v2:9; long long v3; };
struct __attribute__((packed)) aS_BFu9ll_S { short v1; unsigned long long v2:9; short v3; };
struct __attribute__((packed)) aS_BFu9ll_Uc { short v1; unsigned long long v2:9; unsigned char v3; };
struct __attribute__((packed)) aS_BFu9ll_Ui { short v1; unsigned long long v2:9; unsigned int v3; };
struct __attribute__((packed)) aS_BFu9ll_Ul { short v1; unsigned long long v2:9; unsigned long long v3; };
struct __attribute__((packed)) aS_BFu9ll_Us { short v1; unsigned long long v2:9; unsigned short v3; };
struct __attribute__((packed)) aS_BFu9ll_Vp { short v1; unsigned long long v2:9; void * v3; };
struct __attribute__((packed)) aS_BFu9s { short v1; unsigned short v2:9; };
struct __attribute__((packed)) aS_BFu9s_BFu15i { short v1; unsigned short v2:9; unsigned int v3:15; };
struct __attribute__((packed)) aS_BFu9s_BFu15ll { short v1; unsigned short v2:9; unsigned long long v3:15; };
struct __attribute__((packed)) aS_BFu9s_BFu15s { short v1; unsigned short v2:9; unsigned short v3:15; };
struct __attribute__((packed)) aS_BFu9s_BFu16i { short v1; unsigned short v2:9; unsigned int v3:16; };
struct __attribute__((packed)) aS_BFu9s_BFu16ll { short v1; unsigned short v2:9; unsigned long long v3:16; };
struct __attribute__((packed)) aS_BFu9s_BFu16s { short v1; unsigned short v2:9; unsigned short v3:16; };
struct __attribute__((packed)) aS_BFu9s_BFu17i { short v1; unsigned short v2:9; unsigned int v3:17; };
struct __attribute__((packed)) aS_BFu9s_BFu17ll { short v1; unsigned short v2:9; unsigned long long v3:17; };
struct __attribute__((packed)) aS_BFu9s_BFu1c { short v1; unsigned short v2:9; unsigned char v3:1; };
struct __attribute__((packed)) aS_BFu9s_BFu1i { short v1; unsigned short v2:9; unsigned int v3:1; };
struct __attribute__((packed)) aS_BFu9s_BFu1ll { short v1; unsigned short v2:9; unsigned long long v3:1; };
struct __attribute__((packed)) aS_BFu9s_BFu1s { short v1; unsigned short v2:9; unsigned short v3:1; };
struct __attribute__((packed)) aS_BFu9s_BFu31i { short v1; unsigned short v2:9; unsigned int v3:31; };
struct __attribute__((packed)) aS_BFu9s_BFu31ll { short v1; unsigned short v2:9; unsigned long long v3:31; };
struct __attribute__((packed)) aS_BFu9s_BFu32i { short v1; unsigned short v2:9; unsigned int v3:32; };
struct __attribute__((packed)) aS_BFu9s_BFu32ll { short v1; unsigned short v2:9; unsigned long long v3:32; };
struct __attribute__((packed)) aS_BFu9s_BFu33 { short v1; unsigned short v2:9; unsigned long long v3:33; };
struct __attribute__((packed)) aS_BFu9s_BFu7c { short v1; unsigned short v2:9; unsigned char v3:7; };
struct __attribute__((packed)) aS_BFu9s_BFu7i { short v1; unsigned short v2:9; unsigned int v3:7; };
struct __attribute__((packed)) aS_BFu9s_BFu7ll { short v1; unsigned short v2:9; unsigned long long v3:7; };
struct __attribute__((packed)) aS_BFu9s_BFu7s { short v1; unsigned short v2:9; unsigned short v3:7; };
struct __attribute__((packed)) aS_BFu9s_BFu8c { short v1; unsigned short v2:9; unsigned char v3:8; };
struct __attribute__((packed)) aS_BFu9s_BFu8i { short v1; unsigned short v2:9; unsigned int v3:8; };
struct __attribute__((packed)) aS_BFu9s_BFu8ll { short v1; unsigned short v2:9; unsigned long long v3:8; };
struct __attribute__((packed)) aS_BFu9s_BFu8s { short v1; unsigned short v2:9; unsigned short v3:8; };
struct __attribute__((packed)) aS_BFu9s_BFu9i { short v1; unsigned short v2:9; unsigned int v3:9; };
struct __attribute__((packed)) aS_BFu9s_BFu9ll { short v1; unsigned short v2:9; unsigned long long v3:9; };
struct __attribute__((packed)) aS_BFu9s_BFu9s { short v1; unsigned short v2:9; unsigned short v3:9; };
struct __attribute__((packed)) aS_BFu9s_C { short v1; unsigned short v2:9; char v3; };
struct __attribute__((packed)) aS_BFu9s_D { short v1; unsigned short v2:9; double v3; };
struct __attribute__((packed)) aS_BFu9s_F { short v1; unsigned short v2:9; float v3; };
struct __attribute__((packed)) aS_BFu9s_I { short v1; unsigned short v2:9; int v3; };
struct __attribute__((packed)) aS_BFu9s_Ip { short v1; unsigned short v2:9; int * v3; };
struct __attribute__((packed)) aS_BFu9s_L { short v1; unsigned short v2:9; long long v3; };
struct __attribute__((packed)) aS_BFu9s_S { short v1; unsigned short v2:9; short v3; };
struct __attribute__((packed)) aS_BFu9s_Uc { short v1; unsigned short v2:9; unsigned char v3; };
struct __attribute__((packed)) aS_BFu9s_Ui { short v1; unsigned short v2:9; unsigned int v3; };
struct __attribute__((packed)) aS_BFu9s_Ul { short v1; unsigned short v2:9; unsigned long long v3; };
struct __attribute__((packed)) aS_BFu9s_Us { short v1; unsigned short v2:9; unsigned short v3; };
struct __attribute__((packed)) aS_BFu9s_Vp { short v1; unsigned short v2:9; void * v3; };
struct __attribute__((packed)) aS_C { short v1; char v2; };
struct __attribute__((packed)) aS_C_BFu15i { short v1; char v2; unsigned int v3:15; };
struct __attribute__((packed)) aS_C_BFu15ll { short v1; char v2; unsigned long long v3:15; };
struct __attribute__((packed)) aS_C_BFu15s { short v1; char v2; unsigned short v3:15; };
struct __attribute__((packed)) aS_C_BFu16i { short v1; char v2; unsigned int v3:16; };
struct __attribute__((packed)) aS_C_BFu16ll { short v1; char v2; unsigned long long v3:16; };
struct __attribute__((packed)) aS_C_BFu16s { short v1; char v2; unsigned short v3:16; };
struct __attribute__((packed)) aS_C_BFu17i { short v1; char v2; unsigned int v3:17; };
struct __attribute__((packed)) aS_C_BFu17ll { short v1; char v2; unsigned long long v3:17; };
struct __attribute__((packed)) aS_C_BFu1c { short v1; char v2; unsigned char v3:1; };
struct __attribute__((packed)) aS_C_BFu1i { short v1; char v2; unsigned int v3:1; };
struct __attribute__((packed)) aS_C_BFu1ll { short v1; char v2; unsigned long long v3:1; };
struct __attribute__((packed)) aS_C_BFu1s { short v1; char v2; unsigned short v3:1; };
struct __attribute__((packed)) aS_C_BFu31i { short v1; char v2; unsigned int v3:31; };
struct __attribute__((packed)) aS_C_BFu31ll { short v1; char v2; unsigned long long v3:31; };
struct __attribute__((packed)) aS_C_BFu32i { short v1; char v2; unsigned int v3:32; };
struct __attribute__((packed)) aS_C_BFu32ll { short v1; char v2; unsigned long long v3:32; };
struct __attribute__((packed)) aS_C_BFu33 { short v1; char v2; unsigned long long v3:33; };
struct __attribute__((packed)) aS_C_BFu7c { short v1; char v2; unsigned char v3:7; };
struct __attribute__((packed)) aS_C_BFu7i { short v1; char v2; unsigned int v3:7; };
struct __attribute__((packed)) aS_C_BFu7ll { short v1; char v2; unsigned long long v3:7; };
struct __attribute__((packed)) aS_C_BFu7s { short v1; char v2; unsigned short v3:7; };
struct __attribute__((packed)) aS_C_BFu8c { short v1; char v2; unsigned char v3:8; };
struct __attribute__((packed)) aS_C_BFu8i { short v1; char v2; unsigned int v3:8; };
struct __attribute__((packed)) aS_C_BFu8ll { short v1; char v2; unsigned long long v3:8; };
struct __attribute__((packed)) aS_C_BFu8s { short v1; char v2; unsigned short v3:8; };
struct __attribute__((packed)) aS_C_BFu9i { short v1; char v2; unsigned int v3:9; };
struct __attribute__((packed)) aS_C_BFu9ll { short v1; char v2; unsigned long long v3:9; };
struct __attribute__((packed)) aS_C_BFu9s { short v1; char v2; unsigned short v3:9; };
struct __attribute__((packed)) aS_C_C { short v1; char v2; char v3; };
struct __attribute__((packed)) aS_C_D { short v1; char v2; double v3; };
struct __attribute__((packed)) aS_C_F { short v1; char v2; float v3; };
struct __attribute__((packed)) aS_C_I { short v1; char v2; int v3; };
struct __attribute__((packed)) aS_C_Ip { short v1; char v2; int * v3; };
struct __attribute__((packed)) aS_C_L { short v1; char v2; long long v3; };
struct __attribute__((packed)) aS_C_S { short v1; char v2; short v3; };
struct __attribute__((packed)) aS_C_Uc { short v1; char v2; unsigned char v3; };
struct __attribute__((packed)) aS_C_Ui { short v1; char v2; unsigned int v3; };
struct __attribute__((packed)) aS_C_Ul { short v1; char v2; unsigned long long v3; };
struct __attribute__((packed)) aS_C_Us { short v1; char v2; unsigned short v3; };
struct __attribute__((packed)) aS_C_Vp { short v1; char v2; void * v3; };
struct __attribute__((packed)) aS_D { short v1; double v2; };
struct __attribute__((packed)) aS_D_BFu15i { short v1; double v2; unsigned int v3:15; };
struct __attribute__((packed)) aS_D_BFu15ll { short v1; double v2; unsigned long long v3:15; };
struct __attribute__((packed)) aS_D_BFu15s { short v1; double v2; unsigned short v3:15; };
struct __attribute__((packed)) aS_D_BFu16i { short v1; double v2; unsigned int v3:16; };
struct __attribute__((packed)) aS_D_BFu16ll { short v1; double v2; unsigned long long v3:16; };
struct __attribute__((packed)) aS_D_BFu16s { short v1; double v2; unsigned short v3:16; };
struct __attribute__((packed)) aS_D_BFu17i { short v1; double v2; unsigned int v3:17; };
struct __attribute__((packed)) aS_D_BFu17ll { short v1; double v2; unsigned long long v3:17; };
struct __attribute__((packed)) aS_D_BFu1c { short v1; double v2; unsigned char v3:1; };
struct __attribute__((packed)) aS_D_BFu1i { short v1; double v2; unsigned int v3:1; };
struct __attribute__((packed)) aS_D_BFu1ll { short v1; double v2; unsigned long long v3:1; };
struct __attribute__((packed)) aS_D_BFu1s { short v1; double v2; unsigned short v3:1; };
struct __attribute__((packed)) aS_D_BFu31i { short v1; double v2; unsigned int v3:31; };
struct __attribute__((packed)) aS_D_BFu31ll { short v1; double v2; unsigned long long v3:31; };
struct __attribute__((packed)) aS_D_BFu32i { short v1; double v2; unsigned int v3:32; };
struct __attribute__((packed)) aS_D_BFu32ll { short v1; double v2; unsigned long long v3:32; };
struct __attribute__((packed)) aS_D_BFu33 { short v1; double v2; unsigned long long v3:33; };
struct __attribute__((packed)) aS_D_BFu7c { short v1; double v2; unsigned char v3:7; };
struct __attribute__((packed)) aS_D_BFu7i { short v1; double v2; unsigned int v3:7; };
struct __attribute__((packed)) aS_D_BFu7ll { short v1; double v2; unsigned long long v3:7; };
struct __attribute__((packed)) aS_D_BFu7s { short v1; double v2; unsigned short v3:7; };
struct __attribute__((packed)) aS_D_BFu8c { short v1; double v2; unsigned char v3:8; };
struct __attribute__((packed)) aS_D_BFu8i { short v1; double v2; unsigned int v3:8; };
struct __attribute__((packed)) aS_D_BFu8ll { short v1; double v2; unsigned long long v3:8; };
struct __attribute__((packed)) aS_D_BFu8s { short v1; double v2; unsigned short v3:8; };
struct __attribute__((packed)) aS_D_BFu9i { short v1; double v2; unsigned int v3:9; };
struct __attribute__((packed)) aS_D_BFu9ll { short v1; double v2; unsigned long long v3:9; };
struct __attribute__((packed)) aS_D_BFu9s { short v1; double v2; unsigned short v3:9; };
struct __attribute__((packed)) aS_D_C { short v1; double v2; char v3; };
struct __attribute__((packed)) aS_D_D { short v1; double v2; double v3; };
struct __attribute__((packed)) aS_D_F { short v1; double v2; float v3; };
struct __attribute__((packed)) aS_D_I { short v1; double v2; int v3; };
struct __attribute__((packed)) aS_D_Ip { short v1; double v2; int * v3; };
struct __attribute__((packed)) aS_D_L { short v1; double v2; long long v3; };
struct __attribute__((packed)) aS_D_S { short v1; double v2; short v3; };
struct __attribute__((packed)) aS_D_Uc { short v1; double v2; unsigned char v3; };
struct __attribute__((packed)) aS_D_Ui { short v1; double v2; unsigned int v3; };
struct __attribute__((packed)) aS_D_Ul { short v1; double v2; unsigned long long v3; };
struct __attribute__((packed)) aS_D_Us { short v1; double v2; unsigned short v3; };
struct __attribute__((packed)) aS_D_Vp { short v1; double v2; void * v3; };
struct __attribute__((packed)) aS_F { short v1; float v2; };
struct __attribute__((packed)) aS_F_BFu15i { short v1; float v2; unsigned int v3:15; };
struct __attribute__((packed)) aS_F_BFu15ll { short v1; float v2; unsigned long long v3:15; };
struct __attribute__((packed)) aS_F_BFu15s { short v1; float v2; unsigned short v3:15; };
struct __attribute__((packed)) aS_F_BFu16i { short v1; float v2; unsigned int v3:16; };
struct __attribute__((packed)) aS_F_BFu16ll { short v1; float v2; unsigned long long v3:16; };
struct __attribute__((packed)) aS_F_BFu16s { short v1; float v2; unsigned short v3:16; };
struct __attribute__((packed)) aS_F_BFu17i { short v1; float v2; unsigned int v3:17; };
struct __attribute__((packed)) aS_F_BFu17ll { short v1; float v2; unsigned long long v3:17; };
struct __attribute__((packed)) aS_F_BFu1c { short v1; float v2; unsigned char v3:1; };
struct __attribute__((packed)) aS_F_BFu1i { short v1; float v2; unsigned int v3:1; };
struct __attribute__((packed)) aS_F_BFu1ll { short v1; float v2; unsigned long long v3:1; };
struct __attribute__((packed)) aS_F_BFu1s { short v1; float v2; unsigned short v3:1; };
struct __attribute__((packed)) aS_F_BFu31i { short v1; float v2; unsigned int v3:31; };
struct __attribute__((packed)) aS_F_BFu31ll { short v1; float v2; unsigned long long v3:31; };
struct __attribute__((packed)) aS_F_BFu32i { short v1; float v2; unsigned int v3:32; };
struct __attribute__((packed)) aS_F_BFu32ll { short v1; float v2; unsigned long long v3:32; };
struct __attribute__((packed)) aS_F_BFu33 { short v1; float v2; unsigned long long v3:33; };
struct __attribute__((packed)) aS_F_BFu7c { short v1; float v2; unsigned char v3:7; };
struct __attribute__((packed)) aS_F_BFu7i { short v1; float v2; unsigned int v3:7; };
struct __attribute__((packed)) aS_F_BFu7ll { short v1; float v2; unsigned long long v3:7; };
struct __attribute__((packed)) aS_F_BFu7s { short v1; float v2; unsigned short v3:7; };
struct __attribute__((packed)) aS_F_BFu8c { short v1; float v2; unsigned char v3:8; };
struct __attribute__((packed)) aS_F_BFu8i { short v1; float v2; unsigned int v3:8; };
struct __attribute__((packed)) aS_F_BFu8ll { short v1; float v2; unsigned long long v3:8; };
struct __attribute__((packed)) aS_F_BFu8s { short v1; float v2; unsigned short v3:8; };
struct __attribute__((packed)) aS_F_BFu9i { short v1; float v2; unsigned int v3:9; };
struct __attribute__((packed)) aS_F_BFu9ll { short v1; float v2; unsigned long long v3:9; };
struct __attribute__((packed)) aS_F_BFu9s { short v1; float v2; unsigned short v3:9; };
struct __attribute__((packed)) aS_F_C { short v1; float v2; char v3; };
struct __attribute__((packed)) aS_F_D { short v1; float v2; double v3; };
struct __attribute__((packed)) aS_F_F { short v1; float v2; float v3; };
struct __attribute__((packed)) aS_F_I { short v1; float v2; int v3; };
struct __attribute__((packed)) aS_F_Ip { short v1; float v2; int * v3; };
struct __attribute__((packed)) aS_F_L { short v1; float v2; long long v3; };
struct __attribute__((packed)) aS_F_S { short v1; float v2; short v3; };
struct __attribute__((packed)) aS_F_Uc { short v1; float v2; unsigned char v3; };
struct __attribute__((packed)) aS_F_Ui { short v1; float v2; unsigned int v3; };
struct __attribute__((packed)) aS_F_Ul { short v1; float v2; unsigned long long v3; };
struct __attribute__((packed)) aS_F_Us { short v1; float v2; unsigned short v3; };
struct __attribute__((packed)) aS_F_Vp { short v1; float v2; void * v3; };
struct __attribute__((packed)) aS_I { short v1; int v2; };
struct __attribute__((packed)) aS_I_BFu15i { short v1; int v2; unsigned int v3:15; };
struct __attribute__((packed)) aS_I_BFu15ll { short v1; int v2; unsigned long long v3:15; };
struct __attribute__((packed)) aS_I_BFu15s { short v1; int v2; unsigned short v3:15; };
struct __attribute__((packed)) aS_I_BFu16i { short v1; int v2; unsigned int v3:16; };
struct __attribute__((packed)) aS_I_BFu16ll { short v1; int v2; unsigned long long v3:16; };
struct __attribute__((packed)) aS_I_BFu16s { short v1; int v2; unsigned short v3:16; };
struct __attribute__((packed)) aS_I_BFu17i { short v1; int v2; unsigned int v3:17; };
struct __attribute__((packed)) aS_I_BFu17ll { short v1; int v2; unsigned long long v3:17; };
struct __attribute__((packed)) aS_I_BFu1c { short v1; int v2; unsigned char v3:1; };
struct __attribute__((packed)) aS_I_BFu1i { short v1; int v2; unsigned int v3:1; };
struct __attribute__((packed)) aS_I_BFu1ll { short v1; int v2; unsigned long long v3:1; };
struct __attribute__((packed)) aS_I_BFu1s { short v1; int v2; unsigned short v3:1; };
struct __attribute__((packed)) aS_I_BFu31i { short v1; int v2; unsigned int v3:31; };
struct __attribute__((packed)) aS_I_BFu31ll { short v1; int v2; unsigned long long v3:31; };
struct __attribute__((packed)) aS_I_BFu32i { short v1; int v2; unsigned int v3:32; };
struct __attribute__((packed)) aS_I_BFu32ll { short v1; int v2; unsigned long long v3:32; };
struct __attribute__((packed)) aS_I_BFu33 { short v1; int v2; unsigned long long v3:33; };
struct __attribute__((packed)) aS_I_BFu7c { short v1; int v2; unsigned char v3:7; };
struct __attribute__((packed)) aS_I_BFu7i { short v1; int v2; unsigned int v3:7; };
struct __attribute__((packed)) aS_I_BFu7ll { short v1; int v2; unsigned long long v3:7; };
struct __attribute__((packed)) aS_I_BFu7s { short v1; int v2; unsigned short v3:7; };
struct __attribute__((packed)) aS_I_BFu8c { short v1; int v2; unsigned char v3:8; };
struct __attribute__((packed)) aS_I_BFu8i { short v1; int v2; unsigned int v3:8; };
struct __attribute__((packed)) aS_I_BFu8ll { short v1; int v2; unsigned long long v3:8; };
struct __attribute__((packed)) aS_I_BFu8s { short v1; int v2; unsigned short v3:8; };
struct __attribute__((packed)) aS_I_BFu9i { short v1; int v2; unsigned int v3:9; };
struct __attribute__((packed)) aS_I_BFu9ll { short v1; int v2; unsigned long long v3:9; };
struct __attribute__((packed)) aS_I_BFu9s { short v1; int v2; unsigned short v3:9; };
struct __attribute__((packed)) aS_I_C { short v1; int v2; char v3; };
struct __attribute__((packed)) aS_I_D { short v1; int v2; double v3; };
struct __attribute__((packed)) aS_I_F { short v1; int v2; float v3; };
struct __attribute__((packed)) aS_I_I { short v1; int v2; int v3; };
struct __attribute__((packed)) aS_I_Ip { short v1; int v2; int * v3; };
struct __attribute__((packed)) aS_I_L { short v1; int v2; long long v3; };
struct __attribute__((packed)) aS_I_S { short v1; int v2; short v3; };
struct __attribute__((packed)) aS_I_Uc { short v1; int v2; unsigned char v3; };
struct __attribute__((packed)) aS_I_Ui { short v1; int v2; unsigned int v3; };
struct __attribute__((packed)) aS_I_Ul { short v1; int v2; unsigned long long v3; };
struct __attribute__((packed)) aS_I_Us { short v1; int v2; unsigned short v3; };
struct __attribute__((packed)) aS_I_Vp { short v1; int v2; void * v3; };
struct __attribute__((packed)) aS_Ip { short v1; int * v2; };
struct __attribute__((packed)) aS_Ip_BFu15i { short v1; int * v2; unsigned int v3:15; };
struct __attribute__((packed)) aS_Ip_BFu15ll { short v1; int * v2; unsigned long long v3:15; };
struct __attribute__((packed)) aS_Ip_BFu15s { short v1; int * v2; unsigned short v3:15; };
struct __attribute__((packed)) aS_Ip_BFu16i { short v1; int * v2; unsigned int v3:16; };
struct __attribute__((packed)) aS_Ip_BFu16ll { short v1; int * v2; unsigned long long v3:16; };
struct __attribute__((packed)) aS_Ip_BFu16s { short v1; int * v2; unsigned short v3:16; };
struct __attribute__((packed)) aS_Ip_BFu17i { short v1; int * v2; unsigned int v3:17; };
struct __attribute__((packed)) aS_Ip_BFu17ll { short v1; int * v2; unsigned long long v3:17; };
struct __attribute__((packed)) aS_Ip_BFu1c { short v1; int * v2; unsigned char v3:1; };
struct __attribute__((packed)) aS_Ip_BFu1i { short v1; int * v2; unsigned int v3:1; };
struct __attribute__((packed)) aS_Ip_BFu1ll { short v1; int * v2; unsigned long long v3:1; };
struct __attribute__((packed)) aS_Ip_BFu1s { short v1; int * v2; unsigned short v3:1; };
struct __attribute__((packed)) aS_Ip_BFu31i { short v1; int * v2; unsigned int v3:31; };
struct __attribute__((packed)) aS_Ip_BFu31ll { short v1; int * v2; unsigned long long v3:31; };
struct __attribute__((packed)) aS_Ip_BFu32i { short v1; int * v2; unsigned int v3:32; };
struct __attribute__((packed)) aS_Ip_BFu32ll { short v1; int * v2; unsigned long long v3:32; };
struct __attribute__((packed)) aS_Ip_BFu33 { short v1; int * v2; unsigned long long v3:33; };
struct __attribute__((packed)) aS_Ip_BFu7c { short v1; int * v2; unsigned char v3:7; };
struct __attribute__((packed)) aS_Ip_BFu7i { short v1; int * v2; unsigned int v3:7; };
struct __attribute__((packed)) aS_Ip_BFu7ll { short v1; int * v2; unsigned long long v3:7; };
struct __attribute__((packed)) aS_Ip_BFu7s { short v1; int * v2; unsigned short v3:7; };
struct __attribute__((packed)) aS_Ip_BFu8c { short v1; int * v2; unsigned char v3:8; };
struct __attribute__((packed)) aS_Ip_BFu8i { short v1; int * v2; unsigned int v3:8; };
struct __attribute__((packed)) aS_Ip_BFu8ll { short v1; int * v2; unsigned long long v3:8; };
struct __attribute__((packed)) aS_Ip_BFu8s { short v1; int * v2; unsigned short v3:8; };
struct __attribute__((packed)) aS_Ip_BFu9i { short v1; int * v2; unsigned int v3:9; };
struct __attribute__((packed)) aS_Ip_BFu9ll { short v1; int * v2; unsigned long long v3:9; };
struct __attribute__((packed)) aS_Ip_BFu9s { short v1; int * v2; unsigned short v3:9; };
struct __attribute__((packed)) aS_Ip_C { short v1; int * v2; char v3; };
struct __attribute__((packed)) aS_Ip_D { short v1; int * v2; double v3; };
struct __attribute__((packed)) aS_Ip_F { short v1; int * v2; float v3; };
struct __attribute__((packed)) aS_Ip_I { short v1; int * v2; int v3; };
struct __attribute__((packed)) aS_Ip_Ip { short v1; int * v2; int * v3; };
struct __attribute__((packed)) aS_Ip_L { short v1; int * v2; long long v3; };
struct __attribute__((packed)) aS_Ip_S { short v1; int * v2; short v3; };
struct __attribute__((packed)) aS_Ip_Uc { short v1; int * v2; unsigned char v3; };
struct __attribute__((packed)) aS_Ip_Ui { short v1; int * v2; unsigned int v3; };
struct __attribute__((packed)) aS_Ip_Ul { short v1; int * v2; unsigned long long v3; };
struct __attribute__((packed)) aS_Ip_Us { short v1; int * v2; unsigned short v3; };
struct __attribute__((packed)) aS_Ip_Vp { short v1; int * v2; void * v3; };
struct __attribute__((packed)) aS_L { short v1; long long v2; };
struct __attribute__((packed)) aS_L_BFu15i { short v1; long long v2; unsigned int v3:15; };
struct __attribute__((packed)) aS_L_BFu15ll { short v1; long long v2; unsigned long long v3:15; };
struct __attribute__((packed)) aS_L_BFu15s { short v1; long long v2; unsigned short v3:15; };
struct __attribute__((packed)) aS_L_BFu16i { short v1; long long v2; unsigned int v3:16; };
struct __attribute__((packed)) aS_L_BFu16ll { short v1; long long v2; unsigned long long v3:16; };
struct __attribute__((packed)) aS_L_BFu16s { short v1; long long v2; unsigned short v3:16; };
struct __attribute__((packed)) aS_L_BFu17i { short v1; long long v2; unsigned int v3:17; };
struct __attribute__((packed)) aS_L_BFu17ll { short v1; long long v2; unsigned long long v3:17; };
struct __attribute__((packed)) aS_L_BFu1c { short v1; long long v2; unsigned char v3:1; };
struct __attribute__((packed)) aS_L_BFu1i { short v1; long long v2; unsigned int v3:1; };
struct __attribute__((packed)) aS_L_BFu1ll { short v1; long long v2; unsigned long long v3:1; };
struct __attribute__((packed)) aS_L_BFu1s { short v1; long long v2; unsigned short v3:1; };
struct __attribute__((packed)) aS_L_BFu31i { short v1; long long v2; unsigned int v3:31; };
struct __attribute__((packed)) aS_L_BFu31ll { short v1; long long v2; unsigned long long v3:31; };
struct __attribute__((packed)) aS_L_BFu32i { short v1; long long v2; unsigned int v3:32; };
struct __attribute__((packed)) aS_L_BFu32ll { short v1; long long v2; unsigned long long v3:32; };
struct __attribute__((packed)) aS_L_BFu33 { short v1; long long v2; unsigned long long v3:33; };
struct __attribute__((packed)) aS_L_BFu7c { short v1; long long v2; unsigned char v3:7; };
struct __attribute__((packed)) aS_L_BFu7i { short v1; long long v2; unsigned int v3:7; };
struct __attribute__((packed)) aS_L_BFu7ll { short v1; long long v2; unsigned long long v3:7; };
struct __attribute__((packed)) aS_L_BFu7s { short v1; long long v2; unsigned short v3:7; };
struct __attribute__((packed)) aS_L_BFu8c { short v1; long long v2; unsigned char v3:8; };
struct __attribute__((packed)) aS_L_BFu8i { short v1; long long v2; unsigned int v3:8; };
struct __attribute__((packed)) aS_L_BFu8ll { short v1; long long v2; unsigned long long v3:8; };
struct __attribute__((packed)) aS_L_BFu8s { short v1; long long v2; unsigned short v3:8; };
struct __attribute__((packed)) aS_L_BFu9i { short v1; long long v2; unsigned int v3:9; };
struct __attribute__((packed)) aS_L_BFu9ll { short v1; long long v2; unsigned long long v3:9; };
struct __attribute__((packed)) aS_L_BFu9s { short v1; long long v2; unsigned short v3:9; };
struct __attribute__((packed)) aS_L_C { short v1; long long v2; char v3; };
struct __attribute__((packed)) aS_L_D { short v1; long long v2; double v3; };
struct __attribute__((packed)) aS_L_F { short v1; long long v2; float v3; };
struct __attribute__((packed)) aS_L_I { short v1; long long v2; int v3; };
struct __attribute__((packed)) aS_L_Ip { short v1; long long v2; int * v3; };
struct __attribute__((packed)) aS_L_L { short v1; long long v2; long long v3; };
struct __attribute__((packed)) aS_L_S { short v1; long long v2; short v3; };
struct __attribute__((packed)) aS_L_Uc { short v1; long long v2; unsigned char v3; };
struct __attribute__((packed)) aS_L_Ui { short v1; long long v2; unsigned int v3; };
struct __attribute__((packed)) aS_L_Ul { short v1; long long v2; unsigned long long v3; };
struct __attribute__((packed)) aS_L_Us { short v1; long long v2; unsigned short v3; };
struct __attribute__((packed)) aS_L_Vp { short v1; long long v2; void * v3; };
struct __attribute__((packed)) aS_S { short v1; short v2; };
struct __attribute__((packed)) aS_S_BFu15i { short v1; short v2; unsigned int v3:15; };
struct __attribute__((packed)) aS_S_BFu15ll { short v1; short v2; unsigned long long v3:15; };
struct __attribute__((packed)) aS_S_BFu15s { short v1; short v2; unsigned short v3:15; };
struct __attribute__((packed)) aS_S_BFu16i { short v1; short v2; unsigned int v3:16; };
struct __attribute__((packed)) aS_S_BFu16ll { short v1; short v2; unsigned long long v3:16; };
struct __attribute__((packed)) aS_S_BFu16s { short v1; short v2; unsigned short v3:16; };
struct __attribute__((packed)) aS_S_BFu17i { short v1; short v2; unsigned int v3:17; };
struct __attribute__((packed)) aS_S_BFu17ll { short v1; short v2; unsigned long long v3:17; };
struct __attribute__((packed)) aS_S_BFu1c { short v1; short v2; unsigned char v3:1; };
struct __attribute__((packed)) aS_S_BFu1i { short v1; short v2; unsigned int v3:1; };
struct __attribute__((packed)) aS_S_BFu1ll { short v1; short v2; unsigned long long v3:1; };
struct __attribute__((packed)) aS_S_BFu1s { short v1; short v2; unsigned short v3:1; };
struct __attribute__((packed)) aS_S_BFu31i { short v1; short v2; unsigned int v3:31; };
struct __attribute__((packed)) aS_S_BFu31ll { short v1; short v2; unsigned long long v3:31; };
struct __attribute__((packed)) aS_S_BFu32i { short v1; short v2; unsigned int v3:32; };
struct __attribute__((packed)) aS_S_BFu32ll { short v1; short v2; unsigned long long v3:32; };
struct __attribute__((packed)) aS_S_BFu33 { short v1; short v2; unsigned long long v3:33; };
struct __attribute__((packed)) aS_S_BFu7c { short v1; short v2; unsigned char v3:7; };
struct __attribute__((packed)) aS_S_BFu7i { short v1; short v2; unsigned int v3:7; };
struct __attribute__((packed)) aS_S_BFu7ll { short v1; short v2; unsigned long long v3:7; };
struct __attribute__((packed)) aS_S_BFu7s { short v1; short v2; unsigned short v3:7; };
struct __attribute__((packed)) aS_S_BFu8c { short v1; short v2; unsigned char v3:8; };
struct __attribute__((packed)) aS_S_BFu8i { short v1; short v2; unsigned int v3:8; };
struct __attribute__((packed)) aS_S_BFu8ll { short v1; short v2; unsigned long long v3:8; };
struct __attribute__((packed)) aS_S_BFu8s { short v1; short v2; unsigned short v3:8; };
struct __attribute__((packed)) aS_S_BFu9i { short v1; short v2; unsigned int v3:9; };
struct __attribute__((packed)) aS_S_BFu9ll { short v1; short v2; unsigned long long v3:9; };
struct __attribute__((packed)) aS_S_BFu9s { short v1; short v2; unsigned short v3:9; };
struct __attribute__((packed)) aS_S_C { short v1; short v2; char v3; };
struct __attribute__((packed)) aS_S_D { short v1; short v2; double v3; };
struct __attribute__((packed)) aS_S_F { short v1; short v2; float v3; };
struct __attribute__((packed)) aS_S_I { short v1; short v2; int v3; };
struct __attribute__((packed)) aS_S_Ip { short v1; short v2; int * v3; };
struct __attribute__((packed)) aS_S_L { short v1; short v2; long long v3; };
struct __attribute__((packed)) aS_S_S { short v1; short v2; short v3; };
struct __attribute__((packed)) aS_S_Uc { short v1; short v2; unsigned char v3; };
struct __attribute__((packed)) aS_S_Ui { short v1; short v2; unsigned int v3; };
struct __attribute__((packed)) aS_S_Ul { short v1; short v2; unsigned long long v3; };
struct __attribute__((packed)) aS_S_Us { short v1; short v2; unsigned short v3; };
struct __attribute__((packed)) aS_S_Vp { short v1; short v2; void * v3; };
struct __attribute__((packed)) aS_Uc { short v1; unsigned char v2; };
struct __attribute__((packed)) aS_Uc_BFu15i { short v1; unsigned char v2; unsigned int v3:15; };
struct __attribute__((packed)) aS_Uc_BFu15ll { short v1; unsigned char v2; unsigned long long v3:15; };
struct __attribute__((packed)) aS_Uc_BFu15s { short v1; unsigned char v2; unsigned short v3:15; };
struct __attribute__((packed)) aS_Uc_BFu16i { short v1; unsigned char v2; unsigned int v3:16; };
struct __attribute__((packed)) aS_Uc_BFu16ll { short v1; unsigned char v2; unsigned long long v3:16; };
struct __attribute__((packed)) aS_Uc_BFu16s { short v1; unsigned char v2; unsigned short v3:16; };
struct __attribute__((packed)) aS_Uc_BFu17i { short v1; unsigned char v2; unsigned int v3:17; };
struct __attribute__((packed)) aS_Uc_BFu17ll { short v1; unsigned char v2; unsigned long long v3:17; };
struct __attribute__((packed)) aS_Uc_BFu1c { short v1; unsigned char v2; unsigned char v3:1; };
struct __attribute__((packed)) aS_Uc_BFu1i { short v1; unsigned char v2; unsigned int v3:1; };
struct __attribute__((packed)) aS_Uc_BFu1ll { short v1; unsigned char v2; unsigned long long v3:1; };
struct __attribute__((packed)) aS_Uc_BFu1s { short v1; unsigned char v2; unsigned short v3:1; };
struct __attribute__((packed)) aS_Uc_BFu31i { short v1; unsigned char v2; unsigned int v3:31; };
struct __attribute__((packed)) aS_Uc_BFu31ll { short v1; unsigned char v2; unsigned long long v3:31; };
struct __attribute__((packed)) aS_Uc_BFu32i { short v1; unsigned char v2; unsigned int v3:32; };
struct __attribute__((packed)) aS_Uc_BFu32ll { short v1; unsigned char v2; unsigned long long v3:32; };
struct __attribute__((packed)) aS_Uc_BFu33 { short v1; unsigned char v2; unsigned long long v3:33; };
struct __attribute__((packed)) aS_Uc_BFu7c { short v1; unsigned char v2; unsigned char v3:7; };
struct __attribute__((packed)) aS_Uc_BFu7i { short v1; unsigned char v2; unsigned int v3:7; };
struct __attribute__((packed)) aS_Uc_BFu7ll { short v1; unsigned char v2; unsigned long long v3:7; };
struct __attribute__((packed)) aS_Uc_BFu7s { short v1; unsigned char v2; unsigned short v3:7; };
struct __attribute__((packed)) aS_Uc_BFu8c { short v1; unsigned char v2; unsigned char v3:8; };
struct __attribute__((packed)) aS_Uc_BFu8i { short v1; unsigned char v2; unsigned int v3:8; };
struct __attribute__((packed)) aS_Uc_BFu8ll { short v1; unsigned char v2; unsigned long long v3:8; };
struct __attribute__((packed)) aS_Uc_BFu8s { short v1; unsigned char v2; unsigned short v3:8; };
struct __attribute__((packed)) aS_Uc_BFu9i { short v1; unsigned char v2; unsigned int v3:9; };
struct __attribute__((packed)) aS_Uc_BFu9ll { short v1; unsigned char v2; unsigned long long v3:9; };
struct __attribute__((packed)) aS_Uc_BFu9s { short v1; unsigned char v2; unsigned short v3:9; };
struct __attribute__((packed)) aS_Uc_C { short v1; unsigned char v2; char v3; };
struct __attribute__((packed)) aS_Uc_D { short v1; unsigned char v2; double v3; };
struct __attribute__((packed)) aS_Uc_F { short v1; unsigned char v2; float v3; };
struct __attribute__((packed)) aS_Uc_I { short v1; unsigned char v2; int v3; };
struct __attribute__((packed)) aS_Uc_Ip { short v1; unsigned char v2; int * v3; };
struct __attribute__((packed)) aS_Uc_L { short v1; unsigned char v2; long long v3; };
struct __attribute__((packed)) aS_Uc_S { short v1; unsigned char v2; short v3; };
struct __attribute__((packed)) aS_Uc_Uc { short v1; unsigned char v2; unsigned char v3; };
struct __attribute__((packed)) aS_Uc_Ui { short v1; unsigned char v2; unsigned int v3; };
struct __attribute__((packed)) aS_Uc_Ul { short v1; unsigned char v2; unsigned long long v3; };
struct __attribute__((packed)) aS_Uc_Us { short v1; unsigned char v2; unsigned short v3; };
struct __attribute__((packed)) aS_Uc_Vp { short v1; unsigned char v2; void * v3; };
struct __attribute__((packed)) aS_Ui { short v1; unsigned int v2; };
struct __attribute__((packed)) aS_Ui_BFu15i { short v1; unsigned int v2; unsigned int v3:15; };
struct __attribute__((packed)) aS_Ui_BFu15ll { short v1; unsigned int v2; unsigned long long v3:15; };
struct __attribute__((packed)) aS_Ui_BFu15s { short v1; unsigned int v2; unsigned short v3:15; };
struct __attribute__((packed)) aS_Ui_BFu16i { short v1; unsigned int v2; unsigned int v3:16; };
struct __attribute__((packed)) aS_Ui_BFu16ll { short v1; unsigned int v2; unsigned long long v3:16; };
struct __attribute__((packed)) aS_Ui_BFu16s { short v1; unsigned int v2; unsigned short v3:16; };
struct __attribute__((packed)) aS_Ui_BFu17i { short v1; unsigned int v2; unsigned int v3:17; };
struct __attribute__((packed)) aS_Ui_BFu17ll { short v1; unsigned int v2; unsigned long long v3:17; };
struct __attribute__((packed)) aS_Ui_BFu1c { short v1; unsigned int v2; unsigned char v3:1; };
struct __attribute__((packed)) aS_Ui_BFu1i { short v1; unsigned int v2; unsigned int v3:1; };
struct __attribute__((packed)) aS_Ui_BFu1ll { short v1; unsigned int v2; unsigned long long v3:1; };
struct __attribute__((packed)) aS_Ui_BFu1s { short v1; unsigned int v2; unsigned short v3:1; };
struct __attribute__((packed)) aS_Ui_BFu31i { short v1; unsigned int v2; unsigned int v3:31; };
struct __attribute__((packed)) aS_Ui_BFu31ll { short v1; unsigned int v2; unsigned long long v3:31; };
struct __attribute__((packed)) aS_Ui_BFu32i { short v1; unsigned int v2; unsigned int v3:32; };
struct __attribute__((packed)) aS_Ui_BFu32ll { short v1; unsigned int v2; unsigned long long v3:32; };
struct __attribute__((packed)) aS_Ui_BFu33 { short v1; unsigned int v2; unsigned long long v3:33; };
struct __attribute__((packed)) aS_Ui_BFu7c { short v1; unsigned int v2; unsigned char v3:7; };
struct __attribute__((packed)) aS_Ui_BFu7i { short v1; unsigned int v2; unsigned int v3:7; };
struct __attribute__((packed)) aS_Ui_BFu7ll { short v1; unsigned int v2; unsigned long long v3:7; };
struct __attribute__((packed)) aS_Ui_BFu7s { short v1; unsigned int v2; unsigned short v3:7; };
struct __attribute__((packed)) aS_Ui_BFu8c { short v1; unsigned int v2; unsigned char v3:8; };
struct __attribute__((packed)) aS_Ui_BFu8i { short v1; unsigned int v2; unsigned int v3:8; };
struct __attribute__((packed)) aS_Ui_BFu8ll { short v1; unsigned int v2; unsigned long long v3:8; };
struct __attribute__((packed)) aS_Ui_BFu8s { short v1; unsigned int v2; unsigned short v3:8; };
struct __attribute__((packed)) aS_Ui_BFu9i { short v1; unsigned int v2; unsigned int v3:9; };
struct __attribute__((packed)) aS_Ui_BFu9ll { short v1; unsigned int v2; unsigned long long v3:9; };
struct __attribute__((packed)) aS_Ui_BFu9s { short v1; unsigned int v2; unsigned short v3:9; };
struct __attribute__((packed)) aS_Ui_C { short v1; unsigned int v2; char v3; };
struct __attribute__((packed)) aS_Ui_D { short v1; unsigned int v2; double v3; };
struct __attribute__((packed)) aS_Ui_F { short v1; unsigned int v2; float v3; };
struct __attribute__((packed)) aS_Ui_I { short v1; unsigned int v2; int v3; };
struct __attribute__((packed)) aS_Ui_Ip { short v1; unsigned int v2; int * v3; };
struct __attribute__((packed)) aS_Ui_L { short v1; unsigned int v2; long long v3; };
struct __attribute__((packed)) aS_Ui_S { short v1; unsigned int v2; short v3; };
struct __attribute__((packed)) aS_Ui_Uc { short v1; unsigned int v2; unsigned char v3; };
struct __attribute__((packed)) aS_Ui_Ui { short v1; unsigned int v2; unsigned int v3; };
struct __attribute__((packed)) aS_Ui_Ul { short v1; unsigned int v2; unsigned long long v3; };
struct __attribute__((packed)) aS_Ui_Us { short v1; unsigned int v2; unsigned short v3; };
struct __attribute__((packed)) aS_Ui_Vp { short v1; unsigned int v2; void * v3; };
struct __attribute__((packed)) aS_Ul { short v1; unsigned long long v2; };
struct __attribute__((packed)) aS_Ul_BFu15i { short v1; unsigned long long v2; unsigned int v3:15; };
struct __attribute__((packed)) aS_Ul_BFu15ll { short v1; unsigned long long v2; unsigned long long v3:15; };
struct __attribute__((packed)) aS_Ul_BFu15s { short v1; unsigned long long v2; unsigned short v3:15; };
struct __attribute__((packed)) aS_Ul_BFu16i { short v1; unsigned long long v2; unsigned int v3:16; };
struct __attribute__((packed)) aS_Ul_BFu16ll { short v1; unsigned long long v2; unsigned long long v3:16; };
struct __attribute__((packed)) aS_Ul_BFu16s { short v1; unsigned long long v2; unsigned short v3:16; };
struct __attribute__((packed)) aS_Ul_BFu17i { short v1; unsigned long long v2; unsigned int v3:17; };
struct __attribute__((packed)) aS_Ul_BFu17ll { short v1; unsigned long long v2; unsigned long long v3:17; };
struct __attribute__((packed)) aS_Ul_BFu1c { short v1; unsigned long long v2; unsigned char v3:1; };
struct __attribute__((packed)) aS_Ul_BFu1i { short v1; unsigned long long v2; unsigned int v3:1; };
struct __attribute__((packed)) aS_Ul_BFu1ll { short v1; unsigned long long v2; unsigned long long v3:1; };
struct __attribute__((packed)) aS_Ul_BFu1s { short v1; unsigned long long v2; unsigned short v3:1; };
struct __attribute__((packed)) aS_Ul_BFu31i { short v1; unsigned long long v2; unsigned int v3:31; };
struct __attribute__((packed)) aS_Ul_BFu31ll { short v1; unsigned long long v2; unsigned long long v3:31; };
struct __attribute__((packed)) aS_Ul_BFu32i { short v1; unsigned long long v2; unsigned int v3:32; };
struct __attribute__((packed)) aS_Ul_BFu32ll { short v1; unsigned long long v2; unsigned long long v3:32; };
struct __attribute__((packed)) aS_Ul_BFu33 { short v1; unsigned long long v2; unsigned long long v3:33; };
struct __attribute__((packed)) aS_Ul_BFu7c { short v1; unsigned long long v2; unsigned char v3:7; };
struct __attribute__((packed)) aS_Ul_BFu7i { short v1; unsigned long long v2; unsigned int v3:7; };
struct __attribute__((packed)) aS_Ul_BFu7ll { short v1; unsigned long long v2; unsigned long long v3:7; };
struct __attribute__((packed)) aS_Ul_BFu7s { short v1; unsigned long long v2; unsigned short v3:7; };
struct __attribute__((packed)) aS_Ul_BFu8c { short v1; unsigned long long v2; unsigned char v3:8; };
struct __attribute__((packed)) aS_Ul_BFu8i { short v1; unsigned long long v2; unsigned int v3:8; };
struct __attribute__((packed)) aS_Ul_BFu8ll { short v1; unsigned long long v2; unsigned long long v3:8; };
struct __attribute__((packed)) aS_Ul_BFu8s { short v1; unsigned long long v2; unsigned short v3:8; };
struct __attribute__((packed)) aS_Ul_BFu9i { short v1; unsigned long long v2; unsigned int v3:9; };
struct __attribute__((packed)) aS_Ul_BFu9ll { short v1; unsigned long long v2; unsigned long long v3:9; };
struct __attribute__((packed)) aS_Ul_BFu9s { short v1; unsigned long long v2; unsigned short v3:9; };
struct __attribute__((packed)) aS_Ul_C { short v1; unsigned long long v2; char v3; };
struct __attribute__((packed)) aS_Ul_D { short v1; unsigned long long v2; double v3; };
struct __attribute__((packed)) aS_Ul_F { short v1; unsigned long long v2; float v3; };
struct __attribute__((packed)) aS_Ul_I { short v1; unsigned long long v2; int v3; };
struct __attribute__((packed)) aS_Ul_Ip { short v1; unsigned long long v2; int * v3; };
struct __attribute__((packed)) aS_Ul_L { short v1; unsigned long long v2; long long v3; };
struct __attribute__((packed)) aS_Ul_S { short v1; unsigned long long v2; short v3; };
struct __attribute__((packed)) aS_Ul_Uc { short v1; unsigned long long v2; unsigned char v3; };
struct __attribute__((packed)) aS_Ul_Ui { short v1; unsigned long long v2; unsigned int v3; };
struct __attribute__((packed)) aS_Ul_Ul { short v1; unsigned long long v2; unsigned long long v3; };
struct __attribute__((packed)) aS_Ul_Us { short v1; unsigned long long v2; unsigned short v3; };
struct __attribute__((packed)) aS_Ul_Vp { short v1; unsigned long long v2; void * v3; };
struct __attribute__((packed)) aS_Us { short v1; unsigned short v2; };
struct __attribute__((packed)) aS_Us_BFu15i { short v1; unsigned short v2; unsigned int v3:15; };
struct __attribute__((packed)) aS_Us_BFu15ll { short v1; unsigned short v2; unsigned long long v3:15; };
struct __attribute__((packed)) aS_Us_BFu15s { short v1; unsigned short v2; unsigned short v3:15; };
struct __attribute__((packed)) aS_Us_BFu16i { short v1; unsigned short v2; unsigned int v3:16; };
struct __attribute__((packed)) aS_Us_BFu16ll { short v1; unsigned short v2; unsigned long long v3:16; };
struct __attribute__((packed)) aS_Us_BFu16s { short v1; unsigned short v2; unsigned short v3:16; };
struct __attribute__((packed)) aS_Us_BFu17i { short v1; unsigned short v2; unsigned int v3:17; };
struct __attribute__((packed)) aS_Us_BFu17ll { short v1; unsigned short v2; unsigned long long v3:17; };
struct __attribute__((packed)) aS_Us_BFu1c { short v1; unsigned short v2; unsigned char v3:1; };
struct __attribute__((packed)) aS_Us_BFu1i { short v1; unsigned short v2; unsigned int v3:1; };
struct __attribute__((packed)) aS_Us_BFu1ll { short v1; unsigned short v2; unsigned long long v3:1; };
struct __attribute__((packed)) aS_Us_BFu1s { short v1; unsigned short v2; unsigned short v3:1; };
struct __attribute__((packed)) aS_Us_BFu31i { short v1; unsigned short v2; unsigned int v3:31; };
struct __attribute__((packed)) aS_Us_BFu31ll { short v1; unsigned short v2; unsigned long long v3:31; };
struct __attribute__((packed)) aS_Us_BFu32i { short v1; unsigned short v2; unsigned int v3:32; };
struct __attribute__((packed)) aS_Us_BFu32ll { short v1; unsigned short v2; unsigned long long v3:32; };
struct __attribute__((packed)) aS_Us_BFu33 { short v1; unsigned short v2; unsigned long long v3:33; };
struct __attribute__((packed)) aS_Us_BFu7c { short v1; unsigned short v2; unsigned char v3:7; };
struct __attribute__((packed)) aS_Us_BFu7i { short v1; unsigned short v2; unsigned int v3:7; };
struct __attribute__((packed)) aS_Us_BFu7ll { short v1; unsigned short v2; unsigned long long v3:7; };
struct __attribute__((packed)) aS_Us_BFu7s { short v1; unsigned short v2; unsigned short v3:7; };
struct __attribute__((packed)) aS_Us_BFu8c { short v1; unsigned short v2; unsigned char v3:8; };
struct __attribute__((packed)) aS_Us_BFu8i { short v1; unsigned short v2; unsigned int v3:8; };
struct __attribute__((packed)) aS_Us_BFu8ll { short v1; unsigned short v2; unsigned long long v3:8; };
struct __attribute__((packed)) aS_Us_BFu8s { short v1; unsigned short v2; unsigned short v3:8; };
struct __attribute__((packed)) aS_Us_BFu9i { short v1; unsigned short v2; unsigned int v3:9; };
struct __attribute__((packed)) aS_Us_BFu9ll { short v1; unsigned short v2; unsigned long long v3:9; };
struct __attribute__((packed)) aS_Us_BFu9s { short v1; unsigned short v2; unsigned short v3:9; };
struct __attribute__((packed)) aS_Us_C { short v1; unsigned short v2; char v3; };
struct __attribute__((packed)) aS_Us_D { short v1; unsigned short v2; double v3; };
struct __attribute__((packed)) aS_Us_F { short v1; unsigned short v2; float v3; };
struct __attribute__((packed)) aS_Us_I { short v1; unsigned short v2; int v3; };
struct __attribute__((packed)) aS_Us_Ip { short v1; unsigned short v2; int * v3; };
struct __attribute__((packed)) aS_Us_L { short v1; unsigned short v2; long long v3; };
struct __attribute__((packed)) aS_Us_S { short v1; unsigned short v2; short v3; };
struct __attribute__((packed)) aS_Us_Uc { short v1; unsigned short v2; unsigned char v3; };
struct __attribute__((packed)) aS_Us_Ui { short v1; unsigned short v2; unsigned int v3; };
struct __attribute__((packed)) aS_Us_Ul { short v1; unsigned short v2; unsigned long long v3; };
struct __attribute__((packed)) aS_Us_Us { short v1; unsigned short v2; unsigned short v3; };
struct __attribute__((packed)) aS_Us_Vp { short v1; unsigned short v2; void * v3; };
struct __attribute__((packed)) aS_Vp { short v1; void * v2; };
struct __attribute__((packed)) aS_Vp_BFu15i { short v1; void * v2; unsigned int v3:15; };
struct __attribute__((packed)) aS_Vp_BFu15ll { short v1; void * v2; unsigned long long v3:15; };
struct __attribute__((packed)) aS_Vp_BFu15s { short v1; void * v2; unsigned short v3:15; };
struct __attribute__((packed)) aS_Vp_BFu16i { short v1; void * v2; unsigned int v3:16; };
struct __attribute__((packed)) aS_Vp_BFu16ll { short v1; void * v2; unsigned long long v3:16; };
struct __attribute__((packed)) aS_Vp_BFu16s { short v1; void * v2; unsigned short v3:16; };
struct __attribute__((packed)) aS_Vp_BFu17i { short v1; void * v2; unsigned int v3:17; };
struct __attribute__((packed)) aS_Vp_BFu17ll { short v1; void * v2; unsigned long long v3:17; };
struct __attribute__((packed)) aS_Vp_BFu1c { short v1; void * v2; unsigned char v3:1; };
struct __attribute__((packed)) aS_Vp_BFu1i { short v1; void * v2; unsigned int v3:1; };
struct __attribute__((packed)) aS_Vp_BFu1ll { short v1; void * v2; unsigned long long v3:1; };
struct __attribute__((packed)) aS_Vp_BFu1s { short v1; void * v2; unsigned short v3:1; };
struct __attribute__((packed)) aS_Vp_BFu31i { short v1; void * v2; unsigned int v3:31; };
struct __attribute__((packed)) aS_Vp_BFu31ll { short v1; void * v2; unsigned long long v3:31; };
struct __attribute__((packed)) aS_Vp_BFu32i { short v1; void * v2; unsigned int v3:32; };
struct __attribute__((packed)) aS_Vp_BFu32ll { short v1; void * v2; unsigned long long v3:32; };
struct __attribute__((packed)) aS_Vp_BFu33 { short v1; void * v2; unsigned long long v3:33; };
struct __attribute__((packed)) aS_Vp_BFu7c { short v1; void * v2; unsigned char v3:7; };
struct __attribute__((packed)) aS_Vp_BFu7i { short v1; void * v2; unsigned int v3:7; };
struct __attribute__((packed)) aS_Vp_BFu7ll { short v1; void * v2; unsigned long long v3:7; };
struct __attribute__((packed)) aS_Vp_BFu7s { short v1; void * v2; unsigned short v3:7; };
struct __attribute__((packed)) aS_Vp_BFu8c { short v1; void * v2; unsigned char v3:8; };
struct __attribute__((packed)) aS_Vp_BFu8i { short v1; void * v2; unsigned int v3:8; };
struct __attribute__((packed)) aS_Vp_BFu8ll { short v1; void * v2; unsigned long long v3:8; };
struct __attribute__((packed)) aS_Vp_BFu8s { short v1; void * v2; unsigned short v3:8; };
struct __attribute__((packed)) aS_Vp_BFu9i { short v1; void * v2; unsigned int v3:9; };
struct __attribute__((packed)) aS_Vp_BFu9ll { short v1; void * v2; unsigned long long v3:9; };
struct __attribute__((packed)) aS_Vp_BFu9s { short v1; void * v2; unsigned short v3:9; };
struct __attribute__((packed)) aS_Vp_C { short v1; void * v2; char v3; };
struct __attribute__((packed)) aS_Vp_D { short v1; void * v2; double v3; };
struct __attribute__((packed)) aS_Vp_F { short v1; void * v2; float v3; };
struct __attribute__((packed)) aS_Vp_I { short v1; void * v2; int v3; };
struct __attribute__((packed)) aS_Vp_Ip { short v1; void * v2; int * v3; };
struct __attribute__((packed)) aS_Vp_L { short v1; void * v2; long long v3; };
struct __attribute__((packed)) aS_Vp_S { short v1; void * v2; short v3; };
struct __attribute__((packed)) aS_Vp_Uc { short v1; void * v2; unsigned char v3; };
struct __attribute__((packed)) aS_Vp_Ui { short v1; void * v2; unsigned int v3; };
struct __attribute__((packed)) aS_Vp_Ul { short v1; void * v2; unsigned long long v3; };
struct __attribute__((packed)) aS_Vp_Us { short v1; void * v2; unsigned short v3; };
struct __attribute__((packed)) aS_Vp_Vp { short v1; void * v2; void * v3; };
struct __attribute__((packed)) aUc { unsigned char v1; };
struct __attribute__((packed)) aUc_BFu15i { unsigned char v1; unsigned int v2:15; };
struct __attribute__((packed)) aUc_BFu15i_BFu15i { unsigned char v1; unsigned int v2:15; unsigned int v3:15; };
struct __attribute__((packed)) aUc_BFu15i_BFu15ll { unsigned char v1; unsigned int v2:15; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_BFu15i_BFu15s { unsigned char v1; unsigned int v2:15; unsigned short v3:15; };
struct __attribute__((packed)) aUc_BFu15i_BFu16i { unsigned char v1; unsigned int v2:15; unsigned int v3:16; };
struct __attribute__((packed)) aUc_BFu15i_BFu16ll { unsigned char v1; unsigned int v2:15; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_BFu15i_BFu16s { unsigned char v1; unsigned int v2:15; unsigned short v3:16; };
struct __attribute__((packed)) aUc_BFu15i_BFu17i { unsigned char v1; unsigned int v2:15; unsigned int v3:17; };
struct __attribute__((packed)) aUc_BFu15i_BFu17ll { unsigned char v1; unsigned int v2:15; unsigned long long v3:17; };
struct __attribute__((packed)) aUc_BFu15i_BFu1c { unsigned char v1; unsigned int v2:15; unsigned char v3:1; };
struct __attribute__((packed)) aUc_BFu15i_BFu1i { unsigned char v1; unsigned int v2:15; unsigned int v3:1; };
struct __attribute__((packed)) aUc_BFu15i_BFu1ll { unsigned char v1; unsigned int v2:15; unsigned long long v3:1; };
struct __attribute__((packed)) aUc_BFu15i_BFu1s { unsigned char v1; unsigned int v2:15; unsigned short v3:1; };
struct __attribute__((packed)) aUc_BFu15i_BFu31i { unsigned char v1; unsigned int v2:15; unsigned int v3:31; };
struct __attribute__((packed)) aUc_BFu15i_BFu31ll { unsigned char v1; unsigned int v2:15; unsigned long long v3:31; };
struct __attribute__((packed)) aUc_BFu15i_BFu32i { unsigned char v1; unsigned int v2:15; unsigned int v3:32; };
struct __attribute__((packed)) aUc_BFu15i_BFu32ll { unsigned char v1; unsigned int v2:15; unsigned long long v3:32; };
struct __attribute__((packed)) aUc_BFu15i_BFu33 { unsigned char v1; unsigned int v2:15; unsigned long long v3:33; };
struct __attribute__((packed)) aUc_BFu15i_BFu7c { unsigned char v1; unsigned int v2:15; unsigned char v3:7; };
struct __attribute__((packed)) aUc_BFu15i_BFu7i { unsigned char v1; unsigned int v2:15; unsigned int v3:7; };
struct __attribute__((packed)) aUc_BFu15i_BFu7ll { unsigned char v1; unsigned int v2:15; unsigned long long v3:7; };
struct __attribute__((packed)) aUc_BFu15i_BFu7s { unsigned char v1; unsigned int v2:15; unsigned short v3:7; };
struct __attribute__((packed)) aUc_BFu15i_BFu8c { unsigned char v1; unsigned int v2:15; unsigned char v3:8; };
struct __attribute__((packed)) aUc_BFu15i_BFu8i { unsigned char v1; unsigned int v2:15; unsigned int v3:8; };
struct __attribute__((packed)) aUc_BFu15i_BFu8ll { unsigned char v1; unsigned int v2:15; unsigned long long v3:8; };
struct __attribute__((packed)) aUc_BFu15i_BFu8s { unsigned char v1; unsigned int v2:15; unsigned short v3:8; };
struct __attribute__((packed)) aUc_BFu15i_BFu9i { unsigned char v1; unsigned int v2:15; unsigned int v3:9; };
struct __attribute__((packed)) aUc_BFu15i_BFu9ll { unsigned char v1; unsigned int v2:15; unsigned long long v3:9; };
struct __attribute__((packed)) aUc_BFu15i_BFu9s { unsigned char v1; unsigned int v2:15; unsigned short v3:9; };
struct __attribute__((packed)) aUc_BFu15i_C { unsigned char v1; unsigned int v2:15; char v3; };
struct __attribute__((packed)) aUc_BFu15i_D { unsigned char v1; unsigned int v2:15; double v3; };
struct __attribute__((packed)) aUc_BFu15i_F { unsigned char v1; unsigned int v2:15; float v3; };
struct __attribute__((packed)) aUc_BFu15i_I { unsigned char v1; unsigned int v2:15; int v3; };
struct __attribute__((packed)) aUc_BFu15i_Ip { unsigned char v1; unsigned int v2:15; int * v3; };
struct __attribute__((packed)) aUc_BFu15i_L { unsigned char v1; unsigned int v2:15; long long v3; };
struct __attribute__((packed)) aUc_BFu15i_S { unsigned char v1; unsigned int v2:15; short v3; };
struct __attribute__((packed)) aUc_BFu15i_Uc { unsigned char v1; unsigned int v2:15; unsigned char v3; };
struct __attribute__((packed)) aUc_BFu15i_Ui { unsigned char v1; unsigned int v2:15; unsigned int v3; };
struct __attribute__((packed)) aUc_BFu15i_Ul { unsigned char v1; unsigned int v2:15; unsigned long long v3; };
struct __attribute__((packed)) aUc_BFu15i_Us { unsigned char v1; unsigned int v2:15; unsigned short v3; };
struct __attribute__((packed)) aUc_BFu15i_Vp { unsigned char v1; unsigned int v2:15; void * v3; };
struct __attribute__((packed)) aUc_BFu15ll { unsigned char v1; unsigned long long v2:15; };
struct __attribute__((packed)) aUc_BFu15ll_BFu15i { unsigned char v1; unsigned long long v2:15; unsigned int v3:15; };
struct __attribute__((packed)) aUc_BFu15ll_BFu15ll { unsigned char v1; unsigned long long v2:15; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_BFu15ll_BFu15s { unsigned char v1; unsigned long long v2:15; unsigned short v3:15; };
struct __attribute__((packed)) aUc_BFu15ll_BFu16i { unsigned char v1; unsigned long long v2:15; unsigned int v3:16; };
struct __attribute__((packed)) aUc_BFu15ll_BFu16ll { unsigned char v1; unsigned long long v2:15; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_BFu15ll_BFu16s { unsigned char v1; unsigned long long v2:15; unsigned short v3:16; };
struct __attribute__((packed)) aUc_BFu15ll_BFu17i { unsigned char v1; unsigned long long v2:15; unsigned int v3:17; };
struct __attribute__((packed)) aUc_BFu15ll_BFu17ll { unsigned char v1; unsigned long long v2:15; unsigned long long v3:17; };
struct __attribute__((packed)) aUc_BFu15ll_BFu1c { unsigned char v1; unsigned long long v2:15; unsigned char v3:1; };
struct __attribute__((packed)) aUc_BFu15ll_BFu1i { unsigned char v1; unsigned long long v2:15; unsigned int v3:1; };
struct __attribute__((packed)) aUc_BFu15ll_BFu1ll { unsigned char v1; unsigned long long v2:15; unsigned long long v3:1; };
struct __attribute__((packed)) aUc_BFu15ll_BFu1s { unsigned char v1; unsigned long long v2:15; unsigned short v3:1; };
struct __attribute__((packed)) aUc_BFu15ll_BFu31i { unsigned char v1; unsigned long long v2:15; unsigned int v3:31; };
struct __attribute__((packed)) aUc_BFu15ll_BFu31ll { unsigned char v1; unsigned long long v2:15; unsigned long long v3:31; };
struct __attribute__((packed)) aUc_BFu15ll_BFu32i { unsigned char v1; unsigned long long v2:15; unsigned int v3:32; };
struct __attribute__((packed)) aUc_BFu15ll_BFu32ll { unsigned char v1; unsigned long long v2:15; unsigned long long v3:32; };
struct __attribute__((packed)) aUc_BFu15ll_BFu33 { unsigned char v1; unsigned long long v2:15; unsigned long long v3:33; };
struct __attribute__((packed)) aUc_BFu15ll_BFu7c { unsigned char v1; unsigned long long v2:15; unsigned char v3:7; };
struct __attribute__((packed)) aUc_BFu15ll_BFu7i { unsigned char v1; unsigned long long v2:15; unsigned int v3:7; };
struct __attribute__((packed)) aUc_BFu15ll_BFu7ll { unsigned char v1; unsigned long long v2:15; unsigned long long v3:7; };
struct __attribute__((packed)) aUc_BFu15ll_BFu7s { unsigned char v1; unsigned long long v2:15; unsigned short v3:7; };
struct __attribute__((packed)) aUc_BFu15ll_BFu8c { unsigned char v1; unsigned long long v2:15; unsigned char v3:8; };
struct __attribute__((packed)) aUc_BFu15ll_BFu8i { unsigned char v1; unsigned long long v2:15; unsigned int v3:8; };
struct __attribute__((packed)) aUc_BFu15ll_BFu8ll { unsigned char v1; unsigned long long v2:15; unsigned long long v3:8; };
struct __attribute__((packed)) aUc_BFu15ll_BFu8s { unsigned char v1; unsigned long long v2:15; unsigned short v3:8; };
struct __attribute__((packed)) aUc_BFu15ll_BFu9i { unsigned char v1; unsigned long long v2:15; unsigned int v3:9; };
struct __attribute__((packed)) aUc_BFu15ll_BFu9ll { unsigned char v1; unsigned long long v2:15; unsigned long long v3:9; };
struct __attribute__((packed)) aUc_BFu15ll_BFu9s { unsigned char v1; unsigned long long v2:15; unsigned short v3:9; };
struct __attribute__((packed)) aUc_BFu15ll_C { unsigned char v1; unsigned long long v2:15; char v3; };
struct __attribute__((packed)) aUc_BFu15ll_D { unsigned char v1; unsigned long long v2:15; double v3; };
struct __attribute__((packed)) aUc_BFu15ll_F { unsigned char v1; unsigned long long v2:15; float v3; };
struct __attribute__((packed)) aUc_BFu15ll_I { unsigned char v1; unsigned long long v2:15; int v3; };
struct __attribute__((packed)) aUc_BFu15ll_Ip { unsigned char v1; unsigned long long v2:15; int * v3; };
struct __attribute__((packed)) aUc_BFu15ll_L { unsigned char v1; unsigned long long v2:15; long long v3; };
struct __attribute__((packed)) aUc_BFu15ll_S { unsigned char v1; unsigned long long v2:15; short v3; };
struct __attribute__((packed)) aUc_BFu15ll_Uc { unsigned char v1; unsigned long long v2:15; unsigned char v3; };
struct __attribute__((packed)) aUc_BFu15ll_Ui { unsigned char v1; unsigned long long v2:15; unsigned int v3; };
struct __attribute__((packed)) aUc_BFu15ll_Ul { unsigned char v1; unsigned long long v2:15; unsigned long long v3; };
struct __attribute__((packed)) aUc_BFu15ll_Us { unsigned char v1; unsigned long long v2:15; unsigned short v3; };
struct __attribute__((packed)) aUc_BFu15ll_Vp { unsigned char v1; unsigned long long v2:15; void * v3; };
struct __attribute__((packed)) aUc_BFu15s { unsigned char v1; unsigned short v2:15; };
struct __attribute__((packed)) aUc_BFu15s_BFu15i { unsigned char v1; unsigned short v2:15; unsigned int v3:15; };
struct __attribute__((packed)) aUc_BFu15s_BFu15ll { unsigned char v1; unsigned short v2:15; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_BFu15s_BFu15s { unsigned char v1; unsigned short v2:15; unsigned short v3:15; };
struct __attribute__((packed)) aUc_BFu15s_BFu16i { unsigned char v1; unsigned short v2:15; unsigned int v3:16; };
struct __attribute__((packed)) aUc_BFu15s_BFu16ll { unsigned char v1; unsigned short v2:15; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_BFu15s_BFu16s { unsigned char v1; unsigned short v2:15; unsigned short v3:16; };
struct __attribute__((packed)) aUc_BFu15s_BFu17i { unsigned char v1; unsigned short v2:15; unsigned int v3:17; };
struct __attribute__((packed)) aUc_BFu15s_BFu17ll { unsigned char v1; unsigned short v2:15; unsigned long long v3:17; };
struct __attribute__((packed)) aUc_BFu15s_BFu1c { unsigned char v1; unsigned short v2:15; unsigned char v3:1; };
struct __attribute__((packed)) aUc_BFu15s_BFu1i { unsigned char v1; unsigned short v2:15; unsigned int v3:1; };
struct __attribute__((packed)) aUc_BFu15s_BFu1ll { unsigned char v1; unsigned short v2:15; unsigned long long v3:1; };
struct __attribute__((packed)) aUc_BFu15s_BFu1s { unsigned char v1; unsigned short v2:15; unsigned short v3:1; };
struct __attribute__((packed)) aUc_BFu15s_BFu31i { unsigned char v1; unsigned short v2:15; unsigned int v3:31; };
struct __attribute__((packed)) aUc_BFu15s_BFu31ll { unsigned char v1; unsigned short v2:15; unsigned long long v3:31; };
struct __attribute__((packed)) aUc_BFu15s_BFu32i { unsigned char v1; unsigned short v2:15; unsigned int v3:32; };
struct __attribute__((packed)) aUc_BFu15s_BFu32ll { unsigned char v1; unsigned short v2:15; unsigned long long v3:32; };
struct __attribute__((packed)) aUc_BFu15s_BFu33 { unsigned char v1; unsigned short v2:15; unsigned long long v3:33; };
struct __attribute__((packed)) aUc_BFu15s_BFu7c { unsigned char v1; unsigned short v2:15; unsigned char v3:7; };
struct __attribute__((packed)) aUc_BFu15s_BFu7i { unsigned char v1; unsigned short v2:15; unsigned int v3:7; };
struct __attribute__((packed)) aUc_BFu15s_BFu7ll { unsigned char v1; unsigned short v2:15; unsigned long long v3:7; };
struct __attribute__((packed)) aUc_BFu15s_BFu7s { unsigned char v1; unsigned short v2:15; unsigned short v3:7; };
struct __attribute__((packed)) aUc_BFu15s_BFu8c { unsigned char v1; unsigned short v2:15; unsigned char v3:8; };
struct __attribute__((packed)) aUc_BFu15s_BFu8i { unsigned char v1; unsigned short v2:15; unsigned int v3:8; };
struct __attribute__((packed)) aUc_BFu15s_BFu8ll { unsigned char v1; unsigned short v2:15; unsigned long long v3:8; };
struct __attribute__((packed)) aUc_BFu15s_BFu8s { unsigned char v1; unsigned short v2:15; unsigned short v3:8; };
struct __attribute__((packed)) aUc_BFu15s_BFu9i { unsigned char v1; unsigned short v2:15; unsigned int v3:9; };
struct __attribute__((packed)) aUc_BFu15s_BFu9ll { unsigned char v1; unsigned short v2:15; unsigned long long v3:9; };
struct __attribute__((packed)) aUc_BFu15s_BFu9s { unsigned char v1; unsigned short v2:15; unsigned short v3:9; };
struct __attribute__((packed)) aUc_BFu15s_C { unsigned char v1; unsigned short v2:15; char v3; };
struct __attribute__((packed)) aUc_BFu15s_D { unsigned char v1; unsigned short v2:15; double v3; };
struct __attribute__((packed)) aUc_BFu15s_F { unsigned char v1; unsigned short v2:15; float v3; };
struct __attribute__((packed)) aUc_BFu15s_I { unsigned char v1; unsigned short v2:15; int v3; };
struct __attribute__((packed)) aUc_BFu15s_Ip { unsigned char v1; unsigned short v2:15; int * v3; };
struct __attribute__((packed)) aUc_BFu15s_L { unsigned char v1; unsigned short v2:15; long long v3; };
struct __attribute__((packed)) aUc_BFu15s_S { unsigned char v1; unsigned short v2:15; short v3; };
struct __attribute__((packed)) aUc_BFu15s_Uc { unsigned char v1; unsigned short v2:15; unsigned char v3; };
struct __attribute__((packed)) aUc_BFu15s_Ui { unsigned char v1; unsigned short v2:15; unsigned int v3; };
struct __attribute__((packed)) aUc_BFu15s_Ul { unsigned char v1; unsigned short v2:15; unsigned long long v3; };
struct __attribute__((packed)) aUc_BFu15s_Us { unsigned char v1; unsigned short v2:15; unsigned short v3; };
struct __attribute__((packed)) aUc_BFu15s_Vp { unsigned char v1; unsigned short v2:15; void * v3; };
struct __attribute__((packed)) aUc_BFu16i { unsigned char v1; unsigned int v2:16; };
struct __attribute__((packed)) aUc_BFu16i_BFu15i { unsigned char v1; unsigned int v2:16; unsigned int v3:15; };
struct __attribute__((packed)) aUc_BFu16i_BFu15ll { unsigned char v1; unsigned int v2:16; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_BFu16i_BFu15s { unsigned char v1; unsigned int v2:16; unsigned short v3:15; };
struct __attribute__((packed)) aUc_BFu16i_BFu16i { unsigned char v1; unsigned int v2:16; unsigned int v3:16; };
struct __attribute__((packed)) aUc_BFu16i_BFu16ll { unsigned char v1; unsigned int v2:16; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_BFu16i_BFu16s { unsigned char v1; unsigned int v2:16; unsigned short v3:16; };
struct __attribute__((packed)) aUc_BFu16i_BFu17i { unsigned char v1; unsigned int v2:16; unsigned int v3:17; };
struct __attribute__((packed)) aUc_BFu16i_BFu17ll { unsigned char v1; unsigned int v2:16; unsigned long long v3:17; };
struct __attribute__((packed)) aUc_BFu16i_BFu1c { unsigned char v1; unsigned int v2:16; unsigned char v3:1; };
struct __attribute__((packed)) aUc_BFu16i_BFu1i { unsigned char v1; unsigned int v2:16; unsigned int v3:1; };
struct __attribute__((packed)) aUc_BFu16i_BFu1ll { unsigned char v1; unsigned int v2:16; unsigned long long v3:1; };
struct __attribute__((packed)) aUc_BFu16i_BFu1s { unsigned char v1; unsigned int v2:16; unsigned short v3:1; };
struct __attribute__((packed)) aUc_BFu16i_BFu31i { unsigned char v1; unsigned int v2:16; unsigned int v3:31; };
struct __attribute__((packed)) aUc_BFu16i_BFu31ll { unsigned char v1; unsigned int v2:16; unsigned long long v3:31; };
struct __attribute__((packed)) aUc_BFu16i_BFu32i { unsigned char v1; unsigned int v2:16; unsigned int v3:32; };
struct __attribute__((packed)) aUc_BFu16i_BFu32ll { unsigned char v1; unsigned int v2:16; unsigned long long v3:32; };
struct __attribute__((packed)) aUc_BFu16i_BFu33 { unsigned char v1; unsigned int v2:16; unsigned long long v3:33; };
struct __attribute__((packed)) aUc_BFu16i_BFu7c { unsigned char v1; unsigned int v2:16; unsigned char v3:7; };
struct __attribute__((packed)) aUc_BFu16i_BFu7i { unsigned char v1; unsigned int v2:16; unsigned int v3:7; };
struct __attribute__((packed)) aUc_BFu16i_BFu7ll { unsigned char v1; unsigned int v2:16; unsigned long long v3:7; };
struct __attribute__((packed)) aUc_BFu16i_BFu7s { unsigned char v1; unsigned int v2:16; unsigned short v3:7; };
struct __attribute__((packed)) aUc_BFu16i_BFu8c { unsigned char v1; unsigned int v2:16; unsigned char v3:8; };
struct __attribute__((packed)) aUc_BFu16i_BFu8i { unsigned char v1; unsigned int v2:16; unsigned int v3:8; };
struct __attribute__((packed)) aUc_BFu16i_BFu8ll { unsigned char v1; unsigned int v2:16; unsigned long long v3:8; };
struct __attribute__((packed)) aUc_BFu16i_BFu8s { unsigned char v1; unsigned int v2:16; unsigned short v3:8; };
struct __attribute__((packed)) aUc_BFu16i_BFu9i { unsigned char v1; unsigned int v2:16; unsigned int v3:9; };
struct __attribute__((packed)) aUc_BFu16i_BFu9ll { unsigned char v1; unsigned int v2:16; unsigned long long v3:9; };
struct __attribute__((packed)) aUc_BFu16i_BFu9s { unsigned char v1; unsigned int v2:16; unsigned short v3:9; };
struct __attribute__((packed)) aUc_BFu16i_C { unsigned char v1; unsigned int v2:16; char v3; };
struct __attribute__((packed)) aUc_BFu16i_D { unsigned char v1; unsigned int v2:16; double v3; };
struct __attribute__((packed)) aUc_BFu16i_F { unsigned char v1; unsigned int v2:16; float v3; };
struct __attribute__((packed)) aUc_BFu16i_I { unsigned char v1; unsigned int v2:16; int v3; };
struct __attribute__((packed)) aUc_BFu16i_Ip { unsigned char v1; unsigned int v2:16; int * v3; };
struct __attribute__((packed)) aUc_BFu16i_L { unsigned char v1; unsigned int v2:16; long long v3; };
struct __attribute__((packed)) aUc_BFu16i_S { unsigned char v1; unsigned int v2:16; short v3; };
struct __attribute__((packed)) aUc_BFu16i_Uc { unsigned char v1; unsigned int v2:16; unsigned char v3; };
struct __attribute__((packed)) aUc_BFu16i_Ui { unsigned char v1; unsigned int v2:16; unsigned int v3; };
struct __attribute__((packed)) aUc_BFu16i_Ul { unsigned char v1; unsigned int v2:16; unsigned long long v3; };
struct __attribute__((packed)) aUc_BFu16i_Us { unsigned char v1; unsigned int v2:16; unsigned short v3; };
struct __attribute__((packed)) aUc_BFu16i_Vp { unsigned char v1; unsigned int v2:16; void * v3; };
struct __attribute__((packed)) aUc_BFu16ll { unsigned char v1; unsigned long long v2:16; };
struct __attribute__((packed)) aUc_BFu16ll_BFu15i { unsigned char v1; unsigned long long v2:16; unsigned int v3:15; };
struct __attribute__((packed)) aUc_BFu16ll_BFu15ll { unsigned char v1; unsigned long long v2:16; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_BFu16ll_BFu15s { unsigned char v1; unsigned long long v2:16; unsigned short v3:15; };
struct __attribute__((packed)) aUc_BFu16ll_BFu16i { unsigned char v1; unsigned long long v2:16; unsigned int v3:16; };
struct __attribute__((packed)) aUc_BFu16ll_BFu16ll { unsigned char v1; unsigned long long v2:16; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_BFu16ll_BFu16s { unsigned char v1; unsigned long long v2:16; unsigned short v3:16; };
struct __attribute__((packed)) aUc_BFu16ll_BFu17i { unsigned char v1; unsigned long long v2:16; unsigned int v3:17; };
struct __attribute__((packed)) aUc_BFu16ll_BFu17ll { unsigned char v1; unsigned long long v2:16; unsigned long long v3:17; };
struct __attribute__((packed)) aUc_BFu16ll_BFu1c { unsigned char v1; unsigned long long v2:16; unsigned char v3:1; };
struct __attribute__((packed)) aUc_BFu16ll_BFu1i { unsigned char v1; unsigned long long v2:16; unsigned int v3:1; };
struct __attribute__((packed)) aUc_BFu16ll_BFu1ll { unsigned char v1; unsigned long long v2:16; unsigned long long v3:1; };
struct __attribute__((packed)) aUc_BFu16ll_BFu1s { unsigned char v1; unsigned long long v2:16; unsigned short v3:1; };
struct __attribute__((packed)) aUc_BFu16ll_BFu31i { unsigned char v1; unsigned long long v2:16; unsigned int v3:31; };
struct __attribute__((packed)) aUc_BFu16ll_BFu31ll { unsigned char v1; unsigned long long v2:16; unsigned long long v3:31; };
struct __attribute__((packed)) aUc_BFu16ll_BFu32i { unsigned char v1; unsigned long long v2:16; unsigned int v3:32; };
struct __attribute__((packed)) aUc_BFu16ll_BFu32ll { unsigned char v1; unsigned long long v2:16; unsigned long long v3:32; };
struct __attribute__((packed)) aUc_BFu16ll_BFu33 { unsigned char v1; unsigned long long v2:16; unsigned long long v3:33; };
struct __attribute__((packed)) aUc_BFu16ll_BFu7c { unsigned char v1; unsigned long long v2:16; unsigned char v3:7; };
struct __attribute__((packed)) aUc_BFu16ll_BFu7i { unsigned char v1; unsigned long long v2:16; unsigned int v3:7; };
struct __attribute__((packed)) aUc_BFu16ll_BFu7ll { unsigned char v1; unsigned long long v2:16; unsigned long long v3:7; };
struct __attribute__((packed)) aUc_BFu16ll_BFu7s { unsigned char v1; unsigned long long v2:16; unsigned short v3:7; };
struct __attribute__((packed)) aUc_BFu16ll_BFu8c { unsigned char v1; unsigned long long v2:16; unsigned char v3:8; };
struct __attribute__((packed)) aUc_BFu16ll_BFu8i { unsigned char v1; unsigned long long v2:16; unsigned int v3:8; };
struct __attribute__((packed)) aUc_BFu16ll_BFu8ll { unsigned char v1; unsigned long long v2:16; unsigned long long v3:8; };
struct __attribute__((packed)) aUc_BFu16ll_BFu8s { unsigned char v1; unsigned long long v2:16; unsigned short v3:8; };
struct __attribute__((packed)) aUc_BFu16ll_BFu9i { unsigned char v1; unsigned long long v2:16; unsigned int v3:9; };
struct __attribute__((packed)) aUc_BFu16ll_BFu9ll { unsigned char v1; unsigned long long v2:16; unsigned long long v3:9; };
struct __attribute__((packed)) aUc_BFu16ll_BFu9s { unsigned char v1; unsigned long long v2:16; unsigned short v3:9; };
struct __attribute__((packed)) aUc_BFu16ll_C { unsigned char v1; unsigned long long v2:16; char v3; };
struct __attribute__((packed)) aUc_BFu16ll_D { unsigned char v1; unsigned long long v2:16; double v3; };
struct __attribute__((packed)) aUc_BFu16ll_F { unsigned char v1; unsigned long long v2:16; float v3; };
struct __attribute__((packed)) aUc_BFu16ll_I { unsigned char v1; unsigned long long v2:16; int v3; };
struct __attribute__((packed)) aUc_BFu16ll_Ip { unsigned char v1; unsigned long long v2:16; int * v3; };
struct __attribute__((packed)) aUc_BFu16ll_L { unsigned char v1; unsigned long long v2:16; long long v3; };
struct __attribute__((packed)) aUc_BFu16ll_S { unsigned char v1; unsigned long long v2:16; short v3; };
struct __attribute__((packed)) aUc_BFu16ll_Uc { unsigned char v1; unsigned long long v2:16; unsigned char v3; };
struct __attribute__((packed)) aUc_BFu16ll_Ui { unsigned char v1; unsigned long long v2:16; unsigned int v3; };
struct __attribute__((packed)) aUc_BFu16ll_Ul { unsigned char v1; unsigned long long v2:16; unsigned long long v3; };
struct __attribute__((packed)) aUc_BFu16ll_Us { unsigned char v1; unsigned long long v2:16; unsigned short v3; };
struct __attribute__((packed)) aUc_BFu16ll_Vp { unsigned char v1; unsigned long long v2:16; void * v3; };
struct __attribute__((packed)) aUc_BFu16s { unsigned char v1; unsigned short v2:16; };
struct __attribute__((packed)) aUc_BFu16s_BFu15i { unsigned char v1; unsigned short v2:16; unsigned int v3:15; };
struct __attribute__((packed)) aUc_BFu16s_BFu15ll { unsigned char v1; unsigned short v2:16; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_BFu16s_BFu15s { unsigned char v1; unsigned short v2:16; unsigned short v3:15; };
struct __attribute__((packed)) aUc_BFu16s_BFu16i { unsigned char v1; unsigned short v2:16; unsigned int v3:16; };
struct __attribute__((packed)) aUc_BFu16s_BFu16ll { unsigned char v1; unsigned short v2:16; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_BFu16s_BFu16s { unsigned char v1; unsigned short v2:16; unsigned short v3:16; };
struct __attribute__((packed)) aUc_BFu16s_BFu17i { unsigned char v1; unsigned short v2:16; unsigned int v3:17; };
struct __attribute__((packed)) aUc_BFu16s_BFu17ll { unsigned char v1; unsigned short v2:16; unsigned long long v3:17; };
struct __attribute__((packed)) aUc_BFu16s_BFu1c { unsigned char v1; unsigned short v2:16; unsigned char v3:1; };
struct __attribute__((packed)) aUc_BFu16s_BFu1i { unsigned char v1; unsigned short v2:16; unsigned int v3:1; };
struct __attribute__((packed)) aUc_BFu16s_BFu1ll { unsigned char v1; unsigned short v2:16; unsigned long long v3:1; };
struct __attribute__((packed)) aUc_BFu16s_BFu1s { unsigned char v1; unsigned short v2:16; unsigned short v3:1; };
struct __attribute__((packed)) aUc_BFu16s_BFu31i { unsigned char v1; unsigned short v2:16; unsigned int v3:31; };
struct __attribute__((packed)) aUc_BFu16s_BFu31ll { unsigned char v1; unsigned short v2:16; unsigned long long v3:31; };
struct __attribute__((packed)) aUc_BFu16s_BFu32i { unsigned char v1; unsigned short v2:16; unsigned int v3:32; };
struct __attribute__((packed)) aUc_BFu16s_BFu32ll { unsigned char v1; unsigned short v2:16; unsigned long long v3:32; };
struct __attribute__((packed)) aUc_BFu16s_BFu33 { unsigned char v1; unsigned short v2:16; unsigned long long v3:33; };
struct __attribute__((packed)) aUc_BFu16s_BFu7c { unsigned char v1; unsigned short v2:16; unsigned char v3:7; };
struct __attribute__((packed)) aUc_BFu16s_BFu7i { unsigned char v1; unsigned short v2:16; unsigned int v3:7; };
struct __attribute__((packed)) aUc_BFu16s_BFu7ll { unsigned char v1; unsigned short v2:16; unsigned long long v3:7; };
struct __attribute__((packed)) aUc_BFu16s_BFu7s { unsigned char v1; unsigned short v2:16; unsigned short v3:7; };
struct __attribute__((packed)) aUc_BFu16s_BFu8c { unsigned char v1; unsigned short v2:16; unsigned char v3:8; };
struct __attribute__((packed)) aUc_BFu16s_BFu8i { unsigned char v1; unsigned short v2:16; unsigned int v3:8; };
struct __attribute__((packed)) aUc_BFu16s_BFu8ll { unsigned char v1; unsigned short v2:16; unsigned long long v3:8; };
struct __attribute__((packed)) aUc_BFu16s_BFu8s { unsigned char v1; unsigned short v2:16; unsigned short v3:8; };
struct __attribute__((packed)) aUc_BFu16s_BFu9i { unsigned char v1; unsigned short v2:16; unsigned int v3:9; };
struct __attribute__((packed)) aUc_BFu16s_BFu9ll { unsigned char v1; unsigned short v2:16; unsigned long long v3:9; };
struct __attribute__((packed)) aUc_BFu16s_BFu9s { unsigned char v1; unsigned short v2:16; unsigned short v3:9; };
struct __attribute__((packed)) aUc_BFu16s_C { unsigned char v1; unsigned short v2:16; char v3; };
struct __attribute__((packed)) aUc_BFu16s_D { unsigned char v1; unsigned short v2:16; double v3; };
struct __attribute__((packed)) aUc_BFu16s_F { unsigned char v1; unsigned short v2:16; float v3; };
struct __attribute__((packed)) aUc_BFu16s_I { unsigned char v1; unsigned short v2:16; int v3; };
struct __attribute__((packed)) aUc_BFu16s_Ip { unsigned char v1; unsigned short v2:16; int * v3; };
struct __attribute__((packed)) aUc_BFu16s_L { unsigned char v1; unsigned short v2:16; long long v3; };
struct __attribute__((packed)) aUc_BFu16s_S { unsigned char v1; unsigned short v2:16; short v3; };
struct __attribute__((packed)) aUc_BFu16s_Uc { unsigned char v1; unsigned short v2:16; unsigned char v3; };
struct __attribute__((packed)) aUc_BFu16s_Ui { unsigned char v1; unsigned short v2:16; unsigned int v3; };
struct __attribute__((packed)) aUc_BFu16s_Ul { unsigned char v1; unsigned short v2:16; unsigned long long v3; };
struct __attribute__((packed)) aUc_BFu16s_Us { unsigned char v1; unsigned short v2:16; unsigned short v3; };
struct __attribute__((packed)) aUc_BFu16s_Vp { unsigned char v1; unsigned short v2:16; void * v3; };
struct __attribute__((packed)) aUc_BFu17i { unsigned char v1; unsigned int v2:17; };
struct __attribute__((packed)) aUc_BFu17i_BFu15i { unsigned char v1; unsigned int v2:17; unsigned int v3:15; };
struct __attribute__((packed)) aUc_BFu17i_BFu15ll { unsigned char v1; unsigned int v2:17; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_BFu17i_BFu15s { unsigned char v1; unsigned int v2:17; unsigned short v3:15; };
struct __attribute__((packed)) aUc_BFu17i_BFu16i { unsigned char v1; unsigned int v2:17; unsigned int v3:16; };
struct __attribute__((packed)) aUc_BFu17i_BFu16ll { unsigned char v1; unsigned int v2:17; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_BFu17i_BFu16s { unsigned char v1; unsigned int v2:17; unsigned short v3:16; };
struct __attribute__((packed)) aUc_BFu17i_BFu17i { unsigned char v1; unsigned int v2:17; unsigned int v3:17; };
struct __attribute__((packed)) aUc_BFu17i_BFu17ll { unsigned char v1; unsigned int v2:17; unsigned long long v3:17; };
struct __attribute__((packed)) aUc_BFu17i_BFu1c { unsigned char v1; unsigned int v2:17; unsigned char v3:1; };
struct __attribute__((packed)) aUc_BFu17i_BFu1i { unsigned char v1; unsigned int v2:17; unsigned int v3:1; };
struct __attribute__((packed)) aUc_BFu17i_BFu1ll { unsigned char v1; unsigned int v2:17; unsigned long long v3:1; };
struct __attribute__((packed)) aUc_BFu17i_BFu1s { unsigned char v1; unsigned int v2:17; unsigned short v3:1; };
struct __attribute__((packed)) aUc_BFu17i_BFu31i { unsigned char v1; unsigned int v2:17; unsigned int v3:31; };
struct __attribute__((packed)) aUc_BFu17i_BFu31ll { unsigned char v1; unsigned int v2:17; unsigned long long v3:31; };
struct __attribute__((packed)) aUc_BFu17i_BFu32i { unsigned char v1; unsigned int v2:17; unsigned int v3:32; };
struct __attribute__((packed)) aUc_BFu17i_BFu32ll { unsigned char v1; unsigned int v2:17; unsigned long long v3:32; };
struct __attribute__((packed)) aUc_BFu17i_BFu33 { unsigned char v1; unsigned int v2:17; unsigned long long v3:33; };
struct __attribute__((packed)) aUc_BFu17i_BFu7c { unsigned char v1; unsigned int v2:17; unsigned char v3:7; };
struct __attribute__((packed)) aUc_BFu17i_BFu7i { unsigned char v1; unsigned int v2:17; unsigned int v3:7; };
struct __attribute__((packed)) aUc_BFu17i_BFu7ll { unsigned char v1; unsigned int v2:17; unsigned long long v3:7; };
struct __attribute__((packed)) aUc_BFu17i_BFu7s { unsigned char v1; unsigned int v2:17; unsigned short v3:7; };
struct __attribute__((packed)) aUc_BFu17i_BFu8c { unsigned char v1; unsigned int v2:17; unsigned char v3:8; };
struct __attribute__((packed)) aUc_BFu17i_BFu8i { unsigned char v1; unsigned int v2:17; unsigned int v3:8; };
struct __attribute__((packed)) aUc_BFu17i_BFu8ll { unsigned char v1; unsigned int v2:17; unsigned long long v3:8; };
struct __attribute__((packed)) aUc_BFu17i_BFu8s { unsigned char v1; unsigned int v2:17; unsigned short v3:8; };
struct __attribute__((packed)) aUc_BFu17i_BFu9i { unsigned char v1; unsigned int v2:17; unsigned int v3:9; };
struct __attribute__((packed)) aUc_BFu17i_BFu9ll { unsigned char v1; unsigned int v2:17; unsigned long long v3:9; };
struct __attribute__((packed)) aUc_BFu17i_BFu9s { unsigned char v1; unsigned int v2:17; unsigned short v3:9; };
struct __attribute__((packed)) aUc_BFu17i_C { unsigned char v1; unsigned int v2:17; char v3; };
struct __attribute__((packed)) aUc_BFu17i_D { unsigned char v1; unsigned int v2:17; double v3; };
struct __attribute__((packed)) aUc_BFu17i_F { unsigned char v1; unsigned int v2:17; float v3; };
struct __attribute__((packed)) aUc_BFu17i_I { unsigned char v1; unsigned int v2:17; int v3; };
struct __attribute__((packed)) aUc_BFu17i_Ip { unsigned char v1; unsigned int v2:17; int * v3; };
struct __attribute__((packed)) aUc_BFu17i_L { unsigned char v1; unsigned int v2:17; long long v3; };
struct __attribute__((packed)) aUc_BFu17i_S { unsigned char v1; unsigned int v2:17; short v3; };
struct __attribute__((packed)) aUc_BFu17i_Uc { unsigned char v1; unsigned int v2:17; unsigned char v3; };
struct __attribute__((packed)) aUc_BFu17i_Ui { unsigned char v1; unsigned int v2:17; unsigned int v3; };
struct __attribute__((packed)) aUc_BFu17i_Ul { unsigned char v1; unsigned int v2:17; unsigned long long v3; };
struct __attribute__((packed)) aUc_BFu17i_Us { unsigned char v1; unsigned int v2:17; unsigned short v3; };
struct __attribute__((packed)) aUc_BFu17i_Vp { unsigned char v1; unsigned int v2:17; void * v3; };
struct __attribute__((packed)) aUc_BFu17ll { unsigned char v1; unsigned long long v2:17; };
struct __attribute__((packed)) aUc_BFu17ll_BFu15i { unsigned char v1; unsigned long long v2:17; unsigned int v3:15; };
struct __attribute__((packed)) aUc_BFu17ll_BFu15ll { unsigned char v1; unsigned long long v2:17; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_BFu17ll_BFu15s { unsigned char v1; unsigned long long v2:17; unsigned short v3:15; };
struct __attribute__((packed)) aUc_BFu17ll_BFu16i { unsigned char v1; unsigned long long v2:17; unsigned int v3:16; };
struct __attribute__((packed)) aUc_BFu17ll_BFu16ll { unsigned char v1; unsigned long long v2:17; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_BFu17ll_BFu16s { unsigned char v1; unsigned long long v2:17; unsigned short v3:16; };
struct __attribute__((packed)) aUc_BFu17ll_BFu17i { unsigned char v1; unsigned long long v2:17; unsigned int v3:17; };
struct __attribute__((packed)) aUc_BFu17ll_BFu17ll { unsigned char v1; unsigned long long v2:17; unsigned long long v3:17; };
struct __attribute__((packed)) aUc_BFu17ll_BFu1c { unsigned char v1; unsigned long long v2:17; unsigned char v3:1; };
struct __attribute__((packed)) aUc_BFu17ll_BFu1i { unsigned char v1; unsigned long long v2:17; unsigned int v3:1; };
struct __attribute__((packed)) aUc_BFu17ll_BFu1ll { unsigned char v1; unsigned long long v2:17; unsigned long long v3:1; };
struct __attribute__((packed)) aUc_BFu17ll_BFu1s { unsigned char v1; unsigned long long v2:17; unsigned short v3:1; };
struct __attribute__((packed)) aUc_BFu17ll_BFu31i { unsigned char v1; unsigned long long v2:17; unsigned int v3:31; };
struct __attribute__((packed)) aUc_BFu17ll_BFu31ll { unsigned char v1; unsigned long long v2:17; unsigned long long v3:31; };
struct __attribute__((packed)) aUc_BFu17ll_BFu32i { unsigned char v1; unsigned long long v2:17; unsigned int v3:32; };
struct __attribute__((packed)) aUc_BFu17ll_BFu32ll { unsigned char v1; unsigned long long v2:17; unsigned long long v3:32; };
struct __attribute__((packed)) aUc_BFu17ll_BFu33 { unsigned char v1; unsigned long long v2:17; unsigned long long v3:33; };
struct __attribute__((packed)) aUc_BFu17ll_BFu7c { unsigned char v1; unsigned long long v2:17; unsigned char v3:7; };
struct __attribute__((packed)) aUc_BFu17ll_BFu7i { unsigned char v1; unsigned long long v2:17; unsigned int v3:7; };
struct __attribute__((packed)) aUc_BFu17ll_BFu7ll { unsigned char v1; unsigned long long v2:17; unsigned long long v3:7; };
struct __attribute__((packed)) aUc_BFu17ll_BFu7s { unsigned char v1; unsigned long long v2:17; unsigned short v3:7; };
struct __attribute__((packed)) aUc_BFu17ll_BFu8c { unsigned char v1; unsigned long long v2:17; unsigned char v3:8; };
struct __attribute__((packed)) aUc_BFu17ll_BFu8i { unsigned char v1; unsigned long long v2:17; unsigned int v3:8; };
struct __attribute__((packed)) aUc_BFu17ll_BFu8ll { unsigned char v1; unsigned long long v2:17; unsigned long long v3:8; };
struct __attribute__((packed)) aUc_BFu17ll_BFu8s { unsigned char v1; unsigned long long v2:17; unsigned short v3:8; };
struct __attribute__((packed)) aUc_BFu17ll_BFu9i { unsigned char v1; unsigned long long v2:17; unsigned int v3:9; };
struct __attribute__((packed)) aUc_BFu17ll_BFu9ll { unsigned char v1; unsigned long long v2:17; unsigned long long v3:9; };
struct __attribute__((packed)) aUc_BFu17ll_BFu9s { unsigned char v1; unsigned long long v2:17; unsigned short v3:9; };
struct __attribute__((packed)) aUc_BFu17ll_C { unsigned char v1; unsigned long long v2:17; char v3; };
struct __attribute__((packed)) aUc_BFu17ll_D { unsigned char v1; unsigned long long v2:17; double v3; };
struct __attribute__((packed)) aUc_BFu17ll_F { unsigned char v1; unsigned long long v2:17; float v3; };
struct __attribute__((packed)) aUc_BFu17ll_I { unsigned char v1; unsigned long long v2:17; int v3; };
struct __attribute__((packed)) aUc_BFu17ll_Ip { unsigned char v1; unsigned long long v2:17; int * v3; };
struct __attribute__((packed)) aUc_BFu17ll_L { unsigned char v1; unsigned long long v2:17; long long v3; };
struct __attribute__((packed)) aUc_BFu17ll_S { unsigned char v1; unsigned long long v2:17; short v3; };
struct __attribute__((packed)) aUc_BFu17ll_Uc { unsigned char v1; unsigned long long v2:17; unsigned char v3; };
struct __attribute__((packed)) aUc_BFu17ll_Ui { unsigned char v1; unsigned long long v2:17; unsigned int v3; };
struct __attribute__((packed)) aUc_BFu17ll_Ul { unsigned char v1; unsigned long long v2:17; unsigned long long v3; };
struct __attribute__((packed)) aUc_BFu17ll_Us { unsigned char v1; unsigned long long v2:17; unsigned short v3; };
struct __attribute__((packed)) aUc_BFu17ll_Vp { unsigned char v1; unsigned long long v2:17; void * v3; };
struct __attribute__((packed)) aUc_BFu1c { unsigned char v1; unsigned char v2:1; };
struct __attribute__((packed)) aUc_BFu1c_BFu15i { unsigned char v1; unsigned char v2:1; unsigned int v3:15; };
struct __attribute__((packed)) aUc_BFu1c_BFu15ll { unsigned char v1; unsigned char v2:1; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_BFu1c_BFu15s { unsigned char v1; unsigned char v2:1; unsigned short v3:15; };
struct __attribute__((packed)) aUc_BFu1c_BFu16i { unsigned char v1; unsigned char v2:1; unsigned int v3:16; };
struct __attribute__((packed)) aUc_BFu1c_BFu16ll { unsigned char v1; unsigned char v2:1; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_BFu1c_BFu16s { unsigned char v1; unsigned char v2:1; unsigned short v3:16; };
struct __attribute__((packed)) aUc_BFu1c_BFu17i { unsigned char v1; unsigned char v2:1; unsigned int v3:17; };
struct __attribute__((packed)) aUc_BFu1c_BFu17ll { unsigned char v1; unsigned char v2:1; unsigned long long v3:17; };
struct __attribute__((packed)) aUc_BFu1c_BFu1c { unsigned char v1; unsigned char v2:1; unsigned char v3:1; };
struct __attribute__((packed)) aUc_BFu1c_BFu1i { unsigned char v1; unsigned char v2:1; unsigned int v3:1; };
struct __attribute__((packed)) aUc_BFu1c_BFu1ll { unsigned char v1; unsigned char v2:1; unsigned long long v3:1; };
struct __attribute__((packed)) aUc_BFu1c_BFu1s { unsigned char v1; unsigned char v2:1; unsigned short v3:1; };
struct __attribute__((packed)) aUc_BFu1c_BFu31i { unsigned char v1; unsigned char v2:1; unsigned int v3:31; };
struct __attribute__((packed)) aUc_BFu1c_BFu31ll { unsigned char v1; unsigned char v2:1; unsigned long long v3:31; };
struct __attribute__((packed)) aUc_BFu1c_BFu32i { unsigned char v1; unsigned char v2:1; unsigned int v3:32; };
struct __attribute__((packed)) aUc_BFu1c_BFu32ll { unsigned char v1; unsigned char v2:1; unsigned long long v3:32; };
struct __attribute__((packed)) aUc_BFu1c_BFu33 { unsigned char v1; unsigned char v2:1; unsigned long long v3:33; };
struct __attribute__((packed)) aUc_BFu1c_BFu7c { unsigned char v1; unsigned char v2:1; unsigned char v3:7; };
struct __attribute__((packed)) aUc_BFu1c_BFu7i { unsigned char v1; unsigned char v2:1; unsigned int v3:7; };
struct __attribute__((packed)) aUc_BFu1c_BFu7ll { unsigned char v1; unsigned char v2:1; unsigned long long v3:7; };
struct __attribute__((packed)) aUc_BFu1c_BFu7s { unsigned char v1; unsigned char v2:1; unsigned short v3:7; };
struct __attribute__((packed)) aUc_BFu1c_BFu8c { unsigned char v1; unsigned char v2:1; unsigned char v3:8; };
struct __attribute__((packed)) aUc_BFu1c_BFu8i { unsigned char v1; unsigned char v2:1; unsigned int v3:8; };
struct __attribute__((packed)) aUc_BFu1c_BFu8ll { unsigned char v1; unsigned char v2:1; unsigned long long v3:8; };
struct __attribute__((packed)) aUc_BFu1c_BFu8s { unsigned char v1; unsigned char v2:1; unsigned short v3:8; };
struct __attribute__((packed)) aUc_BFu1c_BFu9i { unsigned char v1; unsigned char v2:1; unsigned int v3:9; };
struct __attribute__((packed)) aUc_BFu1c_BFu9ll { unsigned char v1; unsigned char v2:1; unsigned long long v3:9; };
struct __attribute__((packed)) aUc_BFu1c_BFu9s { unsigned char v1; unsigned char v2:1; unsigned short v3:9; };
struct __attribute__((packed)) aUc_BFu1c_C { unsigned char v1; unsigned char v2:1; char v3; };
struct __attribute__((packed)) aUc_BFu1c_D { unsigned char v1; unsigned char v2:1; double v3; };
struct __attribute__((packed)) aUc_BFu1c_F { unsigned char v1; unsigned char v2:1; float v3; };
struct __attribute__((packed)) aUc_BFu1c_I { unsigned char v1; unsigned char v2:1; int v3; };
struct __attribute__((packed)) aUc_BFu1c_Ip { unsigned char v1; unsigned char v2:1; int * v3; };
struct __attribute__((packed)) aUc_BFu1c_L { unsigned char v1; unsigned char v2:1; long long v3; };
struct __attribute__((packed)) aUc_BFu1c_S { unsigned char v1; unsigned char v2:1; short v3; };
struct __attribute__((packed)) aUc_BFu1c_Uc { unsigned char v1; unsigned char v2:1; unsigned char v3; };
struct __attribute__((packed)) aUc_BFu1c_Ui { unsigned char v1; unsigned char v2:1; unsigned int v3; };
struct __attribute__((packed)) aUc_BFu1c_Ul { unsigned char v1; unsigned char v2:1; unsigned long long v3; };
struct __attribute__((packed)) aUc_BFu1c_Us { unsigned char v1; unsigned char v2:1; unsigned short v3; };
struct __attribute__((packed)) aUc_BFu1c_Vp { unsigned char v1; unsigned char v2:1; void * v3; };
struct __attribute__((packed)) aUc_BFu1i { unsigned char v1; unsigned int v2:1; };
struct __attribute__((packed)) aUc_BFu1i_BFu15i { unsigned char v1; unsigned int v2:1; unsigned int v3:15; };
struct __attribute__((packed)) aUc_BFu1i_BFu15ll { unsigned char v1; unsigned int v2:1; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_BFu1i_BFu15s { unsigned char v1; unsigned int v2:1; unsigned short v3:15; };
struct __attribute__((packed)) aUc_BFu1i_BFu16i { unsigned char v1; unsigned int v2:1; unsigned int v3:16; };
struct __attribute__((packed)) aUc_BFu1i_BFu16ll { unsigned char v1; unsigned int v2:1; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_BFu1i_BFu16s { unsigned char v1; unsigned int v2:1; unsigned short v3:16; };
struct __attribute__((packed)) aUc_BFu1i_BFu17i { unsigned char v1; unsigned int v2:1; unsigned int v3:17; };
struct __attribute__((packed)) aUc_BFu1i_BFu17ll { unsigned char v1; unsigned int v2:1; unsigned long long v3:17; };
struct __attribute__((packed)) aUc_BFu1i_BFu1c { unsigned char v1; unsigned int v2:1; unsigned char v3:1; };
struct __attribute__((packed)) aUc_BFu1i_BFu1i { unsigned char v1; unsigned int v2:1; unsigned int v3:1; };
struct __attribute__((packed)) aUc_BFu1i_BFu1ll { unsigned char v1; unsigned int v2:1; unsigned long long v3:1; };
struct __attribute__((packed)) aUc_BFu1i_BFu1s { unsigned char v1; unsigned int v2:1; unsigned short v3:1; };
struct __attribute__((packed)) aUc_BFu1i_BFu31i { unsigned char v1; unsigned int v2:1; unsigned int v3:31; };
struct __attribute__((packed)) aUc_BFu1i_BFu31ll { unsigned char v1; unsigned int v2:1; unsigned long long v3:31; };
struct __attribute__((packed)) aUc_BFu1i_BFu32i { unsigned char v1; unsigned int v2:1; unsigned int v3:32; };
struct __attribute__((packed)) aUc_BFu1i_BFu32ll { unsigned char v1; unsigned int v2:1; unsigned long long v3:32; };
struct __attribute__((packed)) aUc_BFu1i_BFu33 { unsigned char v1; unsigned int v2:1; unsigned long long v3:33; };
struct __attribute__((packed)) aUc_BFu1i_BFu7c { unsigned char v1; unsigned int v2:1; unsigned char v3:7; };
struct __attribute__((packed)) aUc_BFu1i_BFu7i { unsigned char v1; unsigned int v2:1; unsigned int v3:7; };
struct __attribute__((packed)) aUc_BFu1i_BFu7ll { unsigned char v1; unsigned int v2:1; unsigned long long v3:7; };
struct __attribute__((packed)) aUc_BFu1i_BFu7s { unsigned char v1; unsigned int v2:1; unsigned short v3:7; };
struct __attribute__((packed)) aUc_BFu1i_BFu8c { unsigned char v1; unsigned int v2:1; unsigned char v3:8; };
struct __attribute__((packed)) aUc_BFu1i_BFu8i { unsigned char v1; unsigned int v2:1; unsigned int v3:8; };
struct __attribute__((packed)) aUc_BFu1i_BFu8ll { unsigned char v1; unsigned int v2:1; unsigned long long v3:8; };
struct __attribute__((packed)) aUc_BFu1i_BFu8s { unsigned char v1; unsigned int v2:1; unsigned short v3:8; };
struct __attribute__((packed)) aUc_BFu1i_BFu9i { unsigned char v1; unsigned int v2:1; unsigned int v3:9; };
struct __attribute__((packed)) aUc_BFu1i_BFu9ll { unsigned char v1; unsigned int v2:1; unsigned long long v3:9; };
struct __attribute__((packed)) aUc_BFu1i_BFu9s { unsigned char v1; unsigned int v2:1; unsigned short v3:9; };
struct __attribute__((packed)) aUc_BFu1i_C { unsigned char v1; unsigned int v2:1; char v3; };
struct __attribute__((packed)) aUc_BFu1i_D { unsigned char v1; unsigned int v2:1; double v3; };
struct __attribute__((packed)) aUc_BFu1i_F { unsigned char v1; unsigned int v2:1; float v3; };
struct __attribute__((packed)) aUc_BFu1i_I { unsigned char v1; unsigned int v2:1; int v3; };
struct __attribute__((packed)) aUc_BFu1i_Ip { unsigned char v1; unsigned int v2:1; int * v3; };
struct __attribute__((packed)) aUc_BFu1i_L { unsigned char v1; unsigned int v2:1; long long v3; };
struct __attribute__((packed)) aUc_BFu1i_S { unsigned char v1; unsigned int v2:1; short v3; };
struct __attribute__((packed)) aUc_BFu1i_Uc { unsigned char v1; unsigned int v2:1; unsigned char v3; };
struct __attribute__((packed)) aUc_BFu1i_Ui { unsigned char v1; unsigned int v2:1; unsigned int v3; };
struct __attribute__((packed)) aUc_BFu1i_Ul { unsigned char v1; unsigned int v2:1; unsigned long long v3; };
struct __attribute__((packed)) aUc_BFu1i_Us { unsigned char v1; unsigned int v2:1; unsigned short v3; };
struct __attribute__((packed)) aUc_BFu1i_Vp { unsigned char v1; unsigned int v2:1; void * v3; };
struct __attribute__((packed)) aUc_BFu1ll { unsigned char v1; unsigned long long v2:1; };
struct __attribute__((packed)) aUc_BFu1ll_BFu15i { unsigned char v1; unsigned long long v2:1; unsigned int v3:15; };
struct __attribute__((packed)) aUc_BFu1ll_BFu15ll { unsigned char v1; unsigned long long v2:1; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_BFu1ll_BFu15s { unsigned char v1; unsigned long long v2:1; unsigned short v3:15; };
struct __attribute__((packed)) aUc_BFu1ll_BFu16i { unsigned char v1; unsigned long long v2:1; unsigned int v3:16; };
struct __attribute__((packed)) aUc_BFu1ll_BFu16ll { unsigned char v1; unsigned long long v2:1; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_BFu1ll_BFu16s { unsigned char v1; unsigned long long v2:1; unsigned short v3:16; };
struct __attribute__((packed)) aUc_BFu1ll_BFu17i { unsigned char v1; unsigned long long v2:1; unsigned int v3:17; };
struct __attribute__((packed)) aUc_BFu1ll_BFu17ll { unsigned char v1; unsigned long long v2:1; unsigned long long v3:17; };
struct __attribute__((packed)) aUc_BFu1ll_BFu1c { unsigned char v1; unsigned long long v2:1; unsigned char v3:1; };
struct __attribute__((packed)) aUc_BFu1ll_BFu1i { unsigned char v1; unsigned long long v2:1; unsigned int v3:1; };
struct __attribute__((packed)) aUc_BFu1ll_BFu1ll { unsigned char v1; unsigned long long v2:1; unsigned long long v3:1; };
struct __attribute__((packed)) aUc_BFu1ll_BFu1s { unsigned char v1; unsigned long long v2:1; unsigned short v3:1; };
struct __attribute__((packed)) aUc_BFu1ll_BFu31i { unsigned char v1; unsigned long long v2:1; unsigned int v3:31; };
struct __attribute__((packed)) aUc_BFu1ll_BFu31ll { unsigned char v1; unsigned long long v2:1; unsigned long long v3:31; };
struct __attribute__((packed)) aUc_BFu1ll_BFu32i { unsigned char v1; unsigned long long v2:1; unsigned int v3:32; };
struct __attribute__((packed)) aUc_BFu1ll_BFu32ll { unsigned char v1; unsigned long long v2:1; unsigned long long v3:32; };
struct __attribute__((packed)) aUc_BFu1ll_BFu33 { unsigned char v1; unsigned long long v2:1; unsigned long long v3:33; };
struct __attribute__((packed)) aUc_BFu1ll_BFu7c { unsigned char v1; unsigned long long v2:1; unsigned char v3:7; };
struct __attribute__((packed)) aUc_BFu1ll_BFu7i { unsigned char v1; unsigned long long v2:1; unsigned int v3:7; };
struct __attribute__((packed)) aUc_BFu1ll_BFu7ll { unsigned char v1; unsigned long long v2:1; unsigned long long v3:7; };
struct __attribute__((packed)) aUc_BFu1ll_BFu7s { unsigned char v1; unsigned long long v2:1; unsigned short v3:7; };
struct __attribute__((packed)) aUc_BFu1ll_BFu8c { unsigned char v1; unsigned long long v2:1; unsigned char v3:8; };
struct __attribute__((packed)) aUc_BFu1ll_BFu8i { unsigned char v1; unsigned long long v2:1; unsigned int v3:8; };
struct __attribute__((packed)) aUc_BFu1ll_BFu8ll { unsigned char v1; unsigned long long v2:1; unsigned long long v3:8; };
struct __attribute__((packed)) aUc_BFu1ll_BFu8s { unsigned char v1; unsigned long long v2:1; unsigned short v3:8; };
struct __attribute__((packed)) aUc_BFu1ll_BFu9i { unsigned char v1; unsigned long long v2:1; unsigned int v3:9; };
struct __attribute__((packed)) aUc_BFu1ll_BFu9ll { unsigned char v1; unsigned long long v2:1; unsigned long long v3:9; };
struct __attribute__((packed)) aUc_BFu1ll_BFu9s { unsigned char v1; unsigned long long v2:1; unsigned short v3:9; };
struct __attribute__((packed)) aUc_BFu1ll_C { unsigned char v1; unsigned long long v2:1; char v3; };
struct __attribute__((packed)) aUc_BFu1ll_D { unsigned char v1; unsigned long long v2:1; double v3; };
struct __attribute__((packed)) aUc_BFu1ll_F { unsigned char v1; unsigned long long v2:1; float v3; };
struct __attribute__((packed)) aUc_BFu1ll_I { unsigned char v1; unsigned long long v2:1; int v3; };
struct __attribute__((packed)) aUc_BFu1ll_Ip { unsigned char v1; unsigned long long v2:1; int * v3; };
struct __attribute__((packed)) aUc_BFu1ll_L { unsigned char v1; unsigned long long v2:1; long long v3; };
struct __attribute__((packed)) aUc_BFu1ll_S { unsigned char v1; unsigned long long v2:1; short v3; };
struct __attribute__((packed)) aUc_BFu1ll_Uc { unsigned char v1; unsigned long long v2:1; unsigned char v3; };
struct __attribute__((packed)) aUc_BFu1ll_Ui { unsigned char v1; unsigned long long v2:1; unsigned int v3; };
struct __attribute__((packed)) aUc_BFu1ll_Ul { unsigned char v1; unsigned long long v2:1; unsigned long long v3; };
struct __attribute__((packed)) aUc_BFu1ll_Us { unsigned char v1; unsigned long long v2:1; unsigned short v3; };
struct __attribute__((packed)) aUc_BFu1ll_Vp { unsigned char v1; unsigned long long v2:1; void * v3; };
struct __attribute__((packed)) aUc_BFu1s { unsigned char v1; unsigned short v2:1; };
struct __attribute__((packed)) aUc_BFu1s_BFu15i { unsigned char v1; unsigned short v2:1; unsigned int v3:15; };
struct __attribute__((packed)) aUc_BFu1s_BFu15ll { unsigned char v1; unsigned short v2:1; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_BFu1s_BFu15s { unsigned char v1; unsigned short v2:1; unsigned short v3:15; };
struct __attribute__((packed)) aUc_BFu1s_BFu16i { unsigned char v1; unsigned short v2:1; unsigned int v3:16; };
struct __attribute__((packed)) aUc_BFu1s_BFu16ll { unsigned char v1; unsigned short v2:1; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_BFu1s_BFu16s { unsigned char v1; unsigned short v2:1; unsigned short v3:16; };
struct __attribute__((packed)) aUc_BFu1s_BFu17i { unsigned char v1; unsigned short v2:1; unsigned int v3:17; };
struct __attribute__((packed)) aUc_BFu1s_BFu17ll { unsigned char v1; unsigned short v2:1; unsigned long long v3:17; };
struct __attribute__((packed)) aUc_BFu1s_BFu1c { unsigned char v1; unsigned short v2:1; unsigned char v3:1; };
struct __attribute__((packed)) aUc_BFu1s_BFu1i { unsigned char v1; unsigned short v2:1; unsigned int v3:1; };
struct __attribute__((packed)) aUc_BFu1s_BFu1ll { unsigned char v1; unsigned short v2:1; unsigned long long v3:1; };
struct __attribute__((packed)) aUc_BFu1s_BFu1s { unsigned char v1; unsigned short v2:1; unsigned short v3:1; };
struct __attribute__((packed)) aUc_BFu1s_BFu31i { unsigned char v1; unsigned short v2:1; unsigned int v3:31; };
struct __attribute__((packed)) aUc_BFu1s_BFu31ll { unsigned char v1; unsigned short v2:1; unsigned long long v3:31; };
struct __attribute__((packed)) aUc_BFu1s_BFu32i { unsigned char v1; unsigned short v2:1; unsigned int v3:32; };
struct __attribute__((packed)) aUc_BFu1s_BFu32ll { unsigned char v1; unsigned short v2:1; unsigned long long v3:32; };
struct __attribute__((packed)) aUc_BFu1s_BFu33 { unsigned char v1; unsigned short v2:1; unsigned long long v3:33; };
struct __attribute__((packed)) aUc_BFu1s_BFu7c { unsigned char v1; unsigned short v2:1; unsigned char v3:7; };
struct __attribute__((packed)) aUc_BFu1s_BFu7i { unsigned char v1; unsigned short v2:1; unsigned int v3:7; };
struct __attribute__((packed)) aUc_BFu1s_BFu7ll { unsigned char v1; unsigned short v2:1; unsigned long long v3:7; };
struct __attribute__((packed)) aUc_BFu1s_BFu7s { unsigned char v1; unsigned short v2:1; unsigned short v3:7; };
struct __attribute__((packed)) aUc_BFu1s_BFu8c { unsigned char v1; unsigned short v2:1; unsigned char v3:8; };
struct __attribute__((packed)) aUc_BFu1s_BFu8i { unsigned char v1; unsigned short v2:1; unsigned int v3:8; };
struct __attribute__((packed)) aUc_BFu1s_BFu8ll { unsigned char v1; unsigned short v2:1; unsigned long long v3:8; };
struct __attribute__((packed)) aUc_BFu1s_BFu8s { unsigned char v1; unsigned short v2:1; unsigned short v3:8; };
struct __attribute__((packed)) aUc_BFu1s_BFu9i { unsigned char v1; unsigned short v2:1; unsigned int v3:9; };
struct __attribute__((packed)) aUc_BFu1s_BFu9ll { unsigned char v1; unsigned short v2:1; unsigned long long v3:9; };
struct __attribute__((packed)) aUc_BFu1s_BFu9s { unsigned char v1; unsigned short v2:1; unsigned short v3:9; };
struct __attribute__((packed)) aUc_BFu1s_C { unsigned char v1; unsigned short v2:1; char v3; };
struct __attribute__((packed)) aUc_BFu1s_D { unsigned char v1; unsigned short v2:1; double v3; };
struct __attribute__((packed)) aUc_BFu1s_F { unsigned char v1; unsigned short v2:1; float v3; };
struct __attribute__((packed)) aUc_BFu1s_I { unsigned char v1; unsigned short v2:1; int v3; };
struct __attribute__((packed)) aUc_BFu1s_Ip { unsigned char v1; unsigned short v2:1; int * v3; };
struct __attribute__((packed)) aUc_BFu1s_L { unsigned char v1; unsigned short v2:1; long long v3; };
struct __attribute__((packed)) aUc_BFu1s_S { unsigned char v1; unsigned short v2:1; short v3; };
struct __attribute__((packed)) aUc_BFu1s_Uc { unsigned char v1; unsigned short v2:1; unsigned char v3; };
struct __attribute__((packed)) aUc_BFu1s_Ui { unsigned char v1; unsigned short v2:1; unsigned int v3; };
struct __attribute__((packed)) aUc_BFu1s_Ul { unsigned char v1; unsigned short v2:1; unsigned long long v3; };
struct __attribute__((packed)) aUc_BFu1s_Us { unsigned char v1; unsigned short v2:1; unsigned short v3; };
struct __attribute__((packed)) aUc_BFu1s_Vp { unsigned char v1; unsigned short v2:1; void * v3; };
struct __attribute__((packed)) aUc_BFu31i { unsigned char v1; unsigned int v2:31; };
struct __attribute__((packed)) aUc_BFu31i_BFu15i { unsigned char v1; unsigned int v2:31; unsigned int v3:15; };
struct __attribute__((packed)) aUc_BFu31i_BFu15ll { unsigned char v1; unsigned int v2:31; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_BFu31i_BFu15s { unsigned char v1; unsigned int v2:31; unsigned short v3:15; };
struct __attribute__((packed)) aUc_BFu31i_BFu16i { unsigned char v1; unsigned int v2:31; unsigned int v3:16; };
struct __attribute__((packed)) aUc_BFu31i_BFu16ll { unsigned char v1; unsigned int v2:31; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_BFu31i_BFu16s { unsigned char v1; unsigned int v2:31; unsigned short v3:16; };
struct __attribute__((packed)) aUc_BFu31i_BFu17i { unsigned char v1; unsigned int v2:31; unsigned int v3:17; };
struct __attribute__((packed)) aUc_BFu31i_BFu17ll { unsigned char v1; unsigned int v2:31; unsigned long long v3:17; };
struct __attribute__((packed)) aUc_BFu31i_BFu1c { unsigned char v1; unsigned int v2:31; unsigned char v3:1; };
struct __attribute__((packed)) aUc_BFu31i_BFu1i { unsigned char v1; unsigned int v2:31; unsigned int v3:1; };
struct __attribute__((packed)) aUc_BFu31i_BFu1ll { unsigned char v1; unsigned int v2:31; unsigned long long v3:1; };
struct __attribute__((packed)) aUc_BFu31i_BFu1s { unsigned char v1; unsigned int v2:31; unsigned short v3:1; };
struct __attribute__((packed)) aUc_BFu31i_BFu31i { unsigned char v1; unsigned int v2:31; unsigned int v3:31; };
struct __attribute__((packed)) aUc_BFu31i_BFu31ll { unsigned char v1; unsigned int v2:31; unsigned long long v3:31; };
struct __attribute__((packed)) aUc_BFu31i_BFu32i { unsigned char v1; unsigned int v2:31; unsigned int v3:32; };
struct __attribute__((packed)) aUc_BFu31i_BFu32ll { unsigned char v1; unsigned int v2:31; unsigned long long v3:32; };
struct __attribute__((packed)) aUc_BFu31i_BFu33 { unsigned char v1; unsigned int v2:31; unsigned long long v3:33; };
struct __attribute__((packed)) aUc_BFu31i_BFu7c { unsigned char v1; unsigned int v2:31; unsigned char v3:7; };
struct __attribute__((packed)) aUc_BFu31i_BFu7i { unsigned char v1; unsigned int v2:31; unsigned int v3:7; };
struct __attribute__((packed)) aUc_BFu31i_BFu7ll { unsigned char v1; unsigned int v2:31; unsigned long long v3:7; };
struct __attribute__((packed)) aUc_BFu31i_BFu7s { unsigned char v1; unsigned int v2:31; unsigned short v3:7; };
struct __attribute__((packed)) aUc_BFu31i_BFu8c { unsigned char v1; unsigned int v2:31; unsigned char v3:8; };
struct __attribute__((packed)) aUc_BFu31i_BFu8i { unsigned char v1; unsigned int v2:31; unsigned int v3:8; };
struct __attribute__((packed)) aUc_BFu31i_BFu8ll { unsigned char v1; unsigned int v2:31; unsigned long long v3:8; };
struct __attribute__((packed)) aUc_BFu31i_BFu8s { unsigned char v1; unsigned int v2:31; unsigned short v3:8; };
struct __attribute__((packed)) aUc_BFu31i_BFu9i { unsigned char v1; unsigned int v2:31; unsigned int v3:9; };
struct __attribute__((packed)) aUc_BFu31i_BFu9ll { unsigned char v1; unsigned int v2:31; unsigned long long v3:9; };
struct __attribute__((packed)) aUc_BFu31i_BFu9s { unsigned char v1; unsigned int v2:31; unsigned short v3:9; };
struct __attribute__((packed)) aUc_BFu31i_C { unsigned char v1; unsigned int v2:31; char v3; };
struct __attribute__((packed)) aUc_BFu31i_D { unsigned char v1; unsigned int v2:31; double v3; };
struct __attribute__((packed)) aUc_BFu31i_F { unsigned char v1; unsigned int v2:31; float v3; };
struct __attribute__((packed)) aUc_BFu31i_I { unsigned char v1; unsigned int v2:31; int v3; };
struct __attribute__((packed)) aUc_BFu31i_Ip { unsigned char v1; unsigned int v2:31; int * v3; };
struct __attribute__((packed)) aUc_BFu31i_L { unsigned char v1; unsigned int v2:31; long long v3; };
struct __attribute__((packed)) aUc_BFu31i_S { unsigned char v1; unsigned int v2:31; short v3; };
struct __attribute__((packed)) aUc_BFu31i_Uc { unsigned char v1; unsigned int v2:31; unsigned char v3; };
struct __attribute__((packed)) aUc_BFu31i_Ui { unsigned char v1; unsigned int v2:31; unsigned int v3; };
struct __attribute__((packed)) aUc_BFu31i_Ul { unsigned char v1; unsigned int v2:31; unsigned long long v3; };
struct __attribute__((packed)) aUc_BFu31i_Us { unsigned char v1; unsigned int v2:31; unsigned short v3; };
struct __attribute__((packed)) aUc_BFu31i_Vp { unsigned char v1; unsigned int v2:31; void * v3; };
struct __attribute__((packed)) aUc_BFu31ll { unsigned char v1; unsigned long long v2:31; };
struct __attribute__((packed)) aUc_BFu31ll_BFu15i { unsigned char v1; unsigned long long v2:31; unsigned int v3:15; };
struct __attribute__((packed)) aUc_BFu31ll_BFu15ll { unsigned char v1; unsigned long long v2:31; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_BFu31ll_BFu15s { unsigned char v1; unsigned long long v2:31; unsigned short v3:15; };
struct __attribute__((packed)) aUc_BFu31ll_BFu16i { unsigned char v1; unsigned long long v2:31; unsigned int v3:16; };
struct __attribute__((packed)) aUc_BFu31ll_BFu16ll { unsigned char v1; unsigned long long v2:31; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_BFu31ll_BFu16s { unsigned char v1; unsigned long long v2:31; unsigned short v3:16; };
struct __attribute__((packed)) aUc_BFu31ll_BFu17i { unsigned char v1; unsigned long long v2:31; unsigned int v3:17; };
struct __attribute__((packed)) aUc_BFu31ll_BFu17ll { unsigned char v1; unsigned long long v2:31; unsigned long long v3:17; };
struct __attribute__((packed)) aUc_BFu31ll_BFu1c { unsigned char v1; unsigned long long v2:31; unsigned char v3:1; };
struct __attribute__((packed)) aUc_BFu31ll_BFu1i { unsigned char v1; unsigned long long v2:31; unsigned int v3:1; };
struct __attribute__((packed)) aUc_BFu31ll_BFu1ll { unsigned char v1; unsigned long long v2:31; unsigned long long v3:1; };
struct __attribute__((packed)) aUc_BFu31ll_BFu1s { unsigned char v1; unsigned long long v2:31; unsigned short v3:1; };
struct __attribute__((packed)) aUc_BFu31ll_BFu31i { unsigned char v1; unsigned long long v2:31; unsigned int v3:31; };
struct __attribute__((packed)) aUc_BFu31ll_BFu31ll { unsigned char v1; unsigned long long v2:31; unsigned long long v3:31; };
struct __attribute__((packed)) aUc_BFu31ll_BFu32i { unsigned char v1; unsigned long long v2:31; unsigned int v3:32; };
struct __attribute__((packed)) aUc_BFu31ll_BFu32ll { unsigned char v1; unsigned long long v2:31; unsigned long long v3:32; };
struct __attribute__((packed)) aUc_BFu31ll_BFu33 { unsigned char v1; unsigned long long v2:31; unsigned long long v3:33; };
struct __attribute__((packed)) aUc_BFu31ll_BFu7c { unsigned char v1; unsigned long long v2:31; unsigned char v3:7; };
struct __attribute__((packed)) aUc_BFu31ll_BFu7i { unsigned char v1; unsigned long long v2:31; unsigned int v3:7; };
struct __attribute__((packed)) aUc_BFu31ll_BFu7ll { unsigned char v1; unsigned long long v2:31; unsigned long long v3:7; };
struct __attribute__((packed)) aUc_BFu31ll_BFu7s { unsigned char v1; unsigned long long v2:31; unsigned short v3:7; };
struct __attribute__((packed)) aUc_BFu31ll_BFu8c { unsigned char v1; unsigned long long v2:31; unsigned char v3:8; };
struct __attribute__((packed)) aUc_BFu31ll_BFu8i { unsigned char v1; unsigned long long v2:31; unsigned int v3:8; };
struct __attribute__((packed)) aUc_BFu31ll_BFu8ll { unsigned char v1; unsigned long long v2:31; unsigned long long v3:8; };
struct __attribute__((packed)) aUc_BFu31ll_BFu8s { unsigned char v1; unsigned long long v2:31; unsigned short v3:8; };
struct __attribute__((packed)) aUc_BFu31ll_BFu9i { unsigned char v1; unsigned long long v2:31; unsigned int v3:9; };
struct __attribute__((packed)) aUc_BFu31ll_BFu9ll { unsigned char v1; unsigned long long v2:31; unsigned long long v3:9; };
struct __attribute__((packed)) aUc_BFu31ll_BFu9s { unsigned char v1; unsigned long long v2:31; unsigned short v3:9; };
struct __attribute__((packed)) aUc_BFu31ll_C { unsigned char v1; unsigned long long v2:31; char v3; };
struct __attribute__((packed)) aUc_BFu31ll_D { unsigned char v1; unsigned long long v2:31; double v3; };
struct __attribute__((packed)) aUc_BFu31ll_F { unsigned char v1; unsigned long long v2:31; float v3; };
struct __attribute__((packed)) aUc_BFu31ll_I { unsigned char v1; unsigned long long v2:31; int v3; };
struct __attribute__((packed)) aUc_BFu31ll_Ip { unsigned char v1; unsigned long long v2:31; int * v3; };
struct __attribute__((packed)) aUc_BFu31ll_L { unsigned char v1; unsigned long long v2:31; long long v3; };
struct __attribute__((packed)) aUc_BFu31ll_S { unsigned char v1; unsigned long long v2:31; short v3; };
struct __attribute__((packed)) aUc_BFu31ll_Uc { unsigned char v1; unsigned long long v2:31; unsigned char v3; };
struct __attribute__((packed)) aUc_BFu31ll_Ui { unsigned char v1; unsigned long long v2:31; unsigned int v3; };
struct __attribute__((packed)) aUc_BFu31ll_Ul { unsigned char v1; unsigned long long v2:31; unsigned long long v3; };
struct __attribute__((packed)) aUc_BFu31ll_Us { unsigned char v1; unsigned long long v2:31; unsigned short v3; };
struct __attribute__((packed)) aUc_BFu31ll_Vp { unsigned char v1; unsigned long long v2:31; void * v3; };
struct __attribute__((packed)) aUc_BFu32i { unsigned char v1; unsigned int v2:32; };
struct __attribute__((packed)) aUc_BFu32i_BFu15i { unsigned char v1; unsigned int v2:32; unsigned int v3:15; };
struct __attribute__((packed)) aUc_BFu32i_BFu15ll { unsigned char v1; unsigned int v2:32; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_BFu32i_BFu15s { unsigned char v1; unsigned int v2:32; unsigned short v3:15; };
struct __attribute__((packed)) aUc_BFu32i_BFu16i { unsigned char v1; unsigned int v2:32; unsigned int v3:16; };
struct __attribute__((packed)) aUc_BFu32i_BFu16ll { unsigned char v1; unsigned int v2:32; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_BFu32i_BFu16s { unsigned char v1; unsigned int v2:32; unsigned short v3:16; };
struct __attribute__((packed)) aUc_BFu32i_BFu17i { unsigned char v1; unsigned int v2:32; unsigned int v3:17; };
struct __attribute__((packed)) aUc_BFu32i_BFu17ll { unsigned char v1; unsigned int v2:32; unsigned long long v3:17; };
struct __attribute__((packed)) aUc_BFu32i_BFu1c { unsigned char v1; unsigned int v2:32; unsigned char v3:1; };
struct __attribute__((packed)) aUc_BFu32i_BFu1i { unsigned char v1; unsigned int v2:32; unsigned int v3:1; };
struct __attribute__((packed)) aUc_BFu32i_BFu1ll { unsigned char v1; unsigned int v2:32; unsigned long long v3:1; };
struct __attribute__((packed)) aUc_BFu32i_BFu1s { unsigned char v1; unsigned int v2:32; unsigned short v3:1; };
struct __attribute__((packed)) aUc_BFu32i_BFu31i { unsigned char v1; unsigned int v2:32; unsigned int v3:31; };
struct __attribute__((packed)) aUc_BFu32i_BFu31ll { unsigned char v1; unsigned int v2:32; unsigned long long v3:31; };
struct __attribute__((packed)) aUc_BFu32i_BFu32i { unsigned char v1; unsigned int v2:32; unsigned int v3:32; };
struct __attribute__((packed)) aUc_BFu32i_BFu32ll { unsigned char v1; unsigned int v2:32; unsigned long long v3:32; };
struct __attribute__((packed)) aUc_BFu32i_BFu33 { unsigned char v1; unsigned int v2:32; unsigned long long v3:33; };
struct __attribute__((packed)) aUc_BFu32i_BFu7c { unsigned char v1; unsigned int v2:32; unsigned char v3:7; };
struct __attribute__((packed)) aUc_BFu32i_BFu7i { unsigned char v1; unsigned int v2:32; unsigned int v3:7; };
struct __attribute__((packed)) aUc_BFu32i_BFu7ll { unsigned char v1; unsigned int v2:32; unsigned long long v3:7; };
struct __attribute__((packed)) aUc_BFu32i_BFu7s { unsigned char v1; unsigned int v2:32; unsigned short v3:7; };
struct __attribute__((packed)) aUc_BFu32i_BFu8c { unsigned char v1; unsigned int v2:32; unsigned char v3:8; };
struct __attribute__((packed)) aUc_BFu32i_BFu8i { unsigned char v1; unsigned int v2:32; unsigned int v3:8; };
struct __attribute__((packed)) aUc_BFu32i_BFu8ll { unsigned char v1; unsigned int v2:32; unsigned long long v3:8; };
struct __attribute__((packed)) aUc_BFu32i_BFu8s { unsigned char v1; unsigned int v2:32; unsigned short v3:8; };
struct __attribute__((packed)) aUc_BFu32i_BFu9i { unsigned char v1; unsigned int v2:32; unsigned int v3:9; };
struct __attribute__((packed)) aUc_BFu32i_BFu9ll { unsigned char v1; unsigned int v2:32; unsigned long long v3:9; };
struct __attribute__((packed)) aUc_BFu32i_BFu9s { unsigned char v1; unsigned int v2:32; unsigned short v3:9; };
struct __attribute__((packed)) aUc_BFu32i_C { unsigned char v1; unsigned int v2:32; char v3; };
struct __attribute__((packed)) aUc_BFu32i_D { unsigned char v1; unsigned int v2:32; double v3; };
struct __attribute__((packed)) aUc_BFu32i_F { unsigned char v1; unsigned int v2:32; float v3; };
struct __attribute__((packed)) aUc_BFu32i_I { unsigned char v1; unsigned int v2:32; int v3; };
struct __attribute__((packed)) aUc_BFu32i_Ip { unsigned char v1; unsigned int v2:32; int * v3; };
struct __attribute__((packed)) aUc_BFu32i_L { unsigned char v1; unsigned int v2:32; long long v3; };
struct __attribute__((packed)) aUc_BFu32i_S { unsigned char v1; unsigned int v2:32; short v3; };
struct __attribute__((packed)) aUc_BFu32i_Uc { unsigned char v1; unsigned int v2:32; unsigned char v3; };
struct __attribute__((packed)) aUc_BFu32i_Ui { unsigned char v1; unsigned int v2:32; unsigned int v3; };
struct __attribute__((packed)) aUc_BFu32i_Ul { unsigned char v1; unsigned int v2:32; unsigned long long v3; };
struct __attribute__((packed)) aUc_BFu32i_Us { unsigned char v1; unsigned int v2:32; unsigned short v3; };
struct __attribute__((packed)) aUc_BFu32i_Vp { unsigned char v1; unsigned int v2:32; void * v3; };
struct __attribute__((packed)) aUc_BFu32ll { unsigned char v1; unsigned long long v2:32; };
struct __attribute__((packed)) aUc_BFu32ll_BFu15i { unsigned char v1; unsigned long long v2:32; unsigned int v3:15; };
struct __attribute__((packed)) aUc_BFu32ll_BFu15ll { unsigned char v1; unsigned long long v2:32; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_BFu32ll_BFu15s { unsigned char v1; unsigned long long v2:32; unsigned short v3:15; };
struct __attribute__((packed)) aUc_BFu32ll_BFu16i { unsigned char v1; unsigned long long v2:32; unsigned int v3:16; };
struct __attribute__((packed)) aUc_BFu32ll_BFu16ll { unsigned char v1; unsigned long long v2:32; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_BFu32ll_BFu16s { unsigned char v1; unsigned long long v2:32; unsigned short v3:16; };
struct __attribute__((packed)) aUc_BFu32ll_BFu17i { unsigned char v1; unsigned long long v2:32; unsigned int v3:17; };
struct __attribute__((packed)) aUc_BFu32ll_BFu17ll { unsigned char v1; unsigned long long v2:32; unsigned long long v3:17; };
struct __attribute__((packed)) aUc_BFu32ll_BFu1c { unsigned char v1; unsigned long long v2:32; unsigned char v3:1; };
struct __attribute__((packed)) aUc_BFu32ll_BFu1i { unsigned char v1; unsigned long long v2:32; unsigned int v3:1; };
struct __attribute__((packed)) aUc_BFu32ll_BFu1ll { unsigned char v1; unsigned long long v2:32; unsigned long long v3:1; };
struct __attribute__((packed)) aUc_BFu32ll_BFu1s { unsigned char v1; unsigned long long v2:32; unsigned short v3:1; };
struct __attribute__((packed)) aUc_BFu32ll_BFu31i { unsigned char v1; unsigned long long v2:32; unsigned int v3:31; };
struct __attribute__((packed)) aUc_BFu32ll_BFu31ll { unsigned char v1; unsigned long long v2:32; unsigned long long v3:31; };
struct __attribute__((packed)) aUc_BFu32ll_BFu32i { unsigned char v1; unsigned long long v2:32; unsigned int v3:32; };
struct __attribute__((packed)) aUc_BFu32ll_BFu32ll { unsigned char v1; unsigned long long v2:32; unsigned long long v3:32; };
struct __attribute__((packed)) aUc_BFu32ll_BFu33 { unsigned char v1; unsigned long long v2:32; unsigned long long v3:33; };
struct __attribute__((packed)) aUc_BFu32ll_BFu7c { unsigned char v1; unsigned long long v2:32; unsigned char v3:7; };
struct __attribute__((packed)) aUc_BFu32ll_BFu7i { unsigned char v1; unsigned long long v2:32; unsigned int v3:7; };
struct __attribute__((packed)) aUc_BFu32ll_BFu7ll { unsigned char v1; unsigned long long v2:32; unsigned long long v3:7; };
struct __attribute__((packed)) aUc_BFu32ll_BFu7s { unsigned char v1; unsigned long long v2:32; unsigned short v3:7; };
struct __attribute__((packed)) aUc_BFu32ll_BFu8c { unsigned char v1; unsigned long long v2:32; unsigned char v3:8; };
struct __attribute__((packed)) aUc_BFu32ll_BFu8i { unsigned char v1; unsigned long long v2:32; unsigned int v3:8; };
struct __attribute__((packed)) aUc_BFu32ll_BFu8ll { unsigned char v1; unsigned long long v2:32; unsigned long long v3:8; };
struct __attribute__((packed)) aUc_BFu32ll_BFu8s { unsigned char v1; unsigned long long v2:32; unsigned short v3:8; };
struct __attribute__((packed)) aUc_BFu32ll_BFu9i { unsigned char v1; unsigned long long v2:32; unsigned int v3:9; };
struct __attribute__((packed)) aUc_BFu32ll_BFu9ll { unsigned char v1; unsigned long long v2:32; unsigned long long v3:9; };
struct __attribute__((packed)) aUc_BFu32ll_BFu9s { unsigned char v1; unsigned long long v2:32; unsigned short v3:9; };
struct __attribute__((packed)) aUc_BFu32ll_C { unsigned char v1; unsigned long long v2:32; char v3; };
struct __attribute__((packed)) aUc_BFu32ll_D { unsigned char v1; unsigned long long v2:32; double v3; };
struct __attribute__((packed)) aUc_BFu32ll_F { unsigned char v1; unsigned long long v2:32; float v3; };
struct __attribute__((packed)) aUc_BFu32ll_I { unsigned char v1; unsigned long long v2:32; int v3; };
struct __attribute__((packed)) aUc_BFu32ll_Ip { unsigned char v1; unsigned long long v2:32; int * v3; };
struct __attribute__((packed)) aUc_BFu32ll_L { unsigned char v1; unsigned long long v2:32; long long v3; };
struct __attribute__((packed)) aUc_BFu32ll_S { unsigned char v1; unsigned long long v2:32; short v3; };
struct __attribute__((packed)) aUc_BFu32ll_Uc { unsigned char v1; unsigned long long v2:32; unsigned char v3; };
struct __attribute__((packed)) aUc_BFu32ll_Ui { unsigned char v1; unsigned long long v2:32; unsigned int v3; };
struct __attribute__((packed)) aUc_BFu32ll_Ul { unsigned char v1; unsigned long long v2:32; unsigned long long v3; };
struct __attribute__((packed)) aUc_BFu32ll_Us { unsigned char v1; unsigned long long v2:32; unsigned short v3; };
struct __attribute__((packed)) aUc_BFu32ll_Vp { unsigned char v1; unsigned long long v2:32; void * v3; };
struct __attribute__((packed)) aUc_BFu33 { unsigned char v1; unsigned long long v2:33; };
struct __attribute__((packed)) aUc_BFu33_BFu15i { unsigned char v1; unsigned long long v2:33; unsigned int v3:15; };
struct __attribute__((packed)) aUc_BFu33_BFu15ll { unsigned char v1; unsigned long long v2:33; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_BFu33_BFu15s { unsigned char v1; unsigned long long v2:33; unsigned short v3:15; };
struct __attribute__((packed)) aUc_BFu33_BFu16i { unsigned char v1; unsigned long long v2:33; unsigned int v3:16; };
struct __attribute__((packed)) aUc_BFu33_BFu16ll { unsigned char v1; unsigned long long v2:33; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_BFu33_BFu16s { unsigned char v1; unsigned long long v2:33; unsigned short v3:16; };
struct __attribute__((packed)) aUc_BFu33_BFu17i { unsigned char v1; unsigned long long v2:33; unsigned int v3:17; };
struct __attribute__((packed)) aUc_BFu33_BFu17ll { unsigned char v1; unsigned long long v2:33; unsigned long long v3:17; };
struct __attribute__((packed)) aUc_BFu33_BFu1c { unsigned char v1; unsigned long long v2:33; unsigned char v3:1; };
struct __attribute__((packed)) aUc_BFu33_BFu1i { unsigned char v1; unsigned long long v2:33; unsigned int v3:1; };
struct __attribute__((packed)) aUc_BFu33_BFu1ll { unsigned char v1; unsigned long long v2:33; unsigned long long v3:1; };
struct __attribute__((packed)) aUc_BFu33_BFu1s { unsigned char v1; unsigned long long v2:33; unsigned short v3:1; };
struct __attribute__((packed)) aUc_BFu33_BFu31i { unsigned char v1; unsigned long long v2:33; unsigned int v3:31; };
struct __attribute__((packed)) aUc_BFu33_BFu31ll { unsigned char v1; unsigned long long v2:33; unsigned long long v3:31; };
struct __attribute__((packed)) aUc_BFu33_BFu32i { unsigned char v1; unsigned long long v2:33; unsigned int v3:32; };
struct __attribute__((packed)) aUc_BFu33_BFu32ll { unsigned char v1; unsigned long long v2:33; unsigned long long v3:32; };
struct __attribute__((packed)) aUc_BFu33_BFu33 { unsigned char v1; unsigned long long v2:33; unsigned long long v3:33; };
struct __attribute__((packed)) aUc_BFu33_BFu7c { unsigned char v1; unsigned long long v2:33; unsigned char v3:7; };
struct __attribute__((packed)) aUc_BFu33_BFu7i { unsigned char v1; unsigned long long v2:33; unsigned int v3:7; };
struct __attribute__((packed)) aUc_BFu33_BFu7ll { unsigned char v1; unsigned long long v2:33; unsigned long long v3:7; };
struct __attribute__((packed)) aUc_BFu33_BFu7s { unsigned char v1; unsigned long long v2:33; unsigned short v3:7; };
struct __attribute__((packed)) aUc_BFu33_BFu8c { unsigned char v1; unsigned long long v2:33; unsigned char v3:8; };
struct __attribute__((packed)) aUc_BFu33_BFu8i { unsigned char v1; unsigned long long v2:33; unsigned int v3:8; };
struct __attribute__((packed)) aUc_BFu33_BFu8ll { unsigned char v1; unsigned long long v2:33; unsigned long long v3:8; };
struct __attribute__((packed)) aUc_BFu33_BFu8s { unsigned char v1; unsigned long long v2:33; unsigned short v3:8; };
struct __attribute__((packed)) aUc_BFu33_BFu9i { unsigned char v1; unsigned long long v2:33; unsigned int v3:9; };
struct __attribute__((packed)) aUc_BFu33_BFu9ll { unsigned char v1; unsigned long long v2:33; unsigned long long v3:9; };
struct __attribute__((packed)) aUc_BFu33_BFu9s { unsigned char v1; unsigned long long v2:33; unsigned short v3:9; };
struct __attribute__((packed)) aUc_BFu33_C { unsigned char v1; unsigned long long v2:33; char v3; };
struct __attribute__((packed)) aUc_BFu33_D { unsigned char v1; unsigned long long v2:33; double v3; };
struct __attribute__((packed)) aUc_BFu33_F { unsigned char v1; unsigned long long v2:33; float v3; };
struct __attribute__((packed)) aUc_BFu33_I { unsigned char v1; unsigned long long v2:33; int v3; };
struct __attribute__((packed)) aUc_BFu33_Ip { unsigned char v1; unsigned long long v2:33; int * v3; };
struct __attribute__((packed)) aUc_BFu33_L { unsigned char v1; unsigned long long v2:33; long long v3; };
struct __attribute__((packed)) aUc_BFu33_S { unsigned char v1; unsigned long long v2:33; short v3; };
struct __attribute__((packed)) aUc_BFu33_Uc { unsigned char v1; unsigned long long v2:33; unsigned char v3; };
struct __attribute__((packed)) aUc_BFu33_Ui { unsigned char v1; unsigned long long v2:33; unsigned int v3; };
struct __attribute__((packed)) aUc_BFu33_Ul { unsigned char v1; unsigned long long v2:33; unsigned long long v3; };
struct __attribute__((packed)) aUc_BFu33_Us { unsigned char v1; unsigned long long v2:33; unsigned short v3; };
struct __attribute__((packed)) aUc_BFu33_Vp { unsigned char v1; unsigned long long v2:33; void * v3; };
struct __attribute__((packed)) aUc_BFu7c { unsigned char v1; unsigned char v2:7; };
struct __attribute__((packed)) aUc_BFu7c_BFu15i { unsigned char v1; unsigned char v2:7; unsigned int v3:15; };
struct __attribute__((packed)) aUc_BFu7c_BFu15ll { unsigned char v1; unsigned char v2:7; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_BFu7c_BFu15s { unsigned char v1; unsigned char v2:7; unsigned short v3:15; };
struct __attribute__((packed)) aUc_BFu7c_BFu16i { unsigned char v1; unsigned char v2:7; unsigned int v3:16; };
struct __attribute__((packed)) aUc_BFu7c_BFu16ll { unsigned char v1; unsigned char v2:7; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_BFu7c_BFu16s { unsigned char v1; unsigned char v2:7; unsigned short v3:16; };
struct __attribute__((packed)) aUc_BFu7c_BFu17i { unsigned char v1; unsigned char v2:7; unsigned int v3:17; };
struct __attribute__((packed)) aUc_BFu7c_BFu17ll { unsigned char v1; unsigned char v2:7; unsigned long long v3:17; };
struct __attribute__((packed)) aUc_BFu7c_BFu1c { unsigned char v1; unsigned char v2:7; unsigned char v3:1; };
struct __attribute__((packed)) aUc_BFu7c_BFu1i { unsigned char v1; unsigned char v2:7; unsigned int v3:1; };
struct __attribute__((packed)) aUc_BFu7c_BFu1ll { unsigned char v1; unsigned char v2:7; unsigned long long v3:1; };
struct __attribute__((packed)) aUc_BFu7c_BFu1s { unsigned char v1; unsigned char v2:7; unsigned short v3:1; };
struct __attribute__((packed)) aUc_BFu7c_BFu31i { unsigned char v1; unsigned char v2:7; unsigned int v3:31; };
struct __attribute__((packed)) aUc_BFu7c_BFu31ll { unsigned char v1; unsigned char v2:7; unsigned long long v3:31; };
struct __attribute__((packed)) aUc_BFu7c_BFu32i { unsigned char v1; unsigned char v2:7; unsigned int v3:32; };
struct __attribute__((packed)) aUc_BFu7c_BFu32ll { unsigned char v1; unsigned char v2:7; unsigned long long v3:32; };
struct __attribute__((packed)) aUc_BFu7c_BFu33 { unsigned char v1; unsigned char v2:7; unsigned long long v3:33; };
struct __attribute__((packed)) aUc_BFu7c_BFu7c { unsigned char v1; unsigned char v2:7; unsigned char v3:7; };
struct __attribute__((packed)) aUc_BFu7c_BFu7i { unsigned char v1; unsigned char v2:7; unsigned int v3:7; };
struct __attribute__((packed)) aUc_BFu7c_BFu7ll { unsigned char v1; unsigned char v2:7; unsigned long long v3:7; };
struct __attribute__((packed)) aUc_BFu7c_BFu7s { unsigned char v1; unsigned char v2:7; unsigned short v3:7; };
struct __attribute__((packed)) aUc_BFu7c_BFu8c { unsigned char v1; unsigned char v2:7; unsigned char v3:8; };
struct __attribute__((packed)) aUc_BFu7c_BFu8i { unsigned char v1; unsigned char v2:7; unsigned int v3:8; };
struct __attribute__((packed)) aUc_BFu7c_BFu8ll { unsigned char v1; unsigned char v2:7; unsigned long long v3:8; };
struct __attribute__((packed)) aUc_BFu7c_BFu8s { unsigned char v1; unsigned char v2:7; unsigned short v3:8; };
struct __attribute__((packed)) aUc_BFu7c_BFu9i { unsigned char v1; unsigned char v2:7; unsigned int v3:9; };
struct __attribute__((packed)) aUc_BFu7c_BFu9ll { unsigned char v1; unsigned char v2:7; unsigned long long v3:9; };
struct __attribute__((packed)) aUc_BFu7c_BFu9s { unsigned char v1; unsigned char v2:7; unsigned short v3:9; };
struct __attribute__((packed)) aUc_BFu7c_C { unsigned char v1; unsigned char v2:7; char v3; };
struct __attribute__((packed)) aUc_BFu7c_D { unsigned char v1; unsigned char v2:7; double v3; };
struct __attribute__((packed)) aUc_BFu7c_F { unsigned char v1; unsigned char v2:7; float v3; };
struct __attribute__((packed)) aUc_BFu7c_I { unsigned char v1; unsigned char v2:7; int v3; };
struct __attribute__((packed)) aUc_BFu7c_Ip { unsigned char v1; unsigned char v2:7; int * v3; };
struct __attribute__((packed)) aUc_BFu7c_L { unsigned char v1; unsigned char v2:7; long long v3; };
struct __attribute__((packed)) aUc_BFu7c_S { unsigned char v1; unsigned char v2:7; short v3; };
struct __attribute__((packed)) aUc_BFu7c_Uc { unsigned char v1; unsigned char v2:7; unsigned char v3; };
struct __attribute__((packed)) aUc_BFu7c_Ui { unsigned char v1; unsigned char v2:7; unsigned int v3; };
struct __attribute__((packed)) aUc_BFu7c_Ul { unsigned char v1; unsigned char v2:7; unsigned long long v3; };
struct __attribute__((packed)) aUc_BFu7c_Us { unsigned char v1; unsigned char v2:7; unsigned short v3; };
struct __attribute__((packed)) aUc_BFu7c_Vp { unsigned char v1; unsigned char v2:7; void * v3; };
struct __attribute__((packed)) aUc_BFu7i { unsigned char v1; unsigned int v2:7; };
struct __attribute__((packed)) aUc_BFu7i_BFu15i { unsigned char v1; unsigned int v2:7; unsigned int v3:15; };
struct __attribute__((packed)) aUc_BFu7i_BFu15ll { unsigned char v1; unsigned int v2:7; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_BFu7i_BFu15s { unsigned char v1; unsigned int v2:7; unsigned short v3:15; };
struct __attribute__((packed)) aUc_BFu7i_BFu16i { unsigned char v1; unsigned int v2:7; unsigned int v3:16; };
struct __attribute__((packed)) aUc_BFu7i_BFu16ll { unsigned char v1; unsigned int v2:7; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_BFu7i_BFu16s { unsigned char v1; unsigned int v2:7; unsigned short v3:16; };
struct __attribute__((packed)) aUc_BFu7i_BFu17i { unsigned char v1; unsigned int v2:7; unsigned int v3:17; };
struct __attribute__((packed)) aUc_BFu7i_BFu17ll { unsigned char v1; unsigned int v2:7; unsigned long long v3:17; };
struct __attribute__((packed)) aUc_BFu7i_BFu1c { unsigned char v1; unsigned int v2:7; unsigned char v3:1; };
struct __attribute__((packed)) aUc_BFu7i_BFu1i { unsigned char v1; unsigned int v2:7; unsigned int v3:1; };
struct __attribute__((packed)) aUc_BFu7i_BFu1ll { unsigned char v1; unsigned int v2:7; unsigned long long v3:1; };
struct __attribute__((packed)) aUc_BFu7i_BFu1s { unsigned char v1; unsigned int v2:7; unsigned short v3:1; };
struct __attribute__((packed)) aUc_BFu7i_BFu31i { unsigned char v1; unsigned int v2:7; unsigned int v3:31; };
struct __attribute__((packed)) aUc_BFu7i_BFu31ll { unsigned char v1; unsigned int v2:7; unsigned long long v3:31; };
struct __attribute__((packed)) aUc_BFu7i_BFu32i { unsigned char v1; unsigned int v2:7; unsigned int v3:32; };
struct __attribute__((packed)) aUc_BFu7i_BFu32ll { unsigned char v1; unsigned int v2:7; unsigned long long v3:32; };
struct __attribute__((packed)) aUc_BFu7i_BFu33 { unsigned char v1; unsigned int v2:7; unsigned long long v3:33; };
struct __attribute__((packed)) aUc_BFu7i_BFu7c { unsigned char v1; unsigned int v2:7; unsigned char v3:7; };
struct __attribute__((packed)) aUc_BFu7i_BFu7i { unsigned char v1; unsigned int v2:7; unsigned int v3:7; };
struct __attribute__((packed)) aUc_BFu7i_BFu7ll { unsigned char v1; unsigned int v2:7; unsigned long long v3:7; };
struct __attribute__((packed)) aUc_BFu7i_BFu7s { unsigned char v1; unsigned int v2:7; unsigned short v3:7; };
struct __attribute__((packed)) aUc_BFu7i_BFu8c { unsigned char v1; unsigned int v2:7; unsigned char v3:8; };
struct __attribute__((packed)) aUc_BFu7i_BFu8i { unsigned char v1; unsigned int v2:7; unsigned int v3:8; };
struct __attribute__((packed)) aUc_BFu7i_BFu8ll { unsigned char v1; unsigned int v2:7; unsigned long long v3:8; };
struct __attribute__((packed)) aUc_BFu7i_BFu8s { unsigned char v1; unsigned int v2:7; unsigned short v3:8; };
struct __attribute__((packed)) aUc_BFu7i_BFu9i { unsigned char v1; unsigned int v2:7; unsigned int v3:9; };
struct __attribute__((packed)) aUc_BFu7i_BFu9ll { unsigned char v1; unsigned int v2:7; unsigned long long v3:9; };
struct __attribute__((packed)) aUc_BFu7i_BFu9s { unsigned char v1; unsigned int v2:7; unsigned short v3:9; };
struct __attribute__((packed)) aUc_BFu7i_C { unsigned char v1; unsigned int v2:7; char v3; };
struct __attribute__((packed)) aUc_BFu7i_D { unsigned char v1; unsigned int v2:7; double v3; };
struct __attribute__((packed)) aUc_BFu7i_F { unsigned char v1; unsigned int v2:7; float v3; };
struct __attribute__((packed)) aUc_BFu7i_I { unsigned char v1; unsigned int v2:7; int v3; };
struct __attribute__((packed)) aUc_BFu7i_Ip { unsigned char v1; unsigned int v2:7; int * v3; };
struct __attribute__((packed)) aUc_BFu7i_L { unsigned char v1; unsigned int v2:7; long long v3; };
struct __attribute__((packed)) aUc_BFu7i_S { unsigned char v1; unsigned int v2:7; short v3; };
struct __attribute__((packed)) aUc_BFu7i_Uc { unsigned char v1; unsigned int v2:7; unsigned char v3; };
struct __attribute__((packed)) aUc_BFu7i_Ui { unsigned char v1; unsigned int v2:7; unsigned int v3; };
struct __attribute__((packed)) aUc_BFu7i_Ul { unsigned char v1; unsigned int v2:7; unsigned long long v3; };
struct __attribute__((packed)) aUc_BFu7i_Us { unsigned char v1; unsigned int v2:7; unsigned short v3; };
struct __attribute__((packed)) aUc_BFu7i_Vp { unsigned char v1; unsigned int v2:7; void * v3; };
struct __attribute__((packed)) aUc_BFu7ll { unsigned char v1; unsigned long long v2:7; };
struct __attribute__((packed)) aUc_BFu7ll_BFu15i { unsigned char v1; unsigned long long v2:7; unsigned int v3:15; };
struct __attribute__((packed)) aUc_BFu7ll_BFu15ll { unsigned char v1; unsigned long long v2:7; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_BFu7ll_BFu15s { unsigned char v1; unsigned long long v2:7; unsigned short v3:15; };
struct __attribute__((packed)) aUc_BFu7ll_BFu16i { unsigned char v1; unsigned long long v2:7; unsigned int v3:16; };
struct __attribute__((packed)) aUc_BFu7ll_BFu16ll { unsigned char v1; unsigned long long v2:7; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_BFu7ll_BFu16s { unsigned char v1; unsigned long long v2:7; unsigned short v3:16; };
struct __attribute__((packed)) aUc_BFu7ll_BFu17i { unsigned char v1; unsigned long long v2:7; unsigned int v3:17; };
struct __attribute__((packed)) aUc_BFu7ll_BFu17ll { unsigned char v1; unsigned long long v2:7; unsigned long long v3:17; };
struct __attribute__((packed)) aUc_BFu7ll_BFu1c { unsigned char v1; unsigned long long v2:7; unsigned char v3:1; };
struct __attribute__((packed)) aUc_BFu7ll_BFu1i { unsigned char v1; unsigned long long v2:7; unsigned int v3:1; };
struct __attribute__((packed)) aUc_BFu7ll_BFu1ll { unsigned char v1; unsigned long long v2:7; unsigned long long v3:1; };
struct __attribute__((packed)) aUc_BFu7ll_BFu1s { unsigned char v1; unsigned long long v2:7; unsigned short v3:1; };
struct __attribute__((packed)) aUc_BFu7ll_BFu31i { unsigned char v1; unsigned long long v2:7; unsigned int v3:31; };
struct __attribute__((packed)) aUc_BFu7ll_BFu31ll { unsigned char v1; unsigned long long v2:7; unsigned long long v3:31; };
struct __attribute__((packed)) aUc_BFu7ll_BFu32i { unsigned char v1; unsigned long long v2:7; unsigned int v3:32; };
struct __attribute__((packed)) aUc_BFu7ll_BFu32ll { unsigned char v1; unsigned long long v2:7; unsigned long long v3:32; };
struct __attribute__((packed)) aUc_BFu7ll_BFu33 { unsigned char v1; unsigned long long v2:7; unsigned long long v3:33; };
struct __attribute__((packed)) aUc_BFu7ll_BFu7c { unsigned char v1; unsigned long long v2:7; unsigned char v3:7; };
struct __attribute__((packed)) aUc_BFu7ll_BFu7i { unsigned char v1; unsigned long long v2:7; unsigned int v3:7; };
struct __attribute__((packed)) aUc_BFu7ll_BFu7ll { unsigned char v1; unsigned long long v2:7; unsigned long long v3:7; };
struct __attribute__((packed)) aUc_BFu7ll_BFu7s { unsigned char v1; unsigned long long v2:7; unsigned short v3:7; };
struct __attribute__((packed)) aUc_BFu7ll_BFu8c { unsigned char v1; unsigned long long v2:7; unsigned char v3:8; };
struct __attribute__((packed)) aUc_BFu7ll_BFu8i { unsigned char v1; unsigned long long v2:7; unsigned int v3:8; };
struct __attribute__((packed)) aUc_BFu7ll_BFu8ll { unsigned char v1; unsigned long long v2:7; unsigned long long v3:8; };
struct __attribute__((packed)) aUc_BFu7ll_BFu8s { unsigned char v1; unsigned long long v2:7; unsigned short v3:8; };
struct __attribute__((packed)) aUc_BFu7ll_BFu9i { unsigned char v1; unsigned long long v2:7; unsigned int v3:9; };
struct __attribute__((packed)) aUc_BFu7ll_BFu9ll { unsigned char v1; unsigned long long v2:7; unsigned long long v3:9; };
struct __attribute__((packed)) aUc_BFu7ll_BFu9s { unsigned char v1; unsigned long long v2:7; unsigned short v3:9; };
struct __attribute__((packed)) aUc_BFu7ll_C { unsigned char v1; unsigned long long v2:7; char v3; };
struct __attribute__((packed)) aUc_BFu7ll_D { unsigned char v1; unsigned long long v2:7; double v3; };
struct __attribute__((packed)) aUc_BFu7ll_F { unsigned char v1; unsigned long long v2:7; float v3; };
struct __attribute__((packed)) aUc_BFu7ll_I { unsigned char v1; unsigned long long v2:7; int v3; };
struct __attribute__((packed)) aUc_BFu7ll_Ip { unsigned char v1; unsigned long long v2:7; int * v3; };
struct __attribute__((packed)) aUc_BFu7ll_L { unsigned char v1; unsigned long long v2:7; long long v3; };
struct __attribute__((packed)) aUc_BFu7ll_S { unsigned char v1; unsigned long long v2:7; short v3; };
struct __attribute__((packed)) aUc_BFu7ll_Uc { unsigned char v1; unsigned long long v2:7; unsigned char v3; };
struct __attribute__((packed)) aUc_BFu7ll_Ui { unsigned char v1; unsigned long long v2:7; unsigned int v3; };
struct __attribute__((packed)) aUc_BFu7ll_Ul { unsigned char v1; unsigned long long v2:7; unsigned long long v3; };
struct __attribute__((packed)) aUc_BFu7ll_Us { unsigned char v1; unsigned long long v2:7; unsigned short v3; };
struct __attribute__((packed)) aUc_BFu7ll_Vp { unsigned char v1; unsigned long long v2:7; void * v3; };
struct __attribute__((packed)) aUc_BFu7s { unsigned char v1; unsigned short v2:7; };
struct __attribute__((packed)) aUc_BFu7s_BFu15i { unsigned char v1; unsigned short v2:7; unsigned int v3:15; };
struct __attribute__((packed)) aUc_BFu7s_BFu15ll { unsigned char v1; unsigned short v2:7; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_BFu7s_BFu15s { unsigned char v1; unsigned short v2:7; unsigned short v3:15; };
struct __attribute__((packed)) aUc_BFu7s_BFu16i { unsigned char v1; unsigned short v2:7; unsigned int v3:16; };
struct __attribute__((packed)) aUc_BFu7s_BFu16ll { unsigned char v1; unsigned short v2:7; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_BFu7s_BFu16s { unsigned char v1; unsigned short v2:7; unsigned short v3:16; };
struct __attribute__((packed)) aUc_BFu7s_BFu17i { unsigned char v1; unsigned short v2:7; unsigned int v3:17; };
struct __attribute__((packed)) aUc_BFu7s_BFu17ll { unsigned char v1; unsigned short v2:7; unsigned long long v3:17; };
struct __attribute__((packed)) aUc_BFu7s_BFu1c { unsigned char v1; unsigned short v2:7; unsigned char v3:1; };
struct __attribute__((packed)) aUc_BFu7s_BFu1i { unsigned char v1; unsigned short v2:7; unsigned int v3:1; };
struct __attribute__((packed)) aUc_BFu7s_BFu1ll { unsigned char v1; unsigned short v2:7; unsigned long long v3:1; };
struct __attribute__((packed)) aUc_BFu7s_BFu1s { unsigned char v1; unsigned short v2:7; unsigned short v3:1; };
struct __attribute__((packed)) aUc_BFu7s_BFu31i { unsigned char v1; unsigned short v2:7; unsigned int v3:31; };
struct __attribute__((packed)) aUc_BFu7s_BFu31ll { unsigned char v1; unsigned short v2:7; unsigned long long v3:31; };
struct __attribute__((packed)) aUc_BFu7s_BFu32i { unsigned char v1; unsigned short v2:7; unsigned int v3:32; };
struct __attribute__((packed)) aUc_BFu7s_BFu32ll { unsigned char v1; unsigned short v2:7; unsigned long long v3:32; };
struct __attribute__((packed)) aUc_BFu7s_BFu33 { unsigned char v1; unsigned short v2:7; unsigned long long v3:33; };
struct __attribute__((packed)) aUc_BFu7s_BFu7c { unsigned char v1; unsigned short v2:7; unsigned char v3:7; };
struct __attribute__((packed)) aUc_BFu7s_BFu7i { unsigned char v1; unsigned short v2:7; unsigned int v3:7; };
struct __attribute__((packed)) aUc_BFu7s_BFu7ll { unsigned char v1; unsigned short v2:7; unsigned long long v3:7; };
struct __attribute__((packed)) aUc_BFu7s_BFu7s { unsigned char v1; unsigned short v2:7; unsigned short v3:7; };
struct __attribute__((packed)) aUc_BFu7s_BFu8c { unsigned char v1; unsigned short v2:7; unsigned char v3:8; };
struct __attribute__((packed)) aUc_BFu7s_BFu8i { unsigned char v1; unsigned short v2:7; unsigned int v3:8; };
struct __attribute__((packed)) aUc_BFu7s_BFu8ll { unsigned char v1; unsigned short v2:7; unsigned long long v3:8; };
struct __attribute__((packed)) aUc_BFu7s_BFu8s { unsigned char v1; unsigned short v2:7; unsigned short v3:8; };
struct __attribute__((packed)) aUc_BFu7s_BFu9i { unsigned char v1; unsigned short v2:7; unsigned int v3:9; };
struct __attribute__((packed)) aUc_BFu7s_BFu9ll { unsigned char v1; unsigned short v2:7; unsigned long long v3:9; };
struct __attribute__((packed)) aUc_BFu7s_BFu9s { unsigned char v1; unsigned short v2:7; unsigned short v3:9; };
struct __attribute__((packed)) aUc_BFu7s_C { unsigned char v1; unsigned short v2:7; char v3; };
struct __attribute__((packed)) aUc_BFu7s_D { unsigned char v1; unsigned short v2:7; double v3; };
struct __attribute__((packed)) aUc_BFu7s_F { unsigned char v1; unsigned short v2:7; float v3; };
struct __attribute__((packed)) aUc_BFu7s_I { unsigned char v1; unsigned short v2:7; int v3; };
struct __attribute__((packed)) aUc_BFu7s_Ip { unsigned char v1; unsigned short v2:7; int * v3; };
struct __attribute__((packed)) aUc_BFu7s_L { unsigned char v1; unsigned short v2:7; long long v3; };
struct __attribute__((packed)) aUc_BFu7s_S { unsigned char v1; unsigned short v2:7; short v3; };
struct __attribute__((packed)) aUc_BFu7s_Uc { unsigned char v1; unsigned short v2:7; unsigned char v3; };
struct __attribute__((packed)) aUc_BFu7s_Ui { unsigned char v1; unsigned short v2:7; unsigned int v3; };
struct __attribute__((packed)) aUc_BFu7s_Ul { unsigned char v1; unsigned short v2:7; unsigned long long v3; };
struct __attribute__((packed)) aUc_BFu7s_Us { unsigned char v1; unsigned short v2:7; unsigned short v3; };
struct __attribute__((packed)) aUc_BFu7s_Vp { unsigned char v1; unsigned short v2:7; void * v3; };
struct __attribute__((packed)) aUc_BFu8c { unsigned char v1; unsigned char v2:8; };
struct __attribute__((packed)) aUc_BFu8c_BFu15i { unsigned char v1; unsigned char v2:8; unsigned int v3:15; };
struct __attribute__((packed)) aUc_BFu8c_BFu15ll { unsigned char v1; unsigned char v2:8; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_BFu8c_BFu15s { unsigned char v1; unsigned char v2:8; unsigned short v3:15; };
struct __attribute__((packed)) aUc_BFu8c_BFu16i { unsigned char v1; unsigned char v2:8; unsigned int v3:16; };
struct __attribute__((packed)) aUc_BFu8c_BFu16ll { unsigned char v1; unsigned char v2:8; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_BFu8c_BFu16s { unsigned char v1; unsigned char v2:8; unsigned short v3:16; };
struct __attribute__((packed)) aUc_BFu8c_BFu17i { unsigned char v1; unsigned char v2:8; unsigned int v3:17; };
struct __attribute__((packed)) aUc_BFu8c_BFu17ll { unsigned char v1; unsigned char v2:8; unsigned long long v3:17; };
struct __attribute__((packed)) aUc_BFu8c_BFu1c { unsigned char v1; unsigned char v2:8; unsigned char v3:1; };
struct __attribute__((packed)) aUc_BFu8c_BFu1i { unsigned char v1; unsigned char v2:8; unsigned int v3:1; };
struct __attribute__((packed)) aUc_BFu8c_BFu1ll { unsigned char v1; unsigned char v2:8; unsigned long long v3:1; };
struct __attribute__((packed)) aUc_BFu8c_BFu1s { unsigned char v1; unsigned char v2:8; unsigned short v3:1; };
struct __attribute__((packed)) aUc_BFu8c_BFu31i { unsigned char v1; unsigned char v2:8; unsigned int v3:31; };
struct __attribute__((packed)) aUc_BFu8c_BFu31ll { unsigned char v1; unsigned char v2:8; unsigned long long v3:31; };
struct __attribute__((packed)) aUc_BFu8c_BFu32i { unsigned char v1; unsigned char v2:8; unsigned int v3:32; };
struct __attribute__((packed)) aUc_BFu8c_BFu32ll { unsigned char v1; unsigned char v2:8; unsigned long long v3:32; };
struct __attribute__((packed)) aUc_BFu8c_BFu33 { unsigned char v1; unsigned char v2:8; unsigned long long v3:33; };
struct __attribute__((packed)) aUc_BFu8c_BFu7c { unsigned char v1; unsigned char v2:8; unsigned char v3:7; };
struct __attribute__((packed)) aUc_BFu8c_BFu7i { unsigned char v1; unsigned char v2:8; unsigned int v3:7; };
struct __attribute__((packed)) aUc_BFu8c_BFu7ll { unsigned char v1; unsigned char v2:8; unsigned long long v3:7; };
struct __attribute__((packed)) aUc_BFu8c_BFu7s { unsigned char v1; unsigned char v2:8; unsigned short v3:7; };
struct __attribute__((packed)) aUc_BFu8c_BFu8c { unsigned char v1; unsigned char v2:8; unsigned char v3:8; };
struct __attribute__((packed)) aUc_BFu8c_BFu8i { unsigned char v1; unsigned char v2:8; unsigned int v3:8; };
struct __attribute__((packed)) aUc_BFu8c_BFu8ll { unsigned char v1; unsigned char v2:8; unsigned long long v3:8; };
struct __attribute__((packed)) aUc_BFu8c_BFu8s { unsigned char v1; unsigned char v2:8; unsigned short v3:8; };
struct __attribute__((packed)) aUc_BFu8c_BFu9i { unsigned char v1; unsigned char v2:8; unsigned int v3:9; };
struct __attribute__((packed)) aUc_BFu8c_BFu9ll { unsigned char v1; unsigned char v2:8; unsigned long long v3:9; };
struct __attribute__((packed)) aUc_BFu8c_BFu9s { unsigned char v1; unsigned char v2:8; unsigned short v3:9; };
struct __attribute__((packed)) aUc_BFu8c_C { unsigned char v1; unsigned char v2:8; char v3; };
struct __attribute__((packed)) aUc_BFu8c_D { unsigned char v1; unsigned char v2:8; double v3; };
struct __attribute__((packed)) aUc_BFu8c_F { unsigned char v1; unsigned char v2:8; float v3; };
struct __attribute__((packed)) aUc_BFu8c_I { unsigned char v1; unsigned char v2:8; int v3; };
struct __attribute__((packed)) aUc_BFu8c_Ip { unsigned char v1; unsigned char v2:8; int * v3; };
struct __attribute__((packed)) aUc_BFu8c_L { unsigned char v1; unsigned char v2:8; long long v3; };
struct __attribute__((packed)) aUc_BFu8c_S { unsigned char v1; unsigned char v2:8; short v3; };
struct __attribute__((packed)) aUc_BFu8c_Uc { unsigned char v1; unsigned char v2:8; unsigned char v3; };
struct __attribute__((packed)) aUc_BFu8c_Ui { unsigned char v1; unsigned char v2:8; unsigned int v3; };
struct __attribute__((packed)) aUc_BFu8c_Ul { unsigned char v1; unsigned char v2:8; unsigned long long v3; };
struct __attribute__((packed)) aUc_BFu8c_Us { unsigned char v1; unsigned char v2:8; unsigned short v3; };
struct __attribute__((packed)) aUc_BFu8c_Vp { unsigned char v1; unsigned char v2:8; void * v3; };
struct __attribute__((packed)) aUc_BFu8i { unsigned char v1; unsigned int v2:8; };
struct __attribute__((packed)) aUc_BFu8i_BFu15i { unsigned char v1; unsigned int v2:8; unsigned int v3:15; };
struct __attribute__((packed)) aUc_BFu8i_BFu15ll { unsigned char v1; unsigned int v2:8; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_BFu8i_BFu15s { unsigned char v1; unsigned int v2:8; unsigned short v3:15; };
struct __attribute__((packed)) aUc_BFu8i_BFu16i { unsigned char v1; unsigned int v2:8; unsigned int v3:16; };
struct __attribute__((packed)) aUc_BFu8i_BFu16ll { unsigned char v1; unsigned int v2:8; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_BFu8i_BFu16s { unsigned char v1; unsigned int v2:8; unsigned short v3:16; };
struct __attribute__((packed)) aUc_BFu8i_BFu17i { unsigned char v1; unsigned int v2:8; unsigned int v3:17; };
struct __attribute__((packed)) aUc_BFu8i_BFu17ll { unsigned char v1; unsigned int v2:8; unsigned long long v3:17; };
struct __attribute__((packed)) aUc_BFu8i_BFu1c { unsigned char v1; unsigned int v2:8; unsigned char v3:1; };
struct __attribute__((packed)) aUc_BFu8i_BFu1i { unsigned char v1; unsigned int v2:8; unsigned int v3:1; };
struct __attribute__((packed)) aUc_BFu8i_BFu1ll { unsigned char v1; unsigned int v2:8; unsigned long long v3:1; };
struct __attribute__((packed)) aUc_BFu8i_BFu1s { unsigned char v1; unsigned int v2:8; unsigned short v3:1; };
struct __attribute__((packed)) aUc_BFu8i_BFu31i { unsigned char v1; unsigned int v2:8; unsigned int v3:31; };
struct __attribute__((packed)) aUc_BFu8i_BFu31ll { unsigned char v1; unsigned int v2:8; unsigned long long v3:31; };
struct __attribute__((packed)) aUc_BFu8i_BFu32i { unsigned char v1; unsigned int v2:8; unsigned int v3:32; };
struct __attribute__((packed)) aUc_BFu8i_BFu32ll { unsigned char v1; unsigned int v2:8; unsigned long long v3:32; };
struct __attribute__((packed)) aUc_BFu8i_BFu33 { unsigned char v1; unsigned int v2:8; unsigned long long v3:33; };
struct __attribute__((packed)) aUc_BFu8i_BFu7c { unsigned char v1; unsigned int v2:8; unsigned char v3:7; };
struct __attribute__((packed)) aUc_BFu8i_BFu7i { unsigned char v1; unsigned int v2:8; unsigned int v3:7; };
struct __attribute__((packed)) aUc_BFu8i_BFu7ll { unsigned char v1; unsigned int v2:8; unsigned long long v3:7; };
struct __attribute__((packed)) aUc_BFu8i_BFu7s { unsigned char v1; unsigned int v2:8; unsigned short v3:7; };
struct __attribute__((packed)) aUc_BFu8i_BFu8c { unsigned char v1; unsigned int v2:8; unsigned char v3:8; };
struct __attribute__((packed)) aUc_BFu8i_BFu8i { unsigned char v1; unsigned int v2:8; unsigned int v3:8; };
struct __attribute__((packed)) aUc_BFu8i_BFu8ll { unsigned char v1; unsigned int v2:8; unsigned long long v3:8; };
struct __attribute__((packed)) aUc_BFu8i_BFu8s { unsigned char v1; unsigned int v2:8; unsigned short v3:8; };
struct __attribute__((packed)) aUc_BFu8i_BFu9i { unsigned char v1; unsigned int v2:8; unsigned int v3:9; };
struct __attribute__((packed)) aUc_BFu8i_BFu9ll { unsigned char v1; unsigned int v2:8; unsigned long long v3:9; };
struct __attribute__((packed)) aUc_BFu8i_BFu9s { unsigned char v1; unsigned int v2:8; unsigned short v3:9; };
struct __attribute__((packed)) aUc_BFu8i_C { unsigned char v1; unsigned int v2:8; char v3; };
struct __attribute__((packed)) aUc_BFu8i_D { unsigned char v1; unsigned int v2:8; double v3; };
struct __attribute__((packed)) aUc_BFu8i_F { unsigned char v1; unsigned int v2:8; float v3; };
struct __attribute__((packed)) aUc_BFu8i_I { unsigned char v1; unsigned int v2:8; int v3; };
struct __attribute__((packed)) aUc_BFu8i_Ip { unsigned char v1; unsigned int v2:8; int * v3; };
struct __attribute__((packed)) aUc_BFu8i_L { unsigned char v1; unsigned int v2:8; long long v3; };
struct __attribute__((packed)) aUc_BFu8i_S { unsigned char v1; unsigned int v2:8; short v3; };
struct __attribute__((packed)) aUc_BFu8i_Uc { unsigned char v1; unsigned int v2:8; unsigned char v3; };
struct __attribute__((packed)) aUc_BFu8i_Ui { unsigned char v1; unsigned int v2:8; unsigned int v3; };
struct __attribute__((packed)) aUc_BFu8i_Ul { unsigned char v1; unsigned int v2:8; unsigned long long v3; };
struct __attribute__((packed)) aUc_BFu8i_Us { unsigned char v1; unsigned int v2:8; unsigned short v3; };
struct __attribute__((packed)) aUc_BFu8i_Vp { unsigned char v1; unsigned int v2:8; void * v3; };
struct __attribute__((packed)) aUc_BFu8ll { unsigned char v1; unsigned long long v2:8; };
struct __attribute__((packed)) aUc_BFu8ll_BFu15i { unsigned char v1; unsigned long long v2:8; unsigned int v3:15; };
struct __attribute__((packed)) aUc_BFu8ll_BFu15ll { unsigned char v1; unsigned long long v2:8; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_BFu8ll_BFu15s { unsigned char v1; unsigned long long v2:8; unsigned short v3:15; };
struct __attribute__((packed)) aUc_BFu8ll_BFu16i { unsigned char v1; unsigned long long v2:8; unsigned int v3:16; };
struct __attribute__((packed)) aUc_BFu8ll_BFu16ll { unsigned char v1; unsigned long long v2:8; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_BFu8ll_BFu16s { unsigned char v1; unsigned long long v2:8; unsigned short v3:16; };
struct __attribute__((packed)) aUc_BFu8ll_BFu17i { unsigned char v1; unsigned long long v2:8; unsigned int v3:17; };
struct __attribute__((packed)) aUc_BFu8ll_BFu17ll { unsigned char v1; unsigned long long v2:8; unsigned long long v3:17; };
struct __attribute__((packed)) aUc_BFu8ll_BFu1c { unsigned char v1; unsigned long long v2:8; unsigned char v3:1; };
struct __attribute__((packed)) aUc_BFu8ll_BFu1i { unsigned char v1; unsigned long long v2:8; unsigned int v3:1; };
struct __attribute__((packed)) aUc_BFu8ll_BFu1ll { unsigned char v1; unsigned long long v2:8; unsigned long long v3:1; };
struct __attribute__((packed)) aUc_BFu8ll_BFu1s { unsigned char v1; unsigned long long v2:8; unsigned short v3:1; };
struct __attribute__((packed)) aUc_BFu8ll_BFu31i { unsigned char v1; unsigned long long v2:8; unsigned int v3:31; };
struct __attribute__((packed)) aUc_BFu8ll_BFu31ll { unsigned char v1; unsigned long long v2:8; unsigned long long v3:31; };
struct __attribute__((packed)) aUc_BFu8ll_BFu32i { unsigned char v1; unsigned long long v2:8; unsigned int v3:32; };
struct __attribute__((packed)) aUc_BFu8ll_BFu32ll { unsigned char v1; unsigned long long v2:8; unsigned long long v3:32; };
struct __attribute__((packed)) aUc_BFu8ll_BFu33 { unsigned char v1; unsigned long long v2:8; unsigned long long v3:33; };
struct __attribute__((packed)) aUc_BFu8ll_BFu7c { unsigned char v1; unsigned long long v2:8; unsigned char v3:7; };
struct __attribute__((packed)) aUc_BFu8ll_BFu7i { unsigned char v1; unsigned long long v2:8; unsigned int v3:7; };
struct __attribute__((packed)) aUc_BFu8ll_BFu7ll { unsigned char v1; unsigned long long v2:8; unsigned long long v3:7; };
struct __attribute__((packed)) aUc_BFu8ll_BFu7s { unsigned char v1; unsigned long long v2:8; unsigned short v3:7; };
struct __attribute__((packed)) aUc_BFu8ll_BFu8c { unsigned char v1; unsigned long long v2:8; unsigned char v3:8; };
struct __attribute__((packed)) aUc_BFu8ll_BFu8i { unsigned char v1; unsigned long long v2:8; unsigned int v3:8; };
struct __attribute__((packed)) aUc_BFu8ll_BFu8ll { unsigned char v1; unsigned long long v2:8; unsigned long long v3:8; };
struct __attribute__((packed)) aUc_BFu8ll_BFu8s { unsigned char v1; unsigned long long v2:8; unsigned short v3:8; };
struct __attribute__((packed)) aUc_BFu8ll_BFu9i { unsigned char v1; unsigned long long v2:8; unsigned int v3:9; };
struct __attribute__((packed)) aUc_BFu8ll_BFu9ll { unsigned char v1; unsigned long long v2:8; unsigned long long v3:9; };
struct __attribute__((packed)) aUc_BFu8ll_BFu9s { unsigned char v1; unsigned long long v2:8; unsigned short v3:9; };
struct __attribute__((packed)) aUc_BFu8ll_C { unsigned char v1; unsigned long long v2:8; char v3; };
struct __attribute__((packed)) aUc_BFu8ll_D { unsigned char v1; unsigned long long v2:8; double v3; };
struct __attribute__((packed)) aUc_BFu8ll_F { unsigned char v1; unsigned long long v2:8; float v3; };
struct __attribute__((packed)) aUc_BFu8ll_I { unsigned char v1; unsigned long long v2:8; int v3; };
struct __attribute__((packed)) aUc_BFu8ll_Ip { unsigned char v1; unsigned long long v2:8; int * v3; };
struct __attribute__((packed)) aUc_BFu8ll_L { unsigned char v1; unsigned long long v2:8; long long v3; };
struct __attribute__((packed)) aUc_BFu8ll_S { unsigned char v1; unsigned long long v2:8; short v3; };
struct __attribute__((packed)) aUc_BFu8ll_Uc { unsigned char v1; unsigned long long v2:8; unsigned char v3; };
struct __attribute__((packed)) aUc_BFu8ll_Ui { unsigned char v1; unsigned long long v2:8; unsigned int v3; };
struct __attribute__((packed)) aUc_BFu8ll_Ul { unsigned char v1; unsigned long long v2:8; unsigned long long v3; };
struct __attribute__((packed)) aUc_BFu8ll_Us { unsigned char v1; unsigned long long v2:8; unsigned short v3; };
struct __attribute__((packed)) aUc_BFu8ll_Vp { unsigned char v1; unsigned long long v2:8; void * v3; };
struct __attribute__((packed)) aUc_BFu8s { unsigned char v1; unsigned short v2:8; };
struct __attribute__((packed)) aUc_BFu8s_BFu15i { unsigned char v1; unsigned short v2:8; unsigned int v3:15; };
struct __attribute__((packed)) aUc_BFu8s_BFu15ll { unsigned char v1; unsigned short v2:8; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_BFu8s_BFu15s { unsigned char v1; unsigned short v2:8; unsigned short v3:15; };
struct __attribute__((packed)) aUc_BFu8s_BFu16i { unsigned char v1; unsigned short v2:8; unsigned int v3:16; };
struct __attribute__((packed)) aUc_BFu8s_BFu16ll { unsigned char v1; unsigned short v2:8; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_BFu8s_BFu16s { unsigned char v1; unsigned short v2:8; unsigned short v3:16; };
struct __attribute__((packed)) aUc_BFu8s_BFu17i { unsigned char v1; unsigned short v2:8; unsigned int v3:17; };
struct __attribute__((packed)) aUc_BFu8s_BFu17ll { unsigned char v1; unsigned short v2:8; unsigned long long v3:17; };
struct __attribute__((packed)) aUc_BFu8s_BFu1c { unsigned char v1; unsigned short v2:8; unsigned char v3:1; };
struct __attribute__((packed)) aUc_BFu8s_BFu1i { unsigned char v1; unsigned short v2:8; unsigned int v3:1; };
struct __attribute__((packed)) aUc_BFu8s_BFu1ll { unsigned char v1; unsigned short v2:8; unsigned long long v3:1; };
struct __attribute__((packed)) aUc_BFu8s_BFu1s { unsigned char v1; unsigned short v2:8; unsigned short v3:1; };
struct __attribute__((packed)) aUc_BFu8s_BFu31i { unsigned char v1; unsigned short v2:8; unsigned int v3:31; };
struct __attribute__((packed)) aUc_BFu8s_BFu31ll { unsigned char v1; unsigned short v2:8; unsigned long long v3:31; };
struct __attribute__((packed)) aUc_BFu8s_BFu32i { unsigned char v1; unsigned short v2:8; unsigned int v3:32; };
struct __attribute__((packed)) aUc_BFu8s_BFu32ll { unsigned char v1; unsigned short v2:8; unsigned long long v3:32; };
struct __attribute__((packed)) aUc_BFu8s_BFu33 { unsigned char v1; unsigned short v2:8; unsigned long long v3:33; };
struct __attribute__((packed)) aUc_BFu8s_BFu7c { unsigned char v1; unsigned short v2:8; unsigned char v3:7; };
struct __attribute__((packed)) aUc_BFu8s_BFu7i { unsigned char v1; unsigned short v2:8; unsigned int v3:7; };
struct __attribute__((packed)) aUc_BFu8s_BFu7ll { unsigned char v1; unsigned short v2:8; unsigned long long v3:7; };
struct __attribute__((packed)) aUc_BFu8s_BFu7s { unsigned char v1; unsigned short v2:8; unsigned short v3:7; };
struct __attribute__((packed)) aUc_BFu8s_BFu8c { unsigned char v1; unsigned short v2:8; unsigned char v3:8; };
struct __attribute__((packed)) aUc_BFu8s_BFu8i { unsigned char v1; unsigned short v2:8; unsigned int v3:8; };
struct __attribute__((packed)) aUc_BFu8s_BFu8ll { unsigned char v1; unsigned short v2:8; unsigned long long v3:8; };
struct __attribute__((packed)) aUc_BFu8s_BFu8s { unsigned char v1; unsigned short v2:8; unsigned short v3:8; };
struct __attribute__((packed)) aUc_BFu8s_BFu9i { unsigned char v1; unsigned short v2:8; unsigned int v3:9; };
struct __attribute__((packed)) aUc_BFu8s_BFu9ll { unsigned char v1; unsigned short v2:8; unsigned long long v3:9; };
struct __attribute__((packed)) aUc_BFu8s_BFu9s { unsigned char v1; unsigned short v2:8; unsigned short v3:9; };
struct __attribute__((packed)) aUc_BFu8s_C { unsigned char v1; unsigned short v2:8; char v3; };
struct __attribute__((packed)) aUc_BFu8s_D { unsigned char v1; unsigned short v2:8; double v3; };
struct __attribute__((packed)) aUc_BFu8s_F { unsigned char v1; unsigned short v2:8; float v3; };
struct __attribute__((packed)) aUc_BFu8s_I { unsigned char v1; unsigned short v2:8; int v3; };
struct __attribute__((packed)) aUc_BFu8s_Ip { unsigned char v1; unsigned short v2:8; int * v3; };
struct __attribute__((packed)) aUc_BFu8s_L { unsigned char v1; unsigned short v2:8; long long v3; };
struct __attribute__((packed)) aUc_BFu8s_S { unsigned char v1; unsigned short v2:8; short v3; };
struct __attribute__((packed)) aUc_BFu8s_Uc { unsigned char v1; unsigned short v2:8; unsigned char v3; };
struct __attribute__((packed)) aUc_BFu8s_Ui { unsigned char v1; unsigned short v2:8; unsigned int v3; };
struct __attribute__((packed)) aUc_BFu8s_Ul { unsigned char v1; unsigned short v2:8; unsigned long long v3; };
struct __attribute__((packed)) aUc_BFu8s_Us { unsigned char v1; unsigned short v2:8; unsigned short v3; };
struct __attribute__((packed)) aUc_BFu8s_Vp { unsigned char v1; unsigned short v2:8; void * v3; };
struct __attribute__((packed)) aUc_BFu9i { unsigned char v1; unsigned int v2:9; };
struct __attribute__((packed)) aUc_BFu9i_BFu15i { unsigned char v1; unsigned int v2:9; unsigned int v3:15; };
struct __attribute__((packed)) aUc_BFu9i_BFu15ll { unsigned char v1; unsigned int v2:9; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_BFu9i_BFu15s { unsigned char v1; unsigned int v2:9; unsigned short v3:15; };
struct __attribute__((packed)) aUc_BFu9i_BFu16i { unsigned char v1; unsigned int v2:9; unsigned int v3:16; };
struct __attribute__((packed)) aUc_BFu9i_BFu16ll { unsigned char v1; unsigned int v2:9; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_BFu9i_BFu16s { unsigned char v1; unsigned int v2:9; unsigned short v3:16; };
struct __attribute__((packed)) aUc_BFu9i_BFu17i { unsigned char v1; unsigned int v2:9; unsigned int v3:17; };
struct __attribute__((packed)) aUc_BFu9i_BFu17ll { unsigned char v1; unsigned int v2:9; unsigned long long v3:17; };
struct __attribute__((packed)) aUc_BFu9i_BFu1c { unsigned char v1; unsigned int v2:9; unsigned char v3:1; };
struct __attribute__((packed)) aUc_BFu9i_BFu1i { unsigned char v1; unsigned int v2:9; unsigned int v3:1; };
struct __attribute__((packed)) aUc_BFu9i_BFu1ll { unsigned char v1; unsigned int v2:9; unsigned long long v3:1; };
struct __attribute__((packed)) aUc_BFu9i_BFu1s { unsigned char v1; unsigned int v2:9; unsigned short v3:1; };
struct __attribute__((packed)) aUc_BFu9i_BFu31i { unsigned char v1; unsigned int v2:9; unsigned int v3:31; };
struct __attribute__((packed)) aUc_BFu9i_BFu31ll { unsigned char v1; unsigned int v2:9; unsigned long long v3:31; };
struct __attribute__((packed)) aUc_BFu9i_BFu32i { unsigned char v1; unsigned int v2:9; unsigned int v3:32; };
struct __attribute__((packed)) aUc_BFu9i_BFu32ll { unsigned char v1; unsigned int v2:9; unsigned long long v3:32; };
struct __attribute__((packed)) aUc_BFu9i_BFu33 { unsigned char v1; unsigned int v2:9; unsigned long long v3:33; };
struct __attribute__((packed)) aUc_BFu9i_BFu7c { unsigned char v1; unsigned int v2:9; unsigned char v3:7; };
struct __attribute__((packed)) aUc_BFu9i_BFu7i { unsigned char v1; unsigned int v2:9; unsigned int v3:7; };
struct __attribute__((packed)) aUc_BFu9i_BFu7ll { unsigned char v1; unsigned int v2:9; unsigned long long v3:7; };
struct __attribute__((packed)) aUc_BFu9i_BFu7s { unsigned char v1; unsigned int v2:9; unsigned short v3:7; };
struct __attribute__((packed)) aUc_BFu9i_BFu8c { unsigned char v1; unsigned int v2:9; unsigned char v3:8; };
struct __attribute__((packed)) aUc_BFu9i_BFu8i { unsigned char v1; unsigned int v2:9; unsigned int v3:8; };
struct __attribute__((packed)) aUc_BFu9i_BFu8ll { unsigned char v1; unsigned int v2:9; unsigned long long v3:8; };
struct __attribute__((packed)) aUc_BFu9i_BFu8s { unsigned char v1; unsigned int v2:9; unsigned short v3:8; };
struct __attribute__((packed)) aUc_BFu9i_BFu9i { unsigned char v1; unsigned int v2:9; unsigned int v3:9; };
struct __attribute__((packed)) aUc_BFu9i_BFu9ll { unsigned char v1; unsigned int v2:9; unsigned long long v3:9; };
struct __attribute__((packed)) aUc_BFu9i_BFu9s { unsigned char v1; unsigned int v2:9; unsigned short v3:9; };
struct __attribute__((packed)) aUc_BFu9i_C { unsigned char v1; unsigned int v2:9; char v3; };
struct __attribute__((packed)) aUc_BFu9i_D { unsigned char v1; unsigned int v2:9; double v3; };
struct __attribute__((packed)) aUc_BFu9i_F { unsigned char v1; unsigned int v2:9; float v3; };
struct __attribute__((packed)) aUc_BFu9i_I { unsigned char v1; unsigned int v2:9; int v3; };
struct __attribute__((packed)) aUc_BFu9i_Ip { unsigned char v1; unsigned int v2:9; int * v3; };
struct __attribute__((packed)) aUc_BFu9i_L { unsigned char v1; unsigned int v2:9; long long v3; };
struct __attribute__((packed)) aUc_BFu9i_S { unsigned char v1; unsigned int v2:9; short v3; };
struct __attribute__((packed)) aUc_BFu9i_Uc { unsigned char v1; unsigned int v2:9; unsigned char v3; };
struct __attribute__((packed)) aUc_BFu9i_Ui { unsigned char v1; unsigned int v2:9; unsigned int v3; };
struct __attribute__((packed)) aUc_BFu9i_Ul { unsigned char v1; unsigned int v2:9; unsigned long long v3; };
struct __attribute__((packed)) aUc_BFu9i_Us { unsigned char v1; unsigned int v2:9; unsigned short v3; };
struct __attribute__((packed)) aUc_BFu9i_Vp { unsigned char v1; unsigned int v2:9; void * v3; };
struct __attribute__((packed)) aUc_BFu9ll { unsigned char v1; unsigned long long v2:9; };
struct __attribute__((packed)) aUc_BFu9ll_BFu15i { unsigned char v1; unsigned long long v2:9; unsigned int v3:15; };
struct __attribute__((packed)) aUc_BFu9ll_BFu15ll { unsigned char v1; unsigned long long v2:9; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_BFu9ll_BFu15s { unsigned char v1; unsigned long long v2:9; unsigned short v3:15; };
struct __attribute__((packed)) aUc_BFu9ll_BFu16i { unsigned char v1; unsigned long long v2:9; unsigned int v3:16; };
struct __attribute__((packed)) aUc_BFu9ll_BFu16ll { unsigned char v1; unsigned long long v2:9; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_BFu9ll_BFu16s { unsigned char v1; unsigned long long v2:9; unsigned short v3:16; };
struct __attribute__((packed)) aUc_BFu9ll_BFu17i { unsigned char v1; unsigned long long v2:9; unsigned int v3:17; };
struct __attribute__((packed)) aUc_BFu9ll_BFu17ll { unsigned char v1; unsigned long long v2:9; unsigned long long v3:17; };
struct __attribute__((packed)) aUc_BFu9ll_BFu1c { unsigned char v1; unsigned long long v2:9; unsigned char v3:1; };
struct __attribute__((packed)) aUc_BFu9ll_BFu1i { unsigned char v1; unsigned long long v2:9; unsigned int v3:1; };
struct __attribute__((packed)) aUc_BFu9ll_BFu1ll { unsigned char v1; unsigned long long v2:9; unsigned long long v3:1; };
struct __attribute__((packed)) aUc_BFu9ll_BFu1s { unsigned char v1; unsigned long long v2:9; unsigned short v3:1; };
struct __attribute__((packed)) aUc_BFu9ll_BFu31i { unsigned char v1; unsigned long long v2:9; unsigned int v3:31; };
struct __attribute__((packed)) aUc_BFu9ll_BFu31ll { unsigned char v1; unsigned long long v2:9; unsigned long long v3:31; };
struct __attribute__((packed)) aUc_BFu9ll_BFu32i { unsigned char v1; unsigned long long v2:9; unsigned int v3:32; };
struct __attribute__((packed)) aUc_BFu9ll_BFu32ll { unsigned char v1; unsigned long long v2:9; unsigned long long v3:32; };
struct __attribute__((packed)) aUc_BFu9ll_BFu33 { unsigned char v1; unsigned long long v2:9; unsigned long long v3:33; };
struct __attribute__((packed)) aUc_BFu9ll_BFu7c { unsigned char v1; unsigned long long v2:9; unsigned char v3:7; };
struct __attribute__((packed)) aUc_BFu9ll_BFu7i { unsigned char v1; unsigned long long v2:9; unsigned int v3:7; };
struct __attribute__((packed)) aUc_BFu9ll_BFu7ll { unsigned char v1; unsigned long long v2:9; unsigned long long v3:7; };
struct __attribute__((packed)) aUc_BFu9ll_BFu7s { unsigned char v1; unsigned long long v2:9; unsigned short v3:7; };
struct __attribute__((packed)) aUc_BFu9ll_BFu8c { unsigned char v1; unsigned long long v2:9; unsigned char v3:8; };
struct __attribute__((packed)) aUc_BFu9ll_BFu8i { unsigned char v1; unsigned long long v2:9; unsigned int v3:8; };
struct __attribute__((packed)) aUc_BFu9ll_BFu8ll { unsigned char v1; unsigned long long v2:9; unsigned long long v3:8; };
struct __attribute__((packed)) aUc_BFu9ll_BFu8s { unsigned char v1; unsigned long long v2:9; unsigned short v3:8; };
struct __attribute__((packed)) aUc_BFu9ll_BFu9i { unsigned char v1; unsigned long long v2:9; unsigned int v3:9; };
struct __attribute__((packed)) aUc_BFu9ll_BFu9ll { unsigned char v1; unsigned long long v2:9; unsigned long long v3:9; };
struct __attribute__((packed)) aUc_BFu9ll_BFu9s { unsigned char v1; unsigned long long v2:9; unsigned short v3:9; };
struct __attribute__((packed)) aUc_BFu9ll_C { unsigned char v1; unsigned long long v2:9; char v3; };
struct __attribute__((packed)) aUc_BFu9ll_D { unsigned char v1; unsigned long long v2:9; double v3; };
struct __attribute__((packed)) aUc_BFu9ll_F { unsigned char v1; unsigned long long v2:9; float v3; };
struct __attribute__((packed)) aUc_BFu9ll_I { unsigned char v1; unsigned long long v2:9; int v3; };
struct __attribute__((packed)) aUc_BFu9ll_Ip { unsigned char v1; unsigned long long v2:9; int * v3; };
struct __attribute__((packed)) aUc_BFu9ll_L { unsigned char v1; unsigned long long v2:9; long long v3; };
struct __attribute__((packed)) aUc_BFu9ll_S { unsigned char v1; unsigned long long v2:9; short v3; };
struct __attribute__((packed)) aUc_BFu9ll_Uc { unsigned char v1; unsigned long long v2:9; unsigned char v3; };
struct __attribute__((packed)) aUc_BFu9ll_Ui { unsigned char v1; unsigned long long v2:9; unsigned int v3; };
struct __attribute__((packed)) aUc_BFu9ll_Ul { unsigned char v1; unsigned long long v2:9; unsigned long long v3; };
struct __attribute__((packed)) aUc_BFu9ll_Us { unsigned char v1; unsigned long long v2:9; unsigned short v3; };
struct __attribute__((packed)) aUc_BFu9ll_Vp { unsigned char v1; unsigned long long v2:9; void * v3; };
struct __attribute__((packed)) aUc_BFu9s { unsigned char v1; unsigned short v2:9; };
struct __attribute__((packed)) aUc_BFu9s_BFu15i { unsigned char v1; unsigned short v2:9; unsigned int v3:15; };
struct __attribute__((packed)) aUc_BFu9s_BFu15ll { unsigned char v1; unsigned short v2:9; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_BFu9s_BFu15s { unsigned char v1; unsigned short v2:9; unsigned short v3:15; };
struct __attribute__((packed)) aUc_BFu9s_BFu16i { unsigned char v1; unsigned short v2:9; unsigned int v3:16; };
struct __attribute__((packed)) aUc_BFu9s_BFu16ll { unsigned char v1; unsigned short v2:9; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_BFu9s_BFu16s { unsigned char v1; unsigned short v2:9; unsigned short v3:16; };
struct __attribute__((packed)) aUc_BFu9s_BFu17i { unsigned char v1; unsigned short v2:9; unsigned int v3:17; };
struct __attribute__((packed)) aUc_BFu9s_BFu17ll { unsigned char v1; unsigned short v2:9; unsigned long long v3:17; };
struct __attribute__((packed)) aUc_BFu9s_BFu1c { unsigned char v1; unsigned short v2:9; unsigned char v3:1; };
struct __attribute__((packed)) aUc_BFu9s_BFu1i { unsigned char v1; unsigned short v2:9; unsigned int v3:1; };
struct __attribute__((packed)) aUc_BFu9s_BFu1ll { unsigned char v1; unsigned short v2:9; unsigned long long v3:1; };
struct __attribute__((packed)) aUc_BFu9s_BFu1s { unsigned char v1; unsigned short v2:9; unsigned short v3:1; };
struct __attribute__((packed)) aUc_BFu9s_BFu31i { unsigned char v1; unsigned short v2:9; unsigned int v3:31; };
struct __attribute__((packed)) aUc_BFu9s_BFu31ll { unsigned char v1; unsigned short v2:9; unsigned long long v3:31; };
struct __attribute__((packed)) aUc_BFu9s_BFu32i { unsigned char v1; unsigned short v2:9; unsigned int v3:32; };
struct __attribute__((packed)) aUc_BFu9s_BFu32ll { unsigned char v1; unsigned short v2:9; unsigned long long v3:32; };
struct __attribute__((packed)) aUc_BFu9s_BFu33 { unsigned char v1; unsigned short v2:9; unsigned long long v3:33; };
struct __attribute__((packed)) aUc_BFu9s_BFu7c { unsigned char v1; unsigned short v2:9; unsigned char v3:7; };
struct __attribute__((packed)) aUc_BFu9s_BFu7i { unsigned char v1; unsigned short v2:9; unsigned int v3:7; };
struct __attribute__((packed)) aUc_BFu9s_BFu7ll { unsigned char v1; unsigned short v2:9; unsigned long long v3:7; };
struct __attribute__((packed)) aUc_BFu9s_BFu7s { unsigned char v1; unsigned short v2:9; unsigned short v3:7; };
struct __attribute__((packed)) aUc_BFu9s_BFu8c { unsigned char v1; unsigned short v2:9; unsigned char v3:8; };
struct __attribute__((packed)) aUc_BFu9s_BFu8i { unsigned char v1; unsigned short v2:9; unsigned int v3:8; };
struct __attribute__((packed)) aUc_BFu9s_BFu8ll { unsigned char v1; unsigned short v2:9; unsigned long long v3:8; };
struct __attribute__((packed)) aUc_BFu9s_BFu8s { unsigned char v1; unsigned short v2:9; unsigned short v3:8; };
struct __attribute__((packed)) aUc_BFu9s_BFu9i { unsigned char v1; unsigned short v2:9; unsigned int v3:9; };
struct __attribute__((packed)) aUc_BFu9s_BFu9ll { unsigned char v1; unsigned short v2:9; unsigned long long v3:9; };
struct __attribute__((packed)) aUc_BFu9s_BFu9s { unsigned char v1; unsigned short v2:9; unsigned short v3:9; };
struct __attribute__((packed)) aUc_BFu9s_C { unsigned char v1; unsigned short v2:9; char v3; };
struct __attribute__((packed)) aUc_BFu9s_D { unsigned char v1; unsigned short v2:9; double v3; };
struct __attribute__((packed)) aUc_BFu9s_F { unsigned char v1; unsigned short v2:9; float v3; };
struct __attribute__((packed)) aUc_BFu9s_I { unsigned char v1; unsigned short v2:9; int v3; };
struct __attribute__((packed)) aUc_BFu9s_Ip { unsigned char v1; unsigned short v2:9; int * v3; };
struct __attribute__((packed)) aUc_BFu9s_L { unsigned char v1; unsigned short v2:9; long long v3; };
struct __attribute__((packed)) aUc_BFu9s_S { unsigned char v1; unsigned short v2:9; short v3; };
struct __attribute__((packed)) aUc_BFu9s_Uc { unsigned char v1; unsigned short v2:9; unsigned char v3; };
struct __attribute__((packed)) aUc_BFu9s_Ui { unsigned char v1; unsigned short v2:9; unsigned int v3; };
struct __attribute__((packed)) aUc_BFu9s_Ul { unsigned char v1; unsigned short v2:9; unsigned long long v3; };
struct __attribute__((packed)) aUc_BFu9s_Us { unsigned char v1; unsigned short v2:9; unsigned short v3; };
struct __attribute__((packed)) aUc_BFu9s_Vp { unsigned char v1; unsigned short v2:9; void * v3; };
struct __attribute__((packed)) aUc_C { unsigned char v1; char v2; };
struct __attribute__((packed)) aUc_C_BFu15i { unsigned char v1; char v2; unsigned int v3:15; };
struct __attribute__((packed)) aUc_C_BFu15ll { unsigned char v1; char v2; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_C_BFu15s { unsigned char v1; char v2; unsigned short v3:15; };
struct __attribute__((packed)) aUc_C_BFu16i { unsigned char v1; char v2; unsigned int v3:16; };
struct __attribute__((packed)) aUc_C_BFu16ll { unsigned char v1; char v2; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_C_BFu16s { unsigned char v1; char v2; unsigned short v3:16; };
struct __attribute__((packed)) aUc_C_BFu17i { unsigned char v1; char v2; unsigned int v3:17; };
struct __attribute__((packed)) aUc_C_BFu17ll { unsigned char v1; char v2; unsigned long long v3:17; };
struct __attribute__((packed)) aUc_C_BFu1c { unsigned char v1; char v2; unsigned char v3:1; };
struct __attribute__((packed)) aUc_C_BFu1i { unsigned char v1; char v2; unsigned int v3:1; };
struct __attribute__((packed)) aUc_C_BFu1ll { unsigned char v1; char v2; unsigned long long v3:1; };
struct __attribute__((packed)) aUc_C_BFu1s { unsigned char v1; char v2; unsigned short v3:1; };
struct __attribute__((packed)) aUc_C_BFu31i { unsigned char v1; char v2; unsigned int v3:31; };
struct __attribute__((packed)) aUc_C_BFu31ll { unsigned char v1; char v2; unsigned long long v3:31; };
struct __attribute__((packed)) aUc_C_BFu32i { unsigned char v1; char v2; unsigned int v3:32; };
struct __attribute__((packed)) aUc_C_BFu32ll { unsigned char v1; char v2; unsigned long long v3:32; };
struct __attribute__((packed)) aUc_C_BFu33 { unsigned char v1; char v2; unsigned long long v3:33; };
struct __attribute__((packed)) aUc_C_BFu7c { unsigned char v1; char v2; unsigned char v3:7; };
struct __attribute__((packed)) aUc_C_BFu7i { unsigned char v1; char v2; unsigned int v3:7; };
struct __attribute__((packed)) aUc_C_BFu7ll { unsigned char v1; char v2; unsigned long long v3:7; };
struct __attribute__((packed)) aUc_C_BFu7s { unsigned char v1; char v2; unsigned short v3:7; };
struct __attribute__((packed)) aUc_C_BFu8c { unsigned char v1; char v2; unsigned char v3:8; };
struct __attribute__((packed)) aUc_C_BFu8i { unsigned char v1; char v2; unsigned int v3:8; };
struct __attribute__((packed)) aUc_C_BFu8ll { unsigned char v1; char v2; unsigned long long v3:8; };
struct __attribute__((packed)) aUc_C_BFu8s { unsigned char v1; char v2; unsigned short v3:8; };
struct __attribute__((packed)) aUc_C_BFu9i { unsigned char v1; char v2; unsigned int v3:9; };
struct __attribute__((packed)) aUc_C_BFu9ll { unsigned char v1; char v2; unsigned long long v3:9; };
struct __attribute__((packed)) aUc_C_BFu9s { unsigned char v1; char v2; unsigned short v3:9; };
struct __attribute__((packed)) aUc_C_C { unsigned char v1; char v2; char v3; };
struct __attribute__((packed)) aUc_C_D { unsigned char v1; char v2; double v3; };
struct __attribute__((packed)) aUc_C_F { unsigned char v1; char v2; float v3; };
struct __attribute__((packed)) aUc_C_I { unsigned char v1; char v2; int v3; };
struct __attribute__((packed)) aUc_C_Ip { unsigned char v1; char v2; int * v3; };
struct __attribute__((packed)) aUc_C_L { unsigned char v1; char v2; long long v3; };
struct __attribute__((packed)) aUc_C_S { unsigned char v1; char v2; short v3; };
struct __attribute__((packed)) aUc_C_Uc { unsigned char v1; char v2; unsigned char v3; };
struct __attribute__((packed)) aUc_C_Ui { unsigned char v1; char v2; unsigned int v3; };
struct __attribute__((packed)) aUc_C_Ul { unsigned char v1; char v2; unsigned long long v3; };
struct __attribute__((packed)) aUc_C_Us { unsigned char v1; char v2; unsigned short v3; };
struct __attribute__((packed)) aUc_C_Vp { unsigned char v1; char v2; void * v3; };
struct __attribute__((packed)) aUc_D { unsigned char v1; double v2; };
struct __attribute__((packed)) aUc_D_BFu15i { unsigned char v1; double v2; unsigned int v3:15; };
struct __attribute__((packed)) aUc_D_BFu15ll { unsigned char v1; double v2; unsigned long long v3:15; };
struct __attribute__((packed)) aUc_D_BFu15s { unsigned char v1; double v2; unsigned short v3:15; };
struct __attribute__((packed)) aUc_D_BFu16i { unsigned char v1; double v2; unsigned int v3:16; };
struct __attribute__((packed)) aUc_D_BFu16ll { unsigned char v1; double v2; unsigned long long v3:16; };
struct __attribute__((packed)) aUc_D_BFu16s { unsigned char v1; double v2; unsigned short v3:16; };
struct __attribute__((packed)) aUc_D_BFu17i { unsigned char v1; double v2; unsigned int v3:17; };
struct __attribute__((packed)) aUc_D_BFu17ll { unsigned char v1; double v2; unsigned long long v3:17; };


static void Test_aL_Ui_BFu16i()
{
  {
    init_simple_test("aL_Ui_BFu16i");
    static STRUCT_IF_C aL_Ui_BFu16i lv;
    check2(sizeof(lv), 14, "sizeof(aL_Ui_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_BFu16i)");
    check_field_offset(lv, v1, 0, "aL_Ui_BFu16i.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_BFu16i.v2");
    set_bf_and_test(lv, v3, 12, 0, 16, 1, "aL_Ui_BFu16i");
    set_bf_and_test(lv, v3, 12, 0, 16, hide_ull(1LL<<15), "aL_Ui_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_BFu16i, aL_Ui_BFu16i)
//============================================================================



static void Test_aL_Ui_BFu16ll()
{
  {
    init_simple_test("aL_Ui_BFu16ll");
    static STRUCT_IF_C aL_Ui_BFu16ll lv;
    check2(sizeof(lv), 14, "sizeof(aL_Ui_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_BFu16ll)");
    check_field_offset(lv, v1, 0, "aL_Ui_BFu16ll.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_BFu16ll.v2");
    set_bf_and_test(lv, v3, 12, 0, 16, 1, "aL_Ui_BFu16ll");
    set_bf_and_test(lv, v3, 12, 0, 16, hide_ull(1LL<<15), "aL_Ui_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_BFu16ll, aL_Ui_BFu16ll)
//============================================================================



static void Test_aL_Ui_BFu16s()
{
  {
    init_simple_test("aL_Ui_BFu16s");
    static STRUCT_IF_C aL_Ui_BFu16s lv;
    check2(sizeof(lv), 14, "sizeof(aL_Ui_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_BFu16s)");
    check_field_offset(lv, v1, 0, "aL_Ui_BFu16s.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_BFu16s.v2");
    set_bf_and_test(lv, v3, 12, 0, 16, 1, "aL_Ui_BFu16s");
    set_bf_and_test(lv, v3, 12, 0, 16, hide_ull(1LL<<15), "aL_Ui_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_BFu16s, aL_Ui_BFu16s)
//============================================================================



static void Test_aL_Ui_BFu17i()
{
  {
    init_simple_test("aL_Ui_BFu17i");
    static STRUCT_IF_C aL_Ui_BFu17i lv;
    check2(sizeof(lv), 15, "sizeof(aL_Ui_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_BFu17i)");
    check_field_offset(lv, v1, 0, "aL_Ui_BFu17i.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_BFu17i.v2");
    set_bf_and_test(lv, v3, 12, 0, 17, 1, "aL_Ui_BFu17i");
    set_bf_and_test(lv, v3, 12, 0, 17, hide_ull(1LL<<16), "aL_Ui_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_BFu17i, aL_Ui_BFu17i)
//============================================================================



static void Test_aL_Ui_BFu17ll()
{
  {
    init_simple_test("aL_Ui_BFu17ll");
    static STRUCT_IF_C aL_Ui_BFu17ll lv;
    check2(sizeof(lv), 15, "sizeof(aL_Ui_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_BFu17ll)");
    check_field_offset(lv, v1, 0, "aL_Ui_BFu17ll.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_BFu17ll.v2");
    set_bf_and_test(lv, v3, 12, 0, 17, 1, "aL_Ui_BFu17ll");
    set_bf_and_test(lv, v3, 12, 0, 17, hide_ull(1LL<<16), "aL_Ui_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_BFu17ll, aL_Ui_BFu17ll)
//============================================================================



static void Test_aL_Ui_BFu1c()
{
  {
    init_simple_test("aL_Ui_BFu1c");
    static STRUCT_IF_C aL_Ui_BFu1c lv;
    check2(sizeof(lv), 13, "sizeof(aL_Ui_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_BFu1c)");
    check_field_offset(lv, v1, 0, "aL_Ui_BFu1c.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_BFu1c.v2");
    set_bf_and_test(lv, v3, 12, 0, 1, 1, "aL_Ui_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_BFu1c, aL_Ui_BFu1c)
//============================================================================



static void Test_aL_Ui_BFu1i()
{
  {
    init_simple_test("aL_Ui_BFu1i");
    static STRUCT_IF_C aL_Ui_BFu1i lv;
    check2(sizeof(lv), 13, "sizeof(aL_Ui_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_BFu1i)");
    check_field_offset(lv, v1, 0, "aL_Ui_BFu1i.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_BFu1i.v2");
    set_bf_and_test(lv, v3, 12, 0, 1, 1, "aL_Ui_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_BFu1i, aL_Ui_BFu1i)
//============================================================================



static void Test_aL_Ui_BFu1ll()
{
  {
    init_simple_test("aL_Ui_BFu1ll");
    static STRUCT_IF_C aL_Ui_BFu1ll lv;
    check2(sizeof(lv), 13, "sizeof(aL_Ui_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_BFu1ll)");
    check_field_offset(lv, v1, 0, "aL_Ui_BFu1ll.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_BFu1ll.v2");
    set_bf_and_test(lv, v3, 12, 0, 1, 1, "aL_Ui_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_BFu1ll, aL_Ui_BFu1ll)
//============================================================================



static void Test_aL_Ui_BFu1s()
{
  {
    init_simple_test("aL_Ui_BFu1s");
    static STRUCT_IF_C aL_Ui_BFu1s lv;
    check2(sizeof(lv), 13, "sizeof(aL_Ui_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_BFu1s)");
    check_field_offset(lv, v1, 0, "aL_Ui_BFu1s.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_BFu1s.v2");
    set_bf_and_test(lv, v3, 12, 0, 1, 1, "aL_Ui_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_BFu1s, aL_Ui_BFu1s)
//============================================================================



static void Test_aL_Ui_BFu31i()
{
  {
    init_simple_test("aL_Ui_BFu31i");
    static STRUCT_IF_C aL_Ui_BFu31i lv;
    check2(sizeof(lv), 16, "sizeof(aL_Ui_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_BFu31i)");
    check_field_offset(lv, v1, 0, "aL_Ui_BFu31i.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_BFu31i.v2");
    set_bf_and_test(lv, v3, 12, 0, 31, 1, "aL_Ui_BFu31i");
    set_bf_and_test(lv, v3, 12, 0, 31, hide_ull(1LL<<30), "aL_Ui_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_BFu31i, aL_Ui_BFu31i)
//============================================================================



static void Test_aL_Ui_BFu31ll()
{
  {
    init_simple_test("aL_Ui_BFu31ll");
    static STRUCT_IF_C aL_Ui_BFu31ll lv;
    check2(sizeof(lv), 16, "sizeof(aL_Ui_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_BFu31ll)");
    check_field_offset(lv, v1, 0, "aL_Ui_BFu31ll.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_BFu31ll.v2");
    set_bf_and_test(lv, v3, 12, 0, 31, 1, "aL_Ui_BFu31ll");
    set_bf_and_test(lv, v3, 12, 0, 31, hide_ull(1LL<<30), "aL_Ui_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_BFu31ll, aL_Ui_BFu31ll)
//============================================================================



static void Test_aL_Ui_BFu32i()
{
  {
    init_simple_test("aL_Ui_BFu32i");
    static STRUCT_IF_C aL_Ui_BFu32i lv;
    check2(sizeof(lv), 16, "sizeof(aL_Ui_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_BFu32i)");
    check_field_offset(lv, v1, 0, "aL_Ui_BFu32i.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_BFu32i.v2");
    set_bf_and_test(lv, v3, 12, 0, 32, 1, "aL_Ui_BFu32i");
    set_bf_and_test(lv, v3, 12, 0, 32, hide_ull(1LL<<31), "aL_Ui_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_BFu32i, aL_Ui_BFu32i)
//============================================================================



static void Test_aL_Ui_BFu32ll()
{
  {
    init_simple_test("aL_Ui_BFu32ll");
    static STRUCT_IF_C aL_Ui_BFu32ll lv;
    check2(sizeof(lv), 16, "sizeof(aL_Ui_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_BFu32ll)");
    check_field_offset(lv, v1, 0, "aL_Ui_BFu32ll.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_BFu32ll.v2");
    set_bf_and_test(lv, v3, 12, 0, 32, 1, "aL_Ui_BFu32ll");
    set_bf_and_test(lv, v3, 12, 0, 32, hide_ull(1LL<<31), "aL_Ui_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_BFu32ll, aL_Ui_BFu32ll)
//============================================================================



static void Test_aL_Ui_BFu33()
{
  {
    init_simple_test("aL_Ui_BFu33");
    static STRUCT_IF_C aL_Ui_BFu33 lv;
    check2(sizeof(lv), 17, "sizeof(aL_Ui_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_BFu33)");
    check_field_offset(lv, v1, 0, "aL_Ui_BFu33.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_BFu33.v2");
    set_bf_and_test(lv, v3, 12, 0, 33, 1, "aL_Ui_BFu33");
    set_bf_and_test(lv, v3, 12, 0, 33, hide_ull(1LL<<32), "aL_Ui_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_BFu33, aL_Ui_BFu33)
//============================================================================



static void Test_aL_Ui_BFu7c()
{
  {
    init_simple_test("aL_Ui_BFu7c");
    static STRUCT_IF_C aL_Ui_BFu7c lv;
    check2(sizeof(lv), 13, "sizeof(aL_Ui_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_BFu7c)");
    check_field_offset(lv, v1, 0, "aL_Ui_BFu7c.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_BFu7c.v2");
    set_bf_and_test(lv, v3, 12, 0, 7, 1, "aL_Ui_BFu7c");
    set_bf_and_test(lv, v3, 12, 0, 7, hide_ull(1LL<<6), "aL_Ui_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_BFu7c, aL_Ui_BFu7c)
//============================================================================



static void Test_aL_Ui_BFu7i()
{
  {
    init_simple_test("aL_Ui_BFu7i");
    static STRUCT_IF_C aL_Ui_BFu7i lv;
    check2(sizeof(lv), 13, "sizeof(aL_Ui_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_BFu7i)");
    check_field_offset(lv, v1, 0, "aL_Ui_BFu7i.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_BFu7i.v2");
    set_bf_and_test(lv, v3, 12, 0, 7, 1, "aL_Ui_BFu7i");
    set_bf_and_test(lv, v3, 12, 0, 7, hide_ull(1LL<<6), "aL_Ui_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_BFu7i, aL_Ui_BFu7i)
//============================================================================



static void Test_aL_Ui_BFu7ll()
{
  {
    init_simple_test("aL_Ui_BFu7ll");
    static STRUCT_IF_C aL_Ui_BFu7ll lv;
    check2(sizeof(lv), 13, "sizeof(aL_Ui_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_BFu7ll)");
    check_field_offset(lv, v1, 0, "aL_Ui_BFu7ll.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_BFu7ll.v2");
    set_bf_and_test(lv, v3, 12, 0, 7, 1, "aL_Ui_BFu7ll");
    set_bf_and_test(lv, v3, 12, 0, 7, hide_ull(1LL<<6), "aL_Ui_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_BFu7ll, aL_Ui_BFu7ll)
//============================================================================



static void Test_aL_Ui_BFu7s()
{
  {
    init_simple_test("aL_Ui_BFu7s");
    static STRUCT_IF_C aL_Ui_BFu7s lv;
    check2(sizeof(lv), 13, "sizeof(aL_Ui_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_BFu7s)");
    check_field_offset(lv, v1, 0, "aL_Ui_BFu7s.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_BFu7s.v2");
    set_bf_and_test(lv, v3, 12, 0, 7, 1, "aL_Ui_BFu7s");
    set_bf_and_test(lv, v3, 12, 0, 7, hide_ull(1LL<<6), "aL_Ui_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_BFu7s, aL_Ui_BFu7s)
//============================================================================



static void Test_aL_Ui_BFu8c()
{
  {
    init_simple_test("aL_Ui_BFu8c");
    static STRUCT_IF_C aL_Ui_BFu8c lv;
    check2(sizeof(lv), 13, "sizeof(aL_Ui_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_BFu8c)");
    check_field_offset(lv, v1, 0, "aL_Ui_BFu8c.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_BFu8c.v2");
    set_bf_and_test(lv, v3, 12, 0, 8, 1, "aL_Ui_BFu8c");
    set_bf_and_test(lv, v3, 12, 0, 8, hide_ull(1LL<<7), "aL_Ui_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_BFu8c, aL_Ui_BFu8c)
//============================================================================



static void Test_aL_Ui_BFu8i()
{
  {
    init_simple_test("aL_Ui_BFu8i");
    static STRUCT_IF_C aL_Ui_BFu8i lv;
    check2(sizeof(lv), 13, "sizeof(aL_Ui_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_BFu8i)");
    check_field_offset(lv, v1, 0, "aL_Ui_BFu8i.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_BFu8i.v2");
    set_bf_and_test(lv, v3, 12, 0, 8, 1, "aL_Ui_BFu8i");
    set_bf_and_test(lv, v3, 12, 0, 8, hide_ull(1LL<<7), "aL_Ui_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_BFu8i, aL_Ui_BFu8i)
//============================================================================



static void Test_aL_Ui_BFu8ll()
{
  {
    init_simple_test("aL_Ui_BFu8ll");
    static STRUCT_IF_C aL_Ui_BFu8ll lv;
    check2(sizeof(lv), 13, "sizeof(aL_Ui_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_BFu8ll)");
    check_field_offset(lv, v1, 0, "aL_Ui_BFu8ll.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_BFu8ll.v2");
    set_bf_and_test(lv, v3, 12, 0, 8, 1, "aL_Ui_BFu8ll");
    set_bf_and_test(lv, v3, 12, 0, 8, hide_ull(1LL<<7), "aL_Ui_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_BFu8ll, aL_Ui_BFu8ll)
//============================================================================



static void Test_aL_Ui_BFu8s()
{
  {
    init_simple_test("aL_Ui_BFu8s");
    static STRUCT_IF_C aL_Ui_BFu8s lv;
    check2(sizeof(lv), 13, "sizeof(aL_Ui_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_BFu8s)");
    check_field_offset(lv, v1, 0, "aL_Ui_BFu8s.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_BFu8s.v2");
    set_bf_and_test(lv, v3, 12, 0, 8, 1, "aL_Ui_BFu8s");
    set_bf_and_test(lv, v3, 12, 0, 8, hide_ull(1LL<<7), "aL_Ui_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_BFu8s, aL_Ui_BFu8s)
//============================================================================



static void Test_aL_Ui_BFu9i()
{
  {
    init_simple_test("aL_Ui_BFu9i");
    static STRUCT_IF_C aL_Ui_BFu9i lv;
    check2(sizeof(lv), 14, "sizeof(aL_Ui_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_BFu9i)");
    check_field_offset(lv, v1, 0, "aL_Ui_BFu9i.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_BFu9i.v2");
    set_bf_and_test(lv, v3, 12, 0, 9, 1, "aL_Ui_BFu9i");
    set_bf_and_test(lv, v3, 12, 0, 9, hide_ull(1LL<<8), "aL_Ui_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_BFu9i, aL_Ui_BFu9i)
//============================================================================



static void Test_aL_Ui_BFu9ll()
{
  {
    init_simple_test("aL_Ui_BFu9ll");
    static STRUCT_IF_C aL_Ui_BFu9ll lv;
    check2(sizeof(lv), 14, "sizeof(aL_Ui_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_BFu9ll)");
    check_field_offset(lv, v1, 0, "aL_Ui_BFu9ll.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_BFu9ll.v2");
    set_bf_and_test(lv, v3, 12, 0, 9, 1, "aL_Ui_BFu9ll");
    set_bf_and_test(lv, v3, 12, 0, 9, hide_ull(1LL<<8), "aL_Ui_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_BFu9ll, aL_Ui_BFu9ll)
//============================================================================



static void Test_aL_Ui_BFu9s()
{
  {
    init_simple_test("aL_Ui_BFu9s");
    static STRUCT_IF_C aL_Ui_BFu9s lv;
    check2(sizeof(lv), 14, "sizeof(aL_Ui_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_BFu9s)");
    check_field_offset(lv, v1, 0, "aL_Ui_BFu9s.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_BFu9s.v2");
    set_bf_and_test(lv, v3, 12, 0, 9, 1, "aL_Ui_BFu9s");
    set_bf_and_test(lv, v3, 12, 0, 9, hide_ull(1LL<<8), "aL_Ui_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_BFu9s, aL_Ui_BFu9s)
//============================================================================



static void Test_aL_Ui_C()
{
  {
    init_simple_test("aL_Ui_C");
    STRUCT_IF_C aL_Ui_C lv;
    check2(sizeof(lv), 13, "sizeof(aL_Ui_C)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_C)");
    check_field_offset(lv, v1, 0, "aL_Ui_C.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_C.v2");
    check_field_offset(lv, v3, 12, "aL_Ui_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_C, aL_Ui_C)
//============================================================================



static void Test_aL_Ui_D()
{
  {
    init_simple_test("aL_Ui_D");
    STRUCT_IF_C aL_Ui_D lv;
    check2(sizeof(lv), 20, "sizeof(aL_Ui_D)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_D)");
    check_field_offset(lv, v1, 0, "aL_Ui_D.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_D.v2");
    check_field_offset(lv, v3, 12, "aL_Ui_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_D, aL_Ui_D)
//============================================================================



static void Test_aL_Ui_F()
{
  {
    init_simple_test("aL_Ui_F");
    STRUCT_IF_C aL_Ui_F lv;
    check2(sizeof(lv), 16, "sizeof(aL_Ui_F)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_F)");
    check_field_offset(lv, v1, 0, "aL_Ui_F.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_F.v2");
    check_field_offset(lv, v3, 12, "aL_Ui_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_F, aL_Ui_F)
//============================================================================



static void Test_aL_Ui_I()
{
  {
    init_simple_test("aL_Ui_I");
    STRUCT_IF_C aL_Ui_I lv;
    check2(sizeof(lv), 16, "sizeof(aL_Ui_I)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_I)");
    check_field_offset(lv, v1, 0, "aL_Ui_I.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_I.v2");
    check_field_offset(lv, v3, 12, "aL_Ui_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_I, aL_Ui_I)
//============================================================================



static void Test_aL_Ui_Ip()
{
  {
    init_simple_test("aL_Ui_Ip");
    STRUCT_IF_C aL_Ui_Ip lv;
    check2(sizeof(lv), ABISELECT(20,16), "sizeof(aL_Ui_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_Ip)");
    check_field_offset(lv, v1, 0, "aL_Ui_Ip.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_Ip.v2");
    check_field_offset(lv, v3, 12, "aL_Ui_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_Ip, aL_Ui_Ip)
//============================================================================



static void Test_aL_Ui_L()
{
  {
    init_simple_test("aL_Ui_L");
    STRUCT_IF_C aL_Ui_L lv;
    check2(sizeof(lv), 20, "sizeof(aL_Ui_L)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_L)");
    check_field_offset(lv, v1, 0, "aL_Ui_L.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_L.v2");
    check_field_offset(lv, v3, 12, "aL_Ui_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_L, aL_Ui_L)
//============================================================================



static void Test_aL_Ui_S()
{
  {
    init_simple_test("aL_Ui_S");
    STRUCT_IF_C aL_Ui_S lv;
    check2(sizeof(lv), 14, "sizeof(aL_Ui_S)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_S)");
    check_field_offset(lv, v1, 0, "aL_Ui_S.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_S.v2");
    check_field_offset(lv, v3, 12, "aL_Ui_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_S, aL_Ui_S)
//============================================================================



static void Test_aL_Ui_Uc()
{
  {
    init_simple_test("aL_Ui_Uc");
    STRUCT_IF_C aL_Ui_Uc lv;
    check2(sizeof(lv), 13, "sizeof(aL_Ui_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_Uc)");
    check_field_offset(lv, v1, 0, "aL_Ui_Uc.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_Uc.v2");
    check_field_offset(lv, v3, 12, "aL_Ui_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_Uc, aL_Ui_Uc)
//============================================================================



static void Test_aL_Ui_Ui()
{
  {
    init_simple_test("aL_Ui_Ui");
    STRUCT_IF_C aL_Ui_Ui lv;
    check2(sizeof(lv), 16, "sizeof(aL_Ui_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_Ui)");
    check_field_offset(lv, v1, 0, "aL_Ui_Ui.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_Ui.v2");
    check_field_offset(lv, v3, 12, "aL_Ui_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_Ui, aL_Ui_Ui)
//============================================================================



static void Test_aL_Ui_Ul()
{
  {
    init_simple_test("aL_Ui_Ul");
    STRUCT_IF_C aL_Ui_Ul lv;
    check2(sizeof(lv), 20, "sizeof(aL_Ui_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_Ul)");
    check_field_offset(lv, v1, 0, "aL_Ui_Ul.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_Ul.v2");
    check_field_offset(lv, v3, 12, "aL_Ui_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_Ul, aL_Ui_Ul)
//============================================================================



static void Test_aL_Ui_Us()
{
  {
    init_simple_test("aL_Ui_Us");
    STRUCT_IF_C aL_Ui_Us lv;
    check2(sizeof(lv), 14, "sizeof(aL_Ui_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_Us)");
    check_field_offset(lv, v1, 0, "aL_Ui_Us.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_Us.v2");
    check_field_offset(lv, v3, 12, "aL_Ui_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_Us, aL_Ui_Us)
//============================================================================



static void Test_aL_Ui_Vp()
{
  {
    init_simple_test("aL_Ui_Vp");
    STRUCT_IF_C aL_Ui_Vp lv;
    check2(sizeof(lv), ABISELECT(20,16), "sizeof(aL_Ui_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ui_Vp)");
    check_field_offset(lv, v1, 0, "aL_Ui_Vp.v1");
    check_field_offset(lv, v2, 8, "aL_Ui_Vp.v2");
    check_field_offset(lv, v3, 12, "aL_Ui_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ui_Vp, aL_Ui_Vp)
//============================================================================



static void Test_aL_Ul()
{
  {
    init_simple_test("aL_Ul");
    STRUCT_IF_C aL_Ul lv;
    check2(sizeof(lv), 16, "sizeof(aL_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul)");
    check_field_offset(lv, v1, 0, "aL_Ul.v1");
    check_field_offset(lv, v2, 8, "aL_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul, aL_Ul)
//============================================================================



static void Test_aL_Ul_BFu15i()
{
  {
    init_simple_test("aL_Ul_BFu15i");
    static STRUCT_IF_C aL_Ul_BFu15i lv;
    check2(sizeof(lv), 18, "sizeof(aL_Ul_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_BFu15i)");
    check_field_offset(lv, v1, 0, "aL_Ul_BFu15i.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_BFu15i.v2");
    set_bf_and_test(lv, v3, 16, 0, 15, 1, "aL_Ul_BFu15i");
    set_bf_and_test(lv, v3, 16, 0, 15, hide_ull(1LL<<14), "aL_Ul_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_BFu15i, aL_Ul_BFu15i)
//============================================================================



static void Test_aL_Ul_BFu15ll()
{
  {
    init_simple_test("aL_Ul_BFu15ll");
    static STRUCT_IF_C aL_Ul_BFu15ll lv;
    check2(sizeof(lv), 18, "sizeof(aL_Ul_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_BFu15ll)");
    check_field_offset(lv, v1, 0, "aL_Ul_BFu15ll.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_BFu15ll.v2");
    set_bf_and_test(lv, v3, 16, 0, 15, 1, "aL_Ul_BFu15ll");
    set_bf_and_test(lv, v3, 16, 0, 15, hide_ull(1LL<<14), "aL_Ul_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_BFu15ll, aL_Ul_BFu15ll)
//============================================================================



static void Test_aL_Ul_BFu15s()
{
  {
    init_simple_test("aL_Ul_BFu15s");
    static STRUCT_IF_C aL_Ul_BFu15s lv;
    check2(sizeof(lv), 18, "sizeof(aL_Ul_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_BFu15s)");
    check_field_offset(lv, v1, 0, "aL_Ul_BFu15s.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_BFu15s.v2");
    set_bf_and_test(lv, v3, 16, 0, 15, 1, "aL_Ul_BFu15s");
    set_bf_and_test(lv, v3, 16, 0, 15, hide_ull(1LL<<14), "aL_Ul_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_BFu15s, aL_Ul_BFu15s)
//============================================================================



static void Test_aL_Ul_BFu16i()
{
  {
    init_simple_test("aL_Ul_BFu16i");
    static STRUCT_IF_C aL_Ul_BFu16i lv;
    check2(sizeof(lv), 18, "sizeof(aL_Ul_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_BFu16i)");
    check_field_offset(lv, v1, 0, "aL_Ul_BFu16i.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_BFu16i.v2");
    set_bf_and_test(lv, v3, 16, 0, 16, 1, "aL_Ul_BFu16i");
    set_bf_and_test(lv, v3, 16, 0, 16, hide_ull(1LL<<15), "aL_Ul_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_BFu16i, aL_Ul_BFu16i)
//============================================================================



static void Test_aL_Ul_BFu16ll()
{
  {
    init_simple_test("aL_Ul_BFu16ll");
    static STRUCT_IF_C aL_Ul_BFu16ll lv;
    check2(sizeof(lv), 18, "sizeof(aL_Ul_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_BFu16ll)");
    check_field_offset(lv, v1, 0, "aL_Ul_BFu16ll.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_BFu16ll.v2");
    set_bf_and_test(lv, v3, 16, 0, 16, 1, "aL_Ul_BFu16ll");
    set_bf_and_test(lv, v3, 16, 0, 16, hide_ull(1LL<<15), "aL_Ul_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_BFu16ll, aL_Ul_BFu16ll)
//============================================================================



static void Test_aL_Ul_BFu16s()
{
  {
    init_simple_test("aL_Ul_BFu16s");
    static STRUCT_IF_C aL_Ul_BFu16s lv;
    check2(sizeof(lv), 18, "sizeof(aL_Ul_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_BFu16s)");
    check_field_offset(lv, v1, 0, "aL_Ul_BFu16s.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_BFu16s.v2");
    set_bf_and_test(lv, v3, 16, 0, 16, 1, "aL_Ul_BFu16s");
    set_bf_and_test(lv, v3, 16, 0, 16, hide_ull(1LL<<15), "aL_Ul_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_BFu16s, aL_Ul_BFu16s)
//============================================================================



static void Test_aL_Ul_BFu17i()
{
  {
    init_simple_test("aL_Ul_BFu17i");
    static STRUCT_IF_C aL_Ul_BFu17i lv;
    check2(sizeof(lv), 19, "sizeof(aL_Ul_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_BFu17i)");
    check_field_offset(lv, v1, 0, "aL_Ul_BFu17i.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_BFu17i.v2");
    set_bf_and_test(lv, v3, 16, 0, 17, 1, "aL_Ul_BFu17i");
    set_bf_and_test(lv, v3, 16, 0, 17, hide_ull(1LL<<16), "aL_Ul_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_BFu17i, aL_Ul_BFu17i)
//============================================================================



static void Test_aL_Ul_BFu17ll()
{
  {
    init_simple_test("aL_Ul_BFu17ll");
    static STRUCT_IF_C aL_Ul_BFu17ll lv;
    check2(sizeof(lv), 19, "sizeof(aL_Ul_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_BFu17ll)");
    check_field_offset(lv, v1, 0, "aL_Ul_BFu17ll.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_BFu17ll.v2");
    set_bf_and_test(lv, v3, 16, 0, 17, 1, "aL_Ul_BFu17ll");
    set_bf_and_test(lv, v3, 16, 0, 17, hide_ull(1LL<<16), "aL_Ul_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_BFu17ll, aL_Ul_BFu17ll)
//============================================================================



static void Test_aL_Ul_BFu1c()
{
  {
    init_simple_test("aL_Ul_BFu1c");
    static STRUCT_IF_C aL_Ul_BFu1c lv;
    check2(sizeof(lv), 17, "sizeof(aL_Ul_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_BFu1c)");
    check_field_offset(lv, v1, 0, "aL_Ul_BFu1c.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_BFu1c.v2");
    set_bf_and_test(lv, v3, 16, 0, 1, 1, "aL_Ul_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_BFu1c, aL_Ul_BFu1c)
//============================================================================



static void Test_aL_Ul_BFu1i()
{
  {
    init_simple_test("aL_Ul_BFu1i");
    static STRUCT_IF_C aL_Ul_BFu1i lv;
    check2(sizeof(lv), 17, "sizeof(aL_Ul_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_BFu1i)");
    check_field_offset(lv, v1, 0, "aL_Ul_BFu1i.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_BFu1i.v2");
    set_bf_and_test(lv, v3, 16, 0, 1, 1, "aL_Ul_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_BFu1i, aL_Ul_BFu1i)
//============================================================================



static void Test_aL_Ul_BFu1ll()
{
  {
    init_simple_test("aL_Ul_BFu1ll");
    static STRUCT_IF_C aL_Ul_BFu1ll lv;
    check2(sizeof(lv), 17, "sizeof(aL_Ul_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_BFu1ll)");
    check_field_offset(lv, v1, 0, "aL_Ul_BFu1ll.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_BFu1ll.v2");
    set_bf_and_test(lv, v3, 16, 0, 1, 1, "aL_Ul_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_BFu1ll, aL_Ul_BFu1ll)
//============================================================================



static void Test_aL_Ul_BFu1s()
{
  {
    init_simple_test("aL_Ul_BFu1s");
    static STRUCT_IF_C aL_Ul_BFu1s lv;
    check2(sizeof(lv), 17, "sizeof(aL_Ul_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_BFu1s)");
    check_field_offset(lv, v1, 0, "aL_Ul_BFu1s.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_BFu1s.v2");
    set_bf_and_test(lv, v3, 16, 0, 1, 1, "aL_Ul_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_BFu1s, aL_Ul_BFu1s)
//============================================================================



static void Test_aL_Ul_BFu31i()
{
  {
    init_simple_test("aL_Ul_BFu31i");
    static STRUCT_IF_C aL_Ul_BFu31i lv;
    check2(sizeof(lv), 20, "sizeof(aL_Ul_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_BFu31i)");
    check_field_offset(lv, v1, 0, "aL_Ul_BFu31i.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_BFu31i.v2");
    set_bf_and_test(lv, v3, 16, 0, 31, 1, "aL_Ul_BFu31i");
    set_bf_and_test(lv, v3, 16, 0, 31, hide_ull(1LL<<30), "aL_Ul_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_BFu31i, aL_Ul_BFu31i)
//============================================================================



static void Test_aL_Ul_BFu31ll()
{
  {
    init_simple_test("aL_Ul_BFu31ll");
    static STRUCT_IF_C aL_Ul_BFu31ll lv;
    check2(sizeof(lv), 20, "sizeof(aL_Ul_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_BFu31ll)");
    check_field_offset(lv, v1, 0, "aL_Ul_BFu31ll.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_BFu31ll.v2");
    set_bf_and_test(lv, v3, 16, 0, 31, 1, "aL_Ul_BFu31ll");
    set_bf_and_test(lv, v3, 16, 0, 31, hide_ull(1LL<<30), "aL_Ul_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_BFu31ll, aL_Ul_BFu31ll)
//============================================================================



static void Test_aL_Ul_BFu32i()
{
  {
    init_simple_test("aL_Ul_BFu32i");
    static STRUCT_IF_C aL_Ul_BFu32i lv;
    check2(sizeof(lv), 20, "sizeof(aL_Ul_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_BFu32i)");
    check_field_offset(lv, v1, 0, "aL_Ul_BFu32i.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_BFu32i.v2");
    set_bf_and_test(lv, v3, 16, 0, 32, 1, "aL_Ul_BFu32i");
    set_bf_and_test(lv, v3, 16, 0, 32, hide_ull(1LL<<31), "aL_Ul_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_BFu32i, aL_Ul_BFu32i)
//============================================================================



static void Test_aL_Ul_BFu32ll()
{
  {
    init_simple_test("aL_Ul_BFu32ll");
    static STRUCT_IF_C aL_Ul_BFu32ll lv;
    check2(sizeof(lv), 20, "sizeof(aL_Ul_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_BFu32ll)");
    check_field_offset(lv, v1, 0, "aL_Ul_BFu32ll.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_BFu32ll.v2");
    set_bf_and_test(lv, v3, 16, 0, 32, 1, "aL_Ul_BFu32ll");
    set_bf_and_test(lv, v3, 16, 0, 32, hide_ull(1LL<<31), "aL_Ul_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_BFu32ll, aL_Ul_BFu32ll)
//============================================================================



static void Test_aL_Ul_BFu33()
{
  {
    init_simple_test("aL_Ul_BFu33");
    static STRUCT_IF_C aL_Ul_BFu33 lv;
    check2(sizeof(lv), 21, "sizeof(aL_Ul_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_BFu33)");
    check_field_offset(lv, v1, 0, "aL_Ul_BFu33.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_BFu33.v2");
    set_bf_and_test(lv, v3, 16, 0, 33, 1, "aL_Ul_BFu33");
    set_bf_and_test(lv, v3, 16, 0, 33, hide_ull(1LL<<32), "aL_Ul_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_BFu33, aL_Ul_BFu33)
//============================================================================



static void Test_aL_Ul_BFu7c()
{
  {
    init_simple_test("aL_Ul_BFu7c");
    static STRUCT_IF_C aL_Ul_BFu7c lv;
    check2(sizeof(lv), 17, "sizeof(aL_Ul_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_BFu7c)");
    check_field_offset(lv, v1, 0, "aL_Ul_BFu7c.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_BFu7c.v2");
    set_bf_and_test(lv, v3, 16, 0, 7, 1, "aL_Ul_BFu7c");
    set_bf_and_test(lv, v3, 16, 0, 7, hide_ull(1LL<<6), "aL_Ul_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_BFu7c, aL_Ul_BFu7c)
//============================================================================



static void Test_aL_Ul_BFu7i()
{
  {
    init_simple_test("aL_Ul_BFu7i");
    static STRUCT_IF_C aL_Ul_BFu7i lv;
    check2(sizeof(lv), 17, "sizeof(aL_Ul_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_BFu7i)");
    check_field_offset(lv, v1, 0, "aL_Ul_BFu7i.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_BFu7i.v2");
    set_bf_and_test(lv, v3, 16, 0, 7, 1, "aL_Ul_BFu7i");
    set_bf_and_test(lv, v3, 16, 0, 7, hide_ull(1LL<<6), "aL_Ul_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_BFu7i, aL_Ul_BFu7i)
//============================================================================



static void Test_aL_Ul_BFu7ll()
{
  {
    init_simple_test("aL_Ul_BFu7ll");
    static STRUCT_IF_C aL_Ul_BFu7ll lv;
    check2(sizeof(lv), 17, "sizeof(aL_Ul_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_BFu7ll)");
    check_field_offset(lv, v1, 0, "aL_Ul_BFu7ll.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_BFu7ll.v2");
    set_bf_and_test(lv, v3, 16, 0, 7, 1, "aL_Ul_BFu7ll");
    set_bf_and_test(lv, v3, 16, 0, 7, hide_ull(1LL<<6), "aL_Ul_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_BFu7ll, aL_Ul_BFu7ll)
//============================================================================



static void Test_aL_Ul_BFu7s()
{
  {
    init_simple_test("aL_Ul_BFu7s");
    static STRUCT_IF_C aL_Ul_BFu7s lv;
    check2(sizeof(lv), 17, "sizeof(aL_Ul_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_BFu7s)");
    check_field_offset(lv, v1, 0, "aL_Ul_BFu7s.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_BFu7s.v2");
    set_bf_and_test(lv, v3, 16, 0, 7, 1, "aL_Ul_BFu7s");
    set_bf_and_test(lv, v3, 16, 0, 7, hide_ull(1LL<<6), "aL_Ul_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_BFu7s, aL_Ul_BFu7s)
//============================================================================



static void Test_aL_Ul_BFu8c()
{
  {
    init_simple_test("aL_Ul_BFu8c");
    static STRUCT_IF_C aL_Ul_BFu8c lv;
    check2(sizeof(lv), 17, "sizeof(aL_Ul_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_BFu8c)");
    check_field_offset(lv, v1, 0, "aL_Ul_BFu8c.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_BFu8c.v2");
    set_bf_and_test(lv, v3, 16, 0, 8, 1, "aL_Ul_BFu8c");
    set_bf_and_test(lv, v3, 16, 0, 8, hide_ull(1LL<<7), "aL_Ul_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_BFu8c, aL_Ul_BFu8c)
//============================================================================



static void Test_aL_Ul_BFu8i()
{
  {
    init_simple_test("aL_Ul_BFu8i");
    static STRUCT_IF_C aL_Ul_BFu8i lv;
    check2(sizeof(lv), 17, "sizeof(aL_Ul_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_BFu8i)");
    check_field_offset(lv, v1, 0, "aL_Ul_BFu8i.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_BFu8i.v2");
    set_bf_and_test(lv, v3, 16, 0, 8, 1, "aL_Ul_BFu8i");
    set_bf_and_test(lv, v3, 16, 0, 8, hide_ull(1LL<<7), "aL_Ul_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_BFu8i, aL_Ul_BFu8i)
//============================================================================



static void Test_aL_Ul_BFu8ll()
{
  {
    init_simple_test("aL_Ul_BFu8ll");
    static STRUCT_IF_C aL_Ul_BFu8ll lv;
    check2(sizeof(lv), 17, "sizeof(aL_Ul_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_BFu8ll)");
    check_field_offset(lv, v1, 0, "aL_Ul_BFu8ll.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_BFu8ll.v2");
    set_bf_and_test(lv, v3, 16, 0, 8, 1, "aL_Ul_BFu8ll");
    set_bf_and_test(lv, v3, 16, 0, 8, hide_ull(1LL<<7), "aL_Ul_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_BFu8ll, aL_Ul_BFu8ll)
//============================================================================



static void Test_aL_Ul_BFu8s()
{
  {
    init_simple_test("aL_Ul_BFu8s");
    static STRUCT_IF_C aL_Ul_BFu8s lv;
    check2(sizeof(lv), 17, "sizeof(aL_Ul_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_BFu8s)");
    check_field_offset(lv, v1, 0, "aL_Ul_BFu8s.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_BFu8s.v2");
    set_bf_and_test(lv, v3, 16, 0, 8, 1, "aL_Ul_BFu8s");
    set_bf_and_test(lv, v3, 16, 0, 8, hide_ull(1LL<<7), "aL_Ul_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_BFu8s, aL_Ul_BFu8s)
//============================================================================



static void Test_aL_Ul_BFu9i()
{
  {
    init_simple_test("aL_Ul_BFu9i");
    static STRUCT_IF_C aL_Ul_BFu9i lv;
    check2(sizeof(lv), 18, "sizeof(aL_Ul_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_BFu9i)");
    check_field_offset(lv, v1, 0, "aL_Ul_BFu9i.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_BFu9i.v2");
    set_bf_and_test(lv, v3, 16, 0, 9, 1, "aL_Ul_BFu9i");
    set_bf_and_test(lv, v3, 16, 0, 9, hide_ull(1LL<<8), "aL_Ul_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_BFu9i, aL_Ul_BFu9i)
//============================================================================



static void Test_aL_Ul_BFu9ll()
{
  {
    init_simple_test("aL_Ul_BFu9ll");
    static STRUCT_IF_C aL_Ul_BFu9ll lv;
    check2(sizeof(lv), 18, "sizeof(aL_Ul_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_BFu9ll)");
    check_field_offset(lv, v1, 0, "aL_Ul_BFu9ll.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_BFu9ll.v2");
    set_bf_and_test(lv, v3, 16, 0, 9, 1, "aL_Ul_BFu9ll");
    set_bf_and_test(lv, v3, 16, 0, 9, hide_ull(1LL<<8), "aL_Ul_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_BFu9ll, aL_Ul_BFu9ll)
//============================================================================



static void Test_aL_Ul_BFu9s()
{
  {
    init_simple_test("aL_Ul_BFu9s");
    static STRUCT_IF_C aL_Ul_BFu9s lv;
    check2(sizeof(lv), 18, "sizeof(aL_Ul_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_BFu9s)");
    check_field_offset(lv, v1, 0, "aL_Ul_BFu9s.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_BFu9s.v2");
    set_bf_and_test(lv, v3, 16, 0, 9, 1, "aL_Ul_BFu9s");
    set_bf_and_test(lv, v3, 16, 0, 9, hide_ull(1LL<<8), "aL_Ul_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_BFu9s, aL_Ul_BFu9s)
//============================================================================



static void Test_aL_Ul_C()
{
  {
    init_simple_test("aL_Ul_C");
    STRUCT_IF_C aL_Ul_C lv;
    check2(sizeof(lv), 17, "sizeof(aL_Ul_C)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_C)");
    check_field_offset(lv, v1, 0, "aL_Ul_C.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_C.v2");
    check_field_offset(lv, v3, 16, "aL_Ul_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_C, aL_Ul_C)
//============================================================================



static void Test_aL_Ul_D()
{
  {
    init_simple_test("aL_Ul_D");
    STRUCT_IF_C aL_Ul_D lv;
    check2(sizeof(lv), 24, "sizeof(aL_Ul_D)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_D)");
    check_field_offset(lv, v1, 0, "aL_Ul_D.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_D.v2");
    check_field_offset(lv, v3, 16, "aL_Ul_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_D, aL_Ul_D)
//============================================================================



static void Test_aL_Ul_F()
{
  {
    init_simple_test("aL_Ul_F");
    STRUCT_IF_C aL_Ul_F lv;
    check2(sizeof(lv), 20, "sizeof(aL_Ul_F)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_F)");
    check_field_offset(lv, v1, 0, "aL_Ul_F.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_F.v2");
    check_field_offset(lv, v3, 16, "aL_Ul_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_F, aL_Ul_F)
//============================================================================



static void Test_aL_Ul_I()
{
  {
    init_simple_test("aL_Ul_I");
    STRUCT_IF_C aL_Ul_I lv;
    check2(sizeof(lv), 20, "sizeof(aL_Ul_I)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_I)");
    check_field_offset(lv, v1, 0, "aL_Ul_I.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_I.v2");
    check_field_offset(lv, v3, 16, "aL_Ul_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_I, aL_Ul_I)
//============================================================================



static void Test_aL_Ul_Ip()
{
  {
    init_simple_test("aL_Ul_Ip");
    STRUCT_IF_C aL_Ul_Ip lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(aL_Ul_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_Ip)");
    check_field_offset(lv, v1, 0, "aL_Ul_Ip.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_Ip.v2");
    check_field_offset(lv, v3, 16, "aL_Ul_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_Ip, aL_Ul_Ip)
//============================================================================



static void Test_aL_Ul_L()
{
  {
    init_simple_test("aL_Ul_L");
    STRUCT_IF_C aL_Ul_L lv;
    check2(sizeof(lv), 24, "sizeof(aL_Ul_L)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_L)");
    check_field_offset(lv, v1, 0, "aL_Ul_L.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_L.v2");
    check_field_offset(lv, v3, 16, "aL_Ul_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_L, aL_Ul_L)
//============================================================================



static void Test_aL_Ul_S()
{
  {
    init_simple_test("aL_Ul_S");
    STRUCT_IF_C aL_Ul_S lv;
    check2(sizeof(lv), 18, "sizeof(aL_Ul_S)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_S)");
    check_field_offset(lv, v1, 0, "aL_Ul_S.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_S.v2");
    check_field_offset(lv, v3, 16, "aL_Ul_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_S, aL_Ul_S)
//============================================================================



static void Test_aL_Ul_Uc()
{
  {
    init_simple_test("aL_Ul_Uc");
    STRUCT_IF_C aL_Ul_Uc lv;
    check2(sizeof(lv), 17, "sizeof(aL_Ul_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_Uc)");
    check_field_offset(lv, v1, 0, "aL_Ul_Uc.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_Uc.v2");
    check_field_offset(lv, v3, 16, "aL_Ul_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_Uc, aL_Ul_Uc)
//============================================================================



static void Test_aL_Ul_Ui()
{
  {
    init_simple_test("aL_Ul_Ui");
    STRUCT_IF_C aL_Ul_Ui lv;
    check2(sizeof(lv), 20, "sizeof(aL_Ul_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_Ui)");
    check_field_offset(lv, v1, 0, "aL_Ul_Ui.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_Ui.v2");
    check_field_offset(lv, v3, 16, "aL_Ul_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_Ui, aL_Ul_Ui)
//============================================================================



static void Test_aL_Ul_Ul()
{
  {
    init_simple_test("aL_Ul_Ul");
    STRUCT_IF_C aL_Ul_Ul lv;
    check2(sizeof(lv), 24, "sizeof(aL_Ul_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_Ul)");
    check_field_offset(lv, v1, 0, "aL_Ul_Ul.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_Ul.v2");
    check_field_offset(lv, v3, 16, "aL_Ul_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_Ul, aL_Ul_Ul)
//============================================================================



static void Test_aL_Ul_Us()
{
  {
    init_simple_test("aL_Ul_Us");
    STRUCT_IF_C aL_Ul_Us lv;
    check2(sizeof(lv), 18, "sizeof(aL_Ul_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_Us)");
    check_field_offset(lv, v1, 0, "aL_Ul_Us.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_Us.v2");
    check_field_offset(lv, v3, 16, "aL_Ul_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_Us, aL_Ul_Us)
//============================================================================



static void Test_aL_Ul_Vp()
{
  {
    init_simple_test("aL_Ul_Vp");
    STRUCT_IF_C aL_Ul_Vp lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(aL_Ul_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Ul_Vp)");
    check_field_offset(lv, v1, 0, "aL_Ul_Vp.v1");
    check_field_offset(lv, v2, 8, "aL_Ul_Vp.v2");
    check_field_offset(lv, v3, 16, "aL_Ul_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Ul_Vp, aL_Ul_Vp)
//============================================================================



static void Test_aL_Us()
{
  {
    init_simple_test("aL_Us");
    STRUCT_IF_C aL_Us lv;
    check2(sizeof(lv), 10, "sizeof(aL_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us)");
    check_field_offset(lv, v1, 0, "aL_Us.v1");
    check_field_offset(lv, v2, 8, "aL_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us, aL_Us)
//============================================================================



static void Test_aL_Us_BFu15i()
{
  {
    init_simple_test("aL_Us_BFu15i");
    static STRUCT_IF_C aL_Us_BFu15i lv;
    check2(sizeof(lv), 12, "sizeof(aL_Us_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_BFu15i)");
    check_field_offset(lv, v1, 0, "aL_Us_BFu15i.v1");
    check_field_offset(lv, v2, 8, "aL_Us_BFu15i.v2");
    set_bf_and_test(lv, v3, 10, 0, 15, 1, "aL_Us_BFu15i");
    set_bf_and_test(lv, v3, 10, 0, 15, hide_ull(1LL<<14), "aL_Us_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_BFu15i, aL_Us_BFu15i)
//============================================================================



static void Test_aL_Us_BFu15ll()
{
  {
    init_simple_test("aL_Us_BFu15ll");
    static STRUCT_IF_C aL_Us_BFu15ll lv;
    check2(sizeof(lv), 12, "sizeof(aL_Us_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_BFu15ll)");
    check_field_offset(lv, v1, 0, "aL_Us_BFu15ll.v1");
    check_field_offset(lv, v2, 8, "aL_Us_BFu15ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 15, 1, "aL_Us_BFu15ll");
    set_bf_and_test(lv, v3, 10, 0, 15, hide_ull(1LL<<14), "aL_Us_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_BFu15ll, aL_Us_BFu15ll)
//============================================================================



static void Test_aL_Us_BFu15s()
{
  {
    init_simple_test("aL_Us_BFu15s");
    static STRUCT_IF_C aL_Us_BFu15s lv;
    check2(sizeof(lv), 12, "sizeof(aL_Us_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_BFu15s)");
    check_field_offset(lv, v1, 0, "aL_Us_BFu15s.v1");
    check_field_offset(lv, v2, 8, "aL_Us_BFu15s.v2");
    set_bf_and_test(lv, v3, 10, 0, 15, 1, "aL_Us_BFu15s");
    set_bf_and_test(lv, v3, 10, 0, 15, hide_ull(1LL<<14), "aL_Us_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_BFu15s, aL_Us_BFu15s)
//============================================================================



static void Test_aL_Us_BFu16i()
{
  {
    init_simple_test("aL_Us_BFu16i");
    static STRUCT_IF_C aL_Us_BFu16i lv;
    check2(sizeof(lv), 12, "sizeof(aL_Us_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_BFu16i)");
    check_field_offset(lv, v1, 0, "aL_Us_BFu16i.v1");
    check_field_offset(lv, v2, 8, "aL_Us_BFu16i.v2");
    set_bf_and_test(lv, v3, 10, 0, 16, 1, "aL_Us_BFu16i");
    set_bf_and_test(lv, v3, 10, 0, 16, hide_ull(1LL<<15), "aL_Us_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_BFu16i, aL_Us_BFu16i)
//============================================================================



static void Test_aL_Us_BFu16ll()
{
  {
    init_simple_test("aL_Us_BFu16ll");
    static STRUCT_IF_C aL_Us_BFu16ll lv;
    check2(sizeof(lv), 12, "sizeof(aL_Us_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_BFu16ll)");
    check_field_offset(lv, v1, 0, "aL_Us_BFu16ll.v1");
    check_field_offset(lv, v2, 8, "aL_Us_BFu16ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 16, 1, "aL_Us_BFu16ll");
    set_bf_and_test(lv, v3, 10, 0, 16, hide_ull(1LL<<15), "aL_Us_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_BFu16ll, aL_Us_BFu16ll)
//============================================================================



static void Test_aL_Us_BFu16s()
{
  {
    init_simple_test("aL_Us_BFu16s");
    static STRUCT_IF_C aL_Us_BFu16s lv;
    check2(sizeof(lv), 12, "sizeof(aL_Us_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_BFu16s)");
    check_field_offset(lv, v1, 0, "aL_Us_BFu16s.v1");
    check_field_offset(lv, v2, 8, "aL_Us_BFu16s.v2");
    set_bf_and_test(lv, v3, 10, 0, 16, 1, "aL_Us_BFu16s");
    set_bf_and_test(lv, v3, 10, 0, 16, hide_ull(1LL<<15), "aL_Us_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_BFu16s, aL_Us_BFu16s)
//============================================================================



static void Test_aL_Us_BFu17i()
{
  {
    init_simple_test("aL_Us_BFu17i");
    static STRUCT_IF_C aL_Us_BFu17i lv;
    check2(sizeof(lv), 13, "sizeof(aL_Us_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_BFu17i)");
    check_field_offset(lv, v1, 0, "aL_Us_BFu17i.v1");
    check_field_offset(lv, v2, 8, "aL_Us_BFu17i.v2");
    set_bf_and_test(lv, v3, 10, 0, 17, 1, "aL_Us_BFu17i");
    set_bf_and_test(lv, v3, 10, 0, 17, hide_ull(1LL<<16), "aL_Us_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_BFu17i, aL_Us_BFu17i)
//============================================================================



static void Test_aL_Us_BFu17ll()
{
  {
    init_simple_test("aL_Us_BFu17ll");
    static STRUCT_IF_C aL_Us_BFu17ll lv;
    check2(sizeof(lv), 13, "sizeof(aL_Us_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_BFu17ll)");
    check_field_offset(lv, v1, 0, "aL_Us_BFu17ll.v1");
    check_field_offset(lv, v2, 8, "aL_Us_BFu17ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 17, 1, "aL_Us_BFu17ll");
    set_bf_and_test(lv, v3, 10, 0, 17, hide_ull(1LL<<16), "aL_Us_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_BFu17ll, aL_Us_BFu17ll)
//============================================================================



static void Test_aL_Us_BFu1c()
{
  {
    init_simple_test("aL_Us_BFu1c");
    static STRUCT_IF_C aL_Us_BFu1c lv;
    check2(sizeof(lv), 11, "sizeof(aL_Us_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_BFu1c)");
    check_field_offset(lv, v1, 0, "aL_Us_BFu1c.v1");
    check_field_offset(lv, v2, 8, "aL_Us_BFu1c.v2");
    set_bf_and_test(lv, v3, 10, 0, 1, 1, "aL_Us_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_BFu1c, aL_Us_BFu1c)
//============================================================================



static void Test_aL_Us_BFu1i()
{
  {
    init_simple_test("aL_Us_BFu1i");
    static STRUCT_IF_C aL_Us_BFu1i lv;
    check2(sizeof(lv), 11, "sizeof(aL_Us_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_BFu1i)");
    check_field_offset(lv, v1, 0, "aL_Us_BFu1i.v1");
    check_field_offset(lv, v2, 8, "aL_Us_BFu1i.v2");
    set_bf_and_test(lv, v3, 10, 0, 1, 1, "aL_Us_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_BFu1i, aL_Us_BFu1i)
//============================================================================



static void Test_aL_Us_BFu1ll()
{
  {
    init_simple_test("aL_Us_BFu1ll");
    static STRUCT_IF_C aL_Us_BFu1ll lv;
    check2(sizeof(lv), 11, "sizeof(aL_Us_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_BFu1ll)");
    check_field_offset(lv, v1, 0, "aL_Us_BFu1ll.v1");
    check_field_offset(lv, v2, 8, "aL_Us_BFu1ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 1, 1, "aL_Us_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_BFu1ll, aL_Us_BFu1ll)
//============================================================================



static void Test_aL_Us_BFu1s()
{
  {
    init_simple_test("aL_Us_BFu1s");
    static STRUCT_IF_C aL_Us_BFu1s lv;
    check2(sizeof(lv), 11, "sizeof(aL_Us_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_BFu1s)");
    check_field_offset(lv, v1, 0, "aL_Us_BFu1s.v1");
    check_field_offset(lv, v2, 8, "aL_Us_BFu1s.v2");
    set_bf_and_test(lv, v3, 10, 0, 1, 1, "aL_Us_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_BFu1s, aL_Us_BFu1s)
//============================================================================



static void Test_aL_Us_BFu31i()
{
  {
    init_simple_test("aL_Us_BFu31i");
    static STRUCT_IF_C aL_Us_BFu31i lv;
    check2(sizeof(lv), 14, "sizeof(aL_Us_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_BFu31i)");
    check_field_offset(lv, v1, 0, "aL_Us_BFu31i.v1");
    check_field_offset(lv, v2, 8, "aL_Us_BFu31i.v2");
    set_bf_and_test(lv, v3, 10, 0, 31, 1, "aL_Us_BFu31i");
    set_bf_and_test(lv, v3, 10, 0, 31, hide_ull(1LL<<30), "aL_Us_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_BFu31i, aL_Us_BFu31i)
//============================================================================



static void Test_aL_Us_BFu31ll()
{
  {
    init_simple_test("aL_Us_BFu31ll");
    static STRUCT_IF_C aL_Us_BFu31ll lv;
    check2(sizeof(lv), 14, "sizeof(aL_Us_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_BFu31ll)");
    check_field_offset(lv, v1, 0, "aL_Us_BFu31ll.v1");
    check_field_offset(lv, v2, 8, "aL_Us_BFu31ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 31, 1, "aL_Us_BFu31ll");
    set_bf_and_test(lv, v3, 10, 0, 31, hide_ull(1LL<<30), "aL_Us_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_BFu31ll, aL_Us_BFu31ll)
//============================================================================



static void Test_aL_Us_BFu32i()
{
  {
    init_simple_test("aL_Us_BFu32i");
    static STRUCT_IF_C aL_Us_BFu32i lv;
    check2(sizeof(lv), 14, "sizeof(aL_Us_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_BFu32i)");
    check_field_offset(lv, v1, 0, "aL_Us_BFu32i.v1");
    check_field_offset(lv, v2, 8, "aL_Us_BFu32i.v2");
    set_bf_and_test(lv, v3, 10, 0, 32, 1, "aL_Us_BFu32i");
    set_bf_and_test(lv, v3, 10, 0, 32, hide_ull(1LL<<31), "aL_Us_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_BFu32i, aL_Us_BFu32i)
//============================================================================



static void Test_aL_Us_BFu32ll()
{
  {
    init_simple_test("aL_Us_BFu32ll");
    static STRUCT_IF_C aL_Us_BFu32ll lv;
    check2(sizeof(lv), 14, "sizeof(aL_Us_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_BFu32ll)");
    check_field_offset(lv, v1, 0, "aL_Us_BFu32ll.v1");
    check_field_offset(lv, v2, 8, "aL_Us_BFu32ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 32, 1, "aL_Us_BFu32ll");
    set_bf_and_test(lv, v3, 10, 0, 32, hide_ull(1LL<<31), "aL_Us_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_BFu32ll, aL_Us_BFu32ll)
//============================================================================



static void Test_aL_Us_BFu33()
{
  {
    init_simple_test("aL_Us_BFu33");
    static STRUCT_IF_C aL_Us_BFu33 lv;
    check2(sizeof(lv), 15, "sizeof(aL_Us_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_BFu33)");
    check_field_offset(lv, v1, 0, "aL_Us_BFu33.v1");
    check_field_offset(lv, v2, 8, "aL_Us_BFu33.v2");
    set_bf_and_test(lv, v3, 10, 0, 33, 1, "aL_Us_BFu33");
    set_bf_and_test(lv, v3, 10, 0, 33, hide_ull(1LL<<32), "aL_Us_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_BFu33, aL_Us_BFu33)
//============================================================================



static void Test_aL_Us_BFu7c()
{
  {
    init_simple_test("aL_Us_BFu7c");
    static STRUCT_IF_C aL_Us_BFu7c lv;
    check2(sizeof(lv), 11, "sizeof(aL_Us_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_BFu7c)");
    check_field_offset(lv, v1, 0, "aL_Us_BFu7c.v1");
    check_field_offset(lv, v2, 8, "aL_Us_BFu7c.v2");
    set_bf_and_test(lv, v3, 10, 0, 7, 1, "aL_Us_BFu7c");
    set_bf_and_test(lv, v3, 10, 0, 7, hide_ull(1LL<<6), "aL_Us_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_BFu7c, aL_Us_BFu7c)
//============================================================================



static void Test_aL_Us_BFu7i()
{
  {
    init_simple_test("aL_Us_BFu7i");
    static STRUCT_IF_C aL_Us_BFu7i lv;
    check2(sizeof(lv), 11, "sizeof(aL_Us_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_BFu7i)");
    check_field_offset(lv, v1, 0, "aL_Us_BFu7i.v1");
    check_field_offset(lv, v2, 8, "aL_Us_BFu7i.v2");
    set_bf_and_test(lv, v3, 10, 0, 7, 1, "aL_Us_BFu7i");
    set_bf_and_test(lv, v3, 10, 0, 7, hide_ull(1LL<<6), "aL_Us_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_BFu7i, aL_Us_BFu7i)
//============================================================================



static void Test_aL_Us_BFu7ll()
{
  {
    init_simple_test("aL_Us_BFu7ll");
    static STRUCT_IF_C aL_Us_BFu7ll lv;
    check2(sizeof(lv), 11, "sizeof(aL_Us_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_BFu7ll)");
    check_field_offset(lv, v1, 0, "aL_Us_BFu7ll.v1");
    check_field_offset(lv, v2, 8, "aL_Us_BFu7ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 7, 1, "aL_Us_BFu7ll");
    set_bf_and_test(lv, v3, 10, 0, 7, hide_ull(1LL<<6), "aL_Us_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_BFu7ll, aL_Us_BFu7ll)
//============================================================================



static void Test_aL_Us_BFu7s()
{
  {
    init_simple_test("aL_Us_BFu7s");
    static STRUCT_IF_C aL_Us_BFu7s lv;
    check2(sizeof(lv), 11, "sizeof(aL_Us_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_BFu7s)");
    check_field_offset(lv, v1, 0, "aL_Us_BFu7s.v1");
    check_field_offset(lv, v2, 8, "aL_Us_BFu7s.v2");
    set_bf_and_test(lv, v3, 10, 0, 7, 1, "aL_Us_BFu7s");
    set_bf_and_test(lv, v3, 10, 0, 7, hide_ull(1LL<<6), "aL_Us_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_BFu7s, aL_Us_BFu7s)
//============================================================================



static void Test_aL_Us_BFu8c()
{
  {
    init_simple_test("aL_Us_BFu8c");
    static STRUCT_IF_C aL_Us_BFu8c lv;
    check2(sizeof(lv), 11, "sizeof(aL_Us_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_BFu8c)");
    check_field_offset(lv, v1, 0, "aL_Us_BFu8c.v1");
    check_field_offset(lv, v2, 8, "aL_Us_BFu8c.v2");
    set_bf_and_test(lv, v3, 10, 0, 8, 1, "aL_Us_BFu8c");
    set_bf_and_test(lv, v3, 10, 0, 8, hide_ull(1LL<<7), "aL_Us_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_BFu8c, aL_Us_BFu8c)
//============================================================================



static void Test_aL_Us_BFu8i()
{
  {
    init_simple_test("aL_Us_BFu8i");
    static STRUCT_IF_C aL_Us_BFu8i lv;
    check2(sizeof(lv), 11, "sizeof(aL_Us_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_BFu8i)");
    check_field_offset(lv, v1, 0, "aL_Us_BFu8i.v1");
    check_field_offset(lv, v2, 8, "aL_Us_BFu8i.v2");
    set_bf_and_test(lv, v3, 10, 0, 8, 1, "aL_Us_BFu8i");
    set_bf_and_test(lv, v3, 10, 0, 8, hide_ull(1LL<<7), "aL_Us_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_BFu8i, aL_Us_BFu8i)
//============================================================================



static void Test_aL_Us_BFu8ll()
{
  {
    init_simple_test("aL_Us_BFu8ll");
    static STRUCT_IF_C aL_Us_BFu8ll lv;
    check2(sizeof(lv), 11, "sizeof(aL_Us_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_BFu8ll)");
    check_field_offset(lv, v1, 0, "aL_Us_BFu8ll.v1");
    check_field_offset(lv, v2, 8, "aL_Us_BFu8ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 8, 1, "aL_Us_BFu8ll");
    set_bf_and_test(lv, v3, 10, 0, 8, hide_ull(1LL<<7), "aL_Us_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_BFu8ll, aL_Us_BFu8ll)
//============================================================================



static void Test_aL_Us_BFu8s()
{
  {
    init_simple_test("aL_Us_BFu8s");
    static STRUCT_IF_C aL_Us_BFu8s lv;
    check2(sizeof(lv), 11, "sizeof(aL_Us_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_BFu8s)");
    check_field_offset(lv, v1, 0, "aL_Us_BFu8s.v1");
    check_field_offset(lv, v2, 8, "aL_Us_BFu8s.v2");
    set_bf_and_test(lv, v3, 10, 0, 8, 1, "aL_Us_BFu8s");
    set_bf_and_test(lv, v3, 10, 0, 8, hide_ull(1LL<<7), "aL_Us_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_BFu8s, aL_Us_BFu8s)
//============================================================================



static void Test_aL_Us_BFu9i()
{
  {
    init_simple_test("aL_Us_BFu9i");
    static STRUCT_IF_C aL_Us_BFu9i lv;
    check2(sizeof(lv), 12, "sizeof(aL_Us_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_BFu9i)");
    check_field_offset(lv, v1, 0, "aL_Us_BFu9i.v1");
    check_field_offset(lv, v2, 8, "aL_Us_BFu9i.v2");
    set_bf_and_test(lv, v3, 10, 0, 9, 1, "aL_Us_BFu9i");
    set_bf_and_test(lv, v3, 10, 0, 9, hide_ull(1LL<<8), "aL_Us_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_BFu9i, aL_Us_BFu9i)
//============================================================================



static void Test_aL_Us_BFu9ll()
{
  {
    init_simple_test("aL_Us_BFu9ll");
    static STRUCT_IF_C aL_Us_BFu9ll lv;
    check2(sizeof(lv), 12, "sizeof(aL_Us_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_BFu9ll)");
    check_field_offset(lv, v1, 0, "aL_Us_BFu9ll.v1");
    check_field_offset(lv, v2, 8, "aL_Us_BFu9ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 9, 1, "aL_Us_BFu9ll");
    set_bf_and_test(lv, v3, 10, 0, 9, hide_ull(1LL<<8), "aL_Us_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_BFu9ll, aL_Us_BFu9ll)
//============================================================================



static void Test_aL_Us_BFu9s()
{
  {
    init_simple_test("aL_Us_BFu9s");
    static STRUCT_IF_C aL_Us_BFu9s lv;
    check2(sizeof(lv), 12, "sizeof(aL_Us_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_BFu9s)");
    check_field_offset(lv, v1, 0, "aL_Us_BFu9s.v1");
    check_field_offset(lv, v2, 8, "aL_Us_BFu9s.v2");
    set_bf_and_test(lv, v3, 10, 0, 9, 1, "aL_Us_BFu9s");
    set_bf_and_test(lv, v3, 10, 0, 9, hide_ull(1LL<<8), "aL_Us_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_BFu9s, aL_Us_BFu9s)
//============================================================================



static void Test_aL_Us_C()
{
  {
    init_simple_test("aL_Us_C");
    STRUCT_IF_C aL_Us_C lv;
    check2(sizeof(lv), 11, "sizeof(aL_Us_C)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_C)");
    check_field_offset(lv, v1, 0, "aL_Us_C.v1");
    check_field_offset(lv, v2, 8, "aL_Us_C.v2");
    check_field_offset(lv, v3, 10, "aL_Us_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_C, aL_Us_C)
//============================================================================



static void Test_aL_Us_D()
{
  {
    init_simple_test("aL_Us_D");
    STRUCT_IF_C aL_Us_D lv;
    check2(sizeof(lv), 18, "sizeof(aL_Us_D)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_D)");
    check_field_offset(lv, v1, 0, "aL_Us_D.v1");
    check_field_offset(lv, v2, 8, "aL_Us_D.v2");
    check_field_offset(lv, v3, 10, "aL_Us_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_D, aL_Us_D)
//============================================================================



static void Test_aL_Us_F()
{
  {
    init_simple_test("aL_Us_F");
    STRUCT_IF_C aL_Us_F lv;
    check2(sizeof(lv), 14, "sizeof(aL_Us_F)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_F)");
    check_field_offset(lv, v1, 0, "aL_Us_F.v1");
    check_field_offset(lv, v2, 8, "aL_Us_F.v2");
    check_field_offset(lv, v3, 10, "aL_Us_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_F, aL_Us_F)
//============================================================================



static void Test_aL_Us_I()
{
  {
    init_simple_test("aL_Us_I");
    STRUCT_IF_C aL_Us_I lv;
    check2(sizeof(lv), 14, "sizeof(aL_Us_I)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_I)");
    check_field_offset(lv, v1, 0, "aL_Us_I.v1");
    check_field_offset(lv, v2, 8, "aL_Us_I.v2");
    check_field_offset(lv, v3, 10, "aL_Us_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_I, aL_Us_I)
//============================================================================



static void Test_aL_Us_Ip()
{
  {
    init_simple_test("aL_Us_Ip");
    STRUCT_IF_C aL_Us_Ip lv;
    check2(sizeof(lv), ABISELECT(18,14), "sizeof(aL_Us_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_Ip)");
    check_field_offset(lv, v1, 0, "aL_Us_Ip.v1");
    check_field_offset(lv, v2, 8, "aL_Us_Ip.v2");
    check_field_offset(lv, v3, 10, "aL_Us_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_Ip, aL_Us_Ip)
//============================================================================



static void Test_aL_Us_L()
{
  {
    init_simple_test("aL_Us_L");
    STRUCT_IF_C aL_Us_L lv;
    check2(sizeof(lv), 18, "sizeof(aL_Us_L)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_L)");
    check_field_offset(lv, v1, 0, "aL_Us_L.v1");
    check_field_offset(lv, v2, 8, "aL_Us_L.v2");
    check_field_offset(lv, v3, 10, "aL_Us_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_L, aL_Us_L)
//============================================================================



static void Test_aL_Us_S()
{
  {
    init_simple_test("aL_Us_S");
    STRUCT_IF_C aL_Us_S lv;
    check2(sizeof(lv), 12, "sizeof(aL_Us_S)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_S)");
    check_field_offset(lv, v1, 0, "aL_Us_S.v1");
    check_field_offset(lv, v2, 8, "aL_Us_S.v2");
    check_field_offset(lv, v3, 10, "aL_Us_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_S, aL_Us_S)
//============================================================================



static void Test_aL_Us_Uc()
{
  {
    init_simple_test("aL_Us_Uc");
    STRUCT_IF_C aL_Us_Uc lv;
    check2(sizeof(lv), 11, "sizeof(aL_Us_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_Uc)");
    check_field_offset(lv, v1, 0, "aL_Us_Uc.v1");
    check_field_offset(lv, v2, 8, "aL_Us_Uc.v2");
    check_field_offset(lv, v3, 10, "aL_Us_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_Uc, aL_Us_Uc)
//============================================================================



static void Test_aL_Us_Ui()
{
  {
    init_simple_test("aL_Us_Ui");
    STRUCT_IF_C aL_Us_Ui lv;
    check2(sizeof(lv), 14, "sizeof(aL_Us_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_Ui)");
    check_field_offset(lv, v1, 0, "aL_Us_Ui.v1");
    check_field_offset(lv, v2, 8, "aL_Us_Ui.v2");
    check_field_offset(lv, v3, 10, "aL_Us_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_Ui, aL_Us_Ui)
//============================================================================



static void Test_aL_Us_Ul()
{
  {
    init_simple_test("aL_Us_Ul");
    STRUCT_IF_C aL_Us_Ul lv;
    check2(sizeof(lv), 18, "sizeof(aL_Us_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_Ul)");
    check_field_offset(lv, v1, 0, "aL_Us_Ul.v1");
    check_field_offset(lv, v2, 8, "aL_Us_Ul.v2");
    check_field_offset(lv, v3, 10, "aL_Us_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_Ul, aL_Us_Ul)
//============================================================================



static void Test_aL_Us_Us()
{
  {
    init_simple_test("aL_Us_Us");
    STRUCT_IF_C aL_Us_Us lv;
    check2(sizeof(lv), 12, "sizeof(aL_Us_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_Us)");
    check_field_offset(lv, v1, 0, "aL_Us_Us.v1");
    check_field_offset(lv, v2, 8, "aL_Us_Us.v2");
    check_field_offset(lv, v3, 10, "aL_Us_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_Us, aL_Us_Us)
//============================================================================



static void Test_aL_Us_Vp()
{
  {
    init_simple_test("aL_Us_Vp");
    STRUCT_IF_C aL_Us_Vp lv;
    check2(sizeof(lv), ABISELECT(18,14), "sizeof(aL_Us_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Us_Vp)");
    check_field_offset(lv, v1, 0, "aL_Us_Vp.v1");
    check_field_offset(lv, v2, 8, "aL_Us_Vp.v2");
    check_field_offset(lv, v3, 10, "aL_Us_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Us_Vp, aL_Us_Vp)
//============================================================================



static void Test_aL_Vp()
{
  {
    init_simple_test("aL_Vp");
    STRUCT_IF_C aL_Vp lv;
    check2(sizeof(lv), ABISELECT(16,12), "sizeof(aL_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp)");
    check_field_offset(lv, v1, 0, "aL_Vp.v1");
    check_field_offset(lv, v2, 8, "aL_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp, aL_Vp)
//============================================================================



static void Test_aL_Vp_BFu15i()
{
  {
    init_simple_test("aL_Vp_BFu15i");
    static STRUCT_IF_C aL_Vp_BFu15i lv;
    check2(sizeof(lv), ABISELECT(18,14), "sizeof(aL_Vp_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_BFu15i)");
    check_field_offset(lv, v1, 0, "aL_Vp_BFu15i.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_BFu15i.v2");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 15, 1, "aL_Vp_BFu15i");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 15, hide_ull(1LL<<14), "aL_Vp_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_BFu15i, aL_Vp_BFu15i)
//============================================================================



static void Test_aL_Vp_BFu15ll()
{
  {
    init_simple_test("aL_Vp_BFu15ll");
    static STRUCT_IF_C aL_Vp_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(18,14), "sizeof(aL_Vp_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_BFu15ll)");
    check_field_offset(lv, v1, 0, "aL_Vp_BFu15ll.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_BFu15ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 15, 1, "aL_Vp_BFu15ll");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 15, hide_ull(1LL<<14), "aL_Vp_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_BFu15ll, aL_Vp_BFu15ll)
//============================================================================



static void Test_aL_Vp_BFu15s()
{
  {
    init_simple_test("aL_Vp_BFu15s");
    static STRUCT_IF_C aL_Vp_BFu15s lv;
    check2(sizeof(lv), ABISELECT(18,14), "sizeof(aL_Vp_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_BFu15s)");
    check_field_offset(lv, v1, 0, "aL_Vp_BFu15s.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_BFu15s.v2");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 15, 1, "aL_Vp_BFu15s");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 15, hide_ull(1LL<<14), "aL_Vp_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_BFu15s, aL_Vp_BFu15s)
//============================================================================



static void Test_aL_Vp_BFu16i()
{
  {
    init_simple_test("aL_Vp_BFu16i");
    static STRUCT_IF_C aL_Vp_BFu16i lv;
    check2(sizeof(lv), ABISELECT(18,14), "sizeof(aL_Vp_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_BFu16i)");
    check_field_offset(lv, v1, 0, "aL_Vp_BFu16i.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_BFu16i.v2");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 16, 1, "aL_Vp_BFu16i");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 16, hide_ull(1LL<<15), "aL_Vp_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_BFu16i, aL_Vp_BFu16i)
//============================================================================



static void Test_aL_Vp_BFu16ll()
{
  {
    init_simple_test("aL_Vp_BFu16ll");
    static STRUCT_IF_C aL_Vp_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(18,14), "sizeof(aL_Vp_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_BFu16ll)");
    check_field_offset(lv, v1, 0, "aL_Vp_BFu16ll.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_BFu16ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 16, 1, "aL_Vp_BFu16ll");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 16, hide_ull(1LL<<15), "aL_Vp_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_BFu16ll, aL_Vp_BFu16ll)
//============================================================================



static void Test_aL_Vp_BFu16s()
{
  {
    init_simple_test("aL_Vp_BFu16s");
    static STRUCT_IF_C aL_Vp_BFu16s lv;
    check2(sizeof(lv), ABISELECT(18,14), "sizeof(aL_Vp_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_BFu16s)");
    check_field_offset(lv, v1, 0, "aL_Vp_BFu16s.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_BFu16s.v2");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 16, 1, "aL_Vp_BFu16s");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 16, hide_ull(1LL<<15), "aL_Vp_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_BFu16s, aL_Vp_BFu16s)
//============================================================================



static void Test_aL_Vp_BFu17i()
{
  {
    init_simple_test("aL_Vp_BFu17i");
    static STRUCT_IF_C aL_Vp_BFu17i lv;
    check2(sizeof(lv), ABISELECT(19,15), "sizeof(aL_Vp_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_BFu17i)");
    check_field_offset(lv, v1, 0, "aL_Vp_BFu17i.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_BFu17i.v2");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 17, 1, "aL_Vp_BFu17i");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 17, hide_ull(1LL<<16), "aL_Vp_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_BFu17i, aL_Vp_BFu17i)
//============================================================================



static void Test_aL_Vp_BFu17ll()
{
  {
    init_simple_test("aL_Vp_BFu17ll");
    static STRUCT_IF_C aL_Vp_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(19,15), "sizeof(aL_Vp_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_BFu17ll)");
    check_field_offset(lv, v1, 0, "aL_Vp_BFu17ll.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_BFu17ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 17, 1, "aL_Vp_BFu17ll");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 17, hide_ull(1LL<<16), "aL_Vp_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_BFu17ll, aL_Vp_BFu17ll)
//============================================================================



static void Test_aL_Vp_BFu1c()
{
  {
    init_simple_test("aL_Vp_BFu1c");
    static STRUCT_IF_C aL_Vp_BFu1c lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aL_Vp_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_BFu1c)");
    check_field_offset(lv, v1, 0, "aL_Vp_BFu1c.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_BFu1c.v2");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 1, 1, "aL_Vp_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_BFu1c, aL_Vp_BFu1c)
//============================================================================



static void Test_aL_Vp_BFu1i()
{
  {
    init_simple_test("aL_Vp_BFu1i");
    static STRUCT_IF_C aL_Vp_BFu1i lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aL_Vp_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_BFu1i)");
    check_field_offset(lv, v1, 0, "aL_Vp_BFu1i.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_BFu1i.v2");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 1, 1, "aL_Vp_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_BFu1i, aL_Vp_BFu1i)
//============================================================================



static void Test_aL_Vp_BFu1ll()
{
  {
    init_simple_test("aL_Vp_BFu1ll");
    static STRUCT_IF_C aL_Vp_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aL_Vp_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_BFu1ll)");
    check_field_offset(lv, v1, 0, "aL_Vp_BFu1ll.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_BFu1ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 1, 1, "aL_Vp_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_BFu1ll, aL_Vp_BFu1ll)
//============================================================================



static void Test_aL_Vp_BFu1s()
{
  {
    init_simple_test("aL_Vp_BFu1s");
    static STRUCT_IF_C aL_Vp_BFu1s lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aL_Vp_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_BFu1s)");
    check_field_offset(lv, v1, 0, "aL_Vp_BFu1s.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_BFu1s.v2");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 1, 1, "aL_Vp_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_BFu1s, aL_Vp_BFu1s)
//============================================================================



static void Test_aL_Vp_BFu31i()
{
  {
    init_simple_test("aL_Vp_BFu31i");
    static STRUCT_IF_C aL_Vp_BFu31i lv;
    check2(sizeof(lv), ABISELECT(20,16), "sizeof(aL_Vp_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_BFu31i)");
    check_field_offset(lv, v1, 0, "aL_Vp_BFu31i.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_BFu31i.v2");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 31, 1, "aL_Vp_BFu31i");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 31, hide_ull(1LL<<30), "aL_Vp_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_BFu31i, aL_Vp_BFu31i)
//============================================================================



static void Test_aL_Vp_BFu31ll()
{
  {
    init_simple_test("aL_Vp_BFu31ll");
    static STRUCT_IF_C aL_Vp_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(20,16), "sizeof(aL_Vp_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_BFu31ll)");
    check_field_offset(lv, v1, 0, "aL_Vp_BFu31ll.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_BFu31ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 31, 1, "aL_Vp_BFu31ll");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 31, hide_ull(1LL<<30), "aL_Vp_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_BFu31ll, aL_Vp_BFu31ll)
//============================================================================



static void Test_aL_Vp_BFu32i()
{
  {
    init_simple_test("aL_Vp_BFu32i");
    static STRUCT_IF_C aL_Vp_BFu32i lv;
    check2(sizeof(lv), ABISELECT(20,16), "sizeof(aL_Vp_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_BFu32i)");
    check_field_offset(lv, v1, 0, "aL_Vp_BFu32i.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_BFu32i.v2");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 32, 1, "aL_Vp_BFu32i");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 32, hide_ull(1LL<<31), "aL_Vp_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_BFu32i, aL_Vp_BFu32i)
//============================================================================



static void Test_aL_Vp_BFu32ll()
{
  {
    init_simple_test("aL_Vp_BFu32ll");
    static STRUCT_IF_C aL_Vp_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(20,16), "sizeof(aL_Vp_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_BFu32ll)");
    check_field_offset(lv, v1, 0, "aL_Vp_BFu32ll.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_BFu32ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 32, 1, "aL_Vp_BFu32ll");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 32, hide_ull(1LL<<31), "aL_Vp_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_BFu32ll, aL_Vp_BFu32ll)
//============================================================================



static void Test_aL_Vp_BFu33()
{
  {
    init_simple_test("aL_Vp_BFu33");
    static STRUCT_IF_C aL_Vp_BFu33 lv;
    check2(sizeof(lv), ABISELECT(21,17), "sizeof(aL_Vp_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_BFu33)");
    check_field_offset(lv, v1, 0, "aL_Vp_BFu33.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_BFu33.v2");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 33, 1, "aL_Vp_BFu33");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 33, hide_ull(1LL<<32), "aL_Vp_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_BFu33, aL_Vp_BFu33)
//============================================================================



static void Test_aL_Vp_BFu7c()
{
  {
    init_simple_test("aL_Vp_BFu7c");
    static STRUCT_IF_C aL_Vp_BFu7c lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aL_Vp_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_BFu7c)");
    check_field_offset(lv, v1, 0, "aL_Vp_BFu7c.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_BFu7c.v2");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 7, 1, "aL_Vp_BFu7c");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 7, hide_ull(1LL<<6), "aL_Vp_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_BFu7c, aL_Vp_BFu7c)
//============================================================================



static void Test_aL_Vp_BFu7i()
{
  {
    init_simple_test("aL_Vp_BFu7i");
    static STRUCT_IF_C aL_Vp_BFu7i lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aL_Vp_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_BFu7i)");
    check_field_offset(lv, v1, 0, "aL_Vp_BFu7i.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_BFu7i.v2");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 7, 1, "aL_Vp_BFu7i");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 7, hide_ull(1LL<<6), "aL_Vp_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_BFu7i, aL_Vp_BFu7i)
//============================================================================



static void Test_aL_Vp_BFu7ll()
{
  {
    init_simple_test("aL_Vp_BFu7ll");
    static STRUCT_IF_C aL_Vp_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aL_Vp_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_BFu7ll)");
    check_field_offset(lv, v1, 0, "aL_Vp_BFu7ll.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_BFu7ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 7, 1, "aL_Vp_BFu7ll");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 7, hide_ull(1LL<<6), "aL_Vp_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_BFu7ll, aL_Vp_BFu7ll)
//============================================================================



static void Test_aL_Vp_BFu7s()
{
  {
    init_simple_test("aL_Vp_BFu7s");
    static STRUCT_IF_C aL_Vp_BFu7s lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aL_Vp_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_BFu7s)");
    check_field_offset(lv, v1, 0, "aL_Vp_BFu7s.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_BFu7s.v2");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 7, 1, "aL_Vp_BFu7s");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 7, hide_ull(1LL<<6), "aL_Vp_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_BFu7s, aL_Vp_BFu7s)
//============================================================================



static void Test_aL_Vp_BFu8c()
{
  {
    init_simple_test("aL_Vp_BFu8c");
    static STRUCT_IF_C aL_Vp_BFu8c lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aL_Vp_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_BFu8c)");
    check_field_offset(lv, v1, 0, "aL_Vp_BFu8c.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_BFu8c.v2");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 8, 1, "aL_Vp_BFu8c");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 8, hide_ull(1LL<<7), "aL_Vp_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_BFu8c, aL_Vp_BFu8c)
//============================================================================



static void Test_aL_Vp_BFu8i()
{
  {
    init_simple_test("aL_Vp_BFu8i");
    static STRUCT_IF_C aL_Vp_BFu8i lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aL_Vp_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_BFu8i)");
    check_field_offset(lv, v1, 0, "aL_Vp_BFu8i.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_BFu8i.v2");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 8, 1, "aL_Vp_BFu8i");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 8, hide_ull(1LL<<7), "aL_Vp_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_BFu8i, aL_Vp_BFu8i)
//============================================================================



static void Test_aL_Vp_BFu8ll()
{
  {
    init_simple_test("aL_Vp_BFu8ll");
    static STRUCT_IF_C aL_Vp_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aL_Vp_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_BFu8ll)");
    check_field_offset(lv, v1, 0, "aL_Vp_BFu8ll.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_BFu8ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 8, 1, "aL_Vp_BFu8ll");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 8, hide_ull(1LL<<7), "aL_Vp_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_BFu8ll, aL_Vp_BFu8ll)
//============================================================================



static void Test_aL_Vp_BFu8s()
{
  {
    init_simple_test("aL_Vp_BFu8s");
    static STRUCT_IF_C aL_Vp_BFu8s lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aL_Vp_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_BFu8s)");
    check_field_offset(lv, v1, 0, "aL_Vp_BFu8s.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_BFu8s.v2");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 8, 1, "aL_Vp_BFu8s");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 8, hide_ull(1LL<<7), "aL_Vp_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_BFu8s, aL_Vp_BFu8s)
//============================================================================



static void Test_aL_Vp_BFu9i()
{
  {
    init_simple_test("aL_Vp_BFu9i");
    static STRUCT_IF_C aL_Vp_BFu9i lv;
    check2(sizeof(lv), ABISELECT(18,14), "sizeof(aL_Vp_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_BFu9i)");
    check_field_offset(lv, v1, 0, "aL_Vp_BFu9i.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_BFu9i.v2");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 9, 1, "aL_Vp_BFu9i");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 9, hide_ull(1LL<<8), "aL_Vp_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_BFu9i, aL_Vp_BFu9i)
//============================================================================



static void Test_aL_Vp_BFu9ll()
{
  {
    init_simple_test("aL_Vp_BFu9ll");
    static STRUCT_IF_C aL_Vp_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(18,14), "sizeof(aL_Vp_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_BFu9ll)");
    check_field_offset(lv, v1, 0, "aL_Vp_BFu9ll.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_BFu9ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 9, 1, "aL_Vp_BFu9ll");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 9, hide_ull(1LL<<8), "aL_Vp_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_BFu9ll, aL_Vp_BFu9ll)
//============================================================================



static void Test_aL_Vp_BFu9s()
{
  {
    init_simple_test("aL_Vp_BFu9s");
    static STRUCT_IF_C aL_Vp_BFu9s lv;
    check2(sizeof(lv), ABISELECT(18,14), "sizeof(aL_Vp_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_BFu9s)");
    check_field_offset(lv, v1, 0, "aL_Vp_BFu9s.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_BFu9s.v2");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 9, 1, "aL_Vp_BFu9s");
    set_bf_and_test(lv, v3, ABISELECT(16,12), 0, 9, hide_ull(1LL<<8), "aL_Vp_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_BFu9s, aL_Vp_BFu9s)
//============================================================================



static void Test_aL_Vp_C()
{
  {
    init_simple_test("aL_Vp_C");
    STRUCT_IF_C aL_Vp_C lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aL_Vp_C)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_C)");
    check_field_offset(lv, v1, 0, "aL_Vp_C.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_C.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "aL_Vp_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_C, aL_Vp_C)
//============================================================================



static void Test_aL_Vp_D()
{
  {
    init_simple_test("aL_Vp_D");
    STRUCT_IF_C aL_Vp_D lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(aL_Vp_D)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_D)");
    check_field_offset(lv, v1, 0, "aL_Vp_D.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_D.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "aL_Vp_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_D, aL_Vp_D)
//============================================================================



static void Test_aL_Vp_F()
{
  {
    init_simple_test("aL_Vp_F");
    STRUCT_IF_C aL_Vp_F lv;
    check2(sizeof(lv), ABISELECT(20,16), "sizeof(aL_Vp_F)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_F)");
    check_field_offset(lv, v1, 0, "aL_Vp_F.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_F.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "aL_Vp_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_F, aL_Vp_F)
//============================================================================



static void Test_aL_Vp_I()
{
  {
    init_simple_test("aL_Vp_I");
    STRUCT_IF_C aL_Vp_I lv;
    check2(sizeof(lv), ABISELECT(20,16), "sizeof(aL_Vp_I)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_I)");
    check_field_offset(lv, v1, 0, "aL_Vp_I.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_I.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "aL_Vp_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_I, aL_Vp_I)
//============================================================================



static void Test_aL_Vp_Ip()
{
  {
    init_simple_test("aL_Vp_Ip");
    STRUCT_IF_C aL_Vp_Ip lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(aL_Vp_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_Ip)");
    check_field_offset(lv, v1, 0, "aL_Vp_Ip.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_Ip.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "aL_Vp_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_Ip, aL_Vp_Ip)
//============================================================================



static void Test_aL_Vp_L()
{
  {
    init_simple_test("aL_Vp_L");
    STRUCT_IF_C aL_Vp_L lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(aL_Vp_L)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_L)");
    check_field_offset(lv, v1, 0, "aL_Vp_L.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_L.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "aL_Vp_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_L, aL_Vp_L)
//============================================================================



static void Test_aL_Vp_S()
{
  {
    init_simple_test("aL_Vp_S");
    STRUCT_IF_C aL_Vp_S lv;
    check2(sizeof(lv), ABISELECT(18,14), "sizeof(aL_Vp_S)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_S)");
    check_field_offset(lv, v1, 0, "aL_Vp_S.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_S.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "aL_Vp_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_S, aL_Vp_S)
//============================================================================



static void Test_aL_Vp_Uc()
{
  {
    init_simple_test("aL_Vp_Uc");
    STRUCT_IF_C aL_Vp_Uc lv;
    check2(sizeof(lv), ABISELECT(17,13), "sizeof(aL_Vp_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_Uc)");
    check_field_offset(lv, v1, 0, "aL_Vp_Uc.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_Uc.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "aL_Vp_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_Uc, aL_Vp_Uc)
//============================================================================



static void Test_aL_Vp_Ui()
{
  {
    init_simple_test("aL_Vp_Ui");
    STRUCT_IF_C aL_Vp_Ui lv;
    check2(sizeof(lv), ABISELECT(20,16), "sizeof(aL_Vp_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_Ui)");
    check_field_offset(lv, v1, 0, "aL_Vp_Ui.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_Ui.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "aL_Vp_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_Ui, aL_Vp_Ui)
//============================================================================



static void Test_aL_Vp_Ul()
{
  {
    init_simple_test("aL_Vp_Ul");
    STRUCT_IF_C aL_Vp_Ul lv;
    check2(sizeof(lv), ABISELECT(24,20), "sizeof(aL_Vp_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_Ul)");
    check_field_offset(lv, v1, 0, "aL_Vp_Ul.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_Ul.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "aL_Vp_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_Ul, aL_Vp_Ul)
//============================================================================



static void Test_aL_Vp_Us()
{
  {
    init_simple_test("aL_Vp_Us");
    STRUCT_IF_C aL_Vp_Us lv;
    check2(sizeof(lv), ABISELECT(18,14), "sizeof(aL_Vp_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_Us)");
    check_field_offset(lv, v1, 0, "aL_Vp_Us.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_Us.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "aL_Vp_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_Us, aL_Vp_Us)
//============================================================================



static void Test_aL_Vp_Vp()
{
  {
    init_simple_test("aL_Vp_Vp");
    STRUCT_IF_C aL_Vp_Vp lv;
    check2(sizeof(lv), ABISELECT(24,16), "sizeof(aL_Vp_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aL_Vp_Vp)");
    check_field_offset(lv, v1, 0, "aL_Vp_Vp.v1");
    check_field_offset(lv, v2, 8, "aL_Vp_Vp.v2");
    check_field_offset(lv, v3, ABISELECT(16,12), "aL_Vp_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aL_Vp_Vp, aL_Vp_Vp)
//============================================================================



static void Test_aS()
{
  {
    init_simple_test("aS");
    STRUCT_IF_C aS lv;
    check2(sizeof(lv), 2, "sizeof(aS)");
    check2(__alignof__(lv), 1, "__alignof__(aS)");
    check_field_offset(lv, v1, 0, "aS.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_aS, aS)
//============================================================================



static void Test_aS_BFu15i()
{
  {
    init_simple_test("aS_BFu15i");
    static STRUCT_IF_C aS_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_BFu15i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i, aS_BFu15i)
//============================================================================



static void Test_aS_BFu15i_BFu15i()
{
  {
    init_simple_test("aS_BFu15i_BFu15i");
    static STRUCT_IF_C aS_BFu15i_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_BFu15i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 7, 15, 1, "aS_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 3, 7, 15, hide_ull(1LL<<14), "aS_BFu15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_BFu15i, aS_BFu15i_BFu15i)
//============================================================================



static void Test_aS_BFu15i_BFu15ll()
{
  {
    init_simple_test("aS_BFu15i_BFu15ll");
    static STRUCT_IF_C aS_BFu15i_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 7, 15, 1, "aS_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 7, 15, hide_ull(1LL<<14), "aS_BFu15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_BFu15ll, aS_BFu15i_BFu15ll)
//============================================================================



static void Test_aS_BFu15i_BFu15s()
{
  {
    init_simple_test("aS_BFu15i_BFu15s");
    static STRUCT_IF_C aS_BFu15i_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_BFu15s.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 7, 15, 1, "aS_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 3, 7, 15, hide_ull(1LL<<14), "aS_BFu15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_BFu15s, aS_BFu15i_BFu15s)
//============================================================================



static void Test_aS_BFu15i_BFu16i()
{
  {
    init_simple_test("aS_BFu15i_BFu16i");
    static STRUCT_IF_C aS_BFu15i_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu15i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_BFu16i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_BFu16i");
    set_bf_and_test(lv, v3, 3, 7, 16, 1, "aS_BFu15i_BFu16i");
    set_bf_and_test(lv, v3, 3, 7, 16, hide_ull(1LL<<15), "aS_BFu15i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_BFu16i, aS_BFu15i_BFu16i)
//============================================================================



static void Test_aS_BFu15i_BFu16ll()
{
  {
    init_simple_test("aS_BFu15i_BFu16ll");
    static STRUCT_IF_C aS_BFu15i_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu15i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_BFu16ll");
    set_bf_and_test(lv, v3, 3, 7, 16, 1, "aS_BFu15i_BFu16ll");
    set_bf_and_test(lv, v3, 3, 7, 16, hide_ull(1LL<<15), "aS_BFu15i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_BFu16ll, aS_BFu15i_BFu16ll)
//============================================================================



static void Test_aS_BFu15i_BFu16s()
{
  {
    init_simple_test("aS_BFu15i_BFu16s");
    static STRUCT_IF_C aS_BFu15i_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu15i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_BFu16s.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_BFu16s");
    set_bf_and_test(lv, v3, 3, 7, 16, 1, "aS_BFu15i_BFu16s");
    set_bf_and_test(lv, v3, 3, 7, 16, hide_ull(1LL<<15), "aS_BFu15i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_BFu16s, aS_BFu15i_BFu16s)
//============================================================================



static void Test_aS_BFu15i_BFu17i()
{
  {
    init_simple_test("aS_BFu15i_BFu17i");
    static STRUCT_IF_C aS_BFu15i_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu15i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_BFu17i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_BFu17i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_BFu17i");
    set_bf_and_test(lv, v3, 3, 7, 17, 1, "aS_BFu15i_BFu17i");
    set_bf_and_test(lv, v3, 3, 7, 17, hide_ull(1LL<<16), "aS_BFu15i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_BFu17i, aS_BFu15i_BFu17i)
//============================================================================



static void Test_aS_BFu15i_BFu17ll()
{
  {
    init_simple_test("aS_BFu15i_BFu17ll");
    static STRUCT_IF_C aS_BFu15i_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu15i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_BFu17ll");
    set_bf_and_test(lv, v3, 3, 7, 17, 1, "aS_BFu15i_BFu17ll");
    set_bf_and_test(lv, v3, 3, 7, 17, hide_ull(1LL<<16), "aS_BFu15i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_BFu17ll, aS_BFu15i_BFu17ll)
//============================================================================



static void Test_aS_BFu15i_BFu1c()
{
  {
    init_simple_test("aS_BFu15i_BFu1c");
    static STRUCT_IF_C aS_BFu15i_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu15i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_BFu1c.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_BFu1c");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_BFu1c");
    set_bf_and_test(lv, v3, 3, 7, 1, 1, "aS_BFu15i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_BFu1c, aS_BFu15i_BFu1c)
//============================================================================



static void Test_aS_BFu15i_BFu1i()
{
  {
    init_simple_test("aS_BFu15i_BFu1i");
    static STRUCT_IF_C aS_BFu15i_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu15i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_BFu1i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_BFu1i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_BFu1i");
    set_bf_and_test(lv, v3, 3, 7, 1, 1, "aS_BFu15i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_BFu1i, aS_BFu15i_BFu1i)
//============================================================================



static void Test_aS_BFu15i_BFu1ll()
{
  {
    init_simple_test("aS_BFu15i_BFu1ll");
    static STRUCT_IF_C aS_BFu15i_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu15i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_BFu1ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_BFu1ll");
    set_bf_and_test(lv, v3, 3, 7, 1, 1, "aS_BFu15i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_BFu1ll, aS_BFu15i_BFu1ll)
//============================================================================



static void Test_aS_BFu15i_BFu1s()
{
  {
    init_simple_test("aS_BFu15i_BFu1s");
    static STRUCT_IF_C aS_BFu15i_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu15i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_BFu1s.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_BFu1s");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_BFu1s");
    set_bf_and_test(lv, v3, 3, 7, 1, 1, "aS_BFu15i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_BFu1s, aS_BFu15i_BFu1s)
//============================================================================



static void Test_aS_BFu15i_BFu31i()
{
  {
    init_simple_test("aS_BFu15i_BFu31i");
    static STRUCT_IF_C aS_BFu15i_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu15i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_BFu31i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_BFu31i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_BFu31i");
    set_bf_and_test(lv, v3, 3, 7, 31, 1, "aS_BFu15i_BFu31i");
    set_bf_and_test(lv, v3, 3, 7, 31, hide_ull(1LL<<30), "aS_BFu15i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_BFu31i, aS_BFu15i_BFu31i)
//============================================================================



static void Test_aS_BFu15i_BFu31ll()
{
  {
    init_simple_test("aS_BFu15i_BFu31ll");
    static STRUCT_IF_C aS_BFu15i_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu15i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_BFu31ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_BFu31ll");
    set_bf_and_test(lv, v3, 3, 7, 31, 1, "aS_BFu15i_BFu31ll");
    set_bf_and_test(lv, v3, 3, 7, 31, hide_ull(1LL<<30), "aS_BFu15i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_BFu31ll, aS_BFu15i_BFu31ll)
//============================================================================



static void Test_aS_BFu15i_BFu32i()
{
  {
    init_simple_test("aS_BFu15i_BFu32i");
    static STRUCT_IF_C aS_BFu15i_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu15i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_BFu32i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_BFu32i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_BFu32i");
    set_bf_and_test(lv, v3, 3, 7, 32, 1, "aS_BFu15i_BFu32i");
    set_bf_and_test(lv, v3, 3, 7, 32, hide_ull(1LL<<31), "aS_BFu15i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_BFu32i, aS_BFu15i_BFu32i)
//============================================================================



static void Test_aS_BFu15i_BFu32ll()
{
  {
    init_simple_test("aS_BFu15i_BFu32ll");
    static STRUCT_IF_C aS_BFu15i_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu15i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_BFu32ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_BFu32ll");
    set_bf_and_test(lv, v3, 3, 7, 32, 1, "aS_BFu15i_BFu32ll");
    set_bf_and_test(lv, v3, 3, 7, 32, hide_ull(1LL<<31), "aS_BFu15i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_BFu32ll, aS_BFu15i_BFu32ll)
//============================================================================



static void Test_aS_BFu15i_BFu33()
{
  {
    init_simple_test("aS_BFu15i_BFu33");
    static STRUCT_IF_C aS_BFu15i_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu15i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_BFu33)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_BFu33.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_BFu33");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_BFu33");
    set_bf_and_test(lv, v3, 3, 7, 33, 1, "aS_BFu15i_BFu33");
    set_bf_and_test(lv, v3, 3, 7, 33, hide_ull(1LL<<32), "aS_BFu15i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_BFu33, aS_BFu15i_BFu33)
//============================================================================



static void Test_aS_BFu15i_BFu7c()
{
  {
    init_simple_test("aS_BFu15i_BFu7c");
    static STRUCT_IF_C aS_BFu15i_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_BFu7c.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_BFu7c");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_BFu7c");
    set_bf_and_test(lv, v3, 3, 7, 7, 1, "aS_BFu15i_BFu7c");
    set_bf_and_test(lv, v3, 3, 7, 7, hide_ull(1LL<<6), "aS_BFu15i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_BFu7c, aS_BFu15i_BFu7c)
//============================================================================



static void Test_aS_BFu15i_BFu7i()
{
  {
    init_simple_test("aS_BFu15i_BFu7i");
    static STRUCT_IF_C aS_BFu15i_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_BFu7i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_BFu7i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_BFu7i");
    set_bf_and_test(lv, v3, 3, 7, 7, 1, "aS_BFu15i_BFu7i");
    set_bf_and_test(lv, v3, 3, 7, 7, hide_ull(1LL<<6), "aS_BFu15i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_BFu7i, aS_BFu15i_BFu7i)
//============================================================================



static void Test_aS_BFu15i_BFu7ll()
{
  {
    init_simple_test("aS_BFu15i_BFu7ll");
    static STRUCT_IF_C aS_BFu15i_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_BFu7ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_BFu7ll");
    set_bf_and_test(lv, v3, 3, 7, 7, 1, "aS_BFu15i_BFu7ll");
    set_bf_and_test(lv, v3, 3, 7, 7, hide_ull(1LL<<6), "aS_BFu15i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_BFu7ll, aS_BFu15i_BFu7ll)
//============================================================================



static void Test_aS_BFu15i_BFu7s()
{
  {
    init_simple_test("aS_BFu15i_BFu7s");
    static STRUCT_IF_C aS_BFu15i_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_BFu7s.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_BFu7s");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_BFu7s");
    set_bf_and_test(lv, v3, 3, 7, 7, 1, "aS_BFu15i_BFu7s");
    set_bf_and_test(lv, v3, 3, 7, 7, hide_ull(1LL<<6), "aS_BFu15i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_BFu7s, aS_BFu15i_BFu7s)
//============================================================================



static void Test_aS_BFu15i_BFu8c()
{
  {
    init_simple_test("aS_BFu15i_BFu8c");
    static STRUCT_IF_C aS_BFu15i_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_BFu8c.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_BFu8c");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_BFu8c");
    set_bf_and_test(lv, v3, 3, 7, 8, 1, "aS_BFu15i_BFu8c");
    set_bf_and_test(lv, v3, 3, 7, 8, hide_ull(1LL<<7), "aS_BFu15i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_BFu8c, aS_BFu15i_BFu8c)
//============================================================================



static void Test_aS_BFu15i_BFu8i()
{
  {
    init_simple_test("aS_BFu15i_BFu8i");
    static STRUCT_IF_C aS_BFu15i_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_BFu8i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_BFu8i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_BFu8i");
    set_bf_and_test(lv, v3, 3, 7, 8, 1, "aS_BFu15i_BFu8i");
    set_bf_and_test(lv, v3, 3, 7, 8, hide_ull(1LL<<7), "aS_BFu15i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_BFu8i, aS_BFu15i_BFu8i)
//============================================================================



static void Test_aS_BFu15i_BFu8ll()
{
  {
    init_simple_test("aS_BFu15i_BFu8ll");
    static STRUCT_IF_C aS_BFu15i_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_BFu8ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_BFu8ll");
    set_bf_and_test(lv, v3, 3, 7, 8, 1, "aS_BFu15i_BFu8ll");
    set_bf_and_test(lv, v3, 3, 7, 8, hide_ull(1LL<<7), "aS_BFu15i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_BFu8ll, aS_BFu15i_BFu8ll)
//============================================================================



static void Test_aS_BFu15i_BFu8s()
{
  {
    init_simple_test("aS_BFu15i_BFu8s");
    static STRUCT_IF_C aS_BFu15i_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_BFu8s.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_BFu8s");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_BFu8s");
    set_bf_and_test(lv, v3, 3, 7, 8, 1, "aS_BFu15i_BFu8s");
    set_bf_and_test(lv, v3, 3, 7, 8, hide_ull(1LL<<7), "aS_BFu15i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_BFu8s, aS_BFu15i_BFu8s)
//============================================================================



static void Test_aS_BFu15i_BFu9i()
{
  {
    init_simple_test("aS_BFu15i_BFu9i");
    static STRUCT_IF_C aS_BFu15i_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_BFu9i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_BFu9i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_BFu9i");
    set_bf_and_test(lv, v3, 3, 7, 9, 1, "aS_BFu15i_BFu9i");
    set_bf_and_test(lv, v3, 3, 7, 9, hide_ull(1LL<<8), "aS_BFu15i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_BFu9i, aS_BFu15i_BFu9i)
//============================================================================



static void Test_aS_BFu15i_BFu9ll()
{
  {
    init_simple_test("aS_BFu15i_BFu9ll");
    static STRUCT_IF_C aS_BFu15i_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_BFu9ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_BFu9ll");
    set_bf_and_test(lv, v3, 3, 7, 9, 1, "aS_BFu15i_BFu9ll");
    set_bf_and_test(lv, v3, 3, 7, 9, hide_ull(1LL<<8), "aS_BFu15i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_BFu9ll, aS_BFu15i_BFu9ll)
//============================================================================



static void Test_aS_BFu15i_BFu9s()
{
  {
    init_simple_test("aS_BFu15i_BFu9s");
    static STRUCT_IF_C aS_BFu15i_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_BFu9s.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_BFu9s");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_BFu9s");
    set_bf_and_test(lv, v3, 3, 7, 9, 1, "aS_BFu15i_BFu9s");
    set_bf_and_test(lv, v3, 3, 7, 9, hide_ull(1LL<<8), "aS_BFu15i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_BFu9s, aS_BFu15i_BFu9s)
//============================================================================



static void Test_aS_BFu15i_C()
{
  {
    init_simple_test("aS_BFu15i_C");
    static STRUCT_IF_C aS_BFu15i_C lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_C)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_C.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_C");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_C");
    check_field_offset(lv, v3, 4, "aS_BFu15i_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_C, aS_BFu15i_C)
//============================================================================



static void Test_aS_BFu15i_D()
{
  {
    init_simple_test("aS_BFu15i_D");
    static STRUCT_IF_C aS_BFu15i_D lv;
    check2(sizeof(lv), 12, "sizeof(aS_BFu15i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_D)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_D.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_D");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_D");
    check_field_offset(lv, v3, 4, "aS_BFu15i_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_D, aS_BFu15i_D)
//============================================================================



static void Test_aS_BFu15i_F()
{
  {
    init_simple_test("aS_BFu15i_F");
    static STRUCT_IF_C aS_BFu15i_F lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu15i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_F)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_F.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_F");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_F");
    check_field_offset(lv, v3, 4, "aS_BFu15i_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_F, aS_BFu15i_F)
//============================================================================



static void Test_aS_BFu15i_I()
{
  {
    init_simple_test("aS_BFu15i_I");
    static STRUCT_IF_C aS_BFu15i_I lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu15i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_I)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_I.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_I");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_I");
    check_field_offset(lv, v3, 4, "aS_BFu15i_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_I, aS_BFu15i_I)
//============================================================================



static void Test_aS_BFu15i_Ip()
{
  {
    init_simple_test("aS_BFu15i_Ip");
    static STRUCT_IF_C aS_BFu15i_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_BFu15i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_Ip)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_Ip.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_Ip");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_Ip");
    check_field_offset(lv, v3, 4, "aS_BFu15i_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_Ip, aS_BFu15i_Ip)
//============================================================================



static void Test_aS_BFu15i_L()
{
  {
    init_simple_test("aS_BFu15i_L");
    static STRUCT_IF_C aS_BFu15i_L lv;
    check2(sizeof(lv), 12, "sizeof(aS_BFu15i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_L)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_L.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_L");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_L");
    check_field_offset(lv, v3, 4, "aS_BFu15i_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_L, aS_BFu15i_L)
//============================================================================



static void Test_aS_BFu15i_S()
{
  {
    init_simple_test("aS_BFu15i_S");
    static STRUCT_IF_C aS_BFu15i_S lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu15i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_S)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_S.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_S");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_S");
    check_field_offset(lv, v3, 4, "aS_BFu15i_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_S, aS_BFu15i_S)
//============================================================================



static void Test_aS_BFu15i_Uc()
{
  {
    init_simple_test("aS_BFu15i_Uc");
    static STRUCT_IF_C aS_BFu15i_Uc lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_Uc)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_Uc.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_Uc");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_Uc");
    check_field_offset(lv, v3, 4, "aS_BFu15i_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_Uc, aS_BFu15i_Uc)
//============================================================================



static void Test_aS_BFu15i_Ui()
{
  {
    init_simple_test("aS_BFu15i_Ui");
    static STRUCT_IF_C aS_BFu15i_Ui lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu15i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_Ui)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_Ui.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_Ui");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_Ui");
    check_field_offset(lv, v3, 4, "aS_BFu15i_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_Ui, aS_BFu15i_Ui)
//============================================================================



static void Test_aS_BFu15i_Ul()
{
  {
    init_simple_test("aS_BFu15i_Ul");
    static STRUCT_IF_C aS_BFu15i_Ul lv;
    check2(sizeof(lv), 12, "sizeof(aS_BFu15i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_Ul)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_Ul.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_Ul");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_Ul");
    check_field_offset(lv, v3, 4, "aS_BFu15i_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_Ul, aS_BFu15i_Ul)
//============================================================================



static void Test_aS_BFu15i_Us()
{
  {
    init_simple_test("aS_BFu15i_Us");
    static STRUCT_IF_C aS_BFu15i_Us lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu15i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_Us)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_Us.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_Us");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_Us");
    check_field_offset(lv, v3, 4, "aS_BFu15i_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_Us, aS_BFu15i_Us)
//============================================================================



static void Test_aS_BFu15i_Vp()
{
  {
    init_simple_test("aS_BFu15i_Vp");
    static STRUCT_IF_C aS_BFu15i_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_BFu15i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15i_Vp)");
    check_field_offset(lv, v1, 0, "aS_BFu15i_Vp.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15i_Vp");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15i_Vp");
    check_field_offset(lv, v3, 4, "aS_BFu15i_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15i_Vp, aS_BFu15i_Vp)
//============================================================================



static void Test_aS_BFu15ll()
{
  {
    init_simple_test("aS_BFu15ll");
    static STRUCT_IF_C aS_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll, aS_BFu15ll)
//============================================================================



static void Test_aS_BFu15ll_BFu15i()
{
  {
    init_simple_test("aS_BFu15ll_BFu15i");
    static STRUCT_IF_C aS_BFu15ll_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 7, 15, 1, "aS_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 7, 15, hide_ull(1LL<<14), "aS_BFu15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_BFu15i, aS_BFu15ll_BFu15i)
//============================================================================



static void Test_aS_BFu15ll_BFu15ll()
{
  {
    init_simple_test("aS_BFu15ll_BFu15ll");
    static STRUCT_IF_C aS_BFu15ll_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 7, 15, 1, "aS_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 7, 15, hide_ull(1LL<<14), "aS_BFu15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_BFu15ll, aS_BFu15ll_BFu15ll)
//============================================================================



static void Test_aS_BFu15ll_BFu15s()
{
  {
    init_simple_test("aS_BFu15ll_BFu15s");
    static STRUCT_IF_C aS_BFu15ll_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 7, 15, 1, "aS_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 7, 15, hide_ull(1LL<<14), "aS_BFu15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_BFu15s, aS_BFu15ll_BFu15s)
//============================================================================



static void Test_aS_BFu15ll_BFu16i()
{
  {
    init_simple_test("aS_BFu15ll_BFu16i");
    static STRUCT_IF_C aS_BFu15ll_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu15ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_BFu16i");
    set_bf_and_test(lv, v3, 3, 7, 16, 1, "aS_BFu15ll_BFu16i");
    set_bf_and_test(lv, v3, 3, 7, 16, hide_ull(1LL<<15), "aS_BFu15ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_BFu16i, aS_BFu15ll_BFu16i)
//============================================================================



static void Test_aS_BFu15ll_BFu16ll()
{
  {
    init_simple_test("aS_BFu15ll_BFu16ll");
    static STRUCT_IF_C aS_BFu15ll_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu15ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_BFu16ll");
    set_bf_and_test(lv, v3, 3, 7, 16, 1, "aS_BFu15ll_BFu16ll");
    set_bf_and_test(lv, v3, 3, 7, 16, hide_ull(1LL<<15), "aS_BFu15ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_BFu16ll, aS_BFu15ll_BFu16ll)
//============================================================================



static void Test_aS_BFu15ll_BFu16s()
{
  {
    init_simple_test("aS_BFu15ll_BFu16s");
    static STRUCT_IF_C aS_BFu15ll_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu15ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_BFu16s");
    set_bf_and_test(lv, v3, 3, 7, 16, 1, "aS_BFu15ll_BFu16s");
    set_bf_and_test(lv, v3, 3, 7, 16, hide_ull(1LL<<15), "aS_BFu15ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_BFu16s, aS_BFu15ll_BFu16s)
//============================================================================



static void Test_aS_BFu15ll_BFu17i()
{
  {
    init_simple_test("aS_BFu15ll_BFu17i");
    static STRUCT_IF_C aS_BFu15ll_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu15ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_BFu17i");
    set_bf_and_test(lv, v3, 3, 7, 17, 1, "aS_BFu15ll_BFu17i");
    set_bf_and_test(lv, v3, 3, 7, 17, hide_ull(1LL<<16), "aS_BFu15ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_BFu17i, aS_BFu15ll_BFu17i)
//============================================================================



static void Test_aS_BFu15ll_BFu17ll()
{
  {
    init_simple_test("aS_BFu15ll_BFu17ll");
    static STRUCT_IF_C aS_BFu15ll_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu15ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_BFu17ll");
    set_bf_and_test(lv, v3, 3, 7, 17, 1, "aS_BFu15ll_BFu17ll");
    set_bf_and_test(lv, v3, 3, 7, 17, hide_ull(1LL<<16), "aS_BFu15ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_BFu17ll, aS_BFu15ll_BFu17ll)
//============================================================================



static void Test_aS_BFu15ll_BFu1c()
{
  {
    init_simple_test("aS_BFu15ll_BFu1c");
    static STRUCT_IF_C aS_BFu15ll_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu15ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_BFu1c");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_BFu1c");
    set_bf_and_test(lv, v3, 3, 7, 1, 1, "aS_BFu15ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_BFu1c, aS_BFu15ll_BFu1c)
//============================================================================



static void Test_aS_BFu15ll_BFu1i()
{
  {
    init_simple_test("aS_BFu15ll_BFu1i");
    static STRUCT_IF_C aS_BFu15ll_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu15ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_BFu1i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_BFu1i");
    set_bf_and_test(lv, v3, 3, 7, 1, 1, "aS_BFu15ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_BFu1i, aS_BFu15ll_BFu1i)
//============================================================================



static void Test_aS_BFu15ll_BFu1ll()
{
  {
    init_simple_test("aS_BFu15ll_BFu1ll");
    static STRUCT_IF_C aS_BFu15ll_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu15ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_BFu1ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_BFu1ll");
    set_bf_and_test(lv, v3, 3, 7, 1, 1, "aS_BFu15ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_BFu1ll, aS_BFu15ll_BFu1ll)
//============================================================================



static void Test_aS_BFu15ll_BFu1s()
{
  {
    init_simple_test("aS_BFu15ll_BFu1s");
    static STRUCT_IF_C aS_BFu15ll_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu15ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_BFu1s");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_BFu1s");
    set_bf_and_test(lv, v3, 3, 7, 1, 1, "aS_BFu15ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_BFu1s, aS_BFu15ll_BFu1s)
//============================================================================



static void Test_aS_BFu15ll_BFu31i()
{
  {
    init_simple_test("aS_BFu15ll_BFu31i");
    static STRUCT_IF_C aS_BFu15ll_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu15ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_BFu31i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_BFu31i");
    set_bf_and_test(lv, v3, 3, 7, 31, 1, "aS_BFu15ll_BFu31i");
    set_bf_and_test(lv, v3, 3, 7, 31, hide_ull(1LL<<30), "aS_BFu15ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_BFu31i, aS_BFu15ll_BFu31i)
//============================================================================



static void Test_aS_BFu15ll_BFu31ll()
{
  {
    init_simple_test("aS_BFu15ll_BFu31ll");
    static STRUCT_IF_C aS_BFu15ll_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu15ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_BFu31ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_BFu31ll");
    set_bf_and_test(lv, v3, 3, 7, 31, 1, "aS_BFu15ll_BFu31ll");
    set_bf_and_test(lv, v3, 3, 7, 31, hide_ull(1LL<<30), "aS_BFu15ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_BFu31ll, aS_BFu15ll_BFu31ll)
//============================================================================



static void Test_aS_BFu15ll_BFu32i()
{
  {
    init_simple_test("aS_BFu15ll_BFu32i");
    static STRUCT_IF_C aS_BFu15ll_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu15ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_BFu32i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_BFu32i");
    set_bf_and_test(lv, v3, 3, 7, 32, 1, "aS_BFu15ll_BFu32i");
    set_bf_and_test(lv, v3, 3, 7, 32, hide_ull(1LL<<31), "aS_BFu15ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_BFu32i, aS_BFu15ll_BFu32i)
//============================================================================



static void Test_aS_BFu15ll_BFu32ll()
{
  {
    init_simple_test("aS_BFu15ll_BFu32ll");
    static STRUCT_IF_C aS_BFu15ll_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu15ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_BFu32ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_BFu32ll");
    set_bf_and_test(lv, v3, 3, 7, 32, 1, "aS_BFu15ll_BFu32ll");
    set_bf_and_test(lv, v3, 3, 7, 32, hide_ull(1LL<<31), "aS_BFu15ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_BFu32ll, aS_BFu15ll_BFu32ll)
//============================================================================



static void Test_aS_BFu15ll_BFu33()
{
  {
    init_simple_test("aS_BFu15ll_BFu33");
    static STRUCT_IF_C aS_BFu15ll_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu15ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_BFu33)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_BFu33.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_BFu33");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_BFu33");
    set_bf_and_test(lv, v3, 3, 7, 33, 1, "aS_BFu15ll_BFu33");
    set_bf_and_test(lv, v3, 3, 7, 33, hide_ull(1LL<<32), "aS_BFu15ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_BFu33, aS_BFu15ll_BFu33)
//============================================================================



static void Test_aS_BFu15ll_BFu7c()
{
  {
    init_simple_test("aS_BFu15ll_BFu7c");
    static STRUCT_IF_C aS_BFu15ll_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_BFu7c");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_BFu7c");
    set_bf_and_test(lv, v3, 3, 7, 7, 1, "aS_BFu15ll_BFu7c");
    set_bf_and_test(lv, v3, 3, 7, 7, hide_ull(1LL<<6), "aS_BFu15ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_BFu7c, aS_BFu15ll_BFu7c)
//============================================================================



static void Test_aS_BFu15ll_BFu7i()
{
  {
    init_simple_test("aS_BFu15ll_BFu7i");
    static STRUCT_IF_C aS_BFu15ll_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_BFu7i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_BFu7i");
    set_bf_and_test(lv, v3, 3, 7, 7, 1, "aS_BFu15ll_BFu7i");
    set_bf_and_test(lv, v3, 3, 7, 7, hide_ull(1LL<<6), "aS_BFu15ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_BFu7i, aS_BFu15ll_BFu7i)
//============================================================================



static void Test_aS_BFu15ll_BFu7ll()
{
  {
    init_simple_test("aS_BFu15ll_BFu7ll");
    static STRUCT_IF_C aS_BFu15ll_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_BFu7ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_BFu7ll");
    set_bf_and_test(lv, v3, 3, 7, 7, 1, "aS_BFu15ll_BFu7ll");
    set_bf_and_test(lv, v3, 3, 7, 7, hide_ull(1LL<<6), "aS_BFu15ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_BFu7ll, aS_BFu15ll_BFu7ll)
//============================================================================



static void Test_aS_BFu15ll_BFu7s()
{
  {
    init_simple_test("aS_BFu15ll_BFu7s");
    static STRUCT_IF_C aS_BFu15ll_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_BFu7s");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_BFu7s");
    set_bf_and_test(lv, v3, 3, 7, 7, 1, "aS_BFu15ll_BFu7s");
    set_bf_and_test(lv, v3, 3, 7, 7, hide_ull(1LL<<6), "aS_BFu15ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_BFu7s, aS_BFu15ll_BFu7s)
//============================================================================



static void Test_aS_BFu15ll_BFu8c()
{
  {
    init_simple_test("aS_BFu15ll_BFu8c");
    static STRUCT_IF_C aS_BFu15ll_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_BFu8c");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_BFu8c");
    set_bf_and_test(lv, v3, 3, 7, 8, 1, "aS_BFu15ll_BFu8c");
    set_bf_and_test(lv, v3, 3, 7, 8, hide_ull(1LL<<7), "aS_BFu15ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_BFu8c, aS_BFu15ll_BFu8c)
//============================================================================



static void Test_aS_BFu15ll_BFu8i()
{
  {
    init_simple_test("aS_BFu15ll_BFu8i");
    static STRUCT_IF_C aS_BFu15ll_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_BFu8i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_BFu8i");
    set_bf_and_test(lv, v3, 3, 7, 8, 1, "aS_BFu15ll_BFu8i");
    set_bf_and_test(lv, v3, 3, 7, 8, hide_ull(1LL<<7), "aS_BFu15ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_BFu8i, aS_BFu15ll_BFu8i)
//============================================================================



static void Test_aS_BFu15ll_BFu8ll()
{
  {
    init_simple_test("aS_BFu15ll_BFu8ll");
    static STRUCT_IF_C aS_BFu15ll_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_BFu8ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_BFu8ll");
    set_bf_and_test(lv, v3, 3, 7, 8, 1, "aS_BFu15ll_BFu8ll");
    set_bf_and_test(lv, v3, 3, 7, 8, hide_ull(1LL<<7), "aS_BFu15ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_BFu8ll, aS_BFu15ll_BFu8ll)
//============================================================================



static void Test_aS_BFu15ll_BFu8s()
{
  {
    init_simple_test("aS_BFu15ll_BFu8s");
    static STRUCT_IF_C aS_BFu15ll_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_BFu8s");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_BFu8s");
    set_bf_and_test(lv, v3, 3, 7, 8, 1, "aS_BFu15ll_BFu8s");
    set_bf_and_test(lv, v3, 3, 7, 8, hide_ull(1LL<<7), "aS_BFu15ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_BFu8s, aS_BFu15ll_BFu8s)
//============================================================================



static void Test_aS_BFu15ll_BFu9i()
{
  {
    init_simple_test("aS_BFu15ll_BFu9i");
    static STRUCT_IF_C aS_BFu15ll_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_BFu9i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_BFu9i");
    set_bf_and_test(lv, v3, 3, 7, 9, 1, "aS_BFu15ll_BFu9i");
    set_bf_and_test(lv, v3, 3, 7, 9, hide_ull(1LL<<8), "aS_BFu15ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_BFu9i, aS_BFu15ll_BFu9i)
//============================================================================



static void Test_aS_BFu15ll_BFu9ll()
{
  {
    init_simple_test("aS_BFu15ll_BFu9ll");
    static STRUCT_IF_C aS_BFu15ll_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_BFu9ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_BFu9ll");
    set_bf_and_test(lv, v3, 3, 7, 9, 1, "aS_BFu15ll_BFu9ll");
    set_bf_and_test(lv, v3, 3, 7, 9, hide_ull(1LL<<8), "aS_BFu15ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_BFu9ll, aS_BFu15ll_BFu9ll)
//============================================================================



static void Test_aS_BFu15ll_BFu9s()
{
  {
    init_simple_test("aS_BFu15ll_BFu9s");
    static STRUCT_IF_C aS_BFu15ll_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_BFu9s");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_BFu9s");
    set_bf_and_test(lv, v3, 3, 7, 9, 1, "aS_BFu15ll_BFu9s");
    set_bf_and_test(lv, v3, 3, 7, 9, hide_ull(1LL<<8), "aS_BFu15ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_BFu9s, aS_BFu15ll_BFu9s)
//============================================================================



static void Test_aS_BFu15ll_C()
{
  {
    init_simple_test("aS_BFu15ll_C");
    static STRUCT_IF_C aS_BFu15ll_C lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_C)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_C.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_C");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_C");
    check_field_offset(lv, v3, 4, "aS_BFu15ll_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_C, aS_BFu15ll_C)
//============================================================================



static void Test_aS_BFu15ll_D()
{
  {
    init_simple_test("aS_BFu15ll_D");
    static STRUCT_IF_C aS_BFu15ll_D lv;
    check2(sizeof(lv), 12, "sizeof(aS_BFu15ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_D)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_D.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_D");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_D");
    check_field_offset(lv, v3, 4, "aS_BFu15ll_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_D, aS_BFu15ll_D)
//============================================================================



static void Test_aS_BFu15ll_F()
{
  {
    init_simple_test("aS_BFu15ll_F");
    static STRUCT_IF_C aS_BFu15ll_F lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu15ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_F)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_F.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_F");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_F");
    check_field_offset(lv, v3, 4, "aS_BFu15ll_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_F, aS_BFu15ll_F)
//============================================================================



static void Test_aS_BFu15ll_I()
{
  {
    init_simple_test("aS_BFu15ll_I");
    static STRUCT_IF_C aS_BFu15ll_I lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu15ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_I)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_I.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_I");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_I");
    check_field_offset(lv, v3, 4, "aS_BFu15ll_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_I, aS_BFu15ll_I)
//============================================================================



static void Test_aS_BFu15ll_Ip()
{
  {
    init_simple_test("aS_BFu15ll_Ip");
    static STRUCT_IF_C aS_BFu15ll_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_BFu15ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_Ip)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_Ip.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_Ip");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_Ip");
    check_field_offset(lv, v3, 4, "aS_BFu15ll_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_Ip, aS_BFu15ll_Ip)
//============================================================================



static void Test_aS_BFu15ll_L()
{
  {
    init_simple_test("aS_BFu15ll_L");
    static STRUCT_IF_C aS_BFu15ll_L lv;
    check2(sizeof(lv), 12, "sizeof(aS_BFu15ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_L)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_L.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_L");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_L");
    check_field_offset(lv, v3, 4, "aS_BFu15ll_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_L, aS_BFu15ll_L)
//============================================================================



static void Test_aS_BFu15ll_S()
{
  {
    init_simple_test("aS_BFu15ll_S");
    static STRUCT_IF_C aS_BFu15ll_S lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu15ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_S)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_S.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_S");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_S");
    check_field_offset(lv, v3, 4, "aS_BFu15ll_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_S, aS_BFu15ll_S)
//============================================================================



static void Test_aS_BFu15ll_Uc()
{
  {
    init_simple_test("aS_BFu15ll_Uc");
    static STRUCT_IF_C aS_BFu15ll_Uc lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_Uc)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_Uc.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_Uc");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_Uc");
    check_field_offset(lv, v3, 4, "aS_BFu15ll_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_Uc, aS_BFu15ll_Uc)
//============================================================================



static void Test_aS_BFu15ll_Ui()
{
  {
    init_simple_test("aS_BFu15ll_Ui");
    static STRUCT_IF_C aS_BFu15ll_Ui lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu15ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_Ui)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_Ui.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_Ui");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_Ui");
    check_field_offset(lv, v3, 4, "aS_BFu15ll_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_Ui, aS_BFu15ll_Ui)
//============================================================================



static void Test_aS_BFu15ll_Ul()
{
  {
    init_simple_test("aS_BFu15ll_Ul");
    static STRUCT_IF_C aS_BFu15ll_Ul lv;
    check2(sizeof(lv), 12, "sizeof(aS_BFu15ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_Ul)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_Ul.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_Ul");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_Ul");
    check_field_offset(lv, v3, 4, "aS_BFu15ll_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_Ul, aS_BFu15ll_Ul)
//============================================================================



static void Test_aS_BFu15ll_Us()
{
  {
    init_simple_test("aS_BFu15ll_Us");
    static STRUCT_IF_C aS_BFu15ll_Us lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu15ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_Us)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_Us.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_Us");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_Us");
    check_field_offset(lv, v3, 4, "aS_BFu15ll_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_Us, aS_BFu15ll_Us)
//============================================================================



static void Test_aS_BFu15ll_Vp()
{
  {
    init_simple_test("aS_BFu15ll_Vp");
    static STRUCT_IF_C aS_BFu15ll_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_BFu15ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15ll_Vp)");
    check_field_offset(lv, v1, 0, "aS_BFu15ll_Vp.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15ll_Vp");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15ll_Vp");
    check_field_offset(lv, v3, 4, "aS_BFu15ll_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15ll_Vp, aS_BFu15ll_Vp)
//============================================================================



static void Test_aS_BFu15s()
{
  {
    init_simple_test("aS_BFu15s");
    static STRUCT_IF_C aS_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_BFu15s.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s, aS_BFu15s)
//============================================================================



static void Test_aS_BFu15s_BFu15i()
{
  {
    init_simple_test("aS_BFu15s_BFu15i");
    static STRUCT_IF_C aS_BFu15s_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_BFu15i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 7, 15, 1, "aS_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 3, 7, 15, hide_ull(1LL<<14), "aS_BFu15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_BFu15i, aS_BFu15s_BFu15i)
//============================================================================



static void Test_aS_BFu15s_BFu15ll()
{
  {
    init_simple_test("aS_BFu15s_BFu15ll");
    static STRUCT_IF_C aS_BFu15s_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_BFu15ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 7, 15, 1, "aS_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 7, 15, hide_ull(1LL<<14), "aS_BFu15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_BFu15ll, aS_BFu15s_BFu15ll)
//============================================================================



static void Test_aS_BFu15s_BFu15s()
{
  {
    init_simple_test("aS_BFu15s_BFu15s");
    static STRUCT_IF_C aS_BFu15s_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_BFu15s.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 7, 15, 1, "aS_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 3, 7, 15, hide_ull(1LL<<14), "aS_BFu15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_BFu15s, aS_BFu15s_BFu15s)
//============================================================================



static void Test_aS_BFu15s_BFu16i()
{
  {
    init_simple_test("aS_BFu15s_BFu16i");
    static STRUCT_IF_C aS_BFu15s_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu15s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_BFu16i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_BFu16i");
    set_bf_and_test(lv, v3, 3, 7, 16, 1, "aS_BFu15s_BFu16i");
    set_bf_and_test(lv, v3, 3, 7, 16, hide_ull(1LL<<15), "aS_BFu15s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_BFu16i, aS_BFu15s_BFu16i)
//============================================================================



static void Test_aS_BFu15s_BFu16ll()
{
  {
    init_simple_test("aS_BFu15s_BFu16ll");
    static STRUCT_IF_C aS_BFu15s_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu15s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_BFu16ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_BFu16ll");
    set_bf_and_test(lv, v3, 3, 7, 16, 1, "aS_BFu15s_BFu16ll");
    set_bf_and_test(lv, v3, 3, 7, 16, hide_ull(1LL<<15), "aS_BFu15s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_BFu16ll, aS_BFu15s_BFu16ll)
//============================================================================



static void Test_aS_BFu15s_BFu16s()
{
  {
    init_simple_test("aS_BFu15s_BFu16s");
    static STRUCT_IF_C aS_BFu15s_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu15s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_BFu16s.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_BFu16s");
    set_bf_and_test(lv, v3, 3, 7, 16, 1, "aS_BFu15s_BFu16s");
    set_bf_and_test(lv, v3, 3, 7, 16, hide_ull(1LL<<15), "aS_BFu15s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_BFu16s, aS_BFu15s_BFu16s)
//============================================================================



static void Test_aS_BFu15s_BFu17i()
{
  {
    init_simple_test("aS_BFu15s_BFu17i");
    static STRUCT_IF_C aS_BFu15s_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu15s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_BFu17i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_BFu17i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_BFu17i");
    set_bf_and_test(lv, v3, 3, 7, 17, 1, "aS_BFu15s_BFu17i");
    set_bf_and_test(lv, v3, 3, 7, 17, hide_ull(1LL<<16), "aS_BFu15s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_BFu17i, aS_BFu15s_BFu17i)
//============================================================================



static void Test_aS_BFu15s_BFu17ll()
{
  {
    init_simple_test("aS_BFu15s_BFu17ll");
    static STRUCT_IF_C aS_BFu15s_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu15s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_BFu17ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_BFu17ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_BFu17ll");
    set_bf_and_test(lv, v3, 3, 7, 17, 1, "aS_BFu15s_BFu17ll");
    set_bf_and_test(lv, v3, 3, 7, 17, hide_ull(1LL<<16), "aS_BFu15s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_BFu17ll, aS_BFu15s_BFu17ll)
//============================================================================



static void Test_aS_BFu15s_BFu1c()
{
  {
    init_simple_test("aS_BFu15s_BFu1c");
    static STRUCT_IF_C aS_BFu15s_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu15s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_BFu1c.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_BFu1c");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_BFu1c");
    set_bf_and_test(lv, v3, 3, 7, 1, 1, "aS_BFu15s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_BFu1c, aS_BFu15s_BFu1c)
//============================================================================



static void Test_aS_BFu15s_BFu1i()
{
  {
    init_simple_test("aS_BFu15s_BFu1i");
    static STRUCT_IF_C aS_BFu15s_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu15s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_BFu1i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_BFu1i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_BFu1i");
    set_bf_and_test(lv, v3, 3, 7, 1, 1, "aS_BFu15s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_BFu1i, aS_BFu15s_BFu1i)
//============================================================================



static void Test_aS_BFu15s_BFu1ll()
{
  {
    init_simple_test("aS_BFu15s_BFu1ll");
    static STRUCT_IF_C aS_BFu15s_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu15s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_BFu1ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_BFu1ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_BFu1ll");
    set_bf_and_test(lv, v3, 3, 7, 1, 1, "aS_BFu15s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_BFu1ll, aS_BFu15s_BFu1ll)
//============================================================================



static void Test_aS_BFu15s_BFu1s()
{
  {
    init_simple_test("aS_BFu15s_BFu1s");
    static STRUCT_IF_C aS_BFu15s_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu15s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_BFu1s.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_BFu1s");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_BFu1s");
    set_bf_and_test(lv, v3, 3, 7, 1, 1, "aS_BFu15s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_BFu1s, aS_BFu15s_BFu1s)
//============================================================================



static void Test_aS_BFu15s_BFu31i()
{
  {
    init_simple_test("aS_BFu15s_BFu31i");
    static STRUCT_IF_C aS_BFu15s_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu15s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_BFu31i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_BFu31i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_BFu31i");
    set_bf_and_test(lv, v3, 3, 7, 31, 1, "aS_BFu15s_BFu31i");
    set_bf_and_test(lv, v3, 3, 7, 31, hide_ull(1LL<<30), "aS_BFu15s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_BFu31i, aS_BFu15s_BFu31i)
//============================================================================



static void Test_aS_BFu15s_BFu31ll()
{
  {
    init_simple_test("aS_BFu15s_BFu31ll");
    static STRUCT_IF_C aS_BFu15s_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu15s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_BFu31ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_BFu31ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_BFu31ll");
    set_bf_and_test(lv, v3, 3, 7, 31, 1, "aS_BFu15s_BFu31ll");
    set_bf_and_test(lv, v3, 3, 7, 31, hide_ull(1LL<<30), "aS_BFu15s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_BFu31ll, aS_BFu15s_BFu31ll)
//============================================================================



static void Test_aS_BFu15s_BFu32i()
{
  {
    init_simple_test("aS_BFu15s_BFu32i");
    static STRUCT_IF_C aS_BFu15s_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu15s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_BFu32i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_BFu32i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_BFu32i");
    set_bf_and_test(lv, v3, 3, 7, 32, 1, "aS_BFu15s_BFu32i");
    set_bf_and_test(lv, v3, 3, 7, 32, hide_ull(1LL<<31), "aS_BFu15s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_BFu32i, aS_BFu15s_BFu32i)
//============================================================================



static void Test_aS_BFu15s_BFu32ll()
{
  {
    init_simple_test("aS_BFu15s_BFu32ll");
    static STRUCT_IF_C aS_BFu15s_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu15s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_BFu32ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_BFu32ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_BFu32ll");
    set_bf_and_test(lv, v3, 3, 7, 32, 1, "aS_BFu15s_BFu32ll");
    set_bf_and_test(lv, v3, 3, 7, 32, hide_ull(1LL<<31), "aS_BFu15s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_BFu32ll, aS_BFu15s_BFu32ll)
//============================================================================



static void Test_aS_BFu15s_BFu33()
{
  {
    init_simple_test("aS_BFu15s_BFu33");
    static STRUCT_IF_C aS_BFu15s_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu15s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_BFu33)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_BFu33.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_BFu33");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_BFu33");
    set_bf_and_test(lv, v3, 3, 7, 33, 1, "aS_BFu15s_BFu33");
    set_bf_and_test(lv, v3, 3, 7, 33, hide_ull(1LL<<32), "aS_BFu15s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_BFu33, aS_BFu15s_BFu33)
//============================================================================



static void Test_aS_BFu15s_BFu7c()
{
  {
    init_simple_test("aS_BFu15s_BFu7c");
    static STRUCT_IF_C aS_BFu15s_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_BFu7c.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_BFu7c");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_BFu7c");
    set_bf_and_test(lv, v3, 3, 7, 7, 1, "aS_BFu15s_BFu7c");
    set_bf_and_test(lv, v3, 3, 7, 7, hide_ull(1LL<<6), "aS_BFu15s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_BFu7c, aS_BFu15s_BFu7c)
//============================================================================



static void Test_aS_BFu15s_BFu7i()
{
  {
    init_simple_test("aS_BFu15s_BFu7i");
    static STRUCT_IF_C aS_BFu15s_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_BFu7i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_BFu7i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_BFu7i");
    set_bf_and_test(lv, v3, 3, 7, 7, 1, "aS_BFu15s_BFu7i");
    set_bf_and_test(lv, v3, 3, 7, 7, hide_ull(1LL<<6), "aS_BFu15s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_BFu7i, aS_BFu15s_BFu7i)
//============================================================================



static void Test_aS_BFu15s_BFu7ll()
{
  {
    init_simple_test("aS_BFu15s_BFu7ll");
    static STRUCT_IF_C aS_BFu15s_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_BFu7ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_BFu7ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_BFu7ll");
    set_bf_and_test(lv, v3, 3, 7, 7, 1, "aS_BFu15s_BFu7ll");
    set_bf_and_test(lv, v3, 3, 7, 7, hide_ull(1LL<<6), "aS_BFu15s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_BFu7ll, aS_BFu15s_BFu7ll)
//============================================================================



static void Test_aS_BFu15s_BFu7s()
{
  {
    init_simple_test("aS_BFu15s_BFu7s");
    static STRUCT_IF_C aS_BFu15s_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_BFu7s.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_BFu7s");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_BFu7s");
    set_bf_and_test(lv, v3, 3, 7, 7, 1, "aS_BFu15s_BFu7s");
    set_bf_and_test(lv, v3, 3, 7, 7, hide_ull(1LL<<6), "aS_BFu15s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_BFu7s, aS_BFu15s_BFu7s)
//============================================================================



static void Test_aS_BFu15s_BFu8c()
{
  {
    init_simple_test("aS_BFu15s_BFu8c");
    static STRUCT_IF_C aS_BFu15s_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_BFu8c.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_BFu8c");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_BFu8c");
    set_bf_and_test(lv, v3, 3, 7, 8, 1, "aS_BFu15s_BFu8c");
    set_bf_and_test(lv, v3, 3, 7, 8, hide_ull(1LL<<7), "aS_BFu15s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_BFu8c, aS_BFu15s_BFu8c)
//============================================================================



static void Test_aS_BFu15s_BFu8i()
{
  {
    init_simple_test("aS_BFu15s_BFu8i");
    static STRUCT_IF_C aS_BFu15s_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_BFu8i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_BFu8i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_BFu8i");
    set_bf_and_test(lv, v3, 3, 7, 8, 1, "aS_BFu15s_BFu8i");
    set_bf_and_test(lv, v3, 3, 7, 8, hide_ull(1LL<<7), "aS_BFu15s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_BFu8i, aS_BFu15s_BFu8i)
//============================================================================



static void Test_aS_BFu15s_BFu8ll()
{
  {
    init_simple_test("aS_BFu15s_BFu8ll");
    static STRUCT_IF_C aS_BFu15s_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_BFu8ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_BFu8ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_BFu8ll");
    set_bf_and_test(lv, v3, 3, 7, 8, 1, "aS_BFu15s_BFu8ll");
    set_bf_and_test(lv, v3, 3, 7, 8, hide_ull(1LL<<7), "aS_BFu15s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_BFu8ll, aS_BFu15s_BFu8ll)
//============================================================================



static void Test_aS_BFu15s_BFu8s()
{
  {
    init_simple_test("aS_BFu15s_BFu8s");
    static STRUCT_IF_C aS_BFu15s_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_BFu8s.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_BFu8s");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_BFu8s");
    set_bf_and_test(lv, v3, 3, 7, 8, 1, "aS_BFu15s_BFu8s");
    set_bf_and_test(lv, v3, 3, 7, 8, hide_ull(1LL<<7), "aS_BFu15s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_BFu8s, aS_BFu15s_BFu8s)
//============================================================================



static void Test_aS_BFu15s_BFu9i()
{
  {
    init_simple_test("aS_BFu15s_BFu9i");
    static STRUCT_IF_C aS_BFu15s_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_BFu9i.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_BFu9i");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_BFu9i");
    set_bf_and_test(lv, v3, 3, 7, 9, 1, "aS_BFu15s_BFu9i");
    set_bf_and_test(lv, v3, 3, 7, 9, hide_ull(1LL<<8), "aS_BFu15s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_BFu9i, aS_BFu15s_BFu9i)
//============================================================================



static void Test_aS_BFu15s_BFu9ll()
{
  {
    init_simple_test("aS_BFu15s_BFu9ll");
    static STRUCT_IF_C aS_BFu15s_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_BFu9ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_BFu9ll");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_BFu9ll");
    set_bf_and_test(lv, v3, 3, 7, 9, 1, "aS_BFu15s_BFu9ll");
    set_bf_and_test(lv, v3, 3, 7, 9, hide_ull(1LL<<8), "aS_BFu15s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_BFu9ll, aS_BFu15s_BFu9ll)
//============================================================================



static void Test_aS_BFu15s_BFu9s()
{
  {
    init_simple_test("aS_BFu15s_BFu9s");
    static STRUCT_IF_C aS_BFu15s_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_BFu9s.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_BFu9s");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_BFu9s");
    set_bf_and_test(lv, v3, 3, 7, 9, 1, "aS_BFu15s_BFu9s");
    set_bf_and_test(lv, v3, 3, 7, 9, hide_ull(1LL<<8), "aS_BFu15s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_BFu9s, aS_BFu15s_BFu9s)
//============================================================================



static void Test_aS_BFu15s_C()
{
  {
    init_simple_test("aS_BFu15s_C");
    static STRUCT_IF_C aS_BFu15s_C lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15s_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_C)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_C.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_C");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_C");
    check_field_offset(lv, v3, 4, "aS_BFu15s_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_C, aS_BFu15s_C)
//============================================================================



static void Test_aS_BFu15s_D()
{
  {
    init_simple_test("aS_BFu15s_D");
    static STRUCT_IF_C aS_BFu15s_D lv;
    check2(sizeof(lv), 12, "sizeof(aS_BFu15s_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_D)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_D.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_D");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_D");
    check_field_offset(lv, v3, 4, "aS_BFu15s_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_D, aS_BFu15s_D)
//============================================================================



static void Test_aS_BFu15s_F()
{
  {
    init_simple_test("aS_BFu15s_F");
    static STRUCT_IF_C aS_BFu15s_F lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu15s_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_F)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_F.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_F");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_F");
    check_field_offset(lv, v3, 4, "aS_BFu15s_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_F, aS_BFu15s_F)
//============================================================================



static void Test_aS_BFu15s_I()
{
  {
    init_simple_test("aS_BFu15s_I");
    static STRUCT_IF_C aS_BFu15s_I lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu15s_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_I)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_I.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_I");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_I");
    check_field_offset(lv, v3, 4, "aS_BFu15s_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_I, aS_BFu15s_I)
//============================================================================



static void Test_aS_BFu15s_Ip()
{
  {
    init_simple_test("aS_BFu15s_Ip");
    static STRUCT_IF_C aS_BFu15s_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_BFu15s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_Ip)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_Ip.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_Ip");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_Ip");
    check_field_offset(lv, v3, 4, "aS_BFu15s_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_Ip, aS_BFu15s_Ip)
//============================================================================



static void Test_aS_BFu15s_L()
{
  {
    init_simple_test("aS_BFu15s_L");
    static STRUCT_IF_C aS_BFu15s_L lv;
    check2(sizeof(lv), 12, "sizeof(aS_BFu15s_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_L)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_L.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_L");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_L");
    check_field_offset(lv, v3, 4, "aS_BFu15s_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_L, aS_BFu15s_L)
//============================================================================



static void Test_aS_BFu15s_S()
{
  {
    init_simple_test("aS_BFu15s_S");
    static STRUCT_IF_C aS_BFu15s_S lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu15s_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_S)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_S.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_S");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_S");
    check_field_offset(lv, v3, 4, "aS_BFu15s_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_S, aS_BFu15s_S)
//============================================================================



static void Test_aS_BFu15s_Uc()
{
  {
    init_simple_test("aS_BFu15s_Uc");
    static STRUCT_IF_C aS_BFu15s_Uc lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu15s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_Uc)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_Uc.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_Uc");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_Uc");
    check_field_offset(lv, v3, 4, "aS_BFu15s_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_Uc, aS_BFu15s_Uc)
//============================================================================



static void Test_aS_BFu15s_Ui()
{
  {
    init_simple_test("aS_BFu15s_Ui");
    static STRUCT_IF_C aS_BFu15s_Ui lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu15s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_Ui)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_Ui.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_Ui");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_Ui");
    check_field_offset(lv, v3, 4, "aS_BFu15s_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_Ui, aS_BFu15s_Ui)
//============================================================================



static void Test_aS_BFu15s_Ul()
{
  {
    init_simple_test("aS_BFu15s_Ul");
    static STRUCT_IF_C aS_BFu15s_Ul lv;
    check2(sizeof(lv), 12, "sizeof(aS_BFu15s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_Ul)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_Ul.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_Ul");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_Ul");
    check_field_offset(lv, v3, 4, "aS_BFu15s_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_Ul, aS_BFu15s_Ul)
//============================================================================



static void Test_aS_BFu15s_Us()
{
  {
    init_simple_test("aS_BFu15s_Us");
    static STRUCT_IF_C aS_BFu15s_Us lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu15s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_Us)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_Us.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_Us");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_Us");
    check_field_offset(lv, v3, 4, "aS_BFu15s_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_Us, aS_BFu15s_Us)
//============================================================================



static void Test_aS_BFu15s_Vp()
{
  {
    init_simple_test("aS_BFu15s_Vp");
    static STRUCT_IF_C aS_BFu15s_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_BFu15s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu15s_Vp)");
    check_field_offset(lv, v1, 0, "aS_BFu15s_Vp.v1");
    set_bf_and_test(lv, v2, 2, 0, 15, 1, "aS_BFu15s_Vp");
    set_bf_and_test(lv, v2, 2, 0, 15, hide_ull(1LL<<14), "aS_BFu15s_Vp");
    check_field_offset(lv, v3, 4, "aS_BFu15s_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu15s_Vp, aS_BFu15s_Vp)
//============================================================================



static void Test_aS_BFu16i()
{
  {
    init_simple_test("aS_BFu16i");
    static STRUCT_IF_C aS_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_BFu16i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i, aS_BFu16i)
//============================================================================



static void Test_aS_BFu16i_BFu15i()
{
  {
    init_simple_test("aS_BFu16i_BFu15i");
    static STRUCT_IF_C aS_BFu16i_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_BFu15i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_BFu15i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_BFu15i");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "aS_BFu16i_BFu15i");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "aS_BFu16i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_BFu15i, aS_BFu16i_BFu15i)
//============================================================================



static void Test_aS_BFu16i_BFu15ll()
{
  {
    init_simple_test("aS_BFu16i_BFu15ll");
    static STRUCT_IF_C aS_BFu16i_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_BFu15ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_BFu15ll");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "aS_BFu16i_BFu15ll");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "aS_BFu16i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_BFu15ll, aS_BFu16i_BFu15ll)
//============================================================================



static void Test_aS_BFu16i_BFu15s()
{
  {
    init_simple_test("aS_BFu16i_BFu15s");
    static STRUCT_IF_C aS_BFu16i_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_BFu15s.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_BFu15s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_BFu15s");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "aS_BFu16i_BFu15s");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "aS_BFu16i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_BFu15s, aS_BFu16i_BFu15s)
//============================================================================



static void Test_aS_BFu16i_BFu16i()
{
  {
    init_simple_test("aS_BFu16i_BFu16i");
    static STRUCT_IF_C aS_BFu16i_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_BFu16i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aS_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_BFu16i, aS_BFu16i_BFu16i)
//============================================================================



static void Test_aS_BFu16i_BFu16ll()
{
  {
    init_simple_test("aS_BFu16i_BFu16ll");
    static STRUCT_IF_C aS_BFu16i_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aS_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_BFu16ll, aS_BFu16i_BFu16ll)
//============================================================================



static void Test_aS_BFu16i_BFu16s()
{
  {
    init_simple_test("aS_BFu16i_BFu16s");
    static STRUCT_IF_C aS_BFu16i_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_BFu16s.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aS_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_BFu16s, aS_BFu16i_BFu16s)
//============================================================================



static void Test_aS_BFu16i_BFu17i()
{
  {
    init_simple_test("aS_BFu16i_BFu17i");
    static STRUCT_IF_C aS_BFu16i_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu16i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_BFu17i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_BFu17i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_BFu17i");
    set_bf_and_test(lv, v3, 4, 0, 17, 1, "aS_BFu16i_BFu17i");
    set_bf_and_test(lv, v3, 4, 0, 17, hide_ull(1LL<<16), "aS_BFu16i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_BFu17i, aS_BFu16i_BFu17i)
//============================================================================



static void Test_aS_BFu16i_BFu17ll()
{
  {
    init_simple_test("aS_BFu16i_BFu17ll");
    static STRUCT_IF_C aS_BFu16i_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu16i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 0, 17, 1, "aS_BFu16i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 0, 17, hide_ull(1LL<<16), "aS_BFu16i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_BFu17ll, aS_BFu16i_BFu17ll)
//============================================================================



static void Test_aS_BFu16i_BFu1c()
{
  {
    init_simple_test("aS_BFu16i_BFu1c");
    static STRUCT_IF_C aS_BFu16i_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_BFu1c.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_BFu1c");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_BFu1c");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "aS_BFu16i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_BFu1c, aS_BFu16i_BFu1c)
//============================================================================



static void Test_aS_BFu16i_BFu1i()
{
  {
    init_simple_test("aS_BFu16i_BFu1i");
    static STRUCT_IF_C aS_BFu16i_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_BFu1i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_BFu1i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_BFu1i");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "aS_BFu16i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_BFu1i, aS_BFu16i_BFu1i)
//============================================================================



static void Test_aS_BFu16i_BFu1ll()
{
  {
    init_simple_test("aS_BFu16i_BFu1ll");
    static STRUCT_IF_C aS_BFu16i_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_BFu1ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_BFu1ll");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "aS_BFu16i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_BFu1ll, aS_BFu16i_BFu1ll)
//============================================================================



static void Test_aS_BFu16i_BFu1s()
{
  {
    init_simple_test("aS_BFu16i_BFu1s");
    static STRUCT_IF_C aS_BFu16i_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_BFu1s.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_BFu1s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_BFu1s");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "aS_BFu16i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_BFu1s, aS_BFu16i_BFu1s)
//============================================================================



static void Test_aS_BFu16i_BFu31i()
{
  {
    init_simple_test("aS_BFu16i_BFu31i");
    static STRUCT_IF_C aS_BFu16i_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu16i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_BFu31i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_BFu31i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_BFu31i");
    set_bf_and_test(lv, v3, 4, 0, 31, 1, "aS_BFu16i_BFu31i");
    set_bf_and_test(lv, v3, 4, 0, 31, hide_ull(1LL<<30), "aS_BFu16i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_BFu31i, aS_BFu16i_BFu31i)
//============================================================================



static void Test_aS_BFu16i_BFu31ll()
{
  {
    init_simple_test("aS_BFu16i_BFu31ll");
    static STRUCT_IF_C aS_BFu16i_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu16i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_BFu31ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_BFu31ll");
    set_bf_and_test(lv, v3, 4, 0, 31, 1, "aS_BFu16i_BFu31ll");
    set_bf_and_test(lv, v3, 4, 0, 31, hide_ull(1LL<<30), "aS_BFu16i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_BFu31ll, aS_BFu16i_BFu31ll)
//============================================================================



static void Test_aS_BFu16i_BFu32i()
{
  {
    init_simple_test("aS_BFu16i_BFu32i");
    static STRUCT_IF_C aS_BFu16i_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu16i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_BFu32i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_BFu32i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_BFu32i");
    set_bf_and_test(lv, v3, 4, 0, 32, 1, "aS_BFu16i_BFu32i");
    set_bf_and_test(lv, v3, 4, 0, 32, hide_ull(1LL<<31), "aS_BFu16i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_BFu32i, aS_BFu16i_BFu32i)
//============================================================================



static void Test_aS_BFu16i_BFu32ll()
{
  {
    init_simple_test("aS_BFu16i_BFu32ll");
    static STRUCT_IF_C aS_BFu16i_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu16i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_BFu32ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_BFu32ll");
    set_bf_and_test(lv, v3, 4, 0, 32, 1, "aS_BFu16i_BFu32ll");
    set_bf_and_test(lv, v3, 4, 0, 32, hide_ull(1LL<<31), "aS_BFu16i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_BFu32ll, aS_BFu16i_BFu32ll)
//============================================================================



static void Test_aS_BFu16i_BFu33()
{
  {
    init_simple_test("aS_BFu16i_BFu33");
    static STRUCT_IF_C aS_BFu16i_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(aS_BFu16i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_BFu33)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_BFu33.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_BFu33");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_BFu33");
    set_bf_and_test(lv, v3, 4, 0, 33, 1, "aS_BFu16i_BFu33");
    set_bf_and_test(lv, v3, 4, 0, 33, hide_ull(1LL<<32), "aS_BFu16i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_BFu33, aS_BFu16i_BFu33)
//============================================================================



static void Test_aS_BFu16i_BFu7c()
{
  {
    init_simple_test("aS_BFu16i_BFu7c");
    static STRUCT_IF_C aS_BFu16i_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_BFu7c.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_BFu7c");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_BFu7c");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "aS_BFu16i_BFu7c");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "aS_BFu16i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_BFu7c, aS_BFu16i_BFu7c)
//============================================================================



static void Test_aS_BFu16i_BFu7i()
{
  {
    init_simple_test("aS_BFu16i_BFu7i");
    static STRUCT_IF_C aS_BFu16i_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_BFu7i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_BFu7i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_BFu7i");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "aS_BFu16i_BFu7i");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "aS_BFu16i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_BFu7i, aS_BFu16i_BFu7i)
//============================================================================



static void Test_aS_BFu16i_BFu7ll()
{
  {
    init_simple_test("aS_BFu16i_BFu7ll");
    static STRUCT_IF_C aS_BFu16i_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_BFu7ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_BFu7ll");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "aS_BFu16i_BFu7ll");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "aS_BFu16i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_BFu7ll, aS_BFu16i_BFu7ll)
//============================================================================



static void Test_aS_BFu16i_BFu7s()
{
  {
    init_simple_test("aS_BFu16i_BFu7s");
    static STRUCT_IF_C aS_BFu16i_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_BFu7s.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_BFu7s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_BFu7s");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "aS_BFu16i_BFu7s");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "aS_BFu16i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_BFu7s, aS_BFu16i_BFu7s)
//============================================================================



static void Test_aS_BFu16i_BFu8c()
{
  {
    init_simple_test("aS_BFu16i_BFu8c");
    static STRUCT_IF_C aS_BFu16i_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_BFu8c.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_BFu8c");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_BFu8c");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "aS_BFu16i_BFu8c");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "aS_BFu16i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_BFu8c, aS_BFu16i_BFu8c)
//============================================================================



static void Test_aS_BFu16i_BFu8i()
{
  {
    init_simple_test("aS_BFu16i_BFu8i");
    static STRUCT_IF_C aS_BFu16i_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_BFu8i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_BFu8i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_BFu8i");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "aS_BFu16i_BFu8i");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "aS_BFu16i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_BFu8i, aS_BFu16i_BFu8i)
//============================================================================



static void Test_aS_BFu16i_BFu8ll()
{
  {
    init_simple_test("aS_BFu16i_BFu8ll");
    static STRUCT_IF_C aS_BFu16i_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_BFu8ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_BFu8ll");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "aS_BFu16i_BFu8ll");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "aS_BFu16i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_BFu8ll, aS_BFu16i_BFu8ll)
//============================================================================



static void Test_aS_BFu16i_BFu8s()
{
  {
    init_simple_test("aS_BFu16i_BFu8s");
    static STRUCT_IF_C aS_BFu16i_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_BFu8s.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_BFu8s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_BFu8s");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "aS_BFu16i_BFu8s");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "aS_BFu16i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_BFu8s, aS_BFu16i_BFu8s)
//============================================================================



static void Test_aS_BFu16i_BFu9i()
{
  {
    init_simple_test("aS_BFu16i_BFu9i");
    static STRUCT_IF_C aS_BFu16i_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_BFu9i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_BFu9i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_BFu9i");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "aS_BFu16i_BFu9i");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "aS_BFu16i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_BFu9i, aS_BFu16i_BFu9i)
//============================================================================



static void Test_aS_BFu16i_BFu9ll()
{
  {
    init_simple_test("aS_BFu16i_BFu9ll");
    static STRUCT_IF_C aS_BFu16i_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_BFu9ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_BFu9ll");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "aS_BFu16i_BFu9ll");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "aS_BFu16i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_BFu9ll, aS_BFu16i_BFu9ll)
//============================================================================



static void Test_aS_BFu16i_BFu9s()
{
  {
    init_simple_test("aS_BFu16i_BFu9s");
    static STRUCT_IF_C aS_BFu16i_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_BFu9s.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_BFu9s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_BFu9s");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "aS_BFu16i_BFu9s");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "aS_BFu16i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_BFu9s, aS_BFu16i_BFu9s)
//============================================================================



static void Test_aS_BFu16i_C()
{
  {
    init_simple_test("aS_BFu16i_C");
    static STRUCT_IF_C aS_BFu16i_C lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_C)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_C.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_C");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_C");
    check_field_offset(lv, v3, 4, "aS_BFu16i_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_C, aS_BFu16i_C)
//============================================================================



static void Test_aS_BFu16i_D()
{
  {
    init_simple_test("aS_BFu16i_D");
    static STRUCT_IF_C aS_BFu16i_D lv;
    check2(sizeof(lv), 12, "sizeof(aS_BFu16i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_D)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_D.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_D");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_D");
    check_field_offset(lv, v3, 4, "aS_BFu16i_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_D, aS_BFu16i_D)
//============================================================================



static void Test_aS_BFu16i_F()
{
  {
    init_simple_test("aS_BFu16i_F");
    static STRUCT_IF_C aS_BFu16i_F lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu16i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_F)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_F.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_F");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_F");
    check_field_offset(lv, v3, 4, "aS_BFu16i_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_F, aS_BFu16i_F)
//============================================================================



static void Test_aS_BFu16i_I()
{
  {
    init_simple_test("aS_BFu16i_I");
    static STRUCT_IF_C aS_BFu16i_I lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu16i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_I)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_I.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_I");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_I");
    check_field_offset(lv, v3, 4, "aS_BFu16i_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_I, aS_BFu16i_I)
//============================================================================



static void Test_aS_BFu16i_Ip()
{
  {
    init_simple_test("aS_BFu16i_Ip");
    static STRUCT_IF_C aS_BFu16i_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_BFu16i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_Ip)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_Ip.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_Ip");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_Ip");
    check_field_offset(lv, v3, 4, "aS_BFu16i_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_Ip, aS_BFu16i_Ip)
//============================================================================



static void Test_aS_BFu16i_L()
{
  {
    init_simple_test("aS_BFu16i_L");
    static STRUCT_IF_C aS_BFu16i_L lv;
    check2(sizeof(lv), 12, "sizeof(aS_BFu16i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_L)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_L.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_L");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_L");
    check_field_offset(lv, v3, 4, "aS_BFu16i_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_L, aS_BFu16i_L)
//============================================================================



static void Test_aS_BFu16i_S()
{
  {
    init_simple_test("aS_BFu16i_S");
    static STRUCT_IF_C aS_BFu16i_S lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_S)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_S.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_S");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_S");
    check_field_offset(lv, v3, 4, "aS_BFu16i_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_S, aS_BFu16i_S)
//============================================================================



static void Test_aS_BFu16i_Uc()
{
  {
    init_simple_test("aS_BFu16i_Uc");
    static STRUCT_IF_C aS_BFu16i_Uc lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_Uc)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_Uc.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_Uc");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_Uc");
    check_field_offset(lv, v3, 4, "aS_BFu16i_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_Uc, aS_BFu16i_Uc)
//============================================================================



static void Test_aS_BFu16i_Ui()
{
  {
    init_simple_test("aS_BFu16i_Ui");
    static STRUCT_IF_C aS_BFu16i_Ui lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu16i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_Ui)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_Ui.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_Ui");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_Ui");
    check_field_offset(lv, v3, 4, "aS_BFu16i_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_Ui, aS_BFu16i_Ui)
//============================================================================



static void Test_aS_BFu16i_Ul()
{
  {
    init_simple_test("aS_BFu16i_Ul");
    static STRUCT_IF_C aS_BFu16i_Ul lv;
    check2(sizeof(lv), 12, "sizeof(aS_BFu16i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_Ul)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_Ul.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_Ul");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_Ul");
    check_field_offset(lv, v3, 4, "aS_BFu16i_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_Ul, aS_BFu16i_Ul)
//============================================================================



static void Test_aS_BFu16i_Us()
{
  {
    init_simple_test("aS_BFu16i_Us");
    static STRUCT_IF_C aS_BFu16i_Us lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_Us)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_Us.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_Us");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_Us");
    check_field_offset(lv, v3, 4, "aS_BFu16i_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_Us, aS_BFu16i_Us)
//============================================================================



static void Test_aS_BFu16i_Vp()
{
  {
    init_simple_test("aS_BFu16i_Vp");
    static STRUCT_IF_C aS_BFu16i_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_BFu16i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16i_Vp)");
    check_field_offset(lv, v1, 0, "aS_BFu16i_Vp.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16i_Vp");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16i_Vp");
    check_field_offset(lv, v3, 4, "aS_BFu16i_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16i_Vp, aS_BFu16i_Vp)
//============================================================================



static void Test_aS_BFu16ll()
{
  {
    init_simple_test("aS_BFu16ll");
    static STRUCT_IF_C aS_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll, aS_BFu16ll)
//============================================================================



static void Test_aS_BFu16ll_BFu15i()
{
  {
    init_simple_test("aS_BFu16ll_BFu15i");
    static STRUCT_IF_C aS_BFu16ll_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_BFu15i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_BFu15i");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "aS_BFu16ll_BFu15i");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "aS_BFu16ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_BFu15i, aS_BFu16ll_BFu15i)
//============================================================================



static void Test_aS_BFu16ll_BFu15ll()
{
  {
    init_simple_test("aS_BFu16ll_BFu15ll");
    static STRUCT_IF_C aS_BFu16ll_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_BFu15ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_BFu15ll");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "aS_BFu16ll_BFu15ll");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "aS_BFu16ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_BFu15ll, aS_BFu16ll_BFu15ll)
//============================================================================



static void Test_aS_BFu16ll_BFu15s()
{
  {
    init_simple_test("aS_BFu16ll_BFu15s");
    static STRUCT_IF_C aS_BFu16ll_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_BFu15s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_BFu15s");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "aS_BFu16ll_BFu15s");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "aS_BFu16ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_BFu15s, aS_BFu16ll_BFu15s)
//============================================================================



static void Test_aS_BFu16ll_BFu16i()
{
  {
    init_simple_test("aS_BFu16ll_BFu16i");
    static STRUCT_IF_C aS_BFu16ll_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aS_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_BFu16i, aS_BFu16ll_BFu16i)
//============================================================================



static void Test_aS_BFu16ll_BFu16ll()
{
  {
    init_simple_test("aS_BFu16ll_BFu16ll");
    static STRUCT_IF_C aS_BFu16ll_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aS_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_BFu16ll, aS_BFu16ll_BFu16ll)
//============================================================================



static void Test_aS_BFu16ll_BFu16s()
{
  {
    init_simple_test("aS_BFu16ll_BFu16s");
    static STRUCT_IF_C aS_BFu16ll_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aS_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_BFu16s, aS_BFu16ll_BFu16s)
//============================================================================



static void Test_aS_BFu16ll_BFu17i()
{
  {
    init_simple_test("aS_BFu16ll_BFu17i");
    static STRUCT_IF_C aS_BFu16ll_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu16ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 0, 17, 1, "aS_BFu16ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 0, 17, hide_ull(1LL<<16), "aS_BFu16ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_BFu17i, aS_BFu16ll_BFu17i)
//============================================================================



static void Test_aS_BFu16ll_BFu17ll()
{
  {
    init_simple_test("aS_BFu16ll_BFu17ll");
    static STRUCT_IF_C aS_BFu16ll_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu16ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 0, 17, 1, "aS_BFu16ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 0, 17, hide_ull(1LL<<16), "aS_BFu16ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_BFu17ll, aS_BFu16ll_BFu17ll)
//============================================================================



static void Test_aS_BFu16ll_BFu1c()
{
  {
    init_simple_test("aS_BFu16ll_BFu1c");
    static STRUCT_IF_C aS_BFu16ll_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_BFu1c");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_BFu1c");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "aS_BFu16ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_BFu1c, aS_BFu16ll_BFu1c)
//============================================================================



static void Test_aS_BFu16ll_BFu1i()
{
  {
    init_simple_test("aS_BFu16ll_BFu1i");
    static STRUCT_IF_C aS_BFu16ll_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_BFu1i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_BFu1i");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "aS_BFu16ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_BFu1i, aS_BFu16ll_BFu1i)
//============================================================================



static void Test_aS_BFu16ll_BFu1ll()
{
  {
    init_simple_test("aS_BFu16ll_BFu1ll");
    static STRUCT_IF_C aS_BFu16ll_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_BFu1ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_BFu1ll");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "aS_BFu16ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_BFu1ll, aS_BFu16ll_BFu1ll)
//============================================================================



static void Test_aS_BFu16ll_BFu1s()
{
  {
    init_simple_test("aS_BFu16ll_BFu1s");
    static STRUCT_IF_C aS_BFu16ll_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_BFu1s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_BFu1s");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "aS_BFu16ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_BFu1s, aS_BFu16ll_BFu1s)
//============================================================================



static void Test_aS_BFu16ll_BFu31i()
{
  {
    init_simple_test("aS_BFu16ll_BFu31i");
    static STRUCT_IF_C aS_BFu16ll_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu16ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_BFu31i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_BFu31i");
    set_bf_and_test(lv, v3, 4, 0, 31, 1, "aS_BFu16ll_BFu31i");
    set_bf_and_test(lv, v3, 4, 0, 31, hide_ull(1LL<<30), "aS_BFu16ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_BFu31i, aS_BFu16ll_BFu31i)
//============================================================================



static void Test_aS_BFu16ll_BFu31ll()
{
  {
    init_simple_test("aS_BFu16ll_BFu31ll");
    static STRUCT_IF_C aS_BFu16ll_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu16ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_BFu31ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_BFu31ll");
    set_bf_and_test(lv, v3, 4, 0, 31, 1, "aS_BFu16ll_BFu31ll");
    set_bf_and_test(lv, v3, 4, 0, 31, hide_ull(1LL<<30), "aS_BFu16ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_BFu31ll, aS_BFu16ll_BFu31ll)
//============================================================================



static void Test_aS_BFu16ll_BFu32i()
{
  {
    init_simple_test("aS_BFu16ll_BFu32i");
    static STRUCT_IF_C aS_BFu16ll_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu16ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_BFu32i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_BFu32i");
    set_bf_and_test(lv, v3, 4, 0, 32, 1, "aS_BFu16ll_BFu32i");
    set_bf_and_test(lv, v3, 4, 0, 32, hide_ull(1LL<<31), "aS_BFu16ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_BFu32i, aS_BFu16ll_BFu32i)
//============================================================================



static void Test_aS_BFu16ll_BFu32ll()
{
  {
    init_simple_test("aS_BFu16ll_BFu32ll");
    static STRUCT_IF_C aS_BFu16ll_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu16ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_BFu32ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_BFu32ll");
    set_bf_and_test(lv, v3, 4, 0, 32, 1, "aS_BFu16ll_BFu32ll");
    set_bf_and_test(lv, v3, 4, 0, 32, hide_ull(1LL<<31), "aS_BFu16ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_BFu32ll, aS_BFu16ll_BFu32ll)
//============================================================================



static void Test_aS_BFu16ll_BFu33()
{
  {
    init_simple_test("aS_BFu16ll_BFu33");
    static STRUCT_IF_C aS_BFu16ll_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(aS_BFu16ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_BFu33)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_BFu33.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_BFu33");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_BFu33");
    set_bf_and_test(lv, v3, 4, 0, 33, 1, "aS_BFu16ll_BFu33");
    set_bf_and_test(lv, v3, 4, 0, 33, hide_ull(1LL<<32), "aS_BFu16ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_BFu33, aS_BFu16ll_BFu33)
//============================================================================



static void Test_aS_BFu16ll_BFu7c()
{
  {
    init_simple_test("aS_BFu16ll_BFu7c");
    static STRUCT_IF_C aS_BFu16ll_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_BFu7c");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_BFu7c");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "aS_BFu16ll_BFu7c");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "aS_BFu16ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_BFu7c, aS_BFu16ll_BFu7c)
//============================================================================



static void Test_aS_BFu16ll_BFu7i()
{
  {
    init_simple_test("aS_BFu16ll_BFu7i");
    static STRUCT_IF_C aS_BFu16ll_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_BFu7i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_BFu7i");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "aS_BFu16ll_BFu7i");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "aS_BFu16ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_BFu7i, aS_BFu16ll_BFu7i)
//============================================================================



static void Test_aS_BFu16ll_BFu7ll()
{
  {
    init_simple_test("aS_BFu16ll_BFu7ll");
    static STRUCT_IF_C aS_BFu16ll_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_BFu7ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_BFu7ll");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "aS_BFu16ll_BFu7ll");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "aS_BFu16ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_BFu7ll, aS_BFu16ll_BFu7ll)
//============================================================================



static void Test_aS_BFu16ll_BFu7s()
{
  {
    init_simple_test("aS_BFu16ll_BFu7s");
    static STRUCT_IF_C aS_BFu16ll_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_BFu7s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_BFu7s");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "aS_BFu16ll_BFu7s");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "aS_BFu16ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_BFu7s, aS_BFu16ll_BFu7s)
//============================================================================



static void Test_aS_BFu16ll_BFu8c()
{
  {
    init_simple_test("aS_BFu16ll_BFu8c");
    static STRUCT_IF_C aS_BFu16ll_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_BFu8c");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_BFu8c");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "aS_BFu16ll_BFu8c");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "aS_BFu16ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_BFu8c, aS_BFu16ll_BFu8c)
//============================================================================



static void Test_aS_BFu16ll_BFu8i()
{
  {
    init_simple_test("aS_BFu16ll_BFu8i");
    static STRUCT_IF_C aS_BFu16ll_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_BFu8i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_BFu8i");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "aS_BFu16ll_BFu8i");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "aS_BFu16ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_BFu8i, aS_BFu16ll_BFu8i)
//============================================================================



static void Test_aS_BFu16ll_BFu8ll()
{
  {
    init_simple_test("aS_BFu16ll_BFu8ll");
    static STRUCT_IF_C aS_BFu16ll_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_BFu8ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_BFu8ll");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "aS_BFu16ll_BFu8ll");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "aS_BFu16ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_BFu8ll, aS_BFu16ll_BFu8ll)
//============================================================================



static void Test_aS_BFu16ll_BFu8s()
{
  {
    init_simple_test("aS_BFu16ll_BFu8s");
    static STRUCT_IF_C aS_BFu16ll_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_BFu8s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_BFu8s");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "aS_BFu16ll_BFu8s");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "aS_BFu16ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_BFu8s, aS_BFu16ll_BFu8s)
//============================================================================



static void Test_aS_BFu16ll_BFu9i()
{
  {
    init_simple_test("aS_BFu16ll_BFu9i");
    static STRUCT_IF_C aS_BFu16ll_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_BFu9i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_BFu9i");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "aS_BFu16ll_BFu9i");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "aS_BFu16ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_BFu9i, aS_BFu16ll_BFu9i)
//============================================================================



static void Test_aS_BFu16ll_BFu9ll()
{
  {
    init_simple_test("aS_BFu16ll_BFu9ll");
    static STRUCT_IF_C aS_BFu16ll_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_BFu9ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_BFu9ll");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "aS_BFu16ll_BFu9ll");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "aS_BFu16ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_BFu9ll, aS_BFu16ll_BFu9ll)
//============================================================================



static void Test_aS_BFu16ll_BFu9s()
{
  {
    init_simple_test("aS_BFu16ll_BFu9s");
    static STRUCT_IF_C aS_BFu16ll_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_BFu9s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_BFu9s");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "aS_BFu16ll_BFu9s");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "aS_BFu16ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_BFu9s, aS_BFu16ll_BFu9s)
//============================================================================



static void Test_aS_BFu16ll_C()
{
  {
    init_simple_test("aS_BFu16ll_C");
    static STRUCT_IF_C aS_BFu16ll_C lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_C)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_C.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_C");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_C");
    check_field_offset(lv, v3, 4, "aS_BFu16ll_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_C, aS_BFu16ll_C)
//============================================================================



static void Test_aS_BFu16ll_D()
{
  {
    init_simple_test("aS_BFu16ll_D");
    static STRUCT_IF_C aS_BFu16ll_D lv;
    check2(sizeof(lv), 12, "sizeof(aS_BFu16ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_D)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_D.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_D");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_D");
    check_field_offset(lv, v3, 4, "aS_BFu16ll_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_D, aS_BFu16ll_D)
//============================================================================



static void Test_aS_BFu16ll_F()
{
  {
    init_simple_test("aS_BFu16ll_F");
    static STRUCT_IF_C aS_BFu16ll_F lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu16ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_F)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_F.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_F");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_F");
    check_field_offset(lv, v3, 4, "aS_BFu16ll_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_F, aS_BFu16ll_F)
//============================================================================



static void Test_aS_BFu16ll_I()
{
  {
    init_simple_test("aS_BFu16ll_I");
    static STRUCT_IF_C aS_BFu16ll_I lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu16ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_I)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_I.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_I");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_I");
    check_field_offset(lv, v3, 4, "aS_BFu16ll_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_I, aS_BFu16ll_I)
//============================================================================



static void Test_aS_BFu16ll_Ip()
{
  {
    init_simple_test("aS_BFu16ll_Ip");
    static STRUCT_IF_C aS_BFu16ll_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_BFu16ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_Ip)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_Ip.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_Ip");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_Ip");
    check_field_offset(lv, v3, 4, "aS_BFu16ll_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_Ip, aS_BFu16ll_Ip)
//============================================================================



static void Test_aS_BFu16ll_L()
{
  {
    init_simple_test("aS_BFu16ll_L");
    static STRUCT_IF_C aS_BFu16ll_L lv;
    check2(sizeof(lv), 12, "sizeof(aS_BFu16ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_L)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_L.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_L");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_L");
    check_field_offset(lv, v3, 4, "aS_BFu16ll_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_L, aS_BFu16ll_L)
//============================================================================



static void Test_aS_BFu16ll_S()
{
  {
    init_simple_test("aS_BFu16ll_S");
    static STRUCT_IF_C aS_BFu16ll_S lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_S)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_S.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_S");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_S");
    check_field_offset(lv, v3, 4, "aS_BFu16ll_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_S, aS_BFu16ll_S)
//============================================================================



static void Test_aS_BFu16ll_Uc()
{
  {
    init_simple_test("aS_BFu16ll_Uc");
    static STRUCT_IF_C aS_BFu16ll_Uc lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_Uc)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_Uc.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_Uc");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_Uc");
    check_field_offset(lv, v3, 4, "aS_BFu16ll_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_Uc, aS_BFu16ll_Uc)
//============================================================================



static void Test_aS_BFu16ll_Ui()
{
  {
    init_simple_test("aS_BFu16ll_Ui");
    static STRUCT_IF_C aS_BFu16ll_Ui lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu16ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_Ui)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_Ui.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_Ui");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_Ui");
    check_field_offset(lv, v3, 4, "aS_BFu16ll_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_Ui, aS_BFu16ll_Ui)
//============================================================================



static void Test_aS_BFu16ll_Ul()
{
  {
    init_simple_test("aS_BFu16ll_Ul");
    static STRUCT_IF_C aS_BFu16ll_Ul lv;
    check2(sizeof(lv), 12, "sizeof(aS_BFu16ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_Ul)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_Ul.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_Ul");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_Ul");
    check_field_offset(lv, v3, 4, "aS_BFu16ll_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_Ul, aS_BFu16ll_Ul)
//============================================================================



static void Test_aS_BFu16ll_Us()
{
  {
    init_simple_test("aS_BFu16ll_Us");
    static STRUCT_IF_C aS_BFu16ll_Us lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_Us)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_Us.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_Us");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_Us");
    check_field_offset(lv, v3, 4, "aS_BFu16ll_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_Us, aS_BFu16ll_Us)
//============================================================================



static void Test_aS_BFu16ll_Vp()
{
  {
    init_simple_test("aS_BFu16ll_Vp");
    static STRUCT_IF_C aS_BFu16ll_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_BFu16ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16ll_Vp)");
    check_field_offset(lv, v1, 0, "aS_BFu16ll_Vp.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16ll_Vp");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16ll_Vp");
    check_field_offset(lv, v3, 4, "aS_BFu16ll_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16ll_Vp, aS_BFu16ll_Vp)
//============================================================================



static void Test_aS_BFu16s()
{
  {
    init_simple_test("aS_BFu16s");
    static STRUCT_IF_C aS_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_BFu16s.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s, aS_BFu16s)
//============================================================================



static void Test_aS_BFu16s_BFu15i()
{
  {
    init_simple_test("aS_BFu16s_BFu15i");
    static STRUCT_IF_C aS_BFu16s_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_BFu15i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_BFu15i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_BFu15i");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "aS_BFu16s_BFu15i");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "aS_BFu16s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_BFu15i, aS_BFu16s_BFu15i)
//============================================================================



static void Test_aS_BFu16s_BFu15ll()
{
  {
    init_simple_test("aS_BFu16s_BFu15ll");
    static STRUCT_IF_C aS_BFu16s_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_BFu15ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_BFu15ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_BFu15ll");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "aS_BFu16s_BFu15ll");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "aS_BFu16s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_BFu15ll, aS_BFu16s_BFu15ll)
//============================================================================



static void Test_aS_BFu16s_BFu15s()
{
  {
    init_simple_test("aS_BFu16s_BFu15s");
    static STRUCT_IF_C aS_BFu16s_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_BFu15s.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_BFu15s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_BFu15s");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "aS_BFu16s_BFu15s");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "aS_BFu16s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_BFu15s, aS_BFu16s_BFu15s)
//============================================================================



static void Test_aS_BFu16s_BFu16i()
{
  {
    init_simple_test("aS_BFu16s_BFu16i");
    static STRUCT_IF_C aS_BFu16s_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_BFu16i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aS_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_BFu16i, aS_BFu16s_BFu16i)
//============================================================================



static void Test_aS_BFu16s_BFu16ll()
{
  {
    init_simple_test("aS_BFu16s_BFu16ll");
    static STRUCT_IF_C aS_BFu16s_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_BFu16ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aS_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_BFu16ll, aS_BFu16s_BFu16ll)
//============================================================================



static void Test_aS_BFu16s_BFu16s()
{
  {
    init_simple_test("aS_BFu16s_BFu16s");
    static STRUCT_IF_C aS_BFu16s_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_BFu16s.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aS_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_BFu16s, aS_BFu16s_BFu16s)
//============================================================================



static void Test_aS_BFu16s_BFu17i()
{
  {
    init_simple_test("aS_BFu16s_BFu17i");
    static STRUCT_IF_C aS_BFu16s_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu16s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_BFu17i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_BFu17i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_BFu17i");
    set_bf_and_test(lv, v3, 4, 0, 17, 1, "aS_BFu16s_BFu17i");
    set_bf_and_test(lv, v3, 4, 0, 17, hide_ull(1LL<<16), "aS_BFu16s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_BFu17i, aS_BFu16s_BFu17i)
//============================================================================



static void Test_aS_BFu16s_BFu17ll()
{
  {
    init_simple_test("aS_BFu16s_BFu17ll");
    static STRUCT_IF_C aS_BFu16s_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu16s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_BFu17ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_BFu17ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_BFu17ll");
    set_bf_and_test(lv, v3, 4, 0, 17, 1, "aS_BFu16s_BFu17ll");
    set_bf_and_test(lv, v3, 4, 0, 17, hide_ull(1LL<<16), "aS_BFu16s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_BFu17ll, aS_BFu16s_BFu17ll)
//============================================================================



static void Test_aS_BFu16s_BFu1c()
{
  {
    init_simple_test("aS_BFu16s_BFu1c");
    static STRUCT_IF_C aS_BFu16s_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_BFu1c.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_BFu1c");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_BFu1c");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "aS_BFu16s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_BFu1c, aS_BFu16s_BFu1c)
//============================================================================



static void Test_aS_BFu16s_BFu1i()
{
  {
    init_simple_test("aS_BFu16s_BFu1i");
    static STRUCT_IF_C aS_BFu16s_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_BFu1i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_BFu1i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_BFu1i");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "aS_BFu16s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_BFu1i, aS_BFu16s_BFu1i)
//============================================================================



static void Test_aS_BFu16s_BFu1ll()
{
  {
    init_simple_test("aS_BFu16s_BFu1ll");
    static STRUCT_IF_C aS_BFu16s_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_BFu1ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_BFu1ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_BFu1ll");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "aS_BFu16s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_BFu1ll, aS_BFu16s_BFu1ll)
//============================================================================



static void Test_aS_BFu16s_BFu1s()
{
  {
    init_simple_test("aS_BFu16s_BFu1s");
    static STRUCT_IF_C aS_BFu16s_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_BFu1s.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_BFu1s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_BFu1s");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "aS_BFu16s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_BFu1s, aS_BFu16s_BFu1s)
//============================================================================



static void Test_aS_BFu16s_BFu31i()
{
  {
    init_simple_test("aS_BFu16s_BFu31i");
    static STRUCT_IF_C aS_BFu16s_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu16s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_BFu31i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_BFu31i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_BFu31i");
    set_bf_and_test(lv, v3, 4, 0, 31, 1, "aS_BFu16s_BFu31i");
    set_bf_and_test(lv, v3, 4, 0, 31, hide_ull(1LL<<30), "aS_BFu16s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_BFu31i, aS_BFu16s_BFu31i)
//============================================================================



static void Test_aS_BFu16s_BFu31ll()
{
  {
    init_simple_test("aS_BFu16s_BFu31ll");
    static STRUCT_IF_C aS_BFu16s_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu16s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_BFu31ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_BFu31ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_BFu31ll");
    set_bf_and_test(lv, v3, 4, 0, 31, 1, "aS_BFu16s_BFu31ll");
    set_bf_and_test(lv, v3, 4, 0, 31, hide_ull(1LL<<30), "aS_BFu16s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_BFu31ll, aS_BFu16s_BFu31ll)
//============================================================================



static void Test_aS_BFu16s_BFu32i()
{
  {
    init_simple_test("aS_BFu16s_BFu32i");
    static STRUCT_IF_C aS_BFu16s_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu16s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_BFu32i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_BFu32i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_BFu32i");
    set_bf_and_test(lv, v3, 4, 0, 32, 1, "aS_BFu16s_BFu32i");
    set_bf_and_test(lv, v3, 4, 0, 32, hide_ull(1LL<<31), "aS_BFu16s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_BFu32i, aS_BFu16s_BFu32i)
//============================================================================



static void Test_aS_BFu16s_BFu32ll()
{
  {
    init_simple_test("aS_BFu16s_BFu32ll");
    static STRUCT_IF_C aS_BFu16s_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu16s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_BFu32ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_BFu32ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_BFu32ll");
    set_bf_and_test(lv, v3, 4, 0, 32, 1, "aS_BFu16s_BFu32ll");
    set_bf_and_test(lv, v3, 4, 0, 32, hide_ull(1LL<<31), "aS_BFu16s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_BFu32ll, aS_BFu16s_BFu32ll)
//============================================================================



static void Test_aS_BFu16s_BFu33()
{
  {
    init_simple_test("aS_BFu16s_BFu33");
    static STRUCT_IF_C aS_BFu16s_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(aS_BFu16s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_BFu33)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_BFu33.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_BFu33");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_BFu33");
    set_bf_and_test(lv, v3, 4, 0, 33, 1, "aS_BFu16s_BFu33");
    set_bf_and_test(lv, v3, 4, 0, 33, hide_ull(1LL<<32), "aS_BFu16s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_BFu33, aS_BFu16s_BFu33)
//============================================================================



static void Test_aS_BFu16s_BFu7c()
{
  {
    init_simple_test("aS_BFu16s_BFu7c");
    static STRUCT_IF_C aS_BFu16s_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_BFu7c.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_BFu7c");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_BFu7c");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "aS_BFu16s_BFu7c");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "aS_BFu16s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_BFu7c, aS_BFu16s_BFu7c)
//============================================================================



static void Test_aS_BFu16s_BFu7i()
{
  {
    init_simple_test("aS_BFu16s_BFu7i");
    static STRUCT_IF_C aS_BFu16s_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_BFu7i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_BFu7i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_BFu7i");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "aS_BFu16s_BFu7i");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "aS_BFu16s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_BFu7i, aS_BFu16s_BFu7i)
//============================================================================



static void Test_aS_BFu16s_BFu7ll()
{
  {
    init_simple_test("aS_BFu16s_BFu7ll");
    static STRUCT_IF_C aS_BFu16s_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_BFu7ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_BFu7ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_BFu7ll");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "aS_BFu16s_BFu7ll");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "aS_BFu16s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_BFu7ll, aS_BFu16s_BFu7ll)
//============================================================================



static void Test_aS_BFu16s_BFu7s()
{
  {
    init_simple_test("aS_BFu16s_BFu7s");
    static STRUCT_IF_C aS_BFu16s_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_BFu7s.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_BFu7s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_BFu7s");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "aS_BFu16s_BFu7s");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "aS_BFu16s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_BFu7s, aS_BFu16s_BFu7s)
//============================================================================



static void Test_aS_BFu16s_BFu8c()
{
  {
    init_simple_test("aS_BFu16s_BFu8c");
    static STRUCT_IF_C aS_BFu16s_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_BFu8c.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_BFu8c");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_BFu8c");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "aS_BFu16s_BFu8c");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "aS_BFu16s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_BFu8c, aS_BFu16s_BFu8c)
//============================================================================



static void Test_aS_BFu16s_BFu8i()
{
  {
    init_simple_test("aS_BFu16s_BFu8i");
    static STRUCT_IF_C aS_BFu16s_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_BFu8i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_BFu8i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_BFu8i");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "aS_BFu16s_BFu8i");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "aS_BFu16s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_BFu8i, aS_BFu16s_BFu8i)
//============================================================================



static void Test_aS_BFu16s_BFu8ll()
{
  {
    init_simple_test("aS_BFu16s_BFu8ll");
    static STRUCT_IF_C aS_BFu16s_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_BFu8ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_BFu8ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_BFu8ll");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "aS_BFu16s_BFu8ll");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "aS_BFu16s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_BFu8ll, aS_BFu16s_BFu8ll)
//============================================================================



static void Test_aS_BFu16s_BFu8s()
{
  {
    init_simple_test("aS_BFu16s_BFu8s");
    static STRUCT_IF_C aS_BFu16s_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_BFu8s.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_BFu8s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_BFu8s");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "aS_BFu16s_BFu8s");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "aS_BFu16s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_BFu8s, aS_BFu16s_BFu8s)
//============================================================================



static void Test_aS_BFu16s_BFu9i()
{
  {
    init_simple_test("aS_BFu16s_BFu9i");
    static STRUCT_IF_C aS_BFu16s_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_BFu9i.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_BFu9i");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_BFu9i");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "aS_BFu16s_BFu9i");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "aS_BFu16s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_BFu9i, aS_BFu16s_BFu9i)
//============================================================================



static void Test_aS_BFu16s_BFu9ll()
{
  {
    init_simple_test("aS_BFu16s_BFu9ll");
    static STRUCT_IF_C aS_BFu16s_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_BFu9ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_BFu9ll");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_BFu9ll");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "aS_BFu16s_BFu9ll");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "aS_BFu16s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_BFu9ll, aS_BFu16s_BFu9ll)
//============================================================================



static void Test_aS_BFu16s_BFu9s()
{
  {
    init_simple_test("aS_BFu16s_BFu9s");
    static STRUCT_IF_C aS_BFu16s_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_BFu9s.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_BFu9s");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_BFu9s");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "aS_BFu16s_BFu9s");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "aS_BFu16s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_BFu9s, aS_BFu16s_BFu9s)
//============================================================================



static void Test_aS_BFu16s_C()
{
  {
    init_simple_test("aS_BFu16s_C");
    static STRUCT_IF_C aS_BFu16s_C lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16s_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_C)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_C.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_C");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_C");
    check_field_offset(lv, v3, 4, "aS_BFu16s_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_C, aS_BFu16s_C)
//============================================================================



static void Test_aS_BFu16s_D()
{
  {
    init_simple_test("aS_BFu16s_D");
    static STRUCT_IF_C aS_BFu16s_D lv;
    check2(sizeof(lv), 12, "sizeof(aS_BFu16s_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_D)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_D.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_D");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_D");
    check_field_offset(lv, v3, 4, "aS_BFu16s_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_D, aS_BFu16s_D)
//============================================================================



static void Test_aS_BFu16s_F()
{
  {
    init_simple_test("aS_BFu16s_F");
    static STRUCT_IF_C aS_BFu16s_F lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu16s_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_F)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_F.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_F");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_F");
    check_field_offset(lv, v3, 4, "aS_BFu16s_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_F, aS_BFu16s_F)
//============================================================================



static void Test_aS_BFu16s_I()
{
  {
    init_simple_test("aS_BFu16s_I");
    static STRUCT_IF_C aS_BFu16s_I lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu16s_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_I)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_I.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_I");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_I");
    check_field_offset(lv, v3, 4, "aS_BFu16s_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_I, aS_BFu16s_I)
//============================================================================



static void Test_aS_BFu16s_Ip()
{
  {
    init_simple_test("aS_BFu16s_Ip");
    static STRUCT_IF_C aS_BFu16s_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_BFu16s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_Ip)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_Ip.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_Ip");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_Ip");
    check_field_offset(lv, v3, 4, "aS_BFu16s_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_Ip, aS_BFu16s_Ip)
//============================================================================



static void Test_aS_BFu16s_L()
{
  {
    init_simple_test("aS_BFu16s_L");
    static STRUCT_IF_C aS_BFu16s_L lv;
    check2(sizeof(lv), 12, "sizeof(aS_BFu16s_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_L)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_L.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_L");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_L");
    check_field_offset(lv, v3, 4, "aS_BFu16s_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_L, aS_BFu16s_L)
//============================================================================



static void Test_aS_BFu16s_S()
{
  {
    init_simple_test("aS_BFu16s_S");
    static STRUCT_IF_C aS_BFu16s_S lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16s_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_S)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_S.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_S");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_S");
    check_field_offset(lv, v3, 4, "aS_BFu16s_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_S, aS_BFu16s_S)
//============================================================================



static void Test_aS_BFu16s_Uc()
{
  {
    init_simple_test("aS_BFu16s_Uc");
    static STRUCT_IF_C aS_BFu16s_Uc lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu16s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_Uc)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_Uc.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_Uc");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_Uc");
    check_field_offset(lv, v3, 4, "aS_BFu16s_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_Uc, aS_BFu16s_Uc)
//============================================================================



static void Test_aS_BFu16s_Ui()
{
  {
    init_simple_test("aS_BFu16s_Ui");
    static STRUCT_IF_C aS_BFu16s_Ui lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu16s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_Ui)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_Ui.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_Ui");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_Ui");
    check_field_offset(lv, v3, 4, "aS_BFu16s_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_Ui, aS_BFu16s_Ui)
//============================================================================



static void Test_aS_BFu16s_Ul()
{
  {
    init_simple_test("aS_BFu16s_Ul");
    static STRUCT_IF_C aS_BFu16s_Ul lv;
    check2(sizeof(lv), 12, "sizeof(aS_BFu16s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_Ul)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_Ul.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_Ul");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_Ul");
    check_field_offset(lv, v3, 4, "aS_BFu16s_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_Ul, aS_BFu16s_Ul)
//============================================================================



static void Test_aS_BFu16s_Us()
{
  {
    init_simple_test("aS_BFu16s_Us");
    static STRUCT_IF_C aS_BFu16s_Us lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu16s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_Us)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_Us.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_Us");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_Us");
    check_field_offset(lv, v3, 4, "aS_BFu16s_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_Us, aS_BFu16s_Us)
//============================================================================



static void Test_aS_BFu16s_Vp()
{
  {
    init_simple_test("aS_BFu16s_Vp");
    static STRUCT_IF_C aS_BFu16s_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_BFu16s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu16s_Vp)");
    check_field_offset(lv, v1, 0, "aS_BFu16s_Vp.v1");
    set_bf_and_test(lv, v2, 2, 0, 16, 1, "aS_BFu16s_Vp");
    set_bf_and_test(lv, v2, 2, 0, 16, hide_ull(1LL<<15), "aS_BFu16s_Vp");
    check_field_offset(lv, v3, 4, "aS_BFu16s_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu16s_Vp, aS_BFu16s_Vp)
//============================================================================



static void Test_aS_BFu17i()
{
  {
    init_simple_test("aS_BFu17i");
    static STRUCT_IF_C aS_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_BFu17i.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i, aS_BFu17i)
//============================================================================



static void Test_aS_BFu17i_BFu15i()
{
  {
    init_simple_test("aS_BFu17i_BFu15i");
    static STRUCT_IF_C aS_BFu17i_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu17i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_BFu15i.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_BFu15i");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_BFu15i");
    set_bf_and_test(lv, v3, 4, 1, 15, 1, "aS_BFu17i_BFu15i");
    set_bf_and_test(lv, v3, 4, 1, 15, hide_ull(1LL<<14), "aS_BFu17i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_BFu15i, aS_BFu17i_BFu15i)
//============================================================================



static void Test_aS_BFu17i_BFu15ll()
{
  {
    init_simple_test("aS_BFu17i_BFu15ll");
    static STRUCT_IF_C aS_BFu17i_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu17i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_BFu15ll");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_BFu15ll");
    set_bf_and_test(lv, v3, 4, 1, 15, 1, "aS_BFu17i_BFu15ll");
    set_bf_and_test(lv, v3, 4, 1, 15, hide_ull(1LL<<14), "aS_BFu17i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_BFu15ll, aS_BFu17i_BFu15ll)
//============================================================================



static void Test_aS_BFu17i_BFu15s()
{
  {
    init_simple_test("aS_BFu17i_BFu15s");
    static STRUCT_IF_C aS_BFu17i_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu17i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_BFu15s.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_BFu15s");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_BFu15s");
    set_bf_and_test(lv, v3, 4, 1, 15, 1, "aS_BFu17i_BFu15s");
    set_bf_and_test(lv, v3, 4, 1, 15, hide_ull(1LL<<14), "aS_BFu17i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_BFu15s, aS_BFu17i_BFu15s)
//============================================================================



static void Test_aS_BFu17i_BFu16i()
{
  {
    init_simple_test("aS_BFu17i_BFu16i");
    static STRUCT_IF_C aS_BFu17i_BFu16i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu17i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_BFu16i.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_BFu16i");
    set_bf_and_test(lv, v3, 4, 1, 16, 1, "aS_BFu17i_BFu16i");
    set_bf_and_test(lv, v3, 4, 1, 16, hide_ull(1LL<<15), "aS_BFu17i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_BFu16i, aS_BFu17i_BFu16i)
//============================================================================



static void Test_aS_BFu17i_BFu16ll()
{
  {
    init_simple_test("aS_BFu17i_BFu16ll");
    static STRUCT_IF_C aS_BFu17i_BFu16ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu17i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 1, 16, 1, "aS_BFu17i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 1, 16, hide_ull(1LL<<15), "aS_BFu17i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_BFu16ll, aS_BFu17i_BFu16ll)
//============================================================================



static void Test_aS_BFu17i_BFu16s()
{
  {
    init_simple_test("aS_BFu17i_BFu16s");
    static STRUCT_IF_C aS_BFu17i_BFu16s lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu17i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_BFu16s.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_BFu16s");
    set_bf_and_test(lv, v3, 4, 1, 16, 1, "aS_BFu17i_BFu16s");
    set_bf_and_test(lv, v3, 4, 1, 16, hide_ull(1LL<<15), "aS_BFu17i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_BFu16s, aS_BFu17i_BFu16s)
//============================================================================



static void Test_aS_BFu17i_BFu17i()
{
  {
    init_simple_test("aS_BFu17i_BFu17i");
    static STRUCT_IF_C aS_BFu17i_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu17i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_BFu17i.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_BFu17i");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 1, 17, 1, "aS_BFu17i_BFu17i");
    set_bf_and_test(lv, v3, 4, 1, 17, hide_ull(1LL<<16), "aS_BFu17i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_BFu17i, aS_BFu17i_BFu17i)
//============================================================================



static void Test_aS_BFu17i_BFu17ll()
{
  {
    init_simple_test("aS_BFu17i_BFu17ll");
    static STRUCT_IF_C aS_BFu17i_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu17i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 1, 17, 1, "aS_BFu17i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 1, 17, hide_ull(1LL<<16), "aS_BFu17i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_BFu17ll, aS_BFu17i_BFu17ll)
//============================================================================



static void Test_aS_BFu17i_BFu1c()
{
  {
    init_simple_test("aS_BFu17i_BFu1c");
    static STRUCT_IF_C aS_BFu17i_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu17i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_BFu1c.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_BFu1c");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_BFu1c");
    set_bf_and_test(lv, v3, 4, 1, 1, 1, "aS_BFu17i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_BFu1c, aS_BFu17i_BFu1c)
//============================================================================



static void Test_aS_BFu17i_BFu1i()
{
  {
    init_simple_test("aS_BFu17i_BFu1i");
    static STRUCT_IF_C aS_BFu17i_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu17i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_BFu1i.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_BFu1i");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_BFu1i");
    set_bf_and_test(lv, v3, 4, 1, 1, 1, "aS_BFu17i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_BFu1i, aS_BFu17i_BFu1i)
//============================================================================



static void Test_aS_BFu17i_BFu1ll()
{
  {
    init_simple_test("aS_BFu17i_BFu1ll");
    static STRUCT_IF_C aS_BFu17i_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu17i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_BFu1ll");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_BFu1ll");
    set_bf_and_test(lv, v3, 4, 1, 1, 1, "aS_BFu17i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_BFu1ll, aS_BFu17i_BFu1ll)
//============================================================================



static void Test_aS_BFu17i_BFu1s()
{
  {
    init_simple_test("aS_BFu17i_BFu1s");
    static STRUCT_IF_C aS_BFu17i_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu17i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_BFu1s.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_BFu1s");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_BFu1s");
    set_bf_and_test(lv, v3, 4, 1, 1, 1, "aS_BFu17i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_BFu1s, aS_BFu17i_BFu1s)
//============================================================================



static void Test_aS_BFu17i_BFu31i()
{
  {
    init_simple_test("aS_BFu17i_BFu31i");
    static STRUCT_IF_C aS_BFu17i_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu17i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_BFu31i.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_BFu31i");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_BFu31i");
    set_bf_and_test(lv, v3, 4, 1, 31, 1, "aS_BFu17i_BFu31i");
    set_bf_and_test(lv, v3, 4, 1, 31, hide_ull(1LL<<30), "aS_BFu17i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_BFu31i, aS_BFu17i_BFu31i)
//============================================================================



static void Test_aS_BFu17i_BFu31ll()
{
  {
    init_simple_test("aS_BFu17i_BFu31ll");
    static STRUCT_IF_C aS_BFu17i_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu17i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_BFu31ll");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_BFu31ll");
    set_bf_and_test(lv, v3, 4, 1, 31, 1, "aS_BFu17i_BFu31ll");
    set_bf_and_test(lv, v3, 4, 1, 31, hide_ull(1LL<<30), "aS_BFu17i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_BFu31ll, aS_BFu17i_BFu31ll)
//============================================================================



static void Test_aS_BFu17i_BFu32i()
{
  {
    init_simple_test("aS_BFu17i_BFu32i");
    static STRUCT_IF_C aS_BFu17i_BFu32i lv;
    check2(sizeof(lv), 9, "sizeof(aS_BFu17i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_BFu32i.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_BFu32i");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_BFu32i");
    set_bf_and_test(lv, v3, 4, 1, 32, 1, "aS_BFu17i_BFu32i");
    set_bf_and_test(lv, v3, 4, 1, 32, hide_ull(1LL<<31), "aS_BFu17i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_BFu32i, aS_BFu17i_BFu32i)
//============================================================================



static void Test_aS_BFu17i_BFu32ll()
{
  {
    init_simple_test("aS_BFu17i_BFu32ll");
    static STRUCT_IF_C aS_BFu17i_BFu32ll lv;
    check2(sizeof(lv), 9, "sizeof(aS_BFu17i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_BFu32ll");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_BFu32ll");
    set_bf_and_test(lv, v3, 4, 1, 32, 1, "aS_BFu17i_BFu32ll");
    set_bf_and_test(lv, v3, 4, 1, 32, hide_ull(1LL<<31), "aS_BFu17i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_BFu32ll, aS_BFu17i_BFu32ll)
//============================================================================



static void Test_aS_BFu17i_BFu33()
{
  {
    init_simple_test("aS_BFu17i_BFu33");
    static STRUCT_IF_C aS_BFu17i_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(aS_BFu17i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_BFu33)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_BFu33.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_BFu33");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_BFu33");
    set_bf_and_test(lv, v3, 4, 1, 33, 1, "aS_BFu17i_BFu33");
    set_bf_and_test(lv, v3, 4, 1, 33, hide_ull(1LL<<32), "aS_BFu17i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_BFu33, aS_BFu17i_BFu33)
//============================================================================



static void Test_aS_BFu17i_BFu7c()
{
  {
    init_simple_test("aS_BFu17i_BFu7c");
    static STRUCT_IF_C aS_BFu17i_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu17i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_BFu7c.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_BFu7c");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_BFu7c");
    set_bf_and_test(lv, v3, 4, 1, 7, 1, "aS_BFu17i_BFu7c");
    set_bf_and_test(lv, v3, 4, 1, 7, hide_ull(1LL<<6), "aS_BFu17i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_BFu7c, aS_BFu17i_BFu7c)
//============================================================================



static void Test_aS_BFu17i_BFu7i()
{
  {
    init_simple_test("aS_BFu17i_BFu7i");
    static STRUCT_IF_C aS_BFu17i_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu17i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_BFu7i.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_BFu7i");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_BFu7i");
    set_bf_and_test(lv, v3, 4, 1, 7, 1, "aS_BFu17i_BFu7i");
    set_bf_and_test(lv, v3, 4, 1, 7, hide_ull(1LL<<6), "aS_BFu17i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_BFu7i, aS_BFu17i_BFu7i)
//============================================================================



static void Test_aS_BFu17i_BFu7ll()
{
  {
    init_simple_test("aS_BFu17i_BFu7ll");
    static STRUCT_IF_C aS_BFu17i_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu17i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_BFu7ll");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_BFu7ll");
    set_bf_and_test(lv, v3, 4, 1, 7, 1, "aS_BFu17i_BFu7ll");
    set_bf_and_test(lv, v3, 4, 1, 7, hide_ull(1LL<<6), "aS_BFu17i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_BFu7ll, aS_BFu17i_BFu7ll)
//============================================================================



static void Test_aS_BFu17i_BFu7s()
{
  {
    init_simple_test("aS_BFu17i_BFu7s");
    static STRUCT_IF_C aS_BFu17i_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu17i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_BFu7s.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_BFu7s");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_BFu7s");
    set_bf_and_test(lv, v3, 4, 1, 7, 1, "aS_BFu17i_BFu7s");
    set_bf_and_test(lv, v3, 4, 1, 7, hide_ull(1LL<<6), "aS_BFu17i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_BFu7s, aS_BFu17i_BFu7s)
//============================================================================



static void Test_aS_BFu17i_BFu8c()
{
  {
    init_simple_test("aS_BFu17i_BFu8c");
    static STRUCT_IF_C aS_BFu17i_BFu8c lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu17i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_BFu8c.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_BFu8c");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_BFu8c");
    set_bf_and_test(lv, v3, 4, 1, 8, 1, "aS_BFu17i_BFu8c");
    set_bf_and_test(lv, v3, 4, 1, 8, hide_ull(1LL<<7), "aS_BFu17i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_BFu8c, aS_BFu17i_BFu8c)
//============================================================================



static void Test_aS_BFu17i_BFu8i()
{
  {
    init_simple_test("aS_BFu17i_BFu8i");
    static STRUCT_IF_C aS_BFu17i_BFu8i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu17i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_BFu8i.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_BFu8i");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_BFu8i");
    set_bf_and_test(lv, v3, 4, 1, 8, 1, "aS_BFu17i_BFu8i");
    set_bf_and_test(lv, v3, 4, 1, 8, hide_ull(1LL<<7), "aS_BFu17i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_BFu8i, aS_BFu17i_BFu8i)
//============================================================================



static void Test_aS_BFu17i_BFu8ll()
{
  {
    init_simple_test("aS_BFu17i_BFu8ll");
    static STRUCT_IF_C aS_BFu17i_BFu8ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu17i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_BFu8ll");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_BFu8ll");
    set_bf_and_test(lv, v3, 4, 1, 8, 1, "aS_BFu17i_BFu8ll");
    set_bf_and_test(lv, v3, 4, 1, 8, hide_ull(1LL<<7), "aS_BFu17i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_BFu8ll, aS_BFu17i_BFu8ll)
//============================================================================



static void Test_aS_BFu17i_BFu8s()
{
  {
    init_simple_test("aS_BFu17i_BFu8s");
    static STRUCT_IF_C aS_BFu17i_BFu8s lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu17i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_BFu8s.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_BFu8s");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_BFu8s");
    set_bf_and_test(lv, v3, 4, 1, 8, 1, "aS_BFu17i_BFu8s");
    set_bf_and_test(lv, v3, 4, 1, 8, hide_ull(1LL<<7), "aS_BFu17i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_BFu8s, aS_BFu17i_BFu8s)
//============================================================================



static void Test_aS_BFu17i_BFu9i()
{
  {
    init_simple_test("aS_BFu17i_BFu9i");
    static STRUCT_IF_C aS_BFu17i_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu17i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_BFu9i.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_BFu9i");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_BFu9i");
    set_bf_and_test(lv, v3, 4, 1, 9, 1, "aS_BFu17i_BFu9i");
    set_bf_and_test(lv, v3, 4, 1, 9, hide_ull(1LL<<8), "aS_BFu17i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_BFu9i, aS_BFu17i_BFu9i)
//============================================================================



static void Test_aS_BFu17i_BFu9ll()
{
  {
    init_simple_test("aS_BFu17i_BFu9ll");
    static STRUCT_IF_C aS_BFu17i_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu17i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_BFu9ll");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_BFu9ll");
    set_bf_and_test(lv, v3, 4, 1, 9, 1, "aS_BFu17i_BFu9ll");
    set_bf_and_test(lv, v3, 4, 1, 9, hide_ull(1LL<<8), "aS_BFu17i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_BFu9ll, aS_BFu17i_BFu9ll)
//============================================================================



static void Test_aS_BFu17i_BFu9s()
{
  {
    init_simple_test("aS_BFu17i_BFu9s");
    static STRUCT_IF_C aS_BFu17i_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu17i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_BFu9s.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_BFu9s");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_BFu9s");
    set_bf_and_test(lv, v3, 4, 1, 9, 1, "aS_BFu17i_BFu9s");
    set_bf_and_test(lv, v3, 4, 1, 9, hide_ull(1LL<<8), "aS_BFu17i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_BFu9s, aS_BFu17i_BFu9s)
//============================================================================



static void Test_aS_BFu17i_C()
{
  {
    init_simple_test("aS_BFu17i_C");
    static STRUCT_IF_C aS_BFu17i_C lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu17i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_C)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_C.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_C");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_C");
    check_field_offset(lv, v3, 5, "aS_BFu17i_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_C, aS_BFu17i_C)
//============================================================================



static void Test_aS_BFu17i_D()
{
  {
    init_simple_test("aS_BFu17i_D");
    static STRUCT_IF_C aS_BFu17i_D lv;
    check2(sizeof(lv), 13, "sizeof(aS_BFu17i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_D)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_D.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_D");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_D");
    check_field_offset(lv, v3, 5, "aS_BFu17i_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_D, aS_BFu17i_D)
//============================================================================



static void Test_aS_BFu17i_F()
{
  {
    init_simple_test("aS_BFu17i_F");
    static STRUCT_IF_C aS_BFu17i_F lv;
    check2(sizeof(lv), 9, "sizeof(aS_BFu17i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_F)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_F.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_F");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_F");
    check_field_offset(lv, v3, 5, "aS_BFu17i_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_F, aS_BFu17i_F)
//============================================================================



static void Test_aS_BFu17i_I()
{
  {
    init_simple_test("aS_BFu17i_I");
    static STRUCT_IF_C aS_BFu17i_I lv;
    check2(sizeof(lv), 9, "sizeof(aS_BFu17i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_I)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_I.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_I");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_I");
    check_field_offset(lv, v3, 5, "aS_BFu17i_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_I, aS_BFu17i_I)
//============================================================================



static void Test_aS_BFu17i_Ip()
{
  {
    init_simple_test("aS_BFu17i_Ip");
    static STRUCT_IF_C aS_BFu17i_Ip lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aS_BFu17i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_Ip)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_Ip.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_Ip");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_Ip");
    check_field_offset(lv, v3, 5, "aS_BFu17i_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_Ip, aS_BFu17i_Ip)
//============================================================================



static void Test_aS_BFu17i_L()
{
  {
    init_simple_test("aS_BFu17i_L");
    static STRUCT_IF_C aS_BFu17i_L lv;
    check2(sizeof(lv), 13, "sizeof(aS_BFu17i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_L)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_L.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_L");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_L");
    check_field_offset(lv, v3, 5, "aS_BFu17i_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_L, aS_BFu17i_L)
//============================================================================



static void Test_aS_BFu17i_S()
{
  {
    init_simple_test("aS_BFu17i_S");
    static STRUCT_IF_C aS_BFu17i_S lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu17i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_S)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_S.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_S");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_S");
    check_field_offset(lv, v3, 5, "aS_BFu17i_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_S, aS_BFu17i_S)
//============================================================================



static void Test_aS_BFu17i_Uc()
{
  {
    init_simple_test("aS_BFu17i_Uc");
    static STRUCT_IF_C aS_BFu17i_Uc lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu17i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_Uc)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_Uc.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_Uc");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_Uc");
    check_field_offset(lv, v3, 5, "aS_BFu17i_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_Uc, aS_BFu17i_Uc)
//============================================================================



static void Test_aS_BFu17i_Ui()
{
  {
    init_simple_test("aS_BFu17i_Ui");
    static STRUCT_IF_C aS_BFu17i_Ui lv;
    check2(sizeof(lv), 9, "sizeof(aS_BFu17i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_Ui)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_Ui.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_Ui");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_Ui");
    check_field_offset(lv, v3, 5, "aS_BFu17i_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_Ui, aS_BFu17i_Ui)
//============================================================================



static void Test_aS_BFu17i_Ul()
{
  {
    init_simple_test("aS_BFu17i_Ul");
    static STRUCT_IF_C aS_BFu17i_Ul lv;
    check2(sizeof(lv), 13, "sizeof(aS_BFu17i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_Ul)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_Ul.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_Ul");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_Ul");
    check_field_offset(lv, v3, 5, "aS_BFu17i_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_Ul, aS_BFu17i_Ul)
//============================================================================



static void Test_aS_BFu17i_Us()
{
  {
    init_simple_test("aS_BFu17i_Us");
    static STRUCT_IF_C aS_BFu17i_Us lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu17i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_Us)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_Us.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_Us");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_Us");
    check_field_offset(lv, v3, 5, "aS_BFu17i_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_Us, aS_BFu17i_Us)
//============================================================================



static void Test_aS_BFu17i_Vp()
{
  {
    init_simple_test("aS_BFu17i_Vp");
    static STRUCT_IF_C aS_BFu17i_Vp lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aS_BFu17i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17i_Vp)");
    check_field_offset(lv, v1, 0, "aS_BFu17i_Vp.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17i_Vp");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17i_Vp");
    check_field_offset(lv, v3, 5, "aS_BFu17i_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17i_Vp, aS_BFu17i_Vp)
//============================================================================



static void Test_aS_BFu17ll()
{
  {
    init_simple_test("aS_BFu17ll");
    static STRUCT_IF_C aS_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll, aS_BFu17ll)
//============================================================================



static void Test_aS_BFu17ll_BFu15i()
{
  {
    init_simple_test("aS_BFu17ll_BFu15i");
    static STRUCT_IF_C aS_BFu17ll_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu17ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_BFu15i");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_BFu15i");
    set_bf_and_test(lv, v3, 4, 1, 15, 1, "aS_BFu17ll_BFu15i");
    set_bf_and_test(lv, v3, 4, 1, 15, hide_ull(1LL<<14), "aS_BFu17ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_BFu15i, aS_BFu17ll_BFu15i)
//============================================================================



static void Test_aS_BFu17ll_BFu15ll()
{
  {
    init_simple_test("aS_BFu17ll_BFu15ll");
    static STRUCT_IF_C aS_BFu17ll_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu17ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_BFu15ll");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_BFu15ll");
    set_bf_and_test(lv, v3, 4, 1, 15, 1, "aS_BFu17ll_BFu15ll");
    set_bf_and_test(lv, v3, 4, 1, 15, hide_ull(1LL<<14), "aS_BFu17ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_BFu15ll, aS_BFu17ll_BFu15ll)
//============================================================================



static void Test_aS_BFu17ll_BFu15s()
{
  {
    init_simple_test("aS_BFu17ll_BFu15s");
    static STRUCT_IF_C aS_BFu17ll_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu17ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_BFu15s");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_BFu15s");
    set_bf_and_test(lv, v3, 4, 1, 15, 1, "aS_BFu17ll_BFu15s");
    set_bf_and_test(lv, v3, 4, 1, 15, hide_ull(1LL<<14), "aS_BFu17ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_BFu15s, aS_BFu17ll_BFu15s)
//============================================================================



static void Test_aS_BFu17ll_BFu16i()
{
  {
    init_simple_test("aS_BFu17ll_BFu16i");
    static STRUCT_IF_C aS_BFu17ll_BFu16i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu17ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 1, 16, 1, "aS_BFu17ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 1, 16, hide_ull(1LL<<15), "aS_BFu17ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_BFu16i, aS_BFu17ll_BFu16i)
//============================================================================



static void Test_aS_BFu17ll_BFu16ll()
{
  {
    init_simple_test("aS_BFu17ll_BFu16ll");
    static STRUCT_IF_C aS_BFu17ll_BFu16ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu17ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 1, 16, 1, "aS_BFu17ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 1, 16, hide_ull(1LL<<15), "aS_BFu17ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_BFu16ll, aS_BFu17ll_BFu16ll)
//============================================================================



static void Test_aS_BFu17ll_BFu16s()
{
  {
    init_simple_test("aS_BFu17ll_BFu16s");
    static STRUCT_IF_C aS_BFu17ll_BFu16s lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu17ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 1, 16, 1, "aS_BFu17ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 1, 16, hide_ull(1LL<<15), "aS_BFu17ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_BFu16s, aS_BFu17ll_BFu16s)
//============================================================================



static void Test_aS_BFu17ll_BFu17i()
{
  {
    init_simple_test("aS_BFu17ll_BFu17i");
    static STRUCT_IF_C aS_BFu17ll_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu17ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 1, 17, 1, "aS_BFu17ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 1, 17, hide_ull(1LL<<16), "aS_BFu17ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_BFu17i, aS_BFu17ll_BFu17i)
//============================================================================



static void Test_aS_BFu17ll_BFu17ll()
{
  {
    init_simple_test("aS_BFu17ll_BFu17ll");
    static STRUCT_IF_C aS_BFu17ll_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu17ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 1, 17, 1, "aS_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 1, 17, hide_ull(1LL<<16), "aS_BFu17ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_BFu17ll, aS_BFu17ll_BFu17ll)
//============================================================================



static void Test_aS_BFu17ll_BFu1c()
{
  {
    init_simple_test("aS_BFu17ll_BFu1c");
    static STRUCT_IF_C aS_BFu17ll_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu17ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_BFu1c");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_BFu1c");
    set_bf_and_test(lv, v3, 4, 1, 1, 1, "aS_BFu17ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_BFu1c, aS_BFu17ll_BFu1c)
//============================================================================



static void Test_aS_BFu17ll_BFu1i()
{
  {
    init_simple_test("aS_BFu17ll_BFu1i");
    static STRUCT_IF_C aS_BFu17ll_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu17ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_BFu1i");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_BFu1i");
    set_bf_and_test(lv, v3, 4, 1, 1, 1, "aS_BFu17ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_BFu1i, aS_BFu17ll_BFu1i)
//============================================================================



static void Test_aS_BFu17ll_BFu1ll()
{
  {
    init_simple_test("aS_BFu17ll_BFu1ll");
    static STRUCT_IF_C aS_BFu17ll_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu17ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_BFu1ll");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_BFu1ll");
    set_bf_and_test(lv, v3, 4, 1, 1, 1, "aS_BFu17ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_BFu1ll, aS_BFu17ll_BFu1ll)
//============================================================================



static void Test_aS_BFu17ll_BFu1s()
{
  {
    init_simple_test("aS_BFu17ll_BFu1s");
    static STRUCT_IF_C aS_BFu17ll_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu17ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_BFu1s");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_BFu1s");
    set_bf_and_test(lv, v3, 4, 1, 1, 1, "aS_BFu17ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_BFu1s, aS_BFu17ll_BFu1s)
//============================================================================



static void Test_aS_BFu17ll_BFu31i()
{
  {
    init_simple_test("aS_BFu17ll_BFu31i");
    static STRUCT_IF_C aS_BFu17ll_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu17ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_BFu31i");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_BFu31i");
    set_bf_and_test(lv, v3, 4, 1, 31, 1, "aS_BFu17ll_BFu31i");
    set_bf_and_test(lv, v3, 4, 1, 31, hide_ull(1LL<<30), "aS_BFu17ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_BFu31i, aS_BFu17ll_BFu31i)
//============================================================================



static void Test_aS_BFu17ll_BFu31ll()
{
  {
    init_simple_test("aS_BFu17ll_BFu31ll");
    static STRUCT_IF_C aS_BFu17ll_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu17ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_BFu31ll");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_BFu31ll");
    set_bf_and_test(lv, v3, 4, 1, 31, 1, "aS_BFu17ll_BFu31ll");
    set_bf_and_test(lv, v3, 4, 1, 31, hide_ull(1LL<<30), "aS_BFu17ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_BFu31ll, aS_BFu17ll_BFu31ll)
//============================================================================



static void Test_aS_BFu17ll_BFu32i()
{
  {
    init_simple_test("aS_BFu17ll_BFu32i");
    static STRUCT_IF_C aS_BFu17ll_BFu32i lv;
    check2(sizeof(lv), 9, "sizeof(aS_BFu17ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_BFu32i");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_BFu32i");
    set_bf_and_test(lv, v3, 4, 1, 32, 1, "aS_BFu17ll_BFu32i");
    set_bf_and_test(lv, v3, 4, 1, 32, hide_ull(1LL<<31), "aS_BFu17ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_BFu32i, aS_BFu17ll_BFu32i)
//============================================================================



static void Test_aS_BFu17ll_BFu32ll()
{
  {
    init_simple_test("aS_BFu17ll_BFu32ll");
    static STRUCT_IF_C aS_BFu17ll_BFu32ll lv;
    check2(sizeof(lv), 9, "sizeof(aS_BFu17ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_BFu32ll");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_BFu32ll");
    set_bf_and_test(lv, v3, 4, 1, 32, 1, "aS_BFu17ll_BFu32ll");
    set_bf_and_test(lv, v3, 4, 1, 32, hide_ull(1LL<<31), "aS_BFu17ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_BFu32ll, aS_BFu17ll_BFu32ll)
//============================================================================



static void Test_aS_BFu17ll_BFu33()
{
  {
    init_simple_test("aS_BFu17ll_BFu33");
    static STRUCT_IF_C aS_BFu17ll_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(aS_BFu17ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_BFu33)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_BFu33.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_BFu33");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_BFu33");
    set_bf_and_test(lv, v3, 4, 1, 33, 1, "aS_BFu17ll_BFu33");
    set_bf_and_test(lv, v3, 4, 1, 33, hide_ull(1LL<<32), "aS_BFu17ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_BFu33, aS_BFu17ll_BFu33)
//============================================================================



static void Test_aS_BFu17ll_BFu7c()
{
  {
    init_simple_test("aS_BFu17ll_BFu7c");
    static STRUCT_IF_C aS_BFu17ll_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu17ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_BFu7c");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_BFu7c");
    set_bf_and_test(lv, v3, 4, 1, 7, 1, "aS_BFu17ll_BFu7c");
    set_bf_and_test(lv, v3, 4, 1, 7, hide_ull(1LL<<6), "aS_BFu17ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_BFu7c, aS_BFu17ll_BFu7c)
//============================================================================



static void Test_aS_BFu17ll_BFu7i()
{
  {
    init_simple_test("aS_BFu17ll_BFu7i");
    static STRUCT_IF_C aS_BFu17ll_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu17ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_BFu7i");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_BFu7i");
    set_bf_and_test(lv, v3, 4, 1, 7, 1, "aS_BFu17ll_BFu7i");
    set_bf_and_test(lv, v3, 4, 1, 7, hide_ull(1LL<<6), "aS_BFu17ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_BFu7i, aS_BFu17ll_BFu7i)
//============================================================================



static void Test_aS_BFu17ll_BFu7ll()
{
  {
    init_simple_test("aS_BFu17ll_BFu7ll");
    static STRUCT_IF_C aS_BFu17ll_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu17ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_BFu7ll");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_BFu7ll");
    set_bf_and_test(lv, v3, 4, 1, 7, 1, "aS_BFu17ll_BFu7ll");
    set_bf_and_test(lv, v3, 4, 1, 7, hide_ull(1LL<<6), "aS_BFu17ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_BFu7ll, aS_BFu17ll_BFu7ll)
//============================================================================



static void Test_aS_BFu17ll_BFu7s()
{
  {
    init_simple_test("aS_BFu17ll_BFu7s");
    static STRUCT_IF_C aS_BFu17ll_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu17ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_BFu7s");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_BFu7s");
    set_bf_and_test(lv, v3, 4, 1, 7, 1, "aS_BFu17ll_BFu7s");
    set_bf_and_test(lv, v3, 4, 1, 7, hide_ull(1LL<<6), "aS_BFu17ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_BFu7s, aS_BFu17ll_BFu7s)
//============================================================================



static void Test_aS_BFu17ll_BFu8c()
{
  {
    init_simple_test("aS_BFu17ll_BFu8c");
    static STRUCT_IF_C aS_BFu17ll_BFu8c lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu17ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_BFu8c");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_BFu8c");
    set_bf_and_test(lv, v3, 4, 1, 8, 1, "aS_BFu17ll_BFu8c");
    set_bf_and_test(lv, v3, 4, 1, 8, hide_ull(1LL<<7), "aS_BFu17ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_BFu8c, aS_BFu17ll_BFu8c)
//============================================================================



static void Test_aS_BFu17ll_BFu8i()
{
  {
    init_simple_test("aS_BFu17ll_BFu8i");
    static STRUCT_IF_C aS_BFu17ll_BFu8i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu17ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_BFu8i");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_BFu8i");
    set_bf_and_test(lv, v3, 4, 1, 8, 1, "aS_BFu17ll_BFu8i");
    set_bf_and_test(lv, v3, 4, 1, 8, hide_ull(1LL<<7), "aS_BFu17ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_BFu8i, aS_BFu17ll_BFu8i)
//============================================================================



static void Test_aS_BFu17ll_BFu8ll()
{
  {
    init_simple_test("aS_BFu17ll_BFu8ll");
    static STRUCT_IF_C aS_BFu17ll_BFu8ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu17ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_BFu8ll");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_BFu8ll");
    set_bf_and_test(lv, v3, 4, 1, 8, 1, "aS_BFu17ll_BFu8ll");
    set_bf_and_test(lv, v3, 4, 1, 8, hide_ull(1LL<<7), "aS_BFu17ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_BFu8ll, aS_BFu17ll_BFu8ll)
//============================================================================



static void Test_aS_BFu17ll_BFu8s()
{
  {
    init_simple_test("aS_BFu17ll_BFu8s");
    static STRUCT_IF_C aS_BFu17ll_BFu8s lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu17ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_BFu8s");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_BFu8s");
    set_bf_and_test(lv, v3, 4, 1, 8, 1, "aS_BFu17ll_BFu8s");
    set_bf_and_test(lv, v3, 4, 1, 8, hide_ull(1LL<<7), "aS_BFu17ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_BFu8s, aS_BFu17ll_BFu8s)
//============================================================================



static void Test_aS_BFu17ll_BFu9i()
{
  {
    init_simple_test("aS_BFu17ll_BFu9i");
    static STRUCT_IF_C aS_BFu17ll_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu17ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_BFu9i");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_BFu9i");
    set_bf_and_test(lv, v3, 4, 1, 9, 1, "aS_BFu17ll_BFu9i");
    set_bf_and_test(lv, v3, 4, 1, 9, hide_ull(1LL<<8), "aS_BFu17ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_BFu9i, aS_BFu17ll_BFu9i)
//============================================================================



static void Test_aS_BFu17ll_BFu9ll()
{
  {
    init_simple_test("aS_BFu17ll_BFu9ll");
    static STRUCT_IF_C aS_BFu17ll_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu17ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_BFu9ll");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_BFu9ll");
    set_bf_and_test(lv, v3, 4, 1, 9, 1, "aS_BFu17ll_BFu9ll");
    set_bf_and_test(lv, v3, 4, 1, 9, hide_ull(1LL<<8), "aS_BFu17ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_BFu9ll, aS_BFu17ll_BFu9ll)
//============================================================================



static void Test_aS_BFu17ll_BFu9s()
{
  {
    init_simple_test("aS_BFu17ll_BFu9s");
    static STRUCT_IF_C aS_BFu17ll_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu17ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_BFu9s");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_BFu9s");
    set_bf_and_test(lv, v3, 4, 1, 9, 1, "aS_BFu17ll_BFu9s");
    set_bf_and_test(lv, v3, 4, 1, 9, hide_ull(1LL<<8), "aS_BFu17ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_BFu9s, aS_BFu17ll_BFu9s)
//============================================================================



static void Test_aS_BFu17ll_C()
{
  {
    init_simple_test("aS_BFu17ll_C");
    static STRUCT_IF_C aS_BFu17ll_C lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu17ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_C)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_C.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_C");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_C");
    check_field_offset(lv, v3, 5, "aS_BFu17ll_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_C, aS_BFu17ll_C)
//============================================================================



static void Test_aS_BFu17ll_D()
{
  {
    init_simple_test("aS_BFu17ll_D");
    static STRUCT_IF_C aS_BFu17ll_D lv;
    check2(sizeof(lv), 13, "sizeof(aS_BFu17ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_D)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_D.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_D");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_D");
    check_field_offset(lv, v3, 5, "aS_BFu17ll_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_D, aS_BFu17ll_D)
//============================================================================



static void Test_aS_BFu17ll_F()
{
  {
    init_simple_test("aS_BFu17ll_F");
    static STRUCT_IF_C aS_BFu17ll_F lv;
    check2(sizeof(lv), 9, "sizeof(aS_BFu17ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_F)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_F.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_F");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_F");
    check_field_offset(lv, v3, 5, "aS_BFu17ll_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_F, aS_BFu17ll_F)
//============================================================================



static void Test_aS_BFu17ll_I()
{
  {
    init_simple_test("aS_BFu17ll_I");
    static STRUCT_IF_C aS_BFu17ll_I lv;
    check2(sizeof(lv), 9, "sizeof(aS_BFu17ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_I)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_I.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_I");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_I");
    check_field_offset(lv, v3, 5, "aS_BFu17ll_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_I, aS_BFu17ll_I)
//============================================================================



static void Test_aS_BFu17ll_Ip()
{
  {
    init_simple_test("aS_BFu17ll_Ip");
    static STRUCT_IF_C aS_BFu17ll_Ip lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aS_BFu17ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_Ip)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_Ip.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_Ip");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_Ip");
    check_field_offset(lv, v3, 5, "aS_BFu17ll_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_Ip, aS_BFu17ll_Ip)
//============================================================================



static void Test_aS_BFu17ll_L()
{
  {
    init_simple_test("aS_BFu17ll_L");
    static STRUCT_IF_C aS_BFu17ll_L lv;
    check2(sizeof(lv), 13, "sizeof(aS_BFu17ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_L)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_L.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_L");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_L");
    check_field_offset(lv, v3, 5, "aS_BFu17ll_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_L, aS_BFu17ll_L)
//============================================================================



static void Test_aS_BFu17ll_S()
{
  {
    init_simple_test("aS_BFu17ll_S");
    static STRUCT_IF_C aS_BFu17ll_S lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu17ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_S)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_S.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_S");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_S");
    check_field_offset(lv, v3, 5, "aS_BFu17ll_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_S, aS_BFu17ll_S)
//============================================================================



static void Test_aS_BFu17ll_Uc()
{
  {
    init_simple_test("aS_BFu17ll_Uc");
    static STRUCT_IF_C aS_BFu17ll_Uc lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu17ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_Uc)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_Uc.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_Uc");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_Uc");
    check_field_offset(lv, v3, 5, "aS_BFu17ll_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_Uc, aS_BFu17ll_Uc)
//============================================================================



static void Test_aS_BFu17ll_Ui()
{
  {
    init_simple_test("aS_BFu17ll_Ui");
    static STRUCT_IF_C aS_BFu17ll_Ui lv;
    check2(sizeof(lv), 9, "sizeof(aS_BFu17ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_Ui)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_Ui.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_Ui");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_Ui");
    check_field_offset(lv, v3, 5, "aS_BFu17ll_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_Ui, aS_BFu17ll_Ui)
//============================================================================



static void Test_aS_BFu17ll_Ul()
{
  {
    init_simple_test("aS_BFu17ll_Ul");
    static STRUCT_IF_C aS_BFu17ll_Ul lv;
    check2(sizeof(lv), 13, "sizeof(aS_BFu17ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_Ul)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_Ul.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_Ul");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_Ul");
    check_field_offset(lv, v3, 5, "aS_BFu17ll_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_Ul, aS_BFu17ll_Ul)
//============================================================================



static void Test_aS_BFu17ll_Us()
{
  {
    init_simple_test("aS_BFu17ll_Us");
    static STRUCT_IF_C aS_BFu17ll_Us lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu17ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_Us)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_Us.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_Us");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_Us");
    check_field_offset(lv, v3, 5, "aS_BFu17ll_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_Us, aS_BFu17ll_Us)
//============================================================================



static void Test_aS_BFu17ll_Vp()
{
  {
    init_simple_test("aS_BFu17ll_Vp");
    static STRUCT_IF_C aS_BFu17ll_Vp lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aS_BFu17ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu17ll_Vp)");
    check_field_offset(lv, v1, 0, "aS_BFu17ll_Vp.v1");
    set_bf_and_test(lv, v2, 2, 0, 17, 1, "aS_BFu17ll_Vp");
    set_bf_and_test(lv, v2, 2, 0, 17, hide_ull(1LL<<16), "aS_BFu17ll_Vp");
    check_field_offset(lv, v3, 5, "aS_BFu17ll_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu17ll_Vp, aS_BFu17ll_Vp)
//============================================================================



static void Test_aS_BFu1c()
{
  {
    init_simple_test("aS_BFu1c");
    static STRUCT_IF_C aS_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_BFu1c.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c, aS_BFu1c)
//============================================================================



static void Test_aS_BFu1c_BFu15i()
{
  {
    init_simple_test("aS_BFu1c_BFu15i");
    static STRUCT_IF_C aS_BFu1c_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_BFu15i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_BFu15i");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "aS_BFu1c_BFu15i");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "aS_BFu1c_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_BFu15i, aS_BFu1c_BFu15i)
//============================================================================



static void Test_aS_BFu1c_BFu15ll()
{
  {
    init_simple_test("aS_BFu1c_BFu15ll");
    static STRUCT_IF_C aS_BFu1c_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_BFu15ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_BFu15ll");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "aS_BFu1c_BFu15ll");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "aS_BFu1c_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_BFu15ll, aS_BFu1c_BFu15ll)
//============================================================================



static void Test_aS_BFu1c_BFu15s()
{
  {
    init_simple_test("aS_BFu1c_BFu15s");
    static STRUCT_IF_C aS_BFu1c_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_BFu15s.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_BFu15s");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "aS_BFu1c_BFu15s");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "aS_BFu1c_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_BFu15s, aS_BFu1c_BFu15s)
//============================================================================



static void Test_aS_BFu1c_BFu16i()
{
  {
    init_simple_test("aS_BFu1c_BFu16i");
    static STRUCT_IF_C aS_BFu1c_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu1c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_BFu16i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_BFu16i");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "aS_BFu1c_BFu16i");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "aS_BFu1c_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_BFu16i, aS_BFu1c_BFu16i)
//============================================================================



static void Test_aS_BFu1c_BFu16ll()
{
  {
    init_simple_test("aS_BFu1c_BFu16ll");
    static STRUCT_IF_C aS_BFu1c_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu1c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_BFu16ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_BFu16ll");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "aS_BFu1c_BFu16ll");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "aS_BFu1c_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_BFu16ll, aS_BFu1c_BFu16ll)
//============================================================================



static void Test_aS_BFu1c_BFu16s()
{
  {
    init_simple_test("aS_BFu1c_BFu16s");
    static STRUCT_IF_C aS_BFu1c_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu1c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_BFu16s.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_BFu16s");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "aS_BFu1c_BFu16s");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "aS_BFu1c_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_BFu16s, aS_BFu1c_BFu16s)
//============================================================================



static void Test_aS_BFu1c_BFu17i()
{
  {
    init_simple_test("aS_BFu1c_BFu17i");
    static STRUCT_IF_C aS_BFu1c_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu1c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_BFu17i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_BFu17i");
    set_bf_and_test(lv, v3, 2, 1, 17, 1, "aS_BFu1c_BFu17i");
    set_bf_and_test(lv, v3, 2, 1, 17, hide_ull(1LL<<16), "aS_BFu1c_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_BFu17i, aS_BFu1c_BFu17i)
//============================================================================



static void Test_aS_BFu1c_BFu17ll()
{
  {
    init_simple_test("aS_BFu1c_BFu17ll");
    static STRUCT_IF_C aS_BFu1c_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu1c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_BFu17ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_BFu17ll");
    set_bf_and_test(lv, v3, 2, 1, 17, 1, "aS_BFu1c_BFu17ll");
    set_bf_and_test(lv, v3, 2, 1, 17, hide_ull(1LL<<16), "aS_BFu1c_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_BFu17ll, aS_BFu1c_BFu17ll)
//============================================================================



static void Test_aS_BFu1c_BFu1c()
{
  {
    init_simple_test("aS_BFu1c_BFu1c");
    static STRUCT_IF_C aS_BFu1c_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_BFu1c.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_BFu1c");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aS_BFu1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_BFu1c, aS_BFu1c_BFu1c)
//============================================================================



static void Test_aS_BFu1c_BFu1i()
{
  {
    init_simple_test("aS_BFu1c_BFu1i");
    static STRUCT_IF_C aS_BFu1c_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_BFu1i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_BFu1i");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aS_BFu1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_BFu1i, aS_BFu1c_BFu1i)
//============================================================================



static void Test_aS_BFu1c_BFu1ll()
{
  {
    init_simple_test("aS_BFu1c_BFu1ll");
    static STRUCT_IF_C aS_BFu1c_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_BFu1ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_BFu1ll");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aS_BFu1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_BFu1ll, aS_BFu1c_BFu1ll)
//============================================================================



static void Test_aS_BFu1c_BFu1s()
{
  {
    init_simple_test("aS_BFu1c_BFu1s");
    static STRUCT_IF_C aS_BFu1c_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_BFu1s.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_BFu1s");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aS_BFu1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_BFu1s, aS_BFu1c_BFu1s)
//============================================================================



static void Test_aS_BFu1c_BFu31i()
{
  {
    init_simple_test("aS_BFu1c_BFu31i");
    static STRUCT_IF_C aS_BFu1c_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu1c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_BFu31i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_BFu31i");
    set_bf_and_test(lv, v3, 2, 1, 31, 1, "aS_BFu1c_BFu31i");
    set_bf_and_test(lv, v3, 2, 1, 31, hide_ull(1LL<<30), "aS_BFu1c_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_BFu31i, aS_BFu1c_BFu31i)
//============================================================================



static void Test_aS_BFu1c_BFu31ll()
{
  {
    init_simple_test("aS_BFu1c_BFu31ll");
    static STRUCT_IF_C aS_BFu1c_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu1c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_BFu31ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_BFu31ll");
    set_bf_and_test(lv, v3, 2, 1, 31, 1, "aS_BFu1c_BFu31ll");
    set_bf_and_test(lv, v3, 2, 1, 31, hide_ull(1LL<<30), "aS_BFu1c_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_BFu31ll, aS_BFu1c_BFu31ll)
//============================================================================



static void Test_aS_BFu1c_BFu32i()
{
  {
    init_simple_test("aS_BFu1c_BFu32i");
    static STRUCT_IF_C aS_BFu1c_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu1c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_BFu32i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_BFu32i");
    set_bf_and_test(lv, v3, 2, 1, 32, 1, "aS_BFu1c_BFu32i");
    set_bf_and_test(lv, v3, 2, 1, 32, hide_ull(1LL<<31), "aS_BFu1c_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_BFu32i, aS_BFu1c_BFu32i)
//============================================================================



static void Test_aS_BFu1c_BFu32ll()
{
  {
    init_simple_test("aS_BFu1c_BFu32ll");
    static STRUCT_IF_C aS_BFu1c_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu1c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_BFu32ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_BFu32ll");
    set_bf_and_test(lv, v3, 2, 1, 32, 1, "aS_BFu1c_BFu32ll");
    set_bf_and_test(lv, v3, 2, 1, 32, hide_ull(1LL<<31), "aS_BFu1c_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_BFu32ll, aS_BFu1c_BFu32ll)
//============================================================================



static void Test_aS_BFu1c_BFu33()
{
  {
    init_simple_test("aS_BFu1c_BFu33");
    static STRUCT_IF_C aS_BFu1c_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu1c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_BFu33)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_BFu33.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_BFu33");
    set_bf_and_test(lv, v3, 2, 1, 33, 1, "aS_BFu1c_BFu33");
    set_bf_and_test(lv, v3, 2, 1, 33, hide_ull(1LL<<32), "aS_BFu1c_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_BFu33, aS_BFu1c_BFu33)
//============================================================================



static void Test_aS_BFu1c_BFu7c()
{
  {
    init_simple_test("aS_BFu1c_BFu7c");
    static STRUCT_IF_C aS_BFu1c_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_BFu7c.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_BFu7c");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aS_BFu1c_BFu7c");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aS_BFu1c_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_BFu7c, aS_BFu1c_BFu7c)
//============================================================================



static void Test_aS_BFu1c_BFu7i()
{
  {
    init_simple_test("aS_BFu1c_BFu7i");
    static STRUCT_IF_C aS_BFu1c_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_BFu7i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_BFu7i");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aS_BFu1c_BFu7i");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aS_BFu1c_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_BFu7i, aS_BFu1c_BFu7i)
//============================================================================



static void Test_aS_BFu1c_BFu7ll()
{
  {
    init_simple_test("aS_BFu1c_BFu7ll");
    static STRUCT_IF_C aS_BFu1c_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_BFu7ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_BFu7ll");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aS_BFu1c_BFu7ll");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aS_BFu1c_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_BFu7ll, aS_BFu1c_BFu7ll)
//============================================================================



static void Test_aS_BFu1c_BFu7s()
{
  {
    init_simple_test("aS_BFu1c_BFu7s");
    static STRUCT_IF_C aS_BFu1c_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_BFu7s.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_BFu7s");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aS_BFu1c_BFu7s");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aS_BFu1c_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_BFu7s, aS_BFu1c_BFu7s)
//============================================================================



static void Test_aS_BFu1c_BFu8c()
{
  {
    init_simple_test("aS_BFu1c_BFu8c");
    static STRUCT_IF_C aS_BFu1c_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_BFu8c.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_BFu8c");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aS_BFu1c_BFu8c");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aS_BFu1c_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_BFu8c, aS_BFu1c_BFu8c)
//============================================================================



static void Test_aS_BFu1c_BFu8i()
{
  {
    init_simple_test("aS_BFu1c_BFu8i");
    static STRUCT_IF_C aS_BFu1c_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_BFu8i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_BFu8i");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aS_BFu1c_BFu8i");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aS_BFu1c_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_BFu8i, aS_BFu1c_BFu8i)
//============================================================================



static void Test_aS_BFu1c_BFu8ll()
{
  {
    init_simple_test("aS_BFu1c_BFu8ll");
    static STRUCT_IF_C aS_BFu1c_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_BFu8ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_BFu8ll");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aS_BFu1c_BFu8ll");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aS_BFu1c_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_BFu8ll, aS_BFu1c_BFu8ll)
//============================================================================



static void Test_aS_BFu1c_BFu8s()
{
  {
    init_simple_test("aS_BFu1c_BFu8s");
    static STRUCT_IF_C aS_BFu1c_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_BFu8s.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_BFu8s");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aS_BFu1c_BFu8s");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aS_BFu1c_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_BFu8s, aS_BFu1c_BFu8s)
//============================================================================



static void Test_aS_BFu1c_BFu9i()
{
  {
    init_simple_test("aS_BFu1c_BFu9i");
    static STRUCT_IF_C aS_BFu1c_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_BFu9i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_BFu9i");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "aS_BFu1c_BFu9i");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "aS_BFu1c_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_BFu9i, aS_BFu1c_BFu9i)
//============================================================================



static void Test_aS_BFu1c_BFu9ll()
{
  {
    init_simple_test("aS_BFu1c_BFu9ll");
    static STRUCT_IF_C aS_BFu1c_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_BFu9ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_BFu9ll");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "aS_BFu1c_BFu9ll");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "aS_BFu1c_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_BFu9ll, aS_BFu1c_BFu9ll)
//============================================================================



static void Test_aS_BFu1c_BFu9s()
{
  {
    init_simple_test("aS_BFu1c_BFu9s");
    static STRUCT_IF_C aS_BFu1c_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_BFu9s.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_BFu9s");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "aS_BFu1c_BFu9s");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "aS_BFu1c_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_BFu9s, aS_BFu1c_BFu9s)
//============================================================================



static void Test_aS_BFu1c_C()
{
  {
    init_simple_test("aS_BFu1c_C");
    static STRUCT_IF_C aS_BFu1c_C lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1c_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_C)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_C.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_C");
    check_field_offset(lv, v3, 3, "aS_BFu1c_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_C, aS_BFu1c_C)
//============================================================================



static void Test_aS_BFu1c_D()
{
  {
    init_simple_test("aS_BFu1c_D");
    static STRUCT_IF_C aS_BFu1c_D lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu1c_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_D)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_D.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_D");
    check_field_offset(lv, v3, 3, "aS_BFu1c_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_D, aS_BFu1c_D)
//============================================================================



static void Test_aS_BFu1c_F()
{
  {
    init_simple_test("aS_BFu1c_F");
    static STRUCT_IF_C aS_BFu1c_F lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu1c_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_F)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_F.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_F");
    check_field_offset(lv, v3, 3, "aS_BFu1c_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_F, aS_BFu1c_F)
//============================================================================



static void Test_aS_BFu1c_I()
{
  {
    init_simple_test("aS_BFu1c_I");
    static STRUCT_IF_C aS_BFu1c_I lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu1c_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_I)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_I.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_I");
    check_field_offset(lv, v3, 3, "aS_BFu1c_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_I, aS_BFu1c_I)
//============================================================================



static void Test_aS_BFu1c_Ip()
{
  {
    init_simple_test("aS_BFu1c_Ip");
    static STRUCT_IF_C aS_BFu1c_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_BFu1c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_Ip)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_Ip.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_Ip");
    check_field_offset(lv, v3, 3, "aS_BFu1c_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_Ip, aS_BFu1c_Ip)
//============================================================================



static void Test_aS_BFu1c_L()
{
  {
    init_simple_test("aS_BFu1c_L");
    static STRUCT_IF_C aS_BFu1c_L lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu1c_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_L)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_L.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_L");
    check_field_offset(lv, v3, 3, "aS_BFu1c_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_L, aS_BFu1c_L)
//============================================================================



static void Test_aS_BFu1c_S()
{
  {
    init_simple_test("aS_BFu1c_S");
    static STRUCT_IF_C aS_BFu1c_S lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu1c_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_S)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_S.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_S");
    check_field_offset(lv, v3, 3, "aS_BFu1c_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_S, aS_BFu1c_S)
//============================================================================



static void Test_aS_BFu1c_Uc()
{
  {
    init_simple_test("aS_BFu1c_Uc");
    static STRUCT_IF_C aS_BFu1c_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_Uc)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_Uc.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_Uc");
    check_field_offset(lv, v3, 3, "aS_BFu1c_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_Uc, aS_BFu1c_Uc)
//============================================================================



static void Test_aS_BFu1c_Ui()
{
  {
    init_simple_test("aS_BFu1c_Ui");
    static STRUCT_IF_C aS_BFu1c_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu1c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_Ui)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_Ui.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_Ui");
    check_field_offset(lv, v3, 3, "aS_BFu1c_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_Ui, aS_BFu1c_Ui)
//============================================================================



static void Test_aS_BFu1c_Ul()
{
  {
    init_simple_test("aS_BFu1c_Ul");
    static STRUCT_IF_C aS_BFu1c_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu1c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_Ul)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_Ul.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_Ul");
    check_field_offset(lv, v3, 3, "aS_BFu1c_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_Ul, aS_BFu1c_Ul)
//============================================================================



static void Test_aS_BFu1c_Us()
{
  {
    init_simple_test("aS_BFu1c_Us");
    static STRUCT_IF_C aS_BFu1c_Us lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu1c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_Us)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_Us.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_Us");
    check_field_offset(lv, v3, 3, "aS_BFu1c_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_Us, aS_BFu1c_Us)
//============================================================================



static void Test_aS_BFu1c_Vp()
{
  {
    init_simple_test("aS_BFu1c_Vp");
    static STRUCT_IF_C aS_BFu1c_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_BFu1c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1c_Vp)");
    check_field_offset(lv, v1, 0, "aS_BFu1c_Vp.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1c_Vp");
    check_field_offset(lv, v3, 3, "aS_BFu1c_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1c_Vp, aS_BFu1c_Vp)
//============================================================================



static void Test_aS_BFu1i()
{
  {
    init_simple_test("aS_BFu1i");
    static STRUCT_IF_C aS_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_BFu1i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i, aS_BFu1i)
//============================================================================



static void Test_aS_BFu1i_BFu15i()
{
  {
    init_simple_test("aS_BFu1i_BFu15i");
    static STRUCT_IF_C aS_BFu1i_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_BFu15i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_BFu15i");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "aS_BFu1i_BFu15i");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "aS_BFu1i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_BFu15i, aS_BFu1i_BFu15i)
//============================================================================



static void Test_aS_BFu1i_BFu15ll()
{
  {
    init_simple_test("aS_BFu1i_BFu15ll");
    static STRUCT_IF_C aS_BFu1i_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_BFu15ll");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "aS_BFu1i_BFu15ll");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "aS_BFu1i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_BFu15ll, aS_BFu1i_BFu15ll)
//============================================================================



static void Test_aS_BFu1i_BFu15s()
{
  {
    init_simple_test("aS_BFu1i_BFu15s");
    static STRUCT_IF_C aS_BFu1i_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_BFu15s.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_BFu15s");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "aS_BFu1i_BFu15s");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "aS_BFu1i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_BFu15s, aS_BFu1i_BFu15s)
//============================================================================



static void Test_aS_BFu1i_BFu16i()
{
  {
    init_simple_test("aS_BFu1i_BFu16i");
    static STRUCT_IF_C aS_BFu1i_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu1i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_BFu16i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_BFu16i");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "aS_BFu1i_BFu16i");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "aS_BFu1i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_BFu16i, aS_BFu1i_BFu16i)
//============================================================================



static void Test_aS_BFu1i_BFu16ll()
{
  {
    init_simple_test("aS_BFu1i_BFu16ll");
    static STRUCT_IF_C aS_BFu1i_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu1i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_BFu16ll");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "aS_BFu1i_BFu16ll");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "aS_BFu1i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_BFu16ll, aS_BFu1i_BFu16ll)
//============================================================================



static void Test_aS_BFu1i_BFu16s()
{
  {
    init_simple_test("aS_BFu1i_BFu16s");
    static STRUCT_IF_C aS_BFu1i_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu1i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_BFu16s.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_BFu16s");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "aS_BFu1i_BFu16s");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "aS_BFu1i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_BFu16s, aS_BFu1i_BFu16s)
//============================================================================



static void Test_aS_BFu1i_BFu17i()
{
  {
    init_simple_test("aS_BFu1i_BFu17i");
    static STRUCT_IF_C aS_BFu1i_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu1i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_BFu17i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_BFu17i");
    set_bf_and_test(lv, v3, 2, 1, 17, 1, "aS_BFu1i_BFu17i");
    set_bf_and_test(lv, v3, 2, 1, 17, hide_ull(1LL<<16), "aS_BFu1i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_BFu17i, aS_BFu1i_BFu17i)
//============================================================================



static void Test_aS_BFu1i_BFu17ll()
{
  {
    init_simple_test("aS_BFu1i_BFu17ll");
    static STRUCT_IF_C aS_BFu1i_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu1i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_BFu17ll");
    set_bf_and_test(lv, v3, 2, 1, 17, 1, "aS_BFu1i_BFu17ll");
    set_bf_and_test(lv, v3, 2, 1, 17, hide_ull(1LL<<16), "aS_BFu1i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_BFu17ll, aS_BFu1i_BFu17ll)
//============================================================================



static void Test_aS_BFu1i_BFu1c()
{
  {
    init_simple_test("aS_BFu1i_BFu1c");
    static STRUCT_IF_C aS_BFu1i_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_BFu1c.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_BFu1c");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aS_BFu1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_BFu1c, aS_BFu1i_BFu1c)
//============================================================================



static void Test_aS_BFu1i_BFu1i()
{
  {
    init_simple_test("aS_BFu1i_BFu1i");
    static STRUCT_IF_C aS_BFu1i_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_BFu1i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_BFu1i");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aS_BFu1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_BFu1i, aS_BFu1i_BFu1i)
//============================================================================



static void Test_aS_BFu1i_BFu1ll()
{
  {
    init_simple_test("aS_BFu1i_BFu1ll");
    static STRUCT_IF_C aS_BFu1i_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_BFu1ll");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aS_BFu1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_BFu1ll, aS_BFu1i_BFu1ll)
//============================================================================



static void Test_aS_BFu1i_BFu1s()
{
  {
    init_simple_test("aS_BFu1i_BFu1s");
    static STRUCT_IF_C aS_BFu1i_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_BFu1s.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_BFu1s");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aS_BFu1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_BFu1s, aS_BFu1i_BFu1s)
//============================================================================



static void Test_aS_BFu1i_BFu31i()
{
  {
    init_simple_test("aS_BFu1i_BFu31i");
    static STRUCT_IF_C aS_BFu1i_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu1i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_BFu31i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_BFu31i");
    set_bf_and_test(lv, v3, 2, 1, 31, 1, "aS_BFu1i_BFu31i");
    set_bf_and_test(lv, v3, 2, 1, 31, hide_ull(1LL<<30), "aS_BFu1i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_BFu31i, aS_BFu1i_BFu31i)
//============================================================================



static void Test_aS_BFu1i_BFu31ll()
{
  {
    init_simple_test("aS_BFu1i_BFu31ll");
    static STRUCT_IF_C aS_BFu1i_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu1i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_BFu31ll");
    set_bf_and_test(lv, v3, 2, 1, 31, 1, "aS_BFu1i_BFu31ll");
    set_bf_and_test(lv, v3, 2, 1, 31, hide_ull(1LL<<30), "aS_BFu1i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_BFu31ll, aS_BFu1i_BFu31ll)
//============================================================================



static void Test_aS_BFu1i_BFu32i()
{
  {
    init_simple_test("aS_BFu1i_BFu32i");
    static STRUCT_IF_C aS_BFu1i_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu1i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_BFu32i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_BFu32i");
    set_bf_and_test(lv, v3, 2, 1, 32, 1, "aS_BFu1i_BFu32i");
    set_bf_and_test(lv, v3, 2, 1, 32, hide_ull(1LL<<31), "aS_BFu1i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_BFu32i, aS_BFu1i_BFu32i)
//============================================================================



static void Test_aS_BFu1i_BFu32ll()
{
  {
    init_simple_test("aS_BFu1i_BFu32ll");
    static STRUCT_IF_C aS_BFu1i_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu1i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_BFu32ll");
    set_bf_and_test(lv, v3, 2, 1, 32, 1, "aS_BFu1i_BFu32ll");
    set_bf_and_test(lv, v3, 2, 1, 32, hide_ull(1LL<<31), "aS_BFu1i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_BFu32ll, aS_BFu1i_BFu32ll)
//============================================================================



static void Test_aS_BFu1i_BFu33()
{
  {
    init_simple_test("aS_BFu1i_BFu33");
    static STRUCT_IF_C aS_BFu1i_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu1i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_BFu33)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_BFu33.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_BFu33");
    set_bf_and_test(lv, v3, 2, 1, 33, 1, "aS_BFu1i_BFu33");
    set_bf_and_test(lv, v3, 2, 1, 33, hide_ull(1LL<<32), "aS_BFu1i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_BFu33, aS_BFu1i_BFu33)
//============================================================================



static void Test_aS_BFu1i_BFu7c()
{
  {
    init_simple_test("aS_BFu1i_BFu7c");
    static STRUCT_IF_C aS_BFu1i_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_BFu7c.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_BFu7c");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aS_BFu1i_BFu7c");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aS_BFu1i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_BFu7c, aS_BFu1i_BFu7c)
//============================================================================



static void Test_aS_BFu1i_BFu7i()
{
  {
    init_simple_test("aS_BFu1i_BFu7i");
    static STRUCT_IF_C aS_BFu1i_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_BFu7i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_BFu7i");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aS_BFu1i_BFu7i");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aS_BFu1i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_BFu7i, aS_BFu1i_BFu7i)
//============================================================================



static void Test_aS_BFu1i_BFu7ll()
{
  {
    init_simple_test("aS_BFu1i_BFu7ll");
    static STRUCT_IF_C aS_BFu1i_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_BFu7ll");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aS_BFu1i_BFu7ll");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aS_BFu1i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_BFu7ll, aS_BFu1i_BFu7ll)
//============================================================================



static void Test_aS_BFu1i_BFu7s()
{
  {
    init_simple_test("aS_BFu1i_BFu7s");
    static STRUCT_IF_C aS_BFu1i_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_BFu7s.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_BFu7s");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aS_BFu1i_BFu7s");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aS_BFu1i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_BFu7s, aS_BFu1i_BFu7s)
//============================================================================



static void Test_aS_BFu1i_BFu8c()
{
  {
    init_simple_test("aS_BFu1i_BFu8c");
    static STRUCT_IF_C aS_BFu1i_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_BFu8c.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_BFu8c");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aS_BFu1i_BFu8c");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aS_BFu1i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_BFu8c, aS_BFu1i_BFu8c)
//============================================================================



static void Test_aS_BFu1i_BFu8i()
{
  {
    init_simple_test("aS_BFu1i_BFu8i");
    static STRUCT_IF_C aS_BFu1i_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_BFu8i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_BFu8i");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aS_BFu1i_BFu8i");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aS_BFu1i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_BFu8i, aS_BFu1i_BFu8i)
//============================================================================



static void Test_aS_BFu1i_BFu8ll()
{
  {
    init_simple_test("aS_BFu1i_BFu8ll");
    static STRUCT_IF_C aS_BFu1i_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_BFu8ll");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aS_BFu1i_BFu8ll");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aS_BFu1i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_BFu8ll, aS_BFu1i_BFu8ll)
//============================================================================



static void Test_aS_BFu1i_BFu8s()
{
  {
    init_simple_test("aS_BFu1i_BFu8s");
    static STRUCT_IF_C aS_BFu1i_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_BFu8s.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_BFu8s");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aS_BFu1i_BFu8s");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aS_BFu1i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_BFu8s, aS_BFu1i_BFu8s)
//============================================================================



static void Test_aS_BFu1i_BFu9i()
{
  {
    init_simple_test("aS_BFu1i_BFu9i");
    static STRUCT_IF_C aS_BFu1i_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_BFu9i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_BFu9i");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "aS_BFu1i_BFu9i");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "aS_BFu1i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_BFu9i, aS_BFu1i_BFu9i)
//============================================================================



static void Test_aS_BFu1i_BFu9ll()
{
  {
    init_simple_test("aS_BFu1i_BFu9ll");
    static STRUCT_IF_C aS_BFu1i_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_BFu9ll");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "aS_BFu1i_BFu9ll");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "aS_BFu1i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_BFu9ll, aS_BFu1i_BFu9ll)
//============================================================================



static void Test_aS_BFu1i_BFu9s()
{
  {
    init_simple_test("aS_BFu1i_BFu9s");
    static STRUCT_IF_C aS_BFu1i_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_BFu9s.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_BFu9s");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "aS_BFu1i_BFu9s");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "aS_BFu1i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_BFu9s, aS_BFu1i_BFu9s)
//============================================================================



static void Test_aS_BFu1i_C()
{
  {
    init_simple_test("aS_BFu1i_C");
    static STRUCT_IF_C aS_BFu1i_C lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_C)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_C.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_C");
    check_field_offset(lv, v3, 3, "aS_BFu1i_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_C, aS_BFu1i_C)
//============================================================================



static void Test_aS_BFu1i_D()
{
  {
    init_simple_test("aS_BFu1i_D");
    static STRUCT_IF_C aS_BFu1i_D lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu1i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_D)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_D.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_D");
    check_field_offset(lv, v3, 3, "aS_BFu1i_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_D, aS_BFu1i_D)
//============================================================================



static void Test_aS_BFu1i_F()
{
  {
    init_simple_test("aS_BFu1i_F");
    static STRUCT_IF_C aS_BFu1i_F lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu1i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_F)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_F.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_F");
    check_field_offset(lv, v3, 3, "aS_BFu1i_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_F, aS_BFu1i_F)
//============================================================================



static void Test_aS_BFu1i_I()
{
  {
    init_simple_test("aS_BFu1i_I");
    static STRUCT_IF_C aS_BFu1i_I lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu1i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_I)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_I.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_I");
    check_field_offset(lv, v3, 3, "aS_BFu1i_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_I, aS_BFu1i_I)
//============================================================================



static void Test_aS_BFu1i_Ip()
{
  {
    init_simple_test("aS_BFu1i_Ip");
    static STRUCT_IF_C aS_BFu1i_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_BFu1i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_Ip)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_Ip.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_Ip");
    check_field_offset(lv, v3, 3, "aS_BFu1i_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_Ip, aS_BFu1i_Ip)
//============================================================================



static void Test_aS_BFu1i_L()
{
  {
    init_simple_test("aS_BFu1i_L");
    static STRUCT_IF_C aS_BFu1i_L lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu1i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_L)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_L.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_L");
    check_field_offset(lv, v3, 3, "aS_BFu1i_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_L, aS_BFu1i_L)
//============================================================================



static void Test_aS_BFu1i_S()
{
  {
    init_simple_test("aS_BFu1i_S");
    static STRUCT_IF_C aS_BFu1i_S lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu1i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_S)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_S.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_S");
    check_field_offset(lv, v3, 3, "aS_BFu1i_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_S, aS_BFu1i_S)
//============================================================================



static void Test_aS_BFu1i_Uc()
{
  {
    init_simple_test("aS_BFu1i_Uc");
    static STRUCT_IF_C aS_BFu1i_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_Uc)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_Uc.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_Uc");
    check_field_offset(lv, v3, 3, "aS_BFu1i_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_Uc, aS_BFu1i_Uc)
//============================================================================



static void Test_aS_BFu1i_Ui()
{
  {
    init_simple_test("aS_BFu1i_Ui");
    static STRUCT_IF_C aS_BFu1i_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu1i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_Ui)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_Ui.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_Ui");
    check_field_offset(lv, v3, 3, "aS_BFu1i_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_Ui, aS_BFu1i_Ui)
//============================================================================



static void Test_aS_BFu1i_Ul()
{
  {
    init_simple_test("aS_BFu1i_Ul");
    static STRUCT_IF_C aS_BFu1i_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu1i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_Ul)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_Ul.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_Ul");
    check_field_offset(lv, v3, 3, "aS_BFu1i_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_Ul, aS_BFu1i_Ul)
//============================================================================



static void Test_aS_BFu1i_Us()
{
  {
    init_simple_test("aS_BFu1i_Us");
    static STRUCT_IF_C aS_BFu1i_Us lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu1i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_Us)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_Us.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_Us");
    check_field_offset(lv, v3, 3, "aS_BFu1i_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_Us, aS_BFu1i_Us)
//============================================================================



static void Test_aS_BFu1i_Vp()
{
  {
    init_simple_test("aS_BFu1i_Vp");
    static STRUCT_IF_C aS_BFu1i_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_BFu1i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1i_Vp)");
    check_field_offset(lv, v1, 0, "aS_BFu1i_Vp.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1i_Vp");
    check_field_offset(lv, v3, 3, "aS_BFu1i_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1i_Vp, aS_BFu1i_Vp)
//============================================================================



static void Test_aS_BFu1ll()
{
  {
    init_simple_test("aS_BFu1ll");
    static STRUCT_IF_C aS_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll, aS_BFu1ll)
//============================================================================



static void Test_aS_BFu1ll_BFu15i()
{
  {
    init_simple_test("aS_BFu1ll_BFu15i");
    static STRUCT_IF_C aS_BFu1ll_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_BFu15i");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "aS_BFu1ll_BFu15i");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "aS_BFu1ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_BFu15i, aS_BFu1ll_BFu15i)
//============================================================================



static void Test_aS_BFu1ll_BFu15ll()
{
  {
    init_simple_test("aS_BFu1ll_BFu15ll");
    static STRUCT_IF_C aS_BFu1ll_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_BFu15ll");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "aS_BFu1ll_BFu15ll");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "aS_BFu1ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_BFu15ll, aS_BFu1ll_BFu15ll)
//============================================================================



static void Test_aS_BFu1ll_BFu15s()
{
  {
    init_simple_test("aS_BFu1ll_BFu15s");
    static STRUCT_IF_C aS_BFu1ll_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_BFu15s");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "aS_BFu1ll_BFu15s");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "aS_BFu1ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_BFu15s, aS_BFu1ll_BFu15s)
//============================================================================



static void Test_aS_BFu1ll_BFu16i()
{
  {
    init_simple_test("aS_BFu1ll_BFu16i");
    static STRUCT_IF_C aS_BFu1ll_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu1ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_BFu16i");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "aS_BFu1ll_BFu16i");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "aS_BFu1ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_BFu16i, aS_BFu1ll_BFu16i)
//============================================================================



static void Test_aS_BFu1ll_BFu16ll()
{
  {
    init_simple_test("aS_BFu1ll_BFu16ll");
    static STRUCT_IF_C aS_BFu1ll_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu1ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_BFu16ll");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "aS_BFu1ll_BFu16ll");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "aS_BFu1ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_BFu16ll, aS_BFu1ll_BFu16ll)
//============================================================================



static void Test_aS_BFu1ll_BFu16s()
{
  {
    init_simple_test("aS_BFu1ll_BFu16s");
    static STRUCT_IF_C aS_BFu1ll_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu1ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_BFu16s");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "aS_BFu1ll_BFu16s");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "aS_BFu1ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_BFu16s, aS_BFu1ll_BFu16s)
//============================================================================



static void Test_aS_BFu1ll_BFu17i()
{
  {
    init_simple_test("aS_BFu1ll_BFu17i");
    static STRUCT_IF_C aS_BFu1ll_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu1ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_BFu17i");
    set_bf_and_test(lv, v3, 2, 1, 17, 1, "aS_BFu1ll_BFu17i");
    set_bf_and_test(lv, v3, 2, 1, 17, hide_ull(1LL<<16), "aS_BFu1ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_BFu17i, aS_BFu1ll_BFu17i)
//============================================================================



static void Test_aS_BFu1ll_BFu17ll()
{
  {
    init_simple_test("aS_BFu1ll_BFu17ll");
    static STRUCT_IF_C aS_BFu1ll_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu1ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_BFu17ll");
    set_bf_and_test(lv, v3, 2, 1, 17, 1, "aS_BFu1ll_BFu17ll");
    set_bf_and_test(lv, v3, 2, 1, 17, hide_ull(1LL<<16), "aS_BFu1ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_BFu17ll, aS_BFu1ll_BFu17ll)
//============================================================================



static void Test_aS_BFu1ll_BFu1c()
{
  {
    init_simple_test("aS_BFu1ll_BFu1c");
    static STRUCT_IF_C aS_BFu1ll_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_BFu1c");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aS_BFu1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_BFu1c, aS_BFu1ll_BFu1c)
//============================================================================



static void Test_aS_BFu1ll_BFu1i()
{
  {
    init_simple_test("aS_BFu1ll_BFu1i");
    static STRUCT_IF_C aS_BFu1ll_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_BFu1i");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aS_BFu1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_BFu1i, aS_BFu1ll_BFu1i)
//============================================================================



static void Test_aS_BFu1ll_BFu1ll()
{
  {
    init_simple_test("aS_BFu1ll_BFu1ll");
    static STRUCT_IF_C aS_BFu1ll_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aS_BFu1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_BFu1ll, aS_BFu1ll_BFu1ll)
//============================================================================



static void Test_aS_BFu1ll_BFu1s()
{
  {
    init_simple_test("aS_BFu1ll_BFu1s");
    static STRUCT_IF_C aS_BFu1ll_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_BFu1s");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aS_BFu1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_BFu1s, aS_BFu1ll_BFu1s)
//============================================================================



static void Test_aS_BFu1ll_BFu31i()
{
  {
    init_simple_test("aS_BFu1ll_BFu31i");
    static STRUCT_IF_C aS_BFu1ll_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu1ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_BFu31i");
    set_bf_and_test(lv, v3, 2, 1, 31, 1, "aS_BFu1ll_BFu31i");
    set_bf_and_test(lv, v3, 2, 1, 31, hide_ull(1LL<<30), "aS_BFu1ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_BFu31i, aS_BFu1ll_BFu31i)
//============================================================================



static void Test_aS_BFu1ll_BFu31ll()
{
  {
    init_simple_test("aS_BFu1ll_BFu31ll");
    static STRUCT_IF_C aS_BFu1ll_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu1ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_BFu31ll");
    set_bf_and_test(lv, v3, 2, 1, 31, 1, "aS_BFu1ll_BFu31ll");
    set_bf_and_test(lv, v3, 2, 1, 31, hide_ull(1LL<<30), "aS_BFu1ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_BFu31ll, aS_BFu1ll_BFu31ll)
//============================================================================



static void Test_aS_BFu1ll_BFu32i()
{
  {
    init_simple_test("aS_BFu1ll_BFu32i");
    static STRUCT_IF_C aS_BFu1ll_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu1ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_BFu32i");
    set_bf_and_test(lv, v3, 2, 1, 32, 1, "aS_BFu1ll_BFu32i");
    set_bf_and_test(lv, v3, 2, 1, 32, hide_ull(1LL<<31), "aS_BFu1ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_BFu32i, aS_BFu1ll_BFu32i)
//============================================================================



static void Test_aS_BFu1ll_BFu32ll()
{
  {
    init_simple_test("aS_BFu1ll_BFu32ll");
    static STRUCT_IF_C aS_BFu1ll_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu1ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_BFu32ll");
    set_bf_and_test(lv, v3, 2, 1, 32, 1, "aS_BFu1ll_BFu32ll");
    set_bf_and_test(lv, v3, 2, 1, 32, hide_ull(1LL<<31), "aS_BFu1ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_BFu32ll, aS_BFu1ll_BFu32ll)
//============================================================================



static void Test_aS_BFu1ll_BFu33()
{
  {
    init_simple_test("aS_BFu1ll_BFu33");
    static STRUCT_IF_C aS_BFu1ll_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu1ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_BFu33)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_BFu33.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_BFu33");
    set_bf_and_test(lv, v3, 2, 1, 33, 1, "aS_BFu1ll_BFu33");
    set_bf_and_test(lv, v3, 2, 1, 33, hide_ull(1LL<<32), "aS_BFu1ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_BFu33, aS_BFu1ll_BFu33)
//============================================================================



static void Test_aS_BFu1ll_BFu7c()
{
  {
    init_simple_test("aS_BFu1ll_BFu7c");
    static STRUCT_IF_C aS_BFu1ll_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_BFu7c");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aS_BFu1ll_BFu7c");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aS_BFu1ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_BFu7c, aS_BFu1ll_BFu7c)
//============================================================================



static void Test_aS_BFu1ll_BFu7i()
{
  {
    init_simple_test("aS_BFu1ll_BFu7i");
    static STRUCT_IF_C aS_BFu1ll_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_BFu7i");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aS_BFu1ll_BFu7i");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aS_BFu1ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_BFu7i, aS_BFu1ll_BFu7i)
//============================================================================



static void Test_aS_BFu1ll_BFu7ll()
{
  {
    init_simple_test("aS_BFu1ll_BFu7ll");
    static STRUCT_IF_C aS_BFu1ll_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_BFu7ll");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aS_BFu1ll_BFu7ll");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aS_BFu1ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_BFu7ll, aS_BFu1ll_BFu7ll)
//============================================================================



static void Test_aS_BFu1ll_BFu7s()
{
  {
    init_simple_test("aS_BFu1ll_BFu7s");
    static STRUCT_IF_C aS_BFu1ll_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_BFu7s");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aS_BFu1ll_BFu7s");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aS_BFu1ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_BFu7s, aS_BFu1ll_BFu7s)
//============================================================================



static void Test_aS_BFu1ll_BFu8c()
{
  {
    init_simple_test("aS_BFu1ll_BFu8c");
    static STRUCT_IF_C aS_BFu1ll_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_BFu8c");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aS_BFu1ll_BFu8c");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aS_BFu1ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_BFu8c, aS_BFu1ll_BFu8c)
//============================================================================



static void Test_aS_BFu1ll_BFu8i()
{
  {
    init_simple_test("aS_BFu1ll_BFu8i");
    static STRUCT_IF_C aS_BFu1ll_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_BFu8i");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aS_BFu1ll_BFu8i");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aS_BFu1ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_BFu8i, aS_BFu1ll_BFu8i)
//============================================================================



static void Test_aS_BFu1ll_BFu8ll()
{
  {
    init_simple_test("aS_BFu1ll_BFu8ll");
    static STRUCT_IF_C aS_BFu1ll_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_BFu8ll");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aS_BFu1ll_BFu8ll");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aS_BFu1ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_BFu8ll, aS_BFu1ll_BFu8ll)
//============================================================================



static void Test_aS_BFu1ll_BFu8s()
{
  {
    init_simple_test("aS_BFu1ll_BFu8s");
    static STRUCT_IF_C aS_BFu1ll_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_BFu8s");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aS_BFu1ll_BFu8s");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aS_BFu1ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_BFu8s, aS_BFu1ll_BFu8s)
//============================================================================



static void Test_aS_BFu1ll_BFu9i()
{
  {
    init_simple_test("aS_BFu1ll_BFu9i");
    static STRUCT_IF_C aS_BFu1ll_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_BFu9i");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "aS_BFu1ll_BFu9i");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "aS_BFu1ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_BFu9i, aS_BFu1ll_BFu9i)
//============================================================================



static void Test_aS_BFu1ll_BFu9ll()
{
  {
    init_simple_test("aS_BFu1ll_BFu9ll");
    static STRUCT_IF_C aS_BFu1ll_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_BFu9ll");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "aS_BFu1ll_BFu9ll");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "aS_BFu1ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_BFu9ll, aS_BFu1ll_BFu9ll)
//============================================================================



static void Test_aS_BFu1ll_BFu9s()
{
  {
    init_simple_test("aS_BFu1ll_BFu9s");
    static STRUCT_IF_C aS_BFu1ll_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_BFu9s");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "aS_BFu1ll_BFu9s");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "aS_BFu1ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_BFu9s, aS_BFu1ll_BFu9s)
//============================================================================



static void Test_aS_BFu1ll_C()
{
  {
    init_simple_test("aS_BFu1ll_C");
    static STRUCT_IF_C aS_BFu1ll_C lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_C)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_C.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_C");
    check_field_offset(lv, v3, 3, "aS_BFu1ll_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_C, aS_BFu1ll_C)
//============================================================================



static void Test_aS_BFu1ll_D()
{
  {
    init_simple_test("aS_BFu1ll_D");
    static STRUCT_IF_C aS_BFu1ll_D lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu1ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_D)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_D.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_D");
    check_field_offset(lv, v3, 3, "aS_BFu1ll_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_D, aS_BFu1ll_D)
//============================================================================



static void Test_aS_BFu1ll_F()
{
  {
    init_simple_test("aS_BFu1ll_F");
    static STRUCT_IF_C aS_BFu1ll_F lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu1ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_F)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_F.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_F");
    check_field_offset(lv, v3, 3, "aS_BFu1ll_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_F, aS_BFu1ll_F)
//============================================================================



static void Test_aS_BFu1ll_I()
{
  {
    init_simple_test("aS_BFu1ll_I");
    static STRUCT_IF_C aS_BFu1ll_I lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu1ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_I)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_I.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_I");
    check_field_offset(lv, v3, 3, "aS_BFu1ll_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_I, aS_BFu1ll_I)
//============================================================================



static void Test_aS_BFu1ll_Ip()
{
  {
    init_simple_test("aS_BFu1ll_Ip");
    static STRUCT_IF_C aS_BFu1ll_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_BFu1ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_Ip)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_Ip.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_Ip");
    check_field_offset(lv, v3, 3, "aS_BFu1ll_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_Ip, aS_BFu1ll_Ip)
//============================================================================



static void Test_aS_BFu1ll_L()
{
  {
    init_simple_test("aS_BFu1ll_L");
    static STRUCT_IF_C aS_BFu1ll_L lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu1ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_L)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_L.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_L");
    check_field_offset(lv, v3, 3, "aS_BFu1ll_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_L, aS_BFu1ll_L)
//============================================================================



static void Test_aS_BFu1ll_S()
{
  {
    init_simple_test("aS_BFu1ll_S");
    static STRUCT_IF_C aS_BFu1ll_S lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu1ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_S)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_S.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_S");
    check_field_offset(lv, v3, 3, "aS_BFu1ll_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_S, aS_BFu1ll_S)
//============================================================================



static void Test_aS_BFu1ll_Uc()
{
  {
    init_simple_test("aS_BFu1ll_Uc");
    static STRUCT_IF_C aS_BFu1ll_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_Uc)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_Uc.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_Uc");
    check_field_offset(lv, v3, 3, "aS_BFu1ll_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_Uc, aS_BFu1ll_Uc)
//============================================================================



static void Test_aS_BFu1ll_Ui()
{
  {
    init_simple_test("aS_BFu1ll_Ui");
    static STRUCT_IF_C aS_BFu1ll_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu1ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_Ui)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_Ui.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_Ui");
    check_field_offset(lv, v3, 3, "aS_BFu1ll_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_Ui, aS_BFu1ll_Ui)
//============================================================================



static void Test_aS_BFu1ll_Ul()
{
  {
    init_simple_test("aS_BFu1ll_Ul");
    static STRUCT_IF_C aS_BFu1ll_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu1ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_Ul)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_Ul.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_Ul");
    check_field_offset(lv, v3, 3, "aS_BFu1ll_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_Ul, aS_BFu1ll_Ul)
//============================================================================



static void Test_aS_BFu1ll_Us()
{
  {
    init_simple_test("aS_BFu1ll_Us");
    static STRUCT_IF_C aS_BFu1ll_Us lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu1ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_Us)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_Us.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_Us");
    check_field_offset(lv, v3, 3, "aS_BFu1ll_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_Us, aS_BFu1ll_Us)
//============================================================================



static void Test_aS_BFu1ll_Vp()
{
  {
    init_simple_test("aS_BFu1ll_Vp");
    static STRUCT_IF_C aS_BFu1ll_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_BFu1ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1ll_Vp)");
    check_field_offset(lv, v1, 0, "aS_BFu1ll_Vp.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1ll_Vp");
    check_field_offset(lv, v3, 3, "aS_BFu1ll_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1ll_Vp, aS_BFu1ll_Vp)
//============================================================================



static void Test_aS_BFu1s()
{
  {
    init_simple_test("aS_BFu1s");
    static STRUCT_IF_C aS_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_BFu1s.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s, aS_BFu1s)
//============================================================================



static void Test_aS_BFu1s_BFu15i()
{
  {
    init_simple_test("aS_BFu1s_BFu15i");
    static STRUCT_IF_C aS_BFu1s_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_BFu15i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_BFu15i");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "aS_BFu1s_BFu15i");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "aS_BFu1s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_BFu15i, aS_BFu1s_BFu15i)
//============================================================================



static void Test_aS_BFu1s_BFu15ll()
{
  {
    init_simple_test("aS_BFu1s_BFu15ll");
    static STRUCT_IF_C aS_BFu1s_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_BFu15ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_BFu15ll");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "aS_BFu1s_BFu15ll");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "aS_BFu1s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_BFu15ll, aS_BFu1s_BFu15ll)
//============================================================================



static void Test_aS_BFu1s_BFu15s()
{
  {
    init_simple_test("aS_BFu1s_BFu15s");
    static STRUCT_IF_C aS_BFu1s_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_BFu15s.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_BFu15s");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "aS_BFu1s_BFu15s");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "aS_BFu1s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_BFu15s, aS_BFu1s_BFu15s)
//============================================================================



static void Test_aS_BFu1s_BFu16i()
{
  {
    init_simple_test("aS_BFu1s_BFu16i");
    static STRUCT_IF_C aS_BFu1s_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu1s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_BFu16i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_BFu16i");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "aS_BFu1s_BFu16i");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "aS_BFu1s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_BFu16i, aS_BFu1s_BFu16i)
//============================================================================



static void Test_aS_BFu1s_BFu16ll()
{
  {
    init_simple_test("aS_BFu1s_BFu16ll");
    static STRUCT_IF_C aS_BFu1s_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu1s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_BFu16ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_BFu16ll");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "aS_BFu1s_BFu16ll");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "aS_BFu1s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_BFu16ll, aS_BFu1s_BFu16ll)
//============================================================================



static void Test_aS_BFu1s_BFu16s()
{
  {
    init_simple_test("aS_BFu1s_BFu16s");
    static STRUCT_IF_C aS_BFu1s_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu1s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_BFu16s.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_BFu16s");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "aS_BFu1s_BFu16s");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "aS_BFu1s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_BFu16s, aS_BFu1s_BFu16s)
//============================================================================



static void Test_aS_BFu1s_BFu17i()
{
  {
    init_simple_test("aS_BFu1s_BFu17i");
    static STRUCT_IF_C aS_BFu1s_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu1s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_BFu17i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_BFu17i");
    set_bf_and_test(lv, v3, 2, 1, 17, 1, "aS_BFu1s_BFu17i");
    set_bf_and_test(lv, v3, 2, 1, 17, hide_ull(1LL<<16), "aS_BFu1s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_BFu17i, aS_BFu1s_BFu17i)
//============================================================================



static void Test_aS_BFu1s_BFu17ll()
{
  {
    init_simple_test("aS_BFu1s_BFu17ll");
    static STRUCT_IF_C aS_BFu1s_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu1s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_BFu17ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_BFu17ll");
    set_bf_and_test(lv, v3, 2, 1, 17, 1, "aS_BFu1s_BFu17ll");
    set_bf_and_test(lv, v3, 2, 1, 17, hide_ull(1LL<<16), "aS_BFu1s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_BFu17ll, aS_BFu1s_BFu17ll)
//============================================================================



static void Test_aS_BFu1s_BFu1c()
{
  {
    init_simple_test("aS_BFu1s_BFu1c");
    static STRUCT_IF_C aS_BFu1s_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_BFu1c.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_BFu1c");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aS_BFu1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_BFu1c, aS_BFu1s_BFu1c)
//============================================================================



static void Test_aS_BFu1s_BFu1i()
{
  {
    init_simple_test("aS_BFu1s_BFu1i");
    static STRUCT_IF_C aS_BFu1s_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_BFu1i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_BFu1i");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aS_BFu1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_BFu1i, aS_BFu1s_BFu1i)
//============================================================================



static void Test_aS_BFu1s_BFu1ll()
{
  {
    init_simple_test("aS_BFu1s_BFu1ll");
    static STRUCT_IF_C aS_BFu1s_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_BFu1ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_BFu1ll");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aS_BFu1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_BFu1ll, aS_BFu1s_BFu1ll)
//============================================================================



static void Test_aS_BFu1s_BFu1s()
{
  {
    init_simple_test("aS_BFu1s_BFu1s");
    static STRUCT_IF_C aS_BFu1s_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_BFu1s.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_BFu1s");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aS_BFu1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_BFu1s, aS_BFu1s_BFu1s)
//============================================================================



static void Test_aS_BFu1s_BFu31i()
{
  {
    init_simple_test("aS_BFu1s_BFu31i");
    static STRUCT_IF_C aS_BFu1s_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu1s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_BFu31i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_BFu31i");
    set_bf_and_test(lv, v3, 2, 1, 31, 1, "aS_BFu1s_BFu31i");
    set_bf_and_test(lv, v3, 2, 1, 31, hide_ull(1LL<<30), "aS_BFu1s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_BFu31i, aS_BFu1s_BFu31i)
//============================================================================



static void Test_aS_BFu1s_BFu31ll()
{
  {
    init_simple_test("aS_BFu1s_BFu31ll");
    static STRUCT_IF_C aS_BFu1s_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu1s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_BFu31ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_BFu31ll");
    set_bf_and_test(lv, v3, 2, 1, 31, 1, "aS_BFu1s_BFu31ll");
    set_bf_and_test(lv, v3, 2, 1, 31, hide_ull(1LL<<30), "aS_BFu1s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_BFu31ll, aS_BFu1s_BFu31ll)
//============================================================================



static void Test_aS_BFu1s_BFu32i()
{
  {
    init_simple_test("aS_BFu1s_BFu32i");
    static STRUCT_IF_C aS_BFu1s_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu1s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_BFu32i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_BFu32i");
    set_bf_and_test(lv, v3, 2, 1, 32, 1, "aS_BFu1s_BFu32i");
    set_bf_and_test(lv, v3, 2, 1, 32, hide_ull(1LL<<31), "aS_BFu1s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_BFu32i, aS_BFu1s_BFu32i)
//============================================================================



static void Test_aS_BFu1s_BFu32ll()
{
  {
    init_simple_test("aS_BFu1s_BFu32ll");
    static STRUCT_IF_C aS_BFu1s_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu1s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_BFu32ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_BFu32ll");
    set_bf_and_test(lv, v3, 2, 1, 32, 1, "aS_BFu1s_BFu32ll");
    set_bf_and_test(lv, v3, 2, 1, 32, hide_ull(1LL<<31), "aS_BFu1s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_BFu32ll, aS_BFu1s_BFu32ll)
//============================================================================



static void Test_aS_BFu1s_BFu33()
{
  {
    init_simple_test("aS_BFu1s_BFu33");
    static STRUCT_IF_C aS_BFu1s_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu1s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_BFu33)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_BFu33.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_BFu33");
    set_bf_and_test(lv, v3, 2, 1, 33, 1, "aS_BFu1s_BFu33");
    set_bf_and_test(lv, v3, 2, 1, 33, hide_ull(1LL<<32), "aS_BFu1s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_BFu33, aS_BFu1s_BFu33)
//============================================================================



static void Test_aS_BFu1s_BFu7c()
{
  {
    init_simple_test("aS_BFu1s_BFu7c");
    static STRUCT_IF_C aS_BFu1s_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_BFu7c.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_BFu7c");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aS_BFu1s_BFu7c");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aS_BFu1s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_BFu7c, aS_BFu1s_BFu7c)
//============================================================================



static void Test_aS_BFu1s_BFu7i()
{
  {
    init_simple_test("aS_BFu1s_BFu7i");
    static STRUCT_IF_C aS_BFu1s_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_BFu7i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_BFu7i");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aS_BFu1s_BFu7i");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aS_BFu1s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_BFu7i, aS_BFu1s_BFu7i)
//============================================================================



static void Test_aS_BFu1s_BFu7ll()
{
  {
    init_simple_test("aS_BFu1s_BFu7ll");
    static STRUCT_IF_C aS_BFu1s_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_BFu7ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_BFu7ll");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aS_BFu1s_BFu7ll");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aS_BFu1s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_BFu7ll, aS_BFu1s_BFu7ll)
//============================================================================



static void Test_aS_BFu1s_BFu7s()
{
  {
    init_simple_test("aS_BFu1s_BFu7s");
    static STRUCT_IF_C aS_BFu1s_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu1s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_BFu7s.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_BFu7s");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aS_BFu1s_BFu7s");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aS_BFu1s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_BFu7s, aS_BFu1s_BFu7s)
//============================================================================



static void Test_aS_BFu1s_BFu8c()
{
  {
    init_simple_test("aS_BFu1s_BFu8c");
    static STRUCT_IF_C aS_BFu1s_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_BFu8c.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_BFu8c");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aS_BFu1s_BFu8c");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aS_BFu1s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_BFu8c, aS_BFu1s_BFu8c)
//============================================================================



static void Test_aS_BFu1s_BFu8i()
{
  {
    init_simple_test("aS_BFu1s_BFu8i");
    static STRUCT_IF_C aS_BFu1s_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_BFu8i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_BFu8i");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aS_BFu1s_BFu8i");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aS_BFu1s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_BFu8i, aS_BFu1s_BFu8i)
//============================================================================



static void Test_aS_BFu1s_BFu8ll()
{
  {
    init_simple_test("aS_BFu1s_BFu8ll");
    static STRUCT_IF_C aS_BFu1s_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_BFu8ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_BFu8ll");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aS_BFu1s_BFu8ll");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aS_BFu1s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_BFu8ll, aS_BFu1s_BFu8ll)
//============================================================================



static void Test_aS_BFu1s_BFu8s()
{
  {
    init_simple_test("aS_BFu1s_BFu8s");
    static STRUCT_IF_C aS_BFu1s_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_BFu8s.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_BFu8s");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aS_BFu1s_BFu8s");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aS_BFu1s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_BFu8s, aS_BFu1s_BFu8s)
//============================================================================



static void Test_aS_BFu1s_BFu9i()
{
  {
    init_simple_test("aS_BFu1s_BFu9i");
    static STRUCT_IF_C aS_BFu1s_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_BFu9i.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_BFu9i");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "aS_BFu1s_BFu9i");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "aS_BFu1s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_BFu9i, aS_BFu1s_BFu9i)
//============================================================================



static void Test_aS_BFu1s_BFu9ll()
{
  {
    init_simple_test("aS_BFu1s_BFu9ll");
    static STRUCT_IF_C aS_BFu1s_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_BFu9ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_BFu9ll");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "aS_BFu1s_BFu9ll");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "aS_BFu1s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_BFu9ll, aS_BFu1s_BFu9ll)
//============================================================================



static void Test_aS_BFu1s_BFu9s()
{
  {
    init_simple_test("aS_BFu1s_BFu9s");
    static STRUCT_IF_C aS_BFu1s_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_BFu9s.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_BFu9s");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "aS_BFu1s_BFu9s");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "aS_BFu1s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_BFu9s, aS_BFu1s_BFu9s)
//============================================================================



static void Test_aS_BFu1s_C()
{
  {
    init_simple_test("aS_BFu1s_C");
    static STRUCT_IF_C aS_BFu1s_C lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1s_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_C)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_C.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_C");
    check_field_offset(lv, v3, 3, "aS_BFu1s_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_C, aS_BFu1s_C)
//============================================================================



static void Test_aS_BFu1s_D()
{
  {
    init_simple_test("aS_BFu1s_D");
    static STRUCT_IF_C aS_BFu1s_D lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu1s_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_D)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_D.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_D");
    check_field_offset(lv, v3, 3, "aS_BFu1s_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_D, aS_BFu1s_D)
//============================================================================



static void Test_aS_BFu1s_F()
{
  {
    init_simple_test("aS_BFu1s_F");
    static STRUCT_IF_C aS_BFu1s_F lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu1s_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_F)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_F.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_F");
    check_field_offset(lv, v3, 3, "aS_BFu1s_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_F, aS_BFu1s_F)
//============================================================================



static void Test_aS_BFu1s_I()
{
  {
    init_simple_test("aS_BFu1s_I");
    static STRUCT_IF_C aS_BFu1s_I lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu1s_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_I)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_I.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_I");
    check_field_offset(lv, v3, 3, "aS_BFu1s_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_I, aS_BFu1s_I)
//============================================================================



static void Test_aS_BFu1s_Ip()
{
  {
    init_simple_test("aS_BFu1s_Ip");
    static STRUCT_IF_C aS_BFu1s_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_BFu1s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_Ip)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_Ip.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_Ip");
    check_field_offset(lv, v3, 3, "aS_BFu1s_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_Ip, aS_BFu1s_Ip)
//============================================================================



static void Test_aS_BFu1s_L()
{
  {
    init_simple_test("aS_BFu1s_L");
    static STRUCT_IF_C aS_BFu1s_L lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu1s_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_L)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_L.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_L");
    check_field_offset(lv, v3, 3, "aS_BFu1s_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_L, aS_BFu1s_L)
//============================================================================



static void Test_aS_BFu1s_S()
{
  {
    init_simple_test("aS_BFu1s_S");
    static STRUCT_IF_C aS_BFu1s_S lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu1s_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_S)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_S.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_S");
    check_field_offset(lv, v3, 3, "aS_BFu1s_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_S, aS_BFu1s_S)
//============================================================================



static void Test_aS_BFu1s_Uc()
{
  {
    init_simple_test("aS_BFu1s_Uc");
    static STRUCT_IF_C aS_BFu1s_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu1s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_Uc)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_Uc.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_Uc");
    check_field_offset(lv, v3, 3, "aS_BFu1s_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_Uc, aS_BFu1s_Uc)
//============================================================================



static void Test_aS_BFu1s_Ui()
{
  {
    init_simple_test("aS_BFu1s_Ui");
    static STRUCT_IF_C aS_BFu1s_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu1s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_Ui)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_Ui.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_Ui");
    check_field_offset(lv, v3, 3, "aS_BFu1s_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_Ui, aS_BFu1s_Ui)
//============================================================================



static void Test_aS_BFu1s_Ul()
{
  {
    init_simple_test("aS_BFu1s_Ul");
    static STRUCT_IF_C aS_BFu1s_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu1s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_Ul)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_Ul.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_Ul");
    check_field_offset(lv, v3, 3, "aS_BFu1s_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_Ul, aS_BFu1s_Ul)
//============================================================================



static void Test_aS_BFu1s_Us()
{
  {
    init_simple_test("aS_BFu1s_Us");
    static STRUCT_IF_C aS_BFu1s_Us lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu1s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_Us)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_Us.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_Us");
    check_field_offset(lv, v3, 3, "aS_BFu1s_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_Us, aS_BFu1s_Us)
//============================================================================



static void Test_aS_BFu1s_Vp()
{
  {
    init_simple_test("aS_BFu1s_Vp");
    static STRUCT_IF_C aS_BFu1s_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_BFu1s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu1s_Vp)");
    check_field_offset(lv, v1, 0, "aS_BFu1s_Vp.v1");
    set_bf_and_test(lv, v2, 2, 0, 1, 1, "aS_BFu1s_Vp");
    check_field_offset(lv, v3, 3, "aS_BFu1s_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu1s_Vp, aS_BFu1s_Vp)
//============================================================================



static void Test_aS_BFu31i()
{
  {
    init_simple_test("aS_BFu31i");
    static STRUCT_IF_C aS_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_BFu31i.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i, aS_BFu31i)
//============================================================================



static void Test_aS_BFu31i_BFu15i()
{
  {
    init_simple_test("aS_BFu31i_BFu15i");
    static STRUCT_IF_C aS_BFu31i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu31i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_BFu15i.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_BFu15i");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_BFu15i");
    set_bf_and_test(lv, v3, 5, 7, 15, 1, "aS_BFu31i_BFu15i");
    set_bf_and_test(lv, v3, 5, 7, 15, hide_ull(1LL<<14), "aS_BFu31i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_BFu15i, aS_BFu31i_BFu15i)
//============================================================================



static void Test_aS_BFu31i_BFu15ll()
{
  {
    init_simple_test("aS_BFu31i_BFu15ll");
    static STRUCT_IF_C aS_BFu31i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu31i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_BFu15ll");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_BFu15ll");
    set_bf_and_test(lv, v3, 5, 7, 15, 1, "aS_BFu31i_BFu15ll");
    set_bf_and_test(lv, v3, 5, 7, 15, hide_ull(1LL<<14), "aS_BFu31i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_BFu15ll, aS_BFu31i_BFu15ll)
//============================================================================



static void Test_aS_BFu31i_BFu15s()
{
  {
    init_simple_test("aS_BFu31i_BFu15s");
    static STRUCT_IF_C aS_BFu31i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu31i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_BFu15s.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_BFu15s");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_BFu15s");
    set_bf_and_test(lv, v3, 5, 7, 15, 1, "aS_BFu31i_BFu15s");
    set_bf_and_test(lv, v3, 5, 7, 15, hide_ull(1LL<<14), "aS_BFu31i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_BFu15s, aS_BFu31i_BFu15s)
//============================================================================



static void Test_aS_BFu31i_BFu16i()
{
  {
    init_simple_test("aS_BFu31i_BFu16i");
    static STRUCT_IF_C aS_BFu31i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu31i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_BFu16i.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_BFu16i");
    set_bf_and_test(lv, v3, 5, 7, 16, 1, "aS_BFu31i_BFu16i");
    set_bf_and_test(lv, v3, 5, 7, 16, hide_ull(1LL<<15), "aS_BFu31i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_BFu16i, aS_BFu31i_BFu16i)
//============================================================================



static void Test_aS_BFu31i_BFu16ll()
{
  {
    init_simple_test("aS_BFu31i_BFu16ll");
    static STRUCT_IF_C aS_BFu31i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu31i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_BFu16ll");
    set_bf_and_test(lv, v3, 5, 7, 16, 1, "aS_BFu31i_BFu16ll");
    set_bf_and_test(lv, v3, 5, 7, 16, hide_ull(1LL<<15), "aS_BFu31i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_BFu16ll, aS_BFu31i_BFu16ll)
//============================================================================



static void Test_aS_BFu31i_BFu16s()
{
  {
    init_simple_test("aS_BFu31i_BFu16s");
    static STRUCT_IF_C aS_BFu31i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu31i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_BFu16s.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_BFu16s");
    set_bf_and_test(lv, v3, 5, 7, 16, 1, "aS_BFu31i_BFu16s");
    set_bf_and_test(lv, v3, 5, 7, 16, hide_ull(1LL<<15), "aS_BFu31i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_BFu16s, aS_BFu31i_BFu16s)
//============================================================================



static void Test_aS_BFu31i_BFu17i()
{
  {
    init_simple_test("aS_BFu31i_BFu17i");
    static STRUCT_IF_C aS_BFu31i_BFu17i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu31i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_BFu17i.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_BFu17i");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_BFu17i");
    set_bf_and_test(lv, v3, 5, 7, 17, 1, "aS_BFu31i_BFu17i");
    set_bf_and_test(lv, v3, 5, 7, 17, hide_ull(1LL<<16), "aS_BFu31i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_BFu17i, aS_BFu31i_BFu17i)
//============================================================================



static void Test_aS_BFu31i_BFu17ll()
{
  {
    init_simple_test("aS_BFu31i_BFu17ll");
    static STRUCT_IF_C aS_BFu31i_BFu17ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu31i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_BFu17ll");
    set_bf_and_test(lv, v3, 5, 7, 17, 1, "aS_BFu31i_BFu17ll");
    set_bf_and_test(lv, v3, 5, 7, 17, hide_ull(1LL<<16), "aS_BFu31i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_BFu17ll, aS_BFu31i_BFu17ll)
//============================================================================



static void Test_aS_BFu31i_BFu1c()
{
  {
    init_simple_test("aS_BFu31i_BFu1c");
    static STRUCT_IF_C aS_BFu31i_BFu1c lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu31i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_BFu1c.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_BFu1c");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_BFu1c");
    set_bf_and_test(lv, v3, 5, 7, 1, 1, "aS_BFu31i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_BFu1c, aS_BFu31i_BFu1c)
//============================================================================



static void Test_aS_BFu31i_BFu1i()
{
  {
    init_simple_test("aS_BFu31i_BFu1i");
    static STRUCT_IF_C aS_BFu31i_BFu1i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu31i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_BFu1i.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_BFu1i");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_BFu1i");
    set_bf_and_test(lv, v3, 5, 7, 1, 1, "aS_BFu31i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_BFu1i, aS_BFu31i_BFu1i)
//============================================================================



static void Test_aS_BFu31i_BFu1ll()
{
  {
    init_simple_test("aS_BFu31i_BFu1ll");
    static STRUCT_IF_C aS_BFu31i_BFu1ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu31i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_BFu1ll");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_BFu1ll");
    set_bf_and_test(lv, v3, 5, 7, 1, 1, "aS_BFu31i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_BFu1ll, aS_BFu31i_BFu1ll)
//============================================================================



static void Test_aS_BFu31i_BFu1s()
{
  {
    init_simple_test("aS_BFu31i_BFu1s");
    static STRUCT_IF_C aS_BFu31i_BFu1s lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu31i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_BFu1s.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_BFu1s");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_BFu1s");
    set_bf_and_test(lv, v3, 5, 7, 1, 1, "aS_BFu31i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_BFu1s, aS_BFu31i_BFu1s)
//============================================================================



static void Test_aS_BFu31i_BFu31i()
{
  {
    init_simple_test("aS_BFu31i_BFu31i");
    static STRUCT_IF_C aS_BFu31i_BFu31i lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu31i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_BFu31i.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_BFu31i");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_BFu31i");
    set_bf_and_test(lv, v3, 5, 7, 31, 1, "aS_BFu31i_BFu31i");
    set_bf_and_test(lv, v3, 5, 7, 31, hide_ull(1LL<<30), "aS_BFu31i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_BFu31i, aS_BFu31i_BFu31i)
//============================================================================



static void Test_aS_BFu31i_BFu31ll()
{
  {
    init_simple_test("aS_BFu31i_BFu31ll");
    static STRUCT_IF_C aS_BFu31i_BFu31ll lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu31i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_BFu31ll");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_BFu31ll");
    set_bf_and_test(lv, v3, 5, 7, 31, 1, "aS_BFu31i_BFu31ll");
    set_bf_and_test(lv, v3, 5, 7, 31, hide_ull(1LL<<30), "aS_BFu31i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_BFu31ll, aS_BFu31i_BFu31ll)
//============================================================================



static void Test_aS_BFu31i_BFu32i()
{
  {
    init_simple_test("aS_BFu31i_BFu32i");
    static STRUCT_IF_C aS_BFu31i_BFu32i lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu31i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_BFu32i.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_BFu32i");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_BFu32i");
    set_bf_and_test(lv, v3, 5, 7, 32, 1, "aS_BFu31i_BFu32i");
    set_bf_and_test(lv, v3, 5, 7, 32, hide_ull(1LL<<31), "aS_BFu31i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_BFu32i, aS_BFu31i_BFu32i)
//============================================================================



static void Test_aS_BFu31i_BFu32ll()
{
  {
    init_simple_test("aS_BFu31i_BFu32ll");
    static STRUCT_IF_C aS_BFu31i_BFu32ll lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu31i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_BFu32ll");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_BFu32ll");
    set_bf_and_test(lv, v3, 5, 7, 32, 1, "aS_BFu31i_BFu32ll");
    set_bf_and_test(lv, v3, 5, 7, 32, hide_ull(1LL<<31), "aS_BFu31i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_BFu32ll, aS_BFu31i_BFu32ll)
//============================================================================



static void Test_aS_BFu31i_BFu33()
{
  {
    init_simple_test("aS_BFu31i_BFu33");
    static STRUCT_IF_C aS_BFu31i_BFu33 lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu31i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_BFu33)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_BFu33.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_BFu33");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_BFu33");
    set_bf_and_test(lv, v3, 5, 7, 33, 1, "aS_BFu31i_BFu33");
    set_bf_and_test(lv, v3, 5, 7, 33, hide_ull(1LL<<32), "aS_BFu31i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_BFu33, aS_BFu31i_BFu33)
//============================================================================



static void Test_aS_BFu31i_BFu7c()
{
  {
    init_simple_test("aS_BFu31i_BFu7c");
    static STRUCT_IF_C aS_BFu31i_BFu7c lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu31i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_BFu7c.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_BFu7c");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_BFu7c");
    set_bf_and_test(lv, v3, 5, 7, 7, 1, "aS_BFu31i_BFu7c");
    set_bf_and_test(lv, v3, 5, 7, 7, hide_ull(1LL<<6), "aS_BFu31i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_BFu7c, aS_BFu31i_BFu7c)
//============================================================================



static void Test_aS_BFu31i_BFu7i()
{
  {
    init_simple_test("aS_BFu31i_BFu7i");
    static STRUCT_IF_C aS_BFu31i_BFu7i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu31i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_BFu7i.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_BFu7i");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_BFu7i");
    set_bf_and_test(lv, v3, 5, 7, 7, 1, "aS_BFu31i_BFu7i");
    set_bf_and_test(lv, v3, 5, 7, 7, hide_ull(1LL<<6), "aS_BFu31i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_BFu7i, aS_BFu31i_BFu7i)
//============================================================================



static void Test_aS_BFu31i_BFu7ll()
{
  {
    init_simple_test("aS_BFu31i_BFu7ll");
    static STRUCT_IF_C aS_BFu31i_BFu7ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu31i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_BFu7ll");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_BFu7ll");
    set_bf_and_test(lv, v3, 5, 7, 7, 1, "aS_BFu31i_BFu7ll");
    set_bf_and_test(lv, v3, 5, 7, 7, hide_ull(1LL<<6), "aS_BFu31i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_BFu7ll, aS_BFu31i_BFu7ll)
//============================================================================



static void Test_aS_BFu31i_BFu7s()
{
  {
    init_simple_test("aS_BFu31i_BFu7s");
    static STRUCT_IF_C aS_BFu31i_BFu7s lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu31i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_BFu7s.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_BFu7s");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_BFu7s");
    set_bf_and_test(lv, v3, 5, 7, 7, 1, "aS_BFu31i_BFu7s");
    set_bf_and_test(lv, v3, 5, 7, 7, hide_ull(1LL<<6), "aS_BFu31i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_BFu7s, aS_BFu31i_BFu7s)
//============================================================================



static void Test_aS_BFu31i_BFu8c()
{
  {
    init_simple_test("aS_BFu31i_BFu8c");
    static STRUCT_IF_C aS_BFu31i_BFu8c lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu31i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_BFu8c.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_BFu8c");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_BFu8c");
    set_bf_and_test(lv, v3, 5, 7, 8, 1, "aS_BFu31i_BFu8c");
    set_bf_and_test(lv, v3, 5, 7, 8, hide_ull(1LL<<7), "aS_BFu31i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_BFu8c, aS_BFu31i_BFu8c)
//============================================================================



static void Test_aS_BFu31i_BFu8i()
{
  {
    init_simple_test("aS_BFu31i_BFu8i");
    static STRUCT_IF_C aS_BFu31i_BFu8i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu31i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_BFu8i.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_BFu8i");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_BFu8i");
    set_bf_and_test(lv, v3, 5, 7, 8, 1, "aS_BFu31i_BFu8i");
    set_bf_and_test(lv, v3, 5, 7, 8, hide_ull(1LL<<7), "aS_BFu31i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_BFu8i, aS_BFu31i_BFu8i)
//============================================================================



static void Test_aS_BFu31i_BFu8ll()
{
  {
    init_simple_test("aS_BFu31i_BFu8ll");
    static STRUCT_IF_C aS_BFu31i_BFu8ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu31i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_BFu8ll");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_BFu8ll");
    set_bf_and_test(lv, v3, 5, 7, 8, 1, "aS_BFu31i_BFu8ll");
    set_bf_and_test(lv, v3, 5, 7, 8, hide_ull(1LL<<7), "aS_BFu31i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_BFu8ll, aS_BFu31i_BFu8ll)
//============================================================================



static void Test_aS_BFu31i_BFu8s()
{
  {
    init_simple_test("aS_BFu31i_BFu8s");
    static STRUCT_IF_C aS_BFu31i_BFu8s lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu31i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_BFu8s.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_BFu8s");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_BFu8s");
    set_bf_and_test(lv, v3, 5, 7, 8, 1, "aS_BFu31i_BFu8s");
    set_bf_and_test(lv, v3, 5, 7, 8, hide_ull(1LL<<7), "aS_BFu31i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_BFu8s, aS_BFu31i_BFu8s)
//============================================================================



static void Test_aS_BFu31i_BFu9i()
{
  {
    init_simple_test("aS_BFu31i_BFu9i");
    static STRUCT_IF_C aS_BFu31i_BFu9i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu31i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_BFu9i.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_BFu9i");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_BFu9i");
    set_bf_and_test(lv, v3, 5, 7, 9, 1, "aS_BFu31i_BFu9i");
    set_bf_and_test(lv, v3, 5, 7, 9, hide_ull(1LL<<8), "aS_BFu31i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_BFu9i, aS_BFu31i_BFu9i)
//============================================================================



static void Test_aS_BFu31i_BFu9ll()
{
  {
    init_simple_test("aS_BFu31i_BFu9ll");
    static STRUCT_IF_C aS_BFu31i_BFu9ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu31i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_BFu9ll");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_BFu9ll");
    set_bf_and_test(lv, v3, 5, 7, 9, 1, "aS_BFu31i_BFu9ll");
    set_bf_and_test(lv, v3, 5, 7, 9, hide_ull(1LL<<8), "aS_BFu31i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_BFu9ll, aS_BFu31i_BFu9ll)
//============================================================================



static void Test_aS_BFu31i_BFu9s()
{
  {
    init_simple_test("aS_BFu31i_BFu9s");
    static STRUCT_IF_C aS_BFu31i_BFu9s lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu31i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_BFu9s.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_BFu9s");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_BFu9s");
    set_bf_and_test(lv, v3, 5, 7, 9, 1, "aS_BFu31i_BFu9s");
    set_bf_and_test(lv, v3, 5, 7, 9, hide_ull(1LL<<8), "aS_BFu31i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_BFu9s, aS_BFu31i_BFu9s)
//============================================================================



static void Test_aS_BFu31i_C()
{
  {
    init_simple_test("aS_BFu31i_C");
    static STRUCT_IF_C aS_BFu31i_C lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu31i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_C)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_C.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_C");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_C");
    check_field_offset(lv, v3, 6, "aS_BFu31i_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_C, aS_BFu31i_C)
//============================================================================



static void Test_aS_BFu31i_D()
{
  {
    init_simple_test("aS_BFu31i_D");
    static STRUCT_IF_C aS_BFu31i_D lv;
    check2(sizeof(lv), 14, "sizeof(aS_BFu31i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_D)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_D.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_D");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_D");
    check_field_offset(lv, v3, 6, "aS_BFu31i_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_D, aS_BFu31i_D)
//============================================================================



static void Test_aS_BFu31i_F()
{
  {
    init_simple_test("aS_BFu31i_F");
    static STRUCT_IF_C aS_BFu31i_F lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu31i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_F)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_F.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_F");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_F");
    check_field_offset(lv, v3, 6, "aS_BFu31i_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_F, aS_BFu31i_F)
//============================================================================



static void Test_aS_BFu31i_I()
{
  {
    init_simple_test("aS_BFu31i_I");
    static STRUCT_IF_C aS_BFu31i_I lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu31i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_I)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_I.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_I");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_I");
    check_field_offset(lv, v3, 6, "aS_BFu31i_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_I, aS_BFu31i_I)
//============================================================================



static void Test_aS_BFu31i_Ip()
{
  {
    init_simple_test("aS_BFu31i_Ip");
    static STRUCT_IF_C aS_BFu31i_Ip lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aS_BFu31i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_Ip)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_Ip.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_Ip");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_Ip");
    check_field_offset(lv, v3, 6, "aS_BFu31i_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_Ip, aS_BFu31i_Ip)
//============================================================================



static void Test_aS_BFu31i_L()
{
  {
    init_simple_test("aS_BFu31i_L");
    static STRUCT_IF_C aS_BFu31i_L lv;
    check2(sizeof(lv), 14, "sizeof(aS_BFu31i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_L)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_L.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_L");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_L");
    check_field_offset(lv, v3, 6, "aS_BFu31i_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_L, aS_BFu31i_L)
//============================================================================



static void Test_aS_BFu31i_S()
{
  {
    init_simple_test("aS_BFu31i_S");
    static STRUCT_IF_C aS_BFu31i_S lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu31i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_S)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_S.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_S");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_S");
    check_field_offset(lv, v3, 6, "aS_BFu31i_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_S, aS_BFu31i_S)
//============================================================================



static void Test_aS_BFu31i_Uc()
{
  {
    init_simple_test("aS_BFu31i_Uc");
    static STRUCT_IF_C aS_BFu31i_Uc lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu31i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_Uc)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_Uc.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_Uc");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_Uc");
    check_field_offset(lv, v3, 6, "aS_BFu31i_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_Uc, aS_BFu31i_Uc)
//============================================================================



static void Test_aS_BFu31i_Ui()
{
  {
    init_simple_test("aS_BFu31i_Ui");
    static STRUCT_IF_C aS_BFu31i_Ui lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu31i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_Ui)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_Ui.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_Ui");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_Ui");
    check_field_offset(lv, v3, 6, "aS_BFu31i_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_Ui, aS_BFu31i_Ui)
//============================================================================



static void Test_aS_BFu31i_Ul()
{
  {
    init_simple_test("aS_BFu31i_Ul");
    static STRUCT_IF_C aS_BFu31i_Ul lv;
    check2(sizeof(lv), 14, "sizeof(aS_BFu31i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_Ul)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_Ul.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_Ul");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_Ul");
    check_field_offset(lv, v3, 6, "aS_BFu31i_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_Ul, aS_BFu31i_Ul)
//============================================================================



static void Test_aS_BFu31i_Us()
{
  {
    init_simple_test("aS_BFu31i_Us");
    static STRUCT_IF_C aS_BFu31i_Us lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu31i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_Us)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_Us.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_Us");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_Us");
    check_field_offset(lv, v3, 6, "aS_BFu31i_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_Us, aS_BFu31i_Us)
//============================================================================



static void Test_aS_BFu31i_Vp()
{
  {
    init_simple_test("aS_BFu31i_Vp");
    static STRUCT_IF_C aS_BFu31i_Vp lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aS_BFu31i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31i_Vp)");
    check_field_offset(lv, v1, 0, "aS_BFu31i_Vp.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31i_Vp");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31i_Vp");
    check_field_offset(lv, v3, 6, "aS_BFu31i_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31i_Vp, aS_BFu31i_Vp)
//============================================================================



static void Test_aS_BFu31ll()
{
  {
    init_simple_test("aS_BFu31ll");
    static STRUCT_IF_C aS_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll, aS_BFu31ll)
//============================================================================



static void Test_aS_BFu31ll_BFu15i()
{
  {
    init_simple_test("aS_BFu31ll_BFu15i");
    static STRUCT_IF_C aS_BFu31ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu31ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_BFu15i");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_BFu15i");
    set_bf_and_test(lv, v3, 5, 7, 15, 1, "aS_BFu31ll_BFu15i");
    set_bf_and_test(lv, v3, 5, 7, 15, hide_ull(1LL<<14), "aS_BFu31ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_BFu15i, aS_BFu31ll_BFu15i)
//============================================================================



static void Test_aS_BFu31ll_BFu15ll()
{
  {
    init_simple_test("aS_BFu31ll_BFu15ll");
    static STRUCT_IF_C aS_BFu31ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu31ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_BFu15ll");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_BFu15ll");
    set_bf_and_test(lv, v3, 5, 7, 15, 1, "aS_BFu31ll_BFu15ll");
    set_bf_and_test(lv, v3, 5, 7, 15, hide_ull(1LL<<14), "aS_BFu31ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_BFu15ll, aS_BFu31ll_BFu15ll)
//============================================================================



static void Test_aS_BFu31ll_BFu15s()
{
  {
    init_simple_test("aS_BFu31ll_BFu15s");
    static STRUCT_IF_C aS_BFu31ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu31ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_BFu15s");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_BFu15s");
    set_bf_and_test(lv, v3, 5, 7, 15, 1, "aS_BFu31ll_BFu15s");
    set_bf_and_test(lv, v3, 5, 7, 15, hide_ull(1LL<<14), "aS_BFu31ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_BFu15s, aS_BFu31ll_BFu15s)
//============================================================================



static void Test_aS_BFu31ll_BFu16i()
{
  {
    init_simple_test("aS_BFu31ll_BFu16i");
    static STRUCT_IF_C aS_BFu31ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu31ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_BFu16i");
    set_bf_and_test(lv, v3, 5, 7, 16, 1, "aS_BFu31ll_BFu16i");
    set_bf_and_test(lv, v3, 5, 7, 16, hide_ull(1LL<<15), "aS_BFu31ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_BFu16i, aS_BFu31ll_BFu16i)
//============================================================================



static void Test_aS_BFu31ll_BFu16ll()
{
  {
    init_simple_test("aS_BFu31ll_BFu16ll");
    static STRUCT_IF_C aS_BFu31ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu31ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_BFu16ll");
    set_bf_and_test(lv, v3, 5, 7, 16, 1, "aS_BFu31ll_BFu16ll");
    set_bf_and_test(lv, v3, 5, 7, 16, hide_ull(1LL<<15), "aS_BFu31ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_BFu16ll, aS_BFu31ll_BFu16ll)
//============================================================================



static void Test_aS_BFu31ll_BFu16s()
{
  {
    init_simple_test("aS_BFu31ll_BFu16s");
    static STRUCT_IF_C aS_BFu31ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu31ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_BFu16s");
    set_bf_and_test(lv, v3, 5, 7, 16, 1, "aS_BFu31ll_BFu16s");
    set_bf_and_test(lv, v3, 5, 7, 16, hide_ull(1LL<<15), "aS_BFu31ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_BFu16s, aS_BFu31ll_BFu16s)
//============================================================================



static void Test_aS_BFu31ll_BFu17i()
{
  {
    init_simple_test("aS_BFu31ll_BFu17i");
    static STRUCT_IF_C aS_BFu31ll_BFu17i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu31ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_BFu17i");
    set_bf_and_test(lv, v3, 5, 7, 17, 1, "aS_BFu31ll_BFu17i");
    set_bf_and_test(lv, v3, 5, 7, 17, hide_ull(1LL<<16), "aS_BFu31ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_BFu17i, aS_BFu31ll_BFu17i)
//============================================================================



static void Test_aS_BFu31ll_BFu17ll()
{
  {
    init_simple_test("aS_BFu31ll_BFu17ll");
    static STRUCT_IF_C aS_BFu31ll_BFu17ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu31ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_BFu17ll");
    set_bf_and_test(lv, v3, 5, 7, 17, 1, "aS_BFu31ll_BFu17ll");
    set_bf_and_test(lv, v3, 5, 7, 17, hide_ull(1LL<<16), "aS_BFu31ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_BFu17ll, aS_BFu31ll_BFu17ll)
//============================================================================



static void Test_aS_BFu31ll_BFu1c()
{
  {
    init_simple_test("aS_BFu31ll_BFu1c");
    static STRUCT_IF_C aS_BFu31ll_BFu1c lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu31ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_BFu1c");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_BFu1c");
    set_bf_and_test(lv, v3, 5, 7, 1, 1, "aS_BFu31ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_BFu1c, aS_BFu31ll_BFu1c)
//============================================================================



static void Test_aS_BFu31ll_BFu1i()
{
  {
    init_simple_test("aS_BFu31ll_BFu1i");
    static STRUCT_IF_C aS_BFu31ll_BFu1i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu31ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_BFu1i");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_BFu1i");
    set_bf_and_test(lv, v3, 5, 7, 1, 1, "aS_BFu31ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_BFu1i, aS_BFu31ll_BFu1i)
//============================================================================



static void Test_aS_BFu31ll_BFu1ll()
{
  {
    init_simple_test("aS_BFu31ll_BFu1ll");
    static STRUCT_IF_C aS_BFu31ll_BFu1ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu31ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_BFu1ll");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_BFu1ll");
    set_bf_and_test(lv, v3, 5, 7, 1, 1, "aS_BFu31ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_BFu1ll, aS_BFu31ll_BFu1ll)
//============================================================================



static void Test_aS_BFu31ll_BFu1s()
{
  {
    init_simple_test("aS_BFu31ll_BFu1s");
    static STRUCT_IF_C aS_BFu31ll_BFu1s lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu31ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_BFu1s");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_BFu1s");
    set_bf_and_test(lv, v3, 5, 7, 1, 1, "aS_BFu31ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_BFu1s, aS_BFu31ll_BFu1s)
//============================================================================



static void Test_aS_BFu31ll_BFu31i()
{
  {
    init_simple_test("aS_BFu31ll_BFu31i");
    static STRUCT_IF_C aS_BFu31ll_BFu31i lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu31ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_BFu31i");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_BFu31i");
    set_bf_and_test(lv, v3, 5, 7, 31, 1, "aS_BFu31ll_BFu31i");
    set_bf_and_test(lv, v3, 5, 7, 31, hide_ull(1LL<<30), "aS_BFu31ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_BFu31i, aS_BFu31ll_BFu31i)
//============================================================================



static void Test_aS_BFu31ll_BFu31ll()
{
  {
    init_simple_test("aS_BFu31ll_BFu31ll");
    static STRUCT_IF_C aS_BFu31ll_BFu31ll lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu31ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_BFu31ll");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_BFu31ll");
    set_bf_and_test(lv, v3, 5, 7, 31, 1, "aS_BFu31ll_BFu31ll");
    set_bf_and_test(lv, v3, 5, 7, 31, hide_ull(1LL<<30), "aS_BFu31ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_BFu31ll, aS_BFu31ll_BFu31ll)
//============================================================================



static void Test_aS_BFu31ll_BFu32i()
{
  {
    init_simple_test("aS_BFu31ll_BFu32i");
    static STRUCT_IF_C aS_BFu31ll_BFu32i lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu31ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_BFu32i");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_BFu32i");
    set_bf_and_test(lv, v3, 5, 7, 32, 1, "aS_BFu31ll_BFu32i");
    set_bf_and_test(lv, v3, 5, 7, 32, hide_ull(1LL<<31), "aS_BFu31ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_BFu32i, aS_BFu31ll_BFu32i)
//============================================================================



static void Test_aS_BFu31ll_BFu32ll()
{
  {
    init_simple_test("aS_BFu31ll_BFu32ll");
    static STRUCT_IF_C aS_BFu31ll_BFu32ll lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu31ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_BFu32ll");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_BFu32ll");
    set_bf_and_test(lv, v3, 5, 7, 32, 1, "aS_BFu31ll_BFu32ll");
    set_bf_and_test(lv, v3, 5, 7, 32, hide_ull(1LL<<31), "aS_BFu31ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_BFu32ll, aS_BFu31ll_BFu32ll)
//============================================================================



static void Test_aS_BFu31ll_BFu33()
{
  {
    init_simple_test("aS_BFu31ll_BFu33");
    static STRUCT_IF_C aS_BFu31ll_BFu33 lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu31ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_BFu33)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_BFu33.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_BFu33");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_BFu33");
    set_bf_and_test(lv, v3, 5, 7, 33, 1, "aS_BFu31ll_BFu33");
    set_bf_and_test(lv, v3, 5, 7, 33, hide_ull(1LL<<32), "aS_BFu31ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_BFu33, aS_BFu31ll_BFu33)
//============================================================================



static void Test_aS_BFu31ll_BFu7c()
{
  {
    init_simple_test("aS_BFu31ll_BFu7c");
    static STRUCT_IF_C aS_BFu31ll_BFu7c lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu31ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_BFu7c");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_BFu7c");
    set_bf_and_test(lv, v3, 5, 7, 7, 1, "aS_BFu31ll_BFu7c");
    set_bf_and_test(lv, v3, 5, 7, 7, hide_ull(1LL<<6), "aS_BFu31ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_BFu7c, aS_BFu31ll_BFu7c)
//============================================================================



static void Test_aS_BFu31ll_BFu7i()
{
  {
    init_simple_test("aS_BFu31ll_BFu7i");
    static STRUCT_IF_C aS_BFu31ll_BFu7i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu31ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_BFu7i");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_BFu7i");
    set_bf_and_test(lv, v3, 5, 7, 7, 1, "aS_BFu31ll_BFu7i");
    set_bf_and_test(lv, v3, 5, 7, 7, hide_ull(1LL<<6), "aS_BFu31ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_BFu7i, aS_BFu31ll_BFu7i)
//============================================================================



static void Test_aS_BFu31ll_BFu7ll()
{
  {
    init_simple_test("aS_BFu31ll_BFu7ll");
    static STRUCT_IF_C aS_BFu31ll_BFu7ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu31ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_BFu7ll");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_BFu7ll");
    set_bf_and_test(lv, v3, 5, 7, 7, 1, "aS_BFu31ll_BFu7ll");
    set_bf_and_test(lv, v3, 5, 7, 7, hide_ull(1LL<<6), "aS_BFu31ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_BFu7ll, aS_BFu31ll_BFu7ll)
//============================================================================



static void Test_aS_BFu31ll_BFu7s()
{
  {
    init_simple_test("aS_BFu31ll_BFu7s");
    static STRUCT_IF_C aS_BFu31ll_BFu7s lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu31ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_BFu7s");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_BFu7s");
    set_bf_and_test(lv, v3, 5, 7, 7, 1, "aS_BFu31ll_BFu7s");
    set_bf_and_test(lv, v3, 5, 7, 7, hide_ull(1LL<<6), "aS_BFu31ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_BFu7s, aS_BFu31ll_BFu7s)
//============================================================================



static void Test_aS_BFu31ll_BFu8c()
{
  {
    init_simple_test("aS_BFu31ll_BFu8c");
    static STRUCT_IF_C aS_BFu31ll_BFu8c lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu31ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_BFu8c");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_BFu8c");
    set_bf_and_test(lv, v3, 5, 7, 8, 1, "aS_BFu31ll_BFu8c");
    set_bf_and_test(lv, v3, 5, 7, 8, hide_ull(1LL<<7), "aS_BFu31ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_BFu8c, aS_BFu31ll_BFu8c)
//============================================================================



static void Test_aS_BFu31ll_BFu8i()
{
  {
    init_simple_test("aS_BFu31ll_BFu8i");
    static STRUCT_IF_C aS_BFu31ll_BFu8i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu31ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_BFu8i");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_BFu8i");
    set_bf_and_test(lv, v3, 5, 7, 8, 1, "aS_BFu31ll_BFu8i");
    set_bf_and_test(lv, v3, 5, 7, 8, hide_ull(1LL<<7), "aS_BFu31ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_BFu8i, aS_BFu31ll_BFu8i)
//============================================================================



static void Test_aS_BFu31ll_BFu8ll()
{
  {
    init_simple_test("aS_BFu31ll_BFu8ll");
    static STRUCT_IF_C aS_BFu31ll_BFu8ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu31ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_BFu8ll");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_BFu8ll");
    set_bf_and_test(lv, v3, 5, 7, 8, 1, "aS_BFu31ll_BFu8ll");
    set_bf_and_test(lv, v3, 5, 7, 8, hide_ull(1LL<<7), "aS_BFu31ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_BFu8ll, aS_BFu31ll_BFu8ll)
//============================================================================



static void Test_aS_BFu31ll_BFu8s()
{
  {
    init_simple_test("aS_BFu31ll_BFu8s");
    static STRUCT_IF_C aS_BFu31ll_BFu8s lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu31ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_BFu8s");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_BFu8s");
    set_bf_and_test(lv, v3, 5, 7, 8, 1, "aS_BFu31ll_BFu8s");
    set_bf_and_test(lv, v3, 5, 7, 8, hide_ull(1LL<<7), "aS_BFu31ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_BFu8s, aS_BFu31ll_BFu8s)
//============================================================================



static void Test_aS_BFu31ll_BFu9i()
{
  {
    init_simple_test("aS_BFu31ll_BFu9i");
    static STRUCT_IF_C aS_BFu31ll_BFu9i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu31ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_BFu9i");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_BFu9i");
    set_bf_and_test(lv, v3, 5, 7, 9, 1, "aS_BFu31ll_BFu9i");
    set_bf_and_test(lv, v3, 5, 7, 9, hide_ull(1LL<<8), "aS_BFu31ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_BFu9i, aS_BFu31ll_BFu9i)
//============================================================================



static void Test_aS_BFu31ll_BFu9ll()
{
  {
    init_simple_test("aS_BFu31ll_BFu9ll");
    static STRUCT_IF_C aS_BFu31ll_BFu9ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu31ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_BFu9ll");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_BFu9ll");
    set_bf_and_test(lv, v3, 5, 7, 9, 1, "aS_BFu31ll_BFu9ll");
    set_bf_and_test(lv, v3, 5, 7, 9, hide_ull(1LL<<8), "aS_BFu31ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_BFu9ll, aS_BFu31ll_BFu9ll)
//============================================================================



static void Test_aS_BFu31ll_BFu9s()
{
  {
    init_simple_test("aS_BFu31ll_BFu9s");
    static STRUCT_IF_C aS_BFu31ll_BFu9s lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu31ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_BFu9s");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_BFu9s");
    set_bf_and_test(lv, v3, 5, 7, 9, 1, "aS_BFu31ll_BFu9s");
    set_bf_and_test(lv, v3, 5, 7, 9, hide_ull(1LL<<8), "aS_BFu31ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_BFu9s, aS_BFu31ll_BFu9s)
//============================================================================



static void Test_aS_BFu31ll_C()
{
  {
    init_simple_test("aS_BFu31ll_C");
    static STRUCT_IF_C aS_BFu31ll_C lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu31ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_C)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_C.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_C");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_C");
    check_field_offset(lv, v3, 6, "aS_BFu31ll_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_C, aS_BFu31ll_C)
//============================================================================



static void Test_aS_BFu31ll_D()
{
  {
    init_simple_test("aS_BFu31ll_D");
    static STRUCT_IF_C aS_BFu31ll_D lv;
    check2(sizeof(lv), 14, "sizeof(aS_BFu31ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_D)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_D.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_D");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_D");
    check_field_offset(lv, v3, 6, "aS_BFu31ll_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_D, aS_BFu31ll_D)
//============================================================================



static void Test_aS_BFu31ll_F()
{
  {
    init_simple_test("aS_BFu31ll_F");
    static STRUCT_IF_C aS_BFu31ll_F lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu31ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_F)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_F.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_F");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_F");
    check_field_offset(lv, v3, 6, "aS_BFu31ll_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_F, aS_BFu31ll_F)
//============================================================================



static void Test_aS_BFu31ll_I()
{
  {
    init_simple_test("aS_BFu31ll_I");
    static STRUCT_IF_C aS_BFu31ll_I lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu31ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_I)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_I.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_I");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_I");
    check_field_offset(lv, v3, 6, "aS_BFu31ll_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_I, aS_BFu31ll_I)
//============================================================================



static void Test_aS_BFu31ll_Ip()
{
  {
    init_simple_test("aS_BFu31ll_Ip");
    static STRUCT_IF_C aS_BFu31ll_Ip lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aS_BFu31ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_Ip)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_Ip.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_Ip");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_Ip");
    check_field_offset(lv, v3, 6, "aS_BFu31ll_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_Ip, aS_BFu31ll_Ip)
//============================================================================



static void Test_aS_BFu31ll_L()
{
  {
    init_simple_test("aS_BFu31ll_L");
    static STRUCT_IF_C aS_BFu31ll_L lv;
    check2(sizeof(lv), 14, "sizeof(aS_BFu31ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_L)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_L.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_L");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_L");
    check_field_offset(lv, v3, 6, "aS_BFu31ll_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_L, aS_BFu31ll_L)
//============================================================================



static void Test_aS_BFu31ll_S()
{
  {
    init_simple_test("aS_BFu31ll_S");
    static STRUCT_IF_C aS_BFu31ll_S lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu31ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_S)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_S.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_S");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_S");
    check_field_offset(lv, v3, 6, "aS_BFu31ll_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_S, aS_BFu31ll_S)
//============================================================================



static void Test_aS_BFu31ll_Uc()
{
  {
    init_simple_test("aS_BFu31ll_Uc");
    static STRUCT_IF_C aS_BFu31ll_Uc lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu31ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_Uc)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_Uc.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_Uc");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_Uc");
    check_field_offset(lv, v3, 6, "aS_BFu31ll_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_Uc, aS_BFu31ll_Uc)
//============================================================================



static void Test_aS_BFu31ll_Ui()
{
  {
    init_simple_test("aS_BFu31ll_Ui");
    static STRUCT_IF_C aS_BFu31ll_Ui lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu31ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_Ui)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_Ui.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_Ui");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_Ui");
    check_field_offset(lv, v3, 6, "aS_BFu31ll_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_Ui, aS_BFu31ll_Ui)
//============================================================================



static void Test_aS_BFu31ll_Ul()
{
  {
    init_simple_test("aS_BFu31ll_Ul");
    static STRUCT_IF_C aS_BFu31ll_Ul lv;
    check2(sizeof(lv), 14, "sizeof(aS_BFu31ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_Ul)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_Ul.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_Ul");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_Ul");
    check_field_offset(lv, v3, 6, "aS_BFu31ll_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_Ul, aS_BFu31ll_Ul)
//============================================================================



static void Test_aS_BFu31ll_Us()
{
  {
    init_simple_test("aS_BFu31ll_Us");
    static STRUCT_IF_C aS_BFu31ll_Us lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu31ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_Us)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_Us.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_Us");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_Us");
    check_field_offset(lv, v3, 6, "aS_BFu31ll_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_Us, aS_BFu31ll_Us)
//============================================================================



static void Test_aS_BFu31ll_Vp()
{
  {
    init_simple_test("aS_BFu31ll_Vp");
    static STRUCT_IF_C aS_BFu31ll_Vp lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aS_BFu31ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu31ll_Vp)");
    check_field_offset(lv, v1, 0, "aS_BFu31ll_Vp.v1");
    set_bf_and_test(lv, v2, 2, 0, 31, 1, "aS_BFu31ll_Vp");
    set_bf_and_test(lv, v2, 2, 0, 31, hide_ull(1LL<<30), "aS_BFu31ll_Vp");
    check_field_offset(lv, v3, 6, "aS_BFu31ll_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu31ll_Vp, aS_BFu31ll_Vp)
//============================================================================



static void Test_aS_BFu32i()
{
  {
    init_simple_test("aS_BFu32i");
    static STRUCT_IF_C aS_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_BFu32i.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i, aS_BFu32i)
//============================================================================



static void Test_aS_BFu32i_BFu15i()
{
  {
    init_simple_test("aS_BFu32i_BFu15i");
    static STRUCT_IF_C aS_BFu32i_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu32i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_BFu15i.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_BFu15i");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_BFu15i");
    set_bf_and_test(lv, v3, 6, 0, 15, 1, "aS_BFu32i_BFu15i");
    set_bf_and_test(lv, v3, 6, 0, 15, hide_ull(1LL<<14), "aS_BFu32i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_BFu15i, aS_BFu32i_BFu15i)
//============================================================================



static void Test_aS_BFu32i_BFu15ll()
{
  {
    init_simple_test("aS_BFu32i_BFu15ll");
    static STRUCT_IF_C aS_BFu32i_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu32i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_BFu15ll");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_BFu15ll");
    set_bf_and_test(lv, v3, 6, 0, 15, 1, "aS_BFu32i_BFu15ll");
    set_bf_and_test(lv, v3, 6, 0, 15, hide_ull(1LL<<14), "aS_BFu32i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_BFu15ll, aS_BFu32i_BFu15ll)
//============================================================================



static void Test_aS_BFu32i_BFu15s()
{
  {
    init_simple_test("aS_BFu32i_BFu15s");
    static STRUCT_IF_C aS_BFu32i_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu32i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_BFu15s.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_BFu15s");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_BFu15s");
    set_bf_and_test(lv, v3, 6, 0, 15, 1, "aS_BFu32i_BFu15s");
    set_bf_and_test(lv, v3, 6, 0, 15, hide_ull(1LL<<14), "aS_BFu32i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_BFu15s, aS_BFu32i_BFu15s)
//============================================================================



static void Test_aS_BFu32i_BFu16i()
{
  {
    init_simple_test("aS_BFu32i_BFu16i");
    static STRUCT_IF_C aS_BFu32i_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu32i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_BFu16i.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_BFu16i");
    set_bf_and_test(lv, v3, 6, 0, 16, 1, "aS_BFu32i_BFu16i");
    set_bf_and_test(lv, v3, 6, 0, 16, hide_ull(1LL<<15), "aS_BFu32i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_BFu16i, aS_BFu32i_BFu16i)
//============================================================================



static void Test_aS_BFu32i_BFu16ll()
{
  {
    init_simple_test("aS_BFu32i_BFu16ll");
    static STRUCT_IF_C aS_BFu32i_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu32i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_BFu16ll");
    set_bf_and_test(lv, v3, 6, 0, 16, 1, "aS_BFu32i_BFu16ll");
    set_bf_and_test(lv, v3, 6, 0, 16, hide_ull(1LL<<15), "aS_BFu32i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_BFu16ll, aS_BFu32i_BFu16ll)
//============================================================================



static void Test_aS_BFu32i_BFu16s()
{
  {
    init_simple_test("aS_BFu32i_BFu16s");
    static STRUCT_IF_C aS_BFu32i_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu32i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_BFu16s.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_BFu16s");
    set_bf_and_test(lv, v3, 6, 0, 16, 1, "aS_BFu32i_BFu16s");
    set_bf_and_test(lv, v3, 6, 0, 16, hide_ull(1LL<<15), "aS_BFu32i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_BFu16s, aS_BFu32i_BFu16s)
//============================================================================



static void Test_aS_BFu32i_BFu17i()
{
  {
    init_simple_test("aS_BFu32i_BFu17i");
    static STRUCT_IF_C aS_BFu32i_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aS_BFu32i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_BFu17i.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_BFu17i");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_BFu17i");
    set_bf_and_test(lv, v3, 6, 0, 17, 1, "aS_BFu32i_BFu17i");
    set_bf_and_test(lv, v3, 6, 0, 17, hide_ull(1LL<<16), "aS_BFu32i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_BFu17i, aS_BFu32i_BFu17i)
//============================================================================



static void Test_aS_BFu32i_BFu17ll()
{
  {
    init_simple_test("aS_BFu32i_BFu17ll");
    static STRUCT_IF_C aS_BFu32i_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aS_BFu32i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_BFu17ll");
    set_bf_and_test(lv, v3, 6, 0, 17, 1, "aS_BFu32i_BFu17ll");
    set_bf_and_test(lv, v3, 6, 0, 17, hide_ull(1LL<<16), "aS_BFu32i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_BFu17ll, aS_BFu32i_BFu17ll)
//============================================================================



static void Test_aS_BFu32i_BFu1c()
{
  {
    init_simple_test("aS_BFu32i_BFu1c");
    static STRUCT_IF_C aS_BFu32i_BFu1c lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu32i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_BFu1c.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_BFu1c");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_BFu1c");
    set_bf_and_test(lv, v3, 6, 0, 1, 1, "aS_BFu32i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_BFu1c, aS_BFu32i_BFu1c)
//============================================================================



static void Test_aS_BFu32i_BFu1i()
{
  {
    init_simple_test("aS_BFu32i_BFu1i");
    static STRUCT_IF_C aS_BFu32i_BFu1i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu32i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_BFu1i.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_BFu1i");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_BFu1i");
    set_bf_and_test(lv, v3, 6, 0, 1, 1, "aS_BFu32i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_BFu1i, aS_BFu32i_BFu1i)
//============================================================================



static void Test_aS_BFu32i_BFu1ll()
{
  {
    init_simple_test("aS_BFu32i_BFu1ll");
    static STRUCT_IF_C aS_BFu32i_BFu1ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu32i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_BFu1ll");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_BFu1ll");
    set_bf_and_test(lv, v3, 6, 0, 1, 1, "aS_BFu32i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_BFu1ll, aS_BFu32i_BFu1ll)
//============================================================================



static void Test_aS_BFu32i_BFu1s()
{
  {
    init_simple_test("aS_BFu32i_BFu1s");
    static STRUCT_IF_C aS_BFu32i_BFu1s lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu32i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_BFu1s.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_BFu1s");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_BFu1s");
    set_bf_and_test(lv, v3, 6, 0, 1, 1, "aS_BFu32i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_BFu1s, aS_BFu32i_BFu1s)
//============================================================================



static void Test_aS_BFu32i_BFu31i()
{
  {
    init_simple_test("aS_BFu32i_BFu31i");
    static STRUCT_IF_C aS_BFu32i_BFu31i lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu32i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_BFu31i.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_BFu31i");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_BFu31i");
    set_bf_and_test(lv, v3, 6, 0, 31, 1, "aS_BFu32i_BFu31i");
    set_bf_and_test(lv, v3, 6, 0, 31, hide_ull(1LL<<30), "aS_BFu32i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_BFu31i, aS_BFu32i_BFu31i)
//============================================================================



static void Test_aS_BFu32i_BFu31ll()
{
  {
    init_simple_test("aS_BFu32i_BFu31ll");
    static STRUCT_IF_C aS_BFu32i_BFu31ll lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu32i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_BFu31ll");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_BFu31ll");
    set_bf_and_test(lv, v3, 6, 0, 31, 1, "aS_BFu32i_BFu31ll");
    set_bf_and_test(lv, v3, 6, 0, 31, hide_ull(1LL<<30), "aS_BFu32i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_BFu31ll, aS_BFu32i_BFu31ll)
//============================================================================



static void Test_aS_BFu32i_BFu32i()
{
  {
    init_simple_test("aS_BFu32i_BFu32i");
    static STRUCT_IF_C aS_BFu32i_BFu32i lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu32i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_BFu32i.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_BFu32i");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_BFu32i");
    set_bf_and_test(lv, v3, 6, 0, 32, 1, "aS_BFu32i_BFu32i");
    set_bf_and_test(lv, v3, 6, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_BFu32i, aS_BFu32i_BFu32i)
//============================================================================



static void Test_aS_BFu32i_BFu32ll()
{
  {
    init_simple_test("aS_BFu32i_BFu32ll");
    static STRUCT_IF_C aS_BFu32i_BFu32ll lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu32i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_BFu32ll");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_BFu32ll");
    set_bf_and_test(lv, v3, 6, 0, 32, 1, "aS_BFu32i_BFu32ll");
    set_bf_and_test(lv, v3, 6, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_BFu32ll, aS_BFu32i_BFu32ll)
//============================================================================



static void Test_aS_BFu32i_BFu33()
{
  {
    init_simple_test("aS_BFu32i_BFu33");
    static STRUCT_IF_C aS_BFu32i_BFu33 lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu32i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_BFu33)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_BFu33.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_BFu33");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_BFu33");
    set_bf_and_test(lv, v3, 6, 0, 33, 1, "aS_BFu32i_BFu33");
    set_bf_and_test(lv, v3, 6, 0, 33, hide_ull(1LL<<32), "aS_BFu32i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_BFu33, aS_BFu32i_BFu33)
//============================================================================



static void Test_aS_BFu32i_BFu7c()
{
  {
    init_simple_test("aS_BFu32i_BFu7c");
    static STRUCT_IF_C aS_BFu32i_BFu7c lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu32i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_BFu7c.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_BFu7c");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_BFu7c");
    set_bf_and_test(lv, v3, 6, 0, 7, 1, "aS_BFu32i_BFu7c");
    set_bf_and_test(lv, v3, 6, 0, 7, hide_ull(1LL<<6), "aS_BFu32i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_BFu7c, aS_BFu32i_BFu7c)
//============================================================================



static void Test_aS_BFu32i_BFu7i()
{
  {
    init_simple_test("aS_BFu32i_BFu7i");
    static STRUCT_IF_C aS_BFu32i_BFu7i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu32i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_BFu7i.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_BFu7i");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_BFu7i");
    set_bf_and_test(lv, v3, 6, 0, 7, 1, "aS_BFu32i_BFu7i");
    set_bf_and_test(lv, v3, 6, 0, 7, hide_ull(1LL<<6), "aS_BFu32i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_BFu7i, aS_BFu32i_BFu7i)
//============================================================================



static void Test_aS_BFu32i_BFu7ll()
{
  {
    init_simple_test("aS_BFu32i_BFu7ll");
    static STRUCT_IF_C aS_BFu32i_BFu7ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu32i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_BFu7ll");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_BFu7ll");
    set_bf_and_test(lv, v3, 6, 0, 7, 1, "aS_BFu32i_BFu7ll");
    set_bf_and_test(lv, v3, 6, 0, 7, hide_ull(1LL<<6), "aS_BFu32i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_BFu7ll, aS_BFu32i_BFu7ll)
//============================================================================



static void Test_aS_BFu32i_BFu7s()
{
  {
    init_simple_test("aS_BFu32i_BFu7s");
    static STRUCT_IF_C aS_BFu32i_BFu7s lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu32i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_BFu7s.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_BFu7s");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_BFu7s");
    set_bf_and_test(lv, v3, 6, 0, 7, 1, "aS_BFu32i_BFu7s");
    set_bf_and_test(lv, v3, 6, 0, 7, hide_ull(1LL<<6), "aS_BFu32i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_BFu7s, aS_BFu32i_BFu7s)
//============================================================================



static void Test_aS_BFu32i_BFu8c()
{
  {
    init_simple_test("aS_BFu32i_BFu8c");
    static STRUCT_IF_C aS_BFu32i_BFu8c lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu32i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_BFu8c.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_BFu8c");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_BFu8c");
    set_bf_and_test(lv, v3, 6, 0, 8, 1, "aS_BFu32i_BFu8c");
    set_bf_and_test(lv, v3, 6, 0, 8, hide_ull(1LL<<7), "aS_BFu32i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_BFu8c, aS_BFu32i_BFu8c)
//============================================================================



static void Test_aS_BFu32i_BFu8i()
{
  {
    init_simple_test("aS_BFu32i_BFu8i");
    static STRUCT_IF_C aS_BFu32i_BFu8i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu32i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_BFu8i.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_BFu8i");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_BFu8i");
    set_bf_and_test(lv, v3, 6, 0, 8, 1, "aS_BFu32i_BFu8i");
    set_bf_and_test(lv, v3, 6, 0, 8, hide_ull(1LL<<7), "aS_BFu32i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_BFu8i, aS_BFu32i_BFu8i)
//============================================================================



static void Test_aS_BFu32i_BFu8ll()
{
  {
    init_simple_test("aS_BFu32i_BFu8ll");
    static STRUCT_IF_C aS_BFu32i_BFu8ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu32i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_BFu8ll");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_BFu8ll");
    set_bf_and_test(lv, v3, 6, 0, 8, 1, "aS_BFu32i_BFu8ll");
    set_bf_and_test(lv, v3, 6, 0, 8, hide_ull(1LL<<7), "aS_BFu32i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_BFu8ll, aS_BFu32i_BFu8ll)
//============================================================================



static void Test_aS_BFu32i_BFu8s()
{
  {
    init_simple_test("aS_BFu32i_BFu8s");
    static STRUCT_IF_C aS_BFu32i_BFu8s lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu32i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_BFu8s.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_BFu8s");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_BFu8s");
    set_bf_and_test(lv, v3, 6, 0, 8, 1, "aS_BFu32i_BFu8s");
    set_bf_and_test(lv, v3, 6, 0, 8, hide_ull(1LL<<7), "aS_BFu32i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_BFu8s, aS_BFu32i_BFu8s)
//============================================================================



static void Test_aS_BFu32i_BFu9i()
{
  {
    init_simple_test("aS_BFu32i_BFu9i");
    static STRUCT_IF_C aS_BFu32i_BFu9i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu32i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_BFu9i.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_BFu9i");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_BFu9i");
    set_bf_and_test(lv, v3, 6, 0, 9, 1, "aS_BFu32i_BFu9i");
    set_bf_and_test(lv, v3, 6, 0, 9, hide_ull(1LL<<8), "aS_BFu32i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_BFu9i, aS_BFu32i_BFu9i)
//============================================================================



static void Test_aS_BFu32i_BFu9ll()
{
  {
    init_simple_test("aS_BFu32i_BFu9ll");
    static STRUCT_IF_C aS_BFu32i_BFu9ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu32i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_BFu9ll");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_BFu9ll");
    set_bf_and_test(lv, v3, 6, 0, 9, 1, "aS_BFu32i_BFu9ll");
    set_bf_and_test(lv, v3, 6, 0, 9, hide_ull(1LL<<8), "aS_BFu32i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_BFu9ll, aS_BFu32i_BFu9ll)
//============================================================================



static void Test_aS_BFu32i_BFu9s()
{
  {
    init_simple_test("aS_BFu32i_BFu9s");
    static STRUCT_IF_C aS_BFu32i_BFu9s lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu32i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_BFu9s.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_BFu9s");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_BFu9s");
    set_bf_and_test(lv, v3, 6, 0, 9, 1, "aS_BFu32i_BFu9s");
    set_bf_and_test(lv, v3, 6, 0, 9, hide_ull(1LL<<8), "aS_BFu32i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_BFu9s, aS_BFu32i_BFu9s)
//============================================================================



static void Test_aS_BFu32i_C()
{
  {
    init_simple_test("aS_BFu32i_C");
    static STRUCT_IF_C aS_BFu32i_C lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu32i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_C)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_C.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_C");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_C");
    check_field_offset(lv, v3, 6, "aS_BFu32i_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_C, aS_BFu32i_C)
//============================================================================



static void Test_aS_BFu32i_D()
{
  {
    init_simple_test("aS_BFu32i_D");
    static STRUCT_IF_C aS_BFu32i_D lv;
    check2(sizeof(lv), 14, "sizeof(aS_BFu32i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_D)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_D.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_D");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_D");
    check_field_offset(lv, v3, 6, "aS_BFu32i_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_D, aS_BFu32i_D)
//============================================================================



static void Test_aS_BFu32i_F()
{
  {
    init_simple_test("aS_BFu32i_F");
    static STRUCT_IF_C aS_BFu32i_F lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu32i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_F)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_F.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_F");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_F");
    check_field_offset(lv, v3, 6, "aS_BFu32i_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_F, aS_BFu32i_F)
//============================================================================



static void Test_aS_BFu32i_I()
{
  {
    init_simple_test("aS_BFu32i_I");
    static STRUCT_IF_C aS_BFu32i_I lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu32i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_I)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_I.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_I");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_I");
    check_field_offset(lv, v3, 6, "aS_BFu32i_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_I, aS_BFu32i_I)
//============================================================================



static void Test_aS_BFu32i_Ip()
{
  {
    init_simple_test("aS_BFu32i_Ip");
    static STRUCT_IF_C aS_BFu32i_Ip lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aS_BFu32i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_Ip)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_Ip.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_Ip");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_Ip");
    check_field_offset(lv, v3, 6, "aS_BFu32i_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_Ip, aS_BFu32i_Ip)
//============================================================================



static void Test_aS_BFu32i_L()
{
  {
    init_simple_test("aS_BFu32i_L");
    static STRUCT_IF_C aS_BFu32i_L lv;
    check2(sizeof(lv), 14, "sizeof(aS_BFu32i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_L)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_L.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_L");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_L");
    check_field_offset(lv, v3, 6, "aS_BFu32i_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_L, aS_BFu32i_L)
//============================================================================



static void Test_aS_BFu32i_S()
{
  {
    init_simple_test("aS_BFu32i_S");
    static STRUCT_IF_C aS_BFu32i_S lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu32i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_S)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_S.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_S");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_S");
    check_field_offset(lv, v3, 6, "aS_BFu32i_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_S, aS_BFu32i_S)
//============================================================================



static void Test_aS_BFu32i_Uc()
{
  {
    init_simple_test("aS_BFu32i_Uc");
    static STRUCT_IF_C aS_BFu32i_Uc lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu32i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_Uc)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_Uc.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_Uc");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_Uc");
    check_field_offset(lv, v3, 6, "aS_BFu32i_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_Uc, aS_BFu32i_Uc)
//============================================================================



static void Test_aS_BFu32i_Ui()
{
  {
    init_simple_test("aS_BFu32i_Ui");
    static STRUCT_IF_C aS_BFu32i_Ui lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu32i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_Ui)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_Ui.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_Ui");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_Ui");
    check_field_offset(lv, v3, 6, "aS_BFu32i_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_Ui, aS_BFu32i_Ui)
//============================================================================



static void Test_aS_BFu32i_Ul()
{
  {
    init_simple_test("aS_BFu32i_Ul");
    static STRUCT_IF_C aS_BFu32i_Ul lv;
    check2(sizeof(lv), 14, "sizeof(aS_BFu32i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_Ul)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_Ul.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_Ul");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_Ul");
    check_field_offset(lv, v3, 6, "aS_BFu32i_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_Ul, aS_BFu32i_Ul)
//============================================================================



static void Test_aS_BFu32i_Us()
{
  {
    init_simple_test("aS_BFu32i_Us");
    static STRUCT_IF_C aS_BFu32i_Us lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu32i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_Us)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_Us.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_Us");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_Us");
    check_field_offset(lv, v3, 6, "aS_BFu32i_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_Us, aS_BFu32i_Us)
//============================================================================



static void Test_aS_BFu32i_Vp()
{
  {
    init_simple_test("aS_BFu32i_Vp");
    static STRUCT_IF_C aS_BFu32i_Vp lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aS_BFu32i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32i_Vp)");
    check_field_offset(lv, v1, 0, "aS_BFu32i_Vp.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32i_Vp");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32i_Vp");
    check_field_offset(lv, v3, 6, "aS_BFu32i_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32i_Vp, aS_BFu32i_Vp)
//============================================================================



static void Test_aS_BFu32ll()
{
  {
    init_simple_test("aS_BFu32ll");
    static STRUCT_IF_C aS_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll, aS_BFu32ll)
//============================================================================



static void Test_aS_BFu32ll_BFu15i()
{
  {
    init_simple_test("aS_BFu32ll_BFu15i");
    static STRUCT_IF_C aS_BFu32ll_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu32ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_BFu15i");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_BFu15i");
    set_bf_and_test(lv, v3, 6, 0, 15, 1, "aS_BFu32ll_BFu15i");
    set_bf_and_test(lv, v3, 6, 0, 15, hide_ull(1LL<<14), "aS_BFu32ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_BFu15i, aS_BFu32ll_BFu15i)
//============================================================================



static void Test_aS_BFu32ll_BFu15ll()
{
  {
    init_simple_test("aS_BFu32ll_BFu15ll");
    static STRUCT_IF_C aS_BFu32ll_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu32ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_BFu15ll");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_BFu15ll");
    set_bf_and_test(lv, v3, 6, 0, 15, 1, "aS_BFu32ll_BFu15ll");
    set_bf_and_test(lv, v3, 6, 0, 15, hide_ull(1LL<<14), "aS_BFu32ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_BFu15ll, aS_BFu32ll_BFu15ll)
//============================================================================



static void Test_aS_BFu32ll_BFu15s()
{
  {
    init_simple_test("aS_BFu32ll_BFu15s");
    static STRUCT_IF_C aS_BFu32ll_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu32ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_BFu15s");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_BFu15s");
    set_bf_and_test(lv, v3, 6, 0, 15, 1, "aS_BFu32ll_BFu15s");
    set_bf_and_test(lv, v3, 6, 0, 15, hide_ull(1LL<<14), "aS_BFu32ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_BFu15s, aS_BFu32ll_BFu15s)
//============================================================================



static void Test_aS_BFu32ll_BFu16i()
{
  {
    init_simple_test("aS_BFu32ll_BFu16i");
    static STRUCT_IF_C aS_BFu32ll_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu32ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_BFu16i");
    set_bf_and_test(lv, v3, 6, 0, 16, 1, "aS_BFu32ll_BFu16i");
    set_bf_and_test(lv, v3, 6, 0, 16, hide_ull(1LL<<15), "aS_BFu32ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_BFu16i, aS_BFu32ll_BFu16i)
//============================================================================



static void Test_aS_BFu32ll_BFu16ll()
{
  {
    init_simple_test("aS_BFu32ll_BFu16ll");
    static STRUCT_IF_C aS_BFu32ll_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu32ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_BFu16ll");
    set_bf_and_test(lv, v3, 6, 0, 16, 1, "aS_BFu32ll_BFu16ll");
    set_bf_and_test(lv, v3, 6, 0, 16, hide_ull(1LL<<15), "aS_BFu32ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_BFu16ll, aS_BFu32ll_BFu16ll)
//============================================================================



static void Test_aS_BFu32ll_BFu16s()
{
  {
    init_simple_test("aS_BFu32ll_BFu16s");
    static STRUCT_IF_C aS_BFu32ll_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu32ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_BFu16s");
    set_bf_and_test(lv, v3, 6, 0, 16, 1, "aS_BFu32ll_BFu16s");
    set_bf_and_test(lv, v3, 6, 0, 16, hide_ull(1LL<<15), "aS_BFu32ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_BFu16s, aS_BFu32ll_BFu16s)
//============================================================================



static void Test_aS_BFu32ll_BFu17i()
{
  {
    init_simple_test("aS_BFu32ll_BFu17i");
    static STRUCT_IF_C aS_BFu32ll_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aS_BFu32ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_BFu17i");
    set_bf_and_test(lv, v3, 6, 0, 17, 1, "aS_BFu32ll_BFu17i");
    set_bf_and_test(lv, v3, 6, 0, 17, hide_ull(1LL<<16), "aS_BFu32ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_BFu17i, aS_BFu32ll_BFu17i)
//============================================================================



static void Test_aS_BFu32ll_BFu17ll()
{
  {
    init_simple_test("aS_BFu32ll_BFu17ll");
    static STRUCT_IF_C aS_BFu32ll_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aS_BFu32ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_BFu17ll");
    set_bf_and_test(lv, v3, 6, 0, 17, 1, "aS_BFu32ll_BFu17ll");
    set_bf_and_test(lv, v3, 6, 0, 17, hide_ull(1LL<<16), "aS_BFu32ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_BFu17ll, aS_BFu32ll_BFu17ll)
//============================================================================



static void Test_aS_BFu32ll_BFu1c()
{
  {
    init_simple_test("aS_BFu32ll_BFu1c");
    static STRUCT_IF_C aS_BFu32ll_BFu1c lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu32ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_BFu1c");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_BFu1c");
    set_bf_and_test(lv, v3, 6, 0, 1, 1, "aS_BFu32ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_BFu1c, aS_BFu32ll_BFu1c)
//============================================================================



static void Test_aS_BFu32ll_BFu1i()
{
  {
    init_simple_test("aS_BFu32ll_BFu1i");
    static STRUCT_IF_C aS_BFu32ll_BFu1i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu32ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_BFu1i");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_BFu1i");
    set_bf_and_test(lv, v3, 6, 0, 1, 1, "aS_BFu32ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_BFu1i, aS_BFu32ll_BFu1i)
//============================================================================



static void Test_aS_BFu32ll_BFu1ll()
{
  {
    init_simple_test("aS_BFu32ll_BFu1ll");
    static STRUCT_IF_C aS_BFu32ll_BFu1ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu32ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_BFu1ll");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_BFu1ll");
    set_bf_and_test(lv, v3, 6, 0, 1, 1, "aS_BFu32ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_BFu1ll, aS_BFu32ll_BFu1ll)
//============================================================================



static void Test_aS_BFu32ll_BFu1s()
{
  {
    init_simple_test("aS_BFu32ll_BFu1s");
    static STRUCT_IF_C aS_BFu32ll_BFu1s lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu32ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_BFu1s");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_BFu1s");
    set_bf_and_test(lv, v3, 6, 0, 1, 1, "aS_BFu32ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_BFu1s, aS_BFu32ll_BFu1s)
//============================================================================



static void Test_aS_BFu32ll_BFu31i()
{
  {
    init_simple_test("aS_BFu32ll_BFu31i");
    static STRUCT_IF_C aS_BFu32ll_BFu31i lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu32ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_BFu31i");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_BFu31i");
    set_bf_and_test(lv, v3, 6, 0, 31, 1, "aS_BFu32ll_BFu31i");
    set_bf_and_test(lv, v3, 6, 0, 31, hide_ull(1LL<<30), "aS_BFu32ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_BFu31i, aS_BFu32ll_BFu31i)
//============================================================================



static void Test_aS_BFu32ll_BFu31ll()
{
  {
    init_simple_test("aS_BFu32ll_BFu31ll");
    static STRUCT_IF_C aS_BFu32ll_BFu31ll lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu32ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_BFu31ll");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_BFu31ll");
    set_bf_and_test(lv, v3, 6, 0, 31, 1, "aS_BFu32ll_BFu31ll");
    set_bf_and_test(lv, v3, 6, 0, 31, hide_ull(1LL<<30), "aS_BFu32ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_BFu31ll, aS_BFu32ll_BFu31ll)
//============================================================================



static void Test_aS_BFu32ll_BFu32i()
{
  {
    init_simple_test("aS_BFu32ll_BFu32i");
    static STRUCT_IF_C aS_BFu32ll_BFu32i lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu32ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_BFu32i");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_BFu32i");
    set_bf_and_test(lv, v3, 6, 0, 32, 1, "aS_BFu32ll_BFu32i");
    set_bf_and_test(lv, v3, 6, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_BFu32i, aS_BFu32ll_BFu32i)
//============================================================================



static void Test_aS_BFu32ll_BFu32ll()
{
  {
    init_simple_test("aS_BFu32ll_BFu32ll");
    static STRUCT_IF_C aS_BFu32ll_BFu32ll lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu32ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_BFu32ll");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_BFu32ll");
    set_bf_and_test(lv, v3, 6, 0, 32, 1, "aS_BFu32ll_BFu32ll");
    set_bf_and_test(lv, v3, 6, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_BFu32ll, aS_BFu32ll_BFu32ll)
//============================================================================



static void Test_aS_BFu32ll_BFu33()
{
  {
    init_simple_test("aS_BFu32ll_BFu33");
    static STRUCT_IF_C aS_BFu32ll_BFu33 lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu32ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_BFu33)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_BFu33.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_BFu33");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_BFu33");
    set_bf_and_test(lv, v3, 6, 0, 33, 1, "aS_BFu32ll_BFu33");
    set_bf_and_test(lv, v3, 6, 0, 33, hide_ull(1LL<<32), "aS_BFu32ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_BFu33, aS_BFu32ll_BFu33)
//============================================================================



static void Test_aS_BFu32ll_BFu7c()
{
  {
    init_simple_test("aS_BFu32ll_BFu7c");
    static STRUCT_IF_C aS_BFu32ll_BFu7c lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu32ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_BFu7c");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_BFu7c");
    set_bf_and_test(lv, v3, 6, 0, 7, 1, "aS_BFu32ll_BFu7c");
    set_bf_and_test(lv, v3, 6, 0, 7, hide_ull(1LL<<6), "aS_BFu32ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_BFu7c, aS_BFu32ll_BFu7c)
//============================================================================



static void Test_aS_BFu32ll_BFu7i()
{
  {
    init_simple_test("aS_BFu32ll_BFu7i");
    static STRUCT_IF_C aS_BFu32ll_BFu7i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu32ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_BFu7i");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_BFu7i");
    set_bf_and_test(lv, v3, 6, 0, 7, 1, "aS_BFu32ll_BFu7i");
    set_bf_and_test(lv, v3, 6, 0, 7, hide_ull(1LL<<6), "aS_BFu32ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_BFu7i, aS_BFu32ll_BFu7i)
//============================================================================



static void Test_aS_BFu32ll_BFu7ll()
{
  {
    init_simple_test("aS_BFu32ll_BFu7ll");
    static STRUCT_IF_C aS_BFu32ll_BFu7ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu32ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_BFu7ll");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_BFu7ll");
    set_bf_and_test(lv, v3, 6, 0, 7, 1, "aS_BFu32ll_BFu7ll");
    set_bf_and_test(lv, v3, 6, 0, 7, hide_ull(1LL<<6), "aS_BFu32ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_BFu7ll, aS_BFu32ll_BFu7ll)
//============================================================================



static void Test_aS_BFu32ll_BFu7s()
{
  {
    init_simple_test("aS_BFu32ll_BFu7s");
    static STRUCT_IF_C aS_BFu32ll_BFu7s lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu32ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_BFu7s");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_BFu7s");
    set_bf_and_test(lv, v3, 6, 0, 7, 1, "aS_BFu32ll_BFu7s");
    set_bf_and_test(lv, v3, 6, 0, 7, hide_ull(1LL<<6), "aS_BFu32ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_BFu7s, aS_BFu32ll_BFu7s)
//============================================================================



static void Test_aS_BFu32ll_BFu8c()
{
  {
    init_simple_test("aS_BFu32ll_BFu8c");
    static STRUCT_IF_C aS_BFu32ll_BFu8c lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu32ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_BFu8c");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_BFu8c");
    set_bf_and_test(lv, v3, 6, 0, 8, 1, "aS_BFu32ll_BFu8c");
    set_bf_and_test(lv, v3, 6, 0, 8, hide_ull(1LL<<7), "aS_BFu32ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_BFu8c, aS_BFu32ll_BFu8c)
//============================================================================



static void Test_aS_BFu32ll_BFu8i()
{
  {
    init_simple_test("aS_BFu32ll_BFu8i");
    static STRUCT_IF_C aS_BFu32ll_BFu8i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu32ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_BFu8i");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_BFu8i");
    set_bf_and_test(lv, v3, 6, 0, 8, 1, "aS_BFu32ll_BFu8i");
    set_bf_and_test(lv, v3, 6, 0, 8, hide_ull(1LL<<7), "aS_BFu32ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_BFu8i, aS_BFu32ll_BFu8i)
//============================================================================



static void Test_aS_BFu32ll_BFu8ll()
{
  {
    init_simple_test("aS_BFu32ll_BFu8ll");
    static STRUCT_IF_C aS_BFu32ll_BFu8ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu32ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_BFu8ll");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_BFu8ll");
    set_bf_and_test(lv, v3, 6, 0, 8, 1, "aS_BFu32ll_BFu8ll");
    set_bf_and_test(lv, v3, 6, 0, 8, hide_ull(1LL<<7), "aS_BFu32ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_BFu8ll, aS_BFu32ll_BFu8ll)
//============================================================================



static void Test_aS_BFu32ll_BFu8s()
{
  {
    init_simple_test("aS_BFu32ll_BFu8s");
    static STRUCT_IF_C aS_BFu32ll_BFu8s lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu32ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_BFu8s");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_BFu8s");
    set_bf_and_test(lv, v3, 6, 0, 8, 1, "aS_BFu32ll_BFu8s");
    set_bf_and_test(lv, v3, 6, 0, 8, hide_ull(1LL<<7), "aS_BFu32ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_BFu8s, aS_BFu32ll_BFu8s)
//============================================================================



static void Test_aS_BFu32ll_BFu9i()
{
  {
    init_simple_test("aS_BFu32ll_BFu9i");
    static STRUCT_IF_C aS_BFu32ll_BFu9i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu32ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_BFu9i");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_BFu9i");
    set_bf_and_test(lv, v3, 6, 0, 9, 1, "aS_BFu32ll_BFu9i");
    set_bf_and_test(lv, v3, 6, 0, 9, hide_ull(1LL<<8), "aS_BFu32ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_BFu9i, aS_BFu32ll_BFu9i)
//============================================================================



static void Test_aS_BFu32ll_BFu9ll()
{
  {
    init_simple_test("aS_BFu32ll_BFu9ll");
    static STRUCT_IF_C aS_BFu32ll_BFu9ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu32ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_BFu9ll");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_BFu9ll");
    set_bf_and_test(lv, v3, 6, 0, 9, 1, "aS_BFu32ll_BFu9ll");
    set_bf_and_test(lv, v3, 6, 0, 9, hide_ull(1LL<<8), "aS_BFu32ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_BFu9ll, aS_BFu32ll_BFu9ll)
//============================================================================



static void Test_aS_BFu32ll_BFu9s()
{
  {
    init_simple_test("aS_BFu32ll_BFu9s");
    static STRUCT_IF_C aS_BFu32ll_BFu9s lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu32ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_BFu9s");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_BFu9s");
    set_bf_and_test(lv, v3, 6, 0, 9, 1, "aS_BFu32ll_BFu9s");
    set_bf_and_test(lv, v3, 6, 0, 9, hide_ull(1LL<<8), "aS_BFu32ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_BFu9s, aS_BFu32ll_BFu9s)
//============================================================================



static void Test_aS_BFu32ll_C()
{
  {
    init_simple_test("aS_BFu32ll_C");
    static STRUCT_IF_C aS_BFu32ll_C lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu32ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_C)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_C.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_C");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_C");
    check_field_offset(lv, v3, 6, "aS_BFu32ll_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_C, aS_BFu32ll_C)
//============================================================================



static void Test_aS_BFu32ll_D()
{
  {
    init_simple_test("aS_BFu32ll_D");
    static STRUCT_IF_C aS_BFu32ll_D lv;
    check2(sizeof(lv), 14, "sizeof(aS_BFu32ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_D)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_D.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_D");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_D");
    check_field_offset(lv, v3, 6, "aS_BFu32ll_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_D, aS_BFu32ll_D)
//============================================================================



static void Test_aS_BFu32ll_F()
{
  {
    init_simple_test("aS_BFu32ll_F");
    static STRUCT_IF_C aS_BFu32ll_F lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu32ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_F)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_F.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_F");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_F");
    check_field_offset(lv, v3, 6, "aS_BFu32ll_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_F, aS_BFu32ll_F)
//============================================================================



static void Test_aS_BFu32ll_I()
{
  {
    init_simple_test("aS_BFu32ll_I");
    static STRUCT_IF_C aS_BFu32ll_I lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu32ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_I)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_I.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_I");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_I");
    check_field_offset(lv, v3, 6, "aS_BFu32ll_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_I, aS_BFu32ll_I)
//============================================================================



static void Test_aS_BFu32ll_Ip()
{
  {
    init_simple_test("aS_BFu32ll_Ip");
    static STRUCT_IF_C aS_BFu32ll_Ip lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aS_BFu32ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_Ip)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_Ip.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_Ip");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_Ip");
    check_field_offset(lv, v3, 6, "aS_BFu32ll_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_Ip, aS_BFu32ll_Ip)
//============================================================================



static void Test_aS_BFu32ll_L()
{
  {
    init_simple_test("aS_BFu32ll_L");
    static STRUCT_IF_C aS_BFu32ll_L lv;
    check2(sizeof(lv), 14, "sizeof(aS_BFu32ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_L)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_L.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_L");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_L");
    check_field_offset(lv, v3, 6, "aS_BFu32ll_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_L, aS_BFu32ll_L)
//============================================================================



static void Test_aS_BFu32ll_S()
{
  {
    init_simple_test("aS_BFu32ll_S");
    static STRUCT_IF_C aS_BFu32ll_S lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu32ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_S)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_S.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_S");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_S");
    check_field_offset(lv, v3, 6, "aS_BFu32ll_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_S, aS_BFu32ll_S)
//============================================================================



static void Test_aS_BFu32ll_Uc()
{
  {
    init_simple_test("aS_BFu32ll_Uc");
    static STRUCT_IF_C aS_BFu32ll_Uc lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu32ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_Uc)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_Uc.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_Uc");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_Uc");
    check_field_offset(lv, v3, 6, "aS_BFu32ll_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_Uc, aS_BFu32ll_Uc)
//============================================================================



static void Test_aS_BFu32ll_Ui()
{
  {
    init_simple_test("aS_BFu32ll_Ui");
    static STRUCT_IF_C aS_BFu32ll_Ui lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu32ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_Ui)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_Ui.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_Ui");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_Ui");
    check_field_offset(lv, v3, 6, "aS_BFu32ll_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_Ui, aS_BFu32ll_Ui)
//============================================================================



static void Test_aS_BFu32ll_Ul()
{
  {
    init_simple_test("aS_BFu32ll_Ul");
    static STRUCT_IF_C aS_BFu32ll_Ul lv;
    check2(sizeof(lv), 14, "sizeof(aS_BFu32ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_Ul)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_Ul.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_Ul");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_Ul");
    check_field_offset(lv, v3, 6, "aS_BFu32ll_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_Ul, aS_BFu32ll_Ul)
//============================================================================



static void Test_aS_BFu32ll_Us()
{
  {
    init_simple_test("aS_BFu32ll_Us");
    static STRUCT_IF_C aS_BFu32ll_Us lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu32ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_Us)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_Us.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_Us");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_Us");
    check_field_offset(lv, v3, 6, "aS_BFu32ll_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_Us, aS_BFu32ll_Us)
//============================================================================



static void Test_aS_BFu32ll_Vp()
{
  {
    init_simple_test("aS_BFu32ll_Vp");
    static STRUCT_IF_C aS_BFu32ll_Vp lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aS_BFu32ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu32ll_Vp)");
    check_field_offset(lv, v1, 0, "aS_BFu32ll_Vp.v1");
    set_bf_and_test(lv, v2, 2, 0, 32, 1, "aS_BFu32ll_Vp");
    set_bf_and_test(lv, v2, 2, 0, 32, hide_ull(1LL<<31), "aS_BFu32ll_Vp");
    check_field_offset(lv, v3, 6, "aS_BFu32ll_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu32ll_Vp, aS_BFu32ll_Vp)
//============================================================================



static void Test_aS_BFu33()
{
  {
    init_simple_test("aS_BFu33");
    static STRUCT_IF_C aS_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33)");
    check_field_offset(lv, v1, 0, "aS_BFu33.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33, aS_BFu33)
//============================================================================



static void Test_aS_BFu33_BFu15i()
{
  {
    init_simple_test("aS_BFu33_BFu15i");
    static STRUCT_IF_C aS_BFu33_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu33_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_BFu33_BFu15i.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_BFu15i");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_BFu15i");
    set_bf_and_test(lv, v3, 6, 1, 15, 1, "aS_BFu33_BFu15i");
    set_bf_and_test(lv, v3, 6, 1, 15, hide_ull(1LL<<14), "aS_BFu33_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_BFu15i, aS_BFu33_BFu15i)
//============================================================================



static void Test_aS_BFu33_BFu15ll()
{
  {
    init_simple_test("aS_BFu33_BFu15ll");
    static STRUCT_IF_C aS_BFu33_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu33_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_BFu33_BFu15ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_BFu15ll");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_BFu15ll");
    set_bf_and_test(lv, v3, 6, 1, 15, 1, "aS_BFu33_BFu15ll");
    set_bf_and_test(lv, v3, 6, 1, 15, hide_ull(1LL<<14), "aS_BFu33_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_BFu15ll, aS_BFu33_BFu15ll)
//============================================================================



static void Test_aS_BFu33_BFu15s()
{
  {
    init_simple_test("aS_BFu33_BFu15s");
    static STRUCT_IF_C aS_BFu33_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu33_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_BFu33_BFu15s.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_BFu15s");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_BFu15s");
    set_bf_and_test(lv, v3, 6, 1, 15, 1, "aS_BFu33_BFu15s");
    set_bf_and_test(lv, v3, 6, 1, 15, hide_ull(1LL<<14), "aS_BFu33_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_BFu15s, aS_BFu33_BFu15s)
//============================================================================



static void Test_aS_BFu33_BFu16i()
{
  {
    init_simple_test("aS_BFu33_BFu16i");
    static STRUCT_IF_C aS_BFu33_BFu16i lv;
    check2(sizeof(lv), 9, "sizeof(aS_BFu33_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_BFu33_BFu16i.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_BFu16i");
    set_bf_and_test(lv, v3, 6, 1, 16, 1, "aS_BFu33_BFu16i");
    set_bf_and_test(lv, v3, 6, 1, 16, hide_ull(1LL<<15), "aS_BFu33_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_BFu16i, aS_BFu33_BFu16i)
//============================================================================



static void Test_aS_BFu33_BFu16ll()
{
  {
    init_simple_test("aS_BFu33_BFu16ll");
    static STRUCT_IF_C aS_BFu33_BFu16ll lv;
    check2(sizeof(lv), 9, "sizeof(aS_BFu33_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_BFu33_BFu16ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_BFu16ll");
    set_bf_and_test(lv, v3, 6, 1, 16, 1, "aS_BFu33_BFu16ll");
    set_bf_and_test(lv, v3, 6, 1, 16, hide_ull(1LL<<15), "aS_BFu33_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_BFu16ll, aS_BFu33_BFu16ll)
//============================================================================



static void Test_aS_BFu33_BFu16s()
{
  {
    init_simple_test("aS_BFu33_BFu16s");
    static STRUCT_IF_C aS_BFu33_BFu16s lv;
    check2(sizeof(lv), 9, "sizeof(aS_BFu33_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_BFu33_BFu16s.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_BFu16s");
    set_bf_and_test(lv, v3, 6, 1, 16, 1, "aS_BFu33_BFu16s");
    set_bf_and_test(lv, v3, 6, 1, 16, hide_ull(1LL<<15), "aS_BFu33_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_BFu16s, aS_BFu33_BFu16s)
//============================================================================



static void Test_aS_BFu33_BFu17i()
{
  {
    init_simple_test("aS_BFu33_BFu17i");
    static STRUCT_IF_C aS_BFu33_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aS_BFu33_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_BFu33_BFu17i.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_BFu17i");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_BFu17i");
    set_bf_and_test(lv, v3, 6, 1, 17, 1, "aS_BFu33_BFu17i");
    set_bf_and_test(lv, v3, 6, 1, 17, hide_ull(1LL<<16), "aS_BFu33_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_BFu17i, aS_BFu33_BFu17i)
//============================================================================



static void Test_aS_BFu33_BFu17ll()
{
  {
    init_simple_test("aS_BFu33_BFu17ll");
    static STRUCT_IF_C aS_BFu33_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aS_BFu33_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_BFu33_BFu17ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_BFu17ll");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_BFu17ll");
    set_bf_and_test(lv, v3, 6, 1, 17, 1, "aS_BFu33_BFu17ll");
    set_bf_and_test(lv, v3, 6, 1, 17, hide_ull(1LL<<16), "aS_BFu33_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_BFu17ll, aS_BFu33_BFu17ll)
//============================================================================



static void Test_aS_BFu33_BFu1c()
{
  {
    init_simple_test("aS_BFu33_BFu1c");
    static STRUCT_IF_C aS_BFu33_BFu1c lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu33_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_BFu33_BFu1c.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_BFu1c");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_BFu1c");
    set_bf_and_test(lv, v3, 6, 1, 1, 1, "aS_BFu33_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_BFu1c, aS_BFu33_BFu1c)
//============================================================================



static void Test_aS_BFu33_BFu1i()
{
  {
    init_simple_test("aS_BFu33_BFu1i");
    static STRUCT_IF_C aS_BFu33_BFu1i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu33_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_BFu33_BFu1i.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_BFu1i");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_BFu1i");
    set_bf_and_test(lv, v3, 6, 1, 1, 1, "aS_BFu33_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_BFu1i, aS_BFu33_BFu1i)
//============================================================================



static void Test_aS_BFu33_BFu1ll()
{
  {
    init_simple_test("aS_BFu33_BFu1ll");
    static STRUCT_IF_C aS_BFu33_BFu1ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu33_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_BFu33_BFu1ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_BFu1ll");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_BFu1ll");
    set_bf_and_test(lv, v3, 6, 1, 1, 1, "aS_BFu33_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_BFu1ll, aS_BFu33_BFu1ll)
//============================================================================



static void Test_aS_BFu33_BFu1s()
{
  {
    init_simple_test("aS_BFu33_BFu1s");
    static STRUCT_IF_C aS_BFu33_BFu1s lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu33_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_BFu33_BFu1s.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_BFu1s");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_BFu1s");
    set_bf_and_test(lv, v3, 6, 1, 1, 1, "aS_BFu33_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_BFu1s, aS_BFu33_BFu1s)
//============================================================================



static void Test_aS_BFu33_BFu31i()
{
  {
    init_simple_test("aS_BFu33_BFu31i");
    static STRUCT_IF_C aS_BFu33_BFu31i lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu33_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_BFu33_BFu31i.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_BFu31i");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_BFu31i");
    set_bf_and_test(lv, v3, 6, 1, 31, 1, "aS_BFu33_BFu31i");
    set_bf_and_test(lv, v3, 6, 1, 31, hide_ull(1LL<<30), "aS_BFu33_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_BFu31i, aS_BFu33_BFu31i)
//============================================================================



static void Test_aS_BFu33_BFu31ll()
{
  {
    init_simple_test("aS_BFu33_BFu31ll");
    static STRUCT_IF_C aS_BFu33_BFu31ll lv;
    check2(sizeof(lv), 10, "sizeof(aS_BFu33_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_BFu33_BFu31ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_BFu31ll");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_BFu31ll");
    set_bf_and_test(lv, v3, 6, 1, 31, 1, "aS_BFu33_BFu31ll");
    set_bf_and_test(lv, v3, 6, 1, 31, hide_ull(1LL<<30), "aS_BFu33_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_BFu31ll, aS_BFu33_BFu31ll)
//============================================================================



static void Test_aS_BFu33_BFu32i()
{
  {
    init_simple_test("aS_BFu33_BFu32i");
    static STRUCT_IF_C aS_BFu33_BFu32i lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu33_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_BFu33_BFu32i.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_BFu32i");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_BFu32i");
    set_bf_and_test(lv, v3, 6, 1, 32, 1, "aS_BFu33_BFu32i");
    set_bf_and_test(lv, v3, 6, 1, 32, hide_ull(1LL<<31), "aS_BFu33_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_BFu32i, aS_BFu33_BFu32i)
//============================================================================



static void Test_aS_BFu33_BFu32ll()
{
  {
    init_simple_test("aS_BFu33_BFu32ll");
    static STRUCT_IF_C aS_BFu33_BFu32ll lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu33_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_BFu33_BFu32ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_BFu32ll");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_BFu32ll");
    set_bf_and_test(lv, v3, 6, 1, 32, 1, "aS_BFu33_BFu32ll");
    set_bf_and_test(lv, v3, 6, 1, 32, hide_ull(1LL<<31), "aS_BFu33_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_BFu32ll, aS_BFu33_BFu32ll)
//============================================================================



static void Test_aS_BFu33_BFu33()
{
  {
    init_simple_test("aS_BFu33_BFu33");
    static STRUCT_IF_C aS_BFu33_BFu33 lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu33_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_BFu33)");
    check_field_offset(lv, v1, 0, "aS_BFu33_BFu33.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_BFu33");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_BFu33");
    set_bf_and_test(lv, v3, 6, 1, 33, 1, "aS_BFu33_BFu33");
    set_bf_and_test(lv, v3, 6, 1, 33, hide_ull(1LL<<32), "aS_BFu33_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_BFu33, aS_BFu33_BFu33)
//============================================================================



static void Test_aS_BFu33_BFu7c()
{
  {
    init_simple_test("aS_BFu33_BFu7c");
    static STRUCT_IF_C aS_BFu33_BFu7c lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu33_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_BFu33_BFu7c.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_BFu7c");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_BFu7c");
    set_bf_and_test(lv, v3, 6, 1, 7, 1, "aS_BFu33_BFu7c");
    set_bf_and_test(lv, v3, 6, 1, 7, hide_ull(1LL<<6), "aS_BFu33_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_BFu7c, aS_BFu33_BFu7c)
//============================================================================



static void Test_aS_BFu33_BFu7i()
{
  {
    init_simple_test("aS_BFu33_BFu7i");
    static STRUCT_IF_C aS_BFu33_BFu7i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu33_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_BFu33_BFu7i.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_BFu7i");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_BFu7i");
    set_bf_and_test(lv, v3, 6, 1, 7, 1, "aS_BFu33_BFu7i");
    set_bf_and_test(lv, v3, 6, 1, 7, hide_ull(1LL<<6), "aS_BFu33_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_BFu7i, aS_BFu33_BFu7i)
//============================================================================



static void Test_aS_BFu33_BFu7ll()
{
  {
    init_simple_test("aS_BFu33_BFu7ll");
    static STRUCT_IF_C aS_BFu33_BFu7ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu33_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_BFu33_BFu7ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_BFu7ll");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_BFu7ll");
    set_bf_and_test(lv, v3, 6, 1, 7, 1, "aS_BFu33_BFu7ll");
    set_bf_and_test(lv, v3, 6, 1, 7, hide_ull(1LL<<6), "aS_BFu33_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_BFu7ll, aS_BFu33_BFu7ll)
//============================================================================



static void Test_aS_BFu33_BFu7s()
{
  {
    init_simple_test("aS_BFu33_BFu7s");
    static STRUCT_IF_C aS_BFu33_BFu7s lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu33_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_BFu33_BFu7s.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_BFu7s");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_BFu7s");
    set_bf_and_test(lv, v3, 6, 1, 7, 1, "aS_BFu33_BFu7s");
    set_bf_and_test(lv, v3, 6, 1, 7, hide_ull(1LL<<6), "aS_BFu33_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_BFu7s, aS_BFu33_BFu7s)
//============================================================================



static void Test_aS_BFu33_BFu8c()
{
  {
    init_simple_test("aS_BFu33_BFu8c");
    static STRUCT_IF_C aS_BFu33_BFu8c lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu33_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_BFu33_BFu8c.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_BFu8c");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_BFu8c");
    set_bf_and_test(lv, v3, 6, 1, 8, 1, "aS_BFu33_BFu8c");
    set_bf_and_test(lv, v3, 6, 1, 8, hide_ull(1LL<<7), "aS_BFu33_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_BFu8c, aS_BFu33_BFu8c)
//============================================================================



static void Test_aS_BFu33_BFu8i()
{
  {
    init_simple_test("aS_BFu33_BFu8i");
    static STRUCT_IF_C aS_BFu33_BFu8i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu33_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_BFu33_BFu8i.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_BFu8i");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_BFu8i");
    set_bf_and_test(lv, v3, 6, 1, 8, 1, "aS_BFu33_BFu8i");
    set_bf_and_test(lv, v3, 6, 1, 8, hide_ull(1LL<<7), "aS_BFu33_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_BFu8i, aS_BFu33_BFu8i)
//============================================================================



static void Test_aS_BFu33_BFu8ll()
{
  {
    init_simple_test("aS_BFu33_BFu8ll");
    static STRUCT_IF_C aS_BFu33_BFu8ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu33_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_BFu33_BFu8ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_BFu8ll");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_BFu8ll");
    set_bf_and_test(lv, v3, 6, 1, 8, 1, "aS_BFu33_BFu8ll");
    set_bf_and_test(lv, v3, 6, 1, 8, hide_ull(1LL<<7), "aS_BFu33_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_BFu8ll, aS_BFu33_BFu8ll)
//============================================================================



static void Test_aS_BFu33_BFu8s()
{
  {
    init_simple_test("aS_BFu33_BFu8s");
    static STRUCT_IF_C aS_BFu33_BFu8s lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu33_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_BFu33_BFu8s.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_BFu8s");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_BFu8s");
    set_bf_and_test(lv, v3, 6, 1, 8, 1, "aS_BFu33_BFu8s");
    set_bf_and_test(lv, v3, 6, 1, 8, hide_ull(1LL<<7), "aS_BFu33_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_BFu8s, aS_BFu33_BFu8s)
//============================================================================



static void Test_aS_BFu33_BFu9i()
{
  {
    init_simple_test("aS_BFu33_BFu9i");
    static STRUCT_IF_C aS_BFu33_BFu9i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu33_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_BFu33_BFu9i.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_BFu9i");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_BFu9i");
    set_bf_and_test(lv, v3, 6, 1, 9, 1, "aS_BFu33_BFu9i");
    set_bf_and_test(lv, v3, 6, 1, 9, hide_ull(1LL<<8), "aS_BFu33_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_BFu9i, aS_BFu33_BFu9i)
//============================================================================



static void Test_aS_BFu33_BFu9ll()
{
  {
    init_simple_test("aS_BFu33_BFu9ll");
    static STRUCT_IF_C aS_BFu33_BFu9ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu33_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_BFu33_BFu9ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_BFu9ll");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_BFu9ll");
    set_bf_and_test(lv, v3, 6, 1, 9, 1, "aS_BFu33_BFu9ll");
    set_bf_and_test(lv, v3, 6, 1, 9, hide_ull(1LL<<8), "aS_BFu33_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_BFu9ll, aS_BFu33_BFu9ll)
//============================================================================



static void Test_aS_BFu33_BFu9s()
{
  {
    init_simple_test("aS_BFu33_BFu9s");
    static STRUCT_IF_C aS_BFu33_BFu9s lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu33_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_BFu33_BFu9s.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_BFu9s");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_BFu9s");
    set_bf_and_test(lv, v3, 6, 1, 9, 1, "aS_BFu33_BFu9s");
    set_bf_and_test(lv, v3, 6, 1, 9, hide_ull(1LL<<8), "aS_BFu33_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_BFu9s, aS_BFu33_BFu9s)
//============================================================================



static void Test_aS_BFu33_C()
{
  {
    init_simple_test("aS_BFu33_C");
    static STRUCT_IF_C aS_BFu33_C lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu33_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_C)");
    check_field_offset(lv, v1, 0, "aS_BFu33_C.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_C");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_C");
    check_field_offset(lv, v3, 7, "aS_BFu33_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_C, aS_BFu33_C)
//============================================================================



static void Test_aS_BFu33_D()
{
  {
    init_simple_test("aS_BFu33_D");
    static STRUCT_IF_C aS_BFu33_D lv;
    check2(sizeof(lv), 15, "sizeof(aS_BFu33_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_D)");
    check_field_offset(lv, v1, 0, "aS_BFu33_D.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_D");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_D");
    check_field_offset(lv, v3, 7, "aS_BFu33_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_D, aS_BFu33_D)
//============================================================================



static void Test_aS_BFu33_F()
{
  {
    init_simple_test("aS_BFu33_F");
    static STRUCT_IF_C aS_BFu33_F lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu33_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_F)");
    check_field_offset(lv, v1, 0, "aS_BFu33_F.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_F");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_F");
    check_field_offset(lv, v3, 7, "aS_BFu33_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_F, aS_BFu33_F)
//============================================================================



static void Test_aS_BFu33_I()
{
  {
    init_simple_test("aS_BFu33_I");
    static STRUCT_IF_C aS_BFu33_I lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu33_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_I)");
    check_field_offset(lv, v1, 0, "aS_BFu33_I.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_I");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_I");
    check_field_offset(lv, v3, 7, "aS_BFu33_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_I, aS_BFu33_I)
//============================================================================



static void Test_aS_BFu33_Ip()
{
  {
    init_simple_test("aS_BFu33_Ip");
    static STRUCT_IF_C aS_BFu33_Ip lv;
    check2(sizeof(lv), ABISELECT(15,11), "sizeof(aS_BFu33_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_Ip)");
    check_field_offset(lv, v1, 0, "aS_BFu33_Ip.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_Ip");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_Ip");
    check_field_offset(lv, v3, 7, "aS_BFu33_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_Ip, aS_BFu33_Ip)
//============================================================================



static void Test_aS_BFu33_L()
{
  {
    init_simple_test("aS_BFu33_L");
    static STRUCT_IF_C aS_BFu33_L lv;
    check2(sizeof(lv), 15, "sizeof(aS_BFu33_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_L)");
    check_field_offset(lv, v1, 0, "aS_BFu33_L.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_L");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_L");
    check_field_offset(lv, v3, 7, "aS_BFu33_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_L, aS_BFu33_L)
//============================================================================



static void Test_aS_BFu33_S()
{
  {
    init_simple_test("aS_BFu33_S");
    static STRUCT_IF_C aS_BFu33_S lv;
    check2(sizeof(lv), 9, "sizeof(aS_BFu33_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_S)");
    check_field_offset(lv, v1, 0, "aS_BFu33_S.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_S");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_S");
    check_field_offset(lv, v3, 7, "aS_BFu33_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_S, aS_BFu33_S)
//============================================================================



static void Test_aS_BFu33_Uc()
{
  {
    init_simple_test("aS_BFu33_Uc");
    static STRUCT_IF_C aS_BFu33_Uc lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu33_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_Uc)");
    check_field_offset(lv, v1, 0, "aS_BFu33_Uc.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_Uc");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_Uc");
    check_field_offset(lv, v3, 7, "aS_BFu33_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_Uc, aS_BFu33_Uc)
//============================================================================



static void Test_aS_BFu33_Ui()
{
  {
    init_simple_test("aS_BFu33_Ui");
    static STRUCT_IF_C aS_BFu33_Ui lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu33_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_Ui)");
    check_field_offset(lv, v1, 0, "aS_BFu33_Ui.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_Ui");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_Ui");
    check_field_offset(lv, v3, 7, "aS_BFu33_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_Ui, aS_BFu33_Ui)
//============================================================================



static void Test_aS_BFu33_Ul()
{
  {
    init_simple_test("aS_BFu33_Ul");
    static STRUCT_IF_C aS_BFu33_Ul lv;
    check2(sizeof(lv), 15, "sizeof(aS_BFu33_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_Ul)");
    check_field_offset(lv, v1, 0, "aS_BFu33_Ul.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_Ul");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_Ul");
    check_field_offset(lv, v3, 7, "aS_BFu33_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_Ul, aS_BFu33_Ul)
//============================================================================



static void Test_aS_BFu33_Us()
{
  {
    init_simple_test("aS_BFu33_Us");
    static STRUCT_IF_C aS_BFu33_Us lv;
    check2(sizeof(lv), 9, "sizeof(aS_BFu33_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_Us)");
    check_field_offset(lv, v1, 0, "aS_BFu33_Us.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_Us");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_Us");
    check_field_offset(lv, v3, 7, "aS_BFu33_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_Us, aS_BFu33_Us)
//============================================================================



static void Test_aS_BFu33_Vp()
{
  {
    init_simple_test("aS_BFu33_Vp");
    static STRUCT_IF_C aS_BFu33_Vp lv;
    check2(sizeof(lv), ABISELECT(15,11), "sizeof(aS_BFu33_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu33_Vp)");
    check_field_offset(lv, v1, 0, "aS_BFu33_Vp.v1");
    set_bf_and_test(lv, v2, 2, 0, 33, 1, "aS_BFu33_Vp");
    set_bf_and_test(lv, v2, 2, 0, 33, hide_ull(1LL<<32), "aS_BFu33_Vp");
    check_field_offset(lv, v3, 7, "aS_BFu33_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu33_Vp, aS_BFu33_Vp)
//============================================================================



static void Test_aS_BFu7c()
{
  {
    init_simple_test("aS_BFu7c");
    static STRUCT_IF_C aS_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_BFu7c.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c, aS_BFu7c)
//============================================================================



static void Test_aS_BFu7c_BFu15i()
{
  {
    init_simple_test("aS_BFu7c_BFu15i");
    static STRUCT_IF_C aS_BFu7c_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_BFu15i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_BFu15i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu15i");
    set_bf_and_test(lv, v3, 2, 7, 15, 1, "aS_BFu7c_BFu15i");
    set_bf_and_test(lv, v3, 2, 7, 15, hide_ull(1LL<<14), "aS_BFu7c_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_BFu15i, aS_BFu7c_BFu15i)
//============================================================================



static void Test_aS_BFu7c_BFu15ll()
{
  {
    init_simple_test("aS_BFu7c_BFu15ll");
    static STRUCT_IF_C aS_BFu7c_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_BFu15ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_BFu15ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu15ll");
    set_bf_and_test(lv, v3, 2, 7, 15, 1, "aS_BFu7c_BFu15ll");
    set_bf_and_test(lv, v3, 2, 7, 15, hide_ull(1LL<<14), "aS_BFu7c_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_BFu15ll, aS_BFu7c_BFu15ll)
//============================================================================



static void Test_aS_BFu7c_BFu15s()
{
  {
    init_simple_test("aS_BFu7c_BFu15s");
    static STRUCT_IF_C aS_BFu7c_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_BFu15s.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_BFu15s");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu15s");
    set_bf_and_test(lv, v3, 2, 7, 15, 1, "aS_BFu7c_BFu15s");
    set_bf_and_test(lv, v3, 2, 7, 15, hide_ull(1LL<<14), "aS_BFu7c_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_BFu15s, aS_BFu7c_BFu15s)
//============================================================================



static void Test_aS_BFu7c_BFu16i()
{
  {
    init_simple_test("aS_BFu7c_BFu16i");
    static STRUCT_IF_C aS_BFu7c_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_BFu16i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu16i");
    set_bf_and_test(lv, v3, 2, 7, 16, 1, "aS_BFu7c_BFu16i");
    set_bf_and_test(lv, v3, 2, 7, 16, hide_ull(1LL<<15), "aS_BFu7c_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_BFu16i, aS_BFu7c_BFu16i)
//============================================================================



static void Test_aS_BFu7c_BFu16ll()
{
  {
    init_simple_test("aS_BFu7c_BFu16ll");
    static STRUCT_IF_C aS_BFu7c_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_BFu16ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu16ll");
    set_bf_and_test(lv, v3, 2, 7, 16, 1, "aS_BFu7c_BFu16ll");
    set_bf_and_test(lv, v3, 2, 7, 16, hide_ull(1LL<<15), "aS_BFu7c_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_BFu16ll, aS_BFu7c_BFu16ll)
//============================================================================



static void Test_aS_BFu7c_BFu16s()
{
  {
    init_simple_test("aS_BFu7c_BFu16s");
    static STRUCT_IF_C aS_BFu7c_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_BFu16s.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu16s");
    set_bf_and_test(lv, v3, 2, 7, 16, 1, "aS_BFu7c_BFu16s");
    set_bf_and_test(lv, v3, 2, 7, 16, hide_ull(1LL<<15), "aS_BFu7c_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_BFu16s, aS_BFu7c_BFu16s)
//============================================================================



static void Test_aS_BFu7c_BFu17i()
{
  {
    init_simple_test("aS_BFu7c_BFu17i");
    static STRUCT_IF_C aS_BFu7c_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_BFu17i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_BFu17i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu17i");
    set_bf_and_test(lv, v3, 2, 7, 17, 1, "aS_BFu7c_BFu17i");
    set_bf_and_test(lv, v3, 2, 7, 17, hide_ull(1LL<<16), "aS_BFu7c_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_BFu17i, aS_BFu7c_BFu17i)
//============================================================================



static void Test_aS_BFu7c_BFu17ll()
{
  {
    init_simple_test("aS_BFu7c_BFu17ll");
    static STRUCT_IF_C aS_BFu7c_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_BFu17ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_BFu17ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu17ll");
    set_bf_and_test(lv, v3, 2, 7, 17, 1, "aS_BFu7c_BFu17ll");
    set_bf_and_test(lv, v3, 2, 7, 17, hide_ull(1LL<<16), "aS_BFu7c_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_BFu17ll, aS_BFu7c_BFu17ll)
//============================================================================



static void Test_aS_BFu7c_BFu1c()
{
  {
    init_simple_test("aS_BFu7c_BFu1c");
    static STRUCT_IF_C aS_BFu7c_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu7c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_BFu1c.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_BFu1c");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu1c");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "aS_BFu7c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_BFu1c, aS_BFu7c_BFu1c)
//============================================================================



static void Test_aS_BFu7c_BFu1i()
{
  {
    init_simple_test("aS_BFu7c_BFu1i");
    static STRUCT_IF_C aS_BFu7c_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu7c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_BFu1i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_BFu1i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu1i");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "aS_BFu7c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_BFu1i, aS_BFu7c_BFu1i)
//============================================================================



static void Test_aS_BFu7c_BFu1ll()
{
  {
    init_simple_test("aS_BFu7c_BFu1ll");
    static STRUCT_IF_C aS_BFu7c_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu7c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_BFu1ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_BFu1ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu1ll");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "aS_BFu7c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_BFu1ll, aS_BFu7c_BFu1ll)
//============================================================================



static void Test_aS_BFu7c_BFu1s()
{
  {
    init_simple_test("aS_BFu7c_BFu1s");
    static STRUCT_IF_C aS_BFu7c_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu7c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_BFu1s.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_BFu1s");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu1s");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "aS_BFu7c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_BFu1s, aS_BFu7c_BFu1s)
//============================================================================



static void Test_aS_BFu7c_BFu31i()
{
  {
    init_simple_test("aS_BFu7c_BFu31i");
    static STRUCT_IF_C aS_BFu7c_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_BFu31i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_BFu31i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu31i");
    set_bf_and_test(lv, v3, 2, 7, 31, 1, "aS_BFu7c_BFu31i");
    set_bf_and_test(lv, v3, 2, 7, 31, hide_ull(1LL<<30), "aS_BFu7c_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_BFu31i, aS_BFu7c_BFu31i)
//============================================================================



static void Test_aS_BFu7c_BFu31ll()
{
  {
    init_simple_test("aS_BFu7c_BFu31ll");
    static STRUCT_IF_C aS_BFu7c_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_BFu31ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_BFu31ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu31ll");
    set_bf_and_test(lv, v3, 2, 7, 31, 1, "aS_BFu7c_BFu31ll");
    set_bf_and_test(lv, v3, 2, 7, 31, hide_ull(1LL<<30), "aS_BFu7c_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_BFu31ll, aS_BFu7c_BFu31ll)
//============================================================================



static void Test_aS_BFu7c_BFu32i()
{
  {
    init_simple_test("aS_BFu7c_BFu32i");
    static STRUCT_IF_C aS_BFu7c_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_BFu32i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_BFu32i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu32i");
    set_bf_and_test(lv, v3, 2, 7, 32, 1, "aS_BFu7c_BFu32i");
    set_bf_and_test(lv, v3, 2, 7, 32, hide_ull(1LL<<31), "aS_BFu7c_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_BFu32i, aS_BFu7c_BFu32i)
//============================================================================



static void Test_aS_BFu7c_BFu32ll()
{
  {
    init_simple_test("aS_BFu7c_BFu32ll");
    static STRUCT_IF_C aS_BFu7c_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_BFu32ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_BFu32ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu32ll");
    set_bf_and_test(lv, v3, 2, 7, 32, 1, "aS_BFu7c_BFu32ll");
    set_bf_and_test(lv, v3, 2, 7, 32, hide_ull(1LL<<31), "aS_BFu7c_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_BFu32ll, aS_BFu7c_BFu32ll)
//============================================================================



static void Test_aS_BFu7c_BFu33()
{
  {
    init_simple_test("aS_BFu7c_BFu33");
    static STRUCT_IF_C aS_BFu7c_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_BFu33)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_BFu33.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_BFu33");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu33");
    set_bf_and_test(lv, v3, 2, 7, 33, 1, "aS_BFu7c_BFu33");
    set_bf_and_test(lv, v3, 2, 7, 33, hide_ull(1LL<<32), "aS_BFu7c_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_BFu33, aS_BFu7c_BFu33)
//============================================================================



static void Test_aS_BFu7c_BFu7c()
{
  {
    init_simple_test("aS_BFu7c_BFu7c");
    static STRUCT_IF_C aS_BFu7c_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_BFu7c.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_BFu7c");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu7c");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "aS_BFu7c_BFu7c");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_BFu7c, aS_BFu7c_BFu7c)
//============================================================================



static void Test_aS_BFu7c_BFu7i()
{
  {
    init_simple_test("aS_BFu7c_BFu7i");
    static STRUCT_IF_C aS_BFu7c_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_BFu7i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_BFu7i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu7i");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "aS_BFu7c_BFu7i");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_BFu7i, aS_BFu7c_BFu7i)
//============================================================================



static void Test_aS_BFu7c_BFu7ll()
{
  {
    init_simple_test("aS_BFu7c_BFu7ll");
    static STRUCT_IF_C aS_BFu7c_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_BFu7ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_BFu7ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu7ll");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "aS_BFu7c_BFu7ll");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_BFu7ll, aS_BFu7c_BFu7ll)
//============================================================================



static void Test_aS_BFu7c_BFu7s()
{
  {
    init_simple_test("aS_BFu7c_BFu7s");
    static STRUCT_IF_C aS_BFu7c_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_BFu7s.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_BFu7s");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu7s");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "aS_BFu7c_BFu7s");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_BFu7s, aS_BFu7c_BFu7s)
//============================================================================



static void Test_aS_BFu7c_BFu8c()
{
  {
    init_simple_test("aS_BFu7c_BFu8c");
    static STRUCT_IF_C aS_BFu7c_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_BFu8c.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_BFu8c");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu8c");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "aS_BFu7c_BFu8c");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "aS_BFu7c_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_BFu8c, aS_BFu7c_BFu8c)
//============================================================================



static void Test_aS_BFu7c_BFu8i()
{
  {
    init_simple_test("aS_BFu7c_BFu8i");
    static STRUCT_IF_C aS_BFu7c_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_BFu8i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_BFu8i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu8i");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "aS_BFu7c_BFu8i");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "aS_BFu7c_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_BFu8i, aS_BFu7c_BFu8i)
//============================================================================



static void Test_aS_BFu7c_BFu8ll()
{
  {
    init_simple_test("aS_BFu7c_BFu8ll");
    static STRUCT_IF_C aS_BFu7c_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_BFu8ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_BFu8ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu8ll");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "aS_BFu7c_BFu8ll");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "aS_BFu7c_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_BFu8ll, aS_BFu7c_BFu8ll)
//============================================================================



static void Test_aS_BFu7c_BFu8s()
{
  {
    init_simple_test("aS_BFu7c_BFu8s");
    static STRUCT_IF_C aS_BFu7c_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_BFu8s.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_BFu8s");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu8s");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "aS_BFu7c_BFu8s");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "aS_BFu7c_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_BFu8s, aS_BFu7c_BFu8s)
//============================================================================



static void Test_aS_BFu7c_BFu9i()
{
  {
    init_simple_test("aS_BFu7c_BFu9i");
    static STRUCT_IF_C aS_BFu7c_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_BFu9i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_BFu9i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu9i");
    set_bf_and_test(lv, v3, 2, 7, 9, 1, "aS_BFu7c_BFu9i");
    set_bf_and_test(lv, v3, 2, 7, 9, hide_ull(1LL<<8), "aS_BFu7c_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_BFu9i, aS_BFu7c_BFu9i)
//============================================================================



static void Test_aS_BFu7c_BFu9ll()
{
  {
    init_simple_test("aS_BFu7c_BFu9ll");
    static STRUCT_IF_C aS_BFu7c_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_BFu9ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_BFu9ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu9ll");
    set_bf_and_test(lv, v3, 2, 7, 9, 1, "aS_BFu7c_BFu9ll");
    set_bf_and_test(lv, v3, 2, 7, 9, hide_ull(1LL<<8), "aS_BFu7c_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_BFu9ll, aS_BFu7c_BFu9ll)
//============================================================================



static void Test_aS_BFu7c_BFu9s()
{
  {
    init_simple_test("aS_BFu7c_BFu9s");
    static STRUCT_IF_C aS_BFu7c_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_BFu9s.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_BFu9s");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_BFu9s");
    set_bf_and_test(lv, v3, 2, 7, 9, 1, "aS_BFu7c_BFu9s");
    set_bf_and_test(lv, v3, 2, 7, 9, hide_ull(1LL<<8), "aS_BFu7c_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_BFu9s, aS_BFu7c_BFu9s)
//============================================================================



static void Test_aS_BFu7c_C()
{
  {
    init_simple_test("aS_BFu7c_C");
    static STRUCT_IF_C aS_BFu7c_C lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7c_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_C)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_C.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_C");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_C");
    check_field_offset(lv, v3, 3, "aS_BFu7c_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_C, aS_BFu7c_C)
//============================================================================



static void Test_aS_BFu7c_D()
{
  {
    init_simple_test("aS_BFu7c_D");
    static STRUCT_IF_C aS_BFu7c_D lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu7c_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_D)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_D.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_D");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_D");
    check_field_offset(lv, v3, 3, "aS_BFu7c_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_D, aS_BFu7c_D)
//============================================================================



static void Test_aS_BFu7c_F()
{
  {
    init_simple_test("aS_BFu7c_F");
    static STRUCT_IF_C aS_BFu7c_F lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7c_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_F)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_F.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_F");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_F");
    check_field_offset(lv, v3, 3, "aS_BFu7c_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_F, aS_BFu7c_F)
//============================================================================



static void Test_aS_BFu7c_I()
{
  {
    init_simple_test("aS_BFu7c_I");
    static STRUCT_IF_C aS_BFu7c_I lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7c_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_I)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_I.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_I");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_I");
    check_field_offset(lv, v3, 3, "aS_BFu7c_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_I, aS_BFu7c_I)
//============================================================================



static void Test_aS_BFu7c_Ip()
{
  {
    init_simple_test("aS_BFu7c_Ip");
    static STRUCT_IF_C aS_BFu7c_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_BFu7c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_Ip)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_Ip.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_Ip");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_Ip");
    check_field_offset(lv, v3, 3, "aS_BFu7c_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_Ip, aS_BFu7c_Ip)
//============================================================================



static void Test_aS_BFu7c_L()
{
  {
    init_simple_test("aS_BFu7c_L");
    static STRUCT_IF_C aS_BFu7c_L lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu7c_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_L)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_L.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_L");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_L");
    check_field_offset(lv, v3, 3, "aS_BFu7c_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_L, aS_BFu7c_L)
//============================================================================



static void Test_aS_BFu7c_S()
{
  {
    init_simple_test("aS_BFu7c_S");
    static STRUCT_IF_C aS_BFu7c_S lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7c_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_S)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_S.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_S");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_S");
    check_field_offset(lv, v3, 3, "aS_BFu7c_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_S, aS_BFu7c_S)
//============================================================================



static void Test_aS_BFu7c_Uc()
{
  {
    init_simple_test("aS_BFu7c_Uc");
    static STRUCT_IF_C aS_BFu7c_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_Uc)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_Uc.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_Uc");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_Uc");
    check_field_offset(lv, v3, 3, "aS_BFu7c_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_Uc, aS_BFu7c_Uc)
//============================================================================



static void Test_aS_BFu7c_Ui()
{
  {
    init_simple_test("aS_BFu7c_Ui");
    static STRUCT_IF_C aS_BFu7c_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_Ui)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_Ui.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_Ui");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_Ui");
    check_field_offset(lv, v3, 3, "aS_BFu7c_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_Ui, aS_BFu7c_Ui)
//============================================================================



static void Test_aS_BFu7c_Ul()
{
  {
    init_simple_test("aS_BFu7c_Ul");
    static STRUCT_IF_C aS_BFu7c_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu7c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_Ul)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_Ul.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_Ul");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_Ul");
    check_field_offset(lv, v3, 3, "aS_BFu7c_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_Ul, aS_BFu7c_Ul)
//============================================================================



static void Test_aS_BFu7c_Us()
{
  {
    init_simple_test("aS_BFu7c_Us");
    static STRUCT_IF_C aS_BFu7c_Us lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_Us)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_Us.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_Us");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_Us");
    check_field_offset(lv, v3, 3, "aS_BFu7c_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_Us, aS_BFu7c_Us)
//============================================================================



static void Test_aS_BFu7c_Vp()
{
  {
    init_simple_test("aS_BFu7c_Vp");
    static STRUCT_IF_C aS_BFu7c_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_BFu7c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7c_Vp)");
    check_field_offset(lv, v1, 0, "aS_BFu7c_Vp.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7c_Vp");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7c_Vp");
    check_field_offset(lv, v3, 3, "aS_BFu7c_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7c_Vp, aS_BFu7c_Vp)
//============================================================================



static void Test_aS_BFu7i()
{
  {
    init_simple_test("aS_BFu7i");
    static STRUCT_IF_C aS_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_BFu7i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i, aS_BFu7i)
//============================================================================



static void Test_aS_BFu7i_BFu15i()
{
  {
    init_simple_test("aS_BFu7i_BFu15i");
    static STRUCT_IF_C aS_BFu7i_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_BFu15i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_BFu15i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu15i");
    set_bf_and_test(lv, v3, 2, 7, 15, 1, "aS_BFu7i_BFu15i");
    set_bf_and_test(lv, v3, 2, 7, 15, hide_ull(1LL<<14), "aS_BFu7i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_BFu15i, aS_BFu7i_BFu15i)
//============================================================================



static void Test_aS_BFu7i_BFu15ll()
{
  {
    init_simple_test("aS_BFu7i_BFu15ll");
    static STRUCT_IF_C aS_BFu7i_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_BFu15ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu15ll");
    set_bf_and_test(lv, v3, 2, 7, 15, 1, "aS_BFu7i_BFu15ll");
    set_bf_and_test(lv, v3, 2, 7, 15, hide_ull(1LL<<14), "aS_BFu7i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_BFu15ll, aS_BFu7i_BFu15ll)
//============================================================================



static void Test_aS_BFu7i_BFu15s()
{
  {
    init_simple_test("aS_BFu7i_BFu15s");
    static STRUCT_IF_C aS_BFu7i_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_BFu15s.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_BFu15s");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu15s");
    set_bf_and_test(lv, v3, 2, 7, 15, 1, "aS_BFu7i_BFu15s");
    set_bf_and_test(lv, v3, 2, 7, 15, hide_ull(1LL<<14), "aS_BFu7i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_BFu15s, aS_BFu7i_BFu15s)
//============================================================================



static void Test_aS_BFu7i_BFu16i()
{
  {
    init_simple_test("aS_BFu7i_BFu16i");
    static STRUCT_IF_C aS_BFu7i_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_BFu16i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu16i");
    set_bf_and_test(lv, v3, 2, 7, 16, 1, "aS_BFu7i_BFu16i");
    set_bf_and_test(lv, v3, 2, 7, 16, hide_ull(1LL<<15), "aS_BFu7i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_BFu16i, aS_BFu7i_BFu16i)
//============================================================================



static void Test_aS_BFu7i_BFu16ll()
{
  {
    init_simple_test("aS_BFu7i_BFu16ll");
    static STRUCT_IF_C aS_BFu7i_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu16ll");
    set_bf_and_test(lv, v3, 2, 7, 16, 1, "aS_BFu7i_BFu16ll");
    set_bf_and_test(lv, v3, 2, 7, 16, hide_ull(1LL<<15), "aS_BFu7i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_BFu16ll, aS_BFu7i_BFu16ll)
//============================================================================



static void Test_aS_BFu7i_BFu16s()
{
  {
    init_simple_test("aS_BFu7i_BFu16s");
    static STRUCT_IF_C aS_BFu7i_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_BFu16s.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu16s");
    set_bf_and_test(lv, v3, 2, 7, 16, 1, "aS_BFu7i_BFu16s");
    set_bf_and_test(lv, v3, 2, 7, 16, hide_ull(1LL<<15), "aS_BFu7i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_BFu16s, aS_BFu7i_BFu16s)
//============================================================================



static void Test_aS_BFu7i_BFu17i()
{
  {
    init_simple_test("aS_BFu7i_BFu17i");
    static STRUCT_IF_C aS_BFu7i_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_BFu17i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_BFu17i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu17i");
    set_bf_and_test(lv, v3, 2, 7, 17, 1, "aS_BFu7i_BFu17i");
    set_bf_and_test(lv, v3, 2, 7, 17, hide_ull(1LL<<16), "aS_BFu7i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_BFu17i, aS_BFu7i_BFu17i)
//============================================================================



static void Test_aS_BFu7i_BFu17ll()
{
  {
    init_simple_test("aS_BFu7i_BFu17ll");
    static STRUCT_IF_C aS_BFu7i_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu17ll");
    set_bf_and_test(lv, v3, 2, 7, 17, 1, "aS_BFu7i_BFu17ll");
    set_bf_and_test(lv, v3, 2, 7, 17, hide_ull(1LL<<16), "aS_BFu7i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_BFu17ll, aS_BFu7i_BFu17ll)
//============================================================================



static void Test_aS_BFu7i_BFu1c()
{
  {
    init_simple_test("aS_BFu7i_BFu1c");
    static STRUCT_IF_C aS_BFu7i_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu7i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_BFu1c.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_BFu1c");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu1c");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "aS_BFu7i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_BFu1c, aS_BFu7i_BFu1c)
//============================================================================



static void Test_aS_BFu7i_BFu1i()
{
  {
    init_simple_test("aS_BFu7i_BFu1i");
    static STRUCT_IF_C aS_BFu7i_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu7i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_BFu1i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_BFu1i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu1i");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "aS_BFu7i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_BFu1i, aS_BFu7i_BFu1i)
//============================================================================



static void Test_aS_BFu7i_BFu1ll()
{
  {
    init_simple_test("aS_BFu7i_BFu1ll");
    static STRUCT_IF_C aS_BFu7i_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu7i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_BFu1ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu1ll");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "aS_BFu7i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_BFu1ll, aS_BFu7i_BFu1ll)
//============================================================================



static void Test_aS_BFu7i_BFu1s()
{
  {
    init_simple_test("aS_BFu7i_BFu1s");
    static STRUCT_IF_C aS_BFu7i_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu7i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_BFu1s.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_BFu1s");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu1s");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "aS_BFu7i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_BFu1s, aS_BFu7i_BFu1s)
//============================================================================



static void Test_aS_BFu7i_BFu31i()
{
  {
    init_simple_test("aS_BFu7i_BFu31i");
    static STRUCT_IF_C aS_BFu7i_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_BFu31i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_BFu31i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu31i");
    set_bf_and_test(lv, v3, 2, 7, 31, 1, "aS_BFu7i_BFu31i");
    set_bf_and_test(lv, v3, 2, 7, 31, hide_ull(1LL<<30), "aS_BFu7i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_BFu31i, aS_BFu7i_BFu31i)
//============================================================================



static void Test_aS_BFu7i_BFu31ll()
{
  {
    init_simple_test("aS_BFu7i_BFu31ll");
    static STRUCT_IF_C aS_BFu7i_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_BFu31ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu31ll");
    set_bf_and_test(lv, v3, 2, 7, 31, 1, "aS_BFu7i_BFu31ll");
    set_bf_and_test(lv, v3, 2, 7, 31, hide_ull(1LL<<30), "aS_BFu7i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_BFu31ll, aS_BFu7i_BFu31ll)
//============================================================================



static void Test_aS_BFu7i_BFu32i()
{
  {
    init_simple_test("aS_BFu7i_BFu32i");
    static STRUCT_IF_C aS_BFu7i_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_BFu32i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_BFu32i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu32i");
    set_bf_and_test(lv, v3, 2, 7, 32, 1, "aS_BFu7i_BFu32i");
    set_bf_and_test(lv, v3, 2, 7, 32, hide_ull(1LL<<31), "aS_BFu7i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_BFu32i, aS_BFu7i_BFu32i)
//============================================================================



static void Test_aS_BFu7i_BFu32ll()
{
  {
    init_simple_test("aS_BFu7i_BFu32ll");
    static STRUCT_IF_C aS_BFu7i_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_BFu32ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu32ll");
    set_bf_and_test(lv, v3, 2, 7, 32, 1, "aS_BFu7i_BFu32ll");
    set_bf_and_test(lv, v3, 2, 7, 32, hide_ull(1LL<<31), "aS_BFu7i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_BFu32ll, aS_BFu7i_BFu32ll)
//============================================================================



static void Test_aS_BFu7i_BFu33()
{
  {
    init_simple_test("aS_BFu7i_BFu33");
    static STRUCT_IF_C aS_BFu7i_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_BFu33)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_BFu33.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_BFu33");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu33");
    set_bf_and_test(lv, v3, 2, 7, 33, 1, "aS_BFu7i_BFu33");
    set_bf_and_test(lv, v3, 2, 7, 33, hide_ull(1LL<<32), "aS_BFu7i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_BFu33, aS_BFu7i_BFu33)
//============================================================================



static void Test_aS_BFu7i_BFu7c()
{
  {
    init_simple_test("aS_BFu7i_BFu7c");
    static STRUCT_IF_C aS_BFu7i_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_BFu7c.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_BFu7c");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu7c");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "aS_BFu7i_BFu7c");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_BFu7c, aS_BFu7i_BFu7c)
//============================================================================



static void Test_aS_BFu7i_BFu7i()
{
  {
    init_simple_test("aS_BFu7i_BFu7i");
    static STRUCT_IF_C aS_BFu7i_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_BFu7i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_BFu7i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu7i");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "aS_BFu7i_BFu7i");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_BFu7i, aS_BFu7i_BFu7i)
//============================================================================



static void Test_aS_BFu7i_BFu7ll()
{
  {
    init_simple_test("aS_BFu7i_BFu7ll");
    static STRUCT_IF_C aS_BFu7i_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_BFu7ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu7ll");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "aS_BFu7i_BFu7ll");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_BFu7ll, aS_BFu7i_BFu7ll)
//============================================================================



static void Test_aS_BFu7i_BFu7s()
{
  {
    init_simple_test("aS_BFu7i_BFu7s");
    static STRUCT_IF_C aS_BFu7i_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_BFu7s.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_BFu7s");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu7s");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "aS_BFu7i_BFu7s");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_BFu7s, aS_BFu7i_BFu7s)
//============================================================================



static void Test_aS_BFu7i_BFu8c()
{
  {
    init_simple_test("aS_BFu7i_BFu8c");
    static STRUCT_IF_C aS_BFu7i_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_BFu8c.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_BFu8c");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu8c");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "aS_BFu7i_BFu8c");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "aS_BFu7i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_BFu8c, aS_BFu7i_BFu8c)
//============================================================================



static void Test_aS_BFu7i_BFu8i()
{
  {
    init_simple_test("aS_BFu7i_BFu8i");
    static STRUCT_IF_C aS_BFu7i_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_BFu8i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_BFu8i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu8i");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "aS_BFu7i_BFu8i");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "aS_BFu7i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_BFu8i, aS_BFu7i_BFu8i)
//============================================================================



static void Test_aS_BFu7i_BFu8ll()
{
  {
    init_simple_test("aS_BFu7i_BFu8ll");
    static STRUCT_IF_C aS_BFu7i_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_BFu8ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu8ll");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "aS_BFu7i_BFu8ll");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "aS_BFu7i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_BFu8ll, aS_BFu7i_BFu8ll)
//============================================================================



static void Test_aS_BFu7i_BFu8s()
{
  {
    init_simple_test("aS_BFu7i_BFu8s");
    static STRUCT_IF_C aS_BFu7i_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_BFu8s.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_BFu8s");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu8s");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "aS_BFu7i_BFu8s");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "aS_BFu7i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_BFu8s, aS_BFu7i_BFu8s)
//============================================================================



static void Test_aS_BFu7i_BFu9i()
{
  {
    init_simple_test("aS_BFu7i_BFu9i");
    static STRUCT_IF_C aS_BFu7i_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_BFu9i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_BFu9i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu9i");
    set_bf_and_test(lv, v3, 2, 7, 9, 1, "aS_BFu7i_BFu9i");
    set_bf_and_test(lv, v3, 2, 7, 9, hide_ull(1LL<<8), "aS_BFu7i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_BFu9i, aS_BFu7i_BFu9i)
//============================================================================



static void Test_aS_BFu7i_BFu9ll()
{
  {
    init_simple_test("aS_BFu7i_BFu9ll");
    static STRUCT_IF_C aS_BFu7i_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_BFu9ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu9ll");
    set_bf_and_test(lv, v3, 2, 7, 9, 1, "aS_BFu7i_BFu9ll");
    set_bf_and_test(lv, v3, 2, 7, 9, hide_ull(1LL<<8), "aS_BFu7i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_BFu9ll, aS_BFu7i_BFu9ll)
//============================================================================



static void Test_aS_BFu7i_BFu9s()
{
  {
    init_simple_test("aS_BFu7i_BFu9s");
    static STRUCT_IF_C aS_BFu7i_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_BFu9s.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_BFu9s");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_BFu9s");
    set_bf_and_test(lv, v3, 2, 7, 9, 1, "aS_BFu7i_BFu9s");
    set_bf_and_test(lv, v3, 2, 7, 9, hide_ull(1LL<<8), "aS_BFu7i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_BFu9s, aS_BFu7i_BFu9s)
//============================================================================



static void Test_aS_BFu7i_C()
{
  {
    init_simple_test("aS_BFu7i_C");
    static STRUCT_IF_C aS_BFu7i_C lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_C)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_C.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_C");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_C");
    check_field_offset(lv, v3, 3, "aS_BFu7i_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_C, aS_BFu7i_C)
//============================================================================



static void Test_aS_BFu7i_D()
{
  {
    init_simple_test("aS_BFu7i_D");
    static STRUCT_IF_C aS_BFu7i_D lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu7i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_D)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_D.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_D");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_D");
    check_field_offset(lv, v3, 3, "aS_BFu7i_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_D, aS_BFu7i_D)
//============================================================================



static void Test_aS_BFu7i_F()
{
  {
    init_simple_test("aS_BFu7i_F");
    static STRUCT_IF_C aS_BFu7i_F lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_F)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_F.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_F");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_F");
    check_field_offset(lv, v3, 3, "aS_BFu7i_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_F, aS_BFu7i_F)
//============================================================================



static void Test_aS_BFu7i_I()
{
  {
    init_simple_test("aS_BFu7i_I");
    static STRUCT_IF_C aS_BFu7i_I lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_I)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_I.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_I");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_I");
    check_field_offset(lv, v3, 3, "aS_BFu7i_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_I, aS_BFu7i_I)
//============================================================================



static void Test_aS_BFu7i_Ip()
{
  {
    init_simple_test("aS_BFu7i_Ip");
    static STRUCT_IF_C aS_BFu7i_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_BFu7i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_Ip)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_Ip.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_Ip");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_Ip");
    check_field_offset(lv, v3, 3, "aS_BFu7i_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_Ip, aS_BFu7i_Ip)
//============================================================================



static void Test_aS_BFu7i_L()
{
  {
    init_simple_test("aS_BFu7i_L");
    static STRUCT_IF_C aS_BFu7i_L lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu7i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_L)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_L.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_L");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_L");
    check_field_offset(lv, v3, 3, "aS_BFu7i_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_L, aS_BFu7i_L)
//============================================================================



static void Test_aS_BFu7i_S()
{
  {
    init_simple_test("aS_BFu7i_S");
    static STRUCT_IF_C aS_BFu7i_S lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_S)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_S.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_S");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_S");
    check_field_offset(lv, v3, 3, "aS_BFu7i_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_S, aS_BFu7i_S)
//============================================================================



static void Test_aS_BFu7i_Uc()
{
  {
    init_simple_test("aS_BFu7i_Uc");
    static STRUCT_IF_C aS_BFu7i_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_Uc)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_Uc.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_Uc");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_Uc");
    check_field_offset(lv, v3, 3, "aS_BFu7i_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_Uc, aS_BFu7i_Uc)
//============================================================================



static void Test_aS_BFu7i_Ui()
{
  {
    init_simple_test("aS_BFu7i_Ui");
    static STRUCT_IF_C aS_BFu7i_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_Ui)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_Ui.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_Ui");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_Ui");
    check_field_offset(lv, v3, 3, "aS_BFu7i_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_Ui, aS_BFu7i_Ui)
//============================================================================



static void Test_aS_BFu7i_Ul()
{
  {
    init_simple_test("aS_BFu7i_Ul");
    static STRUCT_IF_C aS_BFu7i_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu7i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_Ul)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_Ul.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_Ul");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_Ul");
    check_field_offset(lv, v3, 3, "aS_BFu7i_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_Ul, aS_BFu7i_Ul)
//============================================================================



static void Test_aS_BFu7i_Us()
{
  {
    init_simple_test("aS_BFu7i_Us");
    static STRUCT_IF_C aS_BFu7i_Us lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_Us)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_Us.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_Us");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_Us");
    check_field_offset(lv, v3, 3, "aS_BFu7i_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_Us, aS_BFu7i_Us)
//============================================================================



static void Test_aS_BFu7i_Vp()
{
  {
    init_simple_test("aS_BFu7i_Vp");
    static STRUCT_IF_C aS_BFu7i_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_BFu7i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7i_Vp)");
    check_field_offset(lv, v1, 0, "aS_BFu7i_Vp.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7i_Vp");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7i_Vp");
    check_field_offset(lv, v3, 3, "aS_BFu7i_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7i_Vp, aS_BFu7i_Vp)
//============================================================================



static void Test_aS_BFu7ll()
{
  {
    init_simple_test("aS_BFu7ll");
    static STRUCT_IF_C aS_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll, aS_BFu7ll)
//============================================================================



static void Test_aS_BFu7ll_BFu15i()
{
  {
    init_simple_test("aS_BFu7ll_BFu15i");
    static STRUCT_IF_C aS_BFu7ll_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_BFu15i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu15i");
    set_bf_and_test(lv, v3, 2, 7, 15, 1, "aS_BFu7ll_BFu15i");
    set_bf_and_test(lv, v3, 2, 7, 15, hide_ull(1LL<<14), "aS_BFu7ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_BFu15i, aS_BFu7ll_BFu15i)
//============================================================================



static void Test_aS_BFu7ll_BFu15ll()
{
  {
    init_simple_test("aS_BFu7ll_BFu15ll");
    static STRUCT_IF_C aS_BFu7ll_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_BFu15ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu15ll");
    set_bf_and_test(lv, v3, 2, 7, 15, 1, "aS_BFu7ll_BFu15ll");
    set_bf_and_test(lv, v3, 2, 7, 15, hide_ull(1LL<<14), "aS_BFu7ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_BFu15ll, aS_BFu7ll_BFu15ll)
//============================================================================



static void Test_aS_BFu7ll_BFu15s()
{
  {
    init_simple_test("aS_BFu7ll_BFu15s");
    static STRUCT_IF_C aS_BFu7ll_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_BFu15s");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu15s");
    set_bf_and_test(lv, v3, 2, 7, 15, 1, "aS_BFu7ll_BFu15s");
    set_bf_and_test(lv, v3, 2, 7, 15, hide_ull(1LL<<14), "aS_BFu7ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_BFu15s, aS_BFu7ll_BFu15s)
//============================================================================



static void Test_aS_BFu7ll_BFu16i()
{
  {
    init_simple_test("aS_BFu7ll_BFu16i");
    static STRUCT_IF_C aS_BFu7ll_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu16i");
    set_bf_and_test(lv, v3, 2, 7, 16, 1, "aS_BFu7ll_BFu16i");
    set_bf_and_test(lv, v3, 2, 7, 16, hide_ull(1LL<<15), "aS_BFu7ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_BFu16i, aS_BFu7ll_BFu16i)
//============================================================================



static void Test_aS_BFu7ll_BFu16ll()
{
  {
    init_simple_test("aS_BFu7ll_BFu16ll");
    static STRUCT_IF_C aS_BFu7ll_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu16ll");
    set_bf_and_test(lv, v3, 2, 7, 16, 1, "aS_BFu7ll_BFu16ll");
    set_bf_and_test(lv, v3, 2, 7, 16, hide_ull(1LL<<15), "aS_BFu7ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_BFu16ll, aS_BFu7ll_BFu16ll)
//============================================================================



static void Test_aS_BFu7ll_BFu16s()
{
  {
    init_simple_test("aS_BFu7ll_BFu16s");
    static STRUCT_IF_C aS_BFu7ll_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu16s");
    set_bf_and_test(lv, v3, 2, 7, 16, 1, "aS_BFu7ll_BFu16s");
    set_bf_and_test(lv, v3, 2, 7, 16, hide_ull(1LL<<15), "aS_BFu7ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_BFu16s, aS_BFu7ll_BFu16s)
//============================================================================



static void Test_aS_BFu7ll_BFu17i()
{
  {
    init_simple_test("aS_BFu7ll_BFu17i");
    static STRUCT_IF_C aS_BFu7ll_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu17i");
    set_bf_and_test(lv, v3, 2, 7, 17, 1, "aS_BFu7ll_BFu17i");
    set_bf_and_test(lv, v3, 2, 7, 17, hide_ull(1LL<<16), "aS_BFu7ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_BFu17i, aS_BFu7ll_BFu17i)
//============================================================================



static void Test_aS_BFu7ll_BFu17ll()
{
  {
    init_simple_test("aS_BFu7ll_BFu17ll");
    static STRUCT_IF_C aS_BFu7ll_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu17ll");
    set_bf_and_test(lv, v3, 2, 7, 17, 1, "aS_BFu7ll_BFu17ll");
    set_bf_and_test(lv, v3, 2, 7, 17, hide_ull(1LL<<16), "aS_BFu7ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_BFu17ll, aS_BFu7ll_BFu17ll)
//============================================================================



static void Test_aS_BFu7ll_BFu1c()
{
  {
    init_simple_test("aS_BFu7ll_BFu1c");
    static STRUCT_IF_C aS_BFu7ll_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu7ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_BFu1c");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu1c");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "aS_BFu7ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_BFu1c, aS_BFu7ll_BFu1c)
//============================================================================



static void Test_aS_BFu7ll_BFu1i()
{
  {
    init_simple_test("aS_BFu7ll_BFu1i");
    static STRUCT_IF_C aS_BFu7ll_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu7ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_BFu1i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu1i");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "aS_BFu7ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_BFu1i, aS_BFu7ll_BFu1i)
//============================================================================



static void Test_aS_BFu7ll_BFu1ll()
{
  {
    init_simple_test("aS_BFu7ll_BFu1ll");
    static STRUCT_IF_C aS_BFu7ll_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu7ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_BFu1ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu1ll");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "aS_BFu7ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_BFu1ll, aS_BFu7ll_BFu1ll)
//============================================================================



static void Test_aS_BFu7ll_BFu1s()
{
  {
    init_simple_test("aS_BFu7ll_BFu1s");
    static STRUCT_IF_C aS_BFu7ll_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu7ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_BFu1s");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu1s");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "aS_BFu7ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_BFu1s, aS_BFu7ll_BFu1s)
//============================================================================



static void Test_aS_BFu7ll_BFu31i()
{
  {
    init_simple_test("aS_BFu7ll_BFu31i");
    static STRUCT_IF_C aS_BFu7ll_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_BFu31i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu31i");
    set_bf_and_test(lv, v3, 2, 7, 31, 1, "aS_BFu7ll_BFu31i");
    set_bf_and_test(lv, v3, 2, 7, 31, hide_ull(1LL<<30), "aS_BFu7ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_BFu31i, aS_BFu7ll_BFu31i)
//============================================================================



static void Test_aS_BFu7ll_BFu31ll()
{
  {
    init_simple_test("aS_BFu7ll_BFu31ll");
    static STRUCT_IF_C aS_BFu7ll_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_BFu31ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu31ll");
    set_bf_and_test(lv, v3, 2, 7, 31, 1, "aS_BFu7ll_BFu31ll");
    set_bf_and_test(lv, v3, 2, 7, 31, hide_ull(1LL<<30), "aS_BFu7ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_BFu31ll, aS_BFu7ll_BFu31ll)
//============================================================================



static void Test_aS_BFu7ll_BFu32i()
{
  {
    init_simple_test("aS_BFu7ll_BFu32i");
    static STRUCT_IF_C aS_BFu7ll_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_BFu32i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu32i");
    set_bf_and_test(lv, v3, 2, 7, 32, 1, "aS_BFu7ll_BFu32i");
    set_bf_and_test(lv, v3, 2, 7, 32, hide_ull(1LL<<31), "aS_BFu7ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_BFu32i, aS_BFu7ll_BFu32i)
//============================================================================



static void Test_aS_BFu7ll_BFu32ll()
{
  {
    init_simple_test("aS_BFu7ll_BFu32ll");
    static STRUCT_IF_C aS_BFu7ll_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_BFu32ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu32ll");
    set_bf_and_test(lv, v3, 2, 7, 32, 1, "aS_BFu7ll_BFu32ll");
    set_bf_and_test(lv, v3, 2, 7, 32, hide_ull(1LL<<31), "aS_BFu7ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_BFu32ll, aS_BFu7ll_BFu32ll)
//============================================================================



static void Test_aS_BFu7ll_BFu33()
{
  {
    init_simple_test("aS_BFu7ll_BFu33");
    static STRUCT_IF_C aS_BFu7ll_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_BFu33)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_BFu33.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_BFu33");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu33");
    set_bf_and_test(lv, v3, 2, 7, 33, 1, "aS_BFu7ll_BFu33");
    set_bf_and_test(lv, v3, 2, 7, 33, hide_ull(1LL<<32), "aS_BFu7ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_BFu33, aS_BFu7ll_BFu33)
//============================================================================



static void Test_aS_BFu7ll_BFu7c()
{
  {
    init_simple_test("aS_BFu7ll_BFu7c");
    static STRUCT_IF_C aS_BFu7ll_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_BFu7c");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu7c");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "aS_BFu7ll_BFu7c");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_BFu7c, aS_BFu7ll_BFu7c)
//============================================================================



static void Test_aS_BFu7ll_BFu7i()
{
  {
    init_simple_test("aS_BFu7ll_BFu7i");
    static STRUCT_IF_C aS_BFu7ll_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_BFu7i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu7i");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "aS_BFu7ll_BFu7i");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_BFu7i, aS_BFu7ll_BFu7i)
//============================================================================



static void Test_aS_BFu7ll_BFu7ll()
{
  {
    init_simple_test("aS_BFu7ll_BFu7ll");
    static STRUCT_IF_C aS_BFu7ll_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_BFu7ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu7ll");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "aS_BFu7ll_BFu7ll");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_BFu7ll, aS_BFu7ll_BFu7ll)
//============================================================================



static void Test_aS_BFu7ll_BFu7s()
{
  {
    init_simple_test("aS_BFu7ll_BFu7s");
    static STRUCT_IF_C aS_BFu7ll_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_BFu7s");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu7s");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "aS_BFu7ll_BFu7s");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_BFu7s, aS_BFu7ll_BFu7s)
//============================================================================



static void Test_aS_BFu7ll_BFu8c()
{
  {
    init_simple_test("aS_BFu7ll_BFu8c");
    static STRUCT_IF_C aS_BFu7ll_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_BFu8c");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu8c");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "aS_BFu7ll_BFu8c");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "aS_BFu7ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_BFu8c, aS_BFu7ll_BFu8c)
//============================================================================



static void Test_aS_BFu7ll_BFu8i()
{
  {
    init_simple_test("aS_BFu7ll_BFu8i");
    static STRUCT_IF_C aS_BFu7ll_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_BFu8i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu8i");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "aS_BFu7ll_BFu8i");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "aS_BFu7ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_BFu8i, aS_BFu7ll_BFu8i)
//============================================================================



static void Test_aS_BFu7ll_BFu8ll()
{
  {
    init_simple_test("aS_BFu7ll_BFu8ll");
    static STRUCT_IF_C aS_BFu7ll_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_BFu8ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu8ll");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "aS_BFu7ll_BFu8ll");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "aS_BFu7ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_BFu8ll, aS_BFu7ll_BFu8ll)
//============================================================================



static void Test_aS_BFu7ll_BFu8s()
{
  {
    init_simple_test("aS_BFu7ll_BFu8s");
    static STRUCT_IF_C aS_BFu7ll_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_BFu8s");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu8s");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "aS_BFu7ll_BFu8s");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "aS_BFu7ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_BFu8s, aS_BFu7ll_BFu8s)
//============================================================================



static void Test_aS_BFu7ll_BFu9i()
{
  {
    init_simple_test("aS_BFu7ll_BFu9i");
    static STRUCT_IF_C aS_BFu7ll_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_BFu9i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu9i");
    set_bf_and_test(lv, v3, 2, 7, 9, 1, "aS_BFu7ll_BFu9i");
    set_bf_and_test(lv, v3, 2, 7, 9, hide_ull(1LL<<8), "aS_BFu7ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_BFu9i, aS_BFu7ll_BFu9i)
//============================================================================



static void Test_aS_BFu7ll_BFu9ll()
{
  {
    init_simple_test("aS_BFu7ll_BFu9ll");
    static STRUCT_IF_C aS_BFu7ll_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_BFu9ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu9ll");
    set_bf_and_test(lv, v3, 2, 7, 9, 1, "aS_BFu7ll_BFu9ll");
    set_bf_and_test(lv, v3, 2, 7, 9, hide_ull(1LL<<8), "aS_BFu7ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_BFu9ll, aS_BFu7ll_BFu9ll)
//============================================================================



static void Test_aS_BFu7ll_BFu9s()
{
  {
    init_simple_test("aS_BFu7ll_BFu9s");
    static STRUCT_IF_C aS_BFu7ll_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_BFu9s");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_BFu9s");
    set_bf_and_test(lv, v3, 2, 7, 9, 1, "aS_BFu7ll_BFu9s");
    set_bf_and_test(lv, v3, 2, 7, 9, hide_ull(1LL<<8), "aS_BFu7ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_BFu9s, aS_BFu7ll_BFu9s)
//============================================================================



static void Test_aS_BFu7ll_C()
{
  {
    init_simple_test("aS_BFu7ll_C");
    static STRUCT_IF_C aS_BFu7ll_C lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_C)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_C.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_C");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_C");
    check_field_offset(lv, v3, 3, "aS_BFu7ll_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_C, aS_BFu7ll_C)
//============================================================================



static void Test_aS_BFu7ll_D()
{
  {
    init_simple_test("aS_BFu7ll_D");
    static STRUCT_IF_C aS_BFu7ll_D lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu7ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_D)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_D.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_D");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_D");
    check_field_offset(lv, v3, 3, "aS_BFu7ll_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_D, aS_BFu7ll_D)
//============================================================================



static void Test_aS_BFu7ll_F()
{
  {
    init_simple_test("aS_BFu7ll_F");
    static STRUCT_IF_C aS_BFu7ll_F lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_F)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_F.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_F");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_F");
    check_field_offset(lv, v3, 3, "aS_BFu7ll_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_F, aS_BFu7ll_F)
//============================================================================



static void Test_aS_BFu7ll_I()
{
  {
    init_simple_test("aS_BFu7ll_I");
    static STRUCT_IF_C aS_BFu7ll_I lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_I)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_I.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_I");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_I");
    check_field_offset(lv, v3, 3, "aS_BFu7ll_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_I, aS_BFu7ll_I)
//============================================================================



static void Test_aS_BFu7ll_Ip()
{
  {
    init_simple_test("aS_BFu7ll_Ip");
    static STRUCT_IF_C aS_BFu7ll_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_BFu7ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_Ip)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_Ip.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_Ip");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_Ip");
    check_field_offset(lv, v3, 3, "aS_BFu7ll_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_Ip, aS_BFu7ll_Ip)
//============================================================================



static void Test_aS_BFu7ll_L()
{
  {
    init_simple_test("aS_BFu7ll_L");
    static STRUCT_IF_C aS_BFu7ll_L lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu7ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_L)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_L.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_L");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_L");
    check_field_offset(lv, v3, 3, "aS_BFu7ll_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_L, aS_BFu7ll_L)
//============================================================================



static void Test_aS_BFu7ll_S()
{
  {
    init_simple_test("aS_BFu7ll_S");
    static STRUCT_IF_C aS_BFu7ll_S lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_S)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_S.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_S");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_S");
    check_field_offset(lv, v3, 3, "aS_BFu7ll_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_S, aS_BFu7ll_S)
//============================================================================



static void Test_aS_BFu7ll_Uc()
{
  {
    init_simple_test("aS_BFu7ll_Uc");
    static STRUCT_IF_C aS_BFu7ll_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_Uc)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_Uc.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_Uc");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_Uc");
    check_field_offset(lv, v3, 3, "aS_BFu7ll_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_Uc, aS_BFu7ll_Uc)
//============================================================================



static void Test_aS_BFu7ll_Ui()
{
  {
    init_simple_test("aS_BFu7ll_Ui");
    static STRUCT_IF_C aS_BFu7ll_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_Ui)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_Ui.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_Ui");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_Ui");
    check_field_offset(lv, v3, 3, "aS_BFu7ll_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_Ui, aS_BFu7ll_Ui)
//============================================================================



static void Test_aS_BFu7ll_Ul()
{
  {
    init_simple_test("aS_BFu7ll_Ul");
    static STRUCT_IF_C aS_BFu7ll_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu7ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_Ul)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_Ul.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_Ul");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_Ul");
    check_field_offset(lv, v3, 3, "aS_BFu7ll_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_Ul, aS_BFu7ll_Ul)
//============================================================================



static void Test_aS_BFu7ll_Us()
{
  {
    init_simple_test("aS_BFu7ll_Us");
    static STRUCT_IF_C aS_BFu7ll_Us lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_Us)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_Us.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_Us");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_Us");
    check_field_offset(lv, v3, 3, "aS_BFu7ll_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_Us, aS_BFu7ll_Us)
//============================================================================



static void Test_aS_BFu7ll_Vp()
{
  {
    init_simple_test("aS_BFu7ll_Vp");
    static STRUCT_IF_C aS_BFu7ll_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_BFu7ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7ll_Vp)");
    check_field_offset(lv, v1, 0, "aS_BFu7ll_Vp.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7ll_Vp");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7ll_Vp");
    check_field_offset(lv, v3, 3, "aS_BFu7ll_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7ll_Vp, aS_BFu7ll_Vp)
//============================================================================



static void Test_aS_BFu7s()
{
  {
    init_simple_test("aS_BFu7s");
    static STRUCT_IF_C aS_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_BFu7s.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s, aS_BFu7s)
//============================================================================



static void Test_aS_BFu7s_BFu15i()
{
  {
    init_simple_test("aS_BFu7s_BFu15i");
    static STRUCT_IF_C aS_BFu7s_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_BFu15i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_BFu15i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu15i");
    set_bf_and_test(lv, v3, 2, 7, 15, 1, "aS_BFu7s_BFu15i");
    set_bf_and_test(lv, v3, 2, 7, 15, hide_ull(1LL<<14), "aS_BFu7s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_BFu15i, aS_BFu7s_BFu15i)
//============================================================================



static void Test_aS_BFu7s_BFu15ll()
{
  {
    init_simple_test("aS_BFu7s_BFu15ll");
    static STRUCT_IF_C aS_BFu7s_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_BFu15ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_BFu15ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu15ll");
    set_bf_and_test(lv, v3, 2, 7, 15, 1, "aS_BFu7s_BFu15ll");
    set_bf_and_test(lv, v3, 2, 7, 15, hide_ull(1LL<<14), "aS_BFu7s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_BFu15ll, aS_BFu7s_BFu15ll)
//============================================================================



static void Test_aS_BFu7s_BFu15s()
{
  {
    init_simple_test("aS_BFu7s_BFu15s");
    static STRUCT_IF_C aS_BFu7s_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_BFu15s.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_BFu15s");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu15s");
    set_bf_and_test(lv, v3, 2, 7, 15, 1, "aS_BFu7s_BFu15s");
    set_bf_and_test(lv, v3, 2, 7, 15, hide_ull(1LL<<14), "aS_BFu7s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_BFu15s, aS_BFu7s_BFu15s)
//============================================================================



static void Test_aS_BFu7s_BFu16i()
{
  {
    init_simple_test("aS_BFu7s_BFu16i");
    static STRUCT_IF_C aS_BFu7s_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_BFu16i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu16i");
    set_bf_and_test(lv, v3, 2, 7, 16, 1, "aS_BFu7s_BFu16i");
    set_bf_and_test(lv, v3, 2, 7, 16, hide_ull(1LL<<15), "aS_BFu7s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_BFu16i, aS_BFu7s_BFu16i)
//============================================================================



static void Test_aS_BFu7s_BFu16ll()
{
  {
    init_simple_test("aS_BFu7s_BFu16ll");
    static STRUCT_IF_C aS_BFu7s_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_BFu16ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu16ll");
    set_bf_and_test(lv, v3, 2, 7, 16, 1, "aS_BFu7s_BFu16ll");
    set_bf_and_test(lv, v3, 2, 7, 16, hide_ull(1LL<<15), "aS_BFu7s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_BFu16ll, aS_BFu7s_BFu16ll)
//============================================================================



static void Test_aS_BFu7s_BFu16s()
{
  {
    init_simple_test("aS_BFu7s_BFu16s");
    static STRUCT_IF_C aS_BFu7s_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_BFu16s.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu16s");
    set_bf_and_test(lv, v3, 2, 7, 16, 1, "aS_BFu7s_BFu16s");
    set_bf_and_test(lv, v3, 2, 7, 16, hide_ull(1LL<<15), "aS_BFu7s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_BFu16s, aS_BFu7s_BFu16s)
//============================================================================



static void Test_aS_BFu7s_BFu17i()
{
  {
    init_simple_test("aS_BFu7s_BFu17i");
    static STRUCT_IF_C aS_BFu7s_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_BFu17i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_BFu17i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu17i");
    set_bf_and_test(lv, v3, 2, 7, 17, 1, "aS_BFu7s_BFu17i");
    set_bf_and_test(lv, v3, 2, 7, 17, hide_ull(1LL<<16), "aS_BFu7s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_BFu17i, aS_BFu7s_BFu17i)
//============================================================================



static void Test_aS_BFu7s_BFu17ll()
{
  {
    init_simple_test("aS_BFu7s_BFu17ll");
    static STRUCT_IF_C aS_BFu7s_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_BFu17ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_BFu17ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu17ll");
    set_bf_and_test(lv, v3, 2, 7, 17, 1, "aS_BFu7s_BFu17ll");
    set_bf_and_test(lv, v3, 2, 7, 17, hide_ull(1LL<<16), "aS_BFu7s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_BFu17ll, aS_BFu7s_BFu17ll)
//============================================================================



static void Test_aS_BFu7s_BFu1c()
{
  {
    init_simple_test("aS_BFu7s_BFu1c");
    static STRUCT_IF_C aS_BFu7s_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu7s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_BFu1c.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_BFu1c");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu1c");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "aS_BFu7s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_BFu1c, aS_BFu7s_BFu1c)
//============================================================================



static void Test_aS_BFu7s_BFu1i()
{
  {
    init_simple_test("aS_BFu7s_BFu1i");
    static STRUCT_IF_C aS_BFu7s_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu7s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_BFu1i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_BFu1i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu1i");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "aS_BFu7s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_BFu1i, aS_BFu7s_BFu1i)
//============================================================================



static void Test_aS_BFu7s_BFu1ll()
{
  {
    init_simple_test("aS_BFu7s_BFu1ll");
    static STRUCT_IF_C aS_BFu7s_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu7s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_BFu1ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_BFu1ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu1ll");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "aS_BFu7s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_BFu1ll, aS_BFu7s_BFu1ll)
//============================================================================



static void Test_aS_BFu7s_BFu1s()
{
  {
    init_simple_test("aS_BFu7s_BFu1s");
    static STRUCT_IF_C aS_BFu7s_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu7s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_BFu1s.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_BFu1s");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu1s");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "aS_BFu7s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_BFu1s, aS_BFu7s_BFu1s)
//============================================================================



static void Test_aS_BFu7s_BFu31i()
{
  {
    init_simple_test("aS_BFu7s_BFu31i");
    static STRUCT_IF_C aS_BFu7s_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_BFu31i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_BFu31i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu31i");
    set_bf_and_test(lv, v3, 2, 7, 31, 1, "aS_BFu7s_BFu31i");
    set_bf_and_test(lv, v3, 2, 7, 31, hide_ull(1LL<<30), "aS_BFu7s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_BFu31i, aS_BFu7s_BFu31i)
//============================================================================



static void Test_aS_BFu7s_BFu31ll()
{
  {
    init_simple_test("aS_BFu7s_BFu31ll");
    static STRUCT_IF_C aS_BFu7s_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_BFu31ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_BFu31ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu31ll");
    set_bf_and_test(lv, v3, 2, 7, 31, 1, "aS_BFu7s_BFu31ll");
    set_bf_and_test(lv, v3, 2, 7, 31, hide_ull(1LL<<30), "aS_BFu7s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_BFu31ll, aS_BFu7s_BFu31ll)
//============================================================================



static void Test_aS_BFu7s_BFu32i()
{
  {
    init_simple_test("aS_BFu7s_BFu32i");
    static STRUCT_IF_C aS_BFu7s_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_BFu32i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_BFu32i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu32i");
    set_bf_and_test(lv, v3, 2, 7, 32, 1, "aS_BFu7s_BFu32i");
    set_bf_and_test(lv, v3, 2, 7, 32, hide_ull(1LL<<31), "aS_BFu7s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_BFu32i, aS_BFu7s_BFu32i)
//============================================================================



static void Test_aS_BFu7s_BFu32ll()
{
  {
    init_simple_test("aS_BFu7s_BFu32ll");
    static STRUCT_IF_C aS_BFu7s_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_BFu32ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_BFu32ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu32ll");
    set_bf_and_test(lv, v3, 2, 7, 32, 1, "aS_BFu7s_BFu32ll");
    set_bf_and_test(lv, v3, 2, 7, 32, hide_ull(1LL<<31), "aS_BFu7s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_BFu32ll, aS_BFu7s_BFu32ll)
//============================================================================



static void Test_aS_BFu7s_BFu33()
{
  {
    init_simple_test("aS_BFu7s_BFu33");
    static STRUCT_IF_C aS_BFu7s_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_BFu33)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_BFu33.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_BFu33");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu33");
    set_bf_and_test(lv, v3, 2, 7, 33, 1, "aS_BFu7s_BFu33");
    set_bf_and_test(lv, v3, 2, 7, 33, hide_ull(1LL<<32), "aS_BFu7s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_BFu33, aS_BFu7s_BFu33)
//============================================================================



static void Test_aS_BFu7s_BFu7c()
{
  {
    init_simple_test("aS_BFu7s_BFu7c");
    static STRUCT_IF_C aS_BFu7s_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_BFu7c.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_BFu7c");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu7c");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "aS_BFu7s_BFu7c");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_BFu7c, aS_BFu7s_BFu7c)
//============================================================================



static void Test_aS_BFu7s_BFu7i()
{
  {
    init_simple_test("aS_BFu7s_BFu7i");
    static STRUCT_IF_C aS_BFu7s_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_BFu7i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_BFu7i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu7i");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "aS_BFu7s_BFu7i");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_BFu7i, aS_BFu7s_BFu7i)
//============================================================================



static void Test_aS_BFu7s_BFu7ll()
{
  {
    init_simple_test("aS_BFu7s_BFu7ll");
    static STRUCT_IF_C aS_BFu7s_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_BFu7ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_BFu7ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu7ll");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "aS_BFu7s_BFu7ll");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_BFu7ll, aS_BFu7s_BFu7ll)
//============================================================================



static void Test_aS_BFu7s_BFu7s()
{
  {
    init_simple_test("aS_BFu7s_BFu7s");
    static STRUCT_IF_C aS_BFu7s_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_BFu7s.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_BFu7s");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu7s");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "aS_BFu7s_BFu7s");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_BFu7s, aS_BFu7s_BFu7s)
//============================================================================



static void Test_aS_BFu7s_BFu8c()
{
  {
    init_simple_test("aS_BFu7s_BFu8c");
    static STRUCT_IF_C aS_BFu7s_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_BFu8c.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_BFu8c");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu8c");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "aS_BFu7s_BFu8c");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "aS_BFu7s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_BFu8c, aS_BFu7s_BFu8c)
//============================================================================



static void Test_aS_BFu7s_BFu8i()
{
  {
    init_simple_test("aS_BFu7s_BFu8i");
    static STRUCT_IF_C aS_BFu7s_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_BFu8i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_BFu8i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu8i");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "aS_BFu7s_BFu8i");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "aS_BFu7s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_BFu8i, aS_BFu7s_BFu8i)
//============================================================================



static void Test_aS_BFu7s_BFu8ll()
{
  {
    init_simple_test("aS_BFu7s_BFu8ll");
    static STRUCT_IF_C aS_BFu7s_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_BFu8ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_BFu8ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu8ll");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "aS_BFu7s_BFu8ll");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "aS_BFu7s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_BFu8ll, aS_BFu7s_BFu8ll)
//============================================================================



static void Test_aS_BFu7s_BFu8s()
{
  {
    init_simple_test("aS_BFu7s_BFu8s");
    static STRUCT_IF_C aS_BFu7s_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_BFu8s.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_BFu8s");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu8s");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "aS_BFu7s_BFu8s");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "aS_BFu7s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_BFu8s, aS_BFu7s_BFu8s)
//============================================================================



static void Test_aS_BFu7s_BFu9i()
{
  {
    init_simple_test("aS_BFu7s_BFu9i");
    static STRUCT_IF_C aS_BFu7s_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_BFu9i.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_BFu9i");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu9i");
    set_bf_and_test(lv, v3, 2, 7, 9, 1, "aS_BFu7s_BFu9i");
    set_bf_and_test(lv, v3, 2, 7, 9, hide_ull(1LL<<8), "aS_BFu7s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_BFu9i, aS_BFu7s_BFu9i)
//============================================================================



static void Test_aS_BFu7s_BFu9ll()
{
  {
    init_simple_test("aS_BFu7s_BFu9ll");
    static STRUCT_IF_C aS_BFu7s_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_BFu9ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_BFu9ll");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu9ll");
    set_bf_and_test(lv, v3, 2, 7, 9, 1, "aS_BFu7s_BFu9ll");
    set_bf_and_test(lv, v3, 2, 7, 9, hide_ull(1LL<<8), "aS_BFu7s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_BFu9ll, aS_BFu7s_BFu9ll)
//============================================================================



static void Test_aS_BFu7s_BFu9s()
{
  {
    init_simple_test("aS_BFu7s_BFu9s");
    static STRUCT_IF_C aS_BFu7s_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_BFu9s.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_BFu9s");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_BFu9s");
    set_bf_and_test(lv, v3, 2, 7, 9, 1, "aS_BFu7s_BFu9s");
    set_bf_and_test(lv, v3, 2, 7, 9, hide_ull(1LL<<8), "aS_BFu7s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_BFu9s, aS_BFu7s_BFu9s)
//============================================================================



static void Test_aS_BFu7s_C()
{
  {
    init_simple_test("aS_BFu7s_C");
    static STRUCT_IF_C aS_BFu7s_C lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7s_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_C)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_C.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_C");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_C");
    check_field_offset(lv, v3, 3, "aS_BFu7s_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_C, aS_BFu7s_C)
//============================================================================



static void Test_aS_BFu7s_D()
{
  {
    init_simple_test("aS_BFu7s_D");
    static STRUCT_IF_C aS_BFu7s_D lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu7s_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_D)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_D.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_D");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_D");
    check_field_offset(lv, v3, 3, "aS_BFu7s_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_D, aS_BFu7s_D)
//============================================================================



static void Test_aS_BFu7s_F()
{
  {
    init_simple_test("aS_BFu7s_F");
    static STRUCT_IF_C aS_BFu7s_F lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7s_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_F)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_F.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_F");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_F");
    check_field_offset(lv, v3, 3, "aS_BFu7s_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_F, aS_BFu7s_F)
//============================================================================



static void Test_aS_BFu7s_I()
{
  {
    init_simple_test("aS_BFu7s_I");
    static STRUCT_IF_C aS_BFu7s_I lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7s_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_I)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_I.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_I");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_I");
    check_field_offset(lv, v3, 3, "aS_BFu7s_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_I, aS_BFu7s_I)
//============================================================================



static void Test_aS_BFu7s_Ip()
{
  {
    init_simple_test("aS_BFu7s_Ip");
    static STRUCT_IF_C aS_BFu7s_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_BFu7s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_Ip)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_Ip.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_Ip");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_Ip");
    check_field_offset(lv, v3, 3, "aS_BFu7s_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_Ip, aS_BFu7s_Ip)
//============================================================================



static void Test_aS_BFu7s_L()
{
  {
    init_simple_test("aS_BFu7s_L");
    static STRUCT_IF_C aS_BFu7s_L lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu7s_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_L)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_L.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_L");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_L");
    check_field_offset(lv, v3, 3, "aS_BFu7s_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_L, aS_BFu7s_L)
//============================================================================



static void Test_aS_BFu7s_S()
{
  {
    init_simple_test("aS_BFu7s_S");
    static STRUCT_IF_C aS_BFu7s_S lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7s_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_S)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_S.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_S");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_S");
    check_field_offset(lv, v3, 3, "aS_BFu7s_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_S, aS_BFu7s_S)
//============================================================================



static void Test_aS_BFu7s_Uc()
{
  {
    init_simple_test("aS_BFu7s_Uc");
    static STRUCT_IF_C aS_BFu7s_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu7s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_Uc)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_Uc.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_Uc");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_Uc");
    check_field_offset(lv, v3, 3, "aS_BFu7s_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_Uc, aS_BFu7s_Uc)
//============================================================================



static void Test_aS_BFu7s_Ui()
{
  {
    init_simple_test("aS_BFu7s_Ui");
    static STRUCT_IF_C aS_BFu7s_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu7s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_Ui)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_Ui.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_Ui");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_Ui");
    check_field_offset(lv, v3, 3, "aS_BFu7s_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_Ui, aS_BFu7s_Ui)
//============================================================================



static void Test_aS_BFu7s_Ul()
{
  {
    init_simple_test("aS_BFu7s_Ul");
    static STRUCT_IF_C aS_BFu7s_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu7s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_Ul)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_Ul.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_Ul");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_Ul");
    check_field_offset(lv, v3, 3, "aS_BFu7s_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_Ul, aS_BFu7s_Ul)
//============================================================================



static void Test_aS_BFu7s_Us()
{
  {
    init_simple_test("aS_BFu7s_Us");
    static STRUCT_IF_C aS_BFu7s_Us lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu7s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_Us)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_Us.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_Us");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_Us");
    check_field_offset(lv, v3, 3, "aS_BFu7s_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_Us, aS_BFu7s_Us)
//============================================================================



static void Test_aS_BFu7s_Vp()
{
  {
    init_simple_test("aS_BFu7s_Vp");
    static STRUCT_IF_C aS_BFu7s_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_BFu7s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu7s_Vp)");
    check_field_offset(lv, v1, 0, "aS_BFu7s_Vp.v1");
    set_bf_and_test(lv, v2, 2, 0, 7, 1, "aS_BFu7s_Vp");
    set_bf_and_test(lv, v2, 2, 0, 7, hide_ull(1LL<<6), "aS_BFu7s_Vp");
    check_field_offset(lv, v3, 3, "aS_BFu7s_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu7s_Vp, aS_BFu7s_Vp)
//============================================================================



static void Test_aS_BFu8c()
{
  {
    init_simple_test("aS_BFu8c");
    static STRUCT_IF_C aS_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_BFu8c.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c, aS_BFu8c)
//============================================================================



static void Test_aS_BFu8c_BFu15i()
{
  {
    init_simple_test("aS_BFu8c_BFu15i");
    static STRUCT_IF_C aS_BFu8c_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_BFu15i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_BFu15i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aS_BFu8c_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aS_BFu8c_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_BFu15i, aS_BFu8c_BFu15i)
//============================================================================



static void Test_aS_BFu8c_BFu15ll()
{
  {
    init_simple_test("aS_BFu8c_BFu15ll");
    static STRUCT_IF_C aS_BFu8c_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_BFu15ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_BFu15ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aS_BFu8c_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aS_BFu8c_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_BFu15ll, aS_BFu8c_BFu15ll)
//============================================================================



static void Test_aS_BFu8c_BFu15s()
{
  {
    init_simple_test("aS_BFu8c_BFu15s");
    static STRUCT_IF_C aS_BFu8c_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_BFu15s.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_BFu15s");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aS_BFu8c_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aS_BFu8c_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_BFu15s, aS_BFu8c_BFu15s)
//============================================================================



static void Test_aS_BFu8c_BFu16i()
{
  {
    init_simple_test("aS_BFu8c_BFu16i");
    static STRUCT_IF_C aS_BFu8c_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_BFu16i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aS_BFu8c_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aS_BFu8c_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_BFu16i, aS_BFu8c_BFu16i)
//============================================================================



static void Test_aS_BFu8c_BFu16ll()
{
  {
    init_simple_test("aS_BFu8c_BFu16ll");
    static STRUCT_IF_C aS_BFu8c_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_BFu16ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aS_BFu8c_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aS_BFu8c_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_BFu16ll, aS_BFu8c_BFu16ll)
//============================================================================



static void Test_aS_BFu8c_BFu16s()
{
  {
    init_simple_test("aS_BFu8c_BFu16s");
    static STRUCT_IF_C aS_BFu8c_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_BFu16s.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aS_BFu8c_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aS_BFu8c_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_BFu16s, aS_BFu8c_BFu16s)
//============================================================================



static void Test_aS_BFu8c_BFu17i()
{
  {
    init_simple_test("aS_BFu8c_BFu17i");
    static STRUCT_IF_C aS_BFu8c_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu8c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_BFu17i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_BFu17i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aS_BFu8c_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aS_BFu8c_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_BFu17i, aS_BFu8c_BFu17i)
//============================================================================



static void Test_aS_BFu8c_BFu17ll()
{
  {
    init_simple_test("aS_BFu8c_BFu17ll");
    static STRUCT_IF_C aS_BFu8c_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu8c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_BFu17ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_BFu17ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aS_BFu8c_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aS_BFu8c_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_BFu17ll, aS_BFu8c_BFu17ll)
//============================================================================



static void Test_aS_BFu8c_BFu1c()
{
  {
    init_simple_test("aS_BFu8c_BFu1c");
    static STRUCT_IF_C aS_BFu8c_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_BFu1c.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_BFu1c");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu1c");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aS_BFu8c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_BFu1c, aS_BFu8c_BFu1c)
//============================================================================



static void Test_aS_BFu8c_BFu1i()
{
  {
    init_simple_test("aS_BFu8c_BFu1i");
    static STRUCT_IF_C aS_BFu8c_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_BFu1i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_BFu1i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu1i");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aS_BFu8c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_BFu1i, aS_BFu8c_BFu1i)
//============================================================================



static void Test_aS_BFu8c_BFu1ll()
{
  {
    init_simple_test("aS_BFu8c_BFu1ll");
    static STRUCT_IF_C aS_BFu8c_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_BFu1ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_BFu1ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu1ll");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aS_BFu8c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_BFu1ll, aS_BFu8c_BFu1ll)
//============================================================================



static void Test_aS_BFu8c_BFu1s()
{
  {
    init_simple_test("aS_BFu8c_BFu1s");
    static STRUCT_IF_C aS_BFu8c_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_BFu1s.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_BFu1s");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu1s");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aS_BFu8c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_BFu1s, aS_BFu8c_BFu1s)
//============================================================================



static void Test_aS_BFu8c_BFu31i()
{
  {
    init_simple_test("aS_BFu8c_BFu31i");
    static STRUCT_IF_C aS_BFu8c_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu8c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_BFu31i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_BFu31i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aS_BFu8c_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aS_BFu8c_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_BFu31i, aS_BFu8c_BFu31i)
//============================================================================



static void Test_aS_BFu8c_BFu31ll()
{
  {
    init_simple_test("aS_BFu8c_BFu31ll");
    static STRUCT_IF_C aS_BFu8c_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu8c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_BFu31ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_BFu31ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aS_BFu8c_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aS_BFu8c_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_BFu31ll, aS_BFu8c_BFu31ll)
//============================================================================



static void Test_aS_BFu8c_BFu32i()
{
  {
    init_simple_test("aS_BFu8c_BFu32i");
    static STRUCT_IF_C aS_BFu8c_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu8c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_BFu32i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_BFu32i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aS_BFu8c_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aS_BFu8c_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_BFu32i, aS_BFu8c_BFu32i)
//============================================================================



static void Test_aS_BFu8c_BFu32ll()
{
  {
    init_simple_test("aS_BFu8c_BFu32ll");
    static STRUCT_IF_C aS_BFu8c_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu8c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_BFu32ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_BFu32ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aS_BFu8c_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aS_BFu8c_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_BFu32ll, aS_BFu8c_BFu32ll)
//============================================================================



static void Test_aS_BFu8c_BFu33()
{
  {
    init_simple_test("aS_BFu8c_BFu33");
    static STRUCT_IF_C aS_BFu8c_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu8c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_BFu33)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_BFu33.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_BFu33");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, 1, "aS_BFu8c_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, hide_ull(1LL<<32), "aS_BFu8c_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_BFu33, aS_BFu8c_BFu33)
//============================================================================



static void Test_aS_BFu8c_BFu7c()
{
  {
    init_simple_test("aS_BFu8c_BFu7c");
    static STRUCT_IF_C aS_BFu8c_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_BFu7c.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_BFu7c");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aS_BFu8c_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aS_BFu8c_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_BFu7c, aS_BFu8c_BFu7c)
//============================================================================



static void Test_aS_BFu8c_BFu7i()
{
  {
    init_simple_test("aS_BFu8c_BFu7i");
    static STRUCT_IF_C aS_BFu8c_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_BFu7i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_BFu7i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aS_BFu8c_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aS_BFu8c_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_BFu7i, aS_BFu8c_BFu7i)
//============================================================================



static void Test_aS_BFu8c_BFu7ll()
{
  {
    init_simple_test("aS_BFu8c_BFu7ll");
    static STRUCT_IF_C aS_BFu8c_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_BFu7ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_BFu7ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aS_BFu8c_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aS_BFu8c_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_BFu7ll, aS_BFu8c_BFu7ll)
//============================================================================



static void Test_aS_BFu8c_BFu7s()
{
  {
    init_simple_test("aS_BFu8c_BFu7s");
    static STRUCT_IF_C aS_BFu8c_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_BFu7s.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_BFu7s");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aS_BFu8c_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aS_BFu8c_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_BFu7s, aS_BFu8c_BFu7s)
//============================================================================



static void Test_aS_BFu8c_BFu8c()
{
  {
    init_simple_test("aS_BFu8c_BFu8c");
    static STRUCT_IF_C aS_BFu8c_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_BFu8c.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_BFu8c");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aS_BFu8c_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_BFu8c, aS_BFu8c_BFu8c)
//============================================================================



static void Test_aS_BFu8c_BFu8i()
{
  {
    init_simple_test("aS_BFu8c_BFu8i");
    static STRUCT_IF_C aS_BFu8c_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_BFu8i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_BFu8i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aS_BFu8c_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_BFu8i, aS_BFu8c_BFu8i)
//============================================================================



static void Test_aS_BFu8c_BFu8ll()
{
  {
    init_simple_test("aS_BFu8c_BFu8ll");
    static STRUCT_IF_C aS_BFu8c_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_BFu8ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_BFu8ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aS_BFu8c_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_BFu8ll, aS_BFu8c_BFu8ll)
//============================================================================



static void Test_aS_BFu8c_BFu8s()
{
  {
    init_simple_test("aS_BFu8c_BFu8s");
    static STRUCT_IF_C aS_BFu8c_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_BFu8s.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_BFu8s");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aS_BFu8c_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_BFu8s, aS_BFu8c_BFu8s)
//============================================================================



static void Test_aS_BFu8c_BFu9i()
{
  {
    init_simple_test("aS_BFu8c_BFu9i");
    static STRUCT_IF_C aS_BFu8c_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_BFu9i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_BFu9i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aS_BFu8c_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aS_BFu8c_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_BFu9i, aS_BFu8c_BFu9i)
//============================================================================



static void Test_aS_BFu8c_BFu9ll()
{
  {
    init_simple_test("aS_BFu8c_BFu9ll");
    static STRUCT_IF_C aS_BFu8c_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_BFu9ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_BFu9ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aS_BFu8c_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aS_BFu8c_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_BFu9ll, aS_BFu8c_BFu9ll)
//============================================================================



static void Test_aS_BFu8c_BFu9s()
{
  {
    init_simple_test("aS_BFu8c_BFu9s");
    static STRUCT_IF_C aS_BFu8c_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_BFu9s.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_BFu9s");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aS_BFu8c_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aS_BFu8c_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_BFu9s, aS_BFu8c_BFu9s)
//============================================================================



static void Test_aS_BFu8c_C()
{
  {
    init_simple_test("aS_BFu8c_C");
    static STRUCT_IF_C aS_BFu8c_C lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8c_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_C)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_C.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_C");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_C");
    check_field_offset(lv, v3, 3, "aS_BFu8c_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_C, aS_BFu8c_C)
//============================================================================



static void Test_aS_BFu8c_D()
{
  {
    init_simple_test("aS_BFu8c_D");
    static STRUCT_IF_C aS_BFu8c_D lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu8c_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_D)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_D.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_D");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_D");
    check_field_offset(lv, v3, 3, "aS_BFu8c_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_D, aS_BFu8c_D)
//============================================================================



static void Test_aS_BFu8c_F()
{
  {
    init_simple_test("aS_BFu8c_F");
    static STRUCT_IF_C aS_BFu8c_F lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu8c_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_F)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_F.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_F");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_F");
    check_field_offset(lv, v3, 3, "aS_BFu8c_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_F, aS_BFu8c_F)
//============================================================================



static void Test_aS_BFu8c_I()
{
  {
    init_simple_test("aS_BFu8c_I");
    static STRUCT_IF_C aS_BFu8c_I lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu8c_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_I)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_I.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_I");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_I");
    check_field_offset(lv, v3, 3, "aS_BFu8c_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_I, aS_BFu8c_I)
//============================================================================



static void Test_aS_BFu8c_Ip()
{
  {
    init_simple_test("aS_BFu8c_Ip");
    static STRUCT_IF_C aS_BFu8c_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_BFu8c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_Ip)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_Ip.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_Ip");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_Ip");
    check_field_offset(lv, v3, 3, "aS_BFu8c_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_Ip, aS_BFu8c_Ip)
//============================================================================



static void Test_aS_BFu8c_L()
{
  {
    init_simple_test("aS_BFu8c_L");
    static STRUCT_IF_C aS_BFu8c_L lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu8c_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_L)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_L.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_L");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_L");
    check_field_offset(lv, v3, 3, "aS_BFu8c_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_L, aS_BFu8c_L)
//============================================================================



static void Test_aS_BFu8c_S()
{
  {
    init_simple_test("aS_BFu8c_S");
    static STRUCT_IF_C aS_BFu8c_S lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8c_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_S)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_S.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_S");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_S");
    check_field_offset(lv, v3, 3, "aS_BFu8c_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_S, aS_BFu8c_S)
//============================================================================



static void Test_aS_BFu8c_Uc()
{
  {
    init_simple_test("aS_BFu8c_Uc");
    static STRUCT_IF_C aS_BFu8c_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_Uc)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_Uc.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_Uc");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_Uc");
    check_field_offset(lv, v3, 3, "aS_BFu8c_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_Uc, aS_BFu8c_Uc)
//============================================================================



static void Test_aS_BFu8c_Ui()
{
  {
    init_simple_test("aS_BFu8c_Ui");
    static STRUCT_IF_C aS_BFu8c_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu8c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_Ui)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_Ui.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_Ui");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_Ui");
    check_field_offset(lv, v3, 3, "aS_BFu8c_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_Ui, aS_BFu8c_Ui)
//============================================================================



static void Test_aS_BFu8c_Ul()
{
  {
    init_simple_test("aS_BFu8c_Ul");
    static STRUCT_IF_C aS_BFu8c_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu8c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_Ul)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_Ul.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_Ul");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_Ul");
    check_field_offset(lv, v3, 3, "aS_BFu8c_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_Ul, aS_BFu8c_Ul)
//============================================================================



static void Test_aS_BFu8c_Us()
{
  {
    init_simple_test("aS_BFu8c_Us");
    static STRUCT_IF_C aS_BFu8c_Us lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_Us)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_Us.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_Us");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_Us");
    check_field_offset(lv, v3, 3, "aS_BFu8c_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_Us, aS_BFu8c_Us)
//============================================================================



static void Test_aS_BFu8c_Vp()
{
  {
    init_simple_test("aS_BFu8c_Vp");
    static STRUCT_IF_C aS_BFu8c_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_BFu8c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8c_Vp)");
    check_field_offset(lv, v1, 0, "aS_BFu8c_Vp.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8c_Vp");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8c_Vp");
    check_field_offset(lv, v3, 3, "aS_BFu8c_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8c_Vp, aS_BFu8c_Vp)
//============================================================================



static void Test_aS_BFu8i()
{
  {
    init_simple_test("aS_BFu8i");
    static STRUCT_IF_C aS_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_BFu8i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i, aS_BFu8i)
//============================================================================



static void Test_aS_BFu8i_BFu15i()
{
  {
    init_simple_test("aS_BFu8i_BFu15i");
    static STRUCT_IF_C aS_BFu8i_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_BFu15i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_BFu15i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aS_BFu8i_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aS_BFu8i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_BFu15i, aS_BFu8i_BFu15i)
//============================================================================



static void Test_aS_BFu8i_BFu15ll()
{
  {
    init_simple_test("aS_BFu8i_BFu15ll");
    static STRUCT_IF_C aS_BFu8i_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_BFu15ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aS_BFu8i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aS_BFu8i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_BFu15ll, aS_BFu8i_BFu15ll)
//============================================================================



static void Test_aS_BFu8i_BFu15s()
{
  {
    init_simple_test("aS_BFu8i_BFu15s");
    static STRUCT_IF_C aS_BFu8i_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_BFu15s.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_BFu15s");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aS_BFu8i_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aS_BFu8i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_BFu15s, aS_BFu8i_BFu15s)
//============================================================================



static void Test_aS_BFu8i_BFu16i()
{
  {
    init_simple_test("aS_BFu8i_BFu16i");
    static STRUCT_IF_C aS_BFu8i_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_BFu16i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aS_BFu8i_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aS_BFu8i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_BFu16i, aS_BFu8i_BFu16i)
//============================================================================



static void Test_aS_BFu8i_BFu16ll()
{
  {
    init_simple_test("aS_BFu8i_BFu16ll");
    static STRUCT_IF_C aS_BFu8i_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aS_BFu8i_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aS_BFu8i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_BFu16ll, aS_BFu8i_BFu16ll)
//============================================================================



static void Test_aS_BFu8i_BFu16s()
{
  {
    init_simple_test("aS_BFu8i_BFu16s");
    static STRUCT_IF_C aS_BFu8i_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_BFu16s.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aS_BFu8i_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aS_BFu8i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_BFu16s, aS_BFu8i_BFu16s)
//============================================================================



static void Test_aS_BFu8i_BFu17i()
{
  {
    init_simple_test("aS_BFu8i_BFu17i");
    static STRUCT_IF_C aS_BFu8i_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu8i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_BFu17i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_BFu17i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aS_BFu8i_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aS_BFu8i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_BFu17i, aS_BFu8i_BFu17i)
//============================================================================



static void Test_aS_BFu8i_BFu17ll()
{
  {
    init_simple_test("aS_BFu8i_BFu17ll");
    static STRUCT_IF_C aS_BFu8i_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu8i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aS_BFu8i_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aS_BFu8i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_BFu17ll, aS_BFu8i_BFu17ll)
//============================================================================



static void Test_aS_BFu8i_BFu1c()
{
  {
    init_simple_test("aS_BFu8i_BFu1c");
    static STRUCT_IF_C aS_BFu8i_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_BFu1c.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_BFu1c");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu1c");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aS_BFu8i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_BFu1c, aS_BFu8i_BFu1c)
//============================================================================



static void Test_aS_BFu8i_BFu1i()
{
  {
    init_simple_test("aS_BFu8i_BFu1i");
    static STRUCT_IF_C aS_BFu8i_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_BFu1i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_BFu1i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu1i");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aS_BFu8i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_BFu1i, aS_BFu8i_BFu1i)
//============================================================================



static void Test_aS_BFu8i_BFu1ll()
{
  {
    init_simple_test("aS_BFu8i_BFu1ll");
    static STRUCT_IF_C aS_BFu8i_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_BFu1ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu1ll");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aS_BFu8i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_BFu1ll, aS_BFu8i_BFu1ll)
//============================================================================



static void Test_aS_BFu8i_BFu1s()
{
  {
    init_simple_test("aS_BFu8i_BFu1s");
    static STRUCT_IF_C aS_BFu8i_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_BFu1s.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_BFu1s");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu1s");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aS_BFu8i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_BFu1s, aS_BFu8i_BFu1s)
//============================================================================



static void Test_aS_BFu8i_BFu31i()
{
  {
    init_simple_test("aS_BFu8i_BFu31i");
    static STRUCT_IF_C aS_BFu8i_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu8i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_BFu31i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_BFu31i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aS_BFu8i_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aS_BFu8i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_BFu31i, aS_BFu8i_BFu31i)
//============================================================================



static void Test_aS_BFu8i_BFu31ll()
{
  {
    init_simple_test("aS_BFu8i_BFu31ll");
    static STRUCT_IF_C aS_BFu8i_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu8i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_BFu31ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aS_BFu8i_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aS_BFu8i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_BFu31ll, aS_BFu8i_BFu31ll)
//============================================================================



static void Test_aS_BFu8i_BFu32i()
{
  {
    init_simple_test("aS_BFu8i_BFu32i");
    static STRUCT_IF_C aS_BFu8i_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu8i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_BFu32i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_BFu32i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aS_BFu8i_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aS_BFu8i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_BFu32i, aS_BFu8i_BFu32i)
//============================================================================



static void Test_aS_BFu8i_BFu32ll()
{
  {
    init_simple_test("aS_BFu8i_BFu32ll");
    static STRUCT_IF_C aS_BFu8i_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu8i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_BFu32ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aS_BFu8i_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aS_BFu8i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_BFu32ll, aS_BFu8i_BFu32ll)
//============================================================================



static void Test_aS_BFu8i_BFu33()
{
  {
    init_simple_test("aS_BFu8i_BFu33");
    static STRUCT_IF_C aS_BFu8i_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu8i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_BFu33)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_BFu33.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_BFu33");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, 1, "aS_BFu8i_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, hide_ull(1LL<<32), "aS_BFu8i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_BFu33, aS_BFu8i_BFu33)
//============================================================================



static void Test_aS_BFu8i_BFu7c()
{
  {
    init_simple_test("aS_BFu8i_BFu7c");
    static STRUCT_IF_C aS_BFu8i_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_BFu7c.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_BFu7c");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aS_BFu8i_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aS_BFu8i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_BFu7c, aS_BFu8i_BFu7c)
//============================================================================



static void Test_aS_BFu8i_BFu7i()
{
  {
    init_simple_test("aS_BFu8i_BFu7i");
    static STRUCT_IF_C aS_BFu8i_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_BFu7i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_BFu7i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aS_BFu8i_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aS_BFu8i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_BFu7i, aS_BFu8i_BFu7i)
//============================================================================



static void Test_aS_BFu8i_BFu7ll()
{
  {
    init_simple_test("aS_BFu8i_BFu7ll");
    static STRUCT_IF_C aS_BFu8i_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_BFu7ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aS_BFu8i_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aS_BFu8i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_BFu7ll, aS_BFu8i_BFu7ll)
//============================================================================



static void Test_aS_BFu8i_BFu7s()
{
  {
    init_simple_test("aS_BFu8i_BFu7s");
    static STRUCT_IF_C aS_BFu8i_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_BFu7s.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_BFu7s");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aS_BFu8i_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aS_BFu8i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_BFu7s, aS_BFu8i_BFu7s)
//============================================================================



static void Test_aS_BFu8i_BFu8c()
{
  {
    init_simple_test("aS_BFu8i_BFu8c");
    static STRUCT_IF_C aS_BFu8i_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_BFu8c.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_BFu8c");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aS_BFu8i_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_BFu8c, aS_BFu8i_BFu8c)
//============================================================================



static void Test_aS_BFu8i_BFu8i()
{
  {
    init_simple_test("aS_BFu8i_BFu8i");
    static STRUCT_IF_C aS_BFu8i_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_BFu8i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_BFu8i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aS_BFu8i_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_BFu8i, aS_BFu8i_BFu8i)
//============================================================================



static void Test_aS_BFu8i_BFu8ll()
{
  {
    init_simple_test("aS_BFu8i_BFu8ll");
    static STRUCT_IF_C aS_BFu8i_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_BFu8ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aS_BFu8i_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_BFu8ll, aS_BFu8i_BFu8ll)
//============================================================================



static void Test_aS_BFu8i_BFu8s()
{
  {
    init_simple_test("aS_BFu8i_BFu8s");
    static STRUCT_IF_C aS_BFu8i_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_BFu8s.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_BFu8s");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aS_BFu8i_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_BFu8s, aS_BFu8i_BFu8s)
//============================================================================



static void Test_aS_BFu8i_BFu9i()
{
  {
    init_simple_test("aS_BFu8i_BFu9i");
    static STRUCT_IF_C aS_BFu8i_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_BFu9i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_BFu9i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aS_BFu8i_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aS_BFu8i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_BFu9i, aS_BFu8i_BFu9i)
//============================================================================



static void Test_aS_BFu8i_BFu9ll()
{
  {
    init_simple_test("aS_BFu8i_BFu9ll");
    static STRUCT_IF_C aS_BFu8i_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_BFu9ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aS_BFu8i_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aS_BFu8i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_BFu9ll, aS_BFu8i_BFu9ll)
//============================================================================



static void Test_aS_BFu8i_BFu9s()
{
  {
    init_simple_test("aS_BFu8i_BFu9s");
    static STRUCT_IF_C aS_BFu8i_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_BFu9s.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_BFu9s");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aS_BFu8i_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aS_BFu8i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_BFu9s, aS_BFu8i_BFu9s)
//============================================================================



static void Test_aS_BFu8i_C()
{
  {
    init_simple_test("aS_BFu8i_C");
    static STRUCT_IF_C aS_BFu8i_C lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_C)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_C.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_C");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_C");
    check_field_offset(lv, v3, 3, "aS_BFu8i_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_C, aS_BFu8i_C)
//============================================================================



static void Test_aS_BFu8i_D()
{
  {
    init_simple_test("aS_BFu8i_D");
    static STRUCT_IF_C aS_BFu8i_D lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu8i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_D)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_D.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_D");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_D");
    check_field_offset(lv, v3, 3, "aS_BFu8i_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_D, aS_BFu8i_D)
//============================================================================



static void Test_aS_BFu8i_F()
{
  {
    init_simple_test("aS_BFu8i_F");
    static STRUCT_IF_C aS_BFu8i_F lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu8i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_F)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_F.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_F");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_F");
    check_field_offset(lv, v3, 3, "aS_BFu8i_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_F, aS_BFu8i_F)
//============================================================================



static void Test_aS_BFu8i_I()
{
  {
    init_simple_test("aS_BFu8i_I");
    static STRUCT_IF_C aS_BFu8i_I lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu8i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_I)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_I.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_I");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_I");
    check_field_offset(lv, v3, 3, "aS_BFu8i_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_I, aS_BFu8i_I)
//============================================================================



static void Test_aS_BFu8i_Ip()
{
  {
    init_simple_test("aS_BFu8i_Ip");
    static STRUCT_IF_C aS_BFu8i_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_BFu8i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_Ip)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_Ip.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_Ip");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_Ip");
    check_field_offset(lv, v3, 3, "aS_BFu8i_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_Ip, aS_BFu8i_Ip)
//============================================================================



static void Test_aS_BFu8i_L()
{
  {
    init_simple_test("aS_BFu8i_L");
    static STRUCT_IF_C aS_BFu8i_L lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu8i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_L)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_L.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_L");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_L");
    check_field_offset(lv, v3, 3, "aS_BFu8i_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_L, aS_BFu8i_L)
//============================================================================



static void Test_aS_BFu8i_S()
{
  {
    init_simple_test("aS_BFu8i_S");
    static STRUCT_IF_C aS_BFu8i_S lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_S)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_S.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_S");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_S");
    check_field_offset(lv, v3, 3, "aS_BFu8i_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_S, aS_BFu8i_S)
//============================================================================



static void Test_aS_BFu8i_Uc()
{
  {
    init_simple_test("aS_BFu8i_Uc");
    static STRUCT_IF_C aS_BFu8i_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_Uc)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_Uc.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_Uc");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_Uc");
    check_field_offset(lv, v3, 3, "aS_BFu8i_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_Uc, aS_BFu8i_Uc)
//============================================================================



static void Test_aS_BFu8i_Ui()
{
  {
    init_simple_test("aS_BFu8i_Ui");
    static STRUCT_IF_C aS_BFu8i_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu8i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_Ui)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_Ui.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_Ui");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_Ui");
    check_field_offset(lv, v3, 3, "aS_BFu8i_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_Ui, aS_BFu8i_Ui)
//============================================================================



static void Test_aS_BFu8i_Ul()
{
  {
    init_simple_test("aS_BFu8i_Ul");
    static STRUCT_IF_C aS_BFu8i_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu8i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_Ul)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_Ul.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_Ul");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_Ul");
    check_field_offset(lv, v3, 3, "aS_BFu8i_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_Ul, aS_BFu8i_Ul)
//============================================================================



static void Test_aS_BFu8i_Us()
{
  {
    init_simple_test("aS_BFu8i_Us");
    static STRUCT_IF_C aS_BFu8i_Us lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_Us)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_Us.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_Us");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_Us");
    check_field_offset(lv, v3, 3, "aS_BFu8i_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_Us, aS_BFu8i_Us)
//============================================================================



static void Test_aS_BFu8i_Vp()
{
  {
    init_simple_test("aS_BFu8i_Vp");
    static STRUCT_IF_C aS_BFu8i_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_BFu8i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8i_Vp)");
    check_field_offset(lv, v1, 0, "aS_BFu8i_Vp.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8i_Vp");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8i_Vp");
    check_field_offset(lv, v3, 3, "aS_BFu8i_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8i_Vp, aS_BFu8i_Vp)
//============================================================================



static void Test_aS_BFu8ll()
{
  {
    init_simple_test("aS_BFu8ll");
    static STRUCT_IF_C aS_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll, aS_BFu8ll)
//============================================================================



static void Test_aS_BFu8ll_BFu15i()
{
  {
    init_simple_test("aS_BFu8ll_BFu15i");
    static STRUCT_IF_C aS_BFu8ll_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_BFu15i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aS_BFu8ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aS_BFu8ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_BFu15i, aS_BFu8ll_BFu15i)
//============================================================================



static void Test_aS_BFu8ll_BFu15ll()
{
  {
    init_simple_test("aS_BFu8ll_BFu15ll");
    static STRUCT_IF_C aS_BFu8ll_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_BFu15ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aS_BFu8ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aS_BFu8ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_BFu15ll, aS_BFu8ll_BFu15ll)
//============================================================================



static void Test_aS_BFu8ll_BFu15s()
{
  {
    init_simple_test("aS_BFu8ll_BFu15s");
    static STRUCT_IF_C aS_BFu8ll_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_BFu15s");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aS_BFu8ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aS_BFu8ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_BFu15s, aS_BFu8ll_BFu15s)
//============================================================================



static void Test_aS_BFu8ll_BFu16i()
{
  {
    init_simple_test("aS_BFu8ll_BFu16i");
    static STRUCT_IF_C aS_BFu8ll_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aS_BFu8ll_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aS_BFu8ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_BFu16i, aS_BFu8ll_BFu16i)
//============================================================================



static void Test_aS_BFu8ll_BFu16ll()
{
  {
    init_simple_test("aS_BFu8ll_BFu16ll");
    static STRUCT_IF_C aS_BFu8ll_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aS_BFu8ll_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aS_BFu8ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_BFu16ll, aS_BFu8ll_BFu16ll)
//============================================================================



static void Test_aS_BFu8ll_BFu16s()
{
  {
    init_simple_test("aS_BFu8ll_BFu16s");
    static STRUCT_IF_C aS_BFu8ll_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aS_BFu8ll_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aS_BFu8ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_BFu16s, aS_BFu8ll_BFu16s)
//============================================================================



static void Test_aS_BFu8ll_BFu17i()
{
  {
    init_simple_test("aS_BFu8ll_BFu17i");
    static STRUCT_IF_C aS_BFu8ll_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu8ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aS_BFu8ll_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aS_BFu8ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_BFu17i, aS_BFu8ll_BFu17i)
//============================================================================



static void Test_aS_BFu8ll_BFu17ll()
{
  {
    init_simple_test("aS_BFu8ll_BFu17ll");
    static STRUCT_IF_C aS_BFu8ll_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu8ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aS_BFu8ll_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aS_BFu8ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_BFu17ll, aS_BFu8ll_BFu17ll)
//============================================================================



static void Test_aS_BFu8ll_BFu1c()
{
  {
    init_simple_test("aS_BFu8ll_BFu1c");
    static STRUCT_IF_C aS_BFu8ll_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_BFu1c");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu1c");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aS_BFu8ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_BFu1c, aS_BFu8ll_BFu1c)
//============================================================================



static void Test_aS_BFu8ll_BFu1i()
{
  {
    init_simple_test("aS_BFu8ll_BFu1i");
    static STRUCT_IF_C aS_BFu8ll_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_BFu1i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu1i");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aS_BFu8ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_BFu1i, aS_BFu8ll_BFu1i)
//============================================================================



static void Test_aS_BFu8ll_BFu1ll()
{
  {
    init_simple_test("aS_BFu8ll_BFu1ll");
    static STRUCT_IF_C aS_BFu8ll_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_BFu1ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu1ll");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aS_BFu8ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_BFu1ll, aS_BFu8ll_BFu1ll)
//============================================================================



static void Test_aS_BFu8ll_BFu1s()
{
  {
    init_simple_test("aS_BFu8ll_BFu1s");
    static STRUCT_IF_C aS_BFu8ll_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_BFu1s");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu1s");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aS_BFu8ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_BFu1s, aS_BFu8ll_BFu1s)
//============================================================================



static void Test_aS_BFu8ll_BFu31i()
{
  {
    init_simple_test("aS_BFu8ll_BFu31i");
    static STRUCT_IF_C aS_BFu8ll_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu8ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_BFu31i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aS_BFu8ll_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aS_BFu8ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_BFu31i, aS_BFu8ll_BFu31i)
//============================================================================



static void Test_aS_BFu8ll_BFu31ll()
{
  {
    init_simple_test("aS_BFu8ll_BFu31ll");
    static STRUCT_IF_C aS_BFu8ll_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu8ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_BFu31ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aS_BFu8ll_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aS_BFu8ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_BFu31ll, aS_BFu8ll_BFu31ll)
//============================================================================



static void Test_aS_BFu8ll_BFu32i()
{
  {
    init_simple_test("aS_BFu8ll_BFu32i");
    static STRUCT_IF_C aS_BFu8ll_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu8ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_BFu32i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aS_BFu8ll_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aS_BFu8ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_BFu32i, aS_BFu8ll_BFu32i)
//============================================================================



static void Test_aS_BFu8ll_BFu32ll()
{
  {
    init_simple_test("aS_BFu8ll_BFu32ll");
    static STRUCT_IF_C aS_BFu8ll_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu8ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_BFu32ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aS_BFu8ll_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aS_BFu8ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_BFu32ll, aS_BFu8ll_BFu32ll)
//============================================================================



static void Test_aS_BFu8ll_BFu33()
{
  {
    init_simple_test("aS_BFu8ll_BFu33");
    static STRUCT_IF_C aS_BFu8ll_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu8ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_BFu33)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_BFu33.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_BFu33");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, 1, "aS_BFu8ll_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, hide_ull(1LL<<32), "aS_BFu8ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_BFu33, aS_BFu8ll_BFu33)
//============================================================================



static void Test_aS_BFu8ll_BFu7c()
{
  {
    init_simple_test("aS_BFu8ll_BFu7c");
    static STRUCT_IF_C aS_BFu8ll_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_BFu7c");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aS_BFu8ll_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aS_BFu8ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_BFu7c, aS_BFu8ll_BFu7c)
//============================================================================



static void Test_aS_BFu8ll_BFu7i()
{
  {
    init_simple_test("aS_BFu8ll_BFu7i");
    static STRUCT_IF_C aS_BFu8ll_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_BFu7i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aS_BFu8ll_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aS_BFu8ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_BFu7i, aS_BFu8ll_BFu7i)
//============================================================================



static void Test_aS_BFu8ll_BFu7ll()
{
  {
    init_simple_test("aS_BFu8ll_BFu7ll");
    static STRUCT_IF_C aS_BFu8ll_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_BFu7ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aS_BFu8ll_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aS_BFu8ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_BFu7ll, aS_BFu8ll_BFu7ll)
//============================================================================



static void Test_aS_BFu8ll_BFu7s()
{
  {
    init_simple_test("aS_BFu8ll_BFu7s");
    static STRUCT_IF_C aS_BFu8ll_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_BFu7s");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aS_BFu8ll_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aS_BFu8ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_BFu7s, aS_BFu8ll_BFu7s)
//============================================================================



static void Test_aS_BFu8ll_BFu8c()
{
  {
    init_simple_test("aS_BFu8ll_BFu8c");
    static STRUCT_IF_C aS_BFu8ll_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_BFu8c");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aS_BFu8ll_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_BFu8c, aS_BFu8ll_BFu8c)
//============================================================================



static void Test_aS_BFu8ll_BFu8i()
{
  {
    init_simple_test("aS_BFu8ll_BFu8i");
    static STRUCT_IF_C aS_BFu8ll_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_BFu8i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aS_BFu8ll_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_BFu8i, aS_BFu8ll_BFu8i)
//============================================================================



static void Test_aS_BFu8ll_BFu8ll()
{
  {
    init_simple_test("aS_BFu8ll_BFu8ll");
    static STRUCT_IF_C aS_BFu8ll_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_BFu8ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aS_BFu8ll_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_BFu8ll, aS_BFu8ll_BFu8ll)
//============================================================================



static void Test_aS_BFu8ll_BFu8s()
{
  {
    init_simple_test("aS_BFu8ll_BFu8s");
    static STRUCT_IF_C aS_BFu8ll_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_BFu8s");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aS_BFu8ll_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_BFu8s, aS_BFu8ll_BFu8s)
//============================================================================



static void Test_aS_BFu8ll_BFu9i()
{
  {
    init_simple_test("aS_BFu8ll_BFu9i");
    static STRUCT_IF_C aS_BFu8ll_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_BFu9i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aS_BFu8ll_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aS_BFu8ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_BFu9i, aS_BFu8ll_BFu9i)
//============================================================================



static void Test_aS_BFu8ll_BFu9ll()
{
  {
    init_simple_test("aS_BFu8ll_BFu9ll");
    static STRUCT_IF_C aS_BFu8ll_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_BFu9ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aS_BFu8ll_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aS_BFu8ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_BFu9ll, aS_BFu8ll_BFu9ll)
//============================================================================



static void Test_aS_BFu8ll_BFu9s()
{
  {
    init_simple_test("aS_BFu8ll_BFu9s");
    static STRUCT_IF_C aS_BFu8ll_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_BFu9s");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aS_BFu8ll_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aS_BFu8ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_BFu9s, aS_BFu8ll_BFu9s)
//============================================================================



static void Test_aS_BFu8ll_C()
{
  {
    init_simple_test("aS_BFu8ll_C");
    static STRUCT_IF_C aS_BFu8ll_C lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_C)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_C.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_C");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_C");
    check_field_offset(lv, v3, 3, "aS_BFu8ll_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_C, aS_BFu8ll_C)
//============================================================================



static void Test_aS_BFu8ll_D()
{
  {
    init_simple_test("aS_BFu8ll_D");
    static STRUCT_IF_C aS_BFu8ll_D lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu8ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_D)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_D.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_D");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_D");
    check_field_offset(lv, v3, 3, "aS_BFu8ll_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_D, aS_BFu8ll_D)
//============================================================================



static void Test_aS_BFu8ll_F()
{
  {
    init_simple_test("aS_BFu8ll_F");
    static STRUCT_IF_C aS_BFu8ll_F lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu8ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_F)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_F.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_F");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_F");
    check_field_offset(lv, v3, 3, "aS_BFu8ll_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_F, aS_BFu8ll_F)
//============================================================================



static void Test_aS_BFu8ll_I()
{
  {
    init_simple_test("aS_BFu8ll_I");
    static STRUCT_IF_C aS_BFu8ll_I lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu8ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_I)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_I.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_I");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_I");
    check_field_offset(lv, v3, 3, "aS_BFu8ll_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_I, aS_BFu8ll_I)
//============================================================================



static void Test_aS_BFu8ll_Ip()
{
  {
    init_simple_test("aS_BFu8ll_Ip");
    static STRUCT_IF_C aS_BFu8ll_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_BFu8ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_Ip)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_Ip.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_Ip");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_Ip");
    check_field_offset(lv, v3, 3, "aS_BFu8ll_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_Ip, aS_BFu8ll_Ip)
//============================================================================



static void Test_aS_BFu8ll_L()
{
  {
    init_simple_test("aS_BFu8ll_L");
    static STRUCT_IF_C aS_BFu8ll_L lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu8ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_L)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_L.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_L");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_L");
    check_field_offset(lv, v3, 3, "aS_BFu8ll_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_L, aS_BFu8ll_L)
//============================================================================



static void Test_aS_BFu8ll_S()
{
  {
    init_simple_test("aS_BFu8ll_S");
    static STRUCT_IF_C aS_BFu8ll_S lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_S)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_S.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_S");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_S");
    check_field_offset(lv, v3, 3, "aS_BFu8ll_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_S, aS_BFu8ll_S)
//============================================================================



static void Test_aS_BFu8ll_Uc()
{
  {
    init_simple_test("aS_BFu8ll_Uc");
    static STRUCT_IF_C aS_BFu8ll_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_Uc)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_Uc.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_Uc");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_Uc");
    check_field_offset(lv, v3, 3, "aS_BFu8ll_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_Uc, aS_BFu8ll_Uc)
//============================================================================



static void Test_aS_BFu8ll_Ui()
{
  {
    init_simple_test("aS_BFu8ll_Ui");
    static STRUCT_IF_C aS_BFu8ll_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu8ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_Ui)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_Ui.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_Ui");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_Ui");
    check_field_offset(lv, v3, 3, "aS_BFu8ll_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_Ui, aS_BFu8ll_Ui)
//============================================================================



static void Test_aS_BFu8ll_Ul()
{
  {
    init_simple_test("aS_BFu8ll_Ul");
    static STRUCT_IF_C aS_BFu8ll_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu8ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_Ul)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_Ul.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_Ul");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_Ul");
    check_field_offset(lv, v3, 3, "aS_BFu8ll_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_Ul, aS_BFu8ll_Ul)
//============================================================================



static void Test_aS_BFu8ll_Us()
{
  {
    init_simple_test("aS_BFu8ll_Us");
    static STRUCT_IF_C aS_BFu8ll_Us lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_Us)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_Us.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_Us");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_Us");
    check_field_offset(lv, v3, 3, "aS_BFu8ll_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_Us, aS_BFu8ll_Us)
//============================================================================



static void Test_aS_BFu8ll_Vp()
{
  {
    init_simple_test("aS_BFu8ll_Vp");
    static STRUCT_IF_C aS_BFu8ll_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_BFu8ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8ll_Vp)");
    check_field_offset(lv, v1, 0, "aS_BFu8ll_Vp.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8ll_Vp");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8ll_Vp");
    check_field_offset(lv, v3, 3, "aS_BFu8ll_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8ll_Vp, aS_BFu8ll_Vp)
//============================================================================



static void Test_aS_BFu8s()
{
  {
    init_simple_test("aS_BFu8s");
    static STRUCT_IF_C aS_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aS_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_BFu8s.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s, aS_BFu8s)
//============================================================================



static void Test_aS_BFu8s_BFu15i()
{
  {
    init_simple_test("aS_BFu8s_BFu15i");
    static STRUCT_IF_C aS_BFu8s_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_BFu15i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_BFu15i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aS_BFu8s_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aS_BFu8s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_BFu15i, aS_BFu8s_BFu15i)
//============================================================================



static void Test_aS_BFu8s_BFu15ll()
{
  {
    init_simple_test("aS_BFu8s_BFu15ll");
    static STRUCT_IF_C aS_BFu8s_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_BFu15ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_BFu15ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aS_BFu8s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aS_BFu8s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_BFu15ll, aS_BFu8s_BFu15ll)
//============================================================================



static void Test_aS_BFu8s_BFu15s()
{
  {
    init_simple_test("aS_BFu8s_BFu15s");
    static STRUCT_IF_C aS_BFu8s_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_BFu15s.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_BFu15s");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aS_BFu8s_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aS_BFu8s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_BFu15s, aS_BFu8s_BFu15s)
//============================================================================



static void Test_aS_BFu8s_BFu16i()
{
  {
    init_simple_test("aS_BFu8s_BFu16i");
    static STRUCT_IF_C aS_BFu8s_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_BFu16i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aS_BFu8s_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aS_BFu8s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_BFu16i, aS_BFu8s_BFu16i)
//============================================================================



static void Test_aS_BFu8s_BFu16ll()
{
  {
    init_simple_test("aS_BFu8s_BFu16ll");
    static STRUCT_IF_C aS_BFu8s_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_BFu16ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aS_BFu8s_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aS_BFu8s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_BFu16ll, aS_BFu8s_BFu16ll)
//============================================================================



static void Test_aS_BFu8s_BFu16s()
{
  {
    init_simple_test("aS_BFu8s_BFu16s");
    static STRUCT_IF_C aS_BFu8s_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_BFu16s.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aS_BFu8s_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aS_BFu8s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_BFu16s, aS_BFu8s_BFu16s)
//============================================================================



static void Test_aS_BFu8s_BFu17i()
{
  {
    init_simple_test("aS_BFu8s_BFu17i");
    static STRUCT_IF_C aS_BFu8s_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu8s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_BFu17i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_BFu17i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aS_BFu8s_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aS_BFu8s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_BFu17i, aS_BFu8s_BFu17i)
//============================================================================



static void Test_aS_BFu8s_BFu17ll()
{
  {
    init_simple_test("aS_BFu8s_BFu17ll");
    static STRUCT_IF_C aS_BFu8s_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu8s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_BFu17ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_BFu17ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aS_BFu8s_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aS_BFu8s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_BFu17ll, aS_BFu8s_BFu17ll)
//============================================================================



static void Test_aS_BFu8s_BFu1c()
{
  {
    init_simple_test("aS_BFu8s_BFu1c");
    static STRUCT_IF_C aS_BFu8s_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_BFu1c.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_BFu1c");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu1c");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aS_BFu8s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_BFu1c, aS_BFu8s_BFu1c)
//============================================================================



static void Test_aS_BFu8s_BFu1i()
{
  {
    init_simple_test("aS_BFu8s_BFu1i");
    static STRUCT_IF_C aS_BFu8s_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_BFu1i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_BFu1i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu1i");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aS_BFu8s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_BFu1i, aS_BFu8s_BFu1i)
//============================================================================



static void Test_aS_BFu8s_BFu1ll()
{
  {
    init_simple_test("aS_BFu8s_BFu1ll");
    static STRUCT_IF_C aS_BFu8s_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_BFu1ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_BFu1ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu1ll");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aS_BFu8s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_BFu1ll, aS_BFu8s_BFu1ll)
//============================================================================



static void Test_aS_BFu8s_BFu1s()
{
  {
    init_simple_test("aS_BFu8s_BFu1s");
    static STRUCT_IF_C aS_BFu8s_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_BFu1s.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_BFu1s");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu1s");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aS_BFu8s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_BFu1s, aS_BFu8s_BFu1s)
//============================================================================



static void Test_aS_BFu8s_BFu31i()
{
  {
    init_simple_test("aS_BFu8s_BFu31i");
    static STRUCT_IF_C aS_BFu8s_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu8s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_BFu31i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_BFu31i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aS_BFu8s_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aS_BFu8s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_BFu31i, aS_BFu8s_BFu31i)
//============================================================================



static void Test_aS_BFu8s_BFu31ll()
{
  {
    init_simple_test("aS_BFu8s_BFu31ll");
    static STRUCT_IF_C aS_BFu8s_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu8s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_BFu31ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_BFu31ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aS_BFu8s_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aS_BFu8s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_BFu31ll, aS_BFu8s_BFu31ll)
//============================================================================



static void Test_aS_BFu8s_BFu32i()
{
  {
    init_simple_test("aS_BFu8s_BFu32i");
    static STRUCT_IF_C aS_BFu8s_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu8s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_BFu32i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_BFu32i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aS_BFu8s_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aS_BFu8s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_BFu32i, aS_BFu8s_BFu32i)
//============================================================================



static void Test_aS_BFu8s_BFu32ll()
{
  {
    init_simple_test("aS_BFu8s_BFu32ll");
    static STRUCT_IF_C aS_BFu8s_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu8s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_BFu32ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_BFu32ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aS_BFu8s_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aS_BFu8s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_BFu32ll, aS_BFu8s_BFu32ll)
//============================================================================



static void Test_aS_BFu8s_BFu33()
{
  {
    init_simple_test("aS_BFu8s_BFu33");
    static STRUCT_IF_C aS_BFu8s_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu8s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_BFu33)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_BFu33.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_BFu33");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, 1, "aS_BFu8s_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, hide_ull(1LL<<32), "aS_BFu8s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_BFu33, aS_BFu8s_BFu33)
//============================================================================



static void Test_aS_BFu8s_BFu7c()
{
  {
    init_simple_test("aS_BFu8s_BFu7c");
    static STRUCT_IF_C aS_BFu8s_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_BFu7c.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_BFu7c");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aS_BFu8s_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aS_BFu8s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_BFu7c, aS_BFu8s_BFu7c)
//============================================================================



static void Test_aS_BFu8s_BFu7i()
{
  {
    init_simple_test("aS_BFu8s_BFu7i");
    static STRUCT_IF_C aS_BFu8s_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_BFu7i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_BFu7i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aS_BFu8s_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aS_BFu8s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_BFu7i, aS_BFu8s_BFu7i)
//============================================================================



static void Test_aS_BFu8s_BFu7ll()
{
  {
    init_simple_test("aS_BFu8s_BFu7ll");
    static STRUCT_IF_C aS_BFu8s_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_BFu7ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_BFu7ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aS_BFu8s_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aS_BFu8s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_BFu7ll, aS_BFu8s_BFu7ll)
//============================================================================



static void Test_aS_BFu8s_BFu7s()
{
  {
    init_simple_test("aS_BFu8s_BFu7s");
    static STRUCT_IF_C aS_BFu8s_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_BFu7s.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_BFu7s");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aS_BFu8s_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aS_BFu8s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_BFu7s, aS_BFu8s_BFu7s)
//============================================================================



static void Test_aS_BFu8s_BFu8c()
{
  {
    init_simple_test("aS_BFu8s_BFu8c");
    static STRUCT_IF_C aS_BFu8s_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_BFu8c.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_BFu8c");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aS_BFu8s_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_BFu8c, aS_BFu8s_BFu8c)
//============================================================================



static void Test_aS_BFu8s_BFu8i()
{
  {
    init_simple_test("aS_BFu8s_BFu8i");
    static STRUCT_IF_C aS_BFu8s_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_BFu8i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_BFu8i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aS_BFu8s_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_BFu8i, aS_BFu8s_BFu8i)
//============================================================================



static void Test_aS_BFu8s_BFu8ll()
{
  {
    init_simple_test("aS_BFu8s_BFu8ll");
    static STRUCT_IF_C aS_BFu8s_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_BFu8ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_BFu8ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aS_BFu8s_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_BFu8ll, aS_BFu8s_BFu8ll)
//============================================================================



static void Test_aS_BFu8s_BFu8s()
{
  {
    init_simple_test("aS_BFu8s_BFu8s");
    static STRUCT_IF_C aS_BFu8s_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_BFu8s.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_BFu8s");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aS_BFu8s_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_BFu8s, aS_BFu8s_BFu8s)
//============================================================================



static void Test_aS_BFu8s_BFu9i()
{
  {
    init_simple_test("aS_BFu8s_BFu9i");
    static STRUCT_IF_C aS_BFu8s_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_BFu9i.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_BFu9i");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aS_BFu8s_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aS_BFu8s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_BFu9i, aS_BFu8s_BFu9i)
//============================================================================



static void Test_aS_BFu8s_BFu9ll()
{
  {
    init_simple_test("aS_BFu8s_BFu9ll");
    static STRUCT_IF_C aS_BFu8s_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_BFu9ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_BFu9ll");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aS_BFu8s_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aS_BFu8s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_BFu9ll, aS_BFu8s_BFu9ll)
//============================================================================



static void Test_aS_BFu8s_BFu9s()
{
  {
    init_simple_test("aS_BFu8s_BFu9s");
    static STRUCT_IF_C aS_BFu8s_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_BFu9s.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_BFu9s");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aS_BFu8s_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aS_BFu8s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_BFu9s, aS_BFu8s_BFu9s)
//============================================================================



static void Test_aS_BFu8s_C()
{
  {
    init_simple_test("aS_BFu8s_C");
    static STRUCT_IF_C aS_BFu8s_C lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8s_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_C)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_C.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_C");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_C");
    check_field_offset(lv, v3, 3, "aS_BFu8s_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_C, aS_BFu8s_C)
//============================================================================



static void Test_aS_BFu8s_D()
{
  {
    init_simple_test("aS_BFu8s_D");
    static STRUCT_IF_C aS_BFu8s_D lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu8s_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_D)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_D.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_D");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_D");
    check_field_offset(lv, v3, 3, "aS_BFu8s_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_D, aS_BFu8s_D)
//============================================================================



static void Test_aS_BFu8s_F()
{
  {
    init_simple_test("aS_BFu8s_F");
    static STRUCT_IF_C aS_BFu8s_F lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu8s_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_F)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_F.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_F");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_F");
    check_field_offset(lv, v3, 3, "aS_BFu8s_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_F, aS_BFu8s_F)
//============================================================================



static void Test_aS_BFu8s_I()
{
  {
    init_simple_test("aS_BFu8s_I");
    static STRUCT_IF_C aS_BFu8s_I lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu8s_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_I)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_I.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_I");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_I");
    check_field_offset(lv, v3, 3, "aS_BFu8s_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_I, aS_BFu8s_I)
//============================================================================



static void Test_aS_BFu8s_Ip()
{
  {
    init_simple_test("aS_BFu8s_Ip");
    static STRUCT_IF_C aS_BFu8s_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_BFu8s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_Ip)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_Ip.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_Ip");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_Ip");
    check_field_offset(lv, v3, 3, "aS_BFu8s_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_Ip, aS_BFu8s_Ip)
//============================================================================



static void Test_aS_BFu8s_L()
{
  {
    init_simple_test("aS_BFu8s_L");
    static STRUCT_IF_C aS_BFu8s_L lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu8s_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_L)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_L.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_L");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_L");
    check_field_offset(lv, v3, 3, "aS_BFu8s_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_L, aS_BFu8s_L)
//============================================================================



static void Test_aS_BFu8s_S()
{
  {
    init_simple_test("aS_BFu8s_S");
    static STRUCT_IF_C aS_BFu8s_S lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8s_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_S)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_S.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_S");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_S");
    check_field_offset(lv, v3, 3, "aS_BFu8s_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_S, aS_BFu8s_S)
//============================================================================



static void Test_aS_BFu8s_Uc()
{
  {
    init_simple_test("aS_BFu8s_Uc");
    static STRUCT_IF_C aS_BFu8s_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu8s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_Uc)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_Uc.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_Uc");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_Uc");
    check_field_offset(lv, v3, 3, "aS_BFu8s_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_Uc, aS_BFu8s_Uc)
//============================================================================



static void Test_aS_BFu8s_Ui()
{
  {
    init_simple_test("aS_BFu8s_Ui");
    static STRUCT_IF_C aS_BFu8s_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu8s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_Ui)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_Ui.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_Ui");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_Ui");
    check_field_offset(lv, v3, 3, "aS_BFu8s_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_Ui, aS_BFu8s_Ui)
//============================================================================



static void Test_aS_BFu8s_Ul()
{
  {
    init_simple_test("aS_BFu8s_Ul");
    static STRUCT_IF_C aS_BFu8s_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aS_BFu8s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_Ul)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_Ul.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_Ul");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_Ul");
    check_field_offset(lv, v3, 3, "aS_BFu8s_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_Ul, aS_BFu8s_Ul)
//============================================================================



static void Test_aS_BFu8s_Us()
{
  {
    init_simple_test("aS_BFu8s_Us");
    static STRUCT_IF_C aS_BFu8s_Us lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu8s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_Us)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_Us.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_Us");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_Us");
    check_field_offset(lv, v3, 3, "aS_BFu8s_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_Us, aS_BFu8s_Us)
//============================================================================



static void Test_aS_BFu8s_Vp()
{
  {
    init_simple_test("aS_BFu8s_Vp");
    static STRUCT_IF_C aS_BFu8s_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_BFu8s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu8s_Vp)");
    check_field_offset(lv, v1, 0, "aS_BFu8s_Vp.v1");
    set_bf_and_test(lv, v2, 2, 0, 8, 1, "aS_BFu8s_Vp");
    set_bf_and_test(lv, v2, 2, 0, 8, hide_ull(1LL<<7), "aS_BFu8s_Vp");
    check_field_offset(lv, v3, 3, "aS_BFu8s_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu8s_Vp, aS_BFu8s_Vp)
//============================================================================



static void Test_aS_BFu9i()
{
  {
    init_simple_test("aS_BFu9i");
    static STRUCT_IF_C aS_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_BFu9i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i, aS_BFu9i)
//============================================================================



static void Test_aS_BFu9i_BFu15i()
{
  {
    init_simple_test("aS_BFu9i_BFu15i");
    static STRUCT_IF_C aS_BFu9i_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_BFu15i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_BFu15i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_BFu15i");
    set_bf_and_test(lv, v3, 3, 1, 15, 1, "aS_BFu9i_BFu15i");
    set_bf_and_test(lv, v3, 3, 1, 15, hide_ull(1LL<<14), "aS_BFu9i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_BFu15i, aS_BFu9i_BFu15i)
//============================================================================



static void Test_aS_BFu9i_BFu15ll()
{
  {
    init_simple_test("aS_BFu9i_BFu15ll");
    static STRUCT_IF_C aS_BFu9i_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_BFu15ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 1, 15, 1, "aS_BFu9i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 1, 15, hide_ull(1LL<<14), "aS_BFu9i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_BFu15ll, aS_BFu9i_BFu15ll)
//============================================================================



static void Test_aS_BFu9i_BFu15s()
{
  {
    init_simple_test("aS_BFu9i_BFu15s");
    static STRUCT_IF_C aS_BFu9i_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_BFu15s.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_BFu15s");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_BFu15s");
    set_bf_and_test(lv, v3, 3, 1, 15, 1, "aS_BFu9i_BFu15s");
    set_bf_and_test(lv, v3, 3, 1, 15, hide_ull(1LL<<14), "aS_BFu9i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_BFu15s, aS_BFu9i_BFu15s)
//============================================================================



static void Test_aS_BFu9i_BFu16i()
{
  {
    init_simple_test("aS_BFu9i_BFu16i");
    static STRUCT_IF_C aS_BFu9i_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu9i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_BFu16i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_BFu16i");
    set_bf_and_test(lv, v3, 3, 1, 16, 1, "aS_BFu9i_BFu16i");
    set_bf_and_test(lv, v3, 3, 1, 16, hide_ull(1LL<<15), "aS_BFu9i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_BFu16i, aS_BFu9i_BFu16i)
//============================================================================



static void Test_aS_BFu9i_BFu16ll()
{
  {
    init_simple_test("aS_BFu9i_BFu16ll");
    static STRUCT_IF_C aS_BFu9i_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu9i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_BFu16ll");
    set_bf_and_test(lv, v3, 3, 1, 16, 1, "aS_BFu9i_BFu16ll");
    set_bf_and_test(lv, v3, 3, 1, 16, hide_ull(1LL<<15), "aS_BFu9i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_BFu16ll, aS_BFu9i_BFu16ll)
//============================================================================



static void Test_aS_BFu9i_BFu16s()
{
  {
    init_simple_test("aS_BFu9i_BFu16s");
    static STRUCT_IF_C aS_BFu9i_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu9i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_BFu16s.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_BFu16s");
    set_bf_and_test(lv, v3, 3, 1, 16, 1, "aS_BFu9i_BFu16s");
    set_bf_and_test(lv, v3, 3, 1, 16, hide_ull(1LL<<15), "aS_BFu9i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_BFu16s, aS_BFu9i_BFu16s)
//============================================================================



static void Test_aS_BFu9i_BFu17i()
{
  {
    init_simple_test("aS_BFu9i_BFu17i");
    static STRUCT_IF_C aS_BFu9i_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu9i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_BFu17i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_BFu17i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_BFu17i");
    set_bf_and_test(lv, v3, 3, 1, 17, 1, "aS_BFu9i_BFu17i");
    set_bf_and_test(lv, v3, 3, 1, 17, hide_ull(1LL<<16), "aS_BFu9i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_BFu17i, aS_BFu9i_BFu17i)
//============================================================================



static void Test_aS_BFu9i_BFu17ll()
{
  {
    init_simple_test("aS_BFu9i_BFu17ll");
    static STRUCT_IF_C aS_BFu9i_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu9i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_BFu17ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_BFu17ll");
    set_bf_and_test(lv, v3, 3, 1, 17, 1, "aS_BFu9i_BFu17ll");
    set_bf_and_test(lv, v3, 3, 1, 17, hide_ull(1LL<<16), "aS_BFu9i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_BFu17ll, aS_BFu9i_BFu17ll)
//============================================================================



static void Test_aS_BFu9i_BFu1c()
{
  {
    init_simple_test("aS_BFu9i_BFu1c");
    static STRUCT_IF_C aS_BFu9i_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu9i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_BFu1c.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_BFu1c");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_BFu1c");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "aS_BFu9i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_BFu1c, aS_BFu9i_BFu1c)
//============================================================================



static void Test_aS_BFu9i_BFu1i()
{
  {
    init_simple_test("aS_BFu9i_BFu1i");
    static STRUCT_IF_C aS_BFu9i_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu9i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_BFu1i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_BFu1i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_BFu1i");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "aS_BFu9i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_BFu1i, aS_BFu9i_BFu1i)
//============================================================================



static void Test_aS_BFu9i_BFu1ll()
{
  {
    init_simple_test("aS_BFu9i_BFu1ll");
    static STRUCT_IF_C aS_BFu9i_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu9i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_BFu1ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_BFu1ll");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "aS_BFu9i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_BFu1ll, aS_BFu9i_BFu1ll)
//============================================================================



static void Test_aS_BFu9i_BFu1s()
{
  {
    init_simple_test("aS_BFu9i_BFu1s");
    static STRUCT_IF_C aS_BFu9i_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu9i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_BFu1s.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_BFu1s");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_BFu1s");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "aS_BFu9i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_BFu1s, aS_BFu9i_BFu1s)
//============================================================================



static void Test_aS_BFu9i_BFu31i()
{
  {
    init_simple_test("aS_BFu9i_BFu31i");
    static STRUCT_IF_C aS_BFu9i_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu9i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_BFu31i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_BFu31i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_BFu31i");
    set_bf_and_test(lv, v3, 3, 1, 31, 1, "aS_BFu9i_BFu31i");
    set_bf_and_test(lv, v3, 3, 1, 31, hide_ull(1LL<<30), "aS_BFu9i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_BFu31i, aS_BFu9i_BFu31i)
//============================================================================



static void Test_aS_BFu9i_BFu31ll()
{
  {
    init_simple_test("aS_BFu9i_BFu31ll");
    static STRUCT_IF_C aS_BFu9i_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu9i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_BFu31ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_BFu31ll");
    set_bf_and_test(lv, v3, 3, 1, 31, 1, "aS_BFu9i_BFu31ll");
    set_bf_and_test(lv, v3, 3, 1, 31, hide_ull(1LL<<30), "aS_BFu9i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_BFu31ll, aS_BFu9i_BFu31ll)
//============================================================================



static void Test_aS_BFu9i_BFu32i()
{
  {
    init_simple_test("aS_BFu9i_BFu32i");
    static STRUCT_IF_C aS_BFu9i_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu9i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_BFu32i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_BFu32i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_BFu32i");
    set_bf_and_test(lv, v3, 3, 1, 32, 1, "aS_BFu9i_BFu32i");
    set_bf_and_test(lv, v3, 3, 1, 32, hide_ull(1LL<<31), "aS_BFu9i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_BFu32i, aS_BFu9i_BFu32i)
//============================================================================



static void Test_aS_BFu9i_BFu32ll()
{
  {
    init_simple_test("aS_BFu9i_BFu32ll");
    static STRUCT_IF_C aS_BFu9i_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu9i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_BFu32ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_BFu32ll");
    set_bf_and_test(lv, v3, 3, 1, 32, 1, "aS_BFu9i_BFu32ll");
    set_bf_and_test(lv, v3, 3, 1, 32, hide_ull(1LL<<31), "aS_BFu9i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_BFu32ll, aS_BFu9i_BFu32ll)
//============================================================================



static void Test_aS_BFu9i_BFu33()
{
  {
    init_simple_test("aS_BFu9i_BFu33");
    static STRUCT_IF_C aS_BFu9i_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu9i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_BFu33)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_BFu33.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_BFu33");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_BFu33");
    set_bf_and_test(lv, v3, 3, 1, 33, 1, "aS_BFu9i_BFu33");
    set_bf_and_test(lv, v3, 3, 1, 33, hide_ull(1LL<<32), "aS_BFu9i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_BFu33, aS_BFu9i_BFu33)
//============================================================================



static void Test_aS_BFu9i_BFu7c()
{
  {
    init_simple_test("aS_BFu9i_BFu7c");
    static STRUCT_IF_C aS_BFu9i_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu9i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_BFu7c.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_BFu7c");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_BFu7c");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "aS_BFu9i_BFu7c");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "aS_BFu9i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_BFu7c, aS_BFu9i_BFu7c)
//============================================================================



static void Test_aS_BFu9i_BFu7i()
{
  {
    init_simple_test("aS_BFu9i_BFu7i");
    static STRUCT_IF_C aS_BFu9i_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu9i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_BFu7i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_BFu7i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_BFu7i");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "aS_BFu9i_BFu7i");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "aS_BFu9i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_BFu7i, aS_BFu9i_BFu7i)
//============================================================================



static void Test_aS_BFu9i_BFu7ll()
{
  {
    init_simple_test("aS_BFu9i_BFu7ll");
    static STRUCT_IF_C aS_BFu9i_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu9i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_BFu7ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_BFu7ll");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "aS_BFu9i_BFu7ll");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "aS_BFu9i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_BFu7ll, aS_BFu9i_BFu7ll)
//============================================================================



static void Test_aS_BFu9i_BFu7s()
{
  {
    init_simple_test("aS_BFu9i_BFu7s");
    static STRUCT_IF_C aS_BFu9i_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu9i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_BFu7s.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_BFu7s");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_BFu7s");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "aS_BFu9i_BFu7s");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "aS_BFu9i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_BFu7s, aS_BFu9i_BFu7s)
//============================================================================



static void Test_aS_BFu9i_BFu8c()
{
  {
    init_simple_test("aS_BFu9i_BFu8c");
    static STRUCT_IF_C aS_BFu9i_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_BFu8c.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_BFu8c");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_BFu8c");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "aS_BFu9i_BFu8c");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "aS_BFu9i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_BFu8c, aS_BFu9i_BFu8c)
//============================================================================



static void Test_aS_BFu9i_BFu8i()
{
  {
    init_simple_test("aS_BFu9i_BFu8i");
    static STRUCT_IF_C aS_BFu9i_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_BFu8i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_BFu8i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_BFu8i");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "aS_BFu9i_BFu8i");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "aS_BFu9i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_BFu8i, aS_BFu9i_BFu8i)
//============================================================================



static void Test_aS_BFu9i_BFu8ll()
{
  {
    init_simple_test("aS_BFu9i_BFu8ll");
    static STRUCT_IF_C aS_BFu9i_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_BFu8ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_BFu8ll");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "aS_BFu9i_BFu8ll");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "aS_BFu9i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_BFu8ll, aS_BFu9i_BFu8ll)
//============================================================================



static void Test_aS_BFu9i_BFu8s()
{
  {
    init_simple_test("aS_BFu9i_BFu8s");
    static STRUCT_IF_C aS_BFu9i_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_BFu8s.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_BFu8s");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_BFu8s");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "aS_BFu9i_BFu8s");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "aS_BFu9i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_BFu8s, aS_BFu9i_BFu8s)
//============================================================================



static void Test_aS_BFu9i_BFu9i()
{
  {
    init_simple_test("aS_BFu9i_BFu9i");
    static STRUCT_IF_C aS_BFu9i_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_BFu9i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_BFu9i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_BFu9i");
    set_bf_and_test(lv, v3, 3, 1, 9, 1, "aS_BFu9i_BFu9i");
    set_bf_and_test(lv, v3, 3, 1, 9, hide_ull(1LL<<8), "aS_BFu9i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_BFu9i, aS_BFu9i_BFu9i)
//============================================================================



static void Test_aS_BFu9i_BFu9ll()
{
  {
    init_simple_test("aS_BFu9i_BFu9ll");
    static STRUCT_IF_C aS_BFu9i_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_BFu9ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_BFu9ll");
    set_bf_and_test(lv, v3, 3, 1, 9, 1, "aS_BFu9i_BFu9ll");
    set_bf_and_test(lv, v3, 3, 1, 9, hide_ull(1LL<<8), "aS_BFu9i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_BFu9ll, aS_BFu9i_BFu9ll)
//============================================================================



static void Test_aS_BFu9i_BFu9s()
{
  {
    init_simple_test("aS_BFu9i_BFu9s");
    static STRUCT_IF_C aS_BFu9i_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_BFu9s.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_BFu9s");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_BFu9s");
    set_bf_and_test(lv, v3, 3, 1, 9, 1, "aS_BFu9i_BFu9s");
    set_bf_and_test(lv, v3, 3, 1, 9, hide_ull(1LL<<8), "aS_BFu9i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_BFu9s, aS_BFu9i_BFu9s)
//============================================================================



static void Test_aS_BFu9i_C()
{
  {
    init_simple_test("aS_BFu9i_C");
    static STRUCT_IF_C aS_BFu9i_C lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_C)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_C.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_C");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_C");
    check_field_offset(lv, v3, 4, "aS_BFu9i_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_C, aS_BFu9i_C)
//============================================================================



static void Test_aS_BFu9i_D()
{
  {
    init_simple_test("aS_BFu9i_D");
    static STRUCT_IF_C aS_BFu9i_D lv;
    check2(sizeof(lv), 12, "sizeof(aS_BFu9i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_D)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_D.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_D");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_D");
    check_field_offset(lv, v3, 4, "aS_BFu9i_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_D, aS_BFu9i_D)
//============================================================================



static void Test_aS_BFu9i_F()
{
  {
    init_simple_test("aS_BFu9i_F");
    static STRUCT_IF_C aS_BFu9i_F lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu9i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_F)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_F.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_F");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_F");
    check_field_offset(lv, v3, 4, "aS_BFu9i_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_F, aS_BFu9i_F)
//============================================================================



static void Test_aS_BFu9i_I()
{
  {
    init_simple_test("aS_BFu9i_I");
    static STRUCT_IF_C aS_BFu9i_I lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu9i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_I)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_I.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_I");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_I");
    check_field_offset(lv, v3, 4, "aS_BFu9i_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_I, aS_BFu9i_I)
//============================================================================



static void Test_aS_BFu9i_Ip()
{
  {
    init_simple_test("aS_BFu9i_Ip");
    static STRUCT_IF_C aS_BFu9i_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_BFu9i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_Ip)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_Ip.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_Ip");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_Ip");
    check_field_offset(lv, v3, 4, "aS_BFu9i_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_Ip, aS_BFu9i_Ip)
//============================================================================



static void Test_aS_BFu9i_L()
{
  {
    init_simple_test("aS_BFu9i_L");
    static STRUCT_IF_C aS_BFu9i_L lv;
    check2(sizeof(lv), 12, "sizeof(aS_BFu9i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_L)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_L.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_L");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_L");
    check_field_offset(lv, v3, 4, "aS_BFu9i_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_L, aS_BFu9i_L)
//============================================================================



static void Test_aS_BFu9i_S()
{
  {
    init_simple_test("aS_BFu9i_S");
    static STRUCT_IF_C aS_BFu9i_S lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu9i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_S)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_S.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_S");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_S");
    check_field_offset(lv, v3, 4, "aS_BFu9i_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_S, aS_BFu9i_S)
//============================================================================



static void Test_aS_BFu9i_Uc()
{
  {
    init_simple_test("aS_BFu9i_Uc");
    static STRUCT_IF_C aS_BFu9i_Uc lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_Uc)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_Uc.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_Uc");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_Uc");
    check_field_offset(lv, v3, 4, "aS_BFu9i_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_Uc, aS_BFu9i_Uc)
//============================================================================



static void Test_aS_BFu9i_Ui()
{
  {
    init_simple_test("aS_BFu9i_Ui");
    static STRUCT_IF_C aS_BFu9i_Ui lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu9i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_Ui)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_Ui.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_Ui");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_Ui");
    check_field_offset(lv, v3, 4, "aS_BFu9i_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_Ui, aS_BFu9i_Ui)
//============================================================================



static void Test_aS_BFu9i_Ul()
{
  {
    init_simple_test("aS_BFu9i_Ul");
    static STRUCT_IF_C aS_BFu9i_Ul lv;
    check2(sizeof(lv), 12, "sizeof(aS_BFu9i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_Ul)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_Ul.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_Ul");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_Ul");
    check_field_offset(lv, v3, 4, "aS_BFu9i_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_Ul, aS_BFu9i_Ul)
//============================================================================



static void Test_aS_BFu9i_Us()
{
  {
    init_simple_test("aS_BFu9i_Us");
    static STRUCT_IF_C aS_BFu9i_Us lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu9i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_Us)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_Us.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_Us");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_Us");
    check_field_offset(lv, v3, 4, "aS_BFu9i_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_Us, aS_BFu9i_Us)
//============================================================================



static void Test_aS_BFu9i_Vp()
{
  {
    init_simple_test("aS_BFu9i_Vp");
    static STRUCT_IF_C aS_BFu9i_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_BFu9i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9i_Vp)");
    check_field_offset(lv, v1, 0, "aS_BFu9i_Vp.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9i_Vp");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9i_Vp");
    check_field_offset(lv, v3, 4, "aS_BFu9i_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9i_Vp, aS_BFu9i_Vp)
//============================================================================



static void Test_aS_BFu9ll()
{
  {
    init_simple_test("aS_BFu9ll");
    static STRUCT_IF_C aS_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll, aS_BFu9ll)
//============================================================================



static void Test_aS_BFu9ll_BFu15i()
{
  {
    init_simple_test("aS_BFu9ll_BFu15i");
    static STRUCT_IF_C aS_BFu9ll_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_BFu15i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 1, 15, 1, "aS_BFu9ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 1, 15, hide_ull(1LL<<14), "aS_BFu9ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_BFu15i, aS_BFu9ll_BFu15i)
//============================================================================



static void Test_aS_BFu9ll_BFu15ll()
{
  {
    init_simple_test("aS_BFu9ll_BFu15ll");
    static STRUCT_IF_C aS_BFu9ll_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_BFu15ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 1, 15, 1, "aS_BFu9ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 1, 15, hide_ull(1LL<<14), "aS_BFu9ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_BFu15ll, aS_BFu9ll_BFu15ll)
//============================================================================



static void Test_aS_BFu9ll_BFu15s()
{
  {
    init_simple_test("aS_BFu9ll_BFu15s");
    static STRUCT_IF_C aS_BFu9ll_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_BFu15s");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 1, 15, 1, "aS_BFu9ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 1, 15, hide_ull(1LL<<14), "aS_BFu9ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_BFu15s, aS_BFu9ll_BFu15s)
//============================================================================



static void Test_aS_BFu9ll_BFu16i()
{
  {
    init_simple_test("aS_BFu9ll_BFu16i");
    static STRUCT_IF_C aS_BFu9ll_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu9ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_BFu16i");
    set_bf_and_test(lv, v3, 3, 1, 16, 1, "aS_BFu9ll_BFu16i");
    set_bf_and_test(lv, v3, 3, 1, 16, hide_ull(1LL<<15), "aS_BFu9ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_BFu16i, aS_BFu9ll_BFu16i)
//============================================================================



static void Test_aS_BFu9ll_BFu16ll()
{
  {
    init_simple_test("aS_BFu9ll_BFu16ll");
    static STRUCT_IF_C aS_BFu9ll_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu9ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_BFu16ll");
    set_bf_and_test(lv, v3, 3, 1, 16, 1, "aS_BFu9ll_BFu16ll");
    set_bf_and_test(lv, v3, 3, 1, 16, hide_ull(1LL<<15), "aS_BFu9ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_BFu16ll, aS_BFu9ll_BFu16ll)
//============================================================================



static void Test_aS_BFu9ll_BFu16s()
{
  {
    init_simple_test("aS_BFu9ll_BFu16s");
    static STRUCT_IF_C aS_BFu9ll_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu9ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_BFu16s");
    set_bf_and_test(lv, v3, 3, 1, 16, 1, "aS_BFu9ll_BFu16s");
    set_bf_and_test(lv, v3, 3, 1, 16, hide_ull(1LL<<15), "aS_BFu9ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_BFu16s, aS_BFu9ll_BFu16s)
//============================================================================



static void Test_aS_BFu9ll_BFu17i()
{
  {
    init_simple_test("aS_BFu9ll_BFu17i");
    static STRUCT_IF_C aS_BFu9ll_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu9ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_BFu17i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_BFu17i");
    set_bf_and_test(lv, v3, 3, 1, 17, 1, "aS_BFu9ll_BFu17i");
    set_bf_and_test(lv, v3, 3, 1, 17, hide_ull(1LL<<16), "aS_BFu9ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_BFu17i, aS_BFu9ll_BFu17i)
//============================================================================



static void Test_aS_BFu9ll_BFu17ll()
{
  {
    init_simple_test("aS_BFu9ll_BFu17ll");
    static STRUCT_IF_C aS_BFu9ll_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu9ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_BFu17ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_BFu17ll");
    set_bf_and_test(lv, v3, 3, 1, 17, 1, "aS_BFu9ll_BFu17ll");
    set_bf_and_test(lv, v3, 3, 1, 17, hide_ull(1LL<<16), "aS_BFu9ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_BFu17ll, aS_BFu9ll_BFu17ll)
//============================================================================



static void Test_aS_BFu9ll_BFu1c()
{
  {
    init_simple_test("aS_BFu9ll_BFu1c");
    static STRUCT_IF_C aS_BFu9ll_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu9ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_BFu1c");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_BFu1c");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "aS_BFu9ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_BFu1c, aS_BFu9ll_BFu1c)
//============================================================================



static void Test_aS_BFu9ll_BFu1i()
{
  {
    init_simple_test("aS_BFu9ll_BFu1i");
    static STRUCT_IF_C aS_BFu9ll_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu9ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_BFu1i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_BFu1i");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "aS_BFu9ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_BFu1i, aS_BFu9ll_BFu1i)
//============================================================================



static void Test_aS_BFu9ll_BFu1ll()
{
  {
    init_simple_test("aS_BFu9ll_BFu1ll");
    static STRUCT_IF_C aS_BFu9ll_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu9ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_BFu1ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_BFu1ll");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "aS_BFu9ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_BFu1ll, aS_BFu9ll_BFu1ll)
//============================================================================



static void Test_aS_BFu9ll_BFu1s()
{
  {
    init_simple_test("aS_BFu9ll_BFu1s");
    static STRUCT_IF_C aS_BFu9ll_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu9ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_BFu1s");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_BFu1s");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "aS_BFu9ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_BFu1s, aS_BFu9ll_BFu1s)
//============================================================================



static void Test_aS_BFu9ll_BFu31i()
{
  {
    init_simple_test("aS_BFu9ll_BFu31i");
    static STRUCT_IF_C aS_BFu9ll_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu9ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_BFu31i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_BFu31i");
    set_bf_and_test(lv, v3, 3, 1, 31, 1, "aS_BFu9ll_BFu31i");
    set_bf_and_test(lv, v3, 3, 1, 31, hide_ull(1LL<<30), "aS_BFu9ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_BFu31i, aS_BFu9ll_BFu31i)
//============================================================================



static void Test_aS_BFu9ll_BFu31ll()
{
  {
    init_simple_test("aS_BFu9ll_BFu31ll");
    static STRUCT_IF_C aS_BFu9ll_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu9ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_BFu31ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_BFu31ll");
    set_bf_and_test(lv, v3, 3, 1, 31, 1, "aS_BFu9ll_BFu31ll");
    set_bf_and_test(lv, v3, 3, 1, 31, hide_ull(1LL<<30), "aS_BFu9ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_BFu31ll, aS_BFu9ll_BFu31ll)
//============================================================================



static void Test_aS_BFu9ll_BFu32i()
{
  {
    init_simple_test("aS_BFu9ll_BFu32i");
    static STRUCT_IF_C aS_BFu9ll_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu9ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_BFu32i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_BFu32i");
    set_bf_and_test(lv, v3, 3, 1, 32, 1, "aS_BFu9ll_BFu32i");
    set_bf_and_test(lv, v3, 3, 1, 32, hide_ull(1LL<<31), "aS_BFu9ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_BFu32i, aS_BFu9ll_BFu32i)
//============================================================================



static void Test_aS_BFu9ll_BFu32ll()
{
  {
    init_simple_test("aS_BFu9ll_BFu32ll");
    static STRUCT_IF_C aS_BFu9ll_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu9ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_BFu32ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_BFu32ll");
    set_bf_and_test(lv, v3, 3, 1, 32, 1, "aS_BFu9ll_BFu32ll");
    set_bf_and_test(lv, v3, 3, 1, 32, hide_ull(1LL<<31), "aS_BFu9ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_BFu32ll, aS_BFu9ll_BFu32ll)
//============================================================================



static void Test_aS_BFu9ll_BFu33()
{
  {
    init_simple_test("aS_BFu9ll_BFu33");
    static STRUCT_IF_C aS_BFu9ll_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu9ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_BFu33)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_BFu33.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_BFu33");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_BFu33");
    set_bf_and_test(lv, v3, 3, 1, 33, 1, "aS_BFu9ll_BFu33");
    set_bf_and_test(lv, v3, 3, 1, 33, hide_ull(1LL<<32), "aS_BFu9ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_BFu33, aS_BFu9ll_BFu33)
//============================================================================



static void Test_aS_BFu9ll_BFu7c()
{
  {
    init_simple_test("aS_BFu9ll_BFu7c");
    static STRUCT_IF_C aS_BFu9ll_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu9ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_BFu7c");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_BFu7c");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "aS_BFu9ll_BFu7c");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "aS_BFu9ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_BFu7c, aS_BFu9ll_BFu7c)
//============================================================================



static void Test_aS_BFu9ll_BFu7i()
{
  {
    init_simple_test("aS_BFu9ll_BFu7i");
    static STRUCT_IF_C aS_BFu9ll_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu9ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_BFu7i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_BFu7i");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "aS_BFu9ll_BFu7i");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "aS_BFu9ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_BFu7i, aS_BFu9ll_BFu7i)
//============================================================================



static void Test_aS_BFu9ll_BFu7ll()
{
  {
    init_simple_test("aS_BFu9ll_BFu7ll");
    static STRUCT_IF_C aS_BFu9ll_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu9ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_BFu7ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_BFu7ll");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "aS_BFu9ll_BFu7ll");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "aS_BFu9ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_BFu7ll, aS_BFu9ll_BFu7ll)
//============================================================================



static void Test_aS_BFu9ll_BFu7s()
{
  {
    init_simple_test("aS_BFu9ll_BFu7s");
    static STRUCT_IF_C aS_BFu9ll_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu9ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_BFu7s");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_BFu7s");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "aS_BFu9ll_BFu7s");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "aS_BFu9ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_BFu7s, aS_BFu9ll_BFu7s)
//============================================================================



static void Test_aS_BFu9ll_BFu8c()
{
  {
    init_simple_test("aS_BFu9ll_BFu8c");
    static STRUCT_IF_C aS_BFu9ll_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_BFu8c");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_BFu8c");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "aS_BFu9ll_BFu8c");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "aS_BFu9ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_BFu8c, aS_BFu9ll_BFu8c)
//============================================================================



static void Test_aS_BFu9ll_BFu8i()
{
  {
    init_simple_test("aS_BFu9ll_BFu8i");
    static STRUCT_IF_C aS_BFu9ll_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_BFu8i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_BFu8i");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "aS_BFu9ll_BFu8i");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "aS_BFu9ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_BFu8i, aS_BFu9ll_BFu8i)
//============================================================================



static void Test_aS_BFu9ll_BFu8ll()
{
  {
    init_simple_test("aS_BFu9ll_BFu8ll");
    static STRUCT_IF_C aS_BFu9ll_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_BFu8ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_BFu8ll");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "aS_BFu9ll_BFu8ll");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "aS_BFu9ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_BFu8ll, aS_BFu9ll_BFu8ll)
//============================================================================



static void Test_aS_BFu9ll_BFu8s()
{
  {
    init_simple_test("aS_BFu9ll_BFu8s");
    static STRUCT_IF_C aS_BFu9ll_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_BFu8s");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_BFu8s");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "aS_BFu9ll_BFu8s");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "aS_BFu9ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_BFu8s, aS_BFu9ll_BFu8s)
//============================================================================



static void Test_aS_BFu9ll_BFu9i()
{
  {
    init_simple_test("aS_BFu9ll_BFu9i");
    static STRUCT_IF_C aS_BFu9ll_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_BFu9i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_BFu9i");
    set_bf_and_test(lv, v3, 3, 1, 9, 1, "aS_BFu9ll_BFu9i");
    set_bf_and_test(lv, v3, 3, 1, 9, hide_ull(1LL<<8), "aS_BFu9ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_BFu9i, aS_BFu9ll_BFu9i)
//============================================================================



static void Test_aS_BFu9ll_BFu9ll()
{
  {
    init_simple_test("aS_BFu9ll_BFu9ll");
    static STRUCT_IF_C aS_BFu9ll_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_BFu9ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_BFu9ll");
    set_bf_and_test(lv, v3, 3, 1, 9, 1, "aS_BFu9ll_BFu9ll");
    set_bf_and_test(lv, v3, 3, 1, 9, hide_ull(1LL<<8), "aS_BFu9ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_BFu9ll, aS_BFu9ll_BFu9ll)
//============================================================================



static void Test_aS_BFu9ll_BFu9s()
{
  {
    init_simple_test("aS_BFu9ll_BFu9s");
    static STRUCT_IF_C aS_BFu9ll_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_BFu9s");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_BFu9s");
    set_bf_and_test(lv, v3, 3, 1, 9, 1, "aS_BFu9ll_BFu9s");
    set_bf_and_test(lv, v3, 3, 1, 9, hide_ull(1LL<<8), "aS_BFu9ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_BFu9s, aS_BFu9ll_BFu9s)
//============================================================================



static void Test_aS_BFu9ll_C()
{
  {
    init_simple_test("aS_BFu9ll_C");
    static STRUCT_IF_C aS_BFu9ll_C lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_C)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_C.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_C");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_C");
    check_field_offset(lv, v3, 4, "aS_BFu9ll_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_C, aS_BFu9ll_C)
//============================================================================



static void Test_aS_BFu9ll_D()
{
  {
    init_simple_test("aS_BFu9ll_D");
    static STRUCT_IF_C aS_BFu9ll_D lv;
    check2(sizeof(lv), 12, "sizeof(aS_BFu9ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_D)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_D.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_D");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_D");
    check_field_offset(lv, v3, 4, "aS_BFu9ll_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_D, aS_BFu9ll_D)
//============================================================================



static void Test_aS_BFu9ll_F()
{
  {
    init_simple_test("aS_BFu9ll_F");
    static STRUCT_IF_C aS_BFu9ll_F lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu9ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_F)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_F.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_F");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_F");
    check_field_offset(lv, v3, 4, "aS_BFu9ll_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_F, aS_BFu9ll_F)
//============================================================================



static void Test_aS_BFu9ll_I()
{
  {
    init_simple_test("aS_BFu9ll_I");
    static STRUCT_IF_C aS_BFu9ll_I lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu9ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_I)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_I.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_I");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_I");
    check_field_offset(lv, v3, 4, "aS_BFu9ll_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_I, aS_BFu9ll_I)
//============================================================================



static void Test_aS_BFu9ll_Ip()
{
  {
    init_simple_test("aS_BFu9ll_Ip");
    static STRUCT_IF_C aS_BFu9ll_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_BFu9ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_Ip)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_Ip.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_Ip");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_Ip");
    check_field_offset(lv, v3, 4, "aS_BFu9ll_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_Ip, aS_BFu9ll_Ip)
//============================================================================



static void Test_aS_BFu9ll_L()
{
  {
    init_simple_test("aS_BFu9ll_L");
    static STRUCT_IF_C aS_BFu9ll_L lv;
    check2(sizeof(lv), 12, "sizeof(aS_BFu9ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_L)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_L.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_L");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_L");
    check_field_offset(lv, v3, 4, "aS_BFu9ll_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_L, aS_BFu9ll_L)
//============================================================================



static void Test_aS_BFu9ll_S()
{
  {
    init_simple_test("aS_BFu9ll_S");
    static STRUCT_IF_C aS_BFu9ll_S lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu9ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_S)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_S.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_S");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_S");
    check_field_offset(lv, v3, 4, "aS_BFu9ll_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_S, aS_BFu9ll_S)
//============================================================================



static void Test_aS_BFu9ll_Uc()
{
  {
    init_simple_test("aS_BFu9ll_Uc");
    static STRUCT_IF_C aS_BFu9ll_Uc lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_Uc)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_Uc.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_Uc");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_Uc");
    check_field_offset(lv, v3, 4, "aS_BFu9ll_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_Uc, aS_BFu9ll_Uc)
//============================================================================



static void Test_aS_BFu9ll_Ui()
{
  {
    init_simple_test("aS_BFu9ll_Ui");
    static STRUCT_IF_C aS_BFu9ll_Ui lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu9ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_Ui)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_Ui.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_Ui");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_Ui");
    check_field_offset(lv, v3, 4, "aS_BFu9ll_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_Ui, aS_BFu9ll_Ui)
//============================================================================



static void Test_aS_BFu9ll_Ul()
{
  {
    init_simple_test("aS_BFu9ll_Ul");
    static STRUCT_IF_C aS_BFu9ll_Ul lv;
    check2(sizeof(lv), 12, "sizeof(aS_BFu9ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_Ul)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_Ul.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_Ul");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_Ul");
    check_field_offset(lv, v3, 4, "aS_BFu9ll_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_Ul, aS_BFu9ll_Ul)
//============================================================================



static void Test_aS_BFu9ll_Us()
{
  {
    init_simple_test("aS_BFu9ll_Us");
    static STRUCT_IF_C aS_BFu9ll_Us lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu9ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_Us)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_Us.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_Us");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_Us");
    check_field_offset(lv, v3, 4, "aS_BFu9ll_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_Us, aS_BFu9ll_Us)
//============================================================================



static void Test_aS_BFu9ll_Vp()
{
  {
    init_simple_test("aS_BFu9ll_Vp");
    static STRUCT_IF_C aS_BFu9ll_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_BFu9ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9ll_Vp)");
    check_field_offset(lv, v1, 0, "aS_BFu9ll_Vp.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9ll_Vp");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9ll_Vp");
    check_field_offset(lv, v3, 4, "aS_BFu9ll_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9ll_Vp, aS_BFu9ll_Vp)
//============================================================================



static void Test_aS_BFu9s()
{
  {
    init_simple_test("aS_BFu9s");
    static STRUCT_IF_C aS_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_BFu9s.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s, aS_BFu9s)
//============================================================================



static void Test_aS_BFu9s_BFu15i()
{
  {
    init_simple_test("aS_BFu9s_BFu15i");
    static STRUCT_IF_C aS_BFu9s_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_BFu15i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_BFu15i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_BFu15i");
    set_bf_and_test(lv, v3, 3, 1, 15, 1, "aS_BFu9s_BFu15i");
    set_bf_and_test(lv, v3, 3, 1, 15, hide_ull(1LL<<14), "aS_BFu9s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_BFu15i, aS_BFu9s_BFu15i)
//============================================================================



static void Test_aS_BFu9s_BFu15ll()
{
  {
    init_simple_test("aS_BFu9s_BFu15ll");
    static STRUCT_IF_C aS_BFu9s_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_BFu15ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_BFu15ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 1, 15, 1, "aS_BFu9s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 1, 15, hide_ull(1LL<<14), "aS_BFu9s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_BFu15ll, aS_BFu9s_BFu15ll)
//============================================================================



static void Test_aS_BFu9s_BFu15s()
{
  {
    init_simple_test("aS_BFu9s_BFu15s");
    static STRUCT_IF_C aS_BFu9s_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_BFu15s.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_BFu15s");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_BFu15s");
    set_bf_and_test(lv, v3, 3, 1, 15, 1, "aS_BFu9s_BFu15s");
    set_bf_and_test(lv, v3, 3, 1, 15, hide_ull(1LL<<14), "aS_BFu9s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_BFu15s, aS_BFu9s_BFu15s)
//============================================================================



static void Test_aS_BFu9s_BFu16i()
{
  {
    init_simple_test("aS_BFu9s_BFu16i");
    static STRUCT_IF_C aS_BFu9s_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu9s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_BFu16i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_BFu16i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_BFu16i");
    set_bf_and_test(lv, v3, 3, 1, 16, 1, "aS_BFu9s_BFu16i");
    set_bf_and_test(lv, v3, 3, 1, 16, hide_ull(1LL<<15), "aS_BFu9s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_BFu16i, aS_BFu9s_BFu16i)
//============================================================================



static void Test_aS_BFu9s_BFu16ll()
{
  {
    init_simple_test("aS_BFu9s_BFu16ll");
    static STRUCT_IF_C aS_BFu9s_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu9s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_BFu16ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_BFu16ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_BFu16ll");
    set_bf_and_test(lv, v3, 3, 1, 16, 1, "aS_BFu9s_BFu16ll");
    set_bf_and_test(lv, v3, 3, 1, 16, hide_ull(1LL<<15), "aS_BFu9s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_BFu16ll, aS_BFu9s_BFu16ll)
//============================================================================



static void Test_aS_BFu9s_BFu16s()
{
  {
    init_simple_test("aS_BFu9s_BFu16s");
    static STRUCT_IF_C aS_BFu9s_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu9s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_BFu16s.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_BFu16s");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_BFu16s");
    set_bf_and_test(lv, v3, 3, 1, 16, 1, "aS_BFu9s_BFu16s");
    set_bf_and_test(lv, v3, 3, 1, 16, hide_ull(1LL<<15), "aS_BFu9s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_BFu16s, aS_BFu9s_BFu16s)
//============================================================================



static void Test_aS_BFu9s_BFu17i()
{
  {
    init_simple_test("aS_BFu9s_BFu17i");
    static STRUCT_IF_C aS_BFu9s_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu9s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_BFu17i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_BFu17i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_BFu17i");
    set_bf_and_test(lv, v3, 3, 1, 17, 1, "aS_BFu9s_BFu17i");
    set_bf_and_test(lv, v3, 3, 1, 17, hide_ull(1LL<<16), "aS_BFu9s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_BFu17i, aS_BFu9s_BFu17i)
//============================================================================



static void Test_aS_BFu9s_BFu17ll()
{
  {
    init_simple_test("aS_BFu9s_BFu17ll");
    static STRUCT_IF_C aS_BFu9s_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu9s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_BFu17ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_BFu17ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_BFu17ll");
    set_bf_and_test(lv, v3, 3, 1, 17, 1, "aS_BFu9s_BFu17ll");
    set_bf_and_test(lv, v3, 3, 1, 17, hide_ull(1LL<<16), "aS_BFu9s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_BFu17ll, aS_BFu9s_BFu17ll)
//============================================================================



static void Test_aS_BFu9s_BFu1c()
{
  {
    init_simple_test("aS_BFu9s_BFu1c");
    static STRUCT_IF_C aS_BFu9s_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu9s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_BFu1c.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_BFu1c");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_BFu1c");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "aS_BFu9s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_BFu1c, aS_BFu9s_BFu1c)
//============================================================================



static void Test_aS_BFu9s_BFu1i()
{
  {
    init_simple_test("aS_BFu9s_BFu1i");
    static STRUCT_IF_C aS_BFu9s_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu9s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_BFu1i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_BFu1i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_BFu1i");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "aS_BFu9s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_BFu1i, aS_BFu9s_BFu1i)
//============================================================================



static void Test_aS_BFu9s_BFu1ll()
{
  {
    init_simple_test("aS_BFu9s_BFu1ll");
    static STRUCT_IF_C aS_BFu9s_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu9s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_BFu1ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_BFu1ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_BFu1ll");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "aS_BFu9s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_BFu1ll, aS_BFu9s_BFu1ll)
//============================================================================



static void Test_aS_BFu9s_BFu1s()
{
  {
    init_simple_test("aS_BFu9s_BFu1s");
    static STRUCT_IF_C aS_BFu9s_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu9s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_BFu1s.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_BFu1s");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_BFu1s");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "aS_BFu9s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_BFu1s, aS_BFu9s_BFu1s)
//============================================================================



static void Test_aS_BFu9s_BFu31i()
{
  {
    init_simple_test("aS_BFu9s_BFu31i");
    static STRUCT_IF_C aS_BFu9s_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu9s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_BFu31i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_BFu31i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_BFu31i");
    set_bf_and_test(lv, v3, 3, 1, 31, 1, "aS_BFu9s_BFu31i");
    set_bf_and_test(lv, v3, 3, 1, 31, hide_ull(1LL<<30), "aS_BFu9s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_BFu31i, aS_BFu9s_BFu31i)
//============================================================================



static void Test_aS_BFu9s_BFu31ll()
{
  {
    init_simple_test("aS_BFu9s_BFu31ll");
    static STRUCT_IF_C aS_BFu9s_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_BFu9s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_BFu31ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_BFu31ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_BFu31ll");
    set_bf_and_test(lv, v3, 3, 1, 31, 1, "aS_BFu9s_BFu31ll");
    set_bf_and_test(lv, v3, 3, 1, 31, hide_ull(1LL<<30), "aS_BFu9s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_BFu31ll, aS_BFu9s_BFu31ll)
//============================================================================



static void Test_aS_BFu9s_BFu32i()
{
  {
    init_simple_test("aS_BFu9s_BFu32i");
    static STRUCT_IF_C aS_BFu9s_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu9s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_BFu32i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_BFu32i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_BFu32i");
    set_bf_and_test(lv, v3, 3, 1, 32, 1, "aS_BFu9s_BFu32i");
    set_bf_and_test(lv, v3, 3, 1, 32, hide_ull(1LL<<31), "aS_BFu9s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_BFu32i, aS_BFu9s_BFu32i)
//============================================================================



static void Test_aS_BFu9s_BFu32ll()
{
  {
    init_simple_test("aS_BFu9s_BFu32ll");
    static STRUCT_IF_C aS_BFu9s_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu9s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_BFu32ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_BFu32ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_BFu32ll");
    set_bf_and_test(lv, v3, 3, 1, 32, 1, "aS_BFu9s_BFu32ll");
    set_bf_and_test(lv, v3, 3, 1, 32, hide_ull(1LL<<31), "aS_BFu9s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_BFu32ll, aS_BFu9s_BFu32ll)
//============================================================================



static void Test_aS_BFu9s_BFu33()
{
  {
    init_simple_test("aS_BFu9s_BFu33");
    static STRUCT_IF_C aS_BFu9s_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu9s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_BFu33)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_BFu33.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_BFu33");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_BFu33");
    set_bf_and_test(lv, v3, 3, 1, 33, 1, "aS_BFu9s_BFu33");
    set_bf_and_test(lv, v3, 3, 1, 33, hide_ull(1LL<<32), "aS_BFu9s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_BFu33, aS_BFu9s_BFu33)
//============================================================================



static void Test_aS_BFu9s_BFu7c()
{
  {
    init_simple_test("aS_BFu9s_BFu7c");
    static STRUCT_IF_C aS_BFu9s_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu9s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_BFu7c.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_BFu7c");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_BFu7c");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "aS_BFu9s_BFu7c");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "aS_BFu9s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_BFu7c, aS_BFu9s_BFu7c)
//============================================================================



static void Test_aS_BFu9s_BFu7i()
{
  {
    init_simple_test("aS_BFu9s_BFu7i");
    static STRUCT_IF_C aS_BFu9s_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu9s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_BFu7i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_BFu7i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_BFu7i");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "aS_BFu9s_BFu7i");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "aS_BFu9s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_BFu7i, aS_BFu9s_BFu7i)
//============================================================================



static void Test_aS_BFu9s_BFu7ll()
{
  {
    init_simple_test("aS_BFu9s_BFu7ll");
    static STRUCT_IF_C aS_BFu9s_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu9s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_BFu7ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_BFu7ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_BFu7ll");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "aS_BFu9s_BFu7ll");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "aS_BFu9s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_BFu7ll, aS_BFu9s_BFu7ll)
//============================================================================



static void Test_aS_BFu9s_BFu7s()
{
  {
    init_simple_test("aS_BFu9s_BFu7s");
    static STRUCT_IF_C aS_BFu9s_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aS_BFu9s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_BFu7s.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_BFu7s");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_BFu7s");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "aS_BFu9s_BFu7s");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "aS_BFu9s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_BFu7s, aS_BFu9s_BFu7s)
//============================================================================



static void Test_aS_BFu9s_BFu8c()
{
  {
    init_simple_test("aS_BFu9s_BFu8c");
    static STRUCT_IF_C aS_BFu9s_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_BFu8c.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_BFu8c");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_BFu8c");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "aS_BFu9s_BFu8c");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "aS_BFu9s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_BFu8c, aS_BFu9s_BFu8c)
//============================================================================



static void Test_aS_BFu9s_BFu8i()
{
  {
    init_simple_test("aS_BFu9s_BFu8i");
    static STRUCT_IF_C aS_BFu9s_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_BFu8i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_BFu8i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_BFu8i");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "aS_BFu9s_BFu8i");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "aS_BFu9s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_BFu8i, aS_BFu9s_BFu8i)
//============================================================================



static void Test_aS_BFu9s_BFu8ll()
{
  {
    init_simple_test("aS_BFu9s_BFu8ll");
    static STRUCT_IF_C aS_BFu9s_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_BFu8ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_BFu8ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_BFu8ll");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "aS_BFu9s_BFu8ll");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "aS_BFu9s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_BFu8ll, aS_BFu9s_BFu8ll)
//============================================================================



static void Test_aS_BFu9s_BFu8s()
{
  {
    init_simple_test("aS_BFu9s_BFu8s");
    static STRUCT_IF_C aS_BFu9s_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_BFu8s.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_BFu8s");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_BFu8s");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "aS_BFu9s_BFu8s");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "aS_BFu9s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_BFu8s, aS_BFu9s_BFu8s)
//============================================================================



static void Test_aS_BFu9s_BFu9i()
{
  {
    init_simple_test("aS_BFu9s_BFu9i");
    static STRUCT_IF_C aS_BFu9s_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_BFu9i.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_BFu9i");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_BFu9i");
    set_bf_and_test(lv, v3, 3, 1, 9, 1, "aS_BFu9s_BFu9i");
    set_bf_and_test(lv, v3, 3, 1, 9, hide_ull(1LL<<8), "aS_BFu9s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_BFu9i, aS_BFu9s_BFu9i)
//============================================================================



static void Test_aS_BFu9s_BFu9ll()
{
  {
    init_simple_test("aS_BFu9s_BFu9ll");
    static STRUCT_IF_C aS_BFu9s_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_BFu9ll.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_BFu9ll");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_BFu9ll");
    set_bf_and_test(lv, v3, 3, 1, 9, 1, "aS_BFu9s_BFu9ll");
    set_bf_and_test(lv, v3, 3, 1, 9, hide_ull(1LL<<8), "aS_BFu9s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_BFu9ll, aS_BFu9s_BFu9ll)
//============================================================================



static void Test_aS_BFu9s_BFu9s()
{
  {
    init_simple_test("aS_BFu9s_BFu9s");
    static STRUCT_IF_C aS_BFu9s_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_BFu9s.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_BFu9s");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_BFu9s");
    set_bf_and_test(lv, v3, 3, 1, 9, 1, "aS_BFu9s_BFu9s");
    set_bf_and_test(lv, v3, 3, 1, 9, hide_ull(1LL<<8), "aS_BFu9s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_BFu9s, aS_BFu9s_BFu9s)
//============================================================================



static void Test_aS_BFu9s_C()
{
  {
    init_simple_test("aS_BFu9s_C");
    static STRUCT_IF_C aS_BFu9s_C lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9s_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_C)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_C.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_C");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_C");
    check_field_offset(lv, v3, 4, "aS_BFu9s_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_C, aS_BFu9s_C)
//============================================================================



static void Test_aS_BFu9s_D()
{
  {
    init_simple_test("aS_BFu9s_D");
    static STRUCT_IF_C aS_BFu9s_D lv;
    check2(sizeof(lv), 12, "sizeof(aS_BFu9s_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_D)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_D.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_D");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_D");
    check_field_offset(lv, v3, 4, "aS_BFu9s_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_D, aS_BFu9s_D)
//============================================================================



static void Test_aS_BFu9s_F()
{
  {
    init_simple_test("aS_BFu9s_F");
    static STRUCT_IF_C aS_BFu9s_F lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu9s_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_F)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_F.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_F");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_F");
    check_field_offset(lv, v3, 4, "aS_BFu9s_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_F, aS_BFu9s_F)
//============================================================================



static void Test_aS_BFu9s_I()
{
  {
    init_simple_test("aS_BFu9s_I");
    static STRUCT_IF_C aS_BFu9s_I lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu9s_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_I)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_I.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_I");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_I");
    check_field_offset(lv, v3, 4, "aS_BFu9s_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_I, aS_BFu9s_I)
//============================================================================



static void Test_aS_BFu9s_Ip()
{
  {
    init_simple_test("aS_BFu9s_Ip");
    static STRUCT_IF_C aS_BFu9s_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_BFu9s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_Ip)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_Ip.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_Ip");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_Ip");
    check_field_offset(lv, v3, 4, "aS_BFu9s_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_Ip, aS_BFu9s_Ip)
//============================================================================



static void Test_aS_BFu9s_L()
{
  {
    init_simple_test("aS_BFu9s_L");
    static STRUCT_IF_C aS_BFu9s_L lv;
    check2(sizeof(lv), 12, "sizeof(aS_BFu9s_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_L)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_L.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_L");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_L");
    check_field_offset(lv, v3, 4, "aS_BFu9s_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_L, aS_BFu9s_L)
//============================================================================



static void Test_aS_BFu9s_S()
{
  {
    init_simple_test("aS_BFu9s_S");
    static STRUCT_IF_C aS_BFu9s_S lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu9s_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_S)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_S.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_S");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_S");
    check_field_offset(lv, v3, 4, "aS_BFu9s_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_S, aS_BFu9s_S)
//============================================================================



static void Test_aS_BFu9s_Uc()
{
  {
    init_simple_test("aS_BFu9s_Uc");
    static STRUCT_IF_C aS_BFu9s_Uc lv;
    check2(sizeof(lv), 5, "sizeof(aS_BFu9s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_Uc)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_Uc.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_Uc");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_Uc");
    check_field_offset(lv, v3, 4, "aS_BFu9s_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_Uc, aS_BFu9s_Uc)
//============================================================================



static void Test_aS_BFu9s_Ui()
{
  {
    init_simple_test("aS_BFu9s_Ui");
    static STRUCT_IF_C aS_BFu9s_Ui lv;
    check2(sizeof(lv), 8, "sizeof(aS_BFu9s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_Ui)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_Ui.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_Ui");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_Ui");
    check_field_offset(lv, v3, 4, "aS_BFu9s_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_Ui, aS_BFu9s_Ui)
//============================================================================



static void Test_aS_BFu9s_Ul()
{
  {
    init_simple_test("aS_BFu9s_Ul");
    static STRUCT_IF_C aS_BFu9s_Ul lv;
    check2(sizeof(lv), 12, "sizeof(aS_BFu9s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_Ul)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_Ul.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_Ul");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_Ul");
    check_field_offset(lv, v3, 4, "aS_BFu9s_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_Ul, aS_BFu9s_Ul)
//============================================================================



static void Test_aS_BFu9s_Us()
{
  {
    init_simple_test("aS_BFu9s_Us");
    static STRUCT_IF_C aS_BFu9s_Us lv;
    check2(sizeof(lv), 6, "sizeof(aS_BFu9s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_Us)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_Us.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_Us");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_Us");
    check_field_offset(lv, v3, 4, "aS_BFu9s_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_Us, aS_BFu9s_Us)
//============================================================================



static void Test_aS_BFu9s_Vp()
{
  {
    init_simple_test("aS_BFu9s_Vp");
    static STRUCT_IF_C aS_BFu9s_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_BFu9s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_BFu9s_Vp)");
    check_field_offset(lv, v1, 0, "aS_BFu9s_Vp.v1");
    set_bf_and_test(lv, v2, 2, 0, 9, 1, "aS_BFu9s_Vp");
    set_bf_and_test(lv, v2, 2, 0, 9, hide_ull(1LL<<8), "aS_BFu9s_Vp");
    check_field_offset(lv, v3, 4, "aS_BFu9s_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_BFu9s_Vp, aS_BFu9s_Vp)
//============================================================================



static void Test_aS_C()
{
  {
    init_simple_test("aS_C");
    STRUCT_IF_C aS_C lv;
    check2(sizeof(lv), 3, "sizeof(aS_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C)");
    check_field_offset(lv, v1, 0, "aS_C.v1");
    check_field_offset(lv, v2, 2, "aS_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C, aS_C)
//============================================================================



static void Test_aS_C_BFu15i()
{
  {
    init_simple_test("aS_C_BFu15i");
    static STRUCT_IF_C aS_C_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aS_C_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_C_BFu15i.v1");
    check_field_offset(lv, v2, 2, "aS_C_BFu15i.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aS_C_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aS_C_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_BFu15i, aS_C_BFu15i)
//============================================================================



static void Test_aS_C_BFu15ll()
{
  {
    init_simple_test("aS_C_BFu15ll");
    static STRUCT_IF_C aS_C_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_C_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_C_BFu15ll.v1");
    check_field_offset(lv, v2, 2, "aS_C_BFu15ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aS_C_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aS_C_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_BFu15ll, aS_C_BFu15ll)
//============================================================================



static void Test_aS_C_BFu15s()
{
  {
    init_simple_test("aS_C_BFu15s");
    static STRUCT_IF_C aS_C_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aS_C_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_C_BFu15s.v1");
    check_field_offset(lv, v2, 2, "aS_C_BFu15s.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aS_C_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aS_C_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_BFu15s, aS_C_BFu15s)
//============================================================================



static void Test_aS_C_BFu16i()
{
  {
    init_simple_test("aS_C_BFu16i");
    static STRUCT_IF_C aS_C_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aS_C_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_C_BFu16i.v1");
    check_field_offset(lv, v2, 2, "aS_C_BFu16i.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aS_C_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aS_C_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_BFu16i, aS_C_BFu16i)
//============================================================================



static void Test_aS_C_BFu16ll()
{
  {
    init_simple_test("aS_C_BFu16ll");
    static STRUCT_IF_C aS_C_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_C_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_C_BFu16ll.v1");
    check_field_offset(lv, v2, 2, "aS_C_BFu16ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aS_C_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aS_C_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_BFu16ll, aS_C_BFu16ll)
//============================================================================



static void Test_aS_C_BFu16s()
{
  {
    init_simple_test("aS_C_BFu16s");
    static STRUCT_IF_C aS_C_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aS_C_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_C_BFu16s.v1");
    check_field_offset(lv, v2, 2, "aS_C_BFu16s.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aS_C_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aS_C_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_BFu16s, aS_C_BFu16s)
//============================================================================



static void Test_aS_C_BFu17i()
{
  {
    init_simple_test("aS_C_BFu17i");
    static STRUCT_IF_C aS_C_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(aS_C_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_C_BFu17i.v1");
    check_field_offset(lv, v2, 2, "aS_C_BFu17i.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aS_C_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aS_C_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_BFu17i, aS_C_BFu17i)
//============================================================================



static void Test_aS_C_BFu17ll()
{
  {
    init_simple_test("aS_C_BFu17ll");
    static STRUCT_IF_C aS_C_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_C_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_C_BFu17ll.v1");
    check_field_offset(lv, v2, 2, "aS_C_BFu17ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aS_C_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aS_C_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_BFu17ll, aS_C_BFu17ll)
//============================================================================



static void Test_aS_C_BFu1c()
{
  {
    init_simple_test("aS_C_BFu1c");
    static STRUCT_IF_C aS_C_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(aS_C_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_C_BFu1c.v1");
    check_field_offset(lv, v2, 2, "aS_C_BFu1c.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aS_C_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_BFu1c, aS_C_BFu1c)
//============================================================================



static void Test_aS_C_BFu1i()
{
  {
    init_simple_test("aS_C_BFu1i");
    static STRUCT_IF_C aS_C_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(aS_C_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_C_BFu1i.v1");
    check_field_offset(lv, v2, 2, "aS_C_BFu1i.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aS_C_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_BFu1i, aS_C_BFu1i)
//============================================================================



static void Test_aS_C_BFu1ll()
{
  {
    init_simple_test("aS_C_BFu1ll");
    static STRUCT_IF_C aS_C_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_C_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_C_BFu1ll.v1");
    check_field_offset(lv, v2, 2, "aS_C_BFu1ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aS_C_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_BFu1ll, aS_C_BFu1ll)
//============================================================================



static void Test_aS_C_BFu1s()
{
  {
    init_simple_test("aS_C_BFu1s");
    static STRUCT_IF_C aS_C_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(aS_C_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_C_BFu1s.v1");
    check_field_offset(lv, v2, 2, "aS_C_BFu1s.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aS_C_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_BFu1s, aS_C_BFu1s)
//============================================================================



static void Test_aS_C_BFu31i()
{
  {
    init_simple_test("aS_C_BFu31i");
    static STRUCT_IF_C aS_C_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aS_C_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_C_BFu31i.v1");
    check_field_offset(lv, v2, 2, "aS_C_BFu31i.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aS_C_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aS_C_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_BFu31i, aS_C_BFu31i)
//============================================================================



static void Test_aS_C_BFu31ll()
{
  {
    init_simple_test("aS_C_BFu31ll");
    static STRUCT_IF_C aS_C_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_C_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_C_BFu31ll.v1");
    check_field_offset(lv, v2, 2, "aS_C_BFu31ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aS_C_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aS_C_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_BFu31ll, aS_C_BFu31ll)
//============================================================================



static void Test_aS_C_BFu32i()
{
  {
    init_simple_test("aS_C_BFu32i");
    static STRUCT_IF_C aS_C_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aS_C_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_C_BFu32i.v1");
    check_field_offset(lv, v2, 2, "aS_C_BFu32i.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aS_C_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aS_C_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_BFu32i, aS_C_BFu32i)
//============================================================================



static void Test_aS_C_BFu32ll()
{
  {
    init_simple_test("aS_C_BFu32ll");
    static STRUCT_IF_C aS_C_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_C_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_C_BFu32ll.v1");
    check_field_offset(lv, v2, 2, "aS_C_BFu32ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aS_C_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aS_C_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_BFu32ll, aS_C_BFu32ll)
//============================================================================



static void Test_aS_C_BFu33()
{
  {
    init_simple_test("aS_C_BFu33");
    static STRUCT_IF_C aS_C_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(aS_C_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_BFu33)");
    check_field_offset(lv, v1, 0, "aS_C_BFu33.v1");
    check_field_offset(lv, v2, 2, "aS_C_BFu33.v2");
    set_bf_and_test(lv, v3, 3, 0, 33, 1, "aS_C_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, hide_ull(1LL<<32), "aS_C_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_BFu33, aS_C_BFu33)
//============================================================================



static void Test_aS_C_BFu7c()
{
  {
    init_simple_test("aS_C_BFu7c");
    static STRUCT_IF_C aS_C_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aS_C_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_C_BFu7c.v1");
    check_field_offset(lv, v2, 2, "aS_C_BFu7c.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aS_C_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aS_C_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_BFu7c, aS_C_BFu7c)
//============================================================================



static void Test_aS_C_BFu7i()
{
  {
    init_simple_test("aS_C_BFu7i");
    static STRUCT_IF_C aS_C_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aS_C_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_C_BFu7i.v1");
    check_field_offset(lv, v2, 2, "aS_C_BFu7i.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aS_C_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aS_C_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_BFu7i, aS_C_BFu7i)
//============================================================================



static void Test_aS_C_BFu7ll()
{
  {
    init_simple_test("aS_C_BFu7ll");
    static STRUCT_IF_C aS_C_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_C_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_C_BFu7ll.v1");
    check_field_offset(lv, v2, 2, "aS_C_BFu7ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aS_C_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aS_C_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_BFu7ll, aS_C_BFu7ll)
//============================================================================



static void Test_aS_C_BFu7s()
{
  {
    init_simple_test("aS_C_BFu7s");
    static STRUCT_IF_C aS_C_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aS_C_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_C_BFu7s.v1");
    check_field_offset(lv, v2, 2, "aS_C_BFu7s.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aS_C_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aS_C_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_BFu7s, aS_C_BFu7s)
//============================================================================



static void Test_aS_C_BFu8c()
{
  {
    init_simple_test("aS_C_BFu8c");
    static STRUCT_IF_C aS_C_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aS_C_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_C_BFu8c.v1");
    check_field_offset(lv, v2, 2, "aS_C_BFu8c.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aS_C_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aS_C_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_BFu8c, aS_C_BFu8c)
//============================================================================



static void Test_aS_C_BFu8i()
{
  {
    init_simple_test("aS_C_BFu8i");
    static STRUCT_IF_C aS_C_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aS_C_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_C_BFu8i.v1");
    check_field_offset(lv, v2, 2, "aS_C_BFu8i.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aS_C_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aS_C_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_BFu8i, aS_C_BFu8i)
//============================================================================



static void Test_aS_C_BFu8ll()
{
  {
    init_simple_test("aS_C_BFu8ll");
    static STRUCT_IF_C aS_C_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_C_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_C_BFu8ll.v1");
    check_field_offset(lv, v2, 2, "aS_C_BFu8ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aS_C_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aS_C_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_BFu8ll, aS_C_BFu8ll)
//============================================================================



static void Test_aS_C_BFu8s()
{
  {
    init_simple_test("aS_C_BFu8s");
    static STRUCT_IF_C aS_C_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aS_C_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_C_BFu8s.v1");
    check_field_offset(lv, v2, 2, "aS_C_BFu8s.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aS_C_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aS_C_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_BFu8s, aS_C_BFu8s)
//============================================================================



static void Test_aS_C_BFu9i()
{
  {
    init_simple_test("aS_C_BFu9i");
    static STRUCT_IF_C aS_C_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(aS_C_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_C_BFu9i.v1");
    check_field_offset(lv, v2, 2, "aS_C_BFu9i.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aS_C_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aS_C_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_BFu9i, aS_C_BFu9i)
//============================================================================



static void Test_aS_C_BFu9ll()
{
  {
    init_simple_test("aS_C_BFu9ll");
    static STRUCT_IF_C aS_C_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_C_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_C_BFu9ll.v1");
    check_field_offset(lv, v2, 2, "aS_C_BFu9ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aS_C_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aS_C_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_BFu9ll, aS_C_BFu9ll)
//============================================================================



static void Test_aS_C_BFu9s()
{
  {
    init_simple_test("aS_C_BFu9s");
    static STRUCT_IF_C aS_C_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(aS_C_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_C_BFu9s.v1");
    check_field_offset(lv, v2, 2, "aS_C_BFu9s.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aS_C_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aS_C_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_BFu9s, aS_C_BFu9s)
//============================================================================



static void Test_aS_C_C()
{
  {
    init_simple_test("aS_C_C");
    STRUCT_IF_C aS_C_C lv;
    check2(sizeof(lv), 4, "sizeof(aS_C_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_C)");
    check_field_offset(lv, v1, 0, "aS_C_C.v1");
    check_field_offset(lv, v2, 2, "aS_C_C.v2");
    check_field_offset(lv, v3, 3, "aS_C_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_C, aS_C_C)
//============================================================================



static void Test_aS_C_D()
{
  {
    init_simple_test("aS_C_D");
    STRUCT_IF_C aS_C_D lv;
    check2(sizeof(lv), 11, "sizeof(aS_C_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_D)");
    check_field_offset(lv, v1, 0, "aS_C_D.v1");
    check_field_offset(lv, v2, 2, "aS_C_D.v2");
    check_field_offset(lv, v3, 3, "aS_C_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_D, aS_C_D)
//============================================================================



static void Test_aS_C_F()
{
  {
    init_simple_test("aS_C_F");
    STRUCT_IF_C aS_C_F lv;
    check2(sizeof(lv), 7, "sizeof(aS_C_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_F)");
    check_field_offset(lv, v1, 0, "aS_C_F.v1");
    check_field_offset(lv, v2, 2, "aS_C_F.v2");
    check_field_offset(lv, v3, 3, "aS_C_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_F, aS_C_F)
//============================================================================



static void Test_aS_C_I()
{
  {
    init_simple_test("aS_C_I");
    STRUCT_IF_C aS_C_I lv;
    check2(sizeof(lv), 7, "sizeof(aS_C_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_I)");
    check_field_offset(lv, v1, 0, "aS_C_I.v1");
    check_field_offset(lv, v2, 2, "aS_C_I.v2");
    check_field_offset(lv, v3, 3, "aS_C_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_I, aS_C_I)
//============================================================================



static void Test_aS_C_Ip()
{
  {
    init_simple_test("aS_C_Ip");
    STRUCT_IF_C aS_C_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_C_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_Ip)");
    check_field_offset(lv, v1, 0, "aS_C_Ip.v1");
    check_field_offset(lv, v2, 2, "aS_C_Ip.v2");
    check_field_offset(lv, v3, 3, "aS_C_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_Ip, aS_C_Ip)
//============================================================================



static void Test_aS_C_L()
{
  {
    init_simple_test("aS_C_L");
    STRUCT_IF_C aS_C_L lv;
    check2(sizeof(lv), 11, "sizeof(aS_C_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_L)");
    check_field_offset(lv, v1, 0, "aS_C_L.v1");
    check_field_offset(lv, v2, 2, "aS_C_L.v2");
    check_field_offset(lv, v3, 3, "aS_C_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_L, aS_C_L)
//============================================================================



static void Test_aS_C_S()
{
  {
    init_simple_test("aS_C_S");
    STRUCT_IF_C aS_C_S lv;
    check2(sizeof(lv), 5, "sizeof(aS_C_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_S)");
    check_field_offset(lv, v1, 0, "aS_C_S.v1");
    check_field_offset(lv, v2, 2, "aS_C_S.v2");
    check_field_offset(lv, v3, 3, "aS_C_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_S, aS_C_S)
//============================================================================



static void Test_aS_C_Uc()
{
  {
    init_simple_test("aS_C_Uc");
    STRUCT_IF_C aS_C_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aS_C_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_Uc)");
    check_field_offset(lv, v1, 0, "aS_C_Uc.v1");
    check_field_offset(lv, v2, 2, "aS_C_Uc.v2");
    check_field_offset(lv, v3, 3, "aS_C_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_Uc, aS_C_Uc)
//============================================================================



static void Test_aS_C_Ui()
{
  {
    init_simple_test("aS_C_Ui");
    STRUCT_IF_C aS_C_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aS_C_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_Ui)");
    check_field_offset(lv, v1, 0, "aS_C_Ui.v1");
    check_field_offset(lv, v2, 2, "aS_C_Ui.v2");
    check_field_offset(lv, v3, 3, "aS_C_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_Ui, aS_C_Ui)
//============================================================================



static void Test_aS_C_Ul()
{
  {
    init_simple_test("aS_C_Ul");
    STRUCT_IF_C aS_C_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aS_C_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_Ul)");
    check_field_offset(lv, v1, 0, "aS_C_Ul.v1");
    check_field_offset(lv, v2, 2, "aS_C_Ul.v2");
    check_field_offset(lv, v3, 3, "aS_C_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_Ul, aS_C_Ul)
//============================================================================



static void Test_aS_C_Us()
{
  {
    init_simple_test("aS_C_Us");
    STRUCT_IF_C aS_C_Us lv;
    check2(sizeof(lv), 5, "sizeof(aS_C_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_Us)");
    check_field_offset(lv, v1, 0, "aS_C_Us.v1");
    check_field_offset(lv, v2, 2, "aS_C_Us.v2");
    check_field_offset(lv, v3, 3, "aS_C_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_Us, aS_C_Us)
//============================================================================



static void Test_aS_C_Vp()
{
  {
    init_simple_test("aS_C_Vp");
    STRUCT_IF_C aS_C_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_C_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_C_Vp)");
    check_field_offset(lv, v1, 0, "aS_C_Vp.v1");
    check_field_offset(lv, v2, 2, "aS_C_Vp.v2");
    check_field_offset(lv, v3, 3, "aS_C_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_C_Vp, aS_C_Vp)
//============================================================================



static void Test_aS_D()
{
  {
    init_simple_test("aS_D");
    STRUCT_IF_C aS_D lv;
    check2(sizeof(lv), 10, "sizeof(aS_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D)");
    check_field_offset(lv, v1, 0, "aS_D.v1");
    check_field_offset(lv, v2, 2, "aS_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D, aS_D)
//============================================================================



static void Test_aS_D_BFu15i()
{
  {
    init_simple_test("aS_D_BFu15i");
    static STRUCT_IF_C aS_D_BFu15i lv;
    check2(sizeof(lv), 12, "sizeof(aS_D_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_D_BFu15i.v1");
    check_field_offset(lv, v2, 2, "aS_D_BFu15i.v2");
    set_bf_and_test(lv, v3, 10, 0, 15, 1, "aS_D_BFu15i");
    set_bf_and_test(lv, v3, 10, 0, 15, hide_ull(1LL<<14), "aS_D_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_BFu15i, aS_D_BFu15i)
//============================================================================



static void Test_aS_D_BFu15ll()
{
  {
    init_simple_test("aS_D_BFu15ll");
    static STRUCT_IF_C aS_D_BFu15ll lv;
    check2(sizeof(lv), 12, "sizeof(aS_D_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_D_BFu15ll.v1");
    check_field_offset(lv, v2, 2, "aS_D_BFu15ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 15, 1, "aS_D_BFu15ll");
    set_bf_and_test(lv, v3, 10, 0, 15, hide_ull(1LL<<14), "aS_D_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_BFu15ll, aS_D_BFu15ll)
//============================================================================



static void Test_aS_D_BFu15s()
{
  {
    init_simple_test("aS_D_BFu15s");
    static STRUCT_IF_C aS_D_BFu15s lv;
    check2(sizeof(lv), 12, "sizeof(aS_D_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_D_BFu15s.v1");
    check_field_offset(lv, v2, 2, "aS_D_BFu15s.v2");
    set_bf_and_test(lv, v3, 10, 0, 15, 1, "aS_D_BFu15s");
    set_bf_and_test(lv, v3, 10, 0, 15, hide_ull(1LL<<14), "aS_D_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_BFu15s, aS_D_BFu15s)
//============================================================================



static void Test_aS_D_BFu16i()
{
  {
    init_simple_test("aS_D_BFu16i");
    static STRUCT_IF_C aS_D_BFu16i lv;
    check2(sizeof(lv), 12, "sizeof(aS_D_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_D_BFu16i.v1");
    check_field_offset(lv, v2, 2, "aS_D_BFu16i.v2");
    set_bf_and_test(lv, v3, 10, 0, 16, 1, "aS_D_BFu16i");
    set_bf_and_test(lv, v3, 10, 0, 16, hide_ull(1LL<<15), "aS_D_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_BFu16i, aS_D_BFu16i)
//============================================================================



static void Test_aS_D_BFu16ll()
{
  {
    init_simple_test("aS_D_BFu16ll");
    static STRUCT_IF_C aS_D_BFu16ll lv;
    check2(sizeof(lv), 12, "sizeof(aS_D_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_D_BFu16ll.v1");
    check_field_offset(lv, v2, 2, "aS_D_BFu16ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 16, 1, "aS_D_BFu16ll");
    set_bf_and_test(lv, v3, 10, 0, 16, hide_ull(1LL<<15), "aS_D_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_BFu16ll, aS_D_BFu16ll)
//============================================================================



static void Test_aS_D_BFu16s()
{
  {
    init_simple_test("aS_D_BFu16s");
    static STRUCT_IF_C aS_D_BFu16s lv;
    check2(sizeof(lv), 12, "sizeof(aS_D_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_D_BFu16s.v1");
    check_field_offset(lv, v2, 2, "aS_D_BFu16s.v2");
    set_bf_and_test(lv, v3, 10, 0, 16, 1, "aS_D_BFu16s");
    set_bf_and_test(lv, v3, 10, 0, 16, hide_ull(1LL<<15), "aS_D_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_BFu16s, aS_D_BFu16s)
//============================================================================



static void Test_aS_D_BFu17i()
{
  {
    init_simple_test("aS_D_BFu17i");
    static STRUCT_IF_C aS_D_BFu17i lv;
    check2(sizeof(lv), 13, "sizeof(aS_D_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_D_BFu17i.v1");
    check_field_offset(lv, v2, 2, "aS_D_BFu17i.v2");
    set_bf_and_test(lv, v3, 10, 0, 17, 1, "aS_D_BFu17i");
    set_bf_and_test(lv, v3, 10, 0, 17, hide_ull(1LL<<16), "aS_D_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_BFu17i, aS_D_BFu17i)
//============================================================================



static void Test_aS_D_BFu17ll()
{
  {
    init_simple_test("aS_D_BFu17ll");
    static STRUCT_IF_C aS_D_BFu17ll lv;
    check2(sizeof(lv), 13, "sizeof(aS_D_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_D_BFu17ll.v1");
    check_field_offset(lv, v2, 2, "aS_D_BFu17ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 17, 1, "aS_D_BFu17ll");
    set_bf_and_test(lv, v3, 10, 0, 17, hide_ull(1LL<<16), "aS_D_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_BFu17ll, aS_D_BFu17ll)
//============================================================================



static void Test_aS_D_BFu1c()
{
  {
    init_simple_test("aS_D_BFu1c");
    static STRUCT_IF_C aS_D_BFu1c lv;
    check2(sizeof(lv), 11, "sizeof(aS_D_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_D_BFu1c.v1");
    check_field_offset(lv, v2, 2, "aS_D_BFu1c.v2");
    set_bf_and_test(lv, v3, 10, 0, 1, 1, "aS_D_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_BFu1c, aS_D_BFu1c)
//============================================================================



static void Test_aS_D_BFu1i()
{
  {
    init_simple_test("aS_D_BFu1i");
    static STRUCT_IF_C aS_D_BFu1i lv;
    check2(sizeof(lv), 11, "sizeof(aS_D_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_D_BFu1i.v1");
    check_field_offset(lv, v2, 2, "aS_D_BFu1i.v2");
    set_bf_and_test(lv, v3, 10, 0, 1, 1, "aS_D_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_BFu1i, aS_D_BFu1i)
//============================================================================



static void Test_aS_D_BFu1ll()
{
  {
    init_simple_test("aS_D_BFu1ll");
    static STRUCT_IF_C aS_D_BFu1ll lv;
    check2(sizeof(lv), 11, "sizeof(aS_D_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_D_BFu1ll.v1");
    check_field_offset(lv, v2, 2, "aS_D_BFu1ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 1, 1, "aS_D_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_BFu1ll, aS_D_BFu1ll)
//============================================================================



static void Test_aS_D_BFu1s()
{
  {
    init_simple_test("aS_D_BFu1s");
    static STRUCT_IF_C aS_D_BFu1s lv;
    check2(sizeof(lv), 11, "sizeof(aS_D_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_D_BFu1s.v1");
    check_field_offset(lv, v2, 2, "aS_D_BFu1s.v2");
    set_bf_and_test(lv, v3, 10, 0, 1, 1, "aS_D_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_BFu1s, aS_D_BFu1s)
//============================================================================



static void Test_aS_D_BFu31i()
{
  {
    init_simple_test("aS_D_BFu31i");
    static STRUCT_IF_C aS_D_BFu31i lv;
    check2(sizeof(lv), 14, "sizeof(aS_D_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_D_BFu31i.v1");
    check_field_offset(lv, v2, 2, "aS_D_BFu31i.v2");
    set_bf_and_test(lv, v3, 10, 0, 31, 1, "aS_D_BFu31i");
    set_bf_and_test(lv, v3, 10, 0, 31, hide_ull(1LL<<30), "aS_D_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_BFu31i, aS_D_BFu31i)
//============================================================================



static void Test_aS_D_BFu31ll()
{
  {
    init_simple_test("aS_D_BFu31ll");
    static STRUCT_IF_C aS_D_BFu31ll lv;
    check2(sizeof(lv), 14, "sizeof(aS_D_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_D_BFu31ll.v1");
    check_field_offset(lv, v2, 2, "aS_D_BFu31ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 31, 1, "aS_D_BFu31ll");
    set_bf_and_test(lv, v3, 10, 0, 31, hide_ull(1LL<<30), "aS_D_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_BFu31ll, aS_D_BFu31ll)
//============================================================================



static void Test_aS_D_BFu32i()
{
  {
    init_simple_test("aS_D_BFu32i");
    static STRUCT_IF_C aS_D_BFu32i lv;
    check2(sizeof(lv), 14, "sizeof(aS_D_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_D_BFu32i.v1");
    check_field_offset(lv, v2, 2, "aS_D_BFu32i.v2");
    set_bf_and_test(lv, v3, 10, 0, 32, 1, "aS_D_BFu32i");
    set_bf_and_test(lv, v3, 10, 0, 32, hide_ull(1LL<<31), "aS_D_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_BFu32i, aS_D_BFu32i)
//============================================================================



static void Test_aS_D_BFu32ll()
{
  {
    init_simple_test("aS_D_BFu32ll");
    static STRUCT_IF_C aS_D_BFu32ll lv;
    check2(sizeof(lv), 14, "sizeof(aS_D_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_D_BFu32ll.v1");
    check_field_offset(lv, v2, 2, "aS_D_BFu32ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 32, 1, "aS_D_BFu32ll");
    set_bf_and_test(lv, v3, 10, 0, 32, hide_ull(1LL<<31), "aS_D_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_BFu32ll, aS_D_BFu32ll)
//============================================================================



static void Test_aS_D_BFu33()
{
  {
    init_simple_test("aS_D_BFu33");
    static STRUCT_IF_C aS_D_BFu33 lv;
    check2(sizeof(lv), 15, "sizeof(aS_D_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_BFu33)");
    check_field_offset(lv, v1, 0, "aS_D_BFu33.v1");
    check_field_offset(lv, v2, 2, "aS_D_BFu33.v2");
    set_bf_and_test(lv, v3, 10, 0, 33, 1, "aS_D_BFu33");
    set_bf_and_test(lv, v3, 10, 0, 33, hide_ull(1LL<<32), "aS_D_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_BFu33, aS_D_BFu33)
//============================================================================



static void Test_aS_D_BFu7c()
{
  {
    init_simple_test("aS_D_BFu7c");
    static STRUCT_IF_C aS_D_BFu7c lv;
    check2(sizeof(lv), 11, "sizeof(aS_D_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_D_BFu7c.v1");
    check_field_offset(lv, v2, 2, "aS_D_BFu7c.v2");
    set_bf_and_test(lv, v3, 10, 0, 7, 1, "aS_D_BFu7c");
    set_bf_and_test(lv, v3, 10, 0, 7, hide_ull(1LL<<6), "aS_D_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_BFu7c, aS_D_BFu7c)
//============================================================================



static void Test_aS_D_BFu7i()
{
  {
    init_simple_test("aS_D_BFu7i");
    static STRUCT_IF_C aS_D_BFu7i lv;
    check2(sizeof(lv), 11, "sizeof(aS_D_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_D_BFu7i.v1");
    check_field_offset(lv, v2, 2, "aS_D_BFu7i.v2");
    set_bf_and_test(lv, v3, 10, 0, 7, 1, "aS_D_BFu7i");
    set_bf_and_test(lv, v3, 10, 0, 7, hide_ull(1LL<<6), "aS_D_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_BFu7i, aS_D_BFu7i)
//============================================================================



static void Test_aS_D_BFu7ll()
{
  {
    init_simple_test("aS_D_BFu7ll");
    static STRUCT_IF_C aS_D_BFu7ll lv;
    check2(sizeof(lv), 11, "sizeof(aS_D_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_D_BFu7ll.v1");
    check_field_offset(lv, v2, 2, "aS_D_BFu7ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 7, 1, "aS_D_BFu7ll");
    set_bf_and_test(lv, v3, 10, 0, 7, hide_ull(1LL<<6), "aS_D_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_BFu7ll, aS_D_BFu7ll)
//============================================================================



static void Test_aS_D_BFu7s()
{
  {
    init_simple_test("aS_D_BFu7s");
    static STRUCT_IF_C aS_D_BFu7s lv;
    check2(sizeof(lv), 11, "sizeof(aS_D_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_D_BFu7s.v1");
    check_field_offset(lv, v2, 2, "aS_D_BFu7s.v2");
    set_bf_and_test(lv, v3, 10, 0, 7, 1, "aS_D_BFu7s");
    set_bf_and_test(lv, v3, 10, 0, 7, hide_ull(1LL<<6), "aS_D_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_BFu7s, aS_D_BFu7s)
//============================================================================



static void Test_aS_D_BFu8c()
{
  {
    init_simple_test("aS_D_BFu8c");
    static STRUCT_IF_C aS_D_BFu8c lv;
    check2(sizeof(lv), 11, "sizeof(aS_D_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_D_BFu8c.v1");
    check_field_offset(lv, v2, 2, "aS_D_BFu8c.v2");
    set_bf_and_test(lv, v3, 10, 0, 8, 1, "aS_D_BFu8c");
    set_bf_and_test(lv, v3, 10, 0, 8, hide_ull(1LL<<7), "aS_D_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_BFu8c, aS_D_BFu8c)
//============================================================================



static void Test_aS_D_BFu8i()
{
  {
    init_simple_test("aS_D_BFu8i");
    static STRUCT_IF_C aS_D_BFu8i lv;
    check2(sizeof(lv), 11, "sizeof(aS_D_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_D_BFu8i.v1");
    check_field_offset(lv, v2, 2, "aS_D_BFu8i.v2");
    set_bf_and_test(lv, v3, 10, 0, 8, 1, "aS_D_BFu8i");
    set_bf_and_test(lv, v3, 10, 0, 8, hide_ull(1LL<<7), "aS_D_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_BFu8i, aS_D_BFu8i)
//============================================================================



static void Test_aS_D_BFu8ll()
{
  {
    init_simple_test("aS_D_BFu8ll");
    static STRUCT_IF_C aS_D_BFu8ll lv;
    check2(sizeof(lv), 11, "sizeof(aS_D_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_D_BFu8ll.v1");
    check_field_offset(lv, v2, 2, "aS_D_BFu8ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 8, 1, "aS_D_BFu8ll");
    set_bf_and_test(lv, v3, 10, 0, 8, hide_ull(1LL<<7), "aS_D_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_BFu8ll, aS_D_BFu8ll)
//============================================================================



static void Test_aS_D_BFu8s()
{
  {
    init_simple_test("aS_D_BFu8s");
    static STRUCT_IF_C aS_D_BFu8s lv;
    check2(sizeof(lv), 11, "sizeof(aS_D_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_D_BFu8s.v1");
    check_field_offset(lv, v2, 2, "aS_D_BFu8s.v2");
    set_bf_and_test(lv, v3, 10, 0, 8, 1, "aS_D_BFu8s");
    set_bf_and_test(lv, v3, 10, 0, 8, hide_ull(1LL<<7), "aS_D_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_BFu8s, aS_D_BFu8s)
//============================================================================



static void Test_aS_D_BFu9i()
{
  {
    init_simple_test("aS_D_BFu9i");
    static STRUCT_IF_C aS_D_BFu9i lv;
    check2(sizeof(lv), 12, "sizeof(aS_D_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_D_BFu9i.v1");
    check_field_offset(lv, v2, 2, "aS_D_BFu9i.v2");
    set_bf_and_test(lv, v3, 10, 0, 9, 1, "aS_D_BFu9i");
    set_bf_and_test(lv, v3, 10, 0, 9, hide_ull(1LL<<8), "aS_D_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_BFu9i, aS_D_BFu9i)
//============================================================================



static void Test_aS_D_BFu9ll()
{
  {
    init_simple_test("aS_D_BFu9ll");
    static STRUCT_IF_C aS_D_BFu9ll lv;
    check2(sizeof(lv), 12, "sizeof(aS_D_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_D_BFu9ll.v1");
    check_field_offset(lv, v2, 2, "aS_D_BFu9ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 9, 1, "aS_D_BFu9ll");
    set_bf_and_test(lv, v3, 10, 0, 9, hide_ull(1LL<<8), "aS_D_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_BFu9ll, aS_D_BFu9ll)
//============================================================================



static void Test_aS_D_BFu9s()
{
  {
    init_simple_test("aS_D_BFu9s");
    static STRUCT_IF_C aS_D_BFu9s lv;
    check2(sizeof(lv), 12, "sizeof(aS_D_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_D_BFu9s.v1");
    check_field_offset(lv, v2, 2, "aS_D_BFu9s.v2");
    set_bf_and_test(lv, v3, 10, 0, 9, 1, "aS_D_BFu9s");
    set_bf_and_test(lv, v3, 10, 0, 9, hide_ull(1LL<<8), "aS_D_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_BFu9s, aS_D_BFu9s)
//============================================================================



static void Test_aS_D_C()
{
  {
    init_simple_test("aS_D_C");
    STRUCT_IF_C aS_D_C lv;
    check2(sizeof(lv), 11, "sizeof(aS_D_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_C)");
    check_field_offset(lv, v1, 0, "aS_D_C.v1");
    check_field_offset(lv, v2, 2, "aS_D_C.v2");
    check_field_offset(lv, v3, 10, "aS_D_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_C, aS_D_C)
//============================================================================



static void Test_aS_D_D()
{
  {
    init_simple_test("aS_D_D");
    STRUCT_IF_C aS_D_D lv;
    check2(sizeof(lv), 18, "sizeof(aS_D_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_D)");
    check_field_offset(lv, v1, 0, "aS_D_D.v1");
    check_field_offset(lv, v2, 2, "aS_D_D.v2");
    check_field_offset(lv, v3, 10, "aS_D_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_D, aS_D_D)
//============================================================================



static void Test_aS_D_F()
{
  {
    init_simple_test("aS_D_F");
    STRUCT_IF_C aS_D_F lv;
    check2(sizeof(lv), 14, "sizeof(aS_D_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_F)");
    check_field_offset(lv, v1, 0, "aS_D_F.v1");
    check_field_offset(lv, v2, 2, "aS_D_F.v2");
    check_field_offset(lv, v3, 10, "aS_D_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_F, aS_D_F)
//============================================================================



static void Test_aS_D_I()
{
  {
    init_simple_test("aS_D_I");
    STRUCT_IF_C aS_D_I lv;
    check2(sizeof(lv), 14, "sizeof(aS_D_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_I)");
    check_field_offset(lv, v1, 0, "aS_D_I.v1");
    check_field_offset(lv, v2, 2, "aS_D_I.v2");
    check_field_offset(lv, v3, 10, "aS_D_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_I, aS_D_I)
//============================================================================



static void Test_aS_D_Ip()
{
  {
    init_simple_test("aS_D_Ip");
    STRUCT_IF_C aS_D_Ip lv;
    check2(sizeof(lv), ABISELECT(18,14), "sizeof(aS_D_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_Ip)");
    check_field_offset(lv, v1, 0, "aS_D_Ip.v1");
    check_field_offset(lv, v2, 2, "aS_D_Ip.v2");
    check_field_offset(lv, v3, 10, "aS_D_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_Ip, aS_D_Ip)
//============================================================================



static void Test_aS_D_L()
{
  {
    init_simple_test("aS_D_L");
    STRUCT_IF_C aS_D_L lv;
    check2(sizeof(lv), 18, "sizeof(aS_D_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_L)");
    check_field_offset(lv, v1, 0, "aS_D_L.v1");
    check_field_offset(lv, v2, 2, "aS_D_L.v2");
    check_field_offset(lv, v3, 10, "aS_D_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_L, aS_D_L)
//============================================================================



static void Test_aS_D_S()
{
  {
    init_simple_test("aS_D_S");
    STRUCT_IF_C aS_D_S lv;
    check2(sizeof(lv), 12, "sizeof(aS_D_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_S)");
    check_field_offset(lv, v1, 0, "aS_D_S.v1");
    check_field_offset(lv, v2, 2, "aS_D_S.v2");
    check_field_offset(lv, v3, 10, "aS_D_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_S, aS_D_S)
//============================================================================



static void Test_aS_D_Uc()
{
  {
    init_simple_test("aS_D_Uc");
    STRUCT_IF_C aS_D_Uc lv;
    check2(sizeof(lv), 11, "sizeof(aS_D_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_Uc)");
    check_field_offset(lv, v1, 0, "aS_D_Uc.v1");
    check_field_offset(lv, v2, 2, "aS_D_Uc.v2");
    check_field_offset(lv, v3, 10, "aS_D_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_Uc, aS_D_Uc)
//============================================================================



static void Test_aS_D_Ui()
{
  {
    init_simple_test("aS_D_Ui");
    STRUCT_IF_C aS_D_Ui lv;
    check2(sizeof(lv), 14, "sizeof(aS_D_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_Ui)");
    check_field_offset(lv, v1, 0, "aS_D_Ui.v1");
    check_field_offset(lv, v2, 2, "aS_D_Ui.v2");
    check_field_offset(lv, v3, 10, "aS_D_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_Ui, aS_D_Ui)
//============================================================================



static void Test_aS_D_Ul()
{
  {
    init_simple_test("aS_D_Ul");
    STRUCT_IF_C aS_D_Ul lv;
    check2(sizeof(lv), 18, "sizeof(aS_D_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_Ul)");
    check_field_offset(lv, v1, 0, "aS_D_Ul.v1");
    check_field_offset(lv, v2, 2, "aS_D_Ul.v2");
    check_field_offset(lv, v3, 10, "aS_D_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_Ul, aS_D_Ul)
//============================================================================



static void Test_aS_D_Us()
{
  {
    init_simple_test("aS_D_Us");
    STRUCT_IF_C aS_D_Us lv;
    check2(sizeof(lv), 12, "sizeof(aS_D_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_Us)");
    check_field_offset(lv, v1, 0, "aS_D_Us.v1");
    check_field_offset(lv, v2, 2, "aS_D_Us.v2");
    check_field_offset(lv, v3, 10, "aS_D_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_Us, aS_D_Us)
//============================================================================



static void Test_aS_D_Vp()
{
  {
    init_simple_test("aS_D_Vp");
    STRUCT_IF_C aS_D_Vp lv;
    check2(sizeof(lv), ABISELECT(18,14), "sizeof(aS_D_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_D_Vp)");
    check_field_offset(lv, v1, 0, "aS_D_Vp.v1");
    check_field_offset(lv, v2, 2, "aS_D_Vp.v2");
    check_field_offset(lv, v3, 10, "aS_D_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_D_Vp, aS_D_Vp)
//============================================================================



static void Test_aS_F()
{
  {
    init_simple_test("aS_F");
    STRUCT_IF_C aS_F lv;
    check2(sizeof(lv), 6, "sizeof(aS_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F)");
    check_field_offset(lv, v1, 0, "aS_F.v1");
    check_field_offset(lv, v2, 2, "aS_F.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F, aS_F)
//============================================================================



static void Test_aS_F_BFu15i()
{
  {
    init_simple_test("aS_F_BFu15i");
    static STRUCT_IF_C aS_F_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aS_F_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_F_BFu15i.v1");
    check_field_offset(lv, v2, 2, "aS_F_BFu15i.v2");
    set_bf_and_test(lv, v3, 6, 0, 15, 1, "aS_F_BFu15i");
    set_bf_and_test(lv, v3, 6, 0, 15, hide_ull(1LL<<14), "aS_F_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_BFu15i, aS_F_BFu15i)
//============================================================================



static void Test_aS_F_BFu15ll()
{
  {
    init_simple_test("aS_F_BFu15ll");
    static STRUCT_IF_C aS_F_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_F_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_F_BFu15ll.v1");
    check_field_offset(lv, v2, 2, "aS_F_BFu15ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 15, 1, "aS_F_BFu15ll");
    set_bf_and_test(lv, v3, 6, 0, 15, hide_ull(1LL<<14), "aS_F_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_BFu15ll, aS_F_BFu15ll)
//============================================================================



static void Test_aS_F_BFu15s()
{
  {
    init_simple_test("aS_F_BFu15s");
    static STRUCT_IF_C aS_F_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aS_F_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_F_BFu15s.v1");
    check_field_offset(lv, v2, 2, "aS_F_BFu15s.v2");
    set_bf_and_test(lv, v3, 6, 0, 15, 1, "aS_F_BFu15s");
    set_bf_and_test(lv, v3, 6, 0, 15, hide_ull(1LL<<14), "aS_F_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_BFu15s, aS_F_BFu15s)
//============================================================================



static void Test_aS_F_BFu16i()
{
  {
    init_simple_test("aS_F_BFu16i");
    static STRUCT_IF_C aS_F_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aS_F_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_F_BFu16i.v1");
    check_field_offset(lv, v2, 2, "aS_F_BFu16i.v2");
    set_bf_and_test(lv, v3, 6, 0, 16, 1, "aS_F_BFu16i");
    set_bf_and_test(lv, v3, 6, 0, 16, hide_ull(1LL<<15), "aS_F_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_BFu16i, aS_F_BFu16i)
//============================================================================



static void Test_aS_F_BFu16ll()
{
  {
    init_simple_test("aS_F_BFu16ll");
    static STRUCT_IF_C aS_F_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_F_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_F_BFu16ll.v1");
    check_field_offset(lv, v2, 2, "aS_F_BFu16ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 16, 1, "aS_F_BFu16ll");
    set_bf_and_test(lv, v3, 6, 0, 16, hide_ull(1LL<<15), "aS_F_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_BFu16ll, aS_F_BFu16ll)
//============================================================================



static void Test_aS_F_BFu16s()
{
  {
    init_simple_test("aS_F_BFu16s");
    static STRUCT_IF_C aS_F_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aS_F_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_F_BFu16s.v1");
    check_field_offset(lv, v2, 2, "aS_F_BFu16s.v2");
    set_bf_and_test(lv, v3, 6, 0, 16, 1, "aS_F_BFu16s");
    set_bf_and_test(lv, v3, 6, 0, 16, hide_ull(1LL<<15), "aS_F_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_BFu16s, aS_F_BFu16s)
//============================================================================



static void Test_aS_F_BFu17i()
{
  {
    init_simple_test("aS_F_BFu17i");
    static STRUCT_IF_C aS_F_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aS_F_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_F_BFu17i.v1");
    check_field_offset(lv, v2, 2, "aS_F_BFu17i.v2");
    set_bf_and_test(lv, v3, 6, 0, 17, 1, "aS_F_BFu17i");
    set_bf_and_test(lv, v3, 6, 0, 17, hide_ull(1LL<<16), "aS_F_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_BFu17i, aS_F_BFu17i)
//============================================================================



static void Test_aS_F_BFu17ll()
{
  {
    init_simple_test("aS_F_BFu17ll");
    static STRUCT_IF_C aS_F_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aS_F_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_F_BFu17ll.v1");
    check_field_offset(lv, v2, 2, "aS_F_BFu17ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 17, 1, "aS_F_BFu17ll");
    set_bf_and_test(lv, v3, 6, 0, 17, hide_ull(1LL<<16), "aS_F_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_BFu17ll, aS_F_BFu17ll)
//============================================================================



static void Test_aS_F_BFu1c()
{
  {
    init_simple_test("aS_F_BFu1c");
    static STRUCT_IF_C aS_F_BFu1c lv;
    check2(sizeof(lv), 7, "sizeof(aS_F_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_F_BFu1c.v1");
    check_field_offset(lv, v2, 2, "aS_F_BFu1c.v2");
    set_bf_and_test(lv, v3, 6, 0, 1, 1, "aS_F_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_BFu1c, aS_F_BFu1c)
//============================================================================



static void Test_aS_F_BFu1i()
{
  {
    init_simple_test("aS_F_BFu1i");
    static STRUCT_IF_C aS_F_BFu1i lv;
    check2(sizeof(lv), 7, "sizeof(aS_F_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_F_BFu1i.v1");
    check_field_offset(lv, v2, 2, "aS_F_BFu1i.v2");
    set_bf_and_test(lv, v3, 6, 0, 1, 1, "aS_F_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_BFu1i, aS_F_BFu1i)
//============================================================================



static void Test_aS_F_BFu1ll()
{
  {
    init_simple_test("aS_F_BFu1ll");
    static STRUCT_IF_C aS_F_BFu1ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_F_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_F_BFu1ll.v1");
    check_field_offset(lv, v2, 2, "aS_F_BFu1ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 1, 1, "aS_F_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_BFu1ll, aS_F_BFu1ll)
//============================================================================



static void Test_aS_F_BFu1s()
{
  {
    init_simple_test("aS_F_BFu1s");
    static STRUCT_IF_C aS_F_BFu1s lv;
    check2(sizeof(lv), 7, "sizeof(aS_F_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_F_BFu1s.v1");
    check_field_offset(lv, v2, 2, "aS_F_BFu1s.v2");
    set_bf_and_test(lv, v3, 6, 0, 1, 1, "aS_F_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_BFu1s, aS_F_BFu1s)
//============================================================================



static void Test_aS_F_BFu31i()
{
  {
    init_simple_test("aS_F_BFu31i");
    static STRUCT_IF_C aS_F_BFu31i lv;
    check2(sizeof(lv), 10, "sizeof(aS_F_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_F_BFu31i.v1");
    check_field_offset(lv, v2, 2, "aS_F_BFu31i.v2");
    set_bf_and_test(lv, v3, 6, 0, 31, 1, "aS_F_BFu31i");
    set_bf_and_test(lv, v3, 6, 0, 31, hide_ull(1LL<<30), "aS_F_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_BFu31i, aS_F_BFu31i)
//============================================================================



static void Test_aS_F_BFu31ll()
{
  {
    init_simple_test("aS_F_BFu31ll");
    static STRUCT_IF_C aS_F_BFu31ll lv;
    check2(sizeof(lv), 10, "sizeof(aS_F_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_F_BFu31ll.v1");
    check_field_offset(lv, v2, 2, "aS_F_BFu31ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 31, 1, "aS_F_BFu31ll");
    set_bf_and_test(lv, v3, 6, 0, 31, hide_ull(1LL<<30), "aS_F_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_BFu31ll, aS_F_BFu31ll)
//============================================================================



static void Test_aS_F_BFu32i()
{
  {
    init_simple_test("aS_F_BFu32i");
    static STRUCT_IF_C aS_F_BFu32i lv;
    check2(sizeof(lv), 10, "sizeof(aS_F_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_F_BFu32i.v1");
    check_field_offset(lv, v2, 2, "aS_F_BFu32i.v2");
    set_bf_and_test(lv, v3, 6, 0, 32, 1, "aS_F_BFu32i");
    set_bf_and_test(lv, v3, 6, 0, 32, hide_ull(1LL<<31), "aS_F_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_BFu32i, aS_F_BFu32i)
//============================================================================



static void Test_aS_F_BFu32ll()
{
  {
    init_simple_test("aS_F_BFu32ll");
    static STRUCT_IF_C aS_F_BFu32ll lv;
    check2(sizeof(lv), 10, "sizeof(aS_F_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_F_BFu32ll.v1");
    check_field_offset(lv, v2, 2, "aS_F_BFu32ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 32, 1, "aS_F_BFu32ll");
    set_bf_and_test(lv, v3, 6, 0, 32, hide_ull(1LL<<31), "aS_F_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_BFu32ll, aS_F_BFu32ll)
//============================================================================



static void Test_aS_F_BFu33()
{
  {
    init_simple_test("aS_F_BFu33");
    static STRUCT_IF_C aS_F_BFu33 lv;
    check2(sizeof(lv), 11, "sizeof(aS_F_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_BFu33)");
    check_field_offset(lv, v1, 0, "aS_F_BFu33.v1");
    check_field_offset(lv, v2, 2, "aS_F_BFu33.v2");
    set_bf_and_test(lv, v3, 6, 0, 33, 1, "aS_F_BFu33");
    set_bf_and_test(lv, v3, 6, 0, 33, hide_ull(1LL<<32), "aS_F_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_BFu33, aS_F_BFu33)
//============================================================================



static void Test_aS_F_BFu7c()
{
  {
    init_simple_test("aS_F_BFu7c");
    static STRUCT_IF_C aS_F_BFu7c lv;
    check2(sizeof(lv), 7, "sizeof(aS_F_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_F_BFu7c.v1");
    check_field_offset(lv, v2, 2, "aS_F_BFu7c.v2");
    set_bf_and_test(lv, v3, 6, 0, 7, 1, "aS_F_BFu7c");
    set_bf_and_test(lv, v3, 6, 0, 7, hide_ull(1LL<<6), "aS_F_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_BFu7c, aS_F_BFu7c)
//============================================================================



static void Test_aS_F_BFu7i()
{
  {
    init_simple_test("aS_F_BFu7i");
    static STRUCT_IF_C aS_F_BFu7i lv;
    check2(sizeof(lv), 7, "sizeof(aS_F_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_F_BFu7i.v1");
    check_field_offset(lv, v2, 2, "aS_F_BFu7i.v2");
    set_bf_and_test(lv, v3, 6, 0, 7, 1, "aS_F_BFu7i");
    set_bf_and_test(lv, v3, 6, 0, 7, hide_ull(1LL<<6), "aS_F_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_BFu7i, aS_F_BFu7i)
//============================================================================



static void Test_aS_F_BFu7ll()
{
  {
    init_simple_test("aS_F_BFu7ll");
    static STRUCT_IF_C aS_F_BFu7ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_F_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_F_BFu7ll.v1");
    check_field_offset(lv, v2, 2, "aS_F_BFu7ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 7, 1, "aS_F_BFu7ll");
    set_bf_and_test(lv, v3, 6, 0, 7, hide_ull(1LL<<6), "aS_F_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_BFu7ll, aS_F_BFu7ll)
//============================================================================



static void Test_aS_F_BFu7s()
{
  {
    init_simple_test("aS_F_BFu7s");
    static STRUCT_IF_C aS_F_BFu7s lv;
    check2(sizeof(lv), 7, "sizeof(aS_F_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_F_BFu7s.v1");
    check_field_offset(lv, v2, 2, "aS_F_BFu7s.v2");
    set_bf_and_test(lv, v3, 6, 0, 7, 1, "aS_F_BFu7s");
    set_bf_and_test(lv, v3, 6, 0, 7, hide_ull(1LL<<6), "aS_F_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_BFu7s, aS_F_BFu7s)
//============================================================================



static void Test_aS_F_BFu8c()
{
  {
    init_simple_test("aS_F_BFu8c");
    static STRUCT_IF_C aS_F_BFu8c lv;
    check2(sizeof(lv), 7, "sizeof(aS_F_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_F_BFu8c.v1");
    check_field_offset(lv, v2, 2, "aS_F_BFu8c.v2");
    set_bf_and_test(lv, v3, 6, 0, 8, 1, "aS_F_BFu8c");
    set_bf_and_test(lv, v3, 6, 0, 8, hide_ull(1LL<<7), "aS_F_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_BFu8c, aS_F_BFu8c)
//============================================================================



static void Test_aS_F_BFu8i()
{
  {
    init_simple_test("aS_F_BFu8i");
    static STRUCT_IF_C aS_F_BFu8i lv;
    check2(sizeof(lv), 7, "sizeof(aS_F_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_F_BFu8i.v1");
    check_field_offset(lv, v2, 2, "aS_F_BFu8i.v2");
    set_bf_and_test(lv, v3, 6, 0, 8, 1, "aS_F_BFu8i");
    set_bf_and_test(lv, v3, 6, 0, 8, hide_ull(1LL<<7), "aS_F_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_BFu8i, aS_F_BFu8i)
//============================================================================



static void Test_aS_F_BFu8ll()
{
  {
    init_simple_test("aS_F_BFu8ll");
    static STRUCT_IF_C aS_F_BFu8ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_F_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_F_BFu8ll.v1");
    check_field_offset(lv, v2, 2, "aS_F_BFu8ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 8, 1, "aS_F_BFu8ll");
    set_bf_and_test(lv, v3, 6, 0, 8, hide_ull(1LL<<7), "aS_F_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_BFu8ll, aS_F_BFu8ll)
//============================================================================



static void Test_aS_F_BFu8s()
{
  {
    init_simple_test("aS_F_BFu8s");
    static STRUCT_IF_C aS_F_BFu8s lv;
    check2(sizeof(lv), 7, "sizeof(aS_F_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_F_BFu8s.v1");
    check_field_offset(lv, v2, 2, "aS_F_BFu8s.v2");
    set_bf_and_test(lv, v3, 6, 0, 8, 1, "aS_F_BFu8s");
    set_bf_and_test(lv, v3, 6, 0, 8, hide_ull(1LL<<7), "aS_F_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_BFu8s, aS_F_BFu8s)
//============================================================================



static void Test_aS_F_BFu9i()
{
  {
    init_simple_test("aS_F_BFu9i");
    static STRUCT_IF_C aS_F_BFu9i lv;
    check2(sizeof(lv), 8, "sizeof(aS_F_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_F_BFu9i.v1");
    check_field_offset(lv, v2, 2, "aS_F_BFu9i.v2");
    set_bf_and_test(lv, v3, 6, 0, 9, 1, "aS_F_BFu9i");
    set_bf_and_test(lv, v3, 6, 0, 9, hide_ull(1LL<<8), "aS_F_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_BFu9i, aS_F_BFu9i)
//============================================================================



static void Test_aS_F_BFu9ll()
{
  {
    init_simple_test("aS_F_BFu9ll");
    static STRUCT_IF_C aS_F_BFu9ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_F_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_F_BFu9ll.v1");
    check_field_offset(lv, v2, 2, "aS_F_BFu9ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 9, 1, "aS_F_BFu9ll");
    set_bf_and_test(lv, v3, 6, 0, 9, hide_ull(1LL<<8), "aS_F_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_BFu9ll, aS_F_BFu9ll)
//============================================================================



static void Test_aS_F_BFu9s()
{
  {
    init_simple_test("aS_F_BFu9s");
    static STRUCT_IF_C aS_F_BFu9s lv;
    check2(sizeof(lv), 8, "sizeof(aS_F_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_F_BFu9s.v1");
    check_field_offset(lv, v2, 2, "aS_F_BFu9s.v2");
    set_bf_and_test(lv, v3, 6, 0, 9, 1, "aS_F_BFu9s");
    set_bf_and_test(lv, v3, 6, 0, 9, hide_ull(1LL<<8), "aS_F_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_BFu9s, aS_F_BFu9s)
//============================================================================



static void Test_aS_F_C()
{
  {
    init_simple_test("aS_F_C");
    STRUCT_IF_C aS_F_C lv;
    check2(sizeof(lv), 7, "sizeof(aS_F_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_C)");
    check_field_offset(lv, v1, 0, "aS_F_C.v1");
    check_field_offset(lv, v2, 2, "aS_F_C.v2");
    check_field_offset(lv, v3, 6, "aS_F_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_C, aS_F_C)
//============================================================================



static void Test_aS_F_D()
{
  {
    init_simple_test("aS_F_D");
    STRUCT_IF_C aS_F_D lv;
    check2(sizeof(lv), 14, "sizeof(aS_F_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_D)");
    check_field_offset(lv, v1, 0, "aS_F_D.v1");
    check_field_offset(lv, v2, 2, "aS_F_D.v2");
    check_field_offset(lv, v3, 6, "aS_F_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_D, aS_F_D)
//============================================================================



static void Test_aS_F_F()
{
  {
    init_simple_test("aS_F_F");
    STRUCT_IF_C aS_F_F lv;
    check2(sizeof(lv), 10, "sizeof(aS_F_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_F)");
    check_field_offset(lv, v1, 0, "aS_F_F.v1");
    check_field_offset(lv, v2, 2, "aS_F_F.v2");
    check_field_offset(lv, v3, 6, "aS_F_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_F, aS_F_F)
//============================================================================



static void Test_aS_F_I()
{
  {
    init_simple_test("aS_F_I");
    STRUCT_IF_C aS_F_I lv;
    check2(sizeof(lv), 10, "sizeof(aS_F_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_I)");
    check_field_offset(lv, v1, 0, "aS_F_I.v1");
    check_field_offset(lv, v2, 2, "aS_F_I.v2");
    check_field_offset(lv, v3, 6, "aS_F_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_I, aS_F_I)
//============================================================================



static void Test_aS_F_Ip()
{
  {
    init_simple_test("aS_F_Ip");
    STRUCT_IF_C aS_F_Ip lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aS_F_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_Ip)");
    check_field_offset(lv, v1, 0, "aS_F_Ip.v1");
    check_field_offset(lv, v2, 2, "aS_F_Ip.v2");
    check_field_offset(lv, v3, 6, "aS_F_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_Ip, aS_F_Ip)
//============================================================================



static void Test_aS_F_L()
{
  {
    init_simple_test("aS_F_L");
    STRUCT_IF_C aS_F_L lv;
    check2(sizeof(lv), 14, "sizeof(aS_F_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_L)");
    check_field_offset(lv, v1, 0, "aS_F_L.v1");
    check_field_offset(lv, v2, 2, "aS_F_L.v2");
    check_field_offset(lv, v3, 6, "aS_F_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_L, aS_F_L)
//============================================================================



static void Test_aS_F_S()
{
  {
    init_simple_test("aS_F_S");
    STRUCT_IF_C aS_F_S lv;
    check2(sizeof(lv), 8, "sizeof(aS_F_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_S)");
    check_field_offset(lv, v1, 0, "aS_F_S.v1");
    check_field_offset(lv, v2, 2, "aS_F_S.v2");
    check_field_offset(lv, v3, 6, "aS_F_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_S, aS_F_S)
//============================================================================



static void Test_aS_F_Uc()
{
  {
    init_simple_test("aS_F_Uc");
    STRUCT_IF_C aS_F_Uc lv;
    check2(sizeof(lv), 7, "sizeof(aS_F_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_Uc)");
    check_field_offset(lv, v1, 0, "aS_F_Uc.v1");
    check_field_offset(lv, v2, 2, "aS_F_Uc.v2");
    check_field_offset(lv, v3, 6, "aS_F_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_Uc, aS_F_Uc)
//============================================================================



static void Test_aS_F_Ui()
{
  {
    init_simple_test("aS_F_Ui");
    STRUCT_IF_C aS_F_Ui lv;
    check2(sizeof(lv), 10, "sizeof(aS_F_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_Ui)");
    check_field_offset(lv, v1, 0, "aS_F_Ui.v1");
    check_field_offset(lv, v2, 2, "aS_F_Ui.v2");
    check_field_offset(lv, v3, 6, "aS_F_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_Ui, aS_F_Ui)
//============================================================================



static void Test_aS_F_Ul()
{
  {
    init_simple_test("aS_F_Ul");
    STRUCT_IF_C aS_F_Ul lv;
    check2(sizeof(lv), 14, "sizeof(aS_F_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_Ul)");
    check_field_offset(lv, v1, 0, "aS_F_Ul.v1");
    check_field_offset(lv, v2, 2, "aS_F_Ul.v2");
    check_field_offset(lv, v3, 6, "aS_F_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_Ul, aS_F_Ul)
//============================================================================



static void Test_aS_F_Us()
{
  {
    init_simple_test("aS_F_Us");
    STRUCT_IF_C aS_F_Us lv;
    check2(sizeof(lv), 8, "sizeof(aS_F_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_Us)");
    check_field_offset(lv, v1, 0, "aS_F_Us.v1");
    check_field_offset(lv, v2, 2, "aS_F_Us.v2");
    check_field_offset(lv, v3, 6, "aS_F_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_Us, aS_F_Us)
//============================================================================



static void Test_aS_F_Vp()
{
  {
    init_simple_test("aS_F_Vp");
    STRUCT_IF_C aS_F_Vp lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aS_F_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_F_Vp)");
    check_field_offset(lv, v1, 0, "aS_F_Vp.v1");
    check_field_offset(lv, v2, 2, "aS_F_Vp.v2");
    check_field_offset(lv, v3, 6, "aS_F_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_F_Vp, aS_F_Vp)
//============================================================================



static void Test_aS_I()
{
  {
    init_simple_test("aS_I");
    STRUCT_IF_C aS_I lv;
    check2(sizeof(lv), 6, "sizeof(aS_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I)");
    check_field_offset(lv, v1, 0, "aS_I.v1");
    check_field_offset(lv, v2, 2, "aS_I.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I, aS_I)
//============================================================================



static void Test_aS_I_BFu15i()
{
  {
    init_simple_test("aS_I_BFu15i");
    static STRUCT_IF_C aS_I_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aS_I_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_I_BFu15i.v1");
    check_field_offset(lv, v2, 2, "aS_I_BFu15i.v2");
    set_bf_and_test(lv, v3, 6, 0, 15, 1, "aS_I_BFu15i");
    set_bf_and_test(lv, v3, 6, 0, 15, hide_ull(1LL<<14), "aS_I_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_BFu15i, aS_I_BFu15i)
//============================================================================



static void Test_aS_I_BFu15ll()
{
  {
    init_simple_test("aS_I_BFu15ll");
    static STRUCT_IF_C aS_I_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_I_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_I_BFu15ll.v1");
    check_field_offset(lv, v2, 2, "aS_I_BFu15ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 15, 1, "aS_I_BFu15ll");
    set_bf_and_test(lv, v3, 6, 0, 15, hide_ull(1LL<<14), "aS_I_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_BFu15ll, aS_I_BFu15ll)
//============================================================================



static void Test_aS_I_BFu15s()
{
  {
    init_simple_test("aS_I_BFu15s");
    static STRUCT_IF_C aS_I_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aS_I_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_I_BFu15s.v1");
    check_field_offset(lv, v2, 2, "aS_I_BFu15s.v2");
    set_bf_and_test(lv, v3, 6, 0, 15, 1, "aS_I_BFu15s");
    set_bf_and_test(lv, v3, 6, 0, 15, hide_ull(1LL<<14), "aS_I_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_BFu15s, aS_I_BFu15s)
//============================================================================



static void Test_aS_I_BFu16i()
{
  {
    init_simple_test("aS_I_BFu16i");
    static STRUCT_IF_C aS_I_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aS_I_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_I_BFu16i.v1");
    check_field_offset(lv, v2, 2, "aS_I_BFu16i.v2");
    set_bf_and_test(lv, v3, 6, 0, 16, 1, "aS_I_BFu16i");
    set_bf_and_test(lv, v3, 6, 0, 16, hide_ull(1LL<<15), "aS_I_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_BFu16i, aS_I_BFu16i)
//============================================================================



static void Test_aS_I_BFu16ll()
{
  {
    init_simple_test("aS_I_BFu16ll");
    static STRUCT_IF_C aS_I_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_I_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_I_BFu16ll.v1");
    check_field_offset(lv, v2, 2, "aS_I_BFu16ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 16, 1, "aS_I_BFu16ll");
    set_bf_and_test(lv, v3, 6, 0, 16, hide_ull(1LL<<15), "aS_I_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_BFu16ll, aS_I_BFu16ll)
//============================================================================



static void Test_aS_I_BFu16s()
{
  {
    init_simple_test("aS_I_BFu16s");
    static STRUCT_IF_C aS_I_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aS_I_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_I_BFu16s.v1");
    check_field_offset(lv, v2, 2, "aS_I_BFu16s.v2");
    set_bf_and_test(lv, v3, 6, 0, 16, 1, "aS_I_BFu16s");
    set_bf_and_test(lv, v3, 6, 0, 16, hide_ull(1LL<<15), "aS_I_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_BFu16s, aS_I_BFu16s)
//============================================================================



static void Test_aS_I_BFu17i()
{
  {
    init_simple_test("aS_I_BFu17i");
    static STRUCT_IF_C aS_I_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aS_I_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_I_BFu17i.v1");
    check_field_offset(lv, v2, 2, "aS_I_BFu17i.v2");
    set_bf_and_test(lv, v3, 6, 0, 17, 1, "aS_I_BFu17i");
    set_bf_and_test(lv, v3, 6, 0, 17, hide_ull(1LL<<16), "aS_I_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_BFu17i, aS_I_BFu17i)
//============================================================================



static void Test_aS_I_BFu17ll()
{
  {
    init_simple_test("aS_I_BFu17ll");
    static STRUCT_IF_C aS_I_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aS_I_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_I_BFu17ll.v1");
    check_field_offset(lv, v2, 2, "aS_I_BFu17ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 17, 1, "aS_I_BFu17ll");
    set_bf_and_test(lv, v3, 6, 0, 17, hide_ull(1LL<<16), "aS_I_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_BFu17ll, aS_I_BFu17ll)
//============================================================================



static void Test_aS_I_BFu1c()
{
  {
    init_simple_test("aS_I_BFu1c");
    static STRUCT_IF_C aS_I_BFu1c lv;
    check2(sizeof(lv), 7, "sizeof(aS_I_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_I_BFu1c.v1");
    check_field_offset(lv, v2, 2, "aS_I_BFu1c.v2");
    set_bf_and_test(lv, v3, 6, 0, 1, 1, "aS_I_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_BFu1c, aS_I_BFu1c)
//============================================================================



static void Test_aS_I_BFu1i()
{
  {
    init_simple_test("aS_I_BFu1i");
    static STRUCT_IF_C aS_I_BFu1i lv;
    check2(sizeof(lv), 7, "sizeof(aS_I_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_I_BFu1i.v1");
    check_field_offset(lv, v2, 2, "aS_I_BFu1i.v2");
    set_bf_and_test(lv, v3, 6, 0, 1, 1, "aS_I_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_BFu1i, aS_I_BFu1i)
//============================================================================



static void Test_aS_I_BFu1ll()
{
  {
    init_simple_test("aS_I_BFu1ll");
    static STRUCT_IF_C aS_I_BFu1ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_I_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_I_BFu1ll.v1");
    check_field_offset(lv, v2, 2, "aS_I_BFu1ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 1, 1, "aS_I_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_BFu1ll, aS_I_BFu1ll)
//============================================================================



static void Test_aS_I_BFu1s()
{
  {
    init_simple_test("aS_I_BFu1s");
    static STRUCT_IF_C aS_I_BFu1s lv;
    check2(sizeof(lv), 7, "sizeof(aS_I_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_I_BFu1s.v1");
    check_field_offset(lv, v2, 2, "aS_I_BFu1s.v2");
    set_bf_and_test(lv, v3, 6, 0, 1, 1, "aS_I_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_BFu1s, aS_I_BFu1s)
//============================================================================



static void Test_aS_I_BFu31i()
{
  {
    init_simple_test("aS_I_BFu31i");
    static STRUCT_IF_C aS_I_BFu31i lv;
    check2(sizeof(lv), 10, "sizeof(aS_I_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_I_BFu31i.v1");
    check_field_offset(lv, v2, 2, "aS_I_BFu31i.v2");
    set_bf_and_test(lv, v3, 6, 0, 31, 1, "aS_I_BFu31i");
    set_bf_and_test(lv, v3, 6, 0, 31, hide_ull(1LL<<30), "aS_I_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_BFu31i, aS_I_BFu31i)
//============================================================================



static void Test_aS_I_BFu31ll()
{
  {
    init_simple_test("aS_I_BFu31ll");
    static STRUCT_IF_C aS_I_BFu31ll lv;
    check2(sizeof(lv), 10, "sizeof(aS_I_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_I_BFu31ll.v1");
    check_field_offset(lv, v2, 2, "aS_I_BFu31ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 31, 1, "aS_I_BFu31ll");
    set_bf_and_test(lv, v3, 6, 0, 31, hide_ull(1LL<<30), "aS_I_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_BFu31ll, aS_I_BFu31ll)
//============================================================================



static void Test_aS_I_BFu32i()
{
  {
    init_simple_test("aS_I_BFu32i");
    static STRUCT_IF_C aS_I_BFu32i lv;
    check2(sizeof(lv), 10, "sizeof(aS_I_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_I_BFu32i.v1");
    check_field_offset(lv, v2, 2, "aS_I_BFu32i.v2");
    set_bf_and_test(lv, v3, 6, 0, 32, 1, "aS_I_BFu32i");
    set_bf_and_test(lv, v3, 6, 0, 32, hide_ull(1LL<<31), "aS_I_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_BFu32i, aS_I_BFu32i)
//============================================================================



static void Test_aS_I_BFu32ll()
{
  {
    init_simple_test("aS_I_BFu32ll");
    static STRUCT_IF_C aS_I_BFu32ll lv;
    check2(sizeof(lv), 10, "sizeof(aS_I_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_I_BFu32ll.v1");
    check_field_offset(lv, v2, 2, "aS_I_BFu32ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 32, 1, "aS_I_BFu32ll");
    set_bf_and_test(lv, v3, 6, 0, 32, hide_ull(1LL<<31), "aS_I_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_BFu32ll, aS_I_BFu32ll)
//============================================================================



static void Test_aS_I_BFu33()
{
  {
    init_simple_test("aS_I_BFu33");
    static STRUCT_IF_C aS_I_BFu33 lv;
    check2(sizeof(lv), 11, "sizeof(aS_I_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_BFu33)");
    check_field_offset(lv, v1, 0, "aS_I_BFu33.v1");
    check_field_offset(lv, v2, 2, "aS_I_BFu33.v2");
    set_bf_and_test(lv, v3, 6, 0, 33, 1, "aS_I_BFu33");
    set_bf_and_test(lv, v3, 6, 0, 33, hide_ull(1LL<<32), "aS_I_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_BFu33, aS_I_BFu33)
//============================================================================



static void Test_aS_I_BFu7c()
{
  {
    init_simple_test("aS_I_BFu7c");
    static STRUCT_IF_C aS_I_BFu7c lv;
    check2(sizeof(lv), 7, "sizeof(aS_I_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_I_BFu7c.v1");
    check_field_offset(lv, v2, 2, "aS_I_BFu7c.v2");
    set_bf_and_test(lv, v3, 6, 0, 7, 1, "aS_I_BFu7c");
    set_bf_and_test(lv, v3, 6, 0, 7, hide_ull(1LL<<6), "aS_I_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_BFu7c, aS_I_BFu7c)
//============================================================================



static void Test_aS_I_BFu7i()
{
  {
    init_simple_test("aS_I_BFu7i");
    static STRUCT_IF_C aS_I_BFu7i lv;
    check2(sizeof(lv), 7, "sizeof(aS_I_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_I_BFu7i.v1");
    check_field_offset(lv, v2, 2, "aS_I_BFu7i.v2");
    set_bf_and_test(lv, v3, 6, 0, 7, 1, "aS_I_BFu7i");
    set_bf_and_test(lv, v3, 6, 0, 7, hide_ull(1LL<<6), "aS_I_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_BFu7i, aS_I_BFu7i)
//============================================================================



static void Test_aS_I_BFu7ll()
{
  {
    init_simple_test("aS_I_BFu7ll");
    static STRUCT_IF_C aS_I_BFu7ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_I_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_I_BFu7ll.v1");
    check_field_offset(lv, v2, 2, "aS_I_BFu7ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 7, 1, "aS_I_BFu7ll");
    set_bf_and_test(lv, v3, 6, 0, 7, hide_ull(1LL<<6), "aS_I_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_BFu7ll, aS_I_BFu7ll)
//============================================================================



static void Test_aS_I_BFu7s()
{
  {
    init_simple_test("aS_I_BFu7s");
    static STRUCT_IF_C aS_I_BFu7s lv;
    check2(sizeof(lv), 7, "sizeof(aS_I_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_I_BFu7s.v1");
    check_field_offset(lv, v2, 2, "aS_I_BFu7s.v2");
    set_bf_and_test(lv, v3, 6, 0, 7, 1, "aS_I_BFu7s");
    set_bf_and_test(lv, v3, 6, 0, 7, hide_ull(1LL<<6), "aS_I_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_BFu7s, aS_I_BFu7s)
//============================================================================



static void Test_aS_I_BFu8c()
{
  {
    init_simple_test("aS_I_BFu8c");
    static STRUCT_IF_C aS_I_BFu8c lv;
    check2(sizeof(lv), 7, "sizeof(aS_I_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_I_BFu8c.v1");
    check_field_offset(lv, v2, 2, "aS_I_BFu8c.v2");
    set_bf_and_test(lv, v3, 6, 0, 8, 1, "aS_I_BFu8c");
    set_bf_and_test(lv, v3, 6, 0, 8, hide_ull(1LL<<7), "aS_I_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_BFu8c, aS_I_BFu8c)
//============================================================================



static void Test_aS_I_BFu8i()
{
  {
    init_simple_test("aS_I_BFu8i");
    static STRUCT_IF_C aS_I_BFu8i lv;
    check2(sizeof(lv), 7, "sizeof(aS_I_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_I_BFu8i.v1");
    check_field_offset(lv, v2, 2, "aS_I_BFu8i.v2");
    set_bf_and_test(lv, v3, 6, 0, 8, 1, "aS_I_BFu8i");
    set_bf_and_test(lv, v3, 6, 0, 8, hide_ull(1LL<<7), "aS_I_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_BFu8i, aS_I_BFu8i)
//============================================================================



static void Test_aS_I_BFu8ll()
{
  {
    init_simple_test("aS_I_BFu8ll");
    static STRUCT_IF_C aS_I_BFu8ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_I_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_I_BFu8ll.v1");
    check_field_offset(lv, v2, 2, "aS_I_BFu8ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 8, 1, "aS_I_BFu8ll");
    set_bf_and_test(lv, v3, 6, 0, 8, hide_ull(1LL<<7), "aS_I_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_BFu8ll, aS_I_BFu8ll)
//============================================================================



static void Test_aS_I_BFu8s()
{
  {
    init_simple_test("aS_I_BFu8s");
    static STRUCT_IF_C aS_I_BFu8s lv;
    check2(sizeof(lv), 7, "sizeof(aS_I_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_I_BFu8s.v1");
    check_field_offset(lv, v2, 2, "aS_I_BFu8s.v2");
    set_bf_and_test(lv, v3, 6, 0, 8, 1, "aS_I_BFu8s");
    set_bf_and_test(lv, v3, 6, 0, 8, hide_ull(1LL<<7), "aS_I_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_BFu8s, aS_I_BFu8s)
//============================================================================



static void Test_aS_I_BFu9i()
{
  {
    init_simple_test("aS_I_BFu9i");
    static STRUCT_IF_C aS_I_BFu9i lv;
    check2(sizeof(lv), 8, "sizeof(aS_I_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_I_BFu9i.v1");
    check_field_offset(lv, v2, 2, "aS_I_BFu9i.v2");
    set_bf_and_test(lv, v3, 6, 0, 9, 1, "aS_I_BFu9i");
    set_bf_and_test(lv, v3, 6, 0, 9, hide_ull(1LL<<8), "aS_I_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_BFu9i, aS_I_BFu9i)
//============================================================================



static void Test_aS_I_BFu9ll()
{
  {
    init_simple_test("aS_I_BFu9ll");
    static STRUCT_IF_C aS_I_BFu9ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_I_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_I_BFu9ll.v1");
    check_field_offset(lv, v2, 2, "aS_I_BFu9ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 9, 1, "aS_I_BFu9ll");
    set_bf_and_test(lv, v3, 6, 0, 9, hide_ull(1LL<<8), "aS_I_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_BFu9ll, aS_I_BFu9ll)
//============================================================================



static void Test_aS_I_BFu9s()
{
  {
    init_simple_test("aS_I_BFu9s");
    static STRUCT_IF_C aS_I_BFu9s lv;
    check2(sizeof(lv), 8, "sizeof(aS_I_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_I_BFu9s.v1");
    check_field_offset(lv, v2, 2, "aS_I_BFu9s.v2");
    set_bf_and_test(lv, v3, 6, 0, 9, 1, "aS_I_BFu9s");
    set_bf_and_test(lv, v3, 6, 0, 9, hide_ull(1LL<<8), "aS_I_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_BFu9s, aS_I_BFu9s)
//============================================================================



static void Test_aS_I_C()
{
  {
    init_simple_test("aS_I_C");
    STRUCT_IF_C aS_I_C lv;
    check2(sizeof(lv), 7, "sizeof(aS_I_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_C)");
    check_field_offset(lv, v1, 0, "aS_I_C.v1");
    check_field_offset(lv, v2, 2, "aS_I_C.v2");
    check_field_offset(lv, v3, 6, "aS_I_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_C, aS_I_C)
//============================================================================



static void Test_aS_I_D()
{
  {
    init_simple_test("aS_I_D");
    STRUCT_IF_C aS_I_D lv;
    check2(sizeof(lv), 14, "sizeof(aS_I_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_D)");
    check_field_offset(lv, v1, 0, "aS_I_D.v1");
    check_field_offset(lv, v2, 2, "aS_I_D.v2");
    check_field_offset(lv, v3, 6, "aS_I_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_D, aS_I_D)
//============================================================================



static void Test_aS_I_F()
{
  {
    init_simple_test("aS_I_F");
    STRUCT_IF_C aS_I_F lv;
    check2(sizeof(lv), 10, "sizeof(aS_I_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_F)");
    check_field_offset(lv, v1, 0, "aS_I_F.v1");
    check_field_offset(lv, v2, 2, "aS_I_F.v2");
    check_field_offset(lv, v3, 6, "aS_I_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_F, aS_I_F)
//============================================================================



static void Test_aS_I_I()
{
  {
    init_simple_test("aS_I_I");
    STRUCT_IF_C aS_I_I lv;
    check2(sizeof(lv), 10, "sizeof(aS_I_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_I)");
    check_field_offset(lv, v1, 0, "aS_I_I.v1");
    check_field_offset(lv, v2, 2, "aS_I_I.v2");
    check_field_offset(lv, v3, 6, "aS_I_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_I, aS_I_I)
//============================================================================



static void Test_aS_I_Ip()
{
  {
    init_simple_test("aS_I_Ip");
    STRUCT_IF_C aS_I_Ip lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aS_I_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_Ip)");
    check_field_offset(lv, v1, 0, "aS_I_Ip.v1");
    check_field_offset(lv, v2, 2, "aS_I_Ip.v2");
    check_field_offset(lv, v3, 6, "aS_I_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_Ip, aS_I_Ip)
//============================================================================



static void Test_aS_I_L()
{
  {
    init_simple_test("aS_I_L");
    STRUCT_IF_C aS_I_L lv;
    check2(sizeof(lv), 14, "sizeof(aS_I_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_L)");
    check_field_offset(lv, v1, 0, "aS_I_L.v1");
    check_field_offset(lv, v2, 2, "aS_I_L.v2");
    check_field_offset(lv, v3, 6, "aS_I_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_L, aS_I_L)
//============================================================================



static void Test_aS_I_S()
{
  {
    init_simple_test("aS_I_S");
    STRUCT_IF_C aS_I_S lv;
    check2(sizeof(lv), 8, "sizeof(aS_I_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_S)");
    check_field_offset(lv, v1, 0, "aS_I_S.v1");
    check_field_offset(lv, v2, 2, "aS_I_S.v2");
    check_field_offset(lv, v3, 6, "aS_I_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_S, aS_I_S)
//============================================================================



static void Test_aS_I_Uc()
{
  {
    init_simple_test("aS_I_Uc");
    STRUCT_IF_C aS_I_Uc lv;
    check2(sizeof(lv), 7, "sizeof(aS_I_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_Uc)");
    check_field_offset(lv, v1, 0, "aS_I_Uc.v1");
    check_field_offset(lv, v2, 2, "aS_I_Uc.v2");
    check_field_offset(lv, v3, 6, "aS_I_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_Uc, aS_I_Uc)
//============================================================================



static void Test_aS_I_Ui()
{
  {
    init_simple_test("aS_I_Ui");
    STRUCT_IF_C aS_I_Ui lv;
    check2(sizeof(lv), 10, "sizeof(aS_I_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_Ui)");
    check_field_offset(lv, v1, 0, "aS_I_Ui.v1");
    check_field_offset(lv, v2, 2, "aS_I_Ui.v2");
    check_field_offset(lv, v3, 6, "aS_I_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_Ui, aS_I_Ui)
//============================================================================



static void Test_aS_I_Ul()
{
  {
    init_simple_test("aS_I_Ul");
    STRUCT_IF_C aS_I_Ul lv;
    check2(sizeof(lv), 14, "sizeof(aS_I_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_Ul)");
    check_field_offset(lv, v1, 0, "aS_I_Ul.v1");
    check_field_offset(lv, v2, 2, "aS_I_Ul.v2");
    check_field_offset(lv, v3, 6, "aS_I_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_Ul, aS_I_Ul)
//============================================================================



static void Test_aS_I_Us()
{
  {
    init_simple_test("aS_I_Us");
    STRUCT_IF_C aS_I_Us lv;
    check2(sizeof(lv), 8, "sizeof(aS_I_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_Us)");
    check_field_offset(lv, v1, 0, "aS_I_Us.v1");
    check_field_offset(lv, v2, 2, "aS_I_Us.v2");
    check_field_offset(lv, v3, 6, "aS_I_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_Us, aS_I_Us)
//============================================================================



static void Test_aS_I_Vp()
{
  {
    init_simple_test("aS_I_Vp");
    STRUCT_IF_C aS_I_Vp lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aS_I_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_I_Vp)");
    check_field_offset(lv, v1, 0, "aS_I_Vp.v1");
    check_field_offset(lv, v2, 2, "aS_I_Vp.v2");
    check_field_offset(lv, v3, 6, "aS_I_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_I_Vp, aS_I_Vp)
//============================================================================



static void Test_aS_Ip()
{
  {
    init_simple_test("aS_Ip");
    STRUCT_IF_C aS_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aS_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip)");
    check_field_offset(lv, v1, 0, "aS_Ip.v1");
    check_field_offset(lv, v2, 2, "aS_Ip.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip, aS_Ip)
//============================================================================



static void Test_aS_Ip_BFu15i()
{
  {
    init_simple_test("aS_Ip_BFu15i");
    static STRUCT_IF_C aS_Ip_BFu15i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_Ip_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_Ip_BFu15i.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_BFu15i.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 15, 1, "aS_Ip_BFu15i");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 15, hide_ull(1LL<<14), "aS_Ip_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_BFu15i, aS_Ip_BFu15i)
//============================================================================



static void Test_aS_Ip_BFu15ll()
{
  {
    init_simple_test("aS_Ip_BFu15ll");
    static STRUCT_IF_C aS_Ip_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_Ip_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_Ip_BFu15ll.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_BFu15ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 15, 1, "aS_Ip_BFu15ll");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 15, hide_ull(1LL<<14), "aS_Ip_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_BFu15ll, aS_Ip_BFu15ll)
//============================================================================



static void Test_aS_Ip_BFu15s()
{
  {
    init_simple_test("aS_Ip_BFu15s");
    static STRUCT_IF_C aS_Ip_BFu15s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_Ip_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_Ip_BFu15s.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_BFu15s.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 15, 1, "aS_Ip_BFu15s");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 15, hide_ull(1LL<<14), "aS_Ip_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_BFu15s, aS_Ip_BFu15s)
//============================================================================



static void Test_aS_Ip_BFu16i()
{
  {
    init_simple_test("aS_Ip_BFu16i");
    static STRUCT_IF_C aS_Ip_BFu16i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_Ip_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_Ip_BFu16i.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_BFu16i.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 16, 1, "aS_Ip_BFu16i");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 16, hide_ull(1LL<<15), "aS_Ip_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_BFu16i, aS_Ip_BFu16i)
//============================================================================



static void Test_aS_Ip_BFu16ll()
{
  {
    init_simple_test("aS_Ip_BFu16ll");
    static STRUCT_IF_C aS_Ip_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_Ip_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_Ip_BFu16ll.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_BFu16ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 16, 1, "aS_Ip_BFu16ll");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 16, hide_ull(1LL<<15), "aS_Ip_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_BFu16ll, aS_Ip_BFu16ll)
//============================================================================



static void Test_aS_Ip_BFu16s()
{
  {
    init_simple_test("aS_Ip_BFu16s");
    static STRUCT_IF_C aS_Ip_BFu16s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_Ip_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_Ip_BFu16s.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_BFu16s.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 16, 1, "aS_Ip_BFu16s");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 16, hide_ull(1LL<<15), "aS_Ip_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_BFu16s, aS_Ip_BFu16s)
//============================================================================



static void Test_aS_Ip_BFu17i()
{
  {
    init_simple_test("aS_Ip_BFu17i");
    static STRUCT_IF_C aS_Ip_BFu17i lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aS_Ip_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_Ip_BFu17i.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_BFu17i.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 17, 1, "aS_Ip_BFu17i");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 17, hide_ull(1LL<<16), "aS_Ip_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_BFu17i, aS_Ip_BFu17i)
//============================================================================



static void Test_aS_Ip_BFu17ll()
{
  {
    init_simple_test("aS_Ip_BFu17ll");
    static STRUCT_IF_C aS_Ip_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aS_Ip_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_Ip_BFu17ll.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_BFu17ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 17, 1, "aS_Ip_BFu17ll");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 17, hide_ull(1LL<<16), "aS_Ip_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_BFu17ll, aS_Ip_BFu17ll)
//============================================================================



static void Test_aS_Ip_BFu1c()
{
  {
    init_simple_test("aS_Ip_BFu1c");
    static STRUCT_IF_C aS_Ip_BFu1c lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Ip_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_Ip_BFu1c.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_BFu1c.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 1, 1, "aS_Ip_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_BFu1c, aS_Ip_BFu1c)
//============================================================================



static void Test_aS_Ip_BFu1i()
{
  {
    init_simple_test("aS_Ip_BFu1i");
    static STRUCT_IF_C aS_Ip_BFu1i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Ip_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_Ip_BFu1i.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_BFu1i.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 1, 1, "aS_Ip_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_BFu1i, aS_Ip_BFu1i)
//============================================================================



static void Test_aS_Ip_BFu1ll()
{
  {
    init_simple_test("aS_Ip_BFu1ll");
    static STRUCT_IF_C aS_Ip_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Ip_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_Ip_BFu1ll.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_BFu1ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 1, 1, "aS_Ip_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_BFu1ll, aS_Ip_BFu1ll)
//============================================================================



static void Test_aS_Ip_BFu1s()
{
  {
    init_simple_test("aS_Ip_BFu1s");
    static STRUCT_IF_C aS_Ip_BFu1s lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Ip_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_Ip_BFu1s.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_BFu1s.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 1, 1, "aS_Ip_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_BFu1s, aS_Ip_BFu1s)
//============================================================================



static void Test_aS_Ip_BFu31i()
{
  {
    init_simple_test("aS_Ip_BFu31i");
    static STRUCT_IF_C aS_Ip_BFu31i lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aS_Ip_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_Ip_BFu31i.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_BFu31i.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 31, 1, "aS_Ip_BFu31i");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 31, hide_ull(1LL<<30), "aS_Ip_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_BFu31i, aS_Ip_BFu31i)
//============================================================================



static void Test_aS_Ip_BFu31ll()
{
  {
    init_simple_test("aS_Ip_BFu31ll");
    static STRUCT_IF_C aS_Ip_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aS_Ip_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_Ip_BFu31ll.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_BFu31ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 31, 1, "aS_Ip_BFu31ll");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 31, hide_ull(1LL<<30), "aS_Ip_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_BFu31ll, aS_Ip_BFu31ll)
//============================================================================



static void Test_aS_Ip_BFu32i()
{
  {
    init_simple_test("aS_Ip_BFu32i");
    static STRUCT_IF_C aS_Ip_BFu32i lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aS_Ip_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_Ip_BFu32i.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_BFu32i.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 32, 1, "aS_Ip_BFu32i");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 32, hide_ull(1LL<<31), "aS_Ip_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_BFu32i, aS_Ip_BFu32i)
//============================================================================



static void Test_aS_Ip_BFu32ll()
{
  {
    init_simple_test("aS_Ip_BFu32ll");
    static STRUCT_IF_C aS_Ip_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aS_Ip_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_Ip_BFu32ll.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_BFu32ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 32, 1, "aS_Ip_BFu32ll");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 32, hide_ull(1LL<<31), "aS_Ip_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_BFu32ll, aS_Ip_BFu32ll)
//============================================================================



static void Test_aS_Ip_BFu33()
{
  {
    init_simple_test("aS_Ip_BFu33");
    static STRUCT_IF_C aS_Ip_BFu33 lv;
    check2(sizeof(lv), ABISELECT(15,11), "sizeof(aS_Ip_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_BFu33)");
    check_field_offset(lv, v1, 0, "aS_Ip_BFu33.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_BFu33.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 33, 1, "aS_Ip_BFu33");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 33, hide_ull(1LL<<32), "aS_Ip_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_BFu33, aS_Ip_BFu33)
//============================================================================



static void Test_aS_Ip_BFu7c()
{
  {
    init_simple_test("aS_Ip_BFu7c");
    static STRUCT_IF_C aS_Ip_BFu7c lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Ip_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_Ip_BFu7c.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_BFu7c.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 7, 1, "aS_Ip_BFu7c");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 7, hide_ull(1LL<<6), "aS_Ip_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_BFu7c, aS_Ip_BFu7c)
//============================================================================



static void Test_aS_Ip_BFu7i()
{
  {
    init_simple_test("aS_Ip_BFu7i");
    static STRUCT_IF_C aS_Ip_BFu7i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Ip_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_Ip_BFu7i.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_BFu7i.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 7, 1, "aS_Ip_BFu7i");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 7, hide_ull(1LL<<6), "aS_Ip_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_BFu7i, aS_Ip_BFu7i)
//============================================================================



static void Test_aS_Ip_BFu7ll()
{
  {
    init_simple_test("aS_Ip_BFu7ll");
    static STRUCT_IF_C aS_Ip_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Ip_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_Ip_BFu7ll.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_BFu7ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 7, 1, "aS_Ip_BFu7ll");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 7, hide_ull(1LL<<6), "aS_Ip_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_BFu7ll, aS_Ip_BFu7ll)
//============================================================================



static void Test_aS_Ip_BFu7s()
{
  {
    init_simple_test("aS_Ip_BFu7s");
    static STRUCT_IF_C aS_Ip_BFu7s lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Ip_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_Ip_BFu7s.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_BFu7s.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 7, 1, "aS_Ip_BFu7s");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 7, hide_ull(1LL<<6), "aS_Ip_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_BFu7s, aS_Ip_BFu7s)
//============================================================================



static void Test_aS_Ip_BFu8c()
{
  {
    init_simple_test("aS_Ip_BFu8c");
    static STRUCT_IF_C aS_Ip_BFu8c lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Ip_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_Ip_BFu8c.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_BFu8c.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 8, 1, "aS_Ip_BFu8c");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 8, hide_ull(1LL<<7), "aS_Ip_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_BFu8c, aS_Ip_BFu8c)
//============================================================================



static void Test_aS_Ip_BFu8i()
{
  {
    init_simple_test("aS_Ip_BFu8i");
    static STRUCT_IF_C aS_Ip_BFu8i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Ip_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_Ip_BFu8i.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_BFu8i.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 8, 1, "aS_Ip_BFu8i");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 8, hide_ull(1LL<<7), "aS_Ip_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_BFu8i, aS_Ip_BFu8i)
//============================================================================



static void Test_aS_Ip_BFu8ll()
{
  {
    init_simple_test("aS_Ip_BFu8ll");
    static STRUCT_IF_C aS_Ip_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Ip_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_Ip_BFu8ll.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_BFu8ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 8, 1, "aS_Ip_BFu8ll");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 8, hide_ull(1LL<<7), "aS_Ip_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_BFu8ll, aS_Ip_BFu8ll)
//============================================================================



static void Test_aS_Ip_BFu8s()
{
  {
    init_simple_test("aS_Ip_BFu8s");
    static STRUCT_IF_C aS_Ip_BFu8s lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Ip_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_Ip_BFu8s.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_BFu8s.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 8, 1, "aS_Ip_BFu8s");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 8, hide_ull(1LL<<7), "aS_Ip_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_BFu8s, aS_Ip_BFu8s)
//============================================================================



static void Test_aS_Ip_BFu9i()
{
  {
    init_simple_test("aS_Ip_BFu9i");
    static STRUCT_IF_C aS_Ip_BFu9i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_Ip_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_Ip_BFu9i.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_BFu9i.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 9, 1, "aS_Ip_BFu9i");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 9, hide_ull(1LL<<8), "aS_Ip_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_BFu9i, aS_Ip_BFu9i)
//============================================================================



static void Test_aS_Ip_BFu9ll()
{
  {
    init_simple_test("aS_Ip_BFu9ll");
    static STRUCT_IF_C aS_Ip_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_Ip_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_Ip_BFu9ll.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_BFu9ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 9, 1, "aS_Ip_BFu9ll");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 9, hide_ull(1LL<<8), "aS_Ip_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_BFu9ll, aS_Ip_BFu9ll)
//============================================================================



static void Test_aS_Ip_BFu9s()
{
  {
    init_simple_test("aS_Ip_BFu9s");
    static STRUCT_IF_C aS_Ip_BFu9s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_Ip_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_Ip_BFu9s.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_BFu9s.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 9, 1, "aS_Ip_BFu9s");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 9, hide_ull(1LL<<8), "aS_Ip_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_BFu9s, aS_Ip_BFu9s)
//============================================================================



static void Test_aS_Ip_C()
{
  {
    init_simple_test("aS_Ip_C");
    STRUCT_IF_C aS_Ip_C lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Ip_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_C)");
    check_field_offset(lv, v1, 0, "aS_Ip_C.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_C.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aS_Ip_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_C, aS_Ip_C)
//============================================================================



static void Test_aS_Ip_D()
{
  {
    init_simple_test("aS_Ip_D");
    STRUCT_IF_C aS_Ip_D lv;
    check2(sizeof(lv), ABISELECT(18,14), "sizeof(aS_Ip_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_D)");
    check_field_offset(lv, v1, 0, "aS_Ip_D.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_D.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aS_Ip_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_D, aS_Ip_D)
//============================================================================



static void Test_aS_Ip_F()
{
  {
    init_simple_test("aS_Ip_F");
    STRUCT_IF_C aS_Ip_F lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aS_Ip_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_F)");
    check_field_offset(lv, v1, 0, "aS_Ip_F.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_F.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aS_Ip_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_F, aS_Ip_F)
//============================================================================



static void Test_aS_Ip_I()
{
  {
    init_simple_test("aS_Ip_I");
    STRUCT_IF_C aS_Ip_I lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aS_Ip_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_I)");
    check_field_offset(lv, v1, 0, "aS_Ip_I.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_I.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aS_Ip_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_I, aS_Ip_I)
//============================================================================



static void Test_aS_Ip_Ip()
{
  {
    init_simple_test("aS_Ip_Ip");
    STRUCT_IF_C aS_Ip_Ip lv;
    check2(sizeof(lv), ABISELECT(18,10), "sizeof(aS_Ip_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_Ip)");
    check_field_offset(lv, v1, 0, "aS_Ip_Ip.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_Ip.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aS_Ip_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_Ip, aS_Ip_Ip)
//============================================================================



static void Test_aS_Ip_L()
{
  {
    init_simple_test("aS_Ip_L");
    STRUCT_IF_C aS_Ip_L lv;
    check2(sizeof(lv), ABISELECT(18,14), "sizeof(aS_Ip_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_L)");
    check_field_offset(lv, v1, 0, "aS_Ip_L.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_L.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aS_Ip_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_L, aS_Ip_L)
//============================================================================



static void Test_aS_Ip_S()
{
  {
    init_simple_test("aS_Ip_S");
    STRUCT_IF_C aS_Ip_S lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_Ip_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_S)");
    check_field_offset(lv, v1, 0, "aS_Ip_S.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_S.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aS_Ip_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_S, aS_Ip_S)
//============================================================================



static void Test_aS_Ip_Uc()
{
  {
    init_simple_test("aS_Ip_Uc");
    STRUCT_IF_C aS_Ip_Uc lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Ip_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_Uc)");
    check_field_offset(lv, v1, 0, "aS_Ip_Uc.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_Uc.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aS_Ip_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_Uc, aS_Ip_Uc)
//============================================================================



static void Test_aS_Ip_Ui()
{
  {
    init_simple_test("aS_Ip_Ui");
    STRUCT_IF_C aS_Ip_Ui lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aS_Ip_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_Ui)");
    check_field_offset(lv, v1, 0, "aS_Ip_Ui.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_Ui.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aS_Ip_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_Ui, aS_Ip_Ui)
//============================================================================



static void Test_aS_Ip_Ul()
{
  {
    init_simple_test("aS_Ip_Ul");
    STRUCT_IF_C aS_Ip_Ul lv;
    check2(sizeof(lv), ABISELECT(18,14), "sizeof(aS_Ip_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_Ul)");
    check_field_offset(lv, v1, 0, "aS_Ip_Ul.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_Ul.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aS_Ip_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_Ul, aS_Ip_Ul)
//============================================================================



static void Test_aS_Ip_Us()
{
  {
    init_simple_test("aS_Ip_Us");
    STRUCT_IF_C aS_Ip_Us lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_Ip_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_Us)");
    check_field_offset(lv, v1, 0, "aS_Ip_Us.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_Us.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aS_Ip_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_Us, aS_Ip_Us)
//============================================================================



static void Test_aS_Ip_Vp()
{
  {
    init_simple_test("aS_Ip_Vp");
    STRUCT_IF_C aS_Ip_Vp lv;
    check2(sizeof(lv), ABISELECT(18,10), "sizeof(aS_Ip_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ip_Vp)");
    check_field_offset(lv, v1, 0, "aS_Ip_Vp.v1");
    check_field_offset(lv, v2, 2, "aS_Ip_Vp.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aS_Ip_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ip_Vp, aS_Ip_Vp)
//============================================================================



static void Test_aS_L()
{
  {
    init_simple_test("aS_L");
    STRUCT_IF_C aS_L lv;
    check2(sizeof(lv), 10, "sizeof(aS_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L)");
    check_field_offset(lv, v1, 0, "aS_L.v1");
    check_field_offset(lv, v2, 2, "aS_L.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L, aS_L)
//============================================================================



static void Test_aS_L_BFu15i()
{
  {
    init_simple_test("aS_L_BFu15i");
    static STRUCT_IF_C aS_L_BFu15i lv;
    check2(sizeof(lv), 12, "sizeof(aS_L_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_L_BFu15i.v1");
    check_field_offset(lv, v2, 2, "aS_L_BFu15i.v2");
    set_bf_and_test(lv, v3, 10, 0, 15, 1, "aS_L_BFu15i");
    set_bf_and_test(lv, v3, 10, 0, 15, hide_ull(1LL<<14), "aS_L_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_BFu15i, aS_L_BFu15i)
//============================================================================



static void Test_aS_L_BFu15ll()
{
  {
    init_simple_test("aS_L_BFu15ll");
    static STRUCT_IF_C aS_L_BFu15ll lv;
    check2(sizeof(lv), 12, "sizeof(aS_L_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_L_BFu15ll.v1");
    check_field_offset(lv, v2, 2, "aS_L_BFu15ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 15, 1, "aS_L_BFu15ll");
    set_bf_and_test(lv, v3, 10, 0, 15, hide_ull(1LL<<14), "aS_L_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_BFu15ll, aS_L_BFu15ll)
//============================================================================



static void Test_aS_L_BFu15s()
{
  {
    init_simple_test("aS_L_BFu15s");
    static STRUCT_IF_C aS_L_BFu15s lv;
    check2(sizeof(lv), 12, "sizeof(aS_L_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_L_BFu15s.v1");
    check_field_offset(lv, v2, 2, "aS_L_BFu15s.v2");
    set_bf_and_test(lv, v3, 10, 0, 15, 1, "aS_L_BFu15s");
    set_bf_and_test(lv, v3, 10, 0, 15, hide_ull(1LL<<14), "aS_L_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_BFu15s, aS_L_BFu15s)
//============================================================================



static void Test_aS_L_BFu16i()
{
  {
    init_simple_test("aS_L_BFu16i");
    static STRUCT_IF_C aS_L_BFu16i lv;
    check2(sizeof(lv), 12, "sizeof(aS_L_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_L_BFu16i.v1");
    check_field_offset(lv, v2, 2, "aS_L_BFu16i.v2");
    set_bf_and_test(lv, v3, 10, 0, 16, 1, "aS_L_BFu16i");
    set_bf_and_test(lv, v3, 10, 0, 16, hide_ull(1LL<<15), "aS_L_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_BFu16i, aS_L_BFu16i)
//============================================================================



static void Test_aS_L_BFu16ll()
{
  {
    init_simple_test("aS_L_BFu16ll");
    static STRUCT_IF_C aS_L_BFu16ll lv;
    check2(sizeof(lv), 12, "sizeof(aS_L_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_L_BFu16ll.v1");
    check_field_offset(lv, v2, 2, "aS_L_BFu16ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 16, 1, "aS_L_BFu16ll");
    set_bf_and_test(lv, v3, 10, 0, 16, hide_ull(1LL<<15), "aS_L_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_BFu16ll, aS_L_BFu16ll)
//============================================================================



static void Test_aS_L_BFu16s()
{
  {
    init_simple_test("aS_L_BFu16s");
    static STRUCT_IF_C aS_L_BFu16s lv;
    check2(sizeof(lv), 12, "sizeof(aS_L_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_L_BFu16s.v1");
    check_field_offset(lv, v2, 2, "aS_L_BFu16s.v2");
    set_bf_and_test(lv, v3, 10, 0, 16, 1, "aS_L_BFu16s");
    set_bf_and_test(lv, v3, 10, 0, 16, hide_ull(1LL<<15), "aS_L_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_BFu16s, aS_L_BFu16s)
//============================================================================



static void Test_aS_L_BFu17i()
{
  {
    init_simple_test("aS_L_BFu17i");
    static STRUCT_IF_C aS_L_BFu17i lv;
    check2(sizeof(lv), 13, "sizeof(aS_L_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_L_BFu17i.v1");
    check_field_offset(lv, v2, 2, "aS_L_BFu17i.v2");
    set_bf_and_test(lv, v3, 10, 0, 17, 1, "aS_L_BFu17i");
    set_bf_and_test(lv, v3, 10, 0, 17, hide_ull(1LL<<16), "aS_L_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_BFu17i, aS_L_BFu17i)
//============================================================================



static void Test_aS_L_BFu17ll()
{
  {
    init_simple_test("aS_L_BFu17ll");
    static STRUCT_IF_C aS_L_BFu17ll lv;
    check2(sizeof(lv), 13, "sizeof(aS_L_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_L_BFu17ll.v1");
    check_field_offset(lv, v2, 2, "aS_L_BFu17ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 17, 1, "aS_L_BFu17ll");
    set_bf_and_test(lv, v3, 10, 0, 17, hide_ull(1LL<<16), "aS_L_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_BFu17ll, aS_L_BFu17ll)
//============================================================================



static void Test_aS_L_BFu1c()
{
  {
    init_simple_test("aS_L_BFu1c");
    static STRUCT_IF_C aS_L_BFu1c lv;
    check2(sizeof(lv), 11, "sizeof(aS_L_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_L_BFu1c.v1");
    check_field_offset(lv, v2, 2, "aS_L_BFu1c.v2");
    set_bf_and_test(lv, v3, 10, 0, 1, 1, "aS_L_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_BFu1c, aS_L_BFu1c)
//============================================================================



static void Test_aS_L_BFu1i()
{
  {
    init_simple_test("aS_L_BFu1i");
    static STRUCT_IF_C aS_L_BFu1i lv;
    check2(sizeof(lv), 11, "sizeof(aS_L_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_L_BFu1i.v1");
    check_field_offset(lv, v2, 2, "aS_L_BFu1i.v2");
    set_bf_and_test(lv, v3, 10, 0, 1, 1, "aS_L_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_BFu1i, aS_L_BFu1i)
//============================================================================



static void Test_aS_L_BFu1ll()
{
  {
    init_simple_test("aS_L_BFu1ll");
    static STRUCT_IF_C aS_L_BFu1ll lv;
    check2(sizeof(lv), 11, "sizeof(aS_L_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_L_BFu1ll.v1");
    check_field_offset(lv, v2, 2, "aS_L_BFu1ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 1, 1, "aS_L_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_BFu1ll, aS_L_BFu1ll)
//============================================================================



static void Test_aS_L_BFu1s()
{
  {
    init_simple_test("aS_L_BFu1s");
    static STRUCT_IF_C aS_L_BFu1s lv;
    check2(sizeof(lv), 11, "sizeof(aS_L_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_L_BFu1s.v1");
    check_field_offset(lv, v2, 2, "aS_L_BFu1s.v2");
    set_bf_and_test(lv, v3, 10, 0, 1, 1, "aS_L_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_BFu1s, aS_L_BFu1s)
//============================================================================



static void Test_aS_L_BFu31i()
{
  {
    init_simple_test("aS_L_BFu31i");
    static STRUCT_IF_C aS_L_BFu31i lv;
    check2(sizeof(lv), 14, "sizeof(aS_L_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_L_BFu31i.v1");
    check_field_offset(lv, v2, 2, "aS_L_BFu31i.v2");
    set_bf_and_test(lv, v3, 10, 0, 31, 1, "aS_L_BFu31i");
    set_bf_and_test(lv, v3, 10, 0, 31, hide_ull(1LL<<30), "aS_L_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_BFu31i, aS_L_BFu31i)
//============================================================================



static void Test_aS_L_BFu31ll()
{
  {
    init_simple_test("aS_L_BFu31ll");
    static STRUCT_IF_C aS_L_BFu31ll lv;
    check2(sizeof(lv), 14, "sizeof(aS_L_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_L_BFu31ll.v1");
    check_field_offset(lv, v2, 2, "aS_L_BFu31ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 31, 1, "aS_L_BFu31ll");
    set_bf_and_test(lv, v3, 10, 0, 31, hide_ull(1LL<<30), "aS_L_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_BFu31ll, aS_L_BFu31ll)
//============================================================================



static void Test_aS_L_BFu32i()
{
  {
    init_simple_test("aS_L_BFu32i");
    static STRUCT_IF_C aS_L_BFu32i lv;
    check2(sizeof(lv), 14, "sizeof(aS_L_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_L_BFu32i.v1");
    check_field_offset(lv, v2, 2, "aS_L_BFu32i.v2");
    set_bf_and_test(lv, v3, 10, 0, 32, 1, "aS_L_BFu32i");
    set_bf_and_test(lv, v3, 10, 0, 32, hide_ull(1LL<<31), "aS_L_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_BFu32i, aS_L_BFu32i)
//============================================================================



static void Test_aS_L_BFu32ll()
{
  {
    init_simple_test("aS_L_BFu32ll");
    static STRUCT_IF_C aS_L_BFu32ll lv;
    check2(sizeof(lv), 14, "sizeof(aS_L_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_L_BFu32ll.v1");
    check_field_offset(lv, v2, 2, "aS_L_BFu32ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 32, 1, "aS_L_BFu32ll");
    set_bf_and_test(lv, v3, 10, 0, 32, hide_ull(1LL<<31), "aS_L_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_BFu32ll, aS_L_BFu32ll)
//============================================================================



static void Test_aS_L_BFu33()
{
  {
    init_simple_test("aS_L_BFu33");
    static STRUCT_IF_C aS_L_BFu33 lv;
    check2(sizeof(lv), 15, "sizeof(aS_L_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_BFu33)");
    check_field_offset(lv, v1, 0, "aS_L_BFu33.v1");
    check_field_offset(lv, v2, 2, "aS_L_BFu33.v2");
    set_bf_and_test(lv, v3, 10, 0, 33, 1, "aS_L_BFu33");
    set_bf_and_test(lv, v3, 10, 0, 33, hide_ull(1LL<<32), "aS_L_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_BFu33, aS_L_BFu33)
//============================================================================



static void Test_aS_L_BFu7c()
{
  {
    init_simple_test("aS_L_BFu7c");
    static STRUCT_IF_C aS_L_BFu7c lv;
    check2(sizeof(lv), 11, "sizeof(aS_L_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_L_BFu7c.v1");
    check_field_offset(lv, v2, 2, "aS_L_BFu7c.v2");
    set_bf_and_test(lv, v3, 10, 0, 7, 1, "aS_L_BFu7c");
    set_bf_and_test(lv, v3, 10, 0, 7, hide_ull(1LL<<6), "aS_L_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_BFu7c, aS_L_BFu7c)
//============================================================================



static void Test_aS_L_BFu7i()
{
  {
    init_simple_test("aS_L_BFu7i");
    static STRUCT_IF_C aS_L_BFu7i lv;
    check2(sizeof(lv), 11, "sizeof(aS_L_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_L_BFu7i.v1");
    check_field_offset(lv, v2, 2, "aS_L_BFu7i.v2");
    set_bf_and_test(lv, v3, 10, 0, 7, 1, "aS_L_BFu7i");
    set_bf_and_test(lv, v3, 10, 0, 7, hide_ull(1LL<<6), "aS_L_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_BFu7i, aS_L_BFu7i)
//============================================================================



static void Test_aS_L_BFu7ll()
{
  {
    init_simple_test("aS_L_BFu7ll");
    static STRUCT_IF_C aS_L_BFu7ll lv;
    check2(sizeof(lv), 11, "sizeof(aS_L_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_L_BFu7ll.v1");
    check_field_offset(lv, v2, 2, "aS_L_BFu7ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 7, 1, "aS_L_BFu7ll");
    set_bf_and_test(lv, v3, 10, 0, 7, hide_ull(1LL<<6), "aS_L_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_BFu7ll, aS_L_BFu7ll)
//============================================================================



static void Test_aS_L_BFu7s()
{
  {
    init_simple_test("aS_L_BFu7s");
    static STRUCT_IF_C aS_L_BFu7s lv;
    check2(sizeof(lv), 11, "sizeof(aS_L_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_L_BFu7s.v1");
    check_field_offset(lv, v2, 2, "aS_L_BFu7s.v2");
    set_bf_and_test(lv, v3, 10, 0, 7, 1, "aS_L_BFu7s");
    set_bf_and_test(lv, v3, 10, 0, 7, hide_ull(1LL<<6), "aS_L_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_BFu7s, aS_L_BFu7s)
//============================================================================



static void Test_aS_L_BFu8c()
{
  {
    init_simple_test("aS_L_BFu8c");
    static STRUCT_IF_C aS_L_BFu8c lv;
    check2(sizeof(lv), 11, "sizeof(aS_L_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_L_BFu8c.v1");
    check_field_offset(lv, v2, 2, "aS_L_BFu8c.v2");
    set_bf_and_test(lv, v3, 10, 0, 8, 1, "aS_L_BFu8c");
    set_bf_and_test(lv, v3, 10, 0, 8, hide_ull(1LL<<7), "aS_L_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_BFu8c, aS_L_BFu8c)
//============================================================================



static void Test_aS_L_BFu8i()
{
  {
    init_simple_test("aS_L_BFu8i");
    static STRUCT_IF_C aS_L_BFu8i lv;
    check2(sizeof(lv), 11, "sizeof(aS_L_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_L_BFu8i.v1");
    check_field_offset(lv, v2, 2, "aS_L_BFu8i.v2");
    set_bf_and_test(lv, v3, 10, 0, 8, 1, "aS_L_BFu8i");
    set_bf_and_test(lv, v3, 10, 0, 8, hide_ull(1LL<<7), "aS_L_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_BFu8i, aS_L_BFu8i)
//============================================================================



static void Test_aS_L_BFu8ll()
{
  {
    init_simple_test("aS_L_BFu8ll");
    static STRUCT_IF_C aS_L_BFu8ll lv;
    check2(sizeof(lv), 11, "sizeof(aS_L_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_L_BFu8ll.v1");
    check_field_offset(lv, v2, 2, "aS_L_BFu8ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 8, 1, "aS_L_BFu8ll");
    set_bf_and_test(lv, v3, 10, 0, 8, hide_ull(1LL<<7), "aS_L_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_BFu8ll, aS_L_BFu8ll)
//============================================================================



static void Test_aS_L_BFu8s()
{
  {
    init_simple_test("aS_L_BFu8s");
    static STRUCT_IF_C aS_L_BFu8s lv;
    check2(sizeof(lv), 11, "sizeof(aS_L_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_L_BFu8s.v1");
    check_field_offset(lv, v2, 2, "aS_L_BFu8s.v2");
    set_bf_and_test(lv, v3, 10, 0, 8, 1, "aS_L_BFu8s");
    set_bf_and_test(lv, v3, 10, 0, 8, hide_ull(1LL<<7), "aS_L_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_BFu8s, aS_L_BFu8s)
//============================================================================



static void Test_aS_L_BFu9i()
{
  {
    init_simple_test("aS_L_BFu9i");
    static STRUCT_IF_C aS_L_BFu9i lv;
    check2(sizeof(lv), 12, "sizeof(aS_L_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_L_BFu9i.v1");
    check_field_offset(lv, v2, 2, "aS_L_BFu9i.v2");
    set_bf_and_test(lv, v3, 10, 0, 9, 1, "aS_L_BFu9i");
    set_bf_and_test(lv, v3, 10, 0, 9, hide_ull(1LL<<8), "aS_L_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_BFu9i, aS_L_BFu9i)
//============================================================================



static void Test_aS_L_BFu9ll()
{
  {
    init_simple_test("aS_L_BFu9ll");
    static STRUCT_IF_C aS_L_BFu9ll lv;
    check2(sizeof(lv), 12, "sizeof(aS_L_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_L_BFu9ll.v1");
    check_field_offset(lv, v2, 2, "aS_L_BFu9ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 9, 1, "aS_L_BFu9ll");
    set_bf_and_test(lv, v3, 10, 0, 9, hide_ull(1LL<<8), "aS_L_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_BFu9ll, aS_L_BFu9ll)
//============================================================================



static void Test_aS_L_BFu9s()
{
  {
    init_simple_test("aS_L_BFu9s");
    static STRUCT_IF_C aS_L_BFu9s lv;
    check2(sizeof(lv), 12, "sizeof(aS_L_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_L_BFu9s.v1");
    check_field_offset(lv, v2, 2, "aS_L_BFu9s.v2");
    set_bf_and_test(lv, v3, 10, 0, 9, 1, "aS_L_BFu9s");
    set_bf_and_test(lv, v3, 10, 0, 9, hide_ull(1LL<<8), "aS_L_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_BFu9s, aS_L_BFu9s)
//============================================================================



static void Test_aS_L_C()
{
  {
    init_simple_test("aS_L_C");
    STRUCT_IF_C aS_L_C lv;
    check2(sizeof(lv), 11, "sizeof(aS_L_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_C)");
    check_field_offset(lv, v1, 0, "aS_L_C.v1");
    check_field_offset(lv, v2, 2, "aS_L_C.v2");
    check_field_offset(lv, v3, 10, "aS_L_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_C, aS_L_C)
//============================================================================



static void Test_aS_L_D()
{
  {
    init_simple_test("aS_L_D");
    STRUCT_IF_C aS_L_D lv;
    check2(sizeof(lv), 18, "sizeof(aS_L_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_D)");
    check_field_offset(lv, v1, 0, "aS_L_D.v1");
    check_field_offset(lv, v2, 2, "aS_L_D.v2");
    check_field_offset(lv, v3, 10, "aS_L_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_D, aS_L_D)
//============================================================================



static void Test_aS_L_F()
{
  {
    init_simple_test("aS_L_F");
    STRUCT_IF_C aS_L_F lv;
    check2(sizeof(lv), 14, "sizeof(aS_L_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_F)");
    check_field_offset(lv, v1, 0, "aS_L_F.v1");
    check_field_offset(lv, v2, 2, "aS_L_F.v2");
    check_field_offset(lv, v3, 10, "aS_L_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_F, aS_L_F)
//============================================================================



static void Test_aS_L_I()
{
  {
    init_simple_test("aS_L_I");
    STRUCT_IF_C aS_L_I lv;
    check2(sizeof(lv), 14, "sizeof(aS_L_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_I)");
    check_field_offset(lv, v1, 0, "aS_L_I.v1");
    check_field_offset(lv, v2, 2, "aS_L_I.v2");
    check_field_offset(lv, v3, 10, "aS_L_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_I, aS_L_I)
//============================================================================



static void Test_aS_L_Ip()
{
  {
    init_simple_test("aS_L_Ip");
    STRUCT_IF_C aS_L_Ip lv;
    check2(sizeof(lv), ABISELECT(18,14), "sizeof(aS_L_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_Ip)");
    check_field_offset(lv, v1, 0, "aS_L_Ip.v1");
    check_field_offset(lv, v2, 2, "aS_L_Ip.v2");
    check_field_offset(lv, v3, 10, "aS_L_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_Ip, aS_L_Ip)
//============================================================================



static void Test_aS_L_L()
{
  {
    init_simple_test("aS_L_L");
    STRUCT_IF_C aS_L_L lv;
    check2(sizeof(lv), 18, "sizeof(aS_L_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_L)");
    check_field_offset(lv, v1, 0, "aS_L_L.v1");
    check_field_offset(lv, v2, 2, "aS_L_L.v2");
    check_field_offset(lv, v3, 10, "aS_L_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_L, aS_L_L)
//============================================================================



static void Test_aS_L_S()
{
  {
    init_simple_test("aS_L_S");
    STRUCT_IF_C aS_L_S lv;
    check2(sizeof(lv), 12, "sizeof(aS_L_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_S)");
    check_field_offset(lv, v1, 0, "aS_L_S.v1");
    check_field_offset(lv, v2, 2, "aS_L_S.v2");
    check_field_offset(lv, v3, 10, "aS_L_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_S, aS_L_S)
//============================================================================



static void Test_aS_L_Uc()
{
  {
    init_simple_test("aS_L_Uc");
    STRUCT_IF_C aS_L_Uc lv;
    check2(sizeof(lv), 11, "sizeof(aS_L_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_Uc)");
    check_field_offset(lv, v1, 0, "aS_L_Uc.v1");
    check_field_offset(lv, v2, 2, "aS_L_Uc.v2");
    check_field_offset(lv, v3, 10, "aS_L_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_Uc, aS_L_Uc)
//============================================================================



static void Test_aS_L_Ui()
{
  {
    init_simple_test("aS_L_Ui");
    STRUCT_IF_C aS_L_Ui lv;
    check2(sizeof(lv), 14, "sizeof(aS_L_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_Ui)");
    check_field_offset(lv, v1, 0, "aS_L_Ui.v1");
    check_field_offset(lv, v2, 2, "aS_L_Ui.v2");
    check_field_offset(lv, v3, 10, "aS_L_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_Ui, aS_L_Ui)
//============================================================================



static void Test_aS_L_Ul()
{
  {
    init_simple_test("aS_L_Ul");
    STRUCT_IF_C aS_L_Ul lv;
    check2(sizeof(lv), 18, "sizeof(aS_L_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_Ul)");
    check_field_offset(lv, v1, 0, "aS_L_Ul.v1");
    check_field_offset(lv, v2, 2, "aS_L_Ul.v2");
    check_field_offset(lv, v3, 10, "aS_L_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_Ul, aS_L_Ul)
//============================================================================



static void Test_aS_L_Us()
{
  {
    init_simple_test("aS_L_Us");
    STRUCT_IF_C aS_L_Us lv;
    check2(sizeof(lv), 12, "sizeof(aS_L_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_Us)");
    check_field_offset(lv, v1, 0, "aS_L_Us.v1");
    check_field_offset(lv, v2, 2, "aS_L_Us.v2");
    check_field_offset(lv, v3, 10, "aS_L_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_Us, aS_L_Us)
//============================================================================



static void Test_aS_L_Vp()
{
  {
    init_simple_test("aS_L_Vp");
    STRUCT_IF_C aS_L_Vp lv;
    check2(sizeof(lv), ABISELECT(18,14), "sizeof(aS_L_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_L_Vp)");
    check_field_offset(lv, v1, 0, "aS_L_Vp.v1");
    check_field_offset(lv, v2, 2, "aS_L_Vp.v2");
    check_field_offset(lv, v3, 10, "aS_L_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_L_Vp, aS_L_Vp)
//============================================================================



static void Test_aS_S()
{
  {
    init_simple_test("aS_S");
    STRUCT_IF_C aS_S lv;
    check2(sizeof(lv), 4, "sizeof(aS_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S)");
    check_field_offset(lv, v1, 0, "aS_S.v1");
    check_field_offset(lv, v2, 2, "aS_S.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S, aS_S)
//============================================================================



static void Test_aS_S_BFu15i()
{
  {
    init_simple_test("aS_S_BFu15i");
    static STRUCT_IF_C aS_S_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aS_S_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_S_BFu15i.v1");
    check_field_offset(lv, v2, 2, "aS_S_BFu15i.v2");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "aS_S_BFu15i");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "aS_S_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_BFu15i, aS_S_BFu15i)
//============================================================================



static void Test_aS_S_BFu15ll()
{
  {
    init_simple_test("aS_S_BFu15ll");
    static STRUCT_IF_C aS_S_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_S_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_S_BFu15ll.v1");
    check_field_offset(lv, v2, 2, "aS_S_BFu15ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "aS_S_BFu15ll");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "aS_S_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_BFu15ll, aS_S_BFu15ll)
//============================================================================



static void Test_aS_S_BFu15s()
{
  {
    init_simple_test("aS_S_BFu15s");
    static STRUCT_IF_C aS_S_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aS_S_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_S_BFu15s.v1");
    check_field_offset(lv, v2, 2, "aS_S_BFu15s.v2");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "aS_S_BFu15s");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "aS_S_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_BFu15s, aS_S_BFu15s)
//============================================================================



static void Test_aS_S_BFu16i()
{
  {
    init_simple_test("aS_S_BFu16i");
    static STRUCT_IF_C aS_S_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aS_S_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_S_BFu16i.v1");
    check_field_offset(lv, v2, 2, "aS_S_BFu16i.v2");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aS_S_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aS_S_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_BFu16i, aS_S_BFu16i)
//============================================================================



static void Test_aS_S_BFu16ll()
{
  {
    init_simple_test("aS_S_BFu16ll");
    static STRUCT_IF_C aS_S_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_S_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_S_BFu16ll.v1");
    check_field_offset(lv, v2, 2, "aS_S_BFu16ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aS_S_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aS_S_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_BFu16ll, aS_S_BFu16ll)
//============================================================================



static void Test_aS_S_BFu16s()
{
  {
    init_simple_test("aS_S_BFu16s");
    static STRUCT_IF_C aS_S_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aS_S_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_S_BFu16s.v1");
    check_field_offset(lv, v2, 2, "aS_S_BFu16s.v2");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aS_S_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aS_S_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_BFu16s, aS_S_BFu16s)
//============================================================================



static void Test_aS_S_BFu17i()
{
  {
    init_simple_test("aS_S_BFu17i");
    static STRUCT_IF_C aS_S_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(aS_S_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_S_BFu17i.v1");
    check_field_offset(lv, v2, 2, "aS_S_BFu17i.v2");
    set_bf_and_test(lv, v3, 4, 0, 17, 1, "aS_S_BFu17i");
    set_bf_and_test(lv, v3, 4, 0, 17, hide_ull(1LL<<16), "aS_S_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_BFu17i, aS_S_BFu17i)
//============================================================================



static void Test_aS_S_BFu17ll()
{
  {
    init_simple_test("aS_S_BFu17ll");
    static STRUCT_IF_C aS_S_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_S_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_S_BFu17ll.v1");
    check_field_offset(lv, v2, 2, "aS_S_BFu17ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 17, 1, "aS_S_BFu17ll");
    set_bf_and_test(lv, v3, 4, 0, 17, hide_ull(1LL<<16), "aS_S_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_BFu17ll, aS_S_BFu17ll)
//============================================================================



static void Test_aS_S_BFu1c()
{
  {
    init_simple_test("aS_S_BFu1c");
    static STRUCT_IF_C aS_S_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(aS_S_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_S_BFu1c.v1");
    check_field_offset(lv, v2, 2, "aS_S_BFu1c.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "aS_S_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_BFu1c, aS_S_BFu1c)
//============================================================================



static void Test_aS_S_BFu1i()
{
  {
    init_simple_test("aS_S_BFu1i");
    static STRUCT_IF_C aS_S_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(aS_S_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_S_BFu1i.v1");
    check_field_offset(lv, v2, 2, "aS_S_BFu1i.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "aS_S_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_BFu1i, aS_S_BFu1i)
//============================================================================



static void Test_aS_S_BFu1ll()
{
  {
    init_simple_test("aS_S_BFu1ll");
    static STRUCT_IF_C aS_S_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_S_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_S_BFu1ll.v1");
    check_field_offset(lv, v2, 2, "aS_S_BFu1ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "aS_S_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_BFu1ll, aS_S_BFu1ll)
//============================================================================



static void Test_aS_S_BFu1s()
{
  {
    init_simple_test("aS_S_BFu1s");
    static STRUCT_IF_C aS_S_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(aS_S_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_S_BFu1s.v1");
    check_field_offset(lv, v2, 2, "aS_S_BFu1s.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "aS_S_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_BFu1s, aS_S_BFu1s)
//============================================================================



static void Test_aS_S_BFu31i()
{
  {
    init_simple_test("aS_S_BFu31i");
    static STRUCT_IF_C aS_S_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(aS_S_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_S_BFu31i.v1");
    check_field_offset(lv, v2, 2, "aS_S_BFu31i.v2");
    set_bf_and_test(lv, v3, 4, 0, 31, 1, "aS_S_BFu31i");
    set_bf_and_test(lv, v3, 4, 0, 31, hide_ull(1LL<<30), "aS_S_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_BFu31i, aS_S_BFu31i)
//============================================================================



static void Test_aS_S_BFu31ll()
{
  {
    init_simple_test("aS_S_BFu31ll");
    static STRUCT_IF_C aS_S_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_S_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_S_BFu31ll.v1");
    check_field_offset(lv, v2, 2, "aS_S_BFu31ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 31, 1, "aS_S_BFu31ll");
    set_bf_and_test(lv, v3, 4, 0, 31, hide_ull(1LL<<30), "aS_S_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_BFu31ll, aS_S_BFu31ll)
//============================================================================



static void Test_aS_S_BFu32i()
{
  {
    init_simple_test("aS_S_BFu32i");
    static STRUCT_IF_C aS_S_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(aS_S_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_S_BFu32i.v1");
    check_field_offset(lv, v2, 2, "aS_S_BFu32i.v2");
    set_bf_and_test(lv, v3, 4, 0, 32, 1, "aS_S_BFu32i");
    set_bf_and_test(lv, v3, 4, 0, 32, hide_ull(1LL<<31), "aS_S_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_BFu32i, aS_S_BFu32i)
//============================================================================



static void Test_aS_S_BFu32ll()
{
  {
    init_simple_test("aS_S_BFu32ll");
    static STRUCT_IF_C aS_S_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_S_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_S_BFu32ll.v1");
    check_field_offset(lv, v2, 2, "aS_S_BFu32ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 32, 1, "aS_S_BFu32ll");
    set_bf_and_test(lv, v3, 4, 0, 32, hide_ull(1LL<<31), "aS_S_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_BFu32ll, aS_S_BFu32ll)
//============================================================================



static void Test_aS_S_BFu33()
{
  {
    init_simple_test("aS_S_BFu33");
    static STRUCT_IF_C aS_S_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(aS_S_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_BFu33)");
    check_field_offset(lv, v1, 0, "aS_S_BFu33.v1");
    check_field_offset(lv, v2, 2, "aS_S_BFu33.v2");
    set_bf_and_test(lv, v3, 4, 0, 33, 1, "aS_S_BFu33");
    set_bf_and_test(lv, v3, 4, 0, 33, hide_ull(1LL<<32), "aS_S_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_BFu33, aS_S_BFu33)
//============================================================================



static void Test_aS_S_BFu7c()
{
  {
    init_simple_test("aS_S_BFu7c");
    static STRUCT_IF_C aS_S_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(aS_S_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_S_BFu7c.v1");
    check_field_offset(lv, v2, 2, "aS_S_BFu7c.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "aS_S_BFu7c");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "aS_S_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_BFu7c, aS_S_BFu7c)
//============================================================================



static void Test_aS_S_BFu7i()
{
  {
    init_simple_test("aS_S_BFu7i");
    static STRUCT_IF_C aS_S_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(aS_S_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_S_BFu7i.v1");
    check_field_offset(lv, v2, 2, "aS_S_BFu7i.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "aS_S_BFu7i");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "aS_S_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_BFu7i, aS_S_BFu7i)
//============================================================================



static void Test_aS_S_BFu7ll()
{
  {
    init_simple_test("aS_S_BFu7ll");
    static STRUCT_IF_C aS_S_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_S_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_S_BFu7ll.v1");
    check_field_offset(lv, v2, 2, "aS_S_BFu7ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "aS_S_BFu7ll");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "aS_S_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_BFu7ll, aS_S_BFu7ll)
//============================================================================



static void Test_aS_S_BFu7s()
{
  {
    init_simple_test("aS_S_BFu7s");
    static STRUCT_IF_C aS_S_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(aS_S_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_S_BFu7s.v1");
    check_field_offset(lv, v2, 2, "aS_S_BFu7s.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "aS_S_BFu7s");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "aS_S_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_BFu7s, aS_S_BFu7s)
//============================================================================



static void Test_aS_S_BFu8c()
{
  {
    init_simple_test("aS_S_BFu8c");
    static STRUCT_IF_C aS_S_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(aS_S_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_S_BFu8c.v1");
    check_field_offset(lv, v2, 2, "aS_S_BFu8c.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "aS_S_BFu8c");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "aS_S_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_BFu8c, aS_S_BFu8c)
//============================================================================



static void Test_aS_S_BFu8i()
{
  {
    init_simple_test("aS_S_BFu8i");
    static STRUCT_IF_C aS_S_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(aS_S_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_S_BFu8i.v1");
    check_field_offset(lv, v2, 2, "aS_S_BFu8i.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "aS_S_BFu8i");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "aS_S_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_BFu8i, aS_S_BFu8i)
//============================================================================



static void Test_aS_S_BFu8ll()
{
  {
    init_simple_test("aS_S_BFu8ll");
    static STRUCT_IF_C aS_S_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_S_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_S_BFu8ll.v1");
    check_field_offset(lv, v2, 2, "aS_S_BFu8ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "aS_S_BFu8ll");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "aS_S_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_BFu8ll, aS_S_BFu8ll)
//============================================================================



static void Test_aS_S_BFu8s()
{
  {
    init_simple_test("aS_S_BFu8s");
    static STRUCT_IF_C aS_S_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(aS_S_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_S_BFu8s.v1");
    check_field_offset(lv, v2, 2, "aS_S_BFu8s.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "aS_S_BFu8s");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "aS_S_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_BFu8s, aS_S_BFu8s)
//============================================================================



static void Test_aS_S_BFu9i()
{
  {
    init_simple_test("aS_S_BFu9i");
    static STRUCT_IF_C aS_S_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(aS_S_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_S_BFu9i.v1");
    check_field_offset(lv, v2, 2, "aS_S_BFu9i.v2");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "aS_S_BFu9i");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "aS_S_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_BFu9i, aS_S_BFu9i)
//============================================================================



static void Test_aS_S_BFu9ll()
{
  {
    init_simple_test("aS_S_BFu9ll");
    static STRUCT_IF_C aS_S_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_S_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_S_BFu9ll.v1");
    check_field_offset(lv, v2, 2, "aS_S_BFu9ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "aS_S_BFu9ll");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "aS_S_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_BFu9ll, aS_S_BFu9ll)
//============================================================================



static void Test_aS_S_BFu9s()
{
  {
    init_simple_test("aS_S_BFu9s");
    static STRUCT_IF_C aS_S_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(aS_S_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_S_BFu9s.v1");
    check_field_offset(lv, v2, 2, "aS_S_BFu9s.v2");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "aS_S_BFu9s");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "aS_S_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_BFu9s, aS_S_BFu9s)
//============================================================================



static void Test_aS_S_C()
{
  {
    init_simple_test("aS_S_C");
    STRUCT_IF_C aS_S_C lv;
    check2(sizeof(lv), 5, "sizeof(aS_S_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_C)");
    check_field_offset(lv, v1, 0, "aS_S_C.v1");
    check_field_offset(lv, v2, 2, "aS_S_C.v2");
    check_field_offset(lv, v3, 4, "aS_S_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_C, aS_S_C)
//============================================================================



static void Test_aS_S_D()
{
  {
    init_simple_test("aS_S_D");
    STRUCT_IF_C aS_S_D lv;
    check2(sizeof(lv), 12, "sizeof(aS_S_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_D)");
    check_field_offset(lv, v1, 0, "aS_S_D.v1");
    check_field_offset(lv, v2, 2, "aS_S_D.v2");
    check_field_offset(lv, v3, 4, "aS_S_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_D, aS_S_D)
//============================================================================



static void Test_aS_S_F()
{
  {
    init_simple_test("aS_S_F");
    STRUCT_IF_C aS_S_F lv;
    check2(sizeof(lv), 8, "sizeof(aS_S_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_F)");
    check_field_offset(lv, v1, 0, "aS_S_F.v1");
    check_field_offset(lv, v2, 2, "aS_S_F.v2");
    check_field_offset(lv, v3, 4, "aS_S_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_F, aS_S_F)
//============================================================================



static void Test_aS_S_I()
{
  {
    init_simple_test("aS_S_I");
    STRUCT_IF_C aS_S_I lv;
    check2(sizeof(lv), 8, "sizeof(aS_S_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_I)");
    check_field_offset(lv, v1, 0, "aS_S_I.v1");
    check_field_offset(lv, v2, 2, "aS_S_I.v2");
    check_field_offset(lv, v3, 4, "aS_S_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_I, aS_S_I)
//============================================================================



static void Test_aS_S_Ip()
{
  {
    init_simple_test("aS_S_Ip");
    STRUCT_IF_C aS_S_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_S_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_Ip)");
    check_field_offset(lv, v1, 0, "aS_S_Ip.v1");
    check_field_offset(lv, v2, 2, "aS_S_Ip.v2");
    check_field_offset(lv, v3, 4, "aS_S_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_Ip, aS_S_Ip)
//============================================================================



static void Test_aS_S_L()
{
  {
    init_simple_test("aS_S_L");
    STRUCT_IF_C aS_S_L lv;
    check2(sizeof(lv), 12, "sizeof(aS_S_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_L)");
    check_field_offset(lv, v1, 0, "aS_S_L.v1");
    check_field_offset(lv, v2, 2, "aS_S_L.v2");
    check_field_offset(lv, v3, 4, "aS_S_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_L, aS_S_L)
//============================================================================



static void Test_aS_S_S()
{
  {
    init_simple_test("aS_S_S");
    STRUCT_IF_C aS_S_S lv;
    check2(sizeof(lv), 6, "sizeof(aS_S_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_S)");
    check_field_offset(lv, v1, 0, "aS_S_S.v1");
    check_field_offset(lv, v2, 2, "aS_S_S.v2");
    check_field_offset(lv, v3, 4, "aS_S_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_S, aS_S_S)
//============================================================================



static void Test_aS_S_Uc()
{
  {
    init_simple_test("aS_S_Uc");
    STRUCT_IF_C aS_S_Uc lv;
    check2(sizeof(lv), 5, "sizeof(aS_S_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_Uc)");
    check_field_offset(lv, v1, 0, "aS_S_Uc.v1");
    check_field_offset(lv, v2, 2, "aS_S_Uc.v2");
    check_field_offset(lv, v3, 4, "aS_S_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_Uc, aS_S_Uc)
//============================================================================



static void Test_aS_S_Ui()
{
  {
    init_simple_test("aS_S_Ui");
    STRUCT_IF_C aS_S_Ui lv;
    check2(sizeof(lv), 8, "sizeof(aS_S_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_Ui)");
    check_field_offset(lv, v1, 0, "aS_S_Ui.v1");
    check_field_offset(lv, v2, 2, "aS_S_Ui.v2");
    check_field_offset(lv, v3, 4, "aS_S_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_Ui, aS_S_Ui)
//============================================================================



static void Test_aS_S_Ul()
{
  {
    init_simple_test("aS_S_Ul");
    STRUCT_IF_C aS_S_Ul lv;
    check2(sizeof(lv), 12, "sizeof(aS_S_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_Ul)");
    check_field_offset(lv, v1, 0, "aS_S_Ul.v1");
    check_field_offset(lv, v2, 2, "aS_S_Ul.v2");
    check_field_offset(lv, v3, 4, "aS_S_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_Ul, aS_S_Ul)
//============================================================================



static void Test_aS_S_Us()
{
  {
    init_simple_test("aS_S_Us");
    STRUCT_IF_C aS_S_Us lv;
    check2(sizeof(lv), 6, "sizeof(aS_S_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_Us)");
    check_field_offset(lv, v1, 0, "aS_S_Us.v1");
    check_field_offset(lv, v2, 2, "aS_S_Us.v2");
    check_field_offset(lv, v3, 4, "aS_S_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_Us, aS_S_Us)
//============================================================================



static void Test_aS_S_Vp()
{
  {
    init_simple_test("aS_S_Vp");
    STRUCT_IF_C aS_S_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_S_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_S_Vp)");
    check_field_offset(lv, v1, 0, "aS_S_Vp.v1");
    check_field_offset(lv, v2, 2, "aS_S_Vp.v2");
    check_field_offset(lv, v3, 4, "aS_S_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_S_Vp, aS_S_Vp)
//============================================================================



static void Test_aS_Uc()
{
  {
    init_simple_test("aS_Uc");
    STRUCT_IF_C aS_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aS_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc)");
    check_field_offset(lv, v1, 0, "aS_Uc.v1");
    check_field_offset(lv, v2, 2, "aS_Uc.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc, aS_Uc)
//============================================================================



static void Test_aS_Uc_BFu15i()
{
  {
    init_simple_test("aS_Uc_BFu15i");
    static STRUCT_IF_C aS_Uc_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aS_Uc_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_Uc_BFu15i.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_BFu15i.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aS_Uc_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aS_Uc_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_BFu15i, aS_Uc_BFu15i)
//============================================================================



static void Test_aS_Uc_BFu15ll()
{
  {
    init_simple_test("aS_Uc_BFu15ll");
    static STRUCT_IF_C aS_Uc_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_Uc_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_Uc_BFu15ll.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_BFu15ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aS_Uc_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aS_Uc_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_BFu15ll, aS_Uc_BFu15ll)
//============================================================================



static void Test_aS_Uc_BFu15s()
{
  {
    init_simple_test("aS_Uc_BFu15s");
    static STRUCT_IF_C aS_Uc_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aS_Uc_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_Uc_BFu15s.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_BFu15s.v2");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aS_Uc_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aS_Uc_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_BFu15s, aS_Uc_BFu15s)
//============================================================================



static void Test_aS_Uc_BFu16i()
{
  {
    init_simple_test("aS_Uc_BFu16i");
    static STRUCT_IF_C aS_Uc_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aS_Uc_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_Uc_BFu16i.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_BFu16i.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aS_Uc_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aS_Uc_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_BFu16i, aS_Uc_BFu16i)
//============================================================================



static void Test_aS_Uc_BFu16ll()
{
  {
    init_simple_test("aS_Uc_BFu16ll");
    static STRUCT_IF_C aS_Uc_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_Uc_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_Uc_BFu16ll.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_BFu16ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aS_Uc_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aS_Uc_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_BFu16ll, aS_Uc_BFu16ll)
//============================================================================



static void Test_aS_Uc_BFu16s()
{
  {
    init_simple_test("aS_Uc_BFu16s");
    static STRUCT_IF_C aS_Uc_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aS_Uc_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_Uc_BFu16s.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_BFu16s.v2");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aS_Uc_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aS_Uc_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_BFu16s, aS_Uc_BFu16s)
//============================================================================



static void Test_aS_Uc_BFu17i()
{
  {
    init_simple_test("aS_Uc_BFu17i");
    static STRUCT_IF_C aS_Uc_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(aS_Uc_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_Uc_BFu17i.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_BFu17i.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aS_Uc_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aS_Uc_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_BFu17i, aS_Uc_BFu17i)
//============================================================================



static void Test_aS_Uc_BFu17ll()
{
  {
    init_simple_test("aS_Uc_BFu17ll");
    static STRUCT_IF_C aS_Uc_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_Uc_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_Uc_BFu17ll.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_BFu17ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aS_Uc_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aS_Uc_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_BFu17ll, aS_Uc_BFu17ll)
//============================================================================



static void Test_aS_Uc_BFu1c()
{
  {
    init_simple_test("aS_Uc_BFu1c");
    static STRUCT_IF_C aS_Uc_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(aS_Uc_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_Uc_BFu1c.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_BFu1c.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aS_Uc_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_BFu1c, aS_Uc_BFu1c)
//============================================================================



static void Test_aS_Uc_BFu1i()
{
  {
    init_simple_test("aS_Uc_BFu1i");
    static STRUCT_IF_C aS_Uc_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(aS_Uc_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_Uc_BFu1i.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_BFu1i.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aS_Uc_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_BFu1i, aS_Uc_BFu1i)
//============================================================================



static void Test_aS_Uc_BFu1ll()
{
  {
    init_simple_test("aS_Uc_BFu1ll");
    static STRUCT_IF_C aS_Uc_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_Uc_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_Uc_BFu1ll.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_BFu1ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aS_Uc_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_BFu1ll, aS_Uc_BFu1ll)
//============================================================================



static void Test_aS_Uc_BFu1s()
{
  {
    init_simple_test("aS_Uc_BFu1s");
    static STRUCT_IF_C aS_Uc_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(aS_Uc_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_Uc_BFu1s.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_BFu1s.v2");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aS_Uc_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_BFu1s, aS_Uc_BFu1s)
//============================================================================



static void Test_aS_Uc_BFu31i()
{
  {
    init_simple_test("aS_Uc_BFu31i");
    static STRUCT_IF_C aS_Uc_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aS_Uc_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_Uc_BFu31i.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_BFu31i.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aS_Uc_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aS_Uc_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_BFu31i, aS_Uc_BFu31i)
//============================================================================



static void Test_aS_Uc_BFu31ll()
{
  {
    init_simple_test("aS_Uc_BFu31ll");
    static STRUCT_IF_C aS_Uc_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_Uc_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_Uc_BFu31ll.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_BFu31ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aS_Uc_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aS_Uc_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_BFu31ll, aS_Uc_BFu31ll)
//============================================================================



static void Test_aS_Uc_BFu32i()
{
  {
    init_simple_test("aS_Uc_BFu32i");
    static STRUCT_IF_C aS_Uc_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aS_Uc_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_Uc_BFu32i.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_BFu32i.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aS_Uc_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aS_Uc_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_BFu32i, aS_Uc_BFu32i)
//============================================================================



static void Test_aS_Uc_BFu32ll()
{
  {
    init_simple_test("aS_Uc_BFu32ll");
    static STRUCT_IF_C aS_Uc_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_Uc_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_Uc_BFu32ll.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_BFu32ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aS_Uc_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aS_Uc_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_BFu32ll, aS_Uc_BFu32ll)
//============================================================================



static void Test_aS_Uc_BFu33()
{
  {
    init_simple_test("aS_Uc_BFu33");
    static STRUCT_IF_C aS_Uc_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(aS_Uc_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_BFu33)");
    check_field_offset(lv, v1, 0, "aS_Uc_BFu33.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_BFu33.v2");
    set_bf_and_test(lv, v3, 3, 0, 33, 1, "aS_Uc_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, hide_ull(1LL<<32), "aS_Uc_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_BFu33, aS_Uc_BFu33)
//============================================================================



static void Test_aS_Uc_BFu7c()
{
  {
    init_simple_test("aS_Uc_BFu7c");
    static STRUCT_IF_C aS_Uc_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aS_Uc_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_Uc_BFu7c.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_BFu7c.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aS_Uc_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aS_Uc_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_BFu7c, aS_Uc_BFu7c)
//============================================================================



static void Test_aS_Uc_BFu7i()
{
  {
    init_simple_test("aS_Uc_BFu7i");
    static STRUCT_IF_C aS_Uc_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aS_Uc_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_Uc_BFu7i.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_BFu7i.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aS_Uc_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aS_Uc_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_BFu7i, aS_Uc_BFu7i)
//============================================================================



static void Test_aS_Uc_BFu7ll()
{
  {
    init_simple_test("aS_Uc_BFu7ll");
    static STRUCT_IF_C aS_Uc_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_Uc_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_Uc_BFu7ll.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_BFu7ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aS_Uc_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aS_Uc_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_BFu7ll, aS_Uc_BFu7ll)
//============================================================================



static void Test_aS_Uc_BFu7s()
{
  {
    init_simple_test("aS_Uc_BFu7s");
    static STRUCT_IF_C aS_Uc_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aS_Uc_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_Uc_BFu7s.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_BFu7s.v2");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aS_Uc_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aS_Uc_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_BFu7s, aS_Uc_BFu7s)
//============================================================================



static void Test_aS_Uc_BFu8c()
{
  {
    init_simple_test("aS_Uc_BFu8c");
    static STRUCT_IF_C aS_Uc_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aS_Uc_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_Uc_BFu8c.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_BFu8c.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aS_Uc_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aS_Uc_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_BFu8c, aS_Uc_BFu8c)
//============================================================================



static void Test_aS_Uc_BFu8i()
{
  {
    init_simple_test("aS_Uc_BFu8i");
    static STRUCT_IF_C aS_Uc_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aS_Uc_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_Uc_BFu8i.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_BFu8i.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aS_Uc_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aS_Uc_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_BFu8i, aS_Uc_BFu8i)
//============================================================================



static void Test_aS_Uc_BFu8ll()
{
  {
    init_simple_test("aS_Uc_BFu8ll");
    static STRUCT_IF_C aS_Uc_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aS_Uc_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_Uc_BFu8ll.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_BFu8ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aS_Uc_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aS_Uc_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_BFu8ll, aS_Uc_BFu8ll)
//============================================================================



static void Test_aS_Uc_BFu8s()
{
  {
    init_simple_test("aS_Uc_BFu8s");
    static STRUCT_IF_C aS_Uc_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aS_Uc_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_Uc_BFu8s.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_BFu8s.v2");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aS_Uc_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aS_Uc_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_BFu8s, aS_Uc_BFu8s)
//============================================================================



static void Test_aS_Uc_BFu9i()
{
  {
    init_simple_test("aS_Uc_BFu9i");
    static STRUCT_IF_C aS_Uc_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(aS_Uc_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_Uc_BFu9i.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_BFu9i.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aS_Uc_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aS_Uc_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_BFu9i, aS_Uc_BFu9i)
//============================================================================



static void Test_aS_Uc_BFu9ll()
{
  {
    init_simple_test("aS_Uc_BFu9ll");
    static STRUCT_IF_C aS_Uc_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_Uc_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_Uc_BFu9ll.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_BFu9ll.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aS_Uc_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aS_Uc_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_BFu9ll, aS_Uc_BFu9ll)
//============================================================================



static void Test_aS_Uc_BFu9s()
{
  {
    init_simple_test("aS_Uc_BFu9s");
    static STRUCT_IF_C aS_Uc_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(aS_Uc_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_Uc_BFu9s.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_BFu9s.v2");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aS_Uc_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aS_Uc_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_BFu9s, aS_Uc_BFu9s)
//============================================================================



static void Test_aS_Uc_C()
{
  {
    init_simple_test("aS_Uc_C");
    STRUCT_IF_C aS_Uc_C lv;
    check2(sizeof(lv), 4, "sizeof(aS_Uc_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_C)");
    check_field_offset(lv, v1, 0, "aS_Uc_C.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_C.v2");
    check_field_offset(lv, v3, 3, "aS_Uc_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_C, aS_Uc_C)
//============================================================================



static void Test_aS_Uc_D()
{
  {
    init_simple_test("aS_Uc_D");
    STRUCT_IF_C aS_Uc_D lv;
    check2(sizeof(lv), 11, "sizeof(aS_Uc_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_D)");
    check_field_offset(lv, v1, 0, "aS_Uc_D.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_D.v2");
    check_field_offset(lv, v3, 3, "aS_Uc_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_D, aS_Uc_D)
//============================================================================



static void Test_aS_Uc_F()
{
  {
    init_simple_test("aS_Uc_F");
    STRUCT_IF_C aS_Uc_F lv;
    check2(sizeof(lv), 7, "sizeof(aS_Uc_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_F)");
    check_field_offset(lv, v1, 0, "aS_Uc_F.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_F.v2");
    check_field_offset(lv, v3, 3, "aS_Uc_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_F, aS_Uc_F)
//============================================================================



static void Test_aS_Uc_I()
{
  {
    init_simple_test("aS_Uc_I");
    STRUCT_IF_C aS_Uc_I lv;
    check2(sizeof(lv), 7, "sizeof(aS_Uc_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_I)");
    check_field_offset(lv, v1, 0, "aS_Uc_I.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_I.v2");
    check_field_offset(lv, v3, 3, "aS_Uc_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_I, aS_Uc_I)
//============================================================================



static void Test_aS_Uc_Ip()
{
  {
    init_simple_test("aS_Uc_Ip");
    STRUCT_IF_C aS_Uc_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Uc_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_Ip)");
    check_field_offset(lv, v1, 0, "aS_Uc_Ip.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_Ip.v2");
    check_field_offset(lv, v3, 3, "aS_Uc_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_Ip, aS_Uc_Ip)
//============================================================================



static void Test_aS_Uc_L()
{
  {
    init_simple_test("aS_Uc_L");
    STRUCT_IF_C aS_Uc_L lv;
    check2(sizeof(lv), 11, "sizeof(aS_Uc_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_L)");
    check_field_offset(lv, v1, 0, "aS_Uc_L.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_L.v2");
    check_field_offset(lv, v3, 3, "aS_Uc_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_L, aS_Uc_L)
//============================================================================



static void Test_aS_Uc_S()
{
  {
    init_simple_test("aS_Uc_S");
    STRUCT_IF_C aS_Uc_S lv;
    check2(sizeof(lv), 5, "sizeof(aS_Uc_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_S)");
    check_field_offset(lv, v1, 0, "aS_Uc_S.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_S.v2");
    check_field_offset(lv, v3, 3, "aS_Uc_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_S, aS_Uc_S)
//============================================================================



static void Test_aS_Uc_Uc()
{
  {
    init_simple_test("aS_Uc_Uc");
    STRUCT_IF_C aS_Uc_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aS_Uc_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_Uc)");
    check_field_offset(lv, v1, 0, "aS_Uc_Uc.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_Uc.v2");
    check_field_offset(lv, v3, 3, "aS_Uc_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_Uc, aS_Uc_Uc)
//============================================================================



static void Test_aS_Uc_Ui()
{
  {
    init_simple_test("aS_Uc_Ui");
    STRUCT_IF_C aS_Uc_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aS_Uc_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_Ui)");
    check_field_offset(lv, v1, 0, "aS_Uc_Ui.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_Ui.v2");
    check_field_offset(lv, v3, 3, "aS_Uc_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_Ui, aS_Uc_Ui)
//============================================================================



static void Test_aS_Uc_Ul()
{
  {
    init_simple_test("aS_Uc_Ul");
    STRUCT_IF_C aS_Uc_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aS_Uc_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_Ul)");
    check_field_offset(lv, v1, 0, "aS_Uc_Ul.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_Ul.v2");
    check_field_offset(lv, v3, 3, "aS_Uc_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_Ul, aS_Uc_Ul)
//============================================================================



static void Test_aS_Uc_Us()
{
  {
    init_simple_test("aS_Uc_Us");
    STRUCT_IF_C aS_Uc_Us lv;
    check2(sizeof(lv), 5, "sizeof(aS_Uc_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_Us)");
    check_field_offset(lv, v1, 0, "aS_Uc_Us.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_Us.v2");
    check_field_offset(lv, v3, 3, "aS_Uc_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_Us, aS_Uc_Us)
//============================================================================



static void Test_aS_Uc_Vp()
{
  {
    init_simple_test("aS_Uc_Vp");
    STRUCT_IF_C aS_Uc_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Uc_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Uc_Vp)");
    check_field_offset(lv, v1, 0, "aS_Uc_Vp.v1");
    check_field_offset(lv, v2, 2, "aS_Uc_Vp.v2");
    check_field_offset(lv, v3, 3, "aS_Uc_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Uc_Vp, aS_Uc_Vp)
//============================================================================



static void Test_aS_Ui()
{
  {
    init_simple_test("aS_Ui");
    STRUCT_IF_C aS_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aS_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui)");
    check_field_offset(lv, v1, 0, "aS_Ui.v1");
    check_field_offset(lv, v2, 2, "aS_Ui.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui, aS_Ui)
//============================================================================



static void Test_aS_Ui_BFu15i()
{
  {
    init_simple_test("aS_Ui_BFu15i");
    static STRUCT_IF_C aS_Ui_BFu15i lv;
    check2(sizeof(lv), 8, "sizeof(aS_Ui_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_Ui_BFu15i.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_BFu15i.v2");
    set_bf_and_test(lv, v3, 6, 0, 15, 1, "aS_Ui_BFu15i");
    set_bf_and_test(lv, v3, 6, 0, 15, hide_ull(1LL<<14), "aS_Ui_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_BFu15i, aS_Ui_BFu15i)
//============================================================================



static void Test_aS_Ui_BFu15ll()
{
  {
    init_simple_test("aS_Ui_BFu15ll");
    static STRUCT_IF_C aS_Ui_BFu15ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_Ui_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_Ui_BFu15ll.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_BFu15ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 15, 1, "aS_Ui_BFu15ll");
    set_bf_and_test(lv, v3, 6, 0, 15, hide_ull(1LL<<14), "aS_Ui_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_BFu15ll, aS_Ui_BFu15ll)
//============================================================================



static void Test_aS_Ui_BFu15s()
{
  {
    init_simple_test("aS_Ui_BFu15s");
    static STRUCT_IF_C aS_Ui_BFu15s lv;
    check2(sizeof(lv), 8, "sizeof(aS_Ui_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_Ui_BFu15s.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_BFu15s.v2");
    set_bf_and_test(lv, v3, 6, 0, 15, 1, "aS_Ui_BFu15s");
    set_bf_and_test(lv, v3, 6, 0, 15, hide_ull(1LL<<14), "aS_Ui_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_BFu15s, aS_Ui_BFu15s)
//============================================================================



static void Test_aS_Ui_BFu16i()
{
  {
    init_simple_test("aS_Ui_BFu16i");
    static STRUCT_IF_C aS_Ui_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aS_Ui_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_Ui_BFu16i.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_BFu16i.v2");
    set_bf_and_test(lv, v3, 6, 0, 16, 1, "aS_Ui_BFu16i");
    set_bf_and_test(lv, v3, 6, 0, 16, hide_ull(1LL<<15), "aS_Ui_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_BFu16i, aS_Ui_BFu16i)
//============================================================================



static void Test_aS_Ui_BFu16ll()
{
  {
    init_simple_test("aS_Ui_BFu16ll");
    static STRUCT_IF_C aS_Ui_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_Ui_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_Ui_BFu16ll.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_BFu16ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 16, 1, "aS_Ui_BFu16ll");
    set_bf_and_test(lv, v3, 6, 0, 16, hide_ull(1LL<<15), "aS_Ui_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_BFu16ll, aS_Ui_BFu16ll)
//============================================================================



static void Test_aS_Ui_BFu16s()
{
  {
    init_simple_test("aS_Ui_BFu16s");
    static STRUCT_IF_C aS_Ui_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aS_Ui_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_Ui_BFu16s.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_BFu16s.v2");
    set_bf_and_test(lv, v3, 6, 0, 16, 1, "aS_Ui_BFu16s");
    set_bf_and_test(lv, v3, 6, 0, 16, hide_ull(1LL<<15), "aS_Ui_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_BFu16s, aS_Ui_BFu16s)
//============================================================================



static void Test_aS_Ui_BFu17i()
{
  {
    init_simple_test("aS_Ui_BFu17i");
    static STRUCT_IF_C aS_Ui_BFu17i lv;
    check2(sizeof(lv), 9, "sizeof(aS_Ui_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_Ui_BFu17i.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_BFu17i.v2");
    set_bf_and_test(lv, v3, 6, 0, 17, 1, "aS_Ui_BFu17i");
    set_bf_and_test(lv, v3, 6, 0, 17, hide_ull(1LL<<16), "aS_Ui_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_BFu17i, aS_Ui_BFu17i)
//============================================================================



static void Test_aS_Ui_BFu17ll()
{
  {
    init_simple_test("aS_Ui_BFu17ll");
    static STRUCT_IF_C aS_Ui_BFu17ll lv;
    check2(sizeof(lv), 9, "sizeof(aS_Ui_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_Ui_BFu17ll.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_BFu17ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 17, 1, "aS_Ui_BFu17ll");
    set_bf_and_test(lv, v3, 6, 0, 17, hide_ull(1LL<<16), "aS_Ui_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_BFu17ll, aS_Ui_BFu17ll)
//============================================================================



static void Test_aS_Ui_BFu1c()
{
  {
    init_simple_test("aS_Ui_BFu1c");
    static STRUCT_IF_C aS_Ui_BFu1c lv;
    check2(sizeof(lv), 7, "sizeof(aS_Ui_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_Ui_BFu1c.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_BFu1c.v2");
    set_bf_and_test(lv, v3, 6, 0, 1, 1, "aS_Ui_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_BFu1c, aS_Ui_BFu1c)
//============================================================================



static void Test_aS_Ui_BFu1i()
{
  {
    init_simple_test("aS_Ui_BFu1i");
    static STRUCT_IF_C aS_Ui_BFu1i lv;
    check2(sizeof(lv), 7, "sizeof(aS_Ui_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_Ui_BFu1i.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_BFu1i.v2");
    set_bf_and_test(lv, v3, 6, 0, 1, 1, "aS_Ui_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_BFu1i, aS_Ui_BFu1i)
//============================================================================



static void Test_aS_Ui_BFu1ll()
{
  {
    init_simple_test("aS_Ui_BFu1ll");
    static STRUCT_IF_C aS_Ui_BFu1ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_Ui_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_Ui_BFu1ll.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_BFu1ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 1, 1, "aS_Ui_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_BFu1ll, aS_Ui_BFu1ll)
//============================================================================



static void Test_aS_Ui_BFu1s()
{
  {
    init_simple_test("aS_Ui_BFu1s");
    static STRUCT_IF_C aS_Ui_BFu1s lv;
    check2(sizeof(lv), 7, "sizeof(aS_Ui_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_Ui_BFu1s.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_BFu1s.v2");
    set_bf_and_test(lv, v3, 6, 0, 1, 1, "aS_Ui_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_BFu1s, aS_Ui_BFu1s)
//============================================================================



static void Test_aS_Ui_BFu31i()
{
  {
    init_simple_test("aS_Ui_BFu31i");
    static STRUCT_IF_C aS_Ui_BFu31i lv;
    check2(sizeof(lv), 10, "sizeof(aS_Ui_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_Ui_BFu31i.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_BFu31i.v2");
    set_bf_and_test(lv, v3, 6, 0, 31, 1, "aS_Ui_BFu31i");
    set_bf_and_test(lv, v3, 6, 0, 31, hide_ull(1LL<<30), "aS_Ui_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_BFu31i, aS_Ui_BFu31i)
//============================================================================



static void Test_aS_Ui_BFu31ll()
{
  {
    init_simple_test("aS_Ui_BFu31ll");
    static STRUCT_IF_C aS_Ui_BFu31ll lv;
    check2(sizeof(lv), 10, "sizeof(aS_Ui_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_Ui_BFu31ll.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_BFu31ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 31, 1, "aS_Ui_BFu31ll");
    set_bf_and_test(lv, v3, 6, 0, 31, hide_ull(1LL<<30), "aS_Ui_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_BFu31ll, aS_Ui_BFu31ll)
//============================================================================



static void Test_aS_Ui_BFu32i()
{
  {
    init_simple_test("aS_Ui_BFu32i");
    static STRUCT_IF_C aS_Ui_BFu32i lv;
    check2(sizeof(lv), 10, "sizeof(aS_Ui_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_Ui_BFu32i.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_BFu32i.v2");
    set_bf_and_test(lv, v3, 6, 0, 32, 1, "aS_Ui_BFu32i");
    set_bf_and_test(lv, v3, 6, 0, 32, hide_ull(1LL<<31), "aS_Ui_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_BFu32i, aS_Ui_BFu32i)
//============================================================================



static void Test_aS_Ui_BFu32ll()
{
  {
    init_simple_test("aS_Ui_BFu32ll");
    static STRUCT_IF_C aS_Ui_BFu32ll lv;
    check2(sizeof(lv), 10, "sizeof(aS_Ui_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_Ui_BFu32ll.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_BFu32ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 32, 1, "aS_Ui_BFu32ll");
    set_bf_and_test(lv, v3, 6, 0, 32, hide_ull(1LL<<31), "aS_Ui_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_BFu32ll, aS_Ui_BFu32ll)
//============================================================================



static void Test_aS_Ui_BFu33()
{
  {
    init_simple_test("aS_Ui_BFu33");
    static STRUCT_IF_C aS_Ui_BFu33 lv;
    check2(sizeof(lv), 11, "sizeof(aS_Ui_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_BFu33)");
    check_field_offset(lv, v1, 0, "aS_Ui_BFu33.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_BFu33.v2");
    set_bf_and_test(lv, v3, 6, 0, 33, 1, "aS_Ui_BFu33");
    set_bf_and_test(lv, v3, 6, 0, 33, hide_ull(1LL<<32), "aS_Ui_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_BFu33, aS_Ui_BFu33)
//============================================================================



static void Test_aS_Ui_BFu7c()
{
  {
    init_simple_test("aS_Ui_BFu7c");
    static STRUCT_IF_C aS_Ui_BFu7c lv;
    check2(sizeof(lv), 7, "sizeof(aS_Ui_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_Ui_BFu7c.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_BFu7c.v2");
    set_bf_and_test(lv, v3, 6, 0, 7, 1, "aS_Ui_BFu7c");
    set_bf_and_test(lv, v3, 6, 0, 7, hide_ull(1LL<<6), "aS_Ui_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_BFu7c, aS_Ui_BFu7c)
//============================================================================



static void Test_aS_Ui_BFu7i()
{
  {
    init_simple_test("aS_Ui_BFu7i");
    static STRUCT_IF_C aS_Ui_BFu7i lv;
    check2(sizeof(lv), 7, "sizeof(aS_Ui_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_Ui_BFu7i.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_BFu7i.v2");
    set_bf_and_test(lv, v3, 6, 0, 7, 1, "aS_Ui_BFu7i");
    set_bf_and_test(lv, v3, 6, 0, 7, hide_ull(1LL<<6), "aS_Ui_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_BFu7i, aS_Ui_BFu7i)
//============================================================================



static void Test_aS_Ui_BFu7ll()
{
  {
    init_simple_test("aS_Ui_BFu7ll");
    static STRUCT_IF_C aS_Ui_BFu7ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_Ui_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_Ui_BFu7ll.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_BFu7ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 7, 1, "aS_Ui_BFu7ll");
    set_bf_and_test(lv, v3, 6, 0, 7, hide_ull(1LL<<6), "aS_Ui_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_BFu7ll, aS_Ui_BFu7ll)
//============================================================================



static void Test_aS_Ui_BFu7s()
{
  {
    init_simple_test("aS_Ui_BFu7s");
    static STRUCT_IF_C aS_Ui_BFu7s lv;
    check2(sizeof(lv), 7, "sizeof(aS_Ui_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_Ui_BFu7s.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_BFu7s.v2");
    set_bf_and_test(lv, v3, 6, 0, 7, 1, "aS_Ui_BFu7s");
    set_bf_and_test(lv, v3, 6, 0, 7, hide_ull(1LL<<6), "aS_Ui_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_BFu7s, aS_Ui_BFu7s)
//============================================================================



static void Test_aS_Ui_BFu8c()
{
  {
    init_simple_test("aS_Ui_BFu8c");
    static STRUCT_IF_C aS_Ui_BFu8c lv;
    check2(sizeof(lv), 7, "sizeof(aS_Ui_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_Ui_BFu8c.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_BFu8c.v2");
    set_bf_and_test(lv, v3, 6, 0, 8, 1, "aS_Ui_BFu8c");
    set_bf_and_test(lv, v3, 6, 0, 8, hide_ull(1LL<<7), "aS_Ui_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_BFu8c, aS_Ui_BFu8c)
//============================================================================



static void Test_aS_Ui_BFu8i()
{
  {
    init_simple_test("aS_Ui_BFu8i");
    static STRUCT_IF_C aS_Ui_BFu8i lv;
    check2(sizeof(lv), 7, "sizeof(aS_Ui_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_Ui_BFu8i.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_BFu8i.v2");
    set_bf_and_test(lv, v3, 6, 0, 8, 1, "aS_Ui_BFu8i");
    set_bf_and_test(lv, v3, 6, 0, 8, hide_ull(1LL<<7), "aS_Ui_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_BFu8i, aS_Ui_BFu8i)
//============================================================================



static void Test_aS_Ui_BFu8ll()
{
  {
    init_simple_test("aS_Ui_BFu8ll");
    static STRUCT_IF_C aS_Ui_BFu8ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_Ui_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_Ui_BFu8ll.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_BFu8ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 8, 1, "aS_Ui_BFu8ll");
    set_bf_and_test(lv, v3, 6, 0, 8, hide_ull(1LL<<7), "aS_Ui_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_BFu8ll, aS_Ui_BFu8ll)
//============================================================================



static void Test_aS_Ui_BFu8s()
{
  {
    init_simple_test("aS_Ui_BFu8s");
    static STRUCT_IF_C aS_Ui_BFu8s lv;
    check2(sizeof(lv), 7, "sizeof(aS_Ui_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_Ui_BFu8s.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_BFu8s.v2");
    set_bf_and_test(lv, v3, 6, 0, 8, 1, "aS_Ui_BFu8s");
    set_bf_and_test(lv, v3, 6, 0, 8, hide_ull(1LL<<7), "aS_Ui_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_BFu8s, aS_Ui_BFu8s)
//============================================================================



static void Test_aS_Ui_BFu9i()
{
  {
    init_simple_test("aS_Ui_BFu9i");
    static STRUCT_IF_C aS_Ui_BFu9i lv;
    check2(sizeof(lv), 8, "sizeof(aS_Ui_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_Ui_BFu9i.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_BFu9i.v2");
    set_bf_and_test(lv, v3, 6, 0, 9, 1, "aS_Ui_BFu9i");
    set_bf_and_test(lv, v3, 6, 0, 9, hide_ull(1LL<<8), "aS_Ui_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_BFu9i, aS_Ui_BFu9i)
//============================================================================



static void Test_aS_Ui_BFu9ll()
{
  {
    init_simple_test("aS_Ui_BFu9ll");
    static STRUCT_IF_C aS_Ui_BFu9ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_Ui_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_Ui_BFu9ll.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_BFu9ll.v2");
    set_bf_and_test(lv, v3, 6, 0, 9, 1, "aS_Ui_BFu9ll");
    set_bf_and_test(lv, v3, 6, 0, 9, hide_ull(1LL<<8), "aS_Ui_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_BFu9ll, aS_Ui_BFu9ll)
//============================================================================



static void Test_aS_Ui_BFu9s()
{
  {
    init_simple_test("aS_Ui_BFu9s");
    static STRUCT_IF_C aS_Ui_BFu9s lv;
    check2(sizeof(lv), 8, "sizeof(aS_Ui_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_Ui_BFu9s.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_BFu9s.v2");
    set_bf_and_test(lv, v3, 6, 0, 9, 1, "aS_Ui_BFu9s");
    set_bf_and_test(lv, v3, 6, 0, 9, hide_ull(1LL<<8), "aS_Ui_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_BFu9s, aS_Ui_BFu9s)
//============================================================================



static void Test_aS_Ui_C()
{
  {
    init_simple_test("aS_Ui_C");
    STRUCT_IF_C aS_Ui_C lv;
    check2(sizeof(lv), 7, "sizeof(aS_Ui_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_C)");
    check_field_offset(lv, v1, 0, "aS_Ui_C.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_C.v2");
    check_field_offset(lv, v3, 6, "aS_Ui_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_C, aS_Ui_C)
//============================================================================



static void Test_aS_Ui_D()
{
  {
    init_simple_test("aS_Ui_D");
    STRUCT_IF_C aS_Ui_D lv;
    check2(sizeof(lv), 14, "sizeof(aS_Ui_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_D)");
    check_field_offset(lv, v1, 0, "aS_Ui_D.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_D.v2");
    check_field_offset(lv, v3, 6, "aS_Ui_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_D, aS_Ui_D)
//============================================================================



static void Test_aS_Ui_F()
{
  {
    init_simple_test("aS_Ui_F");
    STRUCT_IF_C aS_Ui_F lv;
    check2(sizeof(lv), 10, "sizeof(aS_Ui_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_F)");
    check_field_offset(lv, v1, 0, "aS_Ui_F.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_F.v2");
    check_field_offset(lv, v3, 6, "aS_Ui_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_F, aS_Ui_F)
//============================================================================



static void Test_aS_Ui_I()
{
  {
    init_simple_test("aS_Ui_I");
    STRUCT_IF_C aS_Ui_I lv;
    check2(sizeof(lv), 10, "sizeof(aS_Ui_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_I)");
    check_field_offset(lv, v1, 0, "aS_Ui_I.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_I.v2");
    check_field_offset(lv, v3, 6, "aS_Ui_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_I, aS_Ui_I)
//============================================================================



static void Test_aS_Ui_Ip()
{
  {
    init_simple_test("aS_Ui_Ip");
    STRUCT_IF_C aS_Ui_Ip lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aS_Ui_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_Ip)");
    check_field_offset(lv, v1, 0, "aS_Ui_Ip.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_Ip.v2");
    check_field_offset(lv, v3, 6, "aS_Ui_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_Ip, aS_Ui_Ip)
//============================================================================



static void Test_aS_Ui_L()
{
  {
    init_simple_test("aS_Ui_L");
    STRUCT_IF_C aS_Ui_L lv;
    check2(sizeof(lv), 14, "sizeof(aS_Ui_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_L)");
    check_field_offset(lv, v1, 0, "aS_Ui_L.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_L.v2");
    check_field_offset(lv, v3, 6, "aS_Ui_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_L, aS_Ui_L)
//============================================================================



static void Test_aS_Ui_S()
{
  {
    init_simple_test("aS_Ui_S");
    STRUCT_IF_C aS_Ui_S lv;
    check2(sizeof(lv), 8, "sizeof(aS_Ui_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_S)");
    check_field_offset(lv, v1, 0, "aS_Ui_S.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_S.v2");
    check_field_offset(lv, v3, 6, "aS_Ui_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_S, aS_Ui_S)
//============================================================================



static void Test_aS_Ui_Uc()
{
  {
    init_simple_test("aS_Ui_Uc");
    STRUCT_IF_C aS_Ui_Uc lv;
    check2(sizeof(lv), 7, "sizeof(aS_Ui_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_Uc)");
    check_field_offset(lv, v1, 0, "aS_Ui_Uc.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_Uc.v2");
    check_field_offset(lv, v3, 6, "aS_Ui_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_Uc, aS_Ui_Uc)
//============================================================================



static void Test_aS_Ui_Ui()
{
  {
    init_simple_test("aS_Ui_Ui");
    STRUCT_IF_C aS_Ui_Ui lv;
    check2(sizeof(lv), 10, "sizeof(aS_Ui_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_Ui)");
    check_field_offset(lv, v1, 0, "aS_Ui_Ui.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_Ui.v2");
    check_field_offset(lv, v3, 6, "aS_Ui_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_Ui, aS_Ui_Ui)
//============================================================================



static void Test_aS_Ui_Ul()
{
  {
    init_simple_test("aS_Ui_Ul");
    STRUCT_IF_C aS_Ui_Ul lv;
    check2(sizeof(lv), 14, "sizeof(aS_Ui_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_Ul)");
    check_field_offset(lv, v1, 0, "aS_Ui_Ul.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_Ul.v2");
    check_field_offset(lv, v3, 6, "aS_Ui_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_Ul, aS_Ui_Ul)
//============================================================================



static void Test_aS_Ui_Us()
{
  {
    init_simple_test("aS_Ui_Us");
    STRUCT_IF_C aS_Ui_Us lv;
    check2(sizeof(lv), 8, "sizeof(aS_Ui_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_Us)");
    check_field_offset(lv, v1, 0, "aS_Ui_Us.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_Us.v2");
    check_field_offset(lv, v3, 6, "aS_Ui_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_Us, aS_Ui_Us)
//============================================================================



static void Test_aS_Ui_Vp()
{
  {
    init_simple_test("aS_Ui_Vp");
    STRUCT_IF_C aS_Ui_Vp lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aS_Ui_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ui_Vp)");
    check_field_offset(lv, v1, 0, "aS_Ui_Vp.v1");
    check_field_offset(lv, v2, 2, "aS_Ui_Vp.v2");
    check_field_offset(lv, v3, 6, "aS_Ui_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ui_Vp, aS_Ui_Vp)
//============================================================================



static void Test_aS_Ul()
{
  {
    init_simple_test("aS_Ul");
    STRUCT_IF_C aS_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aS_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul)");
    check_field_offset(lv, v1, 0, "aS_Ul.v1");
    check_field_offset(lv, v2, 2, "aS_Ul.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul, aS_Ul)
//============================================================================



static void Test_aS_Ul_BFu15i()
{
  {
    init_simple_test("aS_Ul_BFu15i");
    static STRUCT_IF_C aS_Ul_BFu15i lv;
    check2(sizeof(lv), 12, "sizeof(aS_Ul_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_Ul_BFu15i.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_BFu15i.v2");
    set_bf_and_test(lv, v3, 10, 0, 15, 1, "aS_Ul_BFu15i");
    set_bf_and_test(lv, v3, 10, 0, 15, hide_ull(1LL<<14), "aS_Ul_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_BFu15i, aS_Ul_BFu15i)
//============================================================================



static void Test_aS_Ul_BFu15ll()
{
  {
    init_simple_test("aS_Ul_BFu15ll");
    static STRUCT_IF_C aS_Ul_BFu15ll lv;
    check2(sizeof(lv), 12, "sizeof(aS_Ul_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_Ul_BFu15ll.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_BFu15ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 15, 1, "aS_Ul_BFu15ll");
    set_bf_and_test(lv, v3, 10, 0, 15, hide_ull(1LL<<14), "aS_Ul_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_BFu15ll, aS_Ul_BFu15ll)
//============================================================================



static void Test_aS_Ul_BFu15s()
{
  {
    init_simple_test("aS_Ul_BFu15s");
    static STRUCT_IF_C aS_Ul_BFu15s lv;
    check2(sizeof(lv), 12, "sizeof(aS_Ul_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_Ul_BFu15s.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_BFu15s.v2");
    set_bf_and_test(lv, v3, 10, 0, 15, 1, "aS_Ul_BFu15s");
    set_bf_and_test(lv, v3, 10, 0, 15, hide_ull(1LL<<14), "aS_Ul_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_BFu15s, aS_Ul_BFu15s)
//============================================================================



static void Test_aS_Ul_BFu16i()
{
  {
    init_simple_test("aS_Ul_BFu16i");
    static STRUCT_IF_C aS_Ul_BFu16i lv;
    check2(sizeof(lv), 12, "sizeof(aS_Ul_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_Ul_BFu16i.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_BFu16i.v2");
    set_bf_and_test(lv, v3, 10, 0, 16, 1, "aS_Ul_BFu16i");
    set_bf_and_test(lv, v3, 10, 0, 16, hide_ull(1LL<<15), "aS_Ul_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_BFu16i, aS_Ul_BFu16i)
//============================================================================



static void Test_aS_Ul_BFu16ll()
{
  {
    init_simple_test("aS_Ul_BFu16ll");
    static STRUCT_IF_C aS_Ul_BFu16ll lv;
    check2(sizeof(lv), 12, "sizeof(aS_Ul_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_Ul_BFu16ll.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_BFu16ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 16, 1, "aS_Ul_BFu16ll");
    set_bf_and_test(lv, v3, 10, 0, 16, hide_ull(1LL<<15), "aS_Ul_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_BFu16ll, aS_Ul_BFu16ll)
//============================================================================



static void Test_aS_Ul_BFu16s()
{
  {
    init_simple_test("aS_Ul_BFu16s");
    static STRUCT_IF_C aS_Ul_BFu16s lv;
    check2(sizeof(lv), 12, "sizeof(aS_Ul_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_Ul_BFu16s.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_BFu16s.v2");
    set_bf_and_test(lv, v3, 10, 0, 16, 1, "aS_Ul_BFu16s");
    set_bf_and_test(lv, v3, 10, 0, 16, hide_ull(1LL<<15), "aS_Ul_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_BFu16s, aS_Ul_BFu16s)
//============================================================================



static void Test_aS_Ul_BFu17i()
{
  {
    init_simple_test("aS_Ul_BFu17i");
    static STRUCT_IF_C aS_Ul_BFu17i lv;
    check2(sizeof(lv), 13, "sizeof(aS_Ul_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_Ul_BFu17i.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_BFu17i.v2");
    set_bf_and_test(lv, v3, 10, 0, 17, 1, "aS_Ul_BFu17i");
    set_bf_and_test(lv, v3, 10, 0, 17, hide_ull(1LL<<16), "aS_Ul_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_BFu17i, aS_Ul_BFu17i)
//============================================================================



static void Test_aS_Ul_BFu17ll()
{
  {
    init_simple_test("aS_Ul_BFu17ll");
    static STRUCT_IF_C aS_Ul_BFu17ll lv;
    check2(sizeof(lv), 13, "sizeof(aS_Ul_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_Ul_BFu17ll.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_BFu17ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 17, 1, "aS_Ul_BFu17ll");
    set_bf_and_test(lv, v3, 10, 0, 17, hide_ull(1LL<<16), "aS_Ul_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_BFu17ll, aS_Ul_BFu17ll)
//============================================================================



static void Test_aS_Ul_BFu1c()
{
  {
    init_simple_test("aS_Ul_BFu1c");
    static STRUCT_IF_C aS_Ul_BFu1c lv;
    check2(sizeof(lv), 11, "sizeof(aS_Ul_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_Ul_BFu1c.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_BFu1c.v2");
    set_bf_and_test(lv, v3, 10, 0, 1, 1, "aS_Ul_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_BFu1c, aS_Ul_BFu1c)
//============================================================================



static void Test_aS_Ul_BFu1i()
{
  {
    init_simple_test("aS_Ul_BFu1i");
    static STRUCT_IF_C aS_Ul_BFu1i lv;
    check2(sizeof(lv), 11, "sizeof(aS_Ul_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_Ul_BFu1i.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_BFu1i.v2");
    set_bf_and_test(lv, v3, 10, 0, 1, 1, "aS_Ul_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_BFu1i, aS_Ul_BFu1i)
//============================================================================



static void Test_aS_Ul_BFu1ll()
{
  {
    init_simple_test("aS_Ul_BFu1ll");
    static STRUCT_IF_C aS_Ul_BFu1ll lv;
    check2(sizeof(lv), 11, "sizeof(aS_Ul_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_Ul_BFu1ll.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_BFu1ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 1, 1, "aS_Ul_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_BFu1ll, aS_Ul_BFu1ll)
//============================================================================



static void Test_aS_Ul_BFu1s()
{
  {
    init_simple_test("aS_Ul_BFu1s");
    static STRUCT_IF_C aS_Ul_BFu1s lv;
    check2(sizeof(lv), 11, "sizeof(aS_Ul_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_Ul_BFu1s.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_BFu1s.v2");
    set_bf_and_test(lv, v3, 10, 0, 1, 1, "aS_Ul_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_BFu1s, aS_Ul_BFu1s)
//============================================================================



static void Test_aS_Ul_BFu31i()
{
  {
    init_simple_test("aS_Ul_BFu31i");
    static STRUCT_IF_C aS_Ul_BFu31i lv;
    check2(sizeof(lv), 14, "sizeof(aS_Ul_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_Ul_BFu31i.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_BFu31i.v2");
    set_bf_and_test(lv, v3, 10, 0, 31, 1, "aS_Ul_BFu31i");
    set_bf_and_test(lv, v3, 10, 0, 31, hide_ull(1LL<<30), "aS_Ul_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_BFu31i, aS_Ul_BFu31i)
//============================================================================



static void Test_aS_Ul_BFu31ll()
{
  {
    init_simple_test("aS_Ul_BFu31ll");
    static STRUCT_IF_C aS_Ul_BFu31ll lv;
    check2(sizeof(lv), 14, "sizeof(aS_Ul_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_Ul_BFu31ll.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_BFu31ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 31, 1, "aS_Ul_BFu31ll");
    set_bf_and_test(lv, v3, 10, 0, 31, hide_ull(1LL<<30), "aS_Ul_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_BFu31ll, aS_Ul_BFu31ll)
//============================================================================



static void Test_aS_Ul_BFu32i()
{
  {
    init_simple_test("aS_Ul_BFu32i");
    static STRUCT_IF_C aS_Ul_BFu32i lv;
    check2(sizeof(lv), 14, "sizeof(aS_Ul_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_Ul_BFu32i.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_BFu32i.v2");
    set_bf_and_test(lv, v3, 10, 0, 32, 1, "aS_Ul_BFu32i");
    set_bf_and_test(lv, v3, 10, 0, 32, hide_ull(1LL<<31), "aS_Ul_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_BFu32i, aS_Ul_BFu32i)
//============================================================================



static void Test_aS_Ul_BFu32ll()
{
  {
    init_simple_test("aS_Ul_BFu32ll");
    static STRUCT_IF_C aS_Ul_BFu32ll lv;
    check2(sizeof(lv), 14, "sizeof(aS_Ul_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_Ul_BFu32ll.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_BFu32ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 32, 1, "aS_Ul_BFu32ll");
    set_bf_and_test(lv, v3, 10, 0, 32, hide_ull(1LL<<31), "aS_Ul_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_BFu32ll, aS_Ul_BFu32ll)
//============================================================================



static void Test_aS_Ul_BFu33()
{
  {
    init_simple_test("aS_Ul_BFu33");
    static STRUCT_IF_C aS_Ul_BFu33 lv;
    check2(sizeof(lv), 15, "sizeof(aS_Ul_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_BFu33)");
    check_field_offset(lv, v1, 0, "aS_Ul_BFu33.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_BFu33.v2");
    set_bf_and_test(lv, v3, 10, 0, 33, 1, "aS_Ul_BFu33");
    set_bf_and_test(lv, v3, 10, 0, 33, hide_ull(1LL<<32), "aS_Ul_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_BFu33, aS_Ul_BFu33)
//============================================================================



static void Test_aS_Ul_BFu7c()
{
  {
    init_simple_test("aS_Ul_BFu7c");
    static STRUCT_IF_C aS_Ul_BFu7c lv;
    check2(sizeof(lv), 11, "sizeof(aS_Ul_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_Ul_BFu7c.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_BFu7c.v2");
    set_bf_and_test(lv, v3, 10, 0, 7, 1, "aS_Ul_BFu7c");
    set_bf_and_test(lv, v3, 10, 0, 7, hide_ull(1LL<<6), "aS_Ul_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_BFu7c, aS_Ul_BFu7c)
//============================================================================



static void Test_aS_Ul_BFu7i()
{
  {
    init_simple_test("aS_Ul_BFu7i");
    static STRUCT_IF_C aS_Ul_BFu7i lv;
    check2(sizeof(lv), 11, "sizeof(aS_Ul_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_Ul_BFu7i.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_BFu7i.v2");
    set_bf_and_test(lv, v3, 10, 0, 7, 1, "aS_Ul_BFu7i");
    set_bf_and_test(lv, v3, 10, 0, 7, hide_ull(1LL<<6), "aS_Ul_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_BFu7i, aS_Ul_BFu7i)
//============================================================================



static void Test_aS_Ul_BFu7ll()
{
  {
    init_simple_test("aS_Ul_BFu7ll");
    static STRUCT_IF_C aS_Ul_BFu7ll lv;
    check2(sizeof(lv), 11, "sizeof(aS_Ul_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_Ul_BFu7ll.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_BFu7ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 7, 1, "aS_Ul_BFu7ll");
    set_bf_and_test(lv, v3, 10, 0, 7, hide_ull(1LL<<6), "aS_Ul_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_BFu7ll, aS_Ul_BFu7ll)
//============================================================================



static void Test_aS_Ul_BFu7s()
{
  {
    init_simple_test("aS_Ul_BFu7s");
    static STRUCT_IF_C aS_Ul_BFu7s lv;
    check2(sizeof(lv), 11, "sizeof(aS_Ul_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_Ul_BFu7s.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_BFu7s.v2");
    set_bf_and_test(lv, v3, 10, 0, 7, 1, "aS_Ul_BFu7s");
    set_bf_and_test(lv, v3, 10, 0, 7, hide_ull(1LL<<6), "aS_Ul_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_BFu7s, aS_Ul_BFu7s)
//============================================================================



static void Test_aS_Ul_BFu8c()
{
  {
    init_simple_test("aS_Ul_BFu8c");
    static STRUCT_IF_C aS_Ul_BFu8c lv;
    check2(sizeof(lv), 11, "sizeof(aS_Ul_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_Ul_BFu8c.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_BFu8c.v2");
    set_bf_and_test(lv, v3, 10, 0, 8, 1, "aS_Ul_BFu8c");
    set_bf_and_test(lv, v3, 10, 0, 8, hide_ull(1LL<<7), "aS_Ul_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_BFu8c, aS_Ul_BFu8c)
//============================================================================



static void Test_aS_Ul_BFu8i()
{
  {
    init_simple_test("aS_Ul_BFu8i");
    static STRUCT_IF_C aS_Ul_BFu8i lv;
    check2(sizeof(lv), 11, "sizeof(aS_Ul_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_Ul_BFu8i.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_BFu8i.v2");
    set_bf_and_test(lv, v3, 10, 0, 8, 1, "aS_Ul_BFu8i");
    set_bf_and_test(lv, v3, 10, 0, 8, hide_ull(1LL<<7), "aS_Ul_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_BFu8i, aS_Ul_BFu8i)
//============================================================================



static void Test_aS_Ul_BFu8ll()
{
  {
    init_simple_test("aS_Ul_BFu8ll");
    static STRUCT_IF_C aS_Ul_BFu8ll lv;
    check2(sizeof(lv), 11, "sizeof(aS_Ul_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_Ul_BFu8ll.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_BFu8ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 8, 1, "aS_Ul_BFu8ll");
    set_bf_and_test(lv, v3, 10, 0, 8, hide_ull(1LL<<7), "aS_Ul_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_BFu8ll, aS_Ul_BFu8ll)
//============================================================================



static void Test_aS_Ul_BFu8s()
{
  {
    init_simple_test("aS_Ul_BFu8s");
    static STRUCT_IF_C aS_Ul_BFu8s lv;
    check2(sizeof(lv), 11, "sizeof(aS_Ul_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_Ul_BFu8s.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_BFu8s.v2");
    set_bf_and_test(lv, v3, 10, 0, 8, 1, "aS_Ul_BFu8s");
    set_bf_and_test(lv, v3, 10, 0, 8, hide_ull(1LL<<7), "aS_Ul_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_BFu8s, aS_Ul_BFu8s)
//============================================================================



static void Test_aS_Ul_BFu9i()
{
  {
    init_simple_test("aS_Ul_BFu9i");
    static STRUCT_IF_C aS_Ul_BFu9i lv;
    check2(sizeof(lv), 12, "sizeof(aS_Ul_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_Ul_BFu9i.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_BFu9i.v2");
    set_bf_and_test(lv, v3, 10, 0, 9, 1, "aS_Ul_BFu9i");
    set_bf_and_test(lv, v3, 10, 0, 9, hide_ull(1LL<<8), "aS_Ul_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_BFu9i, aS_Ul_BFu9i)
//============================================================================



static void Test_aS_Ul_BFu9ll()
{
  {
    init_simple_test("aS_Ul_BFu9ll");
    static STRUCT_IF_C aS_Ul_BFu9ll lv;
    check2(sizeof(lv), 12, "sizeof(aS_Ul_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_Ul_BFu9ll.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_BFu9ll.v2");
    set_bf_and_test(lv, v3, 10, 0, 9, 1, "aS_Ul_BFu9ll");
    set_bf_and_test(lv, v3, 10, 0, 9, hide_ull(1LL<<8), "aS_Ul_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_BFu9ll, aS_Ul_BFu9ll)
//============================================================================



static void Test_aS_Ul_BFu9s()
{
  {
    init_simple_test("aS_Ul_BFu9s");
    static STRUCT_IF_C aS_Ul_BFu9s lv;
    check2(sizeof(lv), 12, "sizeof(aS_Ul_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_Ul_BFu9s.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_BFu9s.v2");
    set_bf_and_test(lv, v3, 10, 0, 9, 1, "aS_Ul_BFu9s");
    set_bf_and_test(lv, v3, 10, 0, 9, hide_ull(1LL<<8), "aS_Ul_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_BFu9s, aS_Ul_BFu9s)
//============================================================================



static void Test_aS_Ul_C()
{
  {
    init_simple_test("aS_Ul_C");
    STRUCT_IF_C aS_Ul_C lv;
    check2(sizeof(lv), 11, "sizeof(aS_Ul_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_C)");
    check_field_offset(lv, v1, 0, "aS_Ul_C.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_C.v2");
    check_field_offset(lv, v3, 10, "aS_Ul_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_C, aS_Ul_C)
//============================================================================



static void Test_aS_Ul_D()
{
  {
    init_simple_test("aS_Ul_D");
    STRUCT_IF_C aS_Ul_D lv;
    check2(sizeof(lv), 18, "sizeof(aS_Ul_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_D)");
    check_field_offset(lv, v1, 0, "aS_Ul_D.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_D.v2");
    check_field_offset(lv, v3, 10, "aS_Ul_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_D, aS_Ul_D)
//============================================================================



static void Test_aS_Ul_F()
{
  {
    init_simple_test("aS_Ul_F");
    STRUCT_IF_C aS_Ul_F lv;
    check2(sizeof(lv), 14, "sizeof(aS_Ul_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_F)");
    check_field_offset(lv, v1, 0, "aS_Ul_F.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_F.v2");
    check_field_offset(lv, v3, 10, "aS_Ul_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_F, aS_Ul_F)
//============================================================================



static void Test_aS_Ul_I()
{
  {
    init_simple_test("aS_Ul_I");
    STRUCT_IF_C aS_Ul_I lv;
    check2(sizeof(lv), 14, "sizeof(aS_Ul_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_I)");
    check_field_offset(lv, v1, 0, "aS_Ul_I.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_I.v2");
    check_field_offset(lv, v3, 10, "aS_Ul_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_I, aS_Ul_I)
//============================================================================



static void Test_aS_Ul_Ip()
{
  {
    init_simple_test("aS_Ul_Ip");
    STRUCT_IF_C aS_Ul_Ip lv;
    check2(sizeof(lv), ABISELECT(18,14), "sizeof(aS_Ul_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_Ip)");
    check_field_offset(lv, v1, 0, "aS_Ul_Ip.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_Ip.v2");
    check_field_offset(lv, v3, 10, "aS_Ul_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_Ip, aS_Ul_Ip)
//============================================================================



static void Test_aS_Ul_L()
{
  {
    init_simple_test("aS_Ul_L");
    STRUCT_IF_C aS_Ul_L lv;
    check2(sizeof(lv), 18, "sizeof(aS_Ul_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_L)");
    check_field_offset(lv, v1, 0, "aS_Ul_L.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_L.v2");
    check_field_offset(lv, v3, 10, "aS_Ul_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_L, aS_Ul_L)
//============================================================================



static void Test_aS_Ul_S()
{
  {
    init_simple_test("aS_Ul_S");
    STRUCT_IF_C aS_Ul_S lv;
    check2(sizeof(lv), 12, "sizeof(aS_Ul_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_S)");
    check_field_offset(lv, v1, 0, "aS_Ul_S.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_S.v2");
    check_field_offset(lv, v3, 10, "aS_Ul_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_S, aS_Ul_S)
//============================================================================



static void Test_aS_Ul_Uc()
{
  {
    init_simple_test("aS_Ul_Uc");
    STRUCT_IF_C aS_Ul_Uc lv;
    check2(sizeof(lv), 11, "sizeof(aS_Ul_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_Uc)");
    check_field_offset(lv, v1, 0, "aS_Ul_Uc.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_Uc.v2");
    check_field_offset(lv, v3, 10, "aS_Ul_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_Uc, aS_Ul_Uc)
//============================================================================



static void Test_aS_Ul_Ui()
{
  {
    init_simple_test("aS_Ul_Ui");
    STRUCT_IF_C aS_Ul_Ui lv;
    check2(sizeof(lv), 14, "sizeof(aS_Ul_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_Ui)");
    check_field_offset(lv, v1, 0, "aS_Ul_Ui.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_Ui.v2");
    check_field_offset(lv, v3, 10, "aS_Ul_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_Ui, aS_Ul_Ui)
//============================================================================



static void Test_aS_Ul_Ul()
{
  {
    init_simple_test("aS_Ul_Ul");
    STRUCT_IF_C aS_Ul_Ul lv;
    check2(sizeof(lv), 18, "sizeof(aS_Ul_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_Ul)");
    check_field_offset(lv, v1, 0, "aS_Ul_Ul.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_Ul.v2");
    check_field_offset(lv, v3, 10, "aS_Ul_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_Ul, aS_Ul_Ul)
//============================================================================



static void Test_aS_Ul_Us()
{
  {
    init_simple_test("aS_Ul_Us");
    STRUCT_IF_C aS_Ul_Us lv;
    check2(sizeof(lv), 12, "sizeof(aS_Ul_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_Us)");
    check_field_offset(lv, v1, 0, "aS_Ul_Us.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_Us.v2");
    check_field_offset(lv, v3, 10, "aS_Ul_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_Us, aS_Ul_Us)
//============================================================================



static void Test_aS_Ul_Vp()
{
  {
    init_simple_test("aS_Ul_Vp");
    STRUCT_IF_C aS_Ul_Vp lv;
    check2(sizeof(lv), ABISELECT(18,14), "sizeof(aS_Ul_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Ul_Vp)");
    check_field_offset(lv, v1, 0, "aS_Ul_Vp.v1");
    check_field_offset(lv, v2, 2, "aS_Ul_Vp.v2");
    check_field_offset(lv, v3, 10, "aS_Ul_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Ul_Vp, aS_Ul_Vp)
//============================================================================



static void Test_aS_Us()
{
  {
    init_simple_test("aS_Us");
    STRUCT_IF_C aS_Us lv;
    check2(sizeof(lv), 4, "sizeof(aS_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us)");
    check_field_offset(lv, v1, 0, "aS_Us.v1");
    check_field_offset(lv, v2, 2, "aS_Us.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us, aS_Us)
//============================================================================



static void Test_aS_Us_BFu15i()
{
  {
    init_simple_test("aS_Us_BFu15i");
    static STRUCT_IF_C aS_Us_BFu15i lv;
    check2(sizeof(lv), 6, "sizeof(aS_Us_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_Us_BFu15i.v1");
    check_field_offset(lv, v2, 2, "aS_Us_BFu15i.v2");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "aS_Us_BFu15i");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "aS_Us_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_BFu15i, aS_Us_BFu15i)
//============================================================================



static void Test_aS_Us_BFu15ll()
{
  {
    init_simple_test("aS_Us_BFu15ll");
    static STRUCT_IF_C aS_Us_BFu15ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_Us_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_Us_BFu15ll.v1");
    check_field_offset(lv, v2, 2, "aS_Us_BFu15ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "aS_Us_BFu15ll");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "aS_Us_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_BFu15ll, aS_Us_BFu15ll)
//============================================================================



static void Test_aS_Us_BFu15s()
{
  {
    init_simple_test("aS_Us_BFu15s");
    static STRUCT_IF_C aS_Us_BFu15s lv;
    check2(sizeof(lv), 6, "sizeof(aS_Us_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_Us_BFu15s.v1");
    check_field_offset(lv, v2, 2, "aS_Us_BFu15s.v2");
    set_bf_and_test(lv, v3, 4, 0, 15, 1, "aS_Us_BFu15s");
    set_bf_and_test(lv, v3, 4, 0, 15, hide_ull(1LL<<14), "aS_Us_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_BFu15s, aS_Us_BFu15s)
//============================================================================



static void Test_aS_Us_BFu16i()
{
  {
    init_simple_test("aS_Us_BFu16i");
    static STRUCT_IF_C aS_Us_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aS_Us_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_Us_BFu16i.v1");
    check_field_offset(lv, v2, 2, "aS_Us_BFu16i.v2");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aS_Us_BFu16i");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aS_Us_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_BFu16i, aS_Us_BFu16i)
//============================================================================



static void Test_aS_Us_BFu16ll()
{
  {
    init_simple_test("aS_Us_BFu16ll");
    static STRUCT_IF_C aS_Us_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_Us_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_Us_BFu16ll.v1");
    check_field_offset(lv, v2, 2, "aS_Us_BFu16ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aS_Us_BFu16ll");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aS_Us_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_BFu16ll, aS_Us_BFu16ll)
//============================================================================



static void Test_aS_Us_BFu16s()
{
  {
    init_simple_test("aS_Us_BFu16s");
    static STRUCT_IF_C aS_Us_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aS_Us_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_Us_BFu16s.v1");
    check_field_offset(lv, v2, 2, "aS_Us_BFu16s.v2");
    set_bf_and_test(lv, v3, 4, 0, 16, 1, "aS_Us_BFu16s");
    set_bf_and_test(lv, v3, 4, 0, 16, hide_ull(1LL<<15), "aS_Us_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_BFu16s, aS_Us_BFu16s)
//============================================================================



static void Test_aS_Us_BFu17i()
{
  {
    init_simple_test("aS_Us_BFu17i");
    static STRUCT_IF_C aS_Us_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(aS_Us_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_Us_BFu17i.v1");
    check_field_offset(lv, v2, 2, "aS_Us_BFu17i.v2");
    set_bf_and_test(lv, v3, 4, 0, 17, 1, "aS_Us_BFu17i");
    set_bf_and_test(lv, v3, 4, 0, 17, hide_ull(1LL<<16), "aS_Us_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_BFu17i, aS_Us_BFu17i)
//============================================================================



static void Test_aS_Us_BFu17ll()
{
  {
    init_simple_test("aS_Us_BFu17ll");
    static STRUCT_IF_C aS_Us_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(aS_Us_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_Us_BFu17ll.v1");
    check_field_offset(lv, v2, 2, "aS_Us_BFu17ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 17, 1, "aS_Us_BFu17ll");
    set_bf_and_test(lv, v3, 4, 0, 17, hide_ull(1LL<<16), "aS_Us_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_BFu17ll, aS_Us_BFu17ll)
//============================================================================



static void Test_aS_Us_BFu1c()
{
  {
    init_simple_test("aS_Us_BFu1c");
    static STRUCT_IF_C aS_Us_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(aS_Us_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_Us_BFu1c.v1");
    check_field_offset(lv, v2, 2, "aS_Us_BFu1c.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "aS_Us_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_BFu1c, aS_Us_BFu1c)
//============================================================================



static void Test_aS_Us_BFu1i()
{
  {
    init_simple_test("aS_Us_BFu1i");
    static STRUCT_IF_C aS_Us_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(aS_Us_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_Us_BFu1i.v1");
    check_field_offset(lv, v2, 2, "aS_Us_BFu1i.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "aS_Us_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_BFu1i, aS_Us_BFu1i)
//============================================================================



static void Test_aS_Us_BFu1ll()
{
  {
    init_simple_test("aS_Us_BFu1ll");
    static STRUCT_IF_C aS_Us_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_Us_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_Us_BFu1ll.v1");
    check_field_offset(lv, v2, 2, "aS_Us_BFu1ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "aS_Us_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_BFu1ll, aS_Us_BFu1ll)
//============================================================================



static void Test_aS_Us_BFu1s()
{
  {
    init_simple_test("aS_Us_BFu1s");
    static STRUCT_IF_C aS_Us_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(aS_Us_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_Us_BFu1s.v1");
    check_field_offset(lv, v2, 2, "aS_Us_BFu1s.v2");
    set_bf_and_test(lv, v3, 4, 0, 1, 1, "aS_Us_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_BFu1s, aS_Us_BFu1s)
//============================================================================



static void Test_aS_Us_BFu31i()
{
  {
    init_simple_test("aS_Us_BFu31i");
    static STRUCT_IF_C aS_Us_BFu31i lv;
    check2(sizeof(lv), 8, "sizeof(aS_Us_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_Us_BFu31i.v1");
    check_field_offset(lv, v2, 2, "aS_Us_BFu31i.v2");
    set_bf_and_test(lv, v3, 4, 0, 31, 1, "aS_Us_BFu31i");
    set_bf_and_test(lv, v3, 4, 0, 31, hide_ull(1LL<<30), "aS_Us_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_BFu31i, aS_Us_BFu31i)
//============================================================================



static void Test_aS_Us_BFu31ll()
{
  {
    init_simple_test("aS_Us_BFu31ll");
    static STRUCT_IF_C aS_Us_BFu31ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_Us_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_Us_BFu31ll.v1");
    check_field_offset(lv, v2, 2, "aS_Us_BFu31ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 31, 1, "aS_Us_BFu31ll");
    set_bf_and_test(lv, v3, 4, 0, 31, hide_ull(1LL<<30), "aS_Us_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_BFu31ll, aS_Us_BFu31ll)
//============================================================================



static void Test_aS_Us_BFu32i()
{
  {
    init_simple_test("aS_Us_BFu32i");
    static STRUCT_IF_C aS_Us_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(aS_Us_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_Us_BFu32i.v1");
    check_field_offset(lv, v2, 2, "aS_Us_BFu32i.v2");
    set_bf_and_test(lv, v3, 4, 0, 32, 1, "aS_Us_BFu32i");
    set_bf_and_test(lv, v3, 4, 0, 32, hide_ull(1LL<<31), "aS_Us_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_BFu32i, aS_Us_BFu32i)
//============================================================================



static void Test_aS_Us_BFu32ll()
{
  {
    init_simple_test("aS_Us_BFu32ll");
    static STRUCT_IF_C aS_Us_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(aS_Us_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_Us_BFu32ll.v1");
    check_field_offset(lv, v2, 2, "aS_Us_BFu32ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 32, 1, "aS_Us_BFu32ll");
    set_bf_and_test(lv, v3, 4, 0, 32, hide_ull(1LL<<31), "aS_Us_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_BFu32ll, aS_Us_BFu32ll)
//============================================================================



static void Test_aS_Us_BFu33()
{
  {
    init_simple_test("aS_Us_BFu33");
    static STRUCT_IF_C aS_Us_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(aS_Us_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_BFu33)");
    check_field_offset(lv, v1, 0, "aS_Us_BFu33.v1");
    check_field_offset(lv, v2, 2, "aS_Us_BFu33.v2");
    set_bf_and_test(lv, v3, 4, 0, 33, 1, "aS_Us_BFu33");
    set_bf_and_test(lv, v3, 4, 0, 33, hide_ull(1LL<<32), "aS_Us_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_BFu33, aS_Us_BFu33)
//============================================================================



static void Test_aS_Us_BFu7c()
{
  {
    init_simple_test("aS_Us_BFu7c");
    static STRUCT_IF_C aS_Us_BFu7c lv;
    check2(sizeof(lv), 5, "sizeof(aS_Us_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_Us_BFu7c.v1");
    check_field_offset(lv, v2, 2, "aS_Us_BFu7c.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "aS_Us_BFu7c");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "aS_Us_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_BFu7c, aS_Us_BFu7c)
//============================================================================



static void Test_aS_Us_BFu7i()
{
  {
    init_simple_test("aS_Us_BFu7i");
    static STRUCT_IF_C aS_Us_BFu7i lv;
    check2(sizeof(lv), 5, "sizeof(aS_Us_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_Us_BFu7i.v1");
    check_field_offset(lv, v2, 2, "aS_Us_BFu7i.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "aS_Us_BFu7i");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "aS_Us_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_BFu7i, aS_Us_BFu7i)
//============================================================================



static void Test_aS_Us_BFu7ll()
{
  {
    init_simple_test("aS_Us_BFu7ll");
    static STRUCT_IF_C aS_Us_BFu7ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_Us_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_Us_BFu7ll.v1");
    check_field_offset(lv, v2, 2, "aS_Us_BFu7ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "aS_Us_BFu7ll");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "aS_Us_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_BFu7ll, aS_Us_BFu7ll)
//============================================================================



static void Test_aS_Us_BFu7s()
{
  {
    init_simple_test("aS_Us_BFu7s");
    static STRUCT_IF_C aS_Us_BFu7s lv;
    check2(sizeof(lv), 5, "sizeof(aS_Us_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_Us_BFu7s.v1");
    check_field_offset(lv, v2, 2, "aS_Us_BFu7s.v2");
    set_bf_and_test(lv, v3, 4, 0, 7, 1, "aS_Us_BFu7s");
    set_bf_and_test(lv, v3, 4, 0, 7, hide_ull(1LL<<6), "aS_Us_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_BFu7s, aS_Us_BFu7s)
//============================================================================



static void Test_aS_Us_BFu8c()
{
  {
    init_simple_test("aS_Us_BFu8c");
    static STRUCT_IF_C aS_Us_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(aS_Us_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_Us_BFu8c.v1");
    check_field_offset(lv, v2, 2, "aS_Us_BFu8c.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "aS_Us_BFu8c");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "aS_Us_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_BFu8c, aS_Us_BFu8c)
//============================================================================



static void Test_aS_Us_BFu8i()
{
  {
    init_simple_test("aS_Us_BFu8i");
    static STRUCT_IF_C aS_Us_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(aS_Us_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_Us_BFu8i.v1");
    check_field_offset(lv, v2, 2, "aS_Us_BFu8i.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "aS_Us_BFu8i");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "aS_Us_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_BFu8i, aS_Us_BFu8i)
//============================================================================



static void Test_aS_Us_BFu8ll()
{
  {
    init_simple_test("aS_Us_BFu8ll");
    static STRUCT_IF_C aS_Us_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(aS_Us_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_Us_BFu8ll.v1");
    check_field_offset(lv, v2, 2, "aS_Us_BFu8ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "aS_Us_BFu8ll");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "aS_Us_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_BFu8ll, aS_Us_BFu8ll)
//============================================================================



static void Test_aS_Us_BFu8s()
{
  {
    init_simple_test("aS_Us_BFu8s");
    static STRUCT_IF_C aS_Us_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(aS_Us_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_Us_BFu8s.v1");
    check_field_offset(lv, v2, 2, "aS_Us_BFu8s.v2");
    set_bf_and_test(lv, v3, 4, 0, 8, 1, "aS_Us_BFu8s");
    set_bf_and_test(lv, v3, 4, 0, 8, hide_ull(1LL<<7), "aS_Us_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_BFu8s, aS_Us_BFu8s)
//============================================================================



static void Test_aS_Us_BFu9i()
{
  {
    init_simple_test("aS_Us_BFu9i");
    static STRUCT_IF_C aS_Us_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(aS_Us_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_Us_BFu9i.v1");
    check_field_offset(lv, v2, 2, "aS_Us_BFu9i.v2");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "aS_Us_BFu9i");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "aS_Us_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_BFu9i, aS_Us_BFu9i)
//============================================================================



static void Test_aS_Us_BFu9ll()
{
  {
    init_simple_test("aS_Us_BFu9ll");
    static STRUCT_IF_C aS_Us_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(aS_Us_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_Us_BFu9ll.v1");
    check_field_offset(lv, v2, 2, "aS_Us_BFu9ll.v2");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "aS_Us_BFu9ll");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "aS_Us_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_BFu9ll, aS_Us_BFu9ll)
//============================================================================



static void Test_aS_Us_BFu9s()
{
  {
    init_simple_test("aS_Us_BFu9s");
    static STRUCT_IF_C aS_Us_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(aS_Us_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_Us_BFu9s.v1");
    check_field_offset(lv, v2, 2, "aS_Us_BFu9s.v2");
    set_bf_and_test(lv, v3, 4, 0, 9, 1, "aS_Us_BFu9s");
    set_bf_and_test(lv, v3, 4, 0, 9, hide_ull(1LL<<8), "aS_Us_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_BFu9s, aS_Us_BFu9s)
//============================================================================



static void Test_aS_Us_C()
{
  {
    init_simple_test("aS_Us_C");
    STRUCT_IF_C aS_Us_C lv;
    check2(sizeof(lv), 5, "sizeof(aS_Us_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_C)");
    check_field_offset(lv, v1, 0, "aS_Us_C.v1");
    check_field_offset(lv, v2, 2, "aS_Us_C.v2");
    check_field_offset(lv, v3, 4, "aS_Us_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_C, aS_Us_C)
//============================================================================



static void Test_aS_Us_D()
{
  {
    init_simple_test("aS_Us_D");
    STRUCT_IF_C aS_Us_D lv;
    check2(sizeof(lv), 12, "sizeof(aS_Us_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_D)");
    check_field_offset(lv, v1, 0, "aS_Us_D.v1");
    check_field_offset(lv, v2, 2, "aS_Us_D.v2");
    check_field_offset(lv, v3, 4, "aS_Us_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_D, aS_Us_D)
//============================================================================



static void Test_aS_Us_F()
{
  {
    init_simple_test("aS_Us_F");
    STRUCT_IF_C aS_Us_F lv;
    check2(sizeof(lv), 8, "sizeof(aS_Us_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_F)");
    check_field_offset(lv, v1, 0, "aS_Us_F.v1");
    check_field_offset(lv, v2, 2, "aS_Us_F.v2");
    check_field_offset(lv, v3, 4, "aS_Us_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_F, aS_Us_F)
//============================================================================



static void Test_aS_Us_I()
{
  {
    init_simple_test("aS_Us_I");
    STRUCT_IF_C aS_Us_I lv;
    check2(sizeof(lv), 8, "sizeof(aS_Us_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_I)");
    check_field_offset(lv, v1, 0, "aS_Us_I.v1");
    check_field_offset(lv, v2, 2, "aS_Us_I.v2");
    check_field_offset(lv, v3, 4, "aS_Us_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_I, aS_Us_I)
//============================================================================



static void Test_aS_Us_Ip()
{
  {
    init_simple_test("aS_Us_Ip");
    STRUCT_IF_C aS_Us_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_Us_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_Ip)");
    check_field_offset(lv, v1, 0, "aS_Us_Ip.v1");
    check_field_offset(lv, v2, 2, "aS_Us_Ip.v2");
    check_field_offset(lv, v3, 4, "aS_Us_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_Ip, aS_Us_Ip)
//============================================================================



static void Test_aS_Us_L()
{
  {
    init_simple_test("aS_Us_L");
    STRUCT_IF_C aS_Us_L lv;
    check2(sizeof(lv), 12, "sizeof(aS_Us_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_L)");
    check_field_offset(lv, v1, 0, "aS_Us_L.v1");
    check_field_offset(lv, v2, 2, "aS_Us_L.v2");
    check_field_offset(lv, v3, 4, "aS_Us_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_L, aS_Us_L)
//============================================================================



static void Test_aS_Us_S()
{
  {
    init_simple_test("aS_Us_S");
    STRUCT_IF_C aS_Us_S lv;
    check2(sizeof(lv), 6, "sizeof(aS_Us_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_S)");
    check_field_offset(lv, v1, 0, "aS_Us_S.v1");
    check_field_offset(lv, v2, 2, "aS_Us_S.v2");
    check_field_offset(lv, v3, 4, "aS_Us_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_S, aS_Us_S)
//============================================================================



static void Test_aS_Us_Uc()
{
  {
    init_simple_test("aS_Us_Uc");
    STRUCT_IF_C aS_Us_Uc lv;
    check2(sizeof(lv), 5, "sizeof(aS_Us_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_Uc)");
    check_field_offset(lv, v1, 0, "aS_Us_Uc.v1");
    check_field_offset(lv, v2, 2, "aS_Us_Uc.v2");
    check_field_offset(lv, v3, 4, "aS_Us_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_Uc, aS_Us_Uc)
//============================================================================



static void Test_aS_Us_Ui()
{
  {
    init_simple_test("aS_Us_Ui");
    STRUCT_IF_C aS_Us_Ui lv;
    check2(sizeof(lv), 8, "sizeof(aS_Us_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_Ui)");
    check_field_offset(lv, v1, 0, "aS_Us_Ui.v1");
    check_field_offset(lv, v2, 2, "aS_Us_Ui.v2");
    check_field_offset(lv, v3, 4, "aS_Us_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_Ui, aS_Us_Ui)
//============================================================================



static void Test_aS_Us_Ul()
{
  {
    init_simple_test("aS_Us_Ul");
    STRUCT_IF_C aS_Us_Ul lv;
    check2(sizeof(lv), 12, "sizeof(aS_Us_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_Ul)");
    check_field_offset(lv, v1, 0, "aS_Us_Ul.v1");
    check_field_offset(lv, v2, 2, "aS_Us_Ul.v2");
    check_field_offset(lv, v3, 4, "aS_Us_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_Ul, aS_Us_Ul)
//============================================================================



static void Test_aS_Us_Us()
{
  {
    init_simple_test("aS_Us_Us");
    STRUCT_IF_C aS_Us_Us lv;
    check2(sizeof(lv), 6, "sizeof(aS_Us_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_Us)");
    check_field_offset(lv, v1, 0, "aS_Us_Us.v1");
    check_field_offset(lv, v2, 2, "aS_Us_Us.v2");
    check_field_offset(lv, v3, 4, "aS_Us_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_Us, aS_Us_Us)
//============================================================================



static void Test_aS_Us_Vp()
{
  {
    init_simple_test("aS_Us_Vp");
    STRUCT_IF_C aS_Us_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_Us_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Us_Vp)");
    check_field_offset(lv, v1, 0, "aS_Us_Vp.v1");
    check_field_offset(lv, v2, 2, "aS_Us_Vp.v2");
    check_field_offset(lv, v3, 4, "aS_Us_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Us_Vp, aS_Us_Vp)
//============================================================================



static void Test_aS_Vp()
{
  {
    init_simple_test("aS_Vp");
    STRUCT_IF_C aS_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aS_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp)");
    check_field_offset(lv, v1, 0, "aS_Vp.v1");
    check_field_offset(lv, v2, 2, "aS_Vp.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp, aS_Vp)
//============================================================================



static void Test_aS_Vp_BFu15i()
{
  {
    init_simple_test("aS_Vp_BFu15i");
    static STRUCT_IF_C aS_Vp_BFu15i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_Vp_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_BFu15i)");
    check_field_offset(lv, v1, 0, "aS_Vp_BFu15i.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_BFu15i.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 15, 1, "aS_Vp_BFu15i");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 15, hide_ull(1LL<<14), "aS_Vp_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_BFu15i, aS_Vp_BFu15i)
//============================================================================



static void Test_aS_Vp_BFu15ll()
{
  {
    init_simple_test("aS_Vp_BFu15ll");
    static STRUCT_IF_C aS_Vp_BFu15ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_Vp_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_BFu15ll)");
    check_field_offset(lv, v1, 0, "aS_Vp_BFu15ll.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_BFu15ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 15, 1, "aS_Vp_BFu15ll");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 15, hide_ull(1LL<<14), "aS_Vp_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_BFu15ll, aS_Vp_BFu15ll)
//============================================================================



static void Test_aS_Vp_BFu15s()
{
  {
    init_simple_test("aS_Vp_BFu15s");
    static STRUCT_IF_C aS_Vp_BFu15s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_Vp_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_BFu15s)");
    check_field_offset(lv, v1, 0, "aS_Vp_BFu15s.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_BFu15s.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 15, 1, "aS_Vp_BFu15s");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 15, hide_ull(1LL<<14), "aS_Vp_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_BFu15s, aS_Vp_BFu15s)
//============================================================================



static void Test_aS_Vp_BFu16i()
{
  {
    init_simple_test("aS_Vp_BFu16i");
    static STRUCT_IF_C aS_Vp_BFu16i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_Vp_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_BFu16i)");
    check_field_offset(lv, v1, 0, "aS_Vp_BFu16i.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_BFu16i.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 16, 1, "aS_Vp_BFu16i");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 16, hide_ull(1LL<<15), "aS_Vp_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_BFu16i, aS_Vp_BFu16i)
//============================================================================



static void Test_aS_Vp_BFu16ll()
{
  {
    init_simple_test("aS_Vp_BFu16ll");
    static STRUCT_IF_C aS_Vp_BFu16ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_Vp_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_BFu16ll)");
    check_field_offset(lv, v1, 0, "aS_Vp_BFu16ll.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_BFu16ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 16, 1, "aS_Vp_BFu16ll");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 16, hide_ull(1LL<<15), "aS_Vp_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_BFu16ll, aS_Vp_BFu16ll)
//============================================================================



static void Test_aS_Vp_BFu16s()
{
  {
    init_simple_test("aS_Vp_BFu16s");
    static STRUCT_IF_C aS_Vp_BFu16s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_Vp_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_BFu16s)");
    check_field_offset(lv, v1, 0, "aS_Vp_BFu16s.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_BFu16s.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 16, 1, "aS_Vp_BFu16s");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 16, hide_ull(1LL<<15), "aS_Vp_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_BFu16s, aS_Vp_BFu16s)
//============================================================================



static void Test_aS_Vp_BFu17i()
{
  {
    init_simple_test("aS_Vp_BFu17i");
    static STRUCT_IF_C aS_Vp_BFu17i lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aS_Vp_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_BFu17i)");
    check_field_offset(lv, v1, 0, "aS_Vp_BFu17i.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_BFu17i.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 17, 1, "aS_Vp_BFu17i");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 17, hide_ull(1LL<<16), "aS_Vp_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_BFu17i, aS_Vp_BFu17i)
//============================================================================



static void Test_aS_Vp_BFu17ll()
{
  {
    init_simple_test("aS_Vp_BFu17ll");
    static STRUCT_IF_C aS_Vp_BFu17ll lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aS_Vp_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_BFu17ll)");
    check_field_offset(lv, v1, 0, "aS_Vp_BFu17ll.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_BFu17ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 17, 1, "aS_Vp_BFu17ll");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 17, hide_ull(1LL<<16), "aS_Vp_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_BFu17ll, aS_Vp_BFu17ll)
//============================================================================



static void Test_aS_Vp_BFu1c()
{
  {
    init_simple_test("aS_Vp_BFu1c");
    static STRUCT_IF_C aS_Vp_BFu1c lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Vp_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_BFu1c)");
    check_field_offset(lv, v1, 0, "aS_Vp_BFu1c.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_BFu1c.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 1, 1, "aS_Vp_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_BFu1c, aS_Vp_BFu1c)
//============================================================================



static void Test_aS_Vp_BFu1i()
{
  {
    init_simple_test("aS_Vp_BFu1i");
    static STRUCT_IF_C aS_Vp_BFu1i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Vp_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_BFu1i)");
    check_field_offset(lv, v1, 0, "aS_Vp_BFu1i.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_BFu1i.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 1, 1, "aS_Vp_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_BFu1i, aS_Vp_BFu1i)
//============================================================================



static void Test_aS_Vp_BFu1ll()
{
  {
    init_simple_test("aS_Vp_BFu1ll");
    static STRUCT_IF_C aS_Vp_BFu1ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Vp_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_BFu1ll)");
    check_field_offset(lv, v1, 0, "aS_Vp_BFu1ll.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_BFu1ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 1, 1, "aS_Vp_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_BFu1ll, aS_Vp_BFu1ll)
//============================================================================



static void Test_aS_Vp_BFu1s()
{
  {
    init_simple_test("aS_Vp_BFu1s");
    static STRUCT_IF_C aS_Vp_BFu1s lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Vp_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_BFu1s)");
    check_field_offset(lv, v1, 0, "aS_Vp_BFu1s.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_BFu1s.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 1, 1, "aS_Vp_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_BFu1s, aS_Vp_BFu1s)
//============================================================================



static void Test_aS_Vp_BFu31i()
{
  {
    init_simple_test("aS_Vp_BFu31i");
    static STRUCT_IF_C aS_Vp_BFu31i lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aS_Vp_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_BFu31i)");
    check_field_offset(lv, v1, 0, "aS_Vp_BFu31i.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_BFu31i.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 31, 1, "aS_Vp_BFu31i");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 31, hide_ull(1LL<<30), "aS_Vp_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_BFu31i, aS_Vp_BFu31i)
//============================================================================



static void Test_aS_Vp_BFu31ll()
{
  {
    init_simple_test("aS_Vp_BFu31ll");
    static STRUCT_IF_C aS_Vp_BFu31ll lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aS_Vp_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_BFu31ll)");
    check_field_offset(lv, v1, 0, "aS_Vp_BFu31ll.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_BFu31ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 31, 1, "aS_Vp_BFu31ll");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 31, hide_ull(1LL<<30), "aS_Vp_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_BFu31ll, aS_Vp_BFu31ll)
//============================================================================



static void Test_aS_Vp_BFu32i()
{
  {
    init_simple_test("aS_Vp_BFu32i");
    static STRUCT_IF_C aS_Vp_BFu32i lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aS_Vp_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_BFu32i)");
    check_field_offset(lv, v1, 0, "aS_Vp_BFu32i.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_BFu32i.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 32, 1, "aS_Vp_BFu32i");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 32, hide_ull(1LL<<31), "aS_Vp_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_BFu32i, aS_Vp_BFu32i)
//============================================================================



static void Test_aS_Vp_BFu32ll()
{
  {
    init_simple_test("aS_Vp_BFu32ll");
    static STRUCT_IF_C aS_Vp_BFu32ll lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aS_Vp_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_BFu32ll)");
    check_field_offset(lv, v1, 0, "aS_Vp_BFu32ll.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_BFu32ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 32, 1, "aS_Vp_BFu32ll");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 32, hide_ull(1LL<<31), "aS_Vp_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_BFu32ll, aS_Vp_BFu32ll)
//============================================================================



static void Test_aS_Vp_BFu33()
{
  {
    init_simple_test("aS_Vp_BFu33");
    static STRUCT_IF_C aS_Vp_BFu33 lv;
    check2(sizeof(lv), ABISELECT(15,11), "sizeof(aS_Vp_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_BFu33)");
    check_field_offset(lv, v1, 0, "aS_Vp_BFu33.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_BFu33.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 33, 1, "aS_Vp_BFu33");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 33, hide_ull(1LL<<32), "aS_Vp_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_BFu33, aS_Vp_BFu33)
//============================================================================



static void Test_aS_Vp_BFu7c()
{
  {
    init_simple_test("aS_Vp_BFu7c");
    static STRUCT_IF_C aS_Vp_BFu7c lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Vp_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_BFu7c)");
    check_field_offset(lv, v1, 0, "aS_Vp_BFu7c.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_BFu7c.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 7, 1, "aS_Vp_BFu7c");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 7, hide_ull(1LL<<6), "aS_Vp_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_BFu7c, aS_Vp_BFu7c)
//============================================================================



static void Test_aS_Vp_BFu7i()
{
  {
    init_simple_test("aS_Vp_BFu7i");
    static STRUCT_IF_C aS_Vp_BFu7i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Vp_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_BFu7i)");
    check_field_offset(lv, v1, 0, "aS_Vp_BFu7i.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_BFu7i.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 7, 1, "aS_Vp_BFu7i");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 7, hide_ull(1LL<<6), "aS_Vp_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_BFu7i, aS_Vp_BFu7i)
//============================================================================



static void Test_aS_Vp_BFu7ll()
{
  {
    init_simple_test("aS_Vp_BFu7ll");
    static STRUCT_IF_C aS_Vp_BFu7ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Vp_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_BFu7ll)");
    check_field_offset(lv, v1, 0, "aS_Vp_BFu7ll.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_BFu7ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 7, 1, "aS_Vp_BFu7ll");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 7, hide_ull(1LL<<6), "aS_Vp_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_BFu7ll, aS_Vp_BFu7ll)
//============================================================================



static void Test_aS_Vp_BFu7s()
{
  {
    init_simple_test("aS_Vp_BFu7s");
    static STRUCT_IF_C aS_Vp_BFu7s lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Vp_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_BFu7s)");
    check_field_offset(lv, v1, 0, "aS_Vp_BFu7s.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_BFu7s.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 7, 1, "aS_Vp_BFu7s");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 7, hide_ull(1LL<<6), "aS_Vp_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_BFu7s, aS_Vp_BFu7s)
//============================================================================



static void Test_aS_Vp_BFu8c()
{
  {
    init_simple_test("aS_Vp_BFu8c");
    static STRUCT_IF_C aS_Vp_BFu8c lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Vp_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_BFu8c)");
    check_field_offset(lv, v1, 0, "aS_Vp_BFu8c.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_BFu8c.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 8, 1, "aS_Vp_BFu8c");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 8, hide_ull(1LL<<7), "aS_Vp_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_BFu8c, aS_Vp_BFu8c)
//============================================================================



static void Test_aS_Vp_BFu8i()
{
  {
    init_simple_test("aS_Vp_BFu8i");
    static STRUCT_IF_C aS_Vp_BFu8i lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Vp_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_BFu8i)");
    check_field_offset(lv, v1, 0, "aS_Vp_BFu8i.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_BFu8i.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 8, 1, "aS_Vp_BFu8i");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 8, hide_ull(1LL<<7), "aS_Vp_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_BFu8i, aS_Vp_BFu8i)
//============================================================================



static void Test_aS_Vp_BFu8ll()
{
  {
    init_simple_test("aS_Vp_BFu8ll");
    static STRUCT_IF_C aS_Vp_BFu8ll lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Vp_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_BFu8ll)");
    check_field_offset(lv, v1, 0, "aS_Vp_BFu8ll.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_BFu8ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 8, 1, "aS_Vp_BFu8ll");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 8, hide_ull(1LL<<7), "aS_Vp_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_BFu8ll, aS_Vp_BFu8ll)
//============================================================================



static void Test_aS_Vp_BFu8s()
{
  {
    init_simple_test("aS_Vp_BFu8s");
    static STRUCT_IF_C aS_Vp_BFu8s lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Vp_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_BFu8s)");
    check_field_offset(lv, v1, 0, "aS_Vp_BFu8s.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_BFu8s.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 8, 1, "aS_Vp_BFu8s");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 8, hide_ull(1LL<<7), "aS_Vp_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_BFu8s, aS_Vp_BFu8s)
//============================================================================



static void Test_aS_Vp_BFu9i()
{
  {
    init_simple_test("aS_Vp_BFu9i");
    static STRUCT_IF_C aS_Vp_BFu9i lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_Vp_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_BFu9i)");
    check_field_offset(lv, v1, 0, "aS_Vp_BFu9i.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_BFu9i.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 9, 1, "aS_Vp_BFu9i");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 9, hide_ull(1LL<<8), "aS_Vp_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_BFu9i, aS_Vp_BFu9i)
//============================================================================



static void Test_aS_Vp_BFu9ll()
{
  {
    init_simple_test("aS_Vp_BFu9ll");
    static STRUCT_IF_C aS_Vp_BFu9ll lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_Vp_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_BFu9ll)");
    check_field_offset(lv, v1, 0, "aS_Vp_BFu9ll.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_BFu9ll.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 9, 1, "aS_Vp_BFu9ll");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 9, hide_ull(1LL<<8), "aS_Vp_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_BFu9ll, aS_Vp_BFu9ll)
//============================================================================



static void Test_aS_Vp_BFu9s()
{
  {
    init_simple_test("aS_Vp_BFu9s");
    static STRUCT_IF_C aS_Vp_BFu9s lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_Vp_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_BFu9s)");
    check_field_offset(lv, v1, 0, "aS_Vp_BFu9s.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_BFu9s.v2");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 9, 1, "aS_Vp_BFu9s");
    set_bf_and_test(lv, v3, ABISELECT(10,6), 0, 9, hide_ull(1LL<<8), "aS_Vp_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_BFu9s, aS_Vp_BFu9s)
//============================================================================



static void Test_aS_Vp_C()
{
  {
    init_simple_test("aS_Vp_C");
    STRUCT_IF_C aS_Vp_C lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Vp_C)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_C)");
    check_field_offset(lv, v1, 0, "aS_Vp_C.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_C.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aS_Vp_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_C, aS_Vp_C)
//============================================================================



static void Test_aS_Vp_D()
{
  {
    init_simple_test("aS_Vp_D");
    STRUCT_IF_C aS_Vp_D lv;
    check2(sizeof(lv), ABISELECT(18,14), "sizeof(aS_Vp_D)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_D)");
    check_field_offset(lv, v1, 0, "aS_Vp_D.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_D.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aS_Vp_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_D, aS_Vp_D)
//============================================================================



static void Test_aS_Vp_F()
{
  {
    init_simple_test("aS_Vp_F");
    STRUCT_IF_C aS_Vp_F lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aS_Vp_F)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_F)");
    check_field_offset(lv, v1, 0, "aS_Vp_F.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_F.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aS_Vp_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_F, aS_Vp_F)
//============================================================================



static void Test_aS_Vp_I()
{
  {
    init_simple_test("aS_Vp_I");
    STRUCT_IF_C aS_Vp_I lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aS_Vp_I)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_I)");
    check_field_offset(lv, v1, 0, "aS_Vp_I.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_I.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aS_Vp_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_I, aS_Vp_I)
//============================================================================



static void Test_aS_Vp_Ip()
{
  {
    init_simple_test("aS_Vp_Ip");
    STRUCT_IF_C aS_Vp_Ip lv;
    check2(sizeof(lv), ABISELECT(18,10), "sizeof(aS_Vp_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_Ip)");
    check_field_offset(lv, v1, 0, "aS_Vp_Ip.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_Ip.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aS_Vp_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_Ip, aS_Vp_Ip)
//============================================================================



static void Test_aS_Vp_L()
{
  {
    init_simple_test("aS_Vp_L");
    STRUCT_IF_C aS_Vp_L lv;
    check2(sizeof(lv), ABISELECT(18,14), "sizeof(aS_Vp_L)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_L)");
    check_field_offset(lv, v1, 0, "aS_Vp_L.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_L.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aS_Vp_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_L, aS_Vp_L)
//============================================================================



static void Test_aS_Vp_S()
{
  {
    init_simple_test("aS_Vp_S");
    STRUCT_IF_C aS_Vp_S lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_Vp_S)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_S)");
    check_field_offset(lv, v1, 0, "aS_Vp_S.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_S.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aS_Vp_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_S, aS_Vp_S)
//============================================================================



static void Test_aS_Vp_Uc()
{
  {
    init_simple_test("aS_Vp_Uc");
    STRUCT_IF_C aS_Vp_Uc lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aS_Vp_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_Uc)");
    check_field_offset(lv, v1, 0, "aS_Vp_Uc.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_Uc.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aS_Vp_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_Uc, aS_Vp_Uc)
//============================================================================



static void Test_aS_Vp_Ui()
{
  {
    init_simple_test("aS_Vp_Ui");
    STRUCT_IF_C aS_Vp_Ui lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aS_Vp_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_Ui)");
    check_field_offset(lv, v1, 0, "aS_Vp_Ui.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_Ui.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aS_Vp_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_Ui, aS_Vp_Ui)
//============================================================================



static void Test_aS_Vp_Ul()
{
  {
    init_simple_test("aS_Vp_Ul");
    STRUCT_IF_C aS_Vp_Ul lv;
    check2(sizeof(lv), ABISELECT(18,14), "sizeof(aS_Vp_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_Ul)");
    check_field_offset(lv, v1, 0, "aS_Vp_Ul.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_Ul.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aS_Vp_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_Ul, aS_Vp_Ul)
//============================================================================



static void Test_aS_Vp_Us()
{
  {
    init_simple_test("aS_Vp_Us");
    STRUCT_IF_C aS_Vp_Us lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aS_Vp_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_Us)");
    check_field_offset(lv, v1, 0, "aS_Vp_Us.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_Us.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aS_Vp_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_Us, aS_Vp_Us)
//============================================================================



static void Test_aS_Vp_Vp()
{
  {
    init_simple_test("aS_Vp_Vp");
    STRUCT_IF_C aS_Vp_Vp lv;
    check2(sizeof(lv), ABISELECT(18,10), "sizeof(aS_Vp_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aS_Vp_Vp)");
    check_field_offset(lv, v1, 0, "aS_Vp_Vp.v1");
    check_field_offset(lv, v2, 2, "aS_Vp_Vp.v2");
    check_field_offset(lv, v3, ABISELECT(10,6), "aS_Vp_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aS_Vp_Vp, aS_Vp_Vp)
//============================================================================



static void Test_aUc()
{
  {
    init_simple_test("aUc");
    STRUCT_IF_C aUc lv;
    check2(sizeof(lv), 1, "sizeof(aUc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc)");
    check_field_offset(lv, v1, 0, "aUc.v1");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc, aUc)
//============================================================================



static void Test_aUc_BFu15i()
{
  {
    init_simple_test("aUc_BFu15i");
    static STRUCT_IF_C aUc_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i, aUc_BFu15i)
//============================================================================



static void Test_aUc_BFu15i_BFu15i()
{
  {
    init_simple_test("aUc_BFu15i_BFu15i");
    static STRUCT_IF_C aUc_BFu15i_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu15i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 2, 7, 15, 1, "aUc_BFu15i_BFu15i");
    set_bf_and_test(lv, v3, 2, 7, 15, hide_ull(1LL<<14), "aUc_BFu15i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_BFu15i, aUc_BFu15i_BFu15i)
//============================================================================



static void Test_aUc_BFu15i_BFu15ll()
{
  {
    init_simple_test("aUc_BFu15i_BFu15ll");
    static STRUCT_IF_C aUc_BFu15i_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu15i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 2, 7, 15, 1, "aUc_BFu15i_BFu15ll");
    set_bf_and_test(lv, v3, 2, 7, 15, hide_ull(1LL<<14), "aUc_BFu15i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_BFu15ll, aUc_BFu15i_BFu15ll)
//============================================================================



static void Test_aUc_BFu15i_BFu15s()
{
  {
    init_simple_test("aUc_BFu15i_BFu15s");
    static STRUCT_IF_C aUc_BFu15i_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu15i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 2, 7, 15, 1, "aUc_BFu15i_BFu15s");
    set_bf_and_test(lv, v3, 2, 7, 15, hide_ull(1LL<<14), "aUc_BFu15i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_BFu15s, aUc_BFu15i_BFu15s)
//============================================================================



static void Test_aUc_BFu15i_BFu16i()
{
  {
    init_simple_test("aUc_BFu15i_BFu16i");
    static STRUCT_IF_C aUc_BFu15i_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu15i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_BFu16i");
    set_bf_and_test(lv, v3, 2, 7, 16, 1, "aUc_BFu15i_BFu16i");
    set_bf_and_test(lv, v3, 2, 7, 16, hide_ull(1LL<<15), "aUc_BFu15i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_BFu16i, aUc_BFu15i_BFu16i)
//============================================================================



static void Test_aUc_BFu15i_BFu16ll()
{
  {
    init_simple_test("aUc_BFu15i_BFu16ll");
    static STRUCT_IF_C aUc_BFu15i_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu15i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_BFu16ll");
    set_bf_and_test(lv, v3, 2, 7, 16, 1, "aUc_BFu15i_BFu16ll");
    set_bf_and_test(lv, v3, 2, 7, 16, hide_ull(1LL<<15), "aUc_BFu15i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_BFu16ll, aUc_BFu15i_BFu16ll)
//============================================================================



static void Test_aUc_BFu15i_BFu16s()
{
  {
    init_simple_test("aUc_BFu15i_BFu16s");
    static STRUCT_IF_C aUc_BFu15i_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu15i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_BFu16s");
    set_bf_and_test(lv, v3, 2, 7, 16, 1, "aUc_BFu15i_BFu16s");
    set_bf_and_test(lv, v3, 2, 7, 16, hide_ull(1LL<<15), "aUc_BFu15i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_BFu16s, aUc_BFu15i_BFu16s)
//============================================================================



static void Test_aUc_BFu15i_BFu17i()
{
  {
    init_simple_test("aUc_BFu15i_BFu17i");
    static STRUCT_IF_C aUc_BFu15i_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu15i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_BFu17i");
    set_bf_and_test(lv, v3, 2, 7, 17, 1, "aUc_BFu15i_BFu17i");
    set_bf_and_test(lv, v3, 2, 7, 17, hide_ull(1LL<<16), "aUc_BFu15i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_BFu17i, aUc_BFu15i_BFu17i)
//============================================================================



static void Test_aUc_BFu15i_BFu17ll()
{
  {
    init_simple_test("aUc_BFu15i_BFu17ll");
    static STRUCT_IF_C aUc_BFu15i_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu15i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_BFu17ll");
    set_bf_and_test(lv, v3, 2, 7, 17, 1, "aUc_BFu15i_BFu17ll");
    set_bf_and_test(lv, v3, 2, 7, 17, hide_ull(1LL<<16), "aUc_BFu15i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_BFu17ll, aUc_BFu15i_BFu17ll)
//============================================================================



static void Test_aUc_BFu15i_BFu1c()
{
  {
    init_simple_test("aUc_BFu15i_BFu1c");
    static STRUCT_IF_C aUc_BFu15i_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu15i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_BFu1c");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "aUc_BFu15i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_BFu1c, aUc_BFu15i_BFu1c)
//============================================================================



static void Test_aUc_BFu15i_BFu1i()
{
  {
    init_simple_test("aUc_BFu15i_BFu1i");
    static STRUCT_IF_C aUc_BFu15i_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu15i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_BFu1i");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "aUc_BFu15i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_BFu1i, aUc_BFu15i_BFu1i)
//============================================================================



static void Test_aUc_BFu15i_BFu1ll()
{
  {
    init_simple_test("aUc_BFu15i_BFu1ll");
    static STRUCT_IF_C aUc_BFu15i_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu15i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_BFu1ll");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "aUc_BFu15i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_BFu1ll, aUc_BFu15i_BFu1ll)
//============================================================================



static void Test_aUc_BFu15i_BFu1s()
{
  {
    init_simple_test("aUc_BFu15i_BFu1s");
    static STRUCT_IF_C aUc_BFu15i_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu15i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_BFu1s");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "aUc_BFu15i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_BFu1s, aUc_BFu15i_BFu1s)
//============================================================================



static void Test_aUc_BFu15i_BFu31i()
{
  {
    init_simple_test("aUc_BFu15i_BFu31i");
    static STRUCT_IF_C aUc_BFu15i_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu15i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_BFu31i");
    set_bf_and_test(lv, v3, 2, 7, 31, 1, "aUc_BFu15i_BFu31i");
    set_bf_and_test(lv, v3, 2, 7, 31, hide_ull(1LL<<30), "aUc_BFu15i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_BFu31i, aUc_BFu15i_BFu31i)
//============================================================================



static void Test_aUc_BFu15i_BFu31ll()
{
  {
    init_simple_test("aUc_BFu15i_BFu31ll");
    static STRUCT_IF_C aUc_BFu15i_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu15i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_BFu31ll");
    set_bf_and_test(lv, v3, 2, 7, 31, 1, "aUc_BFu15i_BFu31ll");
    set_bf_and_test(lv, v3, 2, 7, 31, hide_ull(1LL<<30), "aUc_BFu15i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_BFu31ll, aUc_BFu15i_BFu31ll)
//============================================================================



static void Test_aUc_BFu15i_BFu32i()
{
  {
    init_simple_test("aUc_BFu15i_BFu32i");
    static STRUCT_IF_C aUc_BFu15i_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu15i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_BFu32i");
    set_bf_and_test(lv, v3, 2, 7, 32, 1, "aUc_BFu15i_BFu32i");
    set_bf_and_test(lv, v3, 2, 7, 32, hide_ull(1LL<<31), "aUc_BFu15i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_BFu32i, aUc_BFu15i_BFu32i)
//============================================================================



static void Test_aUc_BFu15i_BFu32ll()
{
  {
    init_simple_test("aUc_BFu15i_BFu32ll");
    static STRUCT_IF_C aUc_BFu15i_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu15i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_BFu32ll");
    set_bf_and_test(lv, v3, 2, 7, 32, 1, "aUc_BFu15i_BFu32ll");
    set_bf_and_test(lv, v3, 2, 7, 32, hide_ull(1LL<<31), "aUc_BFu15i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_BFu32ll, aUc_BFu15i_BFu32ll)
//============================================================================



static void Test_aUc_BFu15i_BFu33()
{
  {
    init_simple_test("aUc_BFu15i_BFu33");
    static STRUCT_IF_C aUc_BFu15i_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu15i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_BFu33");
    set_bf_and_test(lv, v3, 2, 7, 33, 1, "aUc_BFu15i_BFu33");
    set_bf_and_test(lv, v3, 2, 7, 33, hide_ull(1LL<<32), "aUc_BFu15i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_BFu33, aUc_BFu15i_BFu33)
//============================================================================



static void Test_aUc_BFu15i_BFu7c()
{
  {
    init_simple_test("aUc_BFu15i_BFu7c");
    static STRUCT_IF_C aUc_BFu15i_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_BFu7c");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "aUc_BFu15i_BFu7c");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "aUc_BFu15i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_BFu7c, aUc_BFu15i_BFu7c)
//============================================================================



static void Test_aUc_BFu15i_BFu7i()
{
  {
    init_simple_test("aUc_BFu15i_BFu7i");
    static STRUCT_IF_C aUc_BFu15i_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_BFu7i");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "aUc_BFu15i_BFu7i");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "aUc_BFu15i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_BFu7i, aUc_BFu15i_BFu7i)
//============================================================================



static void Test_aUc_BFu15i_BFu7ll()
{
  {
    init_simple_test("aUc_BFu15i_BFu7ll");
    static STRUCT_IF_C aUc_BFu15i_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_BFu7ll");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "aUc_BFu15i_BFu7ll");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "aUc_BFu15i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_BFu7ll, aUc_BFu15i_BFu7ll)
//============================================================================



static void Test_aUc_BFu15i_BFu7s()
{
  {
    init_simple_test("aUc_BFu15i_BFu7s");
    static STRUCT_IF_C aUc_BFu15i_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_BFu7s");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "aUc_BFu15i_BFu7s");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "aUc_BFu15i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_BFu7s, aUc_BFu15i_BFu7s)
//============================================================================



static void Test_aUc_BFu15i_BFu8c()
{
  {
    init_simple_test("aUc_BFu15i_BFu8c");
    static STRUCT_IF_C aUc_BFu15i_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_BFu8c");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "aUc_BFu15i_BFu8c");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "aUc_BFu15i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_BFu8c, aUc_BFu15i_BFu8c)
//============================================================================



static void Test_aUc_BFu15i_BFu8i()
{
  {
    init_simple_test("aUc_BFu15i_BFu8i");
    static STRUCT_IF_C aUc_BFu15i_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_BFu8i");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "aUc_BFu15i_BFu8i");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "aUc_BFu15i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_BFu8i, aUc_BFu15i_BFu8i)
//============================================================================



static void Test_aUc_BFu15i_BFu8ll()
{
  {
    init_simple_test("aUc_BFu15i_BFu8ll");
    static STRUCT_IF_C aUc_BFu15i_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_BFu8ll");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "aUc_BFu15i_BFu8ll");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "aUc_BFu15i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_BFu8ll, aUc_BFu15i_BFu8ll)
//============================================================================



static void Test_aUc_BFu15i_BFu8s()
{
  {
    init_simple_test("aUc_BFu15i_BFu8s");
    static STRUCT_IF_C aUc_BFu15i_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_BFu8s");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "aUc_BFu15i_BFu8s");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "aUc_BFu15i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_BFu8s, aUc_BFu15i_BFu8s)
//============================================================================



static void Test_aUc_BFu15i_BFu9i()
{
  {
    init_simple_test("aUc_BFu15i_BFu9i");
    static STRUCT_IF_C aUc_BFu15i_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_BFu9i");
    set_bf_and_test(lv, v3, 2, 7, 9, 1, "aUc_BFu15i_BFu9i");
    set_bf_and_test(lv, v3, 2, 7, 9, hide_ull(1LL<<8), "aUc_BFu15i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_BFu9i, aUc_BFu15i_BFu9i)
//============================================================================



static void Test_aUc_BFu15i_BFu9ll()
{
  {
    init_simple_test("aUc_BFu15i_BFu9ll");
    static STRUCT_IF_C aUc_BFu15i_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_BFu9ll");
    set_bf_and_test(lv, v3, 2, 7, 9, 1, "aUc_BFu15i_BFu9ll");
    set_bf_and_test(lv, v3, 2, 7, 9, hide_ull(1LL<<8), "aUc_BFu15i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_BFu9ll, aUc_BFu15i_BFu9ll)
//============================================================================



static void Test_aUc_BFu15i_BFu9s()
{
  {
    init_simple_test("aUc_BFu15i_BFu9s");
    static STRUCT_IF_C aUc_BFu15i_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_BFu9s");
    set_bf_and_test(lv, v3, 2, 7, 9, 1, "aUc_BFu15i_BFu9s");
    set_bf_and_test(lv, v3, 2, 7, 9, hide_ull(1LL<<8), "aUc_BFu15i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_BFu9s, aUc_BFu15i_BFu9s)
//============================================================================



static void Test_aUc_BFu15i_C()
{
  {
    init_simple_test("aUc_BFu15i_C");
    static STRUCT_IF_C aUc_BFu15i_C lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_C)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_C");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_C");
    check_field_offset(lv, v3, 3, "aUc_BFu15i_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_C, aUc_BFu15i_C)
//============================================================================



static void Test_aUc_BFu15i_D()
{
  {
    init_simple_test("aUc_BFu15i_D");
    static STRUCT_IF_C aUc_BFu15i_D lv;
    check2(sizeof(lv), 11, "sizeof(aUc_BFu15i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_D)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_D");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_D");
    check_field_offset(lv, v3, 3, "aUc_BFu15i_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_D, aUc_BFu15i_D)
//============================================================================



static void Test_aUc_BFu15i_F()
{
  {
    init_simple_test("aUc_BFu15i_F");
    static STRUCT_IF_C aUc_BFu15i_F lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu15i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_F)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_F");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_F");
    check_field_offset(lv, v3, 3, "aUc_BFu15i_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_F, aUc_BFu15i_F)
//============================================================================



static void Test_aUc_BFu15i_I()
{
  {
    init_simple_test("aUc_BFu15i_I");
    static STRUCT_IF_C aUc_BFu15i_I lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu15i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_I)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_I");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_I");
    check_field_offset(lv, v3, 3, "aUc_BFu15i_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_I, aUc_BFu15i_I)
//============================================================================



static void Test_aUc_BFu15i_Ip()
{
  {
    init_simple_test("aUc_BFu15i_Ip");
    static STRUCT_IF_C aUc_BFu15i_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aUc_BFu15i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_Ip)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_Ip");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_Ip");
    check_field_offset(lv, v3, 3, "aUc_BFu15i_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_Ip, aUc_BFu15i_Ip)
//============================================================================



static void Test_aUc_BFu15i_L()
{
  {
    init_simple_test("aUc_BFu15i_L");
    static STRUCT_IF_C aUc_BFu15i_L lv;
    check2(sizeof(lv), 11, "sizeof(aUc_BFu15i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_L)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_L");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_L");
    check_field_offset(lv, v3, 3, "aUc_BFu15i_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_L, aUc_BFu15i_L)
//============================================================================



static void Test_aUc_BFu15i_S()
{
  {
    init_simple_test("aUc_BFu15i_S");
    static STRUCT_IF_C aUc_BFu15i_S lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu15i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_S)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_S");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_S");
    check_field_offset(lv, v3, 3, "aUc_BFu15i_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_S, aUc_BFu15i_S)
//============================================================================



static void Test_aUc_BFu15i_Uc()
{
  {
    init_simple_test("aUc_BFu15i_Uc");
    static STRUCT_IF_C aUc_BFu15i_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_Uc)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_Uc");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_Uc");
    check_field_offset(lv, v3, 3, "aUc_BFu15i_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_Uc, aUc_BFu15i_Uc)
//============================================================================



static void Test_aUc_BFu15i_Ui()
{
  {
    init_simple_test("aUc_BFu15i_Ui");
    static STRUCT_IF_C aUc_BFu15i_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu15i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_Ui)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_Ui");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_Ui");
    check_field_offset(lv, v3, 3, "aUc_BFu15i_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_Ui, aUc_BFu15i_Ui)
//============================================================================



static void Test_aUc_BFu15i_Ul()
{
  {
    init_simple_test("aUc_BFu15i_Ul");
    static STRUCT_IF_C aUc_BFu15i_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aUc_BFu15i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_Ul)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_Ul");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_Ul");
    check_field_offset(lv, v3, 3, "aUc_BFu15i_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_Ul, aUc_BFu15i_Ul)
//============================================================================



static void Test_aUc_BFu15i_Us()
{
  {
    init_simple_test("aUc_BFu15i_Us");
    static STRUCT_IF_C aUc_BFu15i_Us lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu15i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_Us)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_Us");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_Us");
    check_field_offset(lv, v3, 3, "aUc_BFu15i_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_Us, aUc_BFu15i_Us)
//============================================================================



static void Test_aUc_BFu15i_Vp()
{
  {
    init_simple_test("aUc_BFu15i_Vp");
    static STRUCT_IF_C aUc_BFu15i_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aUc_BFu15i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15i_Vp)");
    check_field_offset(lv, v1, 0, "aUc_BFu15i_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15i_Vp");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15i_Vp");
    check_field_offset(lv, v3, 3, "aUc_BFu15i_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15i_Vp, aUc_BFu15i_Vp)
//============================================================================



static void Test_aUc_BFu15ll()
{
  {
    init_simple_test("aUc_BFu15ll");
    static STRUCT_IF_C aUc_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll, aUc_BFu15ll)
//============================================================================



static void Test_aUc_BFu15ll_BFu15i()
{
  {
    init_simple_test("aUc_BFu15ll_BFu15i");
    static STRUCT_IF_C aUc_BFu15ll_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu15ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 2, 7, 15, 1, "aUc_BFu15ll_BFu15i");
    set_bf_and_test(lv, v3, 2, 7, 15, hide_ull(1LL<<14), "aUc_BFu15ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_BFu15i, aUc_BFu15ll_BFu15i)
//============================================================================



static void Test_aUc_BFu15ll_BFu15ll()
{
  {
    init_simple_test("aUc_BFu15ll_BFu15ll");
    static STRUCT_IF_C aUc_BFu15ll_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu15ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 2, 7, 15, 1, "aUc_BFu15ll_BFu15ll");
    set_bf_and_test(lv, v3, 2, 7, 15, hide_ull(1LL<<14), "aUc_BFu15ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_BFu15ll, aUc_BFu15ll_BFu15ll)
//============================================================================



static void Test_aUc_BFu15ll_BFu15s()
{
  {
    init_simple_test("aUc_BFu15ll_BFu15s");
    static STRUCT_IF_C aUc_BFu15ll_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu15ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 2, 7, 15, 1, "aUc_BFu15ll_BFu15s");
    set_bf_and_test(lv, v3, 2, 7, 15, hide_ull(1LL<<14), "aUc_BFu15ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_BFu15s, aUc_BFu15ll_BFu15s)
//============================================================================



static void Test_aUc_BFu15ll_BFu16i()
{
  {
    init_simple_test("aUc_BFu15ll_BFu16i");
    static STRUCT_IF_C aUc_BFu15ll_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu15ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_BFu16i");
    set_bf_and_test(lv, v3, 2, 7, 16, 1, "aUc_BFu15ll_BFu16i");
    set_bf_and_test(lv, v3, 2, 7, 16, hide_ull(1LL<<15), "aUc_BFu15ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_BFu16i, aUc_BFu15ll_BFu16i)
//============================================================================



static void Test_aUc_BFu15ll_BFu16ll()
{
  {
    init_simple_test("aUc_BFu15ll_BFu16ll");
    static STRUCT_IF_C aUc_BFu15ll_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu15ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_BFu16ll");
    set_bf_and_test(lv, v3, 2, 7, 16, 1, "aUc_BFu15ll_BFu16ll");
    set_bf_and_test(lv, v3, 2, 7, 16, hide_ull(1LL<<15), "aUc_BFu15ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_BFu16ll, aUc_BFu15ll_BFu16ll)
//============================================================================



static void Test_aUc_BFu15ll_BFu16s()
{
  {
    init_simple_test("aUc_BFu15ll_BFu16s");
    static STRUCT_IF_C aUc_BFu15ll_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu15ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_BFu16s");
    set_bf_and_test(lv, v3, 2, 7, 16, 1, "aUc_BFu15ll_BFu16s");
    set_bf_and_test(lv, v3, 2, 7, 16, hide_ull(1LL<<15), "aUc_BFu15ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_BFu16s, aUc_BFu15ll_BFu16s)
//============================================================================



static void Test_aUc_BFu15ll_BFu17i()
{
  {
    init_simple_test("aUc_BFu15ll_BFu17i");
    static STRUCT_IF_C aUc_BFu15ll_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu15ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_BFu17i");
    set_bf_and_test(lv, v3, 2, 7, 17, 1, "aUc_BFu15ll_BFu17i");
    set_bf_and_test(lv, v3, 2, 7, 17, hide_ull(1LL<<16), "aUc_BFu15ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_BFu17i, aUc_BFu15ll_BFu17i)
//============================================================================



static void Test_aUc_BFu15ll_BFu17ll()
{
  {
    init_simple_test("aUc_BFu15ll_BFu17ll");
    static STRUCT_IF_C aUc_BFu15ll_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu15ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_BFu17ll");
    set_bf_and_test(lv, v3, 2, 7, 17, 1, "aUc_BFu15ll_BFu17ll");
    set_bf_and_test(lv, v3, 2, 7, 17, hide_ull(1LL<<16), "aUc_BFu15ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_BFu17ll, aUc_BFu15ll_BFu17ll)
//============================================================================



static void Test_aUc_BFu15ll_BFu1c()
{
  {
    init_simple_test("aUc_BFu15ll_BFu1c");
    static STRUCT_IF_C aUc_BFu15ll_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu15ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_BFu1c");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "aUc_BFu15ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_BFu1c, aUc_BFu15ll_BFu1c)
//============================================================================



static void Test_aUc_BFu15ll_BFu1i()
{
  {
    init_simple_test("aUc_BFu15ll_BFu1i");
    static STRUCT_IF_C aUc_BFu15ll_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu15ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_BFu1i");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "aUc_BFu15ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_BFu1i, aUc_BFu15ll_BFu1i)
//============================================================================



static void Test_aUc_BFu15ll_BFu1ll()
{
  {
    init_simple_test("aUc_BFu15ll_BFu1ll");
    static STRUCT_IF_C aUc_BFu15ll_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu15ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_BFu1ll");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "aUc_BFu15ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_BFu1ll, aUc_BFu15ll_BFu1ll)
//============================================================================



static void Test_aUc_BFu15ll_BFu1s()
{
  {
    init_simple_test("aUc_BFu15ll_BFu1s");
    static STRUCT_IF_C aUc_BFu15ll_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu15ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_BFu1s");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "aUc_BFu15ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_BFu1s, aUc_BFu15ll_BFu1s)
//============================================================================



static void Test_aUc_BFu15ll_BFu31i()
{
  {
    init_simple_test("aUc_BFu15ll_BFu31i");
    static STRUCT_IF_C aUc_BFu15ll_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu15ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_BFu31i");
    set_bf_and_test(lv, v3, 2, 7, 31, 1, "aUc_BFu15ll_BFu31i");
    set_bf_and_test(lv, v3, 2, 7, 31, hide_ull(1LL<<30), "aUc_BFu15ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_BFu31i, aUc_BFu15ll_BFu31i)
//============================================================================



static void Test_aUc_BFu15ll_BFu31ll()
{
  {
    init_simple_test("aUc_BFu15ll_BFu31ll");
    static STRUCT_IF_C aUc_BFu15ll_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu15ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_BFu31ll");
    set_bf_and_test(lv, v3, 2, 7, 31, 1, "aUc_BFu15ll_BFu31ll");
    set_bf_and_test(lv, v3, 2, 7, 31, hide_ull(1LL<<30), "aUc_BFu15ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_BFu31ll, aUc_BFu15ll_BFu31ll)
//============================================================================



static void Test_aUc_BFu15ll_BFu32i()
{
  {
    init_simple_test("aUc_BFu15ll_BFu32i");
    static STRUCT_IF_C aUc_BFu15ll_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu15ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_BFu32i");
    set_bf_and_test(lv, v3, 2, 7, 32, 1, "aUc_BFu15ll_BFu32i");
    set_bf_and_test(lv, v3, 2, 7, 32, hide_ull(1LL<<31), "aUc_BFu15ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_BFu32i, aUc_BFu15ll_BFu32i)
//============================================================================



static void Test_aUc_BFu15ll_BFu32ll()
{
  {
    init_simple_test("aUc_BFu15ll_BFu32ll");
    static STRUCT_IF_C aUc_BFu15ll_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu15ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_BFu32ll");
    set_bf_and_test(lv, v3, 2, 7, 32, 1, "aUc_BFu15ll_BFu32ll");
    set_bf_and_test(lv, v3, 2, 7, 32, hide_ull(1LL<<31), "aUc_BFu15ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_BFu32ll, aUc_BFu15ll_BFu32ll)
//============================================================================



static void Test_aUc_BFu15ll_BFu33()
{
  {
    init_simple_test("aUc_BFu15ll_BFu33");
    static STRUCT_IF_C aUc_BFu15ll_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu15ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_BFu33");
    set_bf_and_test(lv, v3, 2, 7, 33, 1, "aUc_BFu15ll_BFu33");
    set_bf_and_test(lv, v3, 2, 7, 33, hide_ull(1LL<<32), "aUc_BFu15ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_BFu33, aUc_BFu15ll_BFu33)
//============================================================================



static void Test_aUc_BFu15ll_BFu7c()
{
  {
    init_simple_test("aUc_BFu15ll_BFu7c");
    static STRUCT_IF_C aUc_BFu15ll_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_BFu7c");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "aUc_BFu15ll_BFu7c");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "aUc_BFu15ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_BFu7c, aUc_BFu15ll_BFu7c)
//============================================================================



static void Test_aUc_BFu15ll_BFu7i()
{
  {
    init_simple_test("aUc_BFu15ll_BFu7i");
    static STRUCT_IF_C aUc_BFu15ll_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_BFu7i");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "aUc_BFu15ll_BFu7i");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "aUc_BFu15ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_BFu7i, aUc_BFu15ll_BFu7i)
//============================================================================



static void Test_aUc_BFu15ll_BFu7ll()
{
  {
    init_simple_test("aUc_BFu15ll_BFu7ll");
    static STRUCT_IF_C aUc_BFu15ll_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_BFu7ll");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "aUc_BFu15ll_BFu7ll");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "aUc_BFu15ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_BFu7ll, aUc_BFu15ll_BFu7ll)
//============================================================================



static void Test_aUc_BFu15ll_BFu7s()
{
  {
    init_simple_test("aUc_BFu15ll_BFu7s");
    static STRUCT_IF_C aUc_BFu15ll_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_BFu7s");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "aUc_BFu15ll_BFu7s");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "aUc_BFu15ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_BFu7s, aUc_BFu15ll_BFu7s)
//============================================================================



static void Test_aUc_BFu15ll_BFu8c()
{
  {
    init_simple_test("aUc_BFu15ll_BFu8c");
    static STRUCT_IF_C aUc_BFu15ll_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_BFu8c");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "aUc_BFu15ll_BFu8c");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "aUc_BFu15ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_BFu8c, aUc_BFu15ll_BFu8c)
//============================================================================



static void Test_aUc_BFu15ll_BFu8i()
{
  {
    init_simple_test("aUc_BFu15ll_BFu8i");
    static STRUCT_IF_C aUc_BFu15ll_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_BFu8i");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "aUc_BFu15ll_BFu8i");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "aUc_BFu15ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_BFu8i, aUc_BFu15ll_BFu8i)
//============================================================================



static void Test_aUc_BFu15ll_BFu8ll()
{
  {
    init_simple_test("aUc_BFu15ll_BFu8ll");
    static STRUCT_IF_C aUc_BFu15ll_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_BFu8ll");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "aUc_BFu15ll_BFu8ll");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "aUc_BFu15ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_BFu8ll, aUc_BFu15ll_BFu8ll)
//============================================================================



static void Test_aUc_BFu15ll_BFu8s()
{
  {
    init_simple_test("aUc_BFu15ll_BFu8s");
    static STRUCT_IF_C aUc_BFu15ll_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_BFu8s");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "aUc_BFu15ll_BFu8s");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "aUc_BFu15ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_BFu8s, aUc_BFu15ll_BFu8s)
//============================================================================



static void Test_aUc_BFu15ll_BFu9i()
{
  {
    init_simple_test("aUc_BFu15ll_BFu9i");
    static STRUCT_IF_C aUc_BFu15ll_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_BFu9i");
    set_bf_and_test(lv, v3, 2, 7, 9, 1, "aUc_BFu15ll_BFu9i");
    set_bf_and_test(lv, v3, 2, 7, 9, hide_ull(1LL<<8), "aUc_BFu15ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_BFu9i, aUc_BFu15ll_BFu9i)
//============================================================================



static void Test_aUc_BFu15ll_BFu9ll()
{
  {
    init_simple_test("aUc_BFu15ll_BFu9ll");
    static STRUCT_IF_C aUc_BFu15ll_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_BFu9ll");
    set_bf_and_test(lv, v3, 2, 7, 9, 1, "aUc_BFu15ll_BFu9ll");
    set_bf_and_test(lv, v3, 2, 7, 9, hide_ull(1LL<<8), "aUc_BFu15ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_BFu9ll, aUc_BFu15ll_BFu9ll)
//============================================================================



static void Test_aUc_BFu15ll_BFu9s()
{
  {
    init_simple_test("aUc_BFu15ll_BFu9s");
    static STRUCT_IF_C aUc_BFu15ll_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_BFu9s");
    set_bf_and_test(lv, v3, 2, 7, 9, 1, "aUc_BFu15ll_BFu9s");
    set_bf_and_test(lv, v3, 2, 7, 9, hide_ull(1LL<<8), "aUc_BFu15ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_BFu9s, aUc_BFu15ll_BFu9s)
//============================================================================



static void Test_aUc_BFu15ll_C()
{
  {
    init_simple_test("aUc_BFu15ll_C");
    static STRUCT_IF_C aUc_BFu15ll_C lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_C)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_C");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_C");
    check_field_offset(lv, v3, 3, "aUc_BFu15ll_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_C, aUc_BFu15ll_C)
//============================================================================



static void Test_aUc_BFu15ll_D()
{
  {
    init_simple_test("aUc_BFu15ll_D");
    static STRUCT_IF_C aUc_BFu15ll_D lv;
    check2(sizeof(lv), 11, "sizeof(aUc_BFu15ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_D)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_D");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_D");
    check_field_offset(lv, v3, 3, "aUc_BFu15ll_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_D, aUc_BFu15ll_D)
//============================================================================



static void Test_aUc_BFu15ll_F()
{
  {
    init_simple_test("aUc_BFu15ll_F");
    static STRUCT_IF_C aUc_BFu15ll_F lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu15ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_F)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_F");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_F");
    check_field_offset(lv, v3, 3, "aUc_BFu15ll_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_F, aUc_BFu15ll_F)
//============================================================================



static void Test_aUc_BFu15ll_I()
{
  {
    init_simple_test("aUc_BFu15ll_I");
    static STRUCT_IF_C aUc_BFu15ll_I lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu15ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_I)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_I");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_I");
    check_field_offset(lv, v3, 3, "aUc_BFu15ll_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_I, aUc_BFu15ll_I)
//============================================================================



static void Test_aUc_BFu15ll_Ip()
{
  {
    init_simple_test("aUc_BFu15ll_Ip");
    static STRUCT_IF_C aUc_BFu15ll_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aUc_BFu15ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_Ip)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_Ip");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_Ip");
    check_field_offset(lv, v3, 3, "aUc_BFu15ll_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_Ip, aUc_BFu15ll_Ip)
//============================================================================



static void Test_aUc_BFu15ll_L()
{
  {
    init_simple_test("aUc_BFu15ll_L");
    static STRUCT_IF_C aUc_BFu15ll_L lv;
    check2(sizeof(lv), 11, "sizeof(aUc_BFu15ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_L)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_L");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_L");
    check_field_offset(lv, v3, 3, "aUc_BFu15ll_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_L, aUc_BFu15ll_L)
//============================================================================



static void Test_aUc_BFu15ll_S()
{
  {
    init_simple_test("aUc_BFu15ll_S");
    static STRUCT_IF_C aUc_BFu15ll_S lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu15ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_S)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_S");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_S");
    check_field_offset(lv, v3, 3, "aUc_BFu15ll_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_S, aUc_BFu15ll_S)
//============================================================================



static void Test_aUc_BFu15ll_Uc()
{
  {
    init_simple_test("aUc_BFu15ll_Uc");
    static STRUCT_IF_C aUc_BFu15ll_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_Uc)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_Uc");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_Uc");
    check_field_offset(lv, v3, 3, "aUc_BFu15ll_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_Uc, aUc_BFu15ll_Uc)
//============================================================================



static void Test_aUc_BFu15ll_Ui()
{
  {
    init_simple_test("aUc_BFu15ll_Ui");
    static STRUCT_IF_C aUc_BFu15ll_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu15ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_Ui)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_Ui");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_Ui");
    check_field_offset(lv, v3, 3, "aUc_BFu15ll_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_Ui, aUc_BFu15ll_Ui)
//============================================================================



static void Test_aUc_BFu15ll_Ul()
{
  {
    init_simple_test("aUc_BFu15ll_Ul");
    static STRUCT_IF_C aUc_BFu15ll_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aUc_BFu15ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_Ul)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_Ul");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_Ul");
    check_field_offset(lv, v3, 3, "aUc_BFu15ll_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_Ul, aUc_BFu15ll_Ul)
//============================================================================



static void Test_aUc_BFu15ll_Us()
{
  {
    init_simple_test("aUc_BFu15ll_Us");
    static STRUCT_IF_C aUc_BFu15ll_Us lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu15ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_Us)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_Us");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_Us");
    check_field_offset(lv, v3, 3, "aUc_BFu15ll_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_Us, aUc_BFu15ll_Us)
//============================================================================



static void Test_aUc_BFu15ll_Vp()
{
  {
    init_simple_test("aUc_BFu15ll_Vp");
    static STRUCT_IF_C aUc_BFu15ll_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aUc_BFu15ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15ll_Vp)");
    check_field_offset(lv, v1, 0, "aUc_BFu15ll_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15ll_Vp");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15ll_Vp");
    check_field_offset(lv, v3, 3, "aUc_BFu15ll_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15ll_Vp, aUc_BFu15ll_Vp)
//============================================================================



static void Test_aUc_BFu15s()
{
  {
    init_simple_test("aUc_BFu15s");
    static STRUCT_IF_C aUc_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s, aUc_BFu15s)
//============================================================================



static void Test_aUc_BFu15s_BFu15i()
{
  {
    init_simple_test("aUc_BFu15s_BFu15i");
    static STRUCT_IF_C aUc_BFu15s_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu15s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 2, 7, 15, 1, "aUc_BFu15s_BFu15i");
    set_bf_and_test(lv, v3, 2, 7, 15, hide_ull(1LL<<14), "aUc_BFu15s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_BFu15i, aUc_BFu15s_BFu15i)
//============================================================================



static void Test_aUc_BFu15s_BFu15ll()
{
  {
    init_simple_test("aUc_BFu15s_BFu15ll");
    static STRUCT_IF_C aUc_BFu15s_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu15s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 2, 7, 15, 1, "aUc_BFu15s_BFu15ll");
    set_bf_and_test(lv, v3, 2, 7, 15, hide_ull(1LL<<14), "aUc_BFu15s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_BFu15ll, aUc_BFu15s_BFu15ll)
//============================================================================



static void Test_aUc_BFu15s_BFu15s()
{
  {
    init_simple_test("aUc_BFu15s_BFu15s");
    static STRUCT_IF_C aUc_BFu15s_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu15s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 2, 7, 15, 1, "aUc_BFu15s_BFu15s");
    set_bf_and_test(lv, v3, 2, 7, 15, hide_ull(1LL<<14), "aUc_BFu15s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_BFu15s, aUc_BFu15s_BFu15s)
//============================================================================



static void Test_aUc_BFu15s_BFu16i()
{
  {
    init_simple_test("aUc_BFu15s_BFu16i");
    static STRUCT_IF_C aUc_BFu15s_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu15s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_BFu16i");
    set_bf_and_test(lv, v3, 2, 7, 16, 1, "aUc_BFu15s_BFu16i");
    set_bf_and_test(lv, v3, 2, 7, 16, hide_ull(1LL<<15), "aUc_BFu15s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_BFu16i, aUc_BFu15s_BFu16i)
//============================================================================



static void Test_aUc_BFu15s_BFu16ll()
{
  {
    init_simple_test("aUc_BFu15s_BFu16ll");
    static STRUCT_IF_C aUc_BFu15s_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu15s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_BFu16ll");
    set_bf_and_test(lv, v3, 2, 7, 16, 1, "aUc_BFu15s_BFu16ll");
    set_bf_and_test(lv, v3, 2, 7, 16, hide_ull(1LL<<15), "aUc_BFu15s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_BFu16ll, aUc_BFu15s_BFu16ll)
//============================================================================



static void Test_aUc_BFu15s_BFu16s()
{
  {
    init_simple_test("aUc_BFu15s_BFu16s");
    static STRUCT_IF_C aUc_BFu15s_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu15s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_BFu16s");
    set_bf_and_test(lv, v3, 2, 7, 16, 1, "aUc_BFu15s_BFu16s");
    set_bf_and_test(lv, v3, 2, 7, 16, hide_ull(1LL<<15), "aUc_BFu15s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_BFu16s, aUc_BFu15s_BFu16s)
//============================================================================



static void Test_aUc_BFu15s_BFu17i()
{
  {
    init_simple_test("aUc_BFu15s_BFu17i");
    static STRUCT_IF_C aUc_BFu15s_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu15s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_BFu17i");
    set_bf_and_test(lv, v3, 2, 7, 17, 1, "aUc_BFu15s_BFu17i");
    set_bf_and_test(lv, v3, 2, 7, 17, hide_ull(1LL<<16), "aUc_BFu15s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_BFu17i, aUc_BFu15s_BFu17i)
//============================================================================



static void Test_aUc_BFu15s_BFu17ll()
{
  {
    init_simple_test("aUc_BFu15s_BFu17ll");
    static STRUCT_IF_C aUc_BFu15s_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu15s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_BFu17ll");
    set_bf_and_test(lv, v3, 2, 7, 17, 1, "aUc_BFu15s_BFu17ll");
    set_bf_and_test(lv, v3, 2, 7, 17, hide_ull(1LL<<16), "aUc_BFu15s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_BFu17ll, aUc_BFu15s_BFu17ll)
//============================================================================



static void Test_aUc_BFu15s_BFu1c()
{
  {
    init_simple_test("aUc_BFu15s_BFu1c");
    static STRUCT_IF_C aUc_BFu15s_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu15s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_BFu1c");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "aUc_BFu15s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_BFu1c, aUc_BFu15s_BFu1c)
//============================================================================



static void Test_aUc_BFu15s_BFu1i()
{
  {
    init_simple_test("aUc_BFu15s_BFu1i");
    static STRUCT_IF_C aUc_BFu15s_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu15s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_BFu1i");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "aUc_BFu15s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_BFu1i, aUc_BFu15s_BFu1i)
//============================================================================



static void Test_aUc_BFu15s_BFu1ll()
{
  {
    init_simple_test("aUc_BFu15s_BFu1ll");
    static STRUCT_IF_C aUc_BFu15s_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu15s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_BFu1ll");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "aUc_BFu15s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_BFu1ll, aUc_BFu15s_BFu1ll)
//============================================================================



static void Test_aUc_BFu15s_BFu1s()
{
  {
    init_simple_test("aUc_BFu15s_BFu1s");
    static STRUCT_IF_C aUc_BFu15s_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu15s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_BFu1s");
    set_bf_and_test(lv, v3, 2, 7, 1, 1, "aUc_BFu15s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_BFu1s, aUc_BFu15s_BFu1s)
//============================================================================



static void Test_aUc_BFu15s_BFu31i()
{
  {
    init_simple_test("aUc_BFu15s_BFu31i");
    static STRUCT_IF_C aUc_BFu15s_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu15s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_BFu31i");
    set_bf_and_test(lv, v3, 2, 7, 31, 1, "aUc_BFu15s_BFu31i");
    set_bf_and_test(lv, v3, 2, 7, 31, hide_ull(1LL<<30), "aUc_BFu15s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_BFu31i, aUc_BFu15s_BFu31i)
//============================================================================



static void Test_aUc_BFu15s_BFu31ll()
{
  {
    init_simple_test("aUc_BFu15s_BFu31ll");
    static STRUCT_IF_C aUc_BFu15s_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu15s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_BFu31ll");
    set_bf_and_test(lv, v3, 2, 7, 31, 1, "aUc_BFu15s_BFu31ll");
    set_bf_and_test(lv, v3, 2, 7, 31, hide_ull(1LL<<30), "aUc_BFu15s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_BFu31ll, aUc_BFu15s_BFu31ll)
//============================================================================



static void Test_aUc_BFu15s_BFu32i()
{
  {
    init_simple_test("aUc_BFu15s_BFu32i");
    static STRUCT_IF_C aUc_BFu15s_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu15s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_BFu32i");
    set_bf_and_test(lv, v3, 2, 7, 32, 1, "aUc_BFu15s_BFu32i");
    set_bf_and_test(lv, v3, 2, 7, 32, hide_ull(1LL<<31), "aUc_BFu15s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_BFu32i, aUc_BFu15s_BFu32i)
//============================================================================



static void Test_aUc_BFu15s_BFu32ll()
{
  {
    init_simple_test("aUc_BFu15s_BFu32ll");
    static STRUCT_IF_C aUc_BFu15s_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu15s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_BFu32ll");
    set_bf_and_test(lv, v3, 2, 7, 32, 1, "aUc_BFu15s_BFu32ll");
    set_bf_and_test(lv, v3, 2, 7, 32, hide_ull(1LL<<31), "aUc_BFu15s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_BFu32ll, aUc_BFu15s_BFu32ll)
//============================================================================



static void Test_aUc_BFu15s_BFu33()
{
  {
    init_simple_test("aUc_BFu15s_BFu33");
    static STRUCT_IF_C aUc_BFu15s_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu15s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_BFu33");
    set_bf_and_test(lv, v3, 2, 7, 33, 1, "aUc_BFu15s_BFu33");
    set_bf_and_test(lv, v3, 2, 7, 33, hide_ull(1LL<<32), "aUc_BFu15s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_BFu33, aUc_BFu15s_BFu33)
//============================================================================



static void Test_aUc_BFu15s_BFu7c()
{
  {
    init_simple_test("aUc_BFu15s_BFu7c");
    static STRUCT_IF_C aUc_BFu15s_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_BFu7c");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "aUc_BFu15s_BFu7c");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "aUc_BFu15s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_BFu7c, aUc_BFu15s_BFu7c)
//============================================================================



static void Test_aUc_BFu15s_BFu7i()
{
  {
    init_simple_test("aUc_BFu15s_BFu7i");
    static STRUCT_IF_C aUc_BFu15s_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_BFu7i");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "aUc_BFu15s_BFu7i");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "aUc_BFu15s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_BFu7i, aUc_BFu15s_BFu7i)
//============================================================================



static void Test_aUc_BFu15s_BFu7ll()
{
  {
    init_simple_test("aUc_BFu15s_BFu7ll");
    static STRUCT_IF_C aUc_BFu15s_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_BFu7ll");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "aUc_BFu15s_BFu7ll");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "aUc_BFu15s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_BFu7ll, aUc_BFu15s_BFu7ll)
//============================================================================



static void Test_aUc_BFu15s_BFu7s()
{
  {
    init_simple_test("aUc_BFu15s_BFu7s");
    static STRUCT_IF_C aUc_BFu15s_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_BFu7s");
    set_bf_and_test(lv, v3, 2, 7, 7, 1, "aUc_BFu15s_BFu7s");
    set_bf_and_test(lv, v3, 2, 7, 7, hide_ull(1LL<<6), "aUc_BFu15s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_BFu7s, aUc_BFu15s_BFu7s)
//============================================================================



static void Test_aUc_BFu15s_BFu8c()
{
  {
    init_simple_test("aUc_BFu15s_BFu8c");
    static STRUCT_IF_C aUc_BFu15s_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_BFu8c");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "aUc_BFu15s_BFu8c");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "aUc_BFu15s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_BFu8c, aUc_BFu15s_BFu8c)
//============================================================================



static void Test_aUc_BFu15s_BFu8i()
{
  {
    init_simple_test("aUc_BFu15s_BFu8i");
    static STRUCT_IF_C aUc_BFu15s_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_BFu8i");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "aUc_BFu15s_BFu8i");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "aUc_BFu15s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_BFu8i, aUc_BFu15s_BFu8i)
//============================================================================



static void Test_aUc_BFu15s_BFu8ll()
{
  {
    init_simple_test("aUc_BFu15s_BFu8ll");
    static STRUCT_IF_C aUc_BFu15s_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_BFu8ll");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "aUc_BFu15s_BFu8ll");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "aUc_BFu15s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_BFu8ll, aUc_BFu15s_BFu8ll)
//============================================================================



static void Test_aUc_BFu15s_BFu8s()
{
  {
    init_simple_test("aUc_BFu15s_BFu8s");
    static STRUCT_IF_C aUc_BFu15s_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_BFu8s");
    set_bf_and_test(lv, v3, 2, 7, 8, 1, "aUc_BFu15s_BFu8s");
    set_bf_and_test(lv, v3, 2, 7, 8, hide_ull(1LL<<7), "aUc_BFu15s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_BFu8s, aUc_BFu15s_BFu8s)
//============================================================================



static void Test_aUc_BFu15s_BFu9i()
{
  {
    init_simple_test("aUc_BFu15s_BFu9i");
    static STRUCT_IF_C aUc_BFu15s_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_BFu9i");
    set_bf_and_test(lv, v3, 2, 7, 9, 1, "aUc_BFu15s_BFu9i");
    set_bf_and_test(lv, v3, 2, 7, 9, hide_ull(1LL<<8), "aUc_BFu15s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_BFu9i, aUc_BFu15s_BFu9i)
//============================================================================



static void Test_aUc_BFu15s_BFu9ll()
{
  {
    init_simple_test("aUc_BFu15s_BFu9ll");
    static STRUCT_IF_C aUc_BFu15s_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_BFu9ll");
    set_bf_and_test(lv, v3, 2, 7, 9, 1, "aUc_BFu15s_BFu9ll");
    set_bf_and_test(lv, v3, 2, 7, 9, hide_ull(1LL<<8), "aUc_BFu15s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_BFu9ll, aUc_BFu15s_BFu9ll)
//============================================================================



static void Test_aUc_BFu15s_BFu9s()
{
  {
    init_simple_test("aUc_BFu15s_BFu9s");
    static STRUCT_IF_C aUc_BFu15s_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_BFu9s");
    set_bf_and_test(lv, v3, 2, 7, 9, 1, "aUc_BFu15s_BFu9s");
    set_bf_and_test(lv, v3, 2, 7, 9, hide_ull(1LL<<8), "aUc_BFu15s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_BFu9s, aUc_BFu15s_BFu9s)
//============================================================================



static void Test_aUc_BFu15s_C()
{
  {
    init_simple_test("aUc_BFu15s_C");
    static STRUCT_IF_C aUc_BFu15s_C lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15s_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_C)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_C");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_C");
    check_field_offset(lv, v3, 3, "aUc_BFu15s_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_C, aUc_BFu15s_C)
//============================================================================



static void Test_aUc_BFu15s_D()
{
  {
    init_simple_test("aUc_BFu15s_D");
    static STRUCT_IF_C aUc_BFu15s_D lv;
    check2(sizeof(lv), 11, "sizeof(aUc_BFu15s_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_D)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_D");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_D");
    check_field_offset(lv, v3, 3, "aUc_BFu15s_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_D, aUc_BFu15s_D)
//============================================================================



static void Test_aUc_BFu15s_F()
{
  {
    init_simple_test("aUc_BFu15s_F");
    static STRUCT_IF_C aUc_BFu15s_F lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu15s_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_F)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_F");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_F");
    check_field_offset(lv, v3, 3, "aUc_BFu15s_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_F, aUc_BFu15s_F)
//============================================================================



static void Test_aUc_BFu15s_I()
{
  {
    init_simple_test("aUc_BFu15s_I");
    static STRUCT_IF_C aUc_BFu15s_I lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu15s_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_I)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_I");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_I");
    check_field_offset(lv, v3, 3, "aUc_BFu15s_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_I, aUc_BFu15s_I)
//============================================================================



static void Test_aUc_BFu15s_Ip()
{
  {
    init_simple_test("aUc_BFu15s_Ip");
    static STRUCT_IF_C aUc_BFu15s_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aUc_BFu15s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_Ip)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_Ip");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_Ip");
    check_field_offset(lv, v3, 3, "aUc_BFu15s_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_Ip, aUc_BFu15s_Ip)
//============================================================================



static void Test_aUc_BFu15s_L()
{
  {
    init_simple_test("aUc_BFu15s_L");
    static STRUCT_IF_C aUc_BFu15s_L lv;
    check2(sizeof(lv), 11, "sizeof(aUc_BFu15s_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_L)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_L");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_L");
    check_field_offset(lv, v3, 3, "aUc_BFu15s_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_L, aUc_BFu15s_L)
//============================================================================



static void Test_aUc_BFu15s_S()
{
  {
    init_simple_test("aUc_BFu15s_S");
    static STRUCT_IF_C aUc_BFu15s_S lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu15s_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_S)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_S");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_S");
    check_field_offset(lv, v3, 3, "aUc_BFu15s_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_S, aUc_BFu15s_S)
//============================================================================



static void Test_aUc_BFu15s_Uc()
{
  {
    init_simple_test("aUc_BFu15s_Uc");
    static STRUCT_IF_C aUc_BFu15s_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu15s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_Uc)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_Uc");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_Uc");
    check_field_offset(lv, v3, 3, "aUc_BFu15s_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_Uc, aUc_BFu15s_Uc)
//============================================================================



static void Test_aUc_BFu15s_Ui()
{
  {
    init_simple_test("aUc_BFu15s_Ui");
    static STRUCT_IF_C aUc_BFu15s_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu15s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_Ui)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_Ui");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_Ui");
    check_field_offset(lv, v3, 3, "aUc_BFu15s_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_Ui, aUc_BFu15s_Ui)
//============================================================================



static void Test_aUc_BFu15s_Ul()
{
  {
    init_simple_test("aUc_BFu15s_Ul");
    static STRUCT_IF_C aUc_BFu15s_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aUc_BFu15s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_Ul)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_Ul");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_Ul");
    check_field_offset(lv, v3, 3, "aUc_BFu15s_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_Ul, aUc_BFu15s_Ul)
//============================================================================



static void Test_aUc_BFu15s_Us()
{
  {
    init_simple_test("aUc_BFu15s_Us");
    static STRUCT_IF_C aUc_BFu15s_Us lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu15s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_Us)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_Us");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_Us");
    check_field_offset(lv, v3, 3, "aUc_BFu15s_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_Us, aUc_BFu15s_Us)
//============================================================================



static void Test_aUc_BFu15s_Vp()
{
  {
    init_simple_test("aUc_BFu15s_Vp");
    static STRUCT_IF_C aUc_BFu15s_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aUc_BFu15s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu15s_Vp)");
    check_field_offset(lv, v1, 0, "aUc_BFu15s_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 15, 1, "aUc_BFu15s_Vp");
    set_bf_and_test(lv, v2, 1, 0, 15, hide_ull(1LL<<14), "aUc_BFu15s_Vp");
    check_field_offset(lv, v3, 3, "aUc_BFu15s_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu15s_Vp, aUc_BFu15s_Vp)
//============================================================================



static void Test_aUc_BFu16i()
{
  {
    init_simple_test("aUc_BFu16i");
    static STRUCT_IF_C aUc_BFu16i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i, aUc_BFu16i)
//============================================================================



static void Test_aUc_BFu16i_BFu15i()
{
  {
    init_simple_test("aUc_BFu16i_BFu15i");
    static STRUCT_IF_C aUc_BFu16i_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aUc_BFu16i_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aUc_BFu16i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_BFu15i, aUc_BFu16i_BFu15i)
//============================================================================



static void Test_aUc_BFu16i_BFu15ll()
{
  {
    init_simple_test("aUc_BFu16i_BFu15ll");
    static STRUCT_IF_C aUc_BFu16i_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aUc_BFu16i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aUc_BFu16i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_BFu15ll, aUc_BFu16i_BFu15ll)
//============================================================================



static void Test_aUc_BFu16i_BFu15s()
{
  {
    init_simple_test("aUc_BFu16i_BFu15s");
    static STRUCT_IF_C aUc_BFu16i_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aUc_BFu16i_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aUc_BFu16i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_BFu15s, aUc_BFu16i_BFu15s)
//============================================================================



static void Test_aUc_BFu16i_BFu16i()
{
  {
    init_simple_test("aUc_BFu16i_BFu16i");
    static STRUCT_IF_C aUc_BFu16i_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aUc_BFu16i_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_BFu16i, aUc_BFu16i_BFu16i)
//============================================================================



static void Test_aUc_BFu16i_BFu16ll()
{
  {
    init_simple_test("aUc_BFu16i_BFu16ll");
    static STRUCT_IF_C aUc_BFu16i_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aUc_BFu16i_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_BFu16ll, aUc_BFu16i_BFu16ll)
//============================================================================



static void Test_aUc_BFu16i_BFu16s()
{
  {
    init_simple_test("aUc_BFu16i_BFu16s");
    static STRUCT_IF_C aUc_BFu16i_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aUc_BFu16i_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_BFu16s, aUc_BFu16i_BFu16s)
//============================================================================



static void Test_aUc_BFu16i_BFu17i()
{
  {
    init_simple_test("aUc_BFu16i_BFu17i");
    static STRUCT_IF_C aUc_BFu16i_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu16i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aUc_BFu16i_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aUc_BFu16i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_BFu17i, aUc_BFu16i_BFu17i)
//============================================================================



static void Test_aUc_BFu16i_BFu17ll()
{
  {
    init_simple_test("aUc_BFu16i_BFu17ll");
    static STRUCT_IF_C aUc_BFu16i_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu16i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aUc_BFu16i_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aUc_BFu16i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_BFu17ll, aUc_BFu16i_BFu17ll)
//============================================================================



static void Test_aUc_BFu16i_BFu1c()
{
  {
    init_simple_test("aUc_BFu16i_BFu1c");
    static STRUCT_IF_C aUc_BFu16i_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_BFu1c");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aUc_BFu16i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_BFu1c, aUc_BFu16i_BFu1c)
//============================================================================



static void Test_aUc_BFu16i_BFu1i()
{
  {
    init_simple_test("aUc_BFu16i_BFu1i");
    static STRUCT_IF_C aUc_BFu16i_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_BFu1i");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aUc_BFu16i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_BFu1i, aUc_BFu16i_BFu1i)
//============================================================================



static void Test_aUc_BFu16i_BFu1ll()
{
  {
    init_simple_test("aUc_BFu16i_BFu1ll");
    static STRUCT_IF_C aUc_BFu16i_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_BFu1ll");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aUc_BFu16i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_BFu1ll, aUc_BFu16i_BFu1ll)
//============================================================================



static void Test_aUc_BFu16i_BFu1s()
{
  {
    init_simple_test("aUc_BFu16i_BFu1s");
    static STRUCT_IF_C aUc_BFu16i_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_BFu1s");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aUc_BFu16i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_BFu1s, aUc_BFu16i_BFu1s)
//============================================================================



static void Test_aUc_BFu16i_BFu31i()
{
  {
    init_simple_test("aUc_BFu16i_BFu31i");
    static STRUCT_IF_C aUc_BFu16i_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu16i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aUc_BFu16i_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aUc_BFu16i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_BFu31i, aUc_BFu16i_BFu31i)
//============================================================================



static void Test_aUc_BFu16i_BFu31ll()
{
  {
    init_simple_test("aUc_BFu16i_BFu31ll");
    static STRUCT_IF_C aUc_BFu16i_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu16i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aUc_BFu16i_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aUc_BFu16i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_BFu31ll, aUc_BFu16i_BFu31ll)
//============================================================================



static void Test_aUc_BFu16i_BFu32i()
{
  {
    init_simple_test("aUc_BFu16i_BFu32i");
    static STRUCT_IF_C aUc_BFu16i_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu16i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aUc_BFu16i_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aUc_BFu16i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_BFu32i, aUc_BFu16i_BFu32i)
//============================================================================



static void Test_aUc_BFu16i_BFu32ll()
{
  {
    init_simple_test("aUc_BFu16i_BFu32ll");
    static STRUCT_IF_C aUc_BFu16i_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu16i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aUc_BFu16i_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aUc_BFu16i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_BFu32ll, aUc_BFu16i_BFu32ll)
//============================================================================



static void Test_aUc_BFu16i_BFu33()
{
  {
    init_simple_test("aUc_BFu16i_BFu33");
    static STRUCT_IF_C aUc_BFu16i_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(aUc_BFu16i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, 1, "aUc_BFu16i_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, hide_ull(1LL<<32), "aUc_BFu16i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_BFu33, aUc_BFu16i_BFu33)
//============================================================================



static void Test_aUc_BFu16i_BFu7c()
{
  {
    init_simple_test("aUc_BFu16i_BFu7c");
    static STRUCT_IF_C aUc_BFu16i_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aUc_BFu16i_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aUc_BFu16i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_BFu7c, aUc_BFu16i_BFu7c)
//============================================================================



static void Test_aUc_BFu16i_BFu7i()
{
  {
    init_simple_test("aUc_BFu16i_BFu7i");
    static STRUCT_IF_C aUc_BFu16i_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aUc_BFu16i_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aUc_BFu16i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_BFu7i, aUc_BFu16i_BFu7i)
//============================================================================



static void Test_aUc_BFu16i_BFu7ll()
{
  {
    init_simple_test("aUc_BFu16i_BFu7ll");
    static STRUCT_IF_C aUc_BFu16i_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aUc_BFu16i_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aUc_BFu16i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_BFu7ll, aUc_BFu16i_BFu7ll)
//============================================================================



static void Test_aUc_BFu16i_BFu7s()
{
  {
    init_simple_test("aUc_BFu16i_BFu7s");
    static STRUCT_IF_C aUc_BFu16i_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aUc_BFu16i_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aUc_BFu16i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_BFu7s, aUc_BFu16i_BFu7s)
//============================================================================



static void Test_aUc_BFu16i_BFu8c()
{
  {
    init_simple_test("aUc_BFu16i_BFu8c");
    static STRUCT_IF_C aUc_BFu16i_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aUc_BFu16i_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aUc_BFu16i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_BFu8c, aUc_BFu16i_BFu8c)
//============================================================================



static void Test_aUc_BFu16i_BFu8i()
{
  {
    init_simple_test("aUc_BFu16i_BFu8i");
    static STRUCT_IF_C aUc_BFu16i_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aUc_BFu16i_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aUc_BFu16i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_BFu8i, aUc_BFu16i_BFu8i)
//============================================================================



static void Test_aUc_BFu16i_BFu8ll()
{
  {
    init_simple_test("aUc_BFu16i_BFu8ll");
    static STRUCT_IF_C aUc_BFu16i_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aUc_BFu16i_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aUc_BFu16i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_BFu8ll, aUc_BFu16i_BFu8ll)
//============================================================================



static void Test_aUc_BFu16i_BFu8s()
{
  {
    init_simple_test("aUc_BFu16i_BFu8s");
    static STRUCT_IF_C aUc_BFu16i_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aUc_BFu16i_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aUc_BFu16i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_BFu8s, aUc_BFu16i_BFu8s)
//============================================================================



static void Test_aUc_BFu16i_BFu9i()
{
  {
    init_simple_test("aUc_BFu16i_BFu9i");
    static STRUCT_IF_C aUc_BFu16i_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aUc_BFu16i_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aUc_BFu16i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_BFu9i, aUc_BFu16i_BFu9i)
//============================================================================



static void Test_aUc_BFu16i_BFu9ll()
{
  {
    init_simple_test("aUc_BFu16i_BFu9ll");
    static STRUCT_IF_C aUc_BFu16i_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aUc_BFu16i_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aUc_BFu16i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_BFu9ll, aUc_BFu16i_BFu9ll)
//============================================================================



static void Test_aUc_BFu16i_BFu9s()
{
  {
    init_simple_test("aUc_BFu16i_BFu9s");
    static STRUCT_IF_C aUc_BFu16i_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aUc_BFu16i_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aUc_BFu16i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_BFu9s, aUc_BFu16i_BFu9s)
//============================================================================



static void Test_aUc_BFu16i_C()
{
  {
    init_simple_test("aUc_BFu16i_C");
    static STRUCT_IF_C aUc_BFu16i_C lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_C)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_C");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_C");
    check_field_offset(lv, v3, 3, "aUc_BFu16i_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_C, aUc_BFu16i_C)
//============================================================================



static void Test_aUc_BFu16i_D()
{
  {
    init_simple_test("aUc_BFu16i_D");
    static STRUCT_IF_C aUc_BFu16i_D lv;
    check2(sizeof(lv), 11, "sizeof(aUc_BFu16i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_D)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_D");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_D");
    check_field_offset(lv, v3, 3, "aUc_BFu16i_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_D, aUc_BFu16i_D)
//============================================================================



static void Test_aUc_BFu16i_F()
{
  {
    init_simple_test("aUc_BFu16i_F");
    static STRUCT_IF_C aUc_BFu16i_F lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu16i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_F)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_F");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_F");
    check_field_offset(lv, v3, 3, "aUc_BFu16i_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_F, aUc_BFu16i_F)
//============================================================================



static void Test_aUc_BFu16i_I()
{
  {
    init_simple_test("aUc_BFu16i_I");
    static STRUCT_IF_C aUc_BFu16i_I lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu16i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_I)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_I");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_I");
    check_field_offset(lv, v3, 3, "aUc_BFu16i_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_I, aUc_BFu16i_I)
//============================================================================



static void Test_aUc_BFu16i_Ip()
{
  {
    init_simple_test("aUc_BFu16i_Ip");
    static STRUCT_IF_C aUc_BFu16i_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aUc_BFu16i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_Ip)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_Ip");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_Ip");
    check_field_offset(lv, v3, 3, "aUc_BFu16i_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_Ip, aUc_BFu16i_Ip)
//============================================================================



static void Test_aUc_BFu16i_L()
{
  {
    init_simple_test("aUc_BFu16i_L");
    static STRUCT_IF_C aUc_BFu16i_L lv;
    check2(sizeof(lv), 11, "sizeof(aUc_BFu16i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_L)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_L");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_L");
    check_field_offset(lv, v3, 3, "aUc_BFu16i_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_L, aUc_BFu16i_L)
//============================================================================



static void Test_aUc_BFu16i_S()
{
  {
    init_simple_test("aUc_BFu16i_S");
    static STRUCT_IF_C aUc_BFu16i_S lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_S)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_S");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_S");
    check_field_offset(lv, v3, 3, "aUc_BFu16i_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_S, aUc_BFu16i_S)
//============================================================================



static void Test_aUc_BFu16i_Uc()
{
  {
    init_simple_test("aUc_BFu16i_Uc");
    static STRUCT_IF_C aUc_BFu16i_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_Uc)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_Uc");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_Uc");
    check_field_offset(lv, v3, 3, "aUc_BFu16i_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_Uc, aUc_BFu16i_Uc)
//============================================================================



static void Test_aUc_BFu16i_Ui()
{
  {
    init_simple_test("aUc_BFu16i_Ui");
    static STRUCT_IF_C aUc_BFu16i_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu16i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_Ui)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_Ui");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_Ui");
    check_field_offset(lv, v3, 3, "aUc_BFu16i_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_Ui, aUc_BFu16i_Ui)
//============================================================================



static void Test_aUc_BFu16i_Ul()
{
  {
    init_simple_test("aUc_BFu16i_Ul");
    static STRUCT_IF_C aUc_BFu16i_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aUc_BFu16i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_Ul)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_Ul");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_Ul");
    check_field_offset(lv, v3, 3, "aUc_BFu16i_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_Ul, aUc_BFu16i_Ul)
//============================================================================



static void Test_aUc_BFu16i_Us()
{
  {
    init_simple_test("aUc_BFu16i_Us");
    static STRUCT_IF_C aUc_BFu16i_Us lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_Us)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_Us");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_Us");
    check_field_offset(lv, v3, 3, "aUc_BFu16i_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_Us, aUc_BFu16i_Us)
//============================================================================



static void Test_aUc_BFu16i_Vp()
{
  {
    init_simple_test("aUc_BFu16i_Vp");
    static STRUCT_IF_C aUc_BFu16i_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aUc_BFu16i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16i_Vp)");
    check_field_offset(lv, v1, 0, "aUc_BFu16i_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16i_Vp");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16i_Vp");
    check_field_offset(lv, v3, 3, "aUc_BFu16i_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16i_Vp, aUc_BFu16i_Vp)
//============================================================================



static void Test_aUc_BFu16ll()
{
  {
    init_simple_test("aUc_BFu16ll");
    static STRUCT_IF_C aUc_BFu16ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll, aUc_BFu16ll)
//============================================================================



static void Test_aUc_BFu16ll_BFu15i()
{
  {
    init_simple_test("aUc_BFu16ll_BFu15i");
    static STRUCT_IF_C aUc_BFu16ll_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aUc_BFu16ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aUc_BFu16ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_BFu15i, aUc_BFu16ll_BFu15i)
//============================================================================



static void Test_aUc_BFu16ll_BFu15ll()
{
  {
    init_simple_test("aUc_BFu16ll_BFu15ll");
    static STRUCT_IF_C aUc_BFu16ll_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aUc_BFu16ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aUc_BFu16ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_BFu15ll, aUc_BFu16ll_BFu15ll)
//============================================================================



static void Test_aUc_BFu16ll_BFu15s()
{
  {
    init_simple_test("aUc_BFu16ll_BFu15s");
    static STRUCT_IF_C aUc_BFu16ll_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aUc_BFu16ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aUc_BFu16ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_BFu15s, aUc_BFu16ll_BFu15s)
//============================================================================



static void Test_aUc_BFu16ll_BFu16i()
{
  {
    init_simple_test("aUc_BFu16ll_BFu16i");
    static STRUCT_IF_C aUc_BFu16ll_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aUc_BFu16ll_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_BFu16i, aUc_BFu16ll_BFu16i)
//============================================================================



static void Test_aUc_BFu16ll_BFu16ll()
{
  {
    init_simple_test("aUc_BFu16ll_BFu16ll");
    static STRUCT_IF_C aUc_BFu16ll_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aUc_BFu16ll_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_BFu16ll, aUc_BFu16ll_BFu16ll)
//============================================================================



static void Test_aUc_BFu16ll_BFu16s()
{
  {
    init_simple_test("aUc_BFu16ll_BFu16s");
    static STRUCT_IF_C aUc_BFu16ll_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aUc_BFu16ll_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_BFu16s, aUc_BFu16ll_BFu16s)
//============================================================================



static void Test_aUc_BFu16ll_BFu17i()
{
  {
    init_simple_test("aUc_BFu16ll_BFu17i");
    static STRUCT_IF_C aUc_BFu16ll_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu16ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aUc_BFu16ll_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aUc_BFu16ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_BFu17i, aUc_BFu16ll_BFu17i)
//============================================================================



static void Test_aUc_BFu16ll_BFu17ll()
{
  {
    init_simple_test("aUc_BFu16ll_BFu17ll");
    static STRUCT_IF_C aUc_BFu16ll_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu16ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aUc_BFu16ll_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aUc_BFu16ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_BFu17ll, aUc_BFu16ll_BFu17ll)
//============================================================================



static void Test_aUc_BFu16ll_BFu1c()
{
  {
    init_simple_test("aUc_BFu16ll_BFu1c");
    static STRUCT_IF_C aUc_BFu16ll_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_BFu1c");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aUc_BFu16ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_BFu1c, aUc_BFu16ll_BFu1c)
//============================================================================



static void Test_aUc_BFu16ll_BFu1i()
{
  {
    init_simple_test("aUc_BFu16ll_BFu1i");
    static STRUCT_IF_C aUc_BFu16ll_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_BFu1i");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aUc_BFu16ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_BFu1i, aUc_BFu16ll_BFu1i)
//============================================================================



static void Test_aUc_BFu16ll_BFu1ll()
{
  {
    init_simple_test("aUc_BFu16ll_BFu1ll");
    static STRUCT_IF_C aUc_BFu16ll_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_BFu1ll");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aUc_BFu16ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_BFu1ll, aUc_BFu16ll_BFu1ll)
//============================================================================



static void Test_aUc_BFu16ll_BFu1s()
{
  {
    init_simple_test("aUc_BFu16ll_BFu1s");
    static STRUCT_IF_C aUc_BFu16ll_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_BFu1s");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aUc_BFu16ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_BFu1s, aUc_BFu16ll_BFu1s)
//============================================================================



static void Test_aUc_BFu16ll_BFu31i()
{
  {
    init_simple_test("aUc_BFu16ll_BFu31i");
    static STRUCT_IF_C aUc_BFu16ll_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu16ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aUc_BFu16ll_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aUc_BFu16ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_BFu31i, aUc_BFu16ll_BFu31i)
//============================================================================



static void Test_aUc_BFu16ll_BFu31ll()
{
  {
    init_simple_test("aUc_BFu16ll_BFu31ll");
    static STRUCT_IF_C aUc_BFu16ll_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu16ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aUc_BFu16ll_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aUc_BFu16ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_BFu31ll, aUc_BFu16ll_BFu31ll)
//============================================================================



static void Test_aUc_BFu16ll_BFu32i()
{
  {
    init_simple_test("aUc_BFu16ll_BFu32i");
    static STRUCT_IF_C aUc_BFu16ll_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu16ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aUc_BFu16ll_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aUc_BFu16ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_BFu32i, aUc_BFu16ll_BFu32i)
//============================================================================



static void Test_aUc_BFu16ll_BFu32ll()
{
  {
    init_simple_test("aUc_BFu16ll_BFu32ll");
    static STRUCT_IF_C aUc_BFu16ll_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu16ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aUc_BFu16ll_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aUc_BFu16ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_BFu32ll, aUc_BFu16ll_BFu32ll)
//============================================================================



static void Test_aUc_BFu16ll_BFu33()
{
  {
    init_simple_test("aUc_BFu16ll_BFu33");
    static STRUCT_IF_C aUc_BFu16ll_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(aUc_BFu16ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, 1, "aUc_BFu16ll_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, hide_ull(1LL<<32), "aUc_BFu16ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_BFu33, aUc_BFu16ll_BFu33)
//============================================================================



static void Test_aUc_BFu16ll_BFu7c()
{
  {
    init_simple_test("aUc_BFu16ll_BFu7c");
    static STRUCT_IF_C aUc_BFu16ll_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aUc_BFu16ll_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aUc_BFu16ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_BFu7c, aUc_BFu16ll_BFu7c)
//============================================================================



static void Test_aUc_BFu16ll_BFu7i()
{
  {
    init_simple_test("aUc_BFu16ll_BFu7i");
    static STRUCT_IF_C aUc_BFu16ll_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aUc_BFu16ll_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aUc_BFu16ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_BFu7i, aUc_BFu16ll_BFu7i)
//============================================================================



static void Test_aUc_BFu16ll_BFu7ll()
{
  {
    init_simple_test("aUc_BFu16ll_BFu7ll");
    static STRUCT_IF_C aUc_BFu16ll_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aUc_BFu16ll_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aUc_BFu16ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_BFu7ll, aUc_BFu16ll_BFu7ll)
//============================================================================



static void Test_aUc_BFu16ll_BFu7s()
{
  {
    init_simple_test("aUc_BFu16ll_BFu7s");
    static STRUCT_IF_C aUc_BFu16ll_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aUc_BFu16ll_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aUc_BFu16ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_BFu7s, aUc_BFu16ll_BFu7s)
//============================================================================



static void Test_aUc_BFu16ll_BFu8c()
{
  {
    init_simple_test("aUc_BFu16ll_BFu8c");
    static STRUCT_IF_C aUc_BFu16ll_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aUc_BFu16ll_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aUc_BFu16ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_BFu8c, aUc_BFu16ll_BFu8c)
//============================================================================



static void Test_aUc_BFu16ll_BFu8i()
{
  {
    init_simple_test("aUc_BFu16ll_BFu8i");
    static STRUCT_IF_C aUc_BFu16ll_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aUc_BFu16ll_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aUc_BFu16ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_BFu8i, aUc_BFu16ll_BFu8i)
//============================================================================



static void Test_aUc_BFu16ll_BFu8ll()
{
  {
    init_simple_test("aUc_BFu16ll_BFu8ll");
    static STRUCT_IF_C aUc_BFu16ll_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aUc_BFu16ll_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aUc_BFu16ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_BFu8ll, aUc_BFu16ll_BFu8ll)
//============================================================================



static void Test_aUc_BFu16ll_BFu8s()
{
  {
    init_simple_test("aUc_BFu16ll_BFu8s");
    static STRUCT_IF_C aUc_BFu16ll_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aUc_BFu16ll_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aUc_BFu16ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_BFu8s, aUc_BFu16ll_BFu8s)
//============================================================================



static void Test_aUc_BFu16ll_BFu9i()
{
  {
    init_simple_test("aUc_BFu16ll_BFu9i");
    static STRUCT_IF_C aUc_BFu16ll_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aUc_BFu16ll_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aUc_BFu16ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_BFu9i, aUc_BFu16ll_BFu9i)
//============================================================================



static void Test_aUc_BFu16ll_BFu9ll()
{
  {
    init_simple_test("aUc_BFu16ll_BFu9ll");
    static STRUCT_IF_C aUc_BFu16ll_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aUc_BFu16ll_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aUc_BFu16ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_BFu9ll, aUc_BFu16ll_BFu9ll)
//============================================================================



static void Test_aUc_BFu16ll_BFu9s()
{
  {
    init_simple_test("aUc_BFu16ll_BFu9s");
    static STRUCT_IF_C aUc_BFu16ll_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aUc_BFu16ll_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aUc_BFu16ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_BFu9s, aUc_BFu16ll_BFu9s)
//============================================================================



static void Test_aUc_BFu16ll_C()
{
  {
    init_simple_test("aUc_BFu16ll_C");
    static STRUCT_IF_C aUc_BFu16ll_C lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_C)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_C");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_C");
    check_field_offset(lv, v3, 3, "aUc_BFu16ll_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_C, aUc_BFu16ll_C)
//============================================================================



static void Test_aUc_BFu16ll_D()
{
  {
    init_simple_test("aUc_BFu16ll_D");
    static STRUCT_IF_C aUc_BFu16ll_D lv;
    check2(sizeof(lv), 11, "sizeof(aUc_BFu16ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_D)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_D");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_D");
    check_field_offset(lv, v3, 3, "aUc_BFu16ll_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_D, aUc_BFu16ll_D)
//============================================================================



static void Test_aUc_BFu16ll_F()
{
  {
    init_simple_test("aUc_BFu16ll_F");
    static STRUCT_IF_C aUc_BFu16ll_F lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu16ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_F)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_F");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_F");
    check_field_offset(lv, v3, 3, "aUc_BFu16ll_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_F, aUc_BFu16ll_F)
//============================================================================



static void Test_aUc_BFu16ll_I()
{
  {
    init_simple_test("aUc_BFu16ll_I");
    static STRUCT_IF_C aUc_BFu16ll_I lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu16ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_I)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_I");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_I");
    check_field_offset(lv, v3, 3, "aUc_BFu16ll_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_I, aUc_BFu16ll_I)
//============================================================================



static void Test_aUc_BFu16ll_Ip()
{
  {
    init_simple_test("aUc_BFu16ll_Ip");
    static STRUCT_IF_C aUc_BFu16ll_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aUc_BFu16ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_Ip)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_Ip");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_Ip");
    check_field_offset(lv, v3, 3, "aUc_BFu16ll_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_Ip, aUc_BFu16ll_Ip)
//============================================================================



static void Test_aUc_BFu16ll_L()
{
  {
    init_simple_test("aUc_BFu16ll_L");
    static STRUCT_IF_C aUc_BFu16ll_L lv;
    check2(sizeof(lv), 11, "sizeof(aUc_BFu16ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_L)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_L");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_L");
    check_field_offset(lv, v3, 3, "aUc_BFu16ll_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_L, aUc_BFu16ll_L)
//============================================================================



static void Test_aUc_BFu16ll_S()
{
  {
    init_simple_test("aUc_BFu16ll_S");
    static STRUCT_IF_C aUc_BFu16ll_S lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_S)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_S");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_S");
    check_field_offset(lv, v3, 3, "aUc_BFu16ll_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_S, aUc_BFu16ll_S)
//============================================================================



static void Test_aUc_BFu16ll_Uc()
{
  {
    init_simple_test("aUc_BFu16ll_Uc");
    static STRUCT_IF_C aUc_BFu16ll_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_Uc)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_Uc");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_Uc");
    check_field_offset(lv, v3, 3, "aUc_BFu16ll_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_Uc, aUc_BFu16ll_Uc)
//============================================================================



static void Test_aUc_BFu16ll_Ui()
{
  {
    init_simple_test("aUc_BFu16ll_Ui");
    static STRUCT_IF_C aUc_BFu16ll_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu16ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_Ui)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_Ui");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_Ui");
    check_field_offset(lv, v3, 3, "aUc_BFu16ll_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_Ui, aUc_BFu16ll_Ui)
//============================================================================



static void Test_aUc_BFu16ll_Ul()
{
  {
    init_simple_test("aUc_BFu16ll_Ul");
    static STRUCT_IF_C aUc_BFu16ll_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aUc_BFu16ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_Ul)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_Ul");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_Ul");
    check_field_offset(lv, v3, 3, "aUc_BFu16ll_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_Ul, aUc_BFu16ll_Ul)
//============================================================================



static void Test_aUc_BFu16ll_Us()
{
  {
    init_simple_test("aUc_BFu16ll_Us");
    static STRUCT_IF_C aUc_BFu16ll_Us lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_Us)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_Us");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_Us");
    check_field_offset(lv, v3, 3, "aUc_BFu16ll_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_Us, aUc_BFu16ll_Us)
//============================================================================



static void Test_aUc_BFu16ll_Vp()
{
  {
    init_simple_test("aUc_BFu16ll_Vp");
    static STRUCT_IF_C aUc_BFu16ll_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aUc_BFu16ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16ll_Vp)");
    check_field_offset(lv, v1, 0, "aUc_BFu16ll_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16ll_Vp");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16ll_Vp");
    check_field_offset(lv, v3, 3, "aUc_BFu16ll_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16ll_Vp, aUc_BFu16ll_Vp)
//============================================================================



static void Test_aUc_BFu16s()
{
  {
    init_simple_test("aUc_BFu16s");
    static STRUCT_IF_C aUc_BFu16s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s, aUc_BFu16s)
//============================================================================



static void Test_aUc_BFu16s_BFu15i()
{
  {
    init_simple_test("aUc_BFu16s_BFu15i");
    static STRUCT_IF_C aUc_BFu16s_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aUc_BFu16s_BFu15i");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aUc_BFu16s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_BFu15i, aUc_BFu16s_BFu15i)
//============================================================================



static void Test_aUc_BFu16s_BFu15ll()
{
  {
    init_simple_test("aUc_BFu16s_BFu15ll");
    static STRUCT_IF_C aUc_BFu16s_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aUc_BFu16s_BFu15ll");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aUc_BFu16s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_BFu15ll, aUc_BFu16s_BFu15ll)
//============================================================================



static void Test_aUc_BFu16s_BFu15s()
{
  {
    init_simple_test("aUc_BFu16s_BFu15s");
    static STRUCT_IF_C aUc_BFu16s_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, 1, "aUc_BFu16s_BFu15s");
    set_bf_and_test(lv, v3, 3, 0, 15, hide_ull(1LL<<14), "aUc_BFu16s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_BFu15s, aUc_BFu16s_BFu15s)
//============================================================================



static void Test_aUc_BFu16s_BFu16i()
{
  {
    init_simple_test("aUc_BFu16s_BFu16i");
    static STRUCT_IF_C aUc_BFu16s_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aUc_BFu16s_BFu16i");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_BFu16i, aUc_BFu16s_BFu16i)
//============================================================================



static void Test_aUc_BFu16s_BFu16ll()
{
  {
    init_simple_test("aUc_BFu16s_BFu16ll");
    static STRUCT_IF_C aUc_BFu16s_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aUc_BFu16s_BFu16ll");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_BFu16ll, aUc_BFu16s_BFu16ll)
//============================================================================



static void Test_aUc_BFu16s_BFu16s()
{
  {
    init_simple_test("aUc_BFu16s_BFu16s");
    static STRUCT_IF_C aUc_BFu16s_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, 1, "aUc_BFu16s_BFu16s");
    set_bf_and_test(lv, v3, 3, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_BFu16s, aUc_BFu16s_BFu16s)
//============================================================================



static void Test_aUc_BFu16s_BFu17i()
{
  {
    init_simple_test("aUc_BFu16s_BFu17i");
    static STRUCT_IF_C aUc_BFu16s_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu16s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aUc_BFu16s_BFu17i");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aUc_BFu16s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_BFu17i, aUc_BFu16s_BFu17i)
//============================================================================



static void Test_aUc_BFu16s_BFu17ll()
{
  {
    init_simple_test("aUc_BFu16s_BFu17ll");
    static STRUCT_IF_C aUc_BFu16s_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu16s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, 1, "aUc_BFu16s_BFu17ll");
    set_bf_and_test(lv, v3, 3, 0, 17, hide_ull(1LL<<16), "aUc_BFu16s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_BFu17ll, aUc_BFu16s_BFu17ll)
//============================================================================



static void Test_aUc_BFu16s_BFu1c()
{
  {
    init_simple_test("aUc_BFu16s_BFu1c");
    static STRUCT_IF_C aUc_BFu16s_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_BFu1c");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aUc_BFu16s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_BFu1c, aUc_BFu16s_BFu1c)
//============================================================================



static void Test_aUc_BFu16s_BFu1i()
{
  {
    init_simple_test("aUc_BFu16s_BFu1i");
    static STRUCT_IF_C aUc_BFu16s_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_BFu1i");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aUc_BFu16s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_BFu1i, aUc_BFu16s_BFu1i)
//============================================================================



static void Test_aUc_BFu16s_BFu1ll()
{
  {
    init_simple_test("aUc_BFu16s_BFu1ll");
    static STRUCT_IF_C aUc_BFu16s_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_BFu1ll");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aUc_BFu16s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_BFu1ll, aUc_BFu16s_BFu1ll)
//============================================================================



static void Test_aUc_BFu16s_BFu1s()
{
  {
    init_simple_test("aUc_BFu16s_BFu1s");
    static STRUCT_IF_C aUc_BFu16s_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_BFu1s");
    set_bf_and_test(lv, v3, 3, 0, 1, 1, "aUc_BFu16s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_BFu1s, aUc_BFu16s_BFu1s)
//============================================================================



static void Test_aUc_BFu16s_BFu31i()
{
  {
    init_simple_test("aUc_BFu16s_BFu31i");
    static STRUCT_IF_C aUc_BFu16s_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu16s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aUc_BFu16s_BFu31i");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aUc_BFu16s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_BFu31i, aUc_BFu16s_BFu31i)
//============================================================================



static void Test_aUc_BFu16s_BFu31ll()
{
  {
    init_simple_test("aUc_BFu16s_BFu31ll");
    static STRUCT_IF_C aUc_BFu16s_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu16s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, 1, "aUc_BFu16s_BFu31ll");
    set_bf_and_test(lv, v3, 3, 0, 31, hide_ull(1LL<<30), "aUc_BFu16s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_BFu31ll, aUc_BFu16s_BFu31ll)
//============================================================================



static void Test_aUc_BFu16s_BFu32i()
{
  {
    init_simple_test("aUc_BFu16s_BFu32i");
    static STRUCT_IF_C aUc_BFu16s_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu16s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aUc_BFu16s_BFu32i");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aUc_BFu16s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_BFu32i, aUc_BFu16s_BFu32i)
//============================================================================



static void Test_aUc_BFu16s_BFu32ll()
{
  {
    init_simple_test("aUc_BFu16s_BFu32ll");
    static STRUCT_IF_C aUc_BFu16s_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu16s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, 1, "aUc_BFu16s_BFu32ll");
    set_bf_and_test(lv, v3, 3, 0, 32, hide_ull(1LL<<31), "aUc_BFu16s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_BFu32ll, aUc_BFu16s_BFu32ll)
//============================================================================



static void Test_aUc_BFu16s_BFu33()
{
  {
    init_simple_test("aUc_BFu16s_BFu33");
    static STRUCT_IF_C aUc_BFu16s_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(aUc_BFu16s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, 1, "aUc_BFu16s_BFu33");
    set_bf_and_test(lv, v3, 3, 0, 33, hide_ull(1LL<<32), "aUc_BFu16s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_BFu33, aUc_BFu16s_BFu33)
//============================================================================



static void Test_aUc_BFu16s_BFu7c()
{
  {
    init_simple_test("aUc_BFu16s_BFu7c");
    static STRUCT_IF_C aUc_BFu16s_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aUc_BFu16s_BFu7c");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aUc_BFu16s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_BFu7c, aUc_BFu16s_BFu7c)
//============================================================================



static void Test_aUc_BFu16s_BFu7i()
{
  {
    init_simple_test("aUc_BFu16s_BFu7i");
    static STRUCT_IF_C aUc_BFu16s_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aUc_BFu16s_BFu7i");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aUc_BFu16s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_BFu7i, aUc_BFu16s_BFu7i)
//============================================================================



static void Test_aUc_BFu16s_BFu7ll()
{
  {
    init_simple_test("aUc_BFu16s_BFu7ll");
    static STRUCT_IF_C aUc_BFu16s_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aUc_BFu16s_BFu7ll");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aUc_BFu16s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_BFu7ll, aUc_BFu16s_BFu7ll)
//============================================================================



static void Test_aUc_BFu16s_BFu7s()
{
  {
    init_simple_test("aUc_BFu16s_BFu7s");
    static STRUCT_IF_C aUc_BFu16s_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, 1, "aUc_BFu16s_BFu7s");
    set_bf_and_test(lv, v3, 3, 0, 7, hide_ull(1LL<<6), "aUc_BFu16s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_BFu7s, aUc_BFu16s_BFu7s)
//============================================================================



static void Test_aUc_BFu16s_BFu8c()
{
  {
    init_simple_test("aUc_BFu16s_BFu8c");
    static STRUCT_IF_C aUc_BFu16s_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aUc_BFu16s_BFu8c");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aUc_BFu16s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_BFu8c, aUc_BFu16s_BFu8c)
//============================================================================



static void Test_aUc_BFu16s_BFu8i()
{
  {
    init_simple_test("aUc_BFu16s_BFu8i");
    static STRUCT_IF_C aUc_BFu16s_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aUc_BFu16s_BFu8i");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aUc_BFu16s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_BFu8i, aUc_BFu16s_BFu8i)
//============================================================================



static void Test_aUc_BFu16s_BFu8ll()
{
  {
    init_simple_test("aUc_BFu16s_BFu8ll");
    static STRUCT_IF_C aUc_BFu16s_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aUc_BFu16s_BFu8ll");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aUc_BFu16s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_BFu8ll, aUc_BFu16s_BFu8ll)
//============================================================================



static void Test_aUc_BFu16s_BFu8s()
{
  {
    init_simple_test("aUc_BFu16s_BFu8s");
    static STRUCT_IF_C aUc_BFu16s_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, 1, "aUc_BFu16s_BFu8s");
    set_bf_and_test(lv, v3, 3, 0, 8, hide_ull(1LL<<7), "aUc_BFu16s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_BFu8s, aUc_BFu16s_BFu8s)
//============================================================================



static void Test_aUc_BFu16s_BFu9i()
{
  {
    init_simple_test("aUc_BFu16s_BFu9i");
    static STRUCT_IF_C aUc_BFu16s_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aUc_BFu16s_BFu9i");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aUc_BFu16s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_BFu9i, aUc_BFu16s_BFu9i)
//============================================================================



static void Test_aUc_BFu16s_BFu9ll()
{
  {
    init_simple_test("aUc_BFu16s_BFu9ll");
    static STRUCT_IF_C aUc_BFu16s_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aUc_BFu16s_BFu9ll");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aUc_BFu16s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_BFu9ll, aUc_BFu16s_BFu9ll)
//============================================================================



static void Test_aUc_BFu16s_BFu9s()
{
  {
    init_simple_test("aUc_BFu16s_BFu9s");
    static STRUCT_IF_C aUc_BFu16s_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, 1, "aUc_BFu16s_BFu9s");
    set_bf_and_test(lv, v3, 3, 0, 9, hide_ull(1LL<<8), "aUc_BFu16s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_BFu9s, aUc_BFu16s_BFu9s)
//============================================================================



static void Test_aUc_BFu16s_C()
{
  {
    init_simple_test("aUc_BFu16s_C");
    static STRUCT_IF_C aUc_BFu16s_C lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16s_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_C)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_C");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_C");
    check_field_offset(lv, v3, 3, "aUc_BFu16s_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_C, aUc_BFu16s_C)
//============================================================================



static void Test_aUc_BFu16s_D()
{
  {
    init_simple_test("aUc_BFu16s_D");
    static STRUCT_IF_C aUc_BFu16s_D lv;
    check2(sizeof(lv), 11, "sizeof(aUc_BFu16s_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_D)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_D");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_D");
    check_field_offset(lv, v3, 3, "aUc_BFu16s_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_D, aUc_BFu16s_D)
//============================================================================



static void Test_aUc_BFu16s_F()
{
  {
    init_simple_test("aUc_BFu16s_F");
    static STRUCT_IF_C aUc_BFu16s_F lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu16s_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_F)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_F");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_F");
    check_field_offset(lv, v3, 3, "aUc_BFu16s_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_F, aUc_BFu16s_F)
//============================================================================



static void Test_aUc_BFu16s_I()
{
  {
    init_simple_test("aUc_BFu16s_I");
    static STRUCT_IF_C aUc_BFu16s_I lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu16s_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_I)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_I");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_I");
    check_field_offset(lv, v3, 3, "aUc_BFu16s_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_I, aUc_BFu16s_I)
//============================================================================



static void Test_aUc_BFu16s_Ip()
{
  {
    init_simple_test("aUc_BFu16s_Ip");
    static STRUCT_IF_C aUc_BFu16s_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aUc_BFu16s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_Ip)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_Ip");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_Ip");
    check_field_offset(lv, v3, 3, "aUc_BFu16s_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_Ip, aUc_BFu16s_Ip)
//============================================================================



static void Test_aUc_BFu16s_L()
{
  {
    init_simple_test("aUc_BFu16s_L");
    static STRUCT_IF_C aUc_BFu16s_L lv;
    check2(sizeof(lv), 11, "sizeof(aUc_BFu16s_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_L)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_L");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_L");
    check_field_offset(lv, v3, 3, "aUc_BFu16s_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_L, aUc_BFu16s_L)
//============================================================================



static void Test_aUc_BFu16s_S()
{
  {
    init_simple_test("aUc_BFu16s_S");
    static STRUCT_IF_C aUc_BFu16s_S lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16s_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_S)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_S");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_S");
    check_field_offset(lv, v3, 3, "aUc_BFu16s_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_S, aUc_BFu16s_S)
//============================================================================



static void Test_aUc_BFu16s_Uc()
{
  {
    init_simple_test("aUc_BFu16s_Uc");
    static STRUCT_IF_C aUc_BFu16s_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu16s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_Uc)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_Uc");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_Uc");
    check_field_offset(lv, v3, 3, "aUc_BFu16s_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_Uc, aUc_BFu16s_Uc)
//============================================================================



static void Test_aUc_BFu16s_Ui()
{
  {
    init_simple_test("aUc_BFu16s_Ui");
    static STRUCT_IF_C aUc_BFu16s_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu16s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_Ui)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_Ui");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_Ui");
    check_field_offset(lv, v3, 3, "aUc_BFu16s_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_Ui, aUc_BFu16s_Ui)
//============================================================================



static void Test_aUc_BFu16s_Ul()
{
  {
    init_simple_test("aUc_BFu16s_Ul");
    static STRUCT_IF_C aUc_BFu16s_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aUc_BFu16s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_Ul)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_Ul");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_Ul");
    check_field_offset(lv, v3, 3, "aUc_BFu16s_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_Ul, aUc_BFu16s_Ul)
//============================================================================



static void Test_aUc_BFu16s_Us()
{
  {
    init_simple_test("aUc_BFu16s_Us");
    static STRUCT_IF_C aUc_BFu16s_Us lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu16s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_Us)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_Us");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_Us");
    check_field_offset(lv, v3, 3, "aUc_BFu16s_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_Us, aUc_BFu16s_Us)
//============================================================================



static void Test_aUc_BFu16s_Vp()
{
  {
    init_simple_test("aUc_BFu16s_Vp");
    static STRUCT_IF_C aUc_BFu16s_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aUc_BFu16s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu16s_Vp)");
    check_field_offset(lv, v1, 0, "aUc_BFu16s_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 16, 1, "aUc_BFu16s_Vp");
    set_bf_and_test(lv, v2, 1, 0, 16, hide_ull(1LL<<15), "aUc_BFu16s_Vp");
    check_field_offset(lv, v3, 3, "aUc_BFu16s_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu16s_Vp, aUc_BFu16s_Vp)
//============================================================================



static void Test_aUc_BFu17i()
{
  {
    init_simple_test("aUc_BFu17i");
    static STRUCT_IF_C aUc_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i, aUc_BFu17i)
//============================================================================



static void Test_aUc_BFu17i_BFu15i()
{
  {
    init_simple_test("aUc_BFu17i_BFu15i");
    static STRUCT_IF_C aUc_BFu17i_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu17i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_BFu15i");
    set_bf_and_test(lv, v3, 3, 1, 15, 1, "aUc_BFu17i_BFu15i");
    set_bf_and_test(lv, v3, 3, 1, 15, hide_ull(1LL<<14), "aUc_BFu17i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_BFu15i, aUc_BFu17i_BFu15i)
//============================================================================



static void Test_aUc_BFu17i_BFu15ll()
{
  {
    init_simple_test("aUc_BFu17i_BFu15ll");
    static STRUCT_IF_C aUc_BFu17i_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu17i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 1, 15, 1, "aUc_BFu17i_BFu15ll");
    set_bf_and_test(lv, v3, 3, 1, 15, hide_ull(1LL<<14), "aUc_BFu17i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_BFu15ll, aUc_BFu17i_BFu15ll)
//============================================================================



static void Test_aUc_BFu17i_BFu15s()
{
  {
    init_simple_test("aUc_BFu17i_BFu15s");
    static STRUCT_IF_C aUc_BFu17i_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu17i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_BFu15s");
    set_bf_and_test(lv, v3, 3, 1, 15, 1, "aUc_BFu17i_BFu15s");
    set_bf_and_test(lv, v3, 3, 1, 15, hide_ull(1LL<<14), "aUc_BFu17i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_BFu15s, aUc_BFu17i_BFu15s)
//============================================================================



static void Test_aUc_BFu17i_BFu16i()
{
  {
    init_simple_test("aUc_BFu17i_BFu16i");
    static STRUCT_IF_C aUc_BFu17i_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu17i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_BFu16i");
    set_bf_and_test(lv, v3, 3, 1, 16, 1, "aUc_BFu17i_BFu16i");
    set_bf_and_test(lv, v3, 3, 1, 16, hide_ull(1LL<<15), "aUc_BFu17i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_BFu16i, aUc_BFu17i_BFu16i)
//============================================================================



static void Test_aUc_BFu17i_BFu16ll()
{
  {
    init_simple_test("aUc_BFu17i_BFu16ll");
    static STRUCT_IF_C aUc_BFu17i_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu17i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_BFu16ll");
    set_bf_and_test(lv, v3, 3, 1, 16, 1, "aUc_BFu17i_BFu16ll");
    set_bf_and_test(lv, v3, 3, 1, 16, hide_ull(1LL<<15), "aUc_BFu17i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_BFu16ll, aUc_BFu17i_BFu16ll)
//============================================================================



static void Test_aUc_BFu17i_BFu16s()
{
  {
    init_simple_test("aUc_BFu17i_BFu16s");
    static STRUCT_IF_C aUc_BFu17i_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu17i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_BFu16s");
    set_bf_and_test(lv, v3, 3, 1, 16, 1, "aUc_BFu17i_BFu16s");
    set_bf_and_test(lv, v3, 3, 1, 16, hide_ull(1LL<<15), "aUc_BFu17i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_BFu16s, aUc_BFu17i_BFu16s)
//============================================================================



static void Test_aUc_BFu17i_BFu17i()
{
  {
    init_simple_test("aUc_BFu17i_BFu17i");
    static STRUCT_IF_C aUc_BFu17i_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu17i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_BFu17i");
    set_bf_and_test(lv, v3, 3, 1, 17, 1, "aUc_BFu17i_BFu17i");
    set_bf_and_test(lv, v3, 3, 1, 17, hide_ull(1LL<<16), "aUc_BFu17i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_BFu17i, aUc_BFu17i_BFu17i)
//============================================================================



static void Test_aUc_BFu17i_BFu17ll()
{
  {
    init_simple_test("aUc_BFu17i_BFu17ll");
    static STRUCT_IF_C aUc_BFu17i_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu17i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_BFu17ll");
    set_bf_and_test(lv, v3, 3, 1, 17, 1, "aUc_BFu17i_BFu17ll");
    set_bf_and_test(lv, v3, 3, 1, 17, hide_ull(1LL<<16), "aUc_BFu17i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_BFu17ll, aUc_BFu17i_BFu17ll)
//============================================================================



static void Test_aUc_BFu17i_BFu1c()
{
  {
    init_simple_test("aUc_BFu17i_BFu1c");
    static STRUCT_IF_C aUc_BFu17i_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu17i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_BFu1c");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "aUc_BFu17i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_BFu1c, aUc_BFu17i_BFu1c)
//============================================================================



static void Test_aUc_BFu17i_BFu1i()
{
  {
    init_simple_test("aUc_BFu17i_BFu1i");
    static STRUCT_IF_C aUc_BFu17i_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu17i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_BFu1i");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "aUc_BFu17i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_BFu1i, aUc_BFu17i_BFu1i)
//============================================================================



static void Test_aUc_BFu17i_BFu1ll()
{
  {
    init_simple_test("aUc_BFu17i_BFu1ll");
    static STRUCT_IF_C aUc_BFu17i_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu17i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_BFu1ll");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "aUc_BFu17i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_BFu1ll, aUc_BFu17i_BFu1ll)
//============================================================================



static void Test_aUc_BFu17i_BFu1s()
{
  {
    init_simple_test("aUc_BFu17i_BFu1s");
    static STRUCT_IF_C aUc_BFu17i_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu17i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_BFu1s");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "aUc_BFu17i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_BFu1s, aUc_BFu17i_BFu1s)
//============================================================================



static void Test_aUc_BFu17i_BFu31i()
{
  {
    init_simple_test("aUc_BFu17i_BFu31i");
    static STRUCT_IF_C aUc_BFu17i_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu17i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_BFu31i");
    set_bf_and_test(lv, v3, 3, 1, 31, 1, "aUc_BFu17i_BFu31i");
    set_bf_and_test(lv, v3, 3, 1, 31, hide_ull(1LL<<30), "aUc_BFu17i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_BFu31i, aUc_BFu17i_BFu31i)
//============================================================================



static void Test_aUc_BFu17i_BFu31ll()
{
  {
    init_simple_test("aUc_BFu17i_BFu31ll");
    static STRUCT_IF_C aUc_BFu17i_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu17i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_BFu31ll");
    set_bf_and_test(lv, v3, 3, 1, 31, 1, "aUc_BFu17i_BFu31ll");
    set_bf_and_test(lv, v3, 3, 1, 31, hide_ull(1LL<<30), "aUc_BFu17i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_BFu31ll, aUc_BFu17i_BFu31ll)
//============================================================================



static void Test_aUc_BFu17i_BFu32i()
{
  {
    init_simple_test("aUc_BFu17i_BFu32i");
    static STRUCT_IF_C aUc_BFu17i_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(aUc_BFu17i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_BFu32i");
    set_bf_and_test(lv, v3, 3, 1, 32, 1, "aUc_BFu17i_BFu32i");
    set_bf_and_test(lv, v3, 3, 1, 32, hide_ull(1LL<<31), "aUc_BFu17i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_BFu32i, aUc_BFu17i_BFu32i)
//============================================================================



static void Test_aUc_BFu17i_BFu32ll()
{
  {
    init_simple_test("aUc_BFu17i_BFu32ll");
    static STRUCT_IF_C aUc_BFu17i_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(aUc_BFu17i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_BFu32ll");
    set_bf_and_test(lv, v3, 3, 1, 32, 1, "aUc_BFu17i_BFu32ll");
    set_bf_and_test(lv, v3, 3, 1, 32, hide_ull(1LL<<31), "aUc_BFu17i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_BFu32ll, aUc_BFu17i_BFu32ll)
//============================================================================



static void Test_aUc_BFu17i_BFu33()
{
  {
    init_simple_test("aUc_BFu17i_BFu33");
    static STRUCT_IF_C aUc_BFu17i_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(aUc_BFu17i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_BFu33");
    set_bf_and_test(lv, v3, 3, 1, 33, 1, "aUc_BFu17i_BFu33");
    set_bf_and_test(lv, v3, 3, 1, 33, hide_ull(1LL<<32), "aUc_BFu17i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_BFu33, aUc_BFu17i_BFu33)
//============================================================================



static void Test_aUc_BFu17i_BFu7c()
{
  {
    init_simple_test("aUc_BFu17i_BFu7c");
    static STRUCT_IF_C aUc_BFu17i_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu17i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_BFu7c");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "aUc_BFu17i_BFu7c");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "aUc_BFu17i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_BFu7c, aUc_BFu17i_BFu7c)
//============================================================================



static void Test_aUc_BFu17i_BFu7i()
{
  {
    init_simple_test("aUc_BFu17i_BFu7i");
    static STRUCT_IF_C aUc_BFu17i_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu17i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_BFu7i");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "aUc_BFu17i_BFu7i");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "aUc_BFu17i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_BFu7i, aUc_BFu17i_BFu7i)
//============================================================================



static void Test_aUc_BFu17i_BFu7ll()
{
  {
    init_simple_test("aUc_BFu17i_BFu7ll");
    static STRUCT_IF_C aUc_BFu17i_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu17i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_BFu7ll");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "aUc_BFu17i_BFu7ll");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "aUc_BFu17i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_BFu7ll, aUc_BFu17i_BFu7ll)
//============================================================================



static void Test_aUc_BFu17i_BFu7s()
{
  {
    init_simple_test("aUc_BFu17i_BFu7s");
    static STRUCT_IF_C aUc_BFu17i_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu17i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_BFu7s");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "aUc_BFu17i_BFu7s");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "aUc_BFu17i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_BFu7s, aUc_BFu17i_BFu7s)
//============================================================================



static void Test_aUc_BFu17i_BFu8c()
{
  {
    init_simple_test("aUc_BFu17i_BFu8c");
    static STRUCT_IF_C aUc_BFu17i_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu17i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_BFu8c");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "aUc_BFu17i_BFu8c");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "aUc_BFu17i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_BFu8c, aUc_BFu17i_BFu8c)
//============================================================================



static void Test_aUc_BFu17i_BFu8i()
{
  {
    init_simple_test("aUc_BFu17i_BFu8i");
    static STRUCT_IF_C aUc_BFu17i_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu17i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_BFu8i");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "aUc_BFu17i_BFu8i");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "aUc_BFu17i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_BFu8i, aUc_BFu17i_BFu8i)
//============================================================================



static void Test_aUc_BFu17i_BFu8ll()
{
  {
    init_simple_test("aUc_BFu17i_BFu8ll");
    static STRUCT_IF_C aUc_BFu17i_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu17i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_BFu8ll");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "aUc_BFu17i_BFu8ll");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "aUc_BFu17i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_BFu8ll, aUc_BFu17i_BFu8ll)
//============================================================================



static void Test_aUc_BFu17i_BFu8s()
{
  {
    init_simple_test("aUc_BFu17i_BFu8s");
    static STRUCT_IF_C aUc_BFu17i_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu17i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_BFu8s");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "aUc_BFu17i_BFu8s");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "aUc_BFu17i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_BFu8s, aUc_BFu17i_BFu8s)
//============================================================================



static void Test_aUc_BFu17i_BFu9i()
{
  {
    init_simple_test("aUc_BFu17i_BFu9i");
    static STRUCT_IF_C aUc_BFu17i_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu17i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_BFu9i");
    set_bf_and_test(lv, v3, 3, 1, 9, 1, "aUc_BFu17i_BFu9i");
    set_bf_and_test(lv, v3, 3, 1, 9, hide_ull(1LL<<8), "aUc_BFu17i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_BFu9i, aUc_BFu17i_BFu9i)
//============================================================================



static void Test_aUc_BFu17i_BFu9ll()
{
  {
    init_simple_test("aUc_BFu17i_BFu9ll");
    static STRUCT_IF_C aUc_BFu17i_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu17i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_BFu9ll");
    set_bf_and_test(lv, v3, 3, 1, 9, 1, "aUc_BFu17i_BFu9ll");
    set_bf_and_test(lv, v3, 3, 1, 9, hide_ull(1LL<<8), "aUc_BFu17i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_BFu9ll, aUc_BFu17i_BFu9ll)
//============================================================================



static void Test_aUc_BFu17i_BFu9s()
{
  {
    init_simple_test("aUc_BFu17i_BFu9s");
    static STRUCT_IF_C aUc_BFu17i_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu17i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_BFu9s");
    set_bf_and_test(lv, v3, 3, 1, 9, 1, "aUc_BFu17i_BFu9s");
    set_bf_and_test(lv, v3, 3, 1, 9, hide_ull(1LL<<8), "aUc_BFu17i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_BFu9s, aUc_BFu17i_BFu9s)
//============================================================================



static void Test_aUc_BFu17i_C()
{
  {
    init_simple_test("aUc_BFu17i_C");
    static STRUCT_IF_C aUc_BFu17i_C lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu17i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_C)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_C");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_C");
    check_field_offset(lv, v3, 4, "aUc_BFu17i_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_C, aUc_BFu17i_C)
//============================================================================



static void Test_aUc_BFu17i_D()
{
  {
    init_simple_test("aUc_BFu17i_D");
    static STRUCT_IF_C aUc_BFu17i_D lv;
    check2(sizeof(lv), 12, "sizeof(aUc_BFu17i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_D)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_D");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_D");
    check_field_offset(lv, v3, 4, "aUc_BFu17i_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_D, aUc_BFu17i_D)
//============================================================================



static void Test_aUc_BFu17i_F()
{
  {
    init_simple_test("aUc_BFu17i_F");
    static STRUCT_IF_C aUc_BFu17i_F lv;
    check2(sizeof(lv), 8, "sizeof(aUc_BFu17i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_F)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_F");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_F");
    check_field_offset(lv, v3, 4, "aUc_BFu17i_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_F, aUc_BFu17i_F)
//============================================================================



static void Test_aUc_BFu17i_I()
{
  {
    init_simple_test("aUc_BFu17i_I");
    static STRUCT_IF_C aUc_BFu17i_I lv;
    check2(sizeof(lv), 8, "sizeof(aUc_BFu17i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_I)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_I");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_I");
    check_field_offset(lv, v3, 4, "aUc_BFu17i_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_I, aUc_BFu17i_I)
//============================================================================



static void Test_aUc_BFu17i_Ip()
{
  {
    init_simple_test("aUc_BFu17i_Ip");
    static STRUCT_IF_C aUc_BFu17i_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aUc_BFu17i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_Ip)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_Ip");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_Ip");
    check_field_offset(lv, v3, 4, "aUc_BFu17i_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_Ip, aUc_BFu17i_Ip)
//============================================================================



static void Test_aUc_BFu17i_L()
{
  {
    init_simple_test("aUc_BFu17i_L");
    static STRUCT_IF_C aUc_BFu17i_L lv;
    check2(sizeof(lv), 12, "sizeof(aUc_BFu17i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_L)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_L");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_L");
    check_field_offset(lv, v3, 4, "aUc_BFu17i_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_L, aUc_BFu17i_L)
//============================================================================



static void Test_aUc_BFu17i_S()
{
  {
    init_simple_test("aUc_BFu17i_S");
    static STRUCT_IF_C aUc_BFu17i_S lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu17i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_S)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_S");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_S");
    check_field_offset(lv, v3, 4, "aUc_BFu17i_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_S, aUc_BFu17i_S)
//============================================================================



static void Test_aUc_BFu17i_Uc()
{
  {
    init_simple_test("aUc_BFu17i_Uc");
    static STRUCT_IF_C aUc_BFu17i_Uc lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu17i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_Uc)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_Uc");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_Uc");
    check_field_offset(lv, v3, 4, "aUc_BFu17i_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_Uc, aUc_BFu17i_Uc)
//============================================================================



static void Test_aUc_BFu17i_Ui()
{
  {
    init_simple_test("aUc_BFu17i_Ui");
    static STRUCT_IF_C aUc_BFu17i_Ui lv;
    check2(sizeof(lv), 8, "sizeof(aUc_BFu17i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_Ui)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_Ui");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_Ui");
    check_field_offset(lv, v3, 4, "aUc_BFu17i_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_Ui, aUc_BFu17i_Ui)
//============================================================================



static void Test_aUc_BFu17i_Ul()
{
  {
    init_simple_test("aUc_BFu17i_Ul");
    static STRUCT_IF_C aUc_BFu17i_Ul lv;
    check2(sizeof(lv), 12, "sizeof(aUc_BFu17i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_Ul)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_Ul");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_Ul");
    check_field_offset(lv, v3, 4, "aUc_BFu17i_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_Ul, aUc_BFu17i_Ul)
//============================================================================



static void Test_aUc_BFu17i_Us()
{
  {
    init_simple_test("aUc_BFu17i_Us");
    static STRUCT_IF_C aUc_BFu17i_Us lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu17i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_Us)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_Us");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_Us");
    check_field_offset(lv, v3, 4, "aUc_BFu17i_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_Us, aUc_BFu17i_Us)
//============================================================================



static void Test_aUc_BFu17i_Vp()
{
  {
    init_simple_test("aUc_BFu17i_Vp");
    static STRUCT_IF_C aUc_BFu17i_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aUc_BFu17i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17i_Vp)");
    check_field_offset(lv, v1, 0, "aUc_BFu17i_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17i_Vp");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17i_Vp");
    check_field_offset(lv, v3, 4, "aUc_BFu17i_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17i_Vp, aUc_BFu17i_Vp)
//============================================================================



static void Test_aUc_BFu17ll()
{
  {
    init_simple_test("aUc_BFu17ll");
    static STRUCT_IF_C aUc_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll, aUc_BFu17ll)
//============================================================================



static void Test_aUc_BFu17ll_BFu15i()
{
  {
    init_simple_test("aUc_BFu17ll_BFu15i");
    static STRUCT_IF_C aUc_BFu17ll_BFu15i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu17ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 1, 15, 1, "aUc_BFu17ll_BFu15i");
    set_bf_and_test(lv, v3, 3, 1, 15, hide_ull(1LL<<14), "aUc_BFu17ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_BFu15i, aUc_BFu17ll_BFu15i)
//============================================================================



static void Test_aUc_BFu17ll_BFu15ll()
{
  {
    init_simple_test("aUc_BFu17ll_BFu15ll");
    static STRUCT_IF_C aUc_BFu17ll_BFu15ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu17ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 1, 15, 1, "aUc_BFu17ll_BFu15ll");
    set_bf_and_test(lv, v3, 3, 1, 15, hide_ull(1LL<<14), "aUc_BFu17ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_BFu15ll, aUc_BFu17ll_BFu15ll)
//============================================================================



static void Test_aUc_BFu17ll_BFu15s()
{
  {
    init_simple_test("aUc_BFu17ll_BFu15s");
    static STRUCT_IF_C aUc_BFu17ll_BFu15s lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu17ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 1, 15, 1, "aUc_BFu17ll_BFu15s");
    set_bf_and_test(lv, v3, 3, 1, 15, hide_ull(1LL<<14), "aUc_BFu17ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_BFu15s, aUc_BFu17ll_BFu15s)
//============================================================================



static void Test_aUc_BFu17ll_BFu16i()
{
  {
    init_simple_test("aUc_BFu17ll_BFu16i");
    static STRUCT_IF_C aUc_BFu17ll_BFu16i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu17ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_BFu16i");
    set_bf_and_test(lv, v3, 3, 1, 16, 1, "aUc_BFu17ll_BFu16i");
    set_bf_and_test(lv, v3, 3, 1, 16, hide_ull(1LL<<15), "aUc_BFu17ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_BFu16i, aUc_BFu17ll_BFu16i)
//============================================================================



static void Test_aUc_BFu17ll_BFu16ll()
{
  {
    init_simple_test("aUc_BFu17ll_BFu16ll");
    static STRUCT_IF_C aUc_BFu17ll_BFu16ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu17ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_BFu16ll");
    set_bf_and_test(lv, v3, 3, 1, 16, 1, "aUc_BFu17ll_BFu16ll");
    set_bf_and_test(lv, v3, 3, 1, 16, hide_ull(1LL<<15), "aUc_BFu17ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_BFu16ll, aUc_BFu17ll_BFu16ll)
//============================================================================



static void Test_aUc_BFu17ll_BFu16s()
{
  {
    init_simple_test("aUc_BFu17ll_BFu16s");
    static STRUCT_IF_C aUc_BFu17ll_BFu16s lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu17ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_BFu16s");
    set_bf_and_test(lv, v3, 3, 1, 16, 1, "aUc_BFu17ll_BFu16s");
    set_bf_and_test(lv, v3, 3, 1, 16, hide_ull(1LL<<15), "aUc_BFu17ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_BFu16s, aUc_BFu17ll_BFu16s)
//============================================================================



static void Test_aUc_BFu17ll_BFu17i()
{
  {
    init_simple_test("aUc_BFu17ll_BFu17i");
    static STRUCT_IF_C aUc_BFu17ll_BFu17i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu17ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_BFu17i");
    set_bf_and_test(lv, v3, 3, 1, 17, 1, "aUc_BFu17ll_BFu17i");
    set_bf_and_test(lv, v3, 3, 1, 17, hide_ull(1LL<<16), "aUc_BFu17ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_BFu17i, aUc_BFu17ll_BFu17i)
//============================================================================



static void Test_aUc_BFu17ll_BFu17ll()
{
  {
    init_simple_test("aUc_BFu17ll_BFu17ll");
    static STRUCT_IF_C aUc_BFu17ll_BFu17ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu17ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v3, 3, 1, 17, 1, "aUc_BFu17ll_BFu17ll");
    set_bf_and_test(lv, v3, 3, 1, 17, hide_ull(1LL<<16), "aUc_BFu17ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_BFu17ll, aUc_BFu17ll_BFu17ll)
//============================================================================



static void Test_aUc_BFu17ll_BFu1c()
{
  {
    init_simple_test("aUc_BFu17ll_BFu1c");
    static STRUCT_IF_C aUc_BFu17ll_BFu1c lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu17ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_BFu1c");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "aUc_BFu17ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_BFu1c, aUc_BFu17ll_BFu1c)
//============================================================================



static void Test_aUc_BFu17ll_BFu1i()
{
  {
    init_simple_test("aUc_BFu17ll_BFu1i");
    static STRUCT_IF_C aUc_BFu17ll_BFu1i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu17ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_BFu1i");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "aUc_BFu17ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_BFu1i, aUc_BFu17ll_BFu1i)
//============================================================================



static void Test_aUc_BFu17ll_BFu1ll()
{
  {
    init_simple_test("aUc_BFu17ll_BFu1ll");
    static STRUCT_IF_C aUc_BFu17ll_BFu1ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu17ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_BFu1ll");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "aUc_BFu17ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_BFu1ll, aUc_BFu17ll_BFu1ll)
//============================================================================



static void Test_aUc_BFu17ll_BFu1s()
{
  {
    init_simple_test("aUc_BFu17ll_BFu1s");
    static STRUCT_IF_C aUc_BFu17ll_BFu1s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu17ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_BFu1s");
    set_bf_and_test(lv, v3, 3, 1, 1, 1, "aUc_BFu17ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_BFu1s, aUc_BFu17ll_BFu1s)
//============================================================================



static void Test_aUc_BFu17ll_BFu31i()
{
  {
    init_simple_test("aUc_BFu17ll_BFu31i");
    static STRUCT_IF_C aUc_BFu17ll_BFu31i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu17ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_BFu31i");
    set_bf_and_test(lv, v3, 3, 1, 31, 1, "aUc_BFu17ll_BFu31i");
    set_bf_and_test(lv, v3, 3, 1, 31, hide_ull(1LL<<30), "aUc_BFu17ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_BFu31i, aUc_BFu17ll_BFu31i)
//============================================================================



static void Test_aUc_BFu17ll_BFu31ll()
{
  {
    init_simple_test("aUc_BFu17ll_BFu31ll");
    static STRUCT_IF_C aUc_BFu17ll_BFu31ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu17ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_BFu31ll");
    set_bf_and_test(lv, v3, 3, 1, 31, 1, "aUc_BFu17ll_BFu31ll");
    set_bf_and_test(lv, v3, 3, 1, 31, hide_ull(1LL<<30), "aUc_BFu17ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_BFu31ll, aUc_BFu17ll_BFu31ll)
//============================================================================



static void Test_aUc_BFu17ll_BFu32i()
{
  {
    init_simple_test("aUc_BFu17ll_BFu32i");
    static STRUCT_IF_C aUc_BFu17ll_BFu32i lv;
    check2(sizeof(lv), 8, "sizeof(aUc_BFu17ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_BFu32i");
    set_bf_and_test(lv, v3, 3, 1, 32, 1, "aUc_BFu17ll_BFu32i");
    set_bf_and_test(lv, v3, 3, 1, 32, hide_ull(1LL<<31), "aUc_BFu17ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_BFu32i, aUc_BFu17ll_BFu32i)
//============================================================================



static void Test_aUc_BFu17ll_BFu32ll()
{
  {
    init_simple_test("aUc_BFu17ll_BFu32ll");
    static STRUCT_IF_C aUc_BFu17ll_BFu32ll lv;
    check2(sizeof(lv), 8, "sizeof(aUc_BFu17ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_BFu32ll");
    set_bf_and_test(lv, v3, 3, 1, 32, 1, "aUc_BFu17ll_BFu32ll");
    set_bf_and_test(lv, v3, 3, 1, 32, hide_ull(1LL<<31), "aUc_BFu17ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_BFu32ll, aUc_BFu17ll_BFu32ll)
//============================================================================



static void Test_aUc_BFu17ll_BFu33()
{
  {
    init_simple_test("aUc_BFu17ll_BFu33");
    static STRUCT_IF_C aUc_BFu17ll_BFu33 lv;
    check2(sizeof(lv), 8, "sizeof(aUc_BFu17ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_BFu33");
    set_bf_and_test(lv, v3, 3, 1, 33, 1, "aUc_BFu17ll_BFu33");
    set_bf_and_test(lv, v3, 3, 1, 33, hide_ull(1LL<<32), "aUc_BFu17ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_BFu33, aUc_BFu17ll_BFu33)
//============================================================================



static void Test_aUc_BFu17ll_BFu7c()
{
  {
    init_simple_test("aUc_BFu17ll_BFu7c");
    static STRUCT_IF_C aUc_BFu17ll_BFu7c lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu17ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_BFu7c");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "aUc_BFu17ll_BFu7c");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "aUc_BFu17ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_BFu7c, aUc_BFu17ll_BFu7c)
//============================================================================



static void Test_aUc_BFu17ll_BFu7i()
{
  {
    init_simple_test("aUc_BFu17ll_BFu7i");
    static STRUCT_IF_C aUc_BFu17ll_BFu7i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu17ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_BFu7i");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "aUc_BFu17ll_BFu7i");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "aUc_BFu17ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_BFu7i, aUc_BFu17ll_BFu7i)
//============================================================================



static void Test_aUc_BFu17ll_BFu7ll()
{
  {
    init_simple_test("aUc_BFu17ll_BFu7ll");
    static STRUCT_IF_C aUc_BFu17ll_BFu7ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu17ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_BFu7ll");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "aUc_BFu17ll_BFu7ll");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "aUc_BFu17ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_BFu7ll, aUc_BFu17ll_BFu7ll)
//============================================================================



static void Test_aUc_BFu17ll_BFu7s()
{
  {
    init_simple_test("aUc_BFu17ll_BFu7s");
    static STRUCT_IF_C aUc_BFu17ll_BFu7s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu17ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_BFu7s");
    set_bf_and_test(lv, v3, 3, 1, 7, 1, "aUc_BFu17ll_BFu7s");
    set_bf_and_test(lv, v3, 3, 1, 7, hide_ull(1LL<<6), "aUc_BFu17ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_BFu7s, aUc_BFu17ll_BFu7s)
//============================================================================



static void Test_aUc_BFu17ll_BFu8c()
{
  {
    init_simple_test("aUc_BFu17ll_BFu8c");
    static STRUCT_IF_C aUc_BFu17ll_BFu8c lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu17ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_BFu8c");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "aUc_BFu17ll_BFu8c");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "aUc_BFu17ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_BFu8c, aUc_BFu17ll_BFu8c)
//============================================================================



static void Test_aUc_BFu17ll_BFu8i()
{
  {
    init_simple_test("aUc_BFu17ll_BFu8i");
    static STRUCT_IF_C aUc_BFu17ll_BFu8i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu17ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_BFu8i");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "aUc_BFu17ll_BFu8i");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "aUc_BFu17ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_BFu8i, aUc_BFu17ll_BFu8i)
//============================================================================



static void Test_aUc_BFu17ll_BFu8ll()
{
  {
    init_simple_test("aUc_BFu17ll_BFu8ll");
    static STRUCT_IF_C aUc_BFu17ll_BFu8ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu17ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_BFu8ll");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "aUc_BFu17ll_BFu8ll");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "aUc_BFu17ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_BFu8ll, aUc_BFu17ll_BFu8ll)
//============================================================================



static void Test_aUc_BFu17ll_BFu8s()
{
  {
    init_simple_test("aUc_BFu17ll_BFu8s");
    static STRUCT_IF_C aUc_BFu17ll_BFu8s lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu17ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_BFu8s");
    set_bf_and_test(lv, v3, 3, 1, 8, 1, "aUc_BFu17ll_BFu8s");
    set_bf_and_test(lv, v3, 3, 1, 8, hide_ull(1LL<<7), "aUc_BFu17ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_BFu8s, aUc_BFu17ll_BFu8s)
//============================================================================



static void Test_aUc_BFu17ll_BFu9i()
{
  {
    init_simple_test("aUc_BFu17ll_BFu9i");
    static STRUCT_IF_C aUc_BFu17ll_BFu9i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu17ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_BFu9i");
    set_bf_and_test(lv, v3, 3, 1, 9, 1, "aUc_BFu17ll_BFu9i");
    set_bf_and_test(lv, v3, 3, 1, 9, hide_ull(1LL<<8), "aUc_BFu17ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_BFu9i, aUc_BFu17ll_BFu9i)
//============================================================================



static void Test_aUc_BFu17ll_BFu9ll()
{
  {
    init_simple_test("aUc_BFu17ll_BFu9ll");
    static STRUCT_IF_C aUc_BFu17ll_BFu9ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu17ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_BFu9ll");
    set_bf_and_test(lv, v3, 3, 1, 9, 1, "aUc_BFu17ll_BFu9ll");
    set_bf_and_test(lv, v3, 3, 1, 9, hide_ull(1LL<<8), "aUc_BFu17ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_BFu9ll, aUc_BFu17ll_BFu9ll)
//============================================================================



static void Test_aUc_BFu17ll_BFu9s()
{
  {
    init_simple_test("aUc_BFu17ll_BFu9s");
    static STRUCT_IF_C aUc_BFu17ll_BFu9s lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu17ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_BFu9s");
    set_bf_and_test(lv, v3, 3, 1, 9, 1, "aUc_BFu17ll_BFu9s");
    set_bf_and_test(lv, v3, 3, 1, 9, hide_ull(1LL<<8), "aUc_BFu17ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_BFu9s, aUc_BFu17ll_BFu9s)
//============================================================================



static void Test_aUc_BFu17ll_C()
{
  {
    init_simple_test("aUc_BFu17ll_C");
    static STRUCT_IF_C aUc_BFu17ll_C lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu17ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_C)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_C");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_C");
    check_field_offset(lv, v3, 4, "aUc_BFu17ll_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_C, aUc_BFu17ll_C)
//============================================================================



static void Test_aUc_BFu17ll_D()
{
  {
    init_simple_test("aUc_BFu17ll_D");
    static STRUCT_IF_C aUc_BFu17ll_D lv;
    check2(sizeof(lv), 12, "sizeof(aUc_BFu17ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_D)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_D");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_D");
    check_field_offset(lv, v3, 4, "aUc_BFu17ll_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_D, aUc_BFu17ll_D)
//============================================================================



static void Test_aUc_BFu17ll_F()
{
  {
    init_simple_test("aUc_BFu17ll_F");
    static STRUCT_IF_C aUc_BFu17ll_F lv;
    check2(sizeof(lv), 8, "sizeof(aUc_BFu17ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_F)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_F");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_F");
    check_field_offset(lv, v3, 4, "aUc_BFu17ll_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_F, aUc_BFu17ll_F)
//============================================================================



static void Test_aUc_BFu17ll_I()
{
  {
    init_simple_test("aUc_BFu17ll_I");
    static STRUCT_IF_C aUc_BFu17ll_I lv;
    check2(sizeof(lv), 8, "sizeof(aUc_BFu17ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_I)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_I");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_I");
    check_field_offset(lv, v3, 4, "aUc_BFu17ll_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_I, aUc_BFu17ll_I)
//============================================================================



static void Test_aUc_BFu17ll_Ip()
{
  {
    init_simple_test("aUc_BFu17ll_Ip");
    static STRUCT_IF_C aUc_BFu17ll_Ip lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aUc_BFu17ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_Ip)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_Ip");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_Ip");
    check_field_offset(lv, v3, 4, "aUc_BFu17ll_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_Ip, aUc_BFu17ll_Ip)
//============================================================================



static void Test_aUc_BFu17ll_L()
{
  {
    init_simple_test("aUc_BFu17ll_L");
    static STRUCT_IF_C aUc_BFu17ll_L lv;
    check2(sizeof(lv), 12, "sizeof(aUc_BFu17ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_L)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_L");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_L");
    check_field_offset(lv, v3, 4, "aUc_BFu17ll_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_L, aUc_BFu17ll_L)
//============================================================================



static void Test_aUc_BFu17ll_S()
{
  {
    init_simple_test("aUc_BFu17ll_S");
    static STRUCT_IF_C aUc_BFu17ll_S lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu17ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_S)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_S");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_S");
    check_field_offset(lv, v3, 4, "aUc_BFu17ll_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_S, aUc_BFu17ll_S)
//============================================================================



static void Test_aUc_BFu17ll_Uc()
{
  {
    init_simple_test("aUc_BFu17ll_Uc");
    static STRUCT_IF_C aUc_BFu17ll_Uc lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu17ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_Uc)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_Uc");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_Uc");
    check_field_offset(lv, v3, 4, "aUc_BFu17ll_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_Uc, aUc_BFu17ll_Uc)
//============================================================================



static void Test_aUc_BFu17ll_Ui()
{
  {
    init_simple_test("aUc_BFu17ll_Ui");
    static STRUCT_IF_C aUc_BFu17ll_Ui lv;
    check2(sizeof(lv), 8, "sizeof(aUc_BFu17ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_Ui)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_Ui");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_Ui");
    check_field_offset(lv, v3, 4, "aUc_BFu17ll_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_Ui, aUc_BFu17ll_Ui)
//============================================================================



static void Test_aUc_BFu17ll_Ul()
{
  {
    init_simple_test("aUc_BFu17ll_Ul");
    static STRUCT_IF_C aUc_BFu17ll_Ul lv;
    check2(sizeof(lv), 12, "sizeof(aUc_BFu17ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_Ul)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_Ul");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_Ul");
    check_field_offset(lv, v3, 4, "aUc_BFu17ll_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_Ul, aUc_BFu17ll_Ul)
//============================================================================



static void Test_aUc_BFu17ll_Us()
{
  {
    init_simple_test("aUc_BFu17ll_Us");
    static STRUCT_IF_C aUc_BFu17ll_Us lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu17ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_Us)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_Us");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_Us");
    check_field_offset(lv, v3, 4, "aUc_BFu17ll_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_Us, aUc_BFu17ll_Us)
//============================================================================



static void Test_aUc_BFu17ll_Vp()
{
  {
    init_simple_test("aUc_BFu17ll_Vp");
    static STRUCT_IF_C aUc_BFu17ll_Vp lv;
    check2(sizeof(lv), ABISELECT(12,8), "sizeof(aUc_BFu17ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu17ll_Vp)");
    check_field_offset(lv, v1, 0, "aUc_BFu17ll_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 17, 1, "aUc_BFu17ll_Vp");
    set_bf_and_test(lv, v2, 1, 0, 17, hide_ull(1LL<<16), "aUc_BFu17ll_Vp");
    check_field_offset(lv, v3, 4, "aUc_BFu17ll_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu17ll_Vp, aUc_BFu17ll_Vp)
//============================================================================



static void Test_aUc_BFu1c()
{
  {
    init_simple_test("aUc_BFu1c");
    static STRUCT_IF_C aUc_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c, aUc_BFu1c)
//============================================================================



static void Test_aUc_BFu1c_BFu15i()
{
  {
    init_simple_test("aUc_BFu1c_BFu15i");
    static STRUCT_IF_C aUc_BFu1c_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_BFu15i");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "aUc_BFu1c_BFu15i");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "aUc_BFu1c_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_BFu15i, aUc_BFu1c_BFu15i)
//============================================================================



static void Test_aUc_BFu1c_BFu15ll()
{
  {
    init_simple_test("aUc_BFu1c_BFu15ll");
    static STRUCT_IF_C aUc_BFu1c_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_BFu15ll");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "aUc_BFu1c_BFu15ll");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "aUc_BFu1c_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_BFu15ll, aUc_BFu1c_BFu15ll)
//============================================================================



static void Test_aUc_BFu1c_BFu15s()
{
  {
    init_simple_test("aUc_BFu1c_BFu15s");
    static STRUCT_IF_C aUc_BFu1c_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_BFu15s");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "aUc_BFu1c_BFu15s");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "aUc_BFu1c_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_BFu15s, aUc_BFu1c_BFu15s)
//============================================================================



static void Test_aUc_BFu1c_BFu16i()
{
  {
    init_simple_test("aUc_BFu1c_BFu16i");
    static STRUCT_IF_C aUc_BFu1c_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu1c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_BFu16i");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "aUc_BFu1c_BFu16i");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "aUc_BFu1c_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_BFu16i, aUc_BFu1c_BFu16i)
//============================================================================



static void Test_aUc_BFu1c_BFu16ll()
{
  {
    init_simple_test("aUc_BFu1c_BFu16ll");
    static STRUCT_IF_C aUc_BFu1c_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu1c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_BFu16ll");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "aUc_BFu1c_BFu16ll");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "aUc_BFu1c_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_BFu16ll, aUc_BFu1c_BFu16ll)
//============================================================================



static void Test_aUc_BFu1c_BFu16s()
{
  {
    init_simple_test("aUc_BFu1c_BFu16s");
    static STRUCT_IF_C aUc_BFu1c_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu1c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_BFu16s");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "aUc_BFu1c_BFu16s");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "aUc_BFu1c_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_BFu16s, aUc_BFu1c_BFu16s)
//============================================================================



static void Test_aUc_BFu1c_BFu17i()
{
  {
    init_simple_test("aUc_BFu1c_BFu17i");
    static STRUCT_IF_C aUc_BFu1c_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu1c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_BFu17i");
    set_bf_and_test(lv, v3, 1, 1, 17, 1, "aUc_BFu1c_BFu17i");
    set_bf_and_test(lv, v3, 1, 1, 17, hide_ull(1LL<<16), "aUc_BFu1c_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_BFu17i, aUc_BFu1c_BFu17i)
//============================================================================



static void Test_aUc_BFu1c_BFu17ll()
{
  {
    init_simple_test("aUc_BFu1c_BFu17ll");
    static STRUCT_IF_C aUc_BFu1c_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu1c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_BFu17ll");
    set_bf_and_test(lv, v3, 1, 1, 17, 1, "aUc_BFu1c_BFu17ll");
    set_bf_and_test(lv, v3, 1, 1, 17, hide_ull(1LL<<16), "aUc_BFu1c_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_BFu17ll, aUc_BFu1c_BFu17ll)
//============================================================================



static void Test_aUc_BFu1c_BFu1c()
{
  {
    init_simple_test("aUc_BFu1c_BFu1c");
    static STRUCT_IF_C aUc_BFu1c_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_BFu1c");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aUc_BFu1c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_BFu1c, aUc_BFu1c_BFu1c)
//============================================================================



static void Test_aUc_BFu1c_BFu1i()
{
  {
    init_simple_test("aUc_BFu1c_BFu1i");
    static STRUCT_IF_C aUc_BFu1c_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_BFu1i");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aUc_BFu1c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_BFu1i, aUc_BFu1c_BFu1i)
//============================================================================



static void Test_aUc_BFu1c_BFu1ll()
{
  {
    init_simple_test("aUc_BFu1c_BFu1ll");
    static STRUCT_IF_C aUc_BFu1c_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_BFu1ll");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aUc_BFu1c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_BFu1ll, aUc_BFu1c_BFu1ll)
//============================================================================



static void Test_aUc_BFu1c_BFu1s()
{
  {
    init_simple_test("aUc_BFu1c_BFu1s");
    static STRUCT_IF_C aUc_BFu1c_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_BFu1s");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aUc_BFu1c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_BFu1s, aUc_BFu1c_BFu1s)
//============================================================================



static void Test_aUc_BFu1c_BFu31i()
{
  {
    init_simple_test("aUc_BFu1c_BFu31i");
    static STRUCT_IF_C aUc_BFu1c_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu1c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_BFu31i");
    set_bf_and_test(lv, v3, 1, 1, 31, 1, "aUc_BFu1c_BFu31i");
    set_bf_and_test(lv, v3, 1, 1, 31, hide_ull(1LL<<30), "aUc_BFu1c_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_BFu31i, aUc_BFu1c_BFu31i)
//============================================================================



static void Test_aUc_BFu1c_BFu31ll()
{
  {
    init_simple_test("aUc_BFu1c_BFu31ll");
    static STRUCT_IF_C aUc_BFu1c_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu1c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_BFu31ll");
    set_bf_and_test(lv, v3, 1, 1, 31, 1, "aUc_BFu1c_BFu31ll");
    set_bf_and_test(lv, v3, 1, 1, 31, hide_ull(1LL<<30), "aUc_BFu1c_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_BFu31ll, aUc_BFu1c_BFu31ll)
//============================================================================



static void Test_aUc_BFu1c_BFu32i()
{
  {
    init_simple_test("aUc_BFu1c_BFu32i");
    static STRUCT_IF_C aUc_BFu1c_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu1c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_BFu32i");
    set_bf_and_test(lv, v3, 1, 1, 32, 1, "aUc_BFu1c_BFu32i");
    set_bf_and_test(lv, v3, 1, 1, 32, hide_ull(1LL<<31), "aUc_BFu1c_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_BFu32i, aUc_BFu1c_BFu32i)
//============================================================================



static void Test_aUc_BFu1c_BFu32ll()
{
  {
    init_simple_test("aUc_BFu1c_BFu32ll");
    static STRUCT_IF_C aUc_BFu1c_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu1c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_BFu32ll");
    set_bf_and_test(lv, v3, 1, 1, 32, 1, "aUc_BFu1c_BFu32ll");
    set_bf_and_test(lv, v3, 1, 1, 32, hide_ull(1LL<<31), "aUc_BFu1c_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_BFu32ll, aUc_BFu1c_BFu32ll)
//============================================================================



static void Test_aUc_BFu1c_BFu33()
{
  {
    init_simple_test("aUc_BFu1c_BFu33");
    static STRUCT_IF_C aUc_BFu1c_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu1c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_BFu33");
    set_bf_and_test(lv, v3, 1, 1, 33, 1, "aUc_BFu1c_BFu33");
    set_bf_and_test(lv, v3, 1, 1, 33, hide_ull(1LL<<32), "aUc_BFu1c_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_BFu33, aUc_BFu1c_BFu33)
//============================================================================



static void Test_aUc_BFu1c_BFu7c()
{
  {
    init_simple_test("aUc_BFu1c_BFu7c");
    static STRUCT_IF_C aUc_BFu1c_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_BFu7c");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aUc_BFu1c_BFu7c");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aUc_BFu1c_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_BFu7c, aUc_BFu1c_BFu7c)
//============================================================================



static void Test_aUc_BFu1c_BFu7i()
{
  {
    init_simple_test("aUc_BFu1c_BFu7i");
    static STRUCT_IF_C aUc_BFu1c_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_BFu7i");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aUc_BFu1c_BFu7i");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aUc_BFu1c_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_BFu7i, aUc_BFu1c_BFu7i)
//============================================================================



static void Test_aUc_BFu1c_BFu7ll()
{
  {
    init_simple_test("aUc_BFu1c_BFu7ll");
    static STRUCT_IF_C aUc_BFu1c_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_BFu7ll");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aUc_BFu1c_BFu7ll");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aUc_BFu1c_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_BFu7ll, aUc_BFu1c_BFu7ll)
//============================================================================



static void Test_aUc_BFu1c_BFu7s()
{
  {
    init_simple_test("aUc_BFu1c_BFu7s");
    static STRUCT_IF_C aUc_BFu1c_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_BFu7s");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aUc_BFu1c_BFu7s");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aUc_BFu1c_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_BFu7s, aUc_BFu1c_BFu7s)
//============================================================================



static void Test_aUc_BFu1c_BFu8c()
{
  {
    init_simple_test("aUc_BFu1c_BFu8c");
    static STRUCT_IF_C aUc_BFu1c_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_BFu8c");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aUc_BFu1c_BFu8c");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aUc_BFu1c_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_BFu8c, aUc_BFu1c_BFu8c)
//============================================================================



static void Test_aUc_BFu1c_BFu8i()
{
  {
    init_simple_test("aUc_BFu1c_BFu8i");
    static STRUCT_IF_C aUc_BFu1c_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_BFu8i");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aUc_BFu1c_BFu8i");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aUc_BFu1c_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_BFu8i, aUc_BFu1c_BFu8i)
//============================================================================



static void Test_aUc_BFu1c_BFu8ll()
{
  {
    init_simple_test("aUc_BFu1c_BFu8ll");
    static STRUCT_IF_C aUc_BFu1c_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_BFu8ll");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aUc_BFu1c_BFu8ll");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aUc_BFu1c_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_BFu8ll, aUc_BFu1c_BFu8ll)
//============================================================================



static void Test_aUc_BFu1c_BFu8s()
{
  {
    init_simple_test("aUc_BFu1c_BFu8s");
    static STRUCT_IF_C aUc_BFu1c_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_BFu8s");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aUc_BFu1c_BFu8s");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aUc_BFu1c_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_BFu8s, aUc_BFu1c_BFu8s)
//============================================================================



static void Test_aUc_BFu1c_BFu9i()
{
  {
    init_simple_test("aUc_BFu1c_BFu9i");
    static STRUCT_IF_C aUc_BFu1c_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_BFu9i");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "aUc_BFu1c_BFu9i");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "aUc_BFu1c_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_BFu9i, aUc_BFu1c_BFu9i)
//============================================================================



static void Test_aUc_BFu1c_BFu9ll()
{
  {
    init_simple_test("aUc_BFu1c_BFu9ll");
    static STRUCT_IF_C aUc_BFu1c_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_BFu9ll");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "aUc_BFu1c_BFu9ll");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "aUc_BFu1c_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_BFu9ll, aUc_BFu1c_BFu9ll)
//============================================================================



static void Test_aUc_BFu1c_BFu9s()
{
  {
    init_simple_test("aUc_BFu1c_BFu9s");
    static STRUCT_IF_C aUc_BFu1c_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_BFu9s");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "aUc_BFu1c_BFu9s");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "aUc_BFu1c_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_BFu9s, aUc_BFu1c_BFu9s)
//============================================================================



static void Test_aUc_BFu1c_C()
{
  {
    init_simple_test("aUc_BFu1c_C");
    static STRUCT_IF_C aUc_BFu1c_C lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1c_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_C)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_C");
    check_field_offset(lv, v3, 2, "aUc_BFu1c_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_C, aUc_BFu1c_C)
//============================================================================



static void Test_aUc_BFu1c_D()
{
  {
    init_simple_test("aUc_BFu1c_D");
    static STRUCT_IF_C aUc_BFu1c_D lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu1c_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_D)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_D");
    check_field_offset(lv, v3, 2, "aUc_BFu1c_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_D, aUc_BFu1c_D)
//============================================================================



static void Test_aUc_BFu1c_F()
{
  {
    init_simple_test("aUc_BFu1c_F");
    static STRUCT_IF_C aUc_BFu1c_F lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu1c_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_F)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_F");
    check_field_offset(lv, v3, 2, "aUc_BFu1c_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_F, aUc_BFu1c_F)
//============================================================================



static void Test_aUc_BFu1c_I()
{
  {
    init_simple_test("aUc_BFu1c_I");
    static STRUCT_IF_C aUc_BFu1c_I lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu1c_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_I)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_I");
    check_field_offset(lv, v3, 2, "aUc_BFu1c_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_I, aUc_BFu1c_I)
//============================================================================



static void Test_aUc_BFu1c_Ip()
{
  {
    init_simple_test("aUc_BFu1c_Ip");
    static STRUCT_IF_C aUc_BFu1c_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_BFu1c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_Ip)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_Ip");
    check_field_offset(lv, v3, 2, "aUc_BFu1c_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_Ip, aUc_BFu1c_Ip)
//============================================================================



static void Test_aUc_BFu1c_L()
{
  {
    init_simple_test("aUc_BFu1c_L");
    static STRUCT_IF_C aUc_BFu1c_L lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu1c_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_L)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_L");
    check_field_offset(lv, v3, 2, "aUc_BFu1c_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_L, aUc_BFu1c_L)
//============================================================================



static void Test_aUc_BFu1c_S()
{
  {
    init_simple_test("aUc_BFu1c_S");
    static STRUCT_IF_C aUc_BFu1c_S lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu1c_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_S)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_S");
    check_field_offset(lv, v3, 2, "aUc_BFu1c_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_S, aUc_BFu1c_S)
//============================================================================



static void Test_aUc_BFu1c_Uc()
{
  {
    init_simple_test("aUc_BFu1c_Uc");
    static STRUCT_IF_C aUc_BFu1c_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_Uc)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_Uc");
    check_field_offset(lv, v3, 2, "aUc_BFu1c_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_Uc, aUc_BFu1c_Uc)
//============================================================================



static void Test_aUc_BFu1c_Ui()
{
  {
    init_simple_test("aUc_BFu1c_Ui");
    static STRUCT_IF_C aUc_BFu1c_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu1c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_Ui)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_Ui");
    check_field_offset(lv, v3, 2, "aUc_BFu1c_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_Ui, aUc_BFu1c_Ui)
//============================================================================



static void Test_aUc_BFu1c_Ul()
{
  {
    init_simple_test("aUc_BFu1c_Ul");
    static STRUCT_IF_C aUc_BFu1c_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu1c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_Ul)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_Ul");
    check_field_offset(lv, v3, 2, "aUc_BFu1c_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_Ul, aUc_BFu1c_Ul)
//============================================================================



static void Test_aUc_BFu1c_Us()
{
  {
    init_simple_test("aUc_BFu1c_Us");
    static STRUCT_IF_C aUc_BFu1c_Us lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu1c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_Us)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_Us");
    check_field_offset(lv, v3, 2, "aUc_BFu1c_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_Us, aUc_BFu1c_Us)
//============================================================================



static void Test_aUc_BFu1c_Vp()
{
  {
    init_simple_test("aUc_BFu1c_Vp");
    static STRUCT_IF_C aUc_BFu1c_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_BFu1c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1c_Vp)");
    check_field_offset(lv, v1, 0, "aUc_BFu1c_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1c_Vp");
    check_field_offset(lv, v3, 2, "aUc_BFu1c_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1c_Vp, aUc_BFu1c_Vp)
//============================================================================



static void Test_aUc_BFu1i()
{
  {
    init_simple_test("aUc_BFu1i");
    static STRUCT_IF_C aUc_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i, aUc_BFu1i)
//============================================================================



static void Test_aUc_BFu1i_BFu15i()
{
  {
    init_simple_test("aUc_BFu1i_BFu15i");
    static STRUCT_IF_C aUc_BFu1i_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_BFu15i");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "aUc_BFu1i_BFu15i");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "aUc_BFu1i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_BFu15i, aUc_BFu1i_BFu15i)
//============================================================================



static void Test_aUc_BFu1i_BFu15ll()
{
  {
    init_simple_test("aUc_BFu1i_BFu15ll");
    static STRUCT_IF_C aUc_BFu1i_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_BFu15ll");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "aUc_BFu1i_BFu15ll");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "aUc_BFu1i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_BFu15ll, aUc_BFu1i_BFu15ll)
//============================================================================



static void Test_aUc_BFu1i_BFu15s()
{
  {
    init_simple_test("aUc_BFu1i_BFu15s");
    static STRUCT_IF_C aUc_BFu1i_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_BFu15s");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "aUc_BFu1i_BFu15s");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "aUc_BFu1i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_BFu15s, aUc_BFu1i_BFu15s)
//============================================================================



static void Test_aUc_BFu1i_BFu16i()
{
  {
    init_simple_test("aUc_BFu1i_BFu16i");
    static STRUCT_IF_C aUc_BFu1i_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu1i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_BFu16i");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "aUc_BFu1i_BFu16i");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "aUc_BFu1i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_BFu16i, aUc_BFu1i_BFu16i)
//============================================================================



static void Test_aUc_BFu1i_BFu16ll()
{
  {
    init_simple_test("aUc_BFu1i_BFu16ll");
    static STRUCT_IF_C aUc_BFu1i_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu1i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_BFu16ll");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "aUc_BFu1i_BFu16ll");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "aUc_BFu1i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_BFu16ll, aUc_BFu1i_BFu16ll)
//============================================================================



static void Test_aUc_BFu1i_BFu16s()
{
  {
    init_simple_test("aUc_BFu1i_BFu16s");
    static STRUCT_IF_C aUc_BFu1i_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu1i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_BFu16s");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "aUc_BFu1i_BFu16s");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "aUc_BFu1i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_BFu16s, aUc_BFu1i_BFu16s)
//============================================================================



static void Test_aUc_BFu1i_BFu17i()
{
  {
    init_simple_test("aUc_BFu1i_BFu17i");
    static STRUCT_IF_C aUc_BFu1i_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu1i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_BFu17i");
    set_bf_and_test(lv, v3, 1, 1, 17, 1, "aUc_BFu1i_BFu17i");
    set_bf_and_test(lv, v3, 1, 1, 17, hide_ull(1LL<<16), "aUc_BFu1i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_BFu17i, aUc_BFu1i_BFu17i)
//============================================================================



static void Test_aUc_BFu1i_BFu17ll()
{
  {
    init_simple_test("aUc_BFu1i_BFu17ll");
    static STRUCT_IF_C aUc_BFu1i_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu1i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_BFu17ll");
    set_bf_and_test(lv, v3, 1, 1, 17, 1, "aUc_BFu1i_BFu17ll");
    set_bf_and_test(lv, v3, 1, 1, 17, hide_ull(1LL<<16), "aUc_BFu1i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_BFu17ll, aUc_BFu1i_BFu17ll)
//============================================================================



static void Test_aUc_BFu1i_BFu1c()
{
  {
    init_simple_test("aUc_BFu1i_BFu1c");
    static STRUCT_IF_C aUc_BFu1i_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_BFu1c");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aUc_BFu1i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_BFu1c, aUc_BFu1i_BFu1c)
//============================================================================



static void Test_aUc_BFu1i_BFu1i()
{
  {
    init_simple_test("aUc_BFu1i_BFu1i");
    static STRUCT_IF_C aUc_BFu1i_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_BFu1i");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aUc_BFu1i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_BFu1i, aUc_BFu1i_BFu1i)
//============================================================================



static void Test_aUc_BFu1i_BFu1ll()
{
  {
    init_simple_test("aUc_BFu1i_BFu1ll");
    static STRUCT_IF_C aUc_BFu1i_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_BFu1ll");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aUc_BFu1i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_BFu1ll, aUc_BFu1i_BFu1ll)
//============================================================================



static void Test_aUc_BFu1i_BFu1s()
{
  {
    init_simple_test("aUc_BFu1i_BFu1s");
    static STRUCT_IF_C aUc_BFu1i_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_BFu1s");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aUc_BFu1i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_BFu1s, aUc_BFu1i_BFu1s)
//============================================================================



static void Test_aUc_BFu1i_BFu31i()
{
  {
    init_simple_test("aUc_BFu1i_BFu31i");
    static STRUCT_IF_C aUc_BFu1i_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu1i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_BFu31i");
    set_bf_and_test(lv, v3, 1, 1, 31, 1, "aUc_BFu1i_BFu31i");
    set_bf_and_test(lv, v3, 1, 1, 31, hide_ull(1LL<<30), "aUc_BFu1i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_BFu31i, aUc_BFu1i_BFu31i)
//============================================================================



static void Test_aUc_BFu1i_BFu31ll()
{
  {
    init_simple_test("aUc_BFu1i_BFu31ll");
    static STRUCT_IF_C aUc_BFu1i_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu1i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_BFu31ll");
    set_bf_and_test(lv, v3, 1, 1, 31, 1, "aUc_BFu1i_BFu31ll");
    set_bf_and_test(lv, v3, 1, 1, 31, hide_ull(1LL<<30), "aUc_BFu1i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_BFu31ll, aUc_BFu1i_BFu31ll)
//============================================================================



static void Test_aUc_BFu1i_BFu32i()
{
  {
    init_simple_test("aUc_BFu1i_BFu32i");
    static STRUCT_IF_C aUc_BFu1i_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu1i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_BFu32i");
    set_bf_and_test(lv, v3, 1, 1, 32, 1, "aUc_BFu1i_BFu32i");
    set_bf_and_test(lv, v3, 1, 1, 32, hide_ull(1LL<<31), "aUc_BFu1i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_BFu32i, aUc_BFu1i_BFu32i)
//============================================================================



static void Test_aUc_BFu1i_BFu32ll()
{
  {
    init_simple_test("aUc_BFu1i_BFu32ll");
    static STRUCT_IF_C aUc_BFu1i_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu1i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_BFu32ll");
    set_bf_and_test(lv, v3, 1, 1, 32, 1, "aUc_BFu1i_BFu32ll");
    set_bf_and_test(lv, v3, 1, 1, 32, hide_ull(1LL<<31), "aUc_BFu1i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_BFu32ll, aUc_BFu1i_BFu32ll)
//============================================================================



static void Test_aUc_BFu1i_BFu33()
{
  {
    init_simple_test("aUc_BFu1i_BFu33");
    static STRUCT_IF_C aUc_BFu1i_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu1i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_BFu33");
    set_bf_and_test(lv, v3, 1, 1, 33, 1, "aUc_BFu1i_BFu33");
    set_bf_and_test(lv, v3, 1, 1, 33, hide_ull(1LL<<32), "aUc_BFu1i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_BFu33, aUc_BFu1i_BFu33)
//============================================================================



static void Test_aUc_BFu1i_BFu7c()
{
  {
    init_simple_test("aUc_BFu1i_BFu7c");
    static STRUCT_IF_C aUc_BFu1i_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_BFu7c");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aUc_BFu1i_BFu7c");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aUc_BFu1i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_BFu7c, aUc_BFu1i_BFu7c)
//============================================================================



static void Test_aUc_BFu1i_BFu7i()
{
  {
    init_simple_test("aUc_BFu1i_BFu7i");
    static STRUCT_IF_C aUc_BFu1i_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_BFu7i");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aUc_BFu1i_BFu7i");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aUc_BFu1i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_BFu7i, aUc_BFu1i_BFu7i)
//============================================================================



static void Test_aUc_BFu1i_BFu7ll()
{
  {
    init_simple_test("aUc_BFu1i_BFu7ll");
    static STRUCT_IF_C aUc_BFu1i_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_BFu7ll");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aUc_BFu1i_BFu7ll");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aUc_BFu1i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_BFu7ll, aUc_BFu1i_BFu7ll)
//============================================================================



static void Test_aUc_BFu1i_BFu7s()
{
  {
    init_simple_test("aUc_BFu1i_BFu7s");
    static STRUCT_IF_C aUc_BFu1i_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_BFu7s");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aUc_BFu1i_BFu7s");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aUc_BFu1i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_BFu7s, aUc_BFu1i_BFu7s)
//============================================================================



static void Test_aUc_BFu1i_BFu8c()
{
  {
    init_simple_test("aUc_BFu1i_BFu8c");
    static STRUCT_IF_C aUc_BFu1i_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_BFu8c");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aUc_BFu1i_BFu8c");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aUc_BFu1i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_BFu8c, aUc_BFu1i_BFu8c)
//============================================================================



static void Test_aUc_BFu1i_BFu8i()
{
  {
    init_simple_test("aUc_BFu1i_BFu8i");
    static STRUCT_IF_C aUc_BFu1i_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_BFu8i");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aUc_BFu1i_BFu8i");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aUc_BFu1i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_BFu8i, aUc_BFu1i_BFu8i)
//============================================================================



static void Test_aUc_BFu1i_BFu8ll()
{
  {
    init_simple_test("aUc_BFu1i_BFu8ll");
    static STRUCT_IF_C aUc_BFu1i_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_BFu8ll");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aUc_BFu1i_BFu8ll");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aUc_BFu1i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_BFu8ll, aUc_BFu1i_BFu8ll)
//============================================================================



static void Test_aUc_BFu1i_BFu8s()
{
  {
    init_simple_test("aUc_BFu1i_BFu8s");
    static STRUCT_IF_C aUc_BFu1i_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_BFu8s");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aUc_BFu1i_BFu8s");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aUc_BFu1i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_BFu8s, aUc_BFu1i_BFu8s)
//============================================================================



static void Test_aUc_BFu1i_BFu9i()
{
  {
    init_simple_test("aUc_BFu1i_BFu9i");
    static STRUCT_IF_C aUc_BFu1i_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_BFu9i");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "aUc_BFu1i_BFu9i");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "aUc_BFu1i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_BFu9i, aUc_BFu1i_BFu9i)
//============================================================================



static void Test_aUc_BFu1i_BFu9ll()
{
  {
    init_simple_test("aUc_BFu1i_BFu9ll");
    static STRUCT_IF_C aUc_BFu1i_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_BFu9ll");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "aUc_BFu1i_BFu9ll");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "aUc_BFu1i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_BFu9ll, aUc_BFu1i_BFu9ll)
//============================================================================



static void Test_aUc_BFu1i_BFu9s()
{
  {
    init_simple_test("aUc_BFu1i_BFu9s");
    static STRUCT_IF_C aUc_BFu1i_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_BFu9s");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "aUc_BFu1i_BFu9s");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "aUc_BFu1i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_BFu9s, aUc_BFu1i_BFu9s)
//============================================================================



static void Test_aUc_BFu1i_C()
{
  {
    init_simple_test("aUc_BFu1i_C");
    static STRUCT_IF_C aUc_BFu1i_C lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_C)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_C");
    check_field_offset(lv, v3, 2, "aUc_BFu1i_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_C, aUc_BFu1i_C)
//============================================================================



static void Test_aUc_BFu1i_D()
{
  {
    init_simple_test("aUc_BFu1i_D");
    static STRUCT_IF_C aUc_BFu1i_D lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu1i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_D)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_D");
    check_field_offset(lv, v3, 2, "aUc_BFu1i_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_D, aUc_BFu1i_D)
//============================================================================



static void Test_aUc_BFu1i_F()
{
  {
    init_simple_test("aUc_BFu1i_F");
    static STRUCT_IF_C aUc_BFu1i_F lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu1i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_F)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_F");
    check_field_offset(lv, v3, 2, "aUc_BFu1i_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_F, aUc_BFu1i_F)
//============================================================================



static void Test_aUc_BFu1i_I()
{
  {
    init_simple_test("aUc_BFu1i_I");
    static STRUCT_IF_C aUc_BFu1i_I lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu1i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_I)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_I");
    check_field_offset(lv, v3, 2, "aUc_BFu1i_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_I, aUc_BFu1i_I)
//============================================================================



static void Test_aUc_BFu1i_Ip()
{
  {
    init_simple_test("aUc_BFu1i_Ip");
    static STRUCT_IF_C aUc_BFu1i_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_BFu1i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_Ip)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_Ip");
    check_field_offset(lv, v3, 2, "aUc_BFu1i_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_Ip, aUc_BFu1i_Ip)
//============================================================================



static void Test_aUc_BFu1i_L()
{
  {
    init_simple_test("aUc_BFu1i_L");
    static STRUCT_IF_C aUc_BFu1i_L lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu1i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_L)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_L");
    check_field_offset(lv, v3, 2, "aUc_BFu1i_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_L, aUc_BFu1i_L)
//============================================================================



static void Test_aUc_BFu1i_S()
{
  {
    init_simple_test("aUc_BFu1i_S");
    static STRUCT_IF_C aUc_BFu1i_S lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu1i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_S)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_S");
    check_field_offset(lv, v3, 2, "aUc_BFu1i_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_S, aUc_BFu1i_S)
//============================================================================



static void Test_aUc_BFu1i_Uc()
{
  {
    init_simple_test("aUc_BFu1i_Uc");
    static STRUCT_IF_C aUc_BFu1i_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_Uc)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_Uc");
    check_field_offset(lv, v3, 2, "aUc_BFu1i_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_Uc, aUc_BFu1i_Uc)
//============================================================================



static void Test_aUc_BFu1i_Ui()
{
  {
    init_simple_test("aUc_BFu1i_Ui");
    static STRUCT_IF_C aUc_BFu1i_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu1i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_Ui)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_Ui");
    check_field_offset(lv, v3, 2, "aUc_BFu1i_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_Ui, aUc_BFu1i_Ui)
//============================================================================



static void Test_aUc_BFu1i_Ul()
{
  {
    init_simple_test("aUc_BFu1i_Ul");
    static STRUCT_IF_C aUc_BFu1i_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu1i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_Ul)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_Ul");
    check_field_offset(lv, v3, 2, "aUc_BFu1i_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_Ul, aUc_BFu1i_Ul)
//============================================================================



static void Test_aUc_BFu1i_Us()
{
  {
    init_simple_test("aUc_BFu1i_Us");
    static STRUCT_IF_C aUc_BFu1i_Us lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu1i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_Us)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_Us");
    check_field_offset(lv, v3, 2, "aUc_BFu1i_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_Us, aUc_BFu1i_Us)
//============================================================================



static void Test_aUc_BFu1i_Vp()
{
  {
    init_simple_test("aUc_BFu1i_Vp");
    static STRUCT_IF_C aUc_BFu1i_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_BFu1i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1i_Vp)");
    check_field_offset(lv, v1, 0, "aUc_BFu1i_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1i_Vp");
    check_field_offset(lv, v3, 2, "aUc_BFu1i_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1i_Vp, aUc_BFu1i_Vp)
//============================================================================



static void Test_aUc_BFu1ll()
{
  {
    init_simple_test("aUc_BFu1ll");
    static STRUCT_IF_C aUc_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll, aUc_BFu1ll)
//============================================================================



static void Test_aUc_BFu1ll_BFu15i()
{
  {
    init_simple_test("aUc_BFu1ll_BFu15i");
    static STRUCT_IF_C aUc_BFu1ll_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_BFu15i");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "aUc_BFu1ll_BFu15i");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "aUc_BFu1ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_BFu15i, aUc_BFu1ll_BFu15i)
//============================================================================



static void Test_aUc_BFu1ll_BFu15ll()
{
  {
    init_simple_test("aUc_BFu1ll_BFu15ll");
    static STRUCT_IF_C aUc_BFu1ll_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_BFu15ll");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "aUc_BFu1ll_BFu15ll");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "aUc_BFu1ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_BFu15ll, aUc_BFu1ll_BFu15ll)
//============================================================================



static void Test_aUc_BFu1ll_BFu15s()
{
  {
    init_simple_test("aUc_BFu1ll_BFu15s");
    static STRUCT_IF_C aUc_BFu1ll_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_BFu15s");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "aUc_BFu1ll_BFu15s");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "aUc_BFu1ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_BFu15s, aUc_BFu1ll_BFu15s)
//============================================================================



static void Test_aUc_BFu1ll_BFu16i()
{
  {
    init_simple_test("aUc_BFu1ll_BFu16i");
    static STRUCT_IF_C aUc_BFu1ll_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu1ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_BFu16i");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "aUc_BFu1ll_BFu16i");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "aUc_BFu1ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_BFu16i, aUc_BFu1ll_BFu16i)
//============================================================================



static void Test_aUc_BFu1ll_BFu16ll()
{
  {
    init_simple_test("aUc_BFu1ll_BFu16ll");
    static STRUCT_IF_C aUc_BFu1ll_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu1ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_BFu16ll");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "aUc_BFu1ll_BFu16ll");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "aUc_BFu1ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_BFu16ll, aUc_BFu1ll_BFu16ll)
//============================================================================



static void Test_aUc_BFu1ll_BFu16s()
{
  {
    init_simple_test("aUc_BFu1ll_BFu16s");
    static STRUCT_IF_C aUc_BFu1ll_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu1ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_BFu16s");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "aUc_BFu1ll_BFu16s");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "aUc_BFu1ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_BFu16s, aUc_BFu1ll_BFu16s)
//============================================================================



static void Test_aUc_BFu1ll_BFu17i()
{
  {
    init_simple_test("aUc_BFu1ll_BFu17i");
    static STRUCT_IF_C aUc_BFu1ll_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu1ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_BFu17i");
    set_bf_and_test(lv, v3, 1, 1, 17, 1, "aUc_BFu1ll_BFu17i");
    set_bf_and_test(lv, v3, 1, 1, 17, hide_ull(1LL<<16), "aUc_BFu1ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_BFu17i, aUc_BFu1ll_BFu17i)
//============================================================================



static void Test_aUc_BFu1ll_BFu17ll()
{
  {
    init_simple_test("aUc_BFu1ll_BFu17ll");
    static STRUCT_IF_C aUc_BFu1ll_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu1ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_BFu17ll");
    set_bf_and_test(lv, v3, 1, 1, 17, 1, "aUc_BFu1ll_BFu17ll");
    set_bf_and_test(lv, v3, 1, 1, 17, hide_ull(1LL<<16), "aUc_BFu1ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_BFu17ll, aUc_BFu1ll_BFu17ll)
//============================================================================



static void Test_aUc_BFu1ll_BFu1c()
{
  {
    init_simple_test("aUc_BFu1ll_BFu1c");
    static STRUCT_IF_C aUc_BFu1ll_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_BFu1c");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aUc_BFu1ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_BFu1c, aUc_BFu1ll_BFu1c)
//============================================================================



static void Test_aUc_BFu1ll_BFu1i()
{
  {
    init_simple_test("aUc_BFu1ll_BFu1i");
    static STRUCT_IF_C aUc_BFu1ll_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_BFu1i");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aUc_BFu1ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_BFu1i, aUc_BFu1ll_BFu1i)
//============================================================================



static void Test_aUc_BFu1ll_BFu1ll()
{
  {
    init_simple_test("aUc_BFu1ll_BFu1ll");
    static STRUCT_IF_C aUc_BFu1ll_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_BFu1ll");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aUc_BFu1ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_BFu1ll, aUc_BFu1ll_BFu1ll)
//============================================================================



static void Test_aUc_BFu1ll_BFu1s()
{
  {
    init_simple_test("aUc_BFu1ll_BFu1s");
    static STRUCT_IF_C aUc_BFu1ll_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_BFu1s");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aUc_BFu1ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_BFu1s, aUc_BFu1ll_BFu1s)
//============================================================================



static void Test_aUc_BFu1ll_BFu31i()
{
  {
    init_simple_test("aUc_BFu1ll_BFu31i");
    static STRUCT_IF_C aUc_BFu1ll_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu1ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_BFu31i");
    set_bf_and_test(lv, v3, 1, 1, 31, 1, "aUc_BFu1ll_BFu31i");
    set_bf_and_test(lv, v3, 1, 1, 31, hide_ull(1LL<<30), "aUc_BFu1ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_BFu31i, aUc_BFu1ll_BFu31i)
//============================================================================



static void Test_aUc_BFu1ll_BFu31ll()
{
  {
    init_simple_test("aUc_BFu1ll_BFu31ll");
    static STRUCT_IF_C aUc_BFu1ll_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu1ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_BFu31ll");
    set_bf_and_test(lv, v3, 1, 1, 31, 1, "aUc_BFu1ll_BFu31ll");
    set_bf_and_test(lv, v3, 1, 1, 31, hide_ull(1LL<<30), "aUc_BFu1ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_BFu31ll, aUc_BFu1ll_BFu31ll)
//============================================================================



static void Test_aUc_BFu1ll_BFu32i()
{
  {
    init_simple_test("aUc_BFu1ll_BFu32i");
    static STRUCT_IF_C aUc_BFu1ll_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu1ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_BFu32i");
    set_bf_and_test(lv, v3, 1, 1, 32, 1, "aUc_BFu1ll_BFu32i");
    set_bf_and_test(lv, v3, 1, 1, 32, hide_ull(1LL<<31), "aUc_BFu1ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_BFu32i, aUc_BFu1ll_BFu32i)
//============================================================================



static void Test_aUc_BFu1ll_BFu32ll()
{
  {
    init_simple_test("aUc_BFu1ll_BFu32ll");
    static STRUCT_IF_C aUc_BFu1ll_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu1ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_BFu32ll");
    set_bf_and_test(lv, v3, 1, 1, 32, 1, "aUc_BFu1ll_BFu32ll");
    set_bf_and_test(lv, v3, 1, 1, 32, hide_ull(1LL<<31), "aUc_BFu1ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_BFu32ll, aUc_BFu1ll_BFu32ll)
//============================================================================



static void Test_aUc_BFu1ll_BFu33()
{
  {
    init_simple_test("aUc_BFu1ll_BFu33");
    static STRUCT_IF_C aUc_BFu1ll_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu1ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_BFu33");
    set_bf_and_test(lv, v3, 1, 1, 33, 1, "aUc_BFu1ll_BFu33");
    set_bf_and_test(lv, v3, 1, 1, 33, hide_ull(1LL<<32), "aUc_BFu1ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_BFu33, aUc_BFu1ll_BFu33)
//============================================================================



static void Test_aUc_BFu1ll_BFu7c()
{
  {
    init_simple_test("aUc_BFu1ll_BFu7c");
    static STRUCT_IF_C aUc_BFu1ll_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_BFu7c");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aUc_BFu1ll_BFu7c");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aUc_BFu1ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_BFu7c, aUc_BFu1ll_BFu7c)
//============================================================================



static void Test_aUc_BFu1ll_BFu7i()
{
  {
    init_simple_test("aUc_BFu1ll_BFu7i");
    static STRUCT_IF_C aUc_BFu1ll_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_BFu7i");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aUc_BFu1ll_BFu7i");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aUc_BFu1ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_BFu7i, aUc_BFu1ll_BFu7i)
//============================================================================



static void Test_aUc_BFu1ll_BFu7ll()
{
  {
    init_simple_test("aUc_BFu1ll_BFu7ll");
    static STRUCT_IF_C aUc_BFu1ll_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_BFu7ll");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aUc_BFu1ll_BFu7ll");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aUc_BFu1ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_BFu7ll, aUc_BFu1ll_BFu7ll)
//============================================================================



static void Test_aUc_BFu1ll_BFu7s()
{
  {
    init_simple_test("aUc_BFu1ll_BFu7s");
    static STRUCT_IF_C aUc_BFu1ll_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_BFu7s");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aUc_BFu1ll_BFu7s");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aUc_BFu1ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_BFu7s, aUc_BFu1ll_BFu7s)
//============================================================================



static void Test_aUc_BFu1ll_BFu8c()
{
  {
    init_simple_test("aUc_BFu1ll_BFu8c");
    static STRUCT_IF_C aUc_BFu1ll_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_BFu8c");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aUc_BFu1ll_BFu8c");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aUc_BFu1ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_BFu8c, aUc_BFu1ll_BFu8c)
//============================================================================



static void Test_aUc_BFu1ll_BFu8i()
{
  {
    init_simple_test("aUc_BFu1ll_BFu8i");
    static STRUCT_IF_C aUc_BFu1ll_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_BFu8i");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aUc_BFu1ll_BFu8i");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aUc_BFu1ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_BFu8i, aUc_BFu1ll_BFu8i)
//============================================================================



static void Test_aUc_BFu1ll_BFu8ll()
{
  {
    init_simple_test("aUc_BFu1ll_BFu8ll");
    static STRUCT_IF_C aUc_BFu1ll_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_BFu8ll");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aUc_BFu1ll_BFu8ll");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aUc_BFu1ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_BFu8ll, aUc_BFu1ll_BFu8ll)
//============================================================================



static void Test_aUc_BFu1ll_BFu8s()
{
  {
    init_simple_test("aUc_BFu1ll_BFu8s");
    static STRUCT_IF_C aUc_BFu1ll_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_BFu8s");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aUc_BFu1ll_BFu8s");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aUc_BFu1ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_BFu8s, aUc_BFu1ll_BFu8s)
//============================================================================



static void Test_aUc_BFu1ll_BFu9i()
{
  {
    init_simple_test("aUc_BFu1ll_BFu9i");
    static STRUCT_IF_C aUc_BFu1ll_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_BFu9i");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "aUc_BFu1ll_BFu9i");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "aUc_BFu1ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_BFu9i, aUc_BFu1ll_BFu9i)
//============================================================================



static void Test_aUc_BFu1ll_BFu9ll()
{
  {
    init_simple_test("aUc_BFu1ll_BFu9ll");
    static STRUCT_IF_C aUc_BFu1ll_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_BFu9ll");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "aUc_BFu1ll_BFu9ll");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "aUc_BFu1ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_BFu9ll, aUc_BFu1ll_BFu9ll)
//============================================================================



static void Test_aUc_BFu1ll_BFu9s()
{
  {
    init_simple_test("aUc_BFu1ll_BFu9s");
    static STRUCT_IF_C aUc_BFu1ll_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_BFu9s");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "aUc_BFu1ll_BFu9s");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "aUc_BFu1ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_BFu9s, aUc_BFu1ll_BFu9s)
//============================================================================



static void Test_aUc_BFu1ll_C()
{
  {
    init_simple_test("aUc_BFu1ll_C");
    static STRUCT_IF_C aUc_BFu1ll_C lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_C)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_C");
    check_field_offset(lv, v3, 2, "aUc_BFu1ll_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_C, aUc_BFu1ll_C)
//============================================================================



static void Test_aUc_BFu1ll_D()
{
  {
    init_simple_test("aUc_BFu1ll_D");
    static STRUCT_IF_C aUc_BFu1ll_D lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu1ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_D)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_D");
    check_field_offset(lv, v3, 2, "aUc_BFu1ll_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_D, aUc_BFu1ll_D)
//============================================================================



static void Test_aUc_BFu1ll_F()
{
  {
    init_simple_test("aUc_BFu1ll_F");
    static STRUCT_IF_C aUc_BFu1ll_F lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu1ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_F)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_F");
    check_field_offset(lv, v3, 2, "aUc_BFu1ll_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_F, aUc_BFu1ll_F)
//============================================================================



static void Test_aUc_BFu1ll_I()
{
  {
    init_simple_test("aUc_BFu1ll_I");
    static STRUCT_IF_C aUc_BFu1ll_I lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu1ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_I)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_I");
    check_field_offset(lv, v3, 2, "aUc_BFu1ll_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_I, aUc_BFu1ll_I)
//============================================================================



static void Test_aUc_BFu1ll_Ip()
{
  {
    init_simple_test("aUc_BFu1ll_Ip");
    static STRUCT_IF_C aUc_BFu1ll_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_BFu1ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_Ip)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_Ip");
    check_field_offset(lv, v3, 2, "aUc_BFu1ll_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_Ip, aUc_BFu1ll_Ip)
//============================================================================



static void Test_aUc_BFu1ll_L()
{
  {
    init_simple_test("aUc_BFu1ll_L");
    static STRUCT_IF_C aUc_BFu1ll_L lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu1ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_L)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_L");
    check_field_offset(lv, v3, 2, "aUc_BFu1ll_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_L, aUc_BFu1ll_L)
//============================================================================



static void Test_aUc_BFu1ll_S()
{
  {
    init_simple_test("aUc_BFu1ll_S");
    static STRUCT_IF_C aUc_BFu1ll_S lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu1ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_S)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_S");
    check_field_offset(lv, v3, 2, "aUc_BFu1ll_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_S, aUc_BFu1ll_S)
//============================================================================



static void Test_aUc_BFu1ll_Uc()
{
  {
    init_simple_test("aUc_BFu1ll_Uc");
    static STRUCT_IF_C aUc_BFu1ll_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_Uc)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_Uc");
    check_field_offset(lv, v3, 2, "aUc_BFu1ll_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_Uc, aUc_BFu1ll_Uc)
//============================================================================



static void Test_aUc_BFu1ll_Ui()
{
  {
    init_simple_test("aUc_BFu1ll_Ui");
    static STRUCT_IF_C aUc_BFu1ll_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu1ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_Ui)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_Ui");
    check_field_offset(lv, v3, 2, "aUc_BFu1ll_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_Ui, aUc_BFu1ll_Ui)
//============================================================================



static void Test_aUc_BFu1ll_Ul()
{
  {
    init_simple_test("aUc_BFu1ll_Ul");
    static STRUCT_IF_C aUc_BFu1ll_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu1ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_Ul)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_Ul");
    check_field_offset(lv, v3, 2, "aUc_BFu1ll_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_Ul, aUc_BFu1ll_Ul)
//============================================================================



static void Test_aUc_BFu1ll_Us()
{
  {
    init_simple_test("aUc_BFu1ll_Us");
    static STRUCT_IF_C aUc_BFu1ll_Us lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu1ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_Us)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_Us");
    check_field_offset(lv, v3, 2, "aUc_BFu1ll_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_Us, aUc_BFu1ll_Us)
//============================================================================



static void Test_aUc_BFu1ll_Vp()
{
  {
    init_simple_test("aUc_BFu1ll_Vp");
    static STRUCT_IF_C aUc_BFu1ll_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_BFu1ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1ll_Vp)");
    check_field_offset(lv, v1, 0, "aUc_BFu1ll_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1ll_Vp");
    check_field_offset(lv, v3, 2, "aUc_BFu1ll_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1ll_Vp, aUc_BFu1ll_Vp)
//============================================================================



static void Test_aUc_BFu1s()
{
  {
    init_simple_test("aUc_BFu1s");
    static STRUCT_IF_C aUc_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s, aUc_BFu1s)
//============================================================================



static void Test_aUc_BFu1s_BFu15i()
{
  {
    init_simple_test("aUc_BFu1s_BFu15i");
    static STRUCT_IF_C aUc_BFu1s_BFu15i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_BFu15i");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "aUc_BFu1s_BFu15i");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "aUc_BFu1s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_BFu15i, aUc_BFu1s_BFu15i)
//============================================================================



static void Test_aUc_BFu1s_BFu15ll()
{
  {
    init_simple_test("aUc_BFu1s_BFu15ll");
    static STRUCT_IF_C aUc_BFu1s_BFu15ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_BFu15ll");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "aUc_BFu1s_BFu15ll");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "aUc_BFu1s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_BFu15ll, aUc_BFu1s_BFu15ll)
//============================================================================



static void Test_aUc_BFu1s_BFu15s()
{
  {
    init_simple_test("aUc_BFu1s_BFu15s");
    static STRUCT_IF_C aUc_BFu1s_BFu15s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_BFu15s");
    set_bf_and_test(lv, v3, 1, 1, 15, 1, "aUc_BFu1s_BFu15s");
    set_bf_and_test(lv, v3, 1, 1, 15, hide_ull(1LL<<14), "aUc_BFu1s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_BFu15s, aUc_BFu1s_BFu15s)
//============================================================================



static void Test_aUc_BFu1s_BFu16i()
{
  {
    init_simple_test("aUc_BFu1s_BFu16i");
    static STRUCT_IF_C aUc_BFu1s_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu1s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_BFu16i");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "aUc_BFu1s_BFu16i");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "aUc_BFu1s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_BFu16i, aUc_BFu1s_BFu16i)
//============================================================================



static void Test_aUc_BFu1s_BFu16ll()
{
  {
    init_simple_test("aUc_BFu1s_BFu16ll");
    static STRUCT_IF_C aUc_BFu1s_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu1s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_BFu16ll");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "aUc_BFu1s_BFu16ll");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "aUc_BFu1s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_BFu16ll, aUc_BFu1s_BFu16ll)
//============================================================================



static void Test_aUc_BFu1s_BFu16s()
{
  {
    init_simple_test("aUc_BFu1s_BFu16s");
    static STRUCT_IF_C aUc_BFu1s_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu1s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_BFu16s");
    set_bf_and_test(lv, v3, 1, 1, 16, 1, "aUc_BFu1s_BFu16s");
    set_bf_and_test(lv, v3, 1, 1, 16, hide_ull(1LL<<15), "aUc_BFu1s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_BFu16s, aUc_BFu1s_BFu16s)
//============================================================================



static void Test_aUc_BFu1s_BFu17i()
{
  {
    init_simple_test("aUc_BFu1s_BFu17i");
    static STRUCT_IF_C aUc_BFu1s_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu1s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_BFu17i");
    set_bf_and_test(lv, v3, 1, 1, 17, 1, "aUc_BFu1s_BFu17i");
    set_bf_and_test(lv, v3, 1, 1, 17, hide_ull(1LL<<16), "aUc_BFu1s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_BFu17i, aUc_BFu1s_BFu17i)
//============================================================================



static void Test_aUc_BFu1s_BFu17ll()
{
  {
    init_simple_test("aUc_BFu1s_BFu17ll");
    static STRUCT_IF_C aUc_BFu1s_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu1s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_BFu17ll");
    set_bf_and_test(lv, v3, 1, 1, 17, 1, "aUc_BFu1s_BFu17ll");
    set_bf_and_test(lv, v3, 1, 1, 17, hide_ull(1LL<<16), "aUc_BFu1s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_BFu17ll, aUc_BFu1s_BFu17ll)
//============================================================================



static void Test_aUc_BFu1s_BFu1c()
{
  {
    init_simple_test("aUc_BFu1s_BFu1c");
    static STRUCT_IF_C aUc_BFu1s_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_BFu1c");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aUc_BFu1s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_BFu1c, aUc_BFu1s_BFu1c)
//============================================================================



static void Test_aUc_BFu1s_BFu1i()
{
  {
    init_simple_test("aUc_BFu1s_BFu1i");
    static STRUCT_IF_C aUc_BFu1s_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_BFu1i");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aUc_BFu1s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_BFu1i, aUc_BFu1s_BFu1i)
//============================================================================



static void Test_aUc_BFu1s_BFu1ll()
{
  {
    init_simple_test("aUc_BFu1s_BFu1ll");
    static STRUCT_IF_C aUc_BFu1s_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_BFu1ll");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aUc_BFu1s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_BFu1ll, aUc_BFu1s_BFu1ll)
//============================================================================



static void Test_aUc_BFu1s_BFu1s()
{
  {
    init_simple_test("aUc_BFu1s_BFu1s");
    static STRUCT_IF_C aUc_BFu1s_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_BFu1s");
    set_bf_and_test(lv, v3, 1, 1, 1, 1, "aUc_BFu1s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_BFu1s, aUc_BFu1s_BFu1s)
//============================================================================



static void Test_aUc_BFu1s_BFu31i()
{
  {
    init_simple_test("aUc_BFu1s_BFu31i");
    static STRUCT_IF_C aUc_BFu1s_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu1s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_BFu31i");
    set_bf_and_test(lv, v3, 1, 1, 31, 1, "aUc_BFu1s_BFu31i");
    set_bf_and_test(lv, v3, 1, 1, 31, hide_ull(1LL<<30), "aUc_BFu1s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_BFu31i, aUc_BFu1s_BFu31i)
//============================================================================



static void Test_aUc_BFu1s_BFu31ll()
{
  {
    init_simple_test("aUc_BFu1s_BFu31ll");
    static STRUCT_IF_C aUc_BFu1s_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu1s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_BFu31ll");
    set_bf_and_test(lv, v3, 1, 1, 31, 1, "aUc_BFu1s_BFu31ll");
    set_bf_and_test(lv, v3, 1, 1, 31, hide_ull(1LL<<30), "aUc_BFu1s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_BFu31ll, aUc_BFu1s_BFu31ll)
//============================================================================



static void Test_aUc_BFu1s_BFu32i()
{
  {
    init_simple_test("aUc_BFu1s_BFu32i");
    static STRUCT_IF_C aUc_BFu1s_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu1s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_BFu32i");
    set_bf_and_test(lv, v3, 1, 1, 32, 1, "aUc_BFu1s_BFu32i");
    set_bf_and_test(lv, v3, 1, 1, 32, hide_ull(1LL<<31), "aUc_BFu1s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_BFu32i, aUc_BFu1s_BFu32i)
//============================================================================



static void Test_aUc_BFu1s_BFu32ll()
{
  {
    init_simple_test("aUc_BFu1s_BFu32ll");
    static STRUCT_IF_C aUc_BFu1s_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu1s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_BFu32ll");
    set_bf_and_test(lv, v3, 1, 1, 32, 1, "aUc_BFu1s_BFu32ll");
    set_bf_and_test(lv, v3, 1, 1, 32, hide_ull(1LL<<31), "aUc_BFu1s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_BFu32ll, aUc_BFu1s_BFu32ll)
//============================================================================



static void Test_aUc_BFu1s_BFu33()
{
  {
    init_simple_test("aUc_BFu1s_BFu33");
    static STRUCT_IF_C aUc_BFu1s_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu1s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_BFu33");
    set_bf_and_test(lv, v3, 1, 1, 33, 1, "aUc_BFu1s_BFu33");
    set_bf_and_test(lv, v3, 1, 1, 33, hide_ull(1LL<<32), "aUc_BFu1s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_BFu33, aUc_BFu1s_BFu33)
//============================================================================



static void Test_aUc_BFu1s_BFu7c()
{
  {
    init_simple_test("aUc_BFu1s_BFu7c");
    static STRUCT_IF_C aUc_BFu1s_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_BFu7c");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aUc_BFu1s_BFu7c");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aUc_BFu1s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_BFu7c, aUc_BFu1s_BFu7c)
//============================================================================



static void Test_aUc_BFu1s_BFu7i()
{
  {
    init_simple_test("aUc_BFu1s_BFu7i");
    static STRUCT_IF_C aUc_BFu1s_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_BFu7i");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aUc_BFu1s_BFu7i");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aUc_BFu1s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_BFu7i, aUc_BFu1s_BFu7i)
//============================================================================



static void Test_aUc_BFu1s_BFu7ll()
{
  {
    init_simple_test("aUc_BFu1s_BFu7ll");
    static STRUCT_IF_C aUc_BFu1s_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_BFu7ll");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aUc_BFu1s_BFu7ll");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aUc_BFu1s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_BFu7ll, aUc_BFu1s_BFu7ll)
//============================================================================



static void Test_aUc_BFu1s_BFu7s()
{
  {
    init_simple_test("aUc_BFu1s_BFu7s");
    static STRUCT_IF_C aUc_BFu1s_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu1s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_BFu7s");
    set_bf_and_test(lv, v3, 1, 1, 7, 1, "aUc_BFu1s_BFu7s");
    set_bf_and_test(lv, v3, 1, 1, 7, hide_ull(1LL<<6), "aUc_BFu1s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_BFu7s, aUc_BFu1s_BFu7s)
//============================================================================



static void Test_aUc_BFu1s_BFu8c()
{
  {
    init_simple_test("aUc_BFu1s_BFu8c");
    static STRUCT_IF_C aUc_BFu1s_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_BFu8c");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aUc_BFu1s_BFu8c");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aUc_BFu1s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_BFu8c, aUc_BFu1s_BFu8c)
//============================================================================



static void Test_aUc_BFu1s_BFu8i()
{
  {
    init_simple_test("aUc_BFu1s_BFu8i");
    static STRUCT_IF_C aUc_BFu1s_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_BFu8i");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aUc_BFu1s_BFu8i");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aUc_BFu1s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_BFu8i, aUc_BFu1s_BFu8i)
//============================================================================



static void Test_aUc_BFu1s_BFu8ll()
{
  {
    init_simple_test("aUc_BFu1s_BFu8ll");
    static STRUCT_IF_C aUc_BFu1s_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_BFu8ll");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aUc_BFu1s_BFu8ll");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aUc_BFu1s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_BFu8ll, aUc_BFu1s_BFu8ll)
//============================================================================



static void Test_aUc_BFu1s_BFu8s()
{
  {
    init_simple_test("aUc_BFu1s_BFu8s");
    static STRUCT_IF_C aUc_BFu1s_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_BFu8s");
    set_bf_and_test(lv, v3, 1, 1, 8, 1, "aUc_BFu1s_BFu8s");
    set_bf_and_test(lv, v3, 1, 1, 8, hide_ull(1LL<<7), "aUc_BFu1s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_BFu8s, aUc_BFu1s_BFu8s)
//============================================================================



static void Test_aUc_BFu1s_BFu9i()
{
  {
    init_simple_test("aUc_BFu1s_BFu9i");
    static STRUCT_IF_C aUc_BFu1s_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_BFu9i");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "aUc_BFu1s_BFu9i");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "aUc_BFu1s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_BFu9i, aUc_BFu1s_BFu9i)
//============================================================================



static void Test_aUc_BFu1s_BFu9ll()
{
  {
    init_simple_test("aUc_BFu1s_BFu9ll");
    static STRUCT_IF_C aUc_BFu1s_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_BFu9ll");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "aUc_BFu1s_BFu9ll");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "aUc_BFu1s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_BFu9ll, aUc_BFu1s_BFu9ll)
//============================================================================



static void Test_aUc_BFu1s_BFu9s()
{
  {
    init_simple_test("aUc_BFu1s_BFu9s");
    static STRUCT_IF_C aUc_BFu1s_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_BFu9s");
    set_bf_and_test(lv, v3, 1, 1, 9, 1, "aUc_BFu1s_BFu9s");
    set_bf_and_test(lv, v3, 1, 1, 9, hide_ull(1LL<<8), "aUc_BFu1s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_BFu9s, aUc_BFu1s_BFu9s)
//============================================================================



static void Test_aUc_BFu1s_C()
{
  {
    init_simple_test("aUc_BFu1s_C");
    static STRUCT_IF_C aUc_BFu1s_C lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1s_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_C)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_C");
    check_field_offset(lv, v3, 2, "aUc_BFu1s_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_C, aUc_BFu1s_C)
//============================================================================



static void Test_aUc_BFu1s_D()
{
  {
    init_simple_test("aUc_BFu1s_D");
    static STRUCT_IF_C aUc_BFu1s_D lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu1s_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_D)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_D");
    check_field_offset(lv, v3, 2, "aUc_BFu1s_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_D, aUc_BFu1s_D)
//============================================================================



static void Test_aUc_BFu1s_F()
{
  {
    init_simple_test("aUc_BFu1s_F");
    static STRUCT_IF_C aUc_BFu1s_F lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu1s_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_F)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_F");
    check_field_offset(lv, v3, 2, "aUc_BFu1s_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_F, aUc_BFu1s_F)
//============================================================================



static void Test_aUc_BFu1s_I()
{
  {
    init_simple_test("aUc_BFu1s_I");
    static STRUCT_IF_C aUc_BFu1s_I lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu1s_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_I)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_I");
    check_field_offset(lv, v3, 2, "aUc_BFu1s_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_I, aUc_BFu1s_I)
//============================================================================



static void Test_aUc_BFu1s_Ip()
{
  {
    init_simple_test("aUc_BFu1s_Ip");
    static STRUCT_IF_C aUc_BFu1s_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_BFu1s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_Ip)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_Ip");
    check_field_offset(lv, v3, 2, "aUc_BFu1s_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_Ip, aUc_BFu1s_Ip)
//============================================================================



static void Test_aUc_BFu1s_L()
{
  {
    init_simple_test("aUc_BFu1s_L");
    static STRUCT_IF_C aUc_BFu1s_L lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu1s_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_L)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_L");
    check_field_offset(lv, v3, 2, "aUc_BFu1s_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_L, aUc_BFu1s_L)
//============================================================================



static void Test_aUc_BFu1s_S()
{
  {
    init_simple_test("aUc_BFu1s_S");
    static STRUCT_IF_C aUc_BFu1s_S lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu1s_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_S)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_S");
    check_field_offset(lv, v3, 2, "aUc_BFu1s_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_S, aUc_BFu1s_S)
//============================================================================



static void Test_aUc_BFu1s_Uc()
{
  {
    init_simple_test("aUc_BFu1s_Uc");
    static STRUCT_IF_C aUc_BFu1s_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu1s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_Uc)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_Uc");
    check_field_offset(lv, v3, 2, "aUc_BFu1s_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_Uc, aUc_BFu1s_Uc)
//============================================================================



static void Test_aUc_BFu1s_Ui()
{
  {
    init_simple_test("aUc_BFu1s_Ui");
    static STRUCT_IF_C aUc_BFu1s_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu1s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_Ui)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_Ui");
    check_field_offset(lv, v3, 2, "aUc_BFu1s_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_Ui, aUc_BFu1s_Ui)
//============================================================================



static void Test_aUc_BFu1s_Ul()
{
  {
    init_simple_test("aUc_BFu1s_Ul");
    static STRUCT_IF_C aUc_BFu1s_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu1s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_Ul)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_Ul");
    check_field_offset(lv, v3, 2, "aUc_BFu1s_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_Ul, aUc_BFu1s_Ul)
//============================================================================



static void Test_aUc_BFu1s_Us()
{
  {
    init_simple_test("aUc_BFu1s_Us");
    static STRUCT_IF_C aUc_BFu1s_Us lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu1s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_Us)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_Us");
    check_field_offset(lv, v3, 2, "aUc_BFu1s_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_Us, aUc_BFu1s_Us)
//============================================================================



static void Test_aUc_BFu1s_Vp()
{
  {
    init_simple_test("aUc_BFu1s_Vp");
    static STRUCT_IF_C aUc_BFu1s_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_BFu1s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu1s_Vp)");
    check_field_offset(lv, v1, 0, "aUc_BFu1s_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 1, 1, "aUc_BFu1s_Vp");
    check_field_offset(lv, v3, 2, "aUc_BFu1s_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu1s_Vp, aUc_BFu1s_Vp)
//============================================================================



static void Test_aUc_BFu31i()
{
  {
    init_simple_test("aUc_BFu31i");
    static STRUCT_IF_C aUc_BFu31i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i, aUc_BFu31i)
//============================================================================



static void Test_aUc_BFu31i_BFu15i()
{
  {
    init_simple_test("aUc_BFu31i_BFu15i");
    static STRUCT_IF_C aUc_BFu31i_BFu15i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu31i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_BFu15i");
    set_bf_and_test(lv, v3, 4, 7, 15, 1, "aUc_BFu31i_BFu15i");
    set_bf_and_test(lv, v3, 4, 7, 15, hide_ull(1LL<<14), "aUc_BFu31i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_BFu15i, aUc_BFu31i_BFu15i)
//============================================================================



static void Test_aUc_BFu31i_BFu15ll()
{
  {
    init_simple_test("aUc_BFu31i_BFu15ll");
    static STRUCT_IF_C aUc_BFu31i_BFu15ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu31i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_BFu15ll");
    set_bf_and_test(lv, v3, 4, 7, 15, 1, "aUc_BFu31i_BFu15ll");
    set_bf_and_test(lv, v3, 4, 7, 15, hide_ull(1LL<<14), "aUc_BFu31i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_BFu15ll, aUc_BFu31i_BFu15ll)
//============================================================================



static void Test_aUc_BFu31i_BFu15s()
{
  {
    init_simple_test("aUc_BFu31i_BFu15s");
    static STRUCT_IF_C aUc_BFu31i_BFu15s lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu31i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_BFu15s");
    set_bf_and_test(lv, v3, 4, 7, 15, 1, "aUc_BFu31i_BFu15s");
    set_bf_and_test(lv, v3, 4, 7, 15, hide_ull(1LL<<14), "aUc_BFu31i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_BFu15s, aUc_BFu31i_BFu15s)
//============================================================================



static void Test_aUc_BFu31i_BFu16i()
{
  {
    init_simple_test("aUc_BFu31i_BFu16i");
    static STRUCT_IF_C aUc_BFu31i_BFu16i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu31i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_BFu16i");
    set_bf_and_test(lv, v3, 4, 7, 16, 1, "aUc_BFu31i_BFu16i");
    set_bf_and_test(lv, v3, 4, 7, 16, hide_ull(1LL<<15), "aUc_BFu31i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_BFu16i, aUc_BFu31i_BFu16i)
//============================================================================



static void Test_aUc_BFu31i_BFu16ll()
{
  {
    init_simple_test("aUc_BFu31i_BFu16ll");
    static STRUCT_IF_C aUc_BFu31i_BFu16ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu31i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 7, 16, 1, "aUc_BFu31i_BFu16ll");
    set_bf_and_test(lv, v3, 4, 7, 16, hide_ull(1LL<<15), "aUc_BFu31i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_BFu16ll, aUc_BFu31i_BFu16ll)
//============================================================================



static void Test_aUc_BFu31i_BFu16s()
{
  {
    init_simple_test("aUc_BFu31i_BFu16s");
    static STRUCT_IF_C aUc_BFu31i_BFu16s lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu31i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_BFu16s");
    set_bf_and_test(lv, v3, 4, 7, 16, 1, "aUc_BFu31i_BFu16s");
    set_bf_and_test(lv, v3, 4, 7, 16, hide_ull(1LL<<15), "aUc_BFu31i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_BFu16s, aUc_BFu31i_BFu16s)
//============================================================================



static void Test_aUc_BFu31i_BFu17i()
{
  {
    init_simple_test("aUc_BFu31i_BFu17i");
    static STRUCT_IF_C aUc_BFu31i_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu31i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_BFu17i");
    set_bf_and_test(lv, v3, 4, 7, 17, 1, "aUc_BFu31i_BFu17i");
    set_bf_and_test(lv, v3, 4, 7, 17, hide_ull(1LL<<16), "aUc_BFu31i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_BFu17i, aUc_BFu31i_BFu17i)
//============================================================================



static void Test_aUc_BFu31i_BFu17ll()
{
  {
    init_simple_test("aUc_BFu31i_BFu17ll");
    static STRUCT_IF_C aUc_BFu31i_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu31i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 7, 17, 1, "aUc_BFu31i_BFu17ll");
    set_bf_and_test(lv, v3, 4, 7, 17, hide_ull(1LL<<16), "aUc_BFu31i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_BFu17ll, aUc_BFu31i_BFu17ll)
//============================================================================



static void Test_aUc_BFu31i_BFu1c()
{
  {
    init_simple_test("aUc_BFu31i_BFu1c");
    static STRUCT_IF_C aUc_BFu31i_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu31i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_BFu1c");
    set_bf_and_test(lv, v3, 4, 7, 1, 1, "aUc_BFu31i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_BFu1c, aUc_BFu31i_BFu1c)
//============================================================================



static void Test_aUc_BFu31i_BFu1i()
{
  {
    init_simple_test("aUc_BFu31i_BFu1i");
    static STRUCT_IF_C aUc_BFu31i_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu31i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_BFu1i");
    set_bf_and_test(lv, v3, 4, 7, 1, 1, "aUc_BFu31i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_BFu1i, aUc_BFu31i_BFu1i)
//============================================================================



static void Test_aUc_BFu31i_BFu1ll()
{
  {
    init_simple_test("aUc_BFu31i_BFu1ll");
    static STRUCT_IF_C aUc_BFu31i_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu31i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_BFu1ll");
    set_bf_and_test(lv, v3, 4, 7, 1, 1, "aUc_BFu31i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_BFu1ll, aUc_BFu31i_BFu1ll)
//============================================================================



static void Test_aUc_BFu31i_BFu1s()
{
  {
    init_simple_test("aUc_BFu31i_BFu1s");
    static STRUCT_IF_C aUc_BFu31i_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu31i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_BFu1s");
    set_bf_and_test(lv, v3, 4, 7, 1, 1, "aUc_BFu31i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_BFu1s, aUc_BFu31i_BFu1s)
//============================================================================



static void Test_aUc_BFu31i_BFu31i()
{
  {
    init_simple_test("aUc_BFu31i_BFu31i");
    static STRUCT_IF_C aUc_BFu31i_BFu31i lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu31i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_BFu31i");
    set_bf_and_test(lv, v3, 4, 7, 31, 1, "aUc_BFu31i_BFu31i");
    set_bf_and_test(lv, v3, 4, 7, 31, hide_ull(1LL<<30), "aUc_BFu31i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_BFu31i, aUc_BFu31i_BFu31i)
//============================================================================



static void Test_aUc_BFu31i_BFu31ll()
{
  {
    init_simple_test("aUc_BFu31i_BFu31ll");
    static STRUCT_IF_C aUc_BFu31i_BFu31ll lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu31i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_BFu31ll");
    set_bf_and_test(lv, v3, 4, 7, 31, 1, "aUc_BFu31i_BFu31ll");
    set_bf_and_test(lv, v3, 4, 7, 31, hide_ull(1LL<<30), "aUc_BFu31i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_BFu31ll, aUc_BFu31i_BFu31ll)
//============================================================================



static void Test_aUc_BFu31i_BFu32i()
{
  {
    init_simple_test("aUc_BFu31i_BFu32i");
    static STRUCT_IF_C aUc_BFu31i_BFu32i lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu31i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_BFu32i");
    set_bf_and_test(lv, v3, 4, 7, 32, 1, "aUc_BFu31i_BFu32i");
    set_bf_and_test(lv, v3, 4, 7, 32, hide_ull(1LL<<31), "aUc_BFu31i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_BFu32i, aUc_BFu31i_BFu32i)
//============================================================================



static void Test_aUc_BFu31i_BFu32ll()
{
  {
    init_simple_test("aUc_BFu31i_BFu32ll");
    static STRUCT_IF_C aUc_BFu31i_BFu32ll lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu31i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_BFu32ll");
    set_bf_and_test(lv, v3, 4, 7, 32, 1, "aUc_BFu31i_BFu32ll");
    set_bf_and_test(lv, v3, 4, 7, 32, hide_ull(1LL<<31), "aUc_BFu31i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_BFu32ll, aUc_BFu31i_BFu32ll)
//============================================================================



static void Test_aUc_BFu31i_BFu33()
{
  {
    init_simple_test("aUc_BFu31i_BFu33");
    static STRUCT_IF_C aUc_BFu31i_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu31i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_BFu33");
    set_bf_and_test(lv, v3, 4, 7, 33, 1, "aUc_BFu31i_BFu33");
    set_bf_and_test(lv, v3, 4, 7, 33, hide_ull(1LL<<32), "aUc_BFu31i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_BFu33, aUc_BFu31i_BFu33)
//============================================================================



static void Test_aUc_BFu31i_BFu7c()
{
  {
    init_simple_test("aUc_BFu31i_BFu7c");
    static STRUCT_IF_C aUc_BFu31i_BFu7c lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu31i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_BFu7c");
    set_bf_and_test(lv, v3, 4, 7, 7, 1, "aUc_BFu31i_BFu7c");
    set_bf_and_test(lv, v3, 4, 7, 7, hide_ull(1LL<<6), "aUc_BFu31i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_BFu7c, aUc_BFu31i_BFu7c)
//============================================================================



static void Test_aUc_BFu31i_BFu7i()
{
  {
    init_simple_test("aUc_BFu31i_BFu7i");
    static STRUCT_IF_C aUc_BFu31i_BFu7i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu31i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_BFu7i");
    set_bf_and_test(lv, v3, 4, 7, 7, 1, "aUc_BFu31i_BFu7i");
    set_bf_and_test(lv, v3, 4, 7, 7, hide_ull(1LL<<6), "aUc_BFu31i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_BFu7i, aUc_BFu31i_BFu7i)
//============================================================================



static void Test_aUc_BFu31i_BFu7ll()
{
  {
    init_simple_test("aUc_BFu31i_BFu7ll");
    static STRUCT_IF_C aUc_BFu31i_BFu7ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu31i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_BFu7ll");
    set_bf_and_test(lv, v3, 4, 7, 7, 1, "aUc_BFu31i_BFu7ll");
    set_bf_and_test(lv, v3, 4, 7, 7, hide_ull(1LL<<6), "aUc_BFu31i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_BFu7ll, aUc_BFu31i_BFu7ll)
//============================================================================



static void Test_aUc_BFu31i_BFu7s()
{
  {
    init_simple_test("aUc_BFu31i_BFu7s");
    static STRUCT_IF_C aUc_BFu31i_BFu7s lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu31i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_BFu7s");
    set_bf_and_test(lv, v3, 4, 7, 7, 1, "aUc_BFu31i_BFu7s");
    set_bf_and_test(lv, v3, 4, 7, 7, hide_ull(1LL<<6), "aUc_BFu31i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_BFu7s, aUc_BFu31i_BFu7s)
//============================================================================



static void Test_aUc_BFu31i_BFu8c()
{
  {
    init_simple_test("aUc_BFu31i_BFu8c");
    static STRUCT_IF_C aUc_BFu31i_BFu8c lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu31i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_BFu8c");
    set_bf_and_test(lv, v3, 4, 7, 8, 1, "aUc_BFu31i_BFu8c");
    set_bf_and_test(lv, v3, 4, 7, 8, hide_ull(1LL<<7), "aUc_BFu31i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_BFu8c, aUc_BFu31i_BFu8c)
//============================================================================



static void Test_aUc_BFu31i_BFu8i()
{
  {
    init_simple_test("aUc_BFu31i_BFu8i");
    static STRUCT_IF_C aUc_BFu31i_BFu8i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu31i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_BFu8i");
    set_bf_and_test(lv, v3, 4, 7, 8, 1, "aUc_BFu31i_BFu8i");
    set_bf_and_test(lv, v3, 4, 7, 8, hide_ull(1LL<<7), "aUc_BFu31i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_BFu8i, aUc_BFu31i_BFu8i)
//============================================================================



static void Test_aUc_BFu31i_BFu8ll()
{
  {
    init_simple_test("aUc_BFu31i_BFu8ll");
    static STRUCT_IF_C aUc_BFu31i_BFu8ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu31i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_BFu8ll");
    set_bf_and_test(lv, v3, 4, 7, 8, 1, "aUc_BFu31i_BFu8ll");
    set_bf_and_test(lv, v3, 4, 7, 8, hide_ull(1LL<<7), "aUc_BFu31i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_BFu8ll, aUc_BFu31i_BFu8ll)
//============================================================================



static void Test_aUc_BFu31i_BFu8s()
{
  {
    init_simple_test("aUc_BFu31i_BFu8s");
    static STRUCT_IF_C aUc_BFu31i_BFu8s lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu31i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_BFu8s");
    set_bf_and_test(lv, v3, 4, 7, 8, 1, "aUc_BFu31i_BFu8s");
    set_bf_and_test(lv, v3, 4, 7, 8, hide_ull(1LL<<7), "aUc_BFu31i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_BFu8s, aUc_BFu31i_BFu8s)
//============================================================================



static void Test_aUc_BFu31i_BFu9i()
{
  {
    init_simple_test("aUc_BFu31i_BFu9i");
    static STRUCT_IF_C aUc_BFu31i_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu31i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_BFu9i");
    set_bf_and_test(lv, v3, 4, 7, 9, 1, "aUc_BFu31i_BFu9i");
    set_bf_and_test(lv, v3, 4, 7, 9, hide_ull(1LL<<8), "aUc_BFu31i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_BFu9i, aUc_BFu31i_BFu9i)
//============================================================================



static void Test_aUc_BFu31i_BFu9ll()
{
  {
    init_simple_test("aUc_BFu31i_BFu9ll");
    static STRUCT_IF_C aUc_BFu31i_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu31i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_BFu9ll");
    set_bf_and_test(lv, v3, 4, 7, 9, 1, "aUc_BFu31i_BFu9ll");
    set_bf_and_test(lv, v3, 4, 7, 9, hide_ull(1LL<<8), "aUc_BFu31i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_BFu9ll, aUc_BFu31i_BFu9ll)
//============================================================================



static void Test_aUc_BFu31i_BFu9s()
{
  {
    init_simple_test("aUc_BFu31i_BFu9s");
    static STRUCT_IF_C aUc_BFu31i_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu31i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_BFu9s");
    set_bf_and_test(lv, v3, 4, 7, 9, 1, "aUc_BFu31i_BFu9s");
    set_bf_and_test(lv, v3, 4, 7, 9, hide_ull(1LL<<8), "aUc_BFu31i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_BFu9s, aUc_BFu31i_BFu9s)
//============================================================================



static void Test_aUc_BFu31i_C()
{
  {
    init_simple_test("aUc_BFu31i_C");
    static STRUCT_IF_C aUc_BFu31i_C lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu31i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_C)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_C");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_C");
    check_field_offset(lv, v3, 5, "aUc_BFu31i_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_C, aUc_BFu31i_C)
//============================================================================



static void Test_aUc_BFu31i_D()
{
  {
    init_simple_test("aUc_BFu31i_D");
    static STRUCT_IF_C aUc_BFu31i_D lv;
    check2(sizeof(lv), 13, "sizeof(aUc_BFu31i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_D)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_D");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_D");
    check_field_offset(lv, v3, 5, "aUc_BFu31i_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_D, aUc_BFu31i_D)
//============================================================================



static void Test_aUc_BFu31i_F()
{
  {
    init_simple_test("aUc_BFu31i_F");
    static STRUCT_IF_C aUc_BFu31i_F lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu31i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_F)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_F");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_F");
    check_field_offset(lv, v3, 5, "aUc_BFu31i_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_F, aUc_BFu31i_F)
//============================================================================



static void Test_aUc_BFu31i_I()
{
  {
    init_simple_test("aUc_BFu31i_I");
    static STRUCT_IF_C aUc_BFu31i_I lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu31i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_I)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_I");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_I");
    check_field_offset(lv, v3, 5, "aUc_BFu31i_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_I, aUc_BFu31i_I)
//============================================================================



static void Test_aUc_BFu31i_Ip()
{
  {
    init_simple_test("aUc_BFu31i_Ip");
    static STRUCT_IF_C aUc_BFu31i_Ip lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aUc_BFu31i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_Ip)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_Ip");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_Ip");
    check_field_offset(lv, v3, 5, "aUc_BFu31i_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_Ip, aUc_BFu31i_Ip)
//============================================================================



static void Test_aUc_BFu31i_L()
{
  {
    init_simple_test("aUc_BFu31i_L");
    static STRUCT_IF_C aUc_BFu31i_L lv;
    check2(sizeof(lv), 13, "sizeof(aUc_BFu31i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_L)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_L");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_L");
    check_field_offset(lv, v3, 5, "aUc_BFu31i_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_L, aUc_BFu31i_L)
//============================================================================



static void Test_aUc_BFu31i_S()
{
  {
    init_simple_test("aUc_BFu31i_S");
    static STRUCT_IF_C aUc_BFu31i_S lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu31i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_S)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_S");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_S");
    check_field_offset(lv, v3, 5, "aUc_BFu31i_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_S, aUc_BFu31i_S)
//============================================================================



static void Test_aUc_BFu31i_Uc()
{
  {
    init_simple_test("aUc_BFu31i_Uc");
    static STRUCT_IF_C aUc_BFu31i_Uc lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu31i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_Uc)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_Uc");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_Uc");
    check_field_offset(lv, v3, 5, "aUc_BFu31i_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_Uc, aUc_BFu31i_Uc)
//============================================================================



static void Test_aUc_BFu31i_Ui()
{
  {
    init_simple_test("aUc_BFu31i_Ui");
    static STRUCT_IF_C aUc_BFu31i_Ui lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu31i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_Ui)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_Ui");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_Ui");
    check_field_offset(lv, v3, 5, "aUc_BFu31i_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_Ui, aUc_BFu31i_Ui)
//============================================================================



static void Test_aUc_BFu31i_Ul()
{
  {
    init_simple_test("aUc_BFu31i_Ul");
    static STRUCT_IF_C aUc_BFu31i_Ul lv;
    check2(sizeof(lv), 13, "sizeof(aUc_BFu31i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_Ul)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_Ul");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_Ul");
    check_field_offset(lv, v3, 5, "aUc_BFu31i_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_Ul, aUc_BFu31i_Ul)
//============================================================================



static void Test_aUc_BFu31i_Us()
{
  {
    init_simple_test("aUc_BFu31i_Us");
    static STRUCT_IF_C aUc_BFu31i_Us lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu31i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_Us)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_Us");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_Us");
    check_field_offset(lv, v3, 5, "aUc_BFu31i_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_Us, aUc_BFu31i_Us)
//============================================================================



static void Test_aUc_BFu31i_Vp()
{
  {
    init_simple_test("aUc_BFu31i_Vp");
    static STRUCT_IF_C aUc_BFu31i_Vp lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aUc_BFu31i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31i_Vp)");
    check_field_offset(lv, v1, 0, "aUc_BFu31i_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31i_Vp");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31i_Vp");
    check_field_offset(lv, v3, 5, "aUc_BFu31i_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31i_Vp, aUc_BFu31i_Vp)
//============================================================================



static void Test_aUc_BFu31ll()
{
  {
    init_simple_test("aUc_BFu31ll");
    static STRUCT_IF_C aUc_BFu31ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll, aUc_BFu31ll)
//============================================================================



static void Test_aUc_BFu31ll_BFu15i()
{
  {
    init_simple_test("aUc_BFu31ll_BFu15i");
    static STRUCT_IF_C aUc_BFu31ll_BFu15i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu31ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_BFu15i");
    set_bf_and_test(lv, v3, 4, 7, 15, 1, "aUc_BFu31ll_BFu15i");
    set_bf_and_test(lv, v3, 4, 7, 15, hide_ull(1LL<<14), "aUc_BFu31ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_BFu15i, aUc_BFu31ll_BFu15i)
//============================================================================



static void Test_aUc_BFu31ll_BFu15ll()
{
  {
    init_simple_test("aUc_BFu31ll_BFu15ll");
    static STRUCT_IF_C aUc_BFu31ll_BFu15ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu31ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_BFu15ll");
    set_bf_and_test(lv, v3, 4, 7, 15, 1, "aUc_BFu31ll_BFu15ll");
    set_bf_and_test(lv, v3, 4, 7, 15, hide_ull(1LL<<14), "aUc_BFu31ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_BFu15ll, aUc_BFu31ll_BFu15ll)
//============================================================================



static void Test_aUc_BFu31ll_BFu15s()
{
  {
    init_simple_test("aUc_BFu31ll_BFu15s");
    static STRUCT_IF_C aUc_BFu31ll_BFu15s lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu31ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_BFu15s");
    set_bf_and_test(lv, v3, 4, 7, 15, 1, "aUc_BFu31ll_BFu15s");
    set_bf_and_test(lv, v3, 4, 7, 15, hide_ull(1LL<<14), "aUc_BFu31ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_BFu15s, aUc_BFu31ll_BFu15s)
//============================================================================



static void Test_aUc_BFu31ll_BFu16i()
{
  {
    init_simple_test("aUc_BFu31ll_BFu16i");
    static STRUCT_IF_C aUc_BFu31ll_BFu16i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu31ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 7, 16, 1, "aUc_BFu31ll_BFu16i");
    set_bf_and_test(lv, v3, 4, 7, 16, hide_ull(1LL<<15), "aUc_BFu31ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_BFu16i, aUc_BFu31ll_BFu16i)
//============================================================================



static void Test_aUc_BFu31ll_BFu16ll()
{
  {
    init_simple_test("aUc_BFu31ll_BFu16ll");
    static STRUCT_IF_C aUc_BFu31ll_BFu16ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu31ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 7, 16, 1, "aUc_BFu31ll_BFu16ll");
    set_bf_and_test(lv, v3, 4, 7, 16, hide_ull(1LL<<15), "aUc_BFu31ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_BFu16ll, aUc_BFu31ll_BFu16ll)
//============================================================================



static void Test_aUc_BFu31ll_BFu16s()
{
  {
    init_simple_test("aUc_BFu31ll_BFu16s");
    static STRUCT_IF_C aUc_BFu31ll_BFu16s lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu31ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 7, 16, 1, "aUc_BFu31ll_BFu16s");
    set_bf_and_test(lv, v3, 4, 7, 16, hide_ull(1LL<<15), "aUc_BFu31ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_BFu16s, aUc_BFu31ll_BFu16s)
//============================================================================



static void Test_aUc_BFu31ll_BFu17i()
{
  {
    init_simple_test("aUc_BFu31ll_BFu17i");
    static STRUCT_IF_C aUc_BFu31ll_BFu17i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu31ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 7, 17, 1, "aUc_BFu31ll_BFu17i");
    set_bf_and_test(lv, v3, 4, 7, 17, hide_ull(1LL<<16), "aUc_BFu31ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_BFu17i, aUc_BFu31ll_BFu17i)
//============================================================================



static void Test_aUc_BFu31ll_BFu17ll()
{
  {
    init_simple_test("aUc_BFu31ll_BFu17ll");
    static STRUCT_IF_C aUc_BFu31ll_BFu17ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu31ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 7, 17, 1, "aUc_BFu31ll_BFu17ll");
    set_bf_and_test(lv, v3, 4, 7, 17, hide_ull(1LL<<16), "aUc_BFu31ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_BFu17ll, aUc_BFu31ll_BFu17ll)
//============================================================================



static void Test_aUc_BFu31ll_BFu1c()
{
  {
    init_simple_test("aUc_BFu31ll_BFu1c");
    static STRUCT_IF_C aUc_BFu31ll_BFu1c lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu31ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_BFu1c");
    set_bf_and_test(lv, v3, 4, 7, 1, 1, "aUc_BFu31ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_BFu1c, aUc_BFu31ll_BFu1c)
//============================================================================



static void Test_aUc_BFu31ll_BFu1i()
{
  {
    init_simple_test("aUc_BFu31ll_BFu1i");
    static STRUCT_IF_C aUc_BFu31ll_BFu1i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu31ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_BFu1i");
    set_bf_and_test(lv, v3, 4, 7, 1, 1, "aUc_BFu31ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_BFu1i, aUc_BFu31ll_BFu1i)
//============================================================================



static void Test_aUc_BFu31ll_BFu1ll()
{
  {
    init_simple_test("aUc_BFu31ll_BFu1ll");
    static STRUCT_IF_C aUc_BFu31ll_BFu1ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu31ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_BFu1ll");
    set_bf_and_test(lv, v3, 4, 7, 1, 1, "aUc_BFu31ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_BFu1ll, aUc_BFu31ll_BFu1ll)
//============================================================================



static void Test_aUc_BFu31ll_BFu1s()
{
  {
    init_simple_test("aUc_BFu31ll_BFu1s");
    static STRUCT_IF_C aUc_BFu31ll_BFu1s lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu31ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_BFu1s");
    set_bf_and_test(lv, v3, 4, 7, 1, 1, "aUc_BFu31ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_BFu1s, aUc_BFu31ll_BFu1s)
//============================================================================



static void Test_aUc_BFu31ll_BFu31i()
{
  {
    init_simple_test("aUc_BFu31ll_BFu31i");
    static STRUCT_IF_C aUc_BFu31ll_BFu31i lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu31ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_BFu31i");
    set_bf_and_test(lv, v3, 4, 7, 31, 1, "aUc_BFu31ll_BFu31i");
    set_bf_and_test(lv, v3, 4, 7, 31, hide_ull(1LL<<30), "aUc_BFu31ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_BFu31i, aUc_BFu31ll_BFu31i)
//============================================================================



static void Test_aUc_BFu31ll_BFu31ll()
{
  {
    init_simple_test("aUc_BFu31ll_BFu31ll");
    static STRUCT_IF_C aUc_BFu31ll_BFu31ll lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu31ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_BFu31ll");
    set_bf_and_test(lv, v3, 4, 7, 31, 1, "aUc_BFu31ll_BFu31ll");
    set_bf_and_test(lv, v3, 4, 7, 31, hide_ull(1LL<<30), "aUc_BFu31ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_BFu31ll, aUc_BFu31ll_BFu31ll)
//============================================================================



static void Test_aUc_BFu31ll_BFu32i()
{
  {
    init_simple_test("aUc_BFu31ll_BFu32i");
    static STRUCT_IF_C aUc_BFu31ll_BFu32i lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu31ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_BFu32i");
    set_bf_and_test(lv, v3, 4, 7, 32, 1, "aUc_BFu31ll_BFu32i");
    set_bf_and_test(lv, v3, 4, 7, 32, hide_ull(1LL<<31), "aUc_BFu31ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_BFu32i, aUc_BFu31ll_BFu32i)
//============================================================================



static void Test_aUc_BFu31ll_BFu32ll()
{
  {
    init_simple_test("aUc_BFu31ll_BFu32ll");
    static STRUCT_IF_C aUc_BFu31ll_BFu32ll lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu31ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_BFu32ll");
    set_bf_and_test(lv, v3, 4, 7, 32, 1, "aUc_BFu31ll_BFu32ll");
    set_bf_and_test(lv, v3, 4, 7, 32, hide_ull(1LL<<31), "aUc_BFu31ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_BFu32ll, aUc_BFu31ll_BFu32ll)
//============================================================================



static void Test_aUc_BFu31ll_BFu33()
{
  {
    init_simple_test("aUc_BFu31ll_BFu33");
    static STRUCT_IF_C aUc_BFu31ll_BFu33 lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu31ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_BFu33");
    set_bf_and_test(lv, v3, 4, 7, 33, 1, "aUc_BFu31ll_BFu33");
    set_bf_and_test(lv, v3, 4, 7, 33, hide_ull(1LL<<32), "aUc_BFu31ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_BFu33, aUc_BFu31ll_BFu33)
//============================================================================



static void Test_aUc_BFu31ll_BFu7c()
{
  {
    init_simple_test("aUc_BFu31ll_BFu7c");
    static STRUCT_IF_C aUc_BFu31ll_BFu7c lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu31ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_BFu7c");
    set_bf_and_test(lv, v3, 4, 7, 7, 1, "aUc_BFu31ll_BFu7c");
    set_bf_and_test(lv, v3, 4, 7, 7, hide_ull(1LL<<6), "aUc_BFu31ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_BFu7c, aUc_BFu31ll_BFu7c)
//============================================================================



static void Test_aUc_BFu31ll_BFu7i()
{
  {
    init_simple_test("aUc_BFu31ll_BFu7i");
    static STRUCT_IF_C aUc_BFu31ll_BFu7i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu31ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_BFu7i");
    set_bf_and_test(lv, v3, 4, 7, 7, 1, "aUc_BFu31ll_BFu7i");
    set_bf_and_test(lv, v3, 4, 7, 7, hide_ull(1LL<<6), "aUc_BFu31ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_BFu7i, aUc_BFu31ll_BFu7i)
//============================================================================



static void Test_aUc_BFu31ll_BFu7ll()
{
  {
    init_simple_test("aUc_BFu31ll_BFu7ll");
    static STRUCT_IF_C aUc_BFu31ll_BFu7ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu31ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_BFu7ll");
    set_bf_and_test(lv, v3, 4, 7, 7, 1, "aUc_BFu31ll_BFu7ll");
    set_bf_and_test(lv, v3, 4, 7, 7, hide_ull(1LL<<6), "aUc_BFu31ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_BFu7ll, aUc_BFu31ll_BFu7ll)
//============================================================================



static void Test_aUc_BFu31ll_BFu7s()
{
  {
    init_simple_test("aUc_BFu31ll_BFu7s");
    static STRUCT_IF_C aUc_BFu31ll_BFu7s lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu31ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_BFu7s");
    set_bf_and_test(lv, v3, 4, 7, 7, 1, "aUc_BFu31ll_BFu7s");
    set_bf_and_test(lv, v3, 4, 7, 7, hide_ull(1LL<<6), "aUc_BFu31ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_BFu7s, aUc_BFu31ll_BFu7s)
//============================================================================



static void Test_aUc_BFu31ll_BFu8c()
{
  {
    init_simple_test("aUc_BFu31ll_BFu8c");
    static STRUCT_IF_C aUc_BFu31ll_BFu8c lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu31ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_BFu8c");
    set_bf_and_test(lv, v3, 4, 7, 8, 1, "aUc_BFu31ll_BFu8c");
    set_bf_and_test(lv, v3, 4, 7, 8, hide_ull(1LL<<7), "aUc_BFu31ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_BFu8c, aUc_BFu31ll_BFu8c)
//============================================================================



static void Test_aUc_BFu31ll_BFu8i()
{
  {
    init_simple_test("aUc_BFu31ll_BFu8i");
    static STRUCT_IF_C aUc_BFu31ll_BFu8i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu31ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_BFu8i");
    set_bf_and_test(lv, v3, 4, 7, 8, 1, "aUc_BFu31ll_BFu8i");
    set_bf_and_test(lv, v3, 4, 7, 8, hide_ull(1LL<<7), "aUc_BFu31ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_BFu8i, aUc_BFu31ll_BFu8i)
//============================================================================



static void Test_aUc_BFu31ll_BFu8ll()
{
  {
    init_simple_test("aUc_BFu31ll_BFu8ll");
    static STRUCT_IF_C aUc_BFu31ll_BFu8ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu31ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_BFu8ll");
    set_bf_and_test(lv, v3, 4, 7, 8, 1, "aUc_BFu31ll_BFu8ll");
    set_bf_and_test(lv, v3, 4, 7, 8, hide_ull(1LL<<7), "aUc_BFu31ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_BFu8ll, aUc_BFu31ll_BFu8ll)
//============================================================================



static void Test_aUc_BFu31ll_BFu8s()
{
  {
    init_simple_test("aUc_BFu31ll_BFu8s");
    static STRUCT_IF_C aUc_BFu31ll_BFu8s lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu31ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_BFu8s");
    set_bf_and_test(lv, v3, 4, 7, 8, 1, "aUc_BFu31ll_BFu8s");
    set_bf_and_test(lv, v3, 4, 7, 8, hide_ull(1LL<<7), "aUc_BFu31ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_BFu8s, aUc_BFu31ll_BFu8s)
//============================================================================



static void Test_aUc_BFu31ll_BFu9i()
{
  {
    init_simple_test("aUc_BFu31ll_BFu9i");
    static STRUCT_IF_C aUc_BFu31ll_BFu9i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu31ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_BFu9i");
    set_bf_and_test(lv, v3, 4, 7, 9, 1, "aUc_BFu31ll_BFu9i");
    set_bf_and_test(lv, v3, 4, 7, 9, hide_ull(1LL<<8), "aUc_BFu31ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_BFu9i, aUc_BFu31ll_BFu9i)
//============================================================================



static void Test_aUc_BFu31ll_BFu9ll()
{
  {
    init_simple_test("aUc_BFu31ll_BFu9ll");
    static STRUCT_IF_C aUc_BFu31ll_BFu9ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu31ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_BFu9ll");
    set_bf_and_test(lv, v3, 4, 7, 9, 1, "aUc_BFu31ll_BFu9ll");
    set_bf_and_test(lv, v3, 4, 7, 9, hide_ull(1LL<<8), "aUc_BFu31ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_BFu9ll, aUc_BFu31ll_BFu9ll)
//============================================================================



static void Test_aUc_BFu31ll_BFu9s()
{
  {
    init_simple_test("aUc_BFu31ll_BFu9s");
    static STRUCT_IF_C aUc_BFu31ll_BFu9s lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu31ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_BFu9s");
    set_bf_and_test(lv, v3, 4, 7, 9, 1, "aUc_BFu31ll_BFu9s");
    set_bf_and_test(lv, v3, 4, 7, 9, hide_ull(1LL<<8), "aUc_BFu31ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_BFu9s, aUc_BFu31ll_BFu9s)
//============================================================================



static void Test_aUc_BFu31ll_C()
{
  {
    init_simple_test("aUc_BFu31ll_C");
    static STRUCT_IF_C aUc_BFu31ll_C lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu31ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_C)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_C");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_C");
    check_field_offset(lv, v3, 5, "aUc_BFu31ll_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_C, aUc_BFu31ll_C)
//============================================================================



static void Test_aUc_BFu31ll_D()
{
  {
    init_simple_test("aUc_BFu31ll_D");
    static STRUCT_IF_C aUc_BFu31ll_D lv;
    check2(sizeof(lv), 13, "sizeof(aUc_BFu31ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_D)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_D");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_D");
    check_field_offset(lv, v3, 5, "aUc_BFu31ll_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_D, aUc_BFu31ll_D)
//============================================================================



static void Test_aUc_BFu31ll_F()
{
  {
    init_simple_test("aUc_BFu31ll_F");
    static STRUCT_IF_C aUc_BFu31ll_F lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu31ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_F)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_F");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_F");
    check_field_offset(lv, v3, 5, "aUc_BFu31ll_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_F, aUc_BFu31ll_F)
//============================================================================



static void Test_aUc_BFu31ll_I()
{
  {
    init_simple_test("aUc_BFu31ll_I");
    static STRUCT_IF_C aUc_BFu31ll_I lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu31ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_I)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_I");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_I");
    check_field_offset(lv, v3, 5, "aUc_BFu31ll_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_I, aUc_BFu31ll_I)
//============================================================================



static void Test_aUc_BFu31ll_Ip()
{
  {
    init_simple_test("aUc_BFu31ll_Ip");
    static STRUCT_IF_C aUc_BFu31ll_Ip lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aUc_BFu31ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_Ip)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_Ip");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_Ip");
    check_field_offset(lv, v3, 5, "aUc_BFu31ll_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_Ip, aUc_BFu31ll_Ip)
//============================================================================



static void Test_aUc_BFu31ll_L()
{
  {
    init_simple_test("aUc_BFu31ll_L");
    static STRUCT_IF_C aUc_BFu31ll_L lv;
    check2(sizeof(lv), 13, "sizeof(aUc_BFu31ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_L)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_L");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_L");
    check_field_offset(lv, v3, 5, "aUc_BFu31ll_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_L, aUc_BFu31ll_L)
//============================================================================



static void Test_aUc_BFu31ll_S()
{
  {
    init_simple_test("aUc_BFu31ll_S");
    static STRUCT_IF_C aUc_BFu31ll_S lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu31ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_S)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_S");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_S");
    check_field_offset(lv, v3, 5, "aUc_BFu31ll_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_S, aUc_BFu31ll_S)
//============================================================================



static void Test_aUc_BFu31ll_Uc()
{
  {
    init_simple_test("aUc_BFu31ll_Uc");
    static STRUCT_IF_C aUc_BFu31ll_Uc lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu31ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_Uc)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_Uc");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_Uc");
    check_field_offset(lv, v3, 5, "aUc_BFu31ll_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_Uc, aUc_BFu31ll_Uc)
//============================================================================



static void Test_aUc_BFu31ll_Ui()
{
  {
    init_simple_test("aUc_BFu31ll_Ui");
    static STRUCT_IF_C aUc_BFu31ll_Ui lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu31ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_Ui)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_Ui");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_Ui");
    check_field_offset(lv, v3, 5, "aUc_BFu31ll_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_Ui, aUc_BFu31ll_Ui)
//============================================================================



static void Test_aUc_BFu31ll_Ul()
{
  {
    init_simple_test("aUc_BFu31ll_Ul");
    static STRUCT_IF_C aUc_BFu31ll_Ul lv;
    check2(sizeof(lv), 13, "sizeof(aUc_BFu31ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_Ul)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_Ul");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_Ul");
    check_field_offset(lv, v3, 5, "aUc_BFu31ll_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_Ul, aUc_BFu31ll_Ul)
//============================================================================



static void Test_aUc_BFu31ll_Us()
{
  {
    init_simple_test("aUc_BFu31ll_Us");
    static STRUCT_IF_C aUc_BFu31ll_Us lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu31ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_Us)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_Us");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_Us");
    check_field_offset(lv, v3, 5, "aUc_BFu31ll_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_Us, aUc_BFu31ll_Us)
//============================================================================



static void Test_aUc_BFu31ll_Vp()
{
  {
    init_simple_test("aUc_BFu31ll_Vp");
    static STRUCT_IF_C aUc_BFu31ll_Vp lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aUc_BFu31ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu31ll_Vp)");
    check_field_offset(lv, v1, 0, "aUc_BFu31ll_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 31, 1, "aUc_BFu31ll_Vp");
    set_bf_and_test(lv, v2, 1, 0, 31, hide_ull(1LL<<30), "aUc_BFu31ll_Vp");
    check_field_offset(lv, v3, 5, "aUc_BFu31ll_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu31ll_Vp, aUc_BFu31ll_Vp)
//============================================================================



static void Test_aUc_BFu32i()
{
  {
    init_simple_test("aUc_BFu32i");
    static STRUCT_IF_C aUc_BFu32i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i, aUc_BFu32i)
//============================================================================



static void Test_aUc_BFu32i_BFu15i()
{
  {
    init_simple_test("aUc_BFu32i_BFu15i");
    static STRUCT_IF_C aUc_BFu32i_BFu15i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu32i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_BFu15i");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aUc_BFu32i_BFu15i");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aUc_BFu32i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_BFu15i, aUc_BFu32i_BFu15i)
//============================================================================



static void Test_aUc_BFu32i_BFu15ll()
{
  {
    init_simple_test("aUc_BFu32i_BFu15ll");
    static STRUCT_IF_C aUc_BFu32i_BFu15ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu32i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_BFu15ll");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aUc_BFu32i_BFu15ll");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aUc_BFu32i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_BFu15ll, aUc_BFu32i_BFu15ll)
//============================================================================



static void Test_aUc_BFu32i_BFu15s()
{
  {
    init_simple_test("aUc_BFu32i_BFu15s");
    static STRUCT_IF_C aUc_BFu32i_BFu15s lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu32i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_BFu15s");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aUc_BFu32i_BFu15s");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aUc_BFu32i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_BFu15s, aUc_BFu32i_BFu15s)
//============================================================================



static void Test_aUc_BFu32i_BFu16i()
{
  {
    init_simple_test("aUc_BFu32i_BFu16i");
    static STRUCT_IF_C aUc_BFu32i_BFu16i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu32i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_BFu16i");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aUc_BFu32i_BFu16i");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aUc_BFu32i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_BFu16i, aUc_BFu32i_BFu16i)
//============================================================================



static void Test_aUc_BFu32i_BFu16ll()
{
  {
    init_simple_test("aUc_BFu32i_BFu16ll");
    static STRUCT_IF_C aUc_BFu32i_BFu16ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu32i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_BFu16ll");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aUc_BFu32i_BFu16ll");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aUc_BFu32i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_BFu16ll, aUc_BFu32i_BFu16ll)
//============================================================================



static void Test_aUc_BFu32i_BFu16s()
{
  {
    init_simple_test("aUc_BFu32i_BFu16s");
    static STRUCT_IF_C aUc_BFu32i_BFu16s lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu32i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_BFu16s");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aUc_BFu32i_BFu16s");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aUc_BFu32i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_BFu16s, aUc_BFu32i_BFu16s)
//============================================================================



static void Test_aUc_BFu32i_BFu17i()
{
  {
    init_simple_test("aUc_BFu32i_BFu17i");
    static STRUCT_IF_C aUc_BFu32i_BFu17i lv;
    check2(sizeof(lv), 8, "sizeof(aUc_BFu32i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_BFu17i");
    set_bf_and_test(lv, v3, 5, 0, 17, 1, "aUc_BFu32i_BFu17i");
    set_bf_and_test(lv, v3, 5, 0, 17, hide_ull(1LL<<16), "aUc_BFu32i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_BFu17i, aUc_BFu32i_BFu17i)
//============================================================================



static void Test_aUc_BFu32i_BFu17ll()
{
  {
    init_simple_test("aUc_BFu32i_BFu17ll");
    static STRUCT_IF_C aUc_BFu32i_BFu17ll lv;
    check2(sizeof(lv), 8, "sizeof(aUc_BFu32i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_BFu17ll");
    set_bf_and_test(lv, v3, 5, 0, 17, 1, "aUc_BFu32i_BFu17ll");
    set_bf_and_test(lv, v3, 5, 0, 17, hide_ull(1LL<<16), "aUc_BFu32i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_BFu17ll, aUc_BFu32i_BFu17ll)
//============================================================================



static void Test_aUc_BFu32i_BFu1c()
{
  {
    init_simple_test("aUc_BFu32i_BFu1c");
    static STRUCT_IF_C aUc_BFu32i_BFu1c lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_BFu1c");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aUc_BFu32i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_BFu1c, aUc_BFu32i_BFu1c)
//============================================================================



static void Test_aUc_BFu32i_BFu1i()
{
  {
    init_simple_test("aUc_BFu32i_BFu1i");
    static STRUCT_IF_C aUc_BFu32i_BFu1i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_BFu1i");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aUc_BFu32i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_BFu1i, aUc_BFu32i_BFu1i)
//============================================================================



static void Test_aUc_BFu32i_BFu1ll()
{
  {
    init_simple_test("aUc_BFu32i_BFu1ll");
    static STRUCT_IF_C aUc_BFu32i_BFu1ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_BFu1ll");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aUc_BFu32i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_BFu1ll, aUc_BFu32i_BFu1ll)
//============================================================================



static void Test_aUc_BFu32i_BFu1s()
{
  {
    init_simple_test("aUc_BFu32i_BFu1s");
    static STRUCT_IF_C aUc_BFu32i_BFu1s lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_BFu1s");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aUc_BFu32i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_BFu1s, aUc_BFu32i_BFu1s)
//============================================================================



static void Test_aUc_BFu32i_BFu31i()
{
  {
    init_simple_test("aUc_BFu32i_BFu31i");
    static STRUCT_IF_C aUc_BFu32i_BFu31i lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu32i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_BFu31i");
    set_bf_and_test(lv, v3, 5, 0, 31, 1, "aUc_BFu32i_BFu31i");
    set_bf_and_test(lv, v3, 5, 0, 31, hide_ull(1LL<<30), "aUc_BFu32i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_BFu31i, aUc_BFu32i_BFu31i)
//============================================================================



static void Test_aUc_BFu32i_BFu31ll()
{
  {
    init_simple_test("aUc_BFu32i_BFu31ll");
    static STRUCT_IF_C aUc_BFu32i_BFu31ll lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu32i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_BFu31ll");
    set_bf_and_test(lv, v3, 5, 0, 31, 1, "aUc_BFu32i_BFu31ll");
    set_bf_and_test(lv, v3, 5, 0, 31, hide_ull(1LL<<30), "aUc_BFu32i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_BFu31ll, aUc_BFu32i_BFu31ll)
//============================================================================



static void Test_aUc_BFu32i_BFu32i()
{
  {
    init_simple_test("aUc_BFu32i_BFu32i");
    static STRUCT_IF_C aUc_BFu32i_BFu32i lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu32i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_BFu32i");
    set_bf_and_test(lv, v3, 5, 0, 32, 1, "aUc_BFu32i_BFu32i");
    set_bf_and_test(lv, v3, 5, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_BFu32i, aUc_BFu32i_BFu32i)
//============================================================================



static void Test_aUc_BFu32i_BFu32ll()
{
  {
    init_simple_test("aUc_BFu32i_BFu32ll");
    static STRUCT_IF_C aUc_BFu32i_BFu32ll lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu32i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_BFu32ll");
    set_bf_and_test(lv, v3, 5, 0, 32, 1, "aUc_BFu32i_BFu32ll");
    set_bf_and_test(lv, v3, 5, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_BFu32ll, aUc_BFu32i_BFu32ll)
//============================================================================



static void Test_aUc_BFu32i_BFu33()
{
  {
    init_simple_test("aUc_BFu32i_BFu33");
    static STRUCT_IF_C aUc_BFu32i_BFu33 lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu32i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_BFu33");
    set_bf_and_test(lv, v3, 5, 0, 33, 1, "aUc_BFu32i_BFu33");
    set_bf_and_test(lv, v3, 5, 0, 33, hide_ull(1LL<<32), "aUc_BFu32i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_BFu33, aUc_BFu32i_BFu33)
//============================================================================



static void Test_aUc_BFu32i_BFu7c()
{
  {
    init_simple_test("aUc_BFu32i_BFu7c");
    static STRUCT_IF_C aUc_BFu32i_BFu7c lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_BFu7c");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aUc_BFu32i_BFu7c");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aUc_BFu32i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_BFu7c, aUc_BFu32i_BFu7c)
//============================================================================



static void Test_aUc_BFu32i_BFu7i()
{
  {
    init_simple_test("aUc_BFu32i_BFu7i");
    static STRUCT_IF_C aUc_BFu32i_BFu7i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_BFu7i");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aUc_BFu32i_BFu7i");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aUc_BFu32i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_BFu7i, aUc_BFu32i_BFu7i)
//============================================================================



static void Test_aUc_BFu32i_BFu7ll()
{
  {
    init_simple_test("aUc_BFu32i_BFu7ll");
    static STRUCT_IF_C aUc_BFu32i_BFu7ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_BFu7ll");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aUc_BFu32i_BFu7ll");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aUc_BFu32i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_BFu7ll, aUc_BFu32i_BFu7ll)
//============================================================================



static void Test_aUc_BFu32i_BFu7s()
{
  {
    init_simple_test("aUc_BFu32i_BFu7s");
    static STRUCT_IF_C aUc_BFu32i_BFu7s lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_BFu7s");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aUc_BFu32i_BFu7s");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aUc_BFu32i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_BFu7s, aUc_BFu32i_BFu7s)
//============================================================================



static void Test_aUc_BFu32i_BFu8c()
{
  {
    init_simple_test("aUc_BFu32i_BFu8c");
    static STRUCT_IF_C aUc_BFu32i_BFu8c lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_BFu8c");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aUc_BFu32i_BFu8c");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aUc_BFu32i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_BFu8c, aUc_BFu32i_BFu8c)
//============================================================================



static void Test_aUc_BFu32i_BFu8i()
{
  {
    init_simple_test("aUc_BFu32i_BFu8i");
    static STRUCT_IF_C aUc_BFu32i_BFu8i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_BFu8i");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aUc_BFu32i_BFu8i");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aUc_BFu32i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_BFu8i, aUc_BFu32i_BFu8i)
//============================================================================



static void Test_aUc_BFu32i_BFu8ll()
{
  {
    init_simple_test("aUc_BFu32i_BFu8ll");
    static STRUCT_IF_C aUc_BFu32i_BFu8ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_BFu8ll");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aUc_BFu32i_BFu8ll");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aUc_BFu32i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_BFu8ll, aUc_BFu32i_BFu8ll)
//============================================================================



static void Test_aUc_BFu32i_BFu8s()
{
  {
    init_simple_test("aUc_BFu32i_BFu8s");
    static STRUCT_IF_C aUc_BFu32i_BFu8s lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_BFu8s");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aUc_BFu32i_BFu8s");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aUc_BFu32i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_BFu8s, aUc_BFu32i_BFu8s)
//============================================================================



static void Test_aUc_BFu32i_BFu9i()
{
  {
    init_simple_test("aUc_BFu32i_BFu9i");
    static STRUCT_IF_C aUc_BFu32i_BFu9i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu32i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_BFu9i");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aUc_BFu32i_BFu9i");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aUc_BFu32i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_BFu9i, aUc_BFu32i_BFu9i)
//============================================================================



static void Test_aUc_BFu32i_BFu9ll()
{
  {
    init_simple_test("aUc_BFu32i_BFu9ll");
    static STRUCT_IF_C aUc_BFu32i_BFu9ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu32i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_BFu9ll");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aUc_BFu32i_BFu9ll");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aUc_BFu32i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_BFu9ll, aUc_BFu32i_BFu9ll)
//============================================================================



static void Test_aUc_BFu32i_BFu9s()
{
  {
    init_simple_test("aUc_BFu32i_BFu9s");
    static STRUCT_IF_C aUc_BFu32i_BFu9s lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu32i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_BFu9s");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aUc_BFu32i_BFu9s");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aUc_BFu32i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_BFu9s, aUc_BFu32i_BFu9s)
//============================================================================



static void Test_aUc_BFu32i_C()
{
  {
    init_simple_test("aUc_BFu32i_C");
    static STRUCT_IF_C aUc_BFu32i_C lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_C)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_C");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_C");
    check_field_offset(lv, v3, 5, "aUc_BFu32i_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_C, aUc_BFu32i_C)
//============================================================================



static void Test_aUc_BFu32i_D()
{
  {
    init_simple_test("aUc_BFu32i_D");
    static STRUCT_IF_C aUc_BFu32i_D lv;
    check2(sizeof(lv), 13, "sizeof(aUc_BFu32i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_D)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_D");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_D");
    check_field_offset(lv, v3, 5, "aUc_BFu32i_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_D, aUc_BFu32i_D)
//============================================================================



static void Test_aUc_BFu32i_F()
{
  {
    init_simple_test("aUc_BFu32i_F");
    static STRUCT_IF_C aUc_BFu32i_F lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu32i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_F)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_F");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_F");
    check_field_offset(lv, v3, 5, "aUc_BFu32i_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_F, aUc_BFu32i_F)
//============================================================================



static void Test_aUc_BFu32i_I()
{
  {
    init_simple_test("aUc_BFu32i_I");
    static STRUCT_IF_C aUc_BFu32i_I lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu32i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_I)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_I");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_I");
    check_field_offset(lv, v3, 5, "aUc_BFu32i_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_I, aUc_BFu32i_I)
//============================================================================



static void Test_aUc_BFu32i_Ip()
{
  {
    init_simple_test("aUc_BFu32i_Ip");
    static STRUCT_IF_C aUc_BFu32i_Ip lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aUc_BFu32i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_Ip)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_Ip");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_Ip");
    check_field_offset(lv, v3, 5, "aUc_BFu32i_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_Ip, aUc_BFu32i_Ip)
//============================================================================



static void Test_aUc_BFu32i_L()
{
  {
    init_simple_test("aUc_BFu32i_L");
    static STRUCT_IF_C aUc_BFu32i_L lv;
    check2(sizeof(lv), 13, "sizeof(aUc_BFu32i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_L)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_L");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_L");
    check_field_offset(lv, v3, 5, "aUc_BFu32i_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_L, aUc_BFu32i_L)
//============================================================================



static void Test_aUc_BFu32i_S()
{
  {
    init_simple_test("aUc_BFu32i_S");
    static STRUCT_IF_C aUc_BFu32i_S lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu32i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_S)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_S");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_S");
    check_field_offset(lv, v3, 5, "aUc_BFu32i_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_S, aUc_BFu32i_S)
//============================================================================



static void Test_aUc_BFu32i_Uc()
{
  {
    init_simple_test("aUc_BFu32i_Uc");
    static STRUCT_IF_C aUc_BFu32i_Uc lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_Uc)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_Uc");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_Uc");
    check_field_offset(lv, v3, 5, "aUc_BFu32i_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_Uc, aUc_BFu32i_Uc)
//============================================================================



static void Test_aUc_BFu32i_Ui()
{
  {
    init_simple_test("aUc_BFu32i_Ui");
    static STRUCT_IF_C aUc_BFu32i_Ui lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu32i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_Ui)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_Ui");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_Ui");
    check_field_offset(lv, v3, 5, "aUc_BFu32i_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_Ui, aUc_BFu32i_Ui)
//============================================================================



static void Test_aUc_BFu32i_Ul()
{
  {
    init_simple_test("aUc_BFu32i_Ul");
    static STRUCT_IF_C aUc_BFu32i_Ul lv;
    check2(sizeof(lv), 13, "sizeof(aUc_BFu32i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_Ul)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_Ul");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_Ul");
    check_field_offset(lv, v3, 5, "aUc_BFu32i_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_Ul, aUc_BFu32i_Ul)
//============================================================================



static void Test_aUc_BFu32i_Us()
{
  {
    init_simple_test("aUc_BFu32i_Us");
    static STRUCT_IF_C aUc_BFu32i_Us lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu32i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_Us)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_Us");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_Us");
    check_field_offset(lv, v3, 5, "aUc_BFu32i_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_Us, aUc_BFu32i_Us)
//============================================================================



static void Test_aUc_BFu32i_Vp()
{
  {
    init_simple_test("aUc_BFu32i_Vp");
    static STRUCT_IF_C aUc_BFu32i_Vp lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aUc_BFu32i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32i_Vp)");
    check_field_offset(lv, v1, 0, "aUc_BFu32i_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32i_Vp");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32i_Vp");
    check_field_offset(lv, v3, 5, "aUc_BFu32i_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32i_Vp, aUc_BFu32i_Vp)
//============================================================================



static void Test_aUc_BFu32ll()
{
  {
    init_simple_test("aUc_BFu32ll");
    static STRUCT_IF_C aUc_BFu32ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll, aUc_BFu32ll)
//============================================================================



static void Test_aUc_BFu32ll_BFu15i()
{
  {
    init_simple_test("aUc_BFu32ll_BFu15i");
    static STRUCT_IF_C aUc_BFu32ll_BFu15i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu32ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_BFu15i");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aUc_BFu32ll_BFu15i");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aUc_BFu32ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_BFu15i, aUc_BFu32ll_BFu15i)
//============================================================================



static void Test_aUc_BFu32ll_BFu15ll()
{
  {
    init_simple_test("aUc_BFu32ll_BFu15ll");
    static STRUCT_IF_C aUc_BFu32ll_BFu15ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu32ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_BFu15ll");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aUc_BFu32ll_BFu15ll");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aUc_BFu32ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_BFu15ll, aUc_BFu32ll_BFu15ll)
//============================================================================



static void Test_aUc_BFu32ll_BFu15s()
{
  {
    init_simple_test("aUc_BFu32ll_BFu15s");
    static STRUCT_IF_C aUc_BFu32ll_BFu15s lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu32ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_BFu15s");
    set_bf_and_test(lv, v3, 5, 0, 15, 1, "aUc_BFu32ll_BFu15s");
    set_bf_and_test(lv, v3, 5, 0, 15, hide_ull(1LL<<14), "aUc_BFu32ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_BFu15s, aUc_BFu32ll_BFu15s)
//============================================================================



static void Test_aUc_BFu32ll_BFu16i()
{
  {
    init_simple_test("aUc_BFu32ll_BFu16i");
    static STRUCT_IF_C aUc_BFu32ll_BFu16i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu32ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_BFu16i");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aUc_BFu32ll_BFu16i");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aUc_BFu32ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_BFu16i, aUc_BFu32ll_BFu16i)
//============================================================================



static void Test_aUc_BFu32ll_BFu16ll()
{
  {
    init_simple_test("aUc_BFu32ll_BFu16ll");
    static STRUCT_IF_C aUc_BFu32ll_BFu16ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu32ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_BFu16ll");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aUc_BFu32ll_BFu16ll");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aUc_BFu32ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_BFu16ll, aUc_BFu32ll_BFu16ll)
//============================================================================



static void Test_aUc_BFu32ll_BFu16s()
{
  {
    init_simple_test("aUc_BFu32ll_BFu16s");
    static STRUCT_IF_C aUc_BFu32ll_BFu16s lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu32ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_BFu16s");
    set_bf_and_test(lv, v3, 5, 0, 16, 1, "aUc_BFu32ll_BFu16s");
    set_bf_and_test(lv, v3, 5, 0, 16, hide_ull(1LL<<15), "aUc_BFu32ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_BFu16s, aUc_BFu32ll_BFu16s)
//============================================================================



static void Test_aUc_BFu32ll_BFu17i()
{
  {
    init_simple_test("aUc_BFu32ll_BFu17i");
    static STRUCT_IF_C aUc_BFu32ll_BFu17i lv;
    check2(sizeof(lv), 8, "sizeof(aUc_BFu32ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_BFu17i");
    set_bf_and_test(lv, v3, 5, 0, 17, 1, "aUc_BFu32ll_BFu17i");
    set_bf_and_test(lv, v3, 5, 0, 17, hide_ull(1LL<<16), "aUc_BFu32ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_BFu17i, aUc_BFu32ll_BFu17i)
//============================================================================



static void Test_aUc_BFu32ll_BFu17ll()
{
  {
    init_simple_test("aUc_BFu32ll_BFu17ll");
    static STRUCT_IF_C aUc_BFu32ll_BFu17ll lv;
    check2(sizeof(lv), 8, "sizeof(aUc_BFu32ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_BFu17ll");
    set_bf_and_test(lv, v3, 5, 0, 17, 1, "aUc_BFu32ll_BFu17ll");
    set_bf_and_test(lv, v3, 5, 0, 17, hide_ull(1LL<<16), "aUc_BFu32ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_BFu17ll, aUc_BFu32ll_BFu17ll)
//============================================================================



static void Test_aUc_BFu32ll_BFu1c()
{
  {
    init_simple_test("aUc_BFu32ll_BFu1c");
    static STRUCT_IF_C aUc_BFu32ll_BFu1c lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_BFu1c");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aUc_BFu32ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_BFu1c, aUc_BFu32ll_BFu1c)
//============================================================================



static void Test_aUc_BFu32ll_BFu1i()
{
  {
    init_simple_test("aUc_BFu32ll_BFu1i");
    static STRUCT_IF_C aUc_BFu32ll_BFu1i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_BFu1i");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aUc_BFu32ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_BFu1i, aUc_BFu32ll_BFu1i)
//============================================================================



static void Test_aUc_BFu32ll_BFu1ll()
{
  {
    init_simple_test("aUc_BFu32ll_BFu1ll");
    static STRUCT_IF_C aUc_BFu32ll_BFu1ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_BFu1ll");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aUc_BFu32ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_BFu1ll, aUc_BFu32ll_BFu1ll)
//============================================================================



static void Test_aUc_BFu32ll_BFu1s()
{
  {
    init_simple_test("aUc_BFu32ll_BFu1s");
    static STRUCT_IF_C aUc_BFu32ll_BFu1s lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_BFu1s");
    set_bf_and_test(lv, v3, 5, 0, 1, 1, "aUc_BFu32ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_BFu1s, aUc_BFu32ll_BFu1s)
//============================================================================



static void Test_aUc_BFu32ll_BFu31i()
{
  {
    init_simple_test("aUc_BFu32ll_BFu31i");
    static STRUCT_IF_C aUc_BFu32ll_BFu31i lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu32ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_BFu31i");
    set_bf_and_test(lv, v3, 5, 0, 31, 1, "aUc_BFu32ll_BFu31i");
    set_bf_and_test(lv, v3, 5, 0, 31, hide_ull(1LL<<30), "aUc_BFu32ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_BFu31i, aUc_BFu32ll_BFu31i)
//============================================================================



static void Test_aUc_BFu32ll_BFu31ll()
{
  {
    init_simple_test("aUc_BFu32ll_BFu31ll");
    static STRUCT_IF_C aUc_BFu32ll_BFu31ll lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu32ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_BFu31ll");
    set_bf_and_test(lv, v3, 5, 0, 31, 1, "aUc_BFu32ll_BFu31ll");
    set_bf_and_test(lv, v3, 5, 0, 31, hide_ull(1LL<<30), "aUc_BFu32ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_BFu31ll, aUc_BFu32ll_BFu31ll)
//============================================================================



static void Test_aUc_BFu32ll_BFu32i()
{
  {
    init_simple_test("aUc_BFu32ll_BFu32i");
    static STRUCT_IF_C aUc_BFu32ll_BFu32i lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu32ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_BFu32i");
    set_bf_and_test(lv, v3, 5, 0, 32, 1, "aUc_BFu32ll_BFu32i");
    set_bf_and_test(lv, v3, 5, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_BFu32i, aUc_BFu32ll_BFu32i)
//============================================================================



static void Test_aUc_BFu32ll_BFu32ll()
{
  {
    init_simple_test("aUc_BFu32ll_BFu32ll");
    static STRUCT_IF_C aUc_BFu32ll_BFu32ll lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu32ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_BFu32ll");
    set_bf_and_test(lv, v3, 5, 0, 32, 1, "aUc_BFu32ll_BFu32ll");
    set_bf_and_test(lv, v3, 5, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_BFu32ll, aUc_BFu32ll_BFu32ll)
//============================================================================



static void Test_aUc_BFu32ll_BFu33()
{
  {
    init_simple_test("aUc_BFu32ll_BFu33");
    static STRUCT_IF_C aUc_BFu32ll_BFu33 lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu32ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_BFu33");
    set_bf_and_test(lv, v3, 5, 0, 33, 1, "aUc_BFu32ll_BFu33");
    set_bf_and_test(lv, v3, 5, 0, 33, hide_ull(1LL<<32), "aUc_BFu32ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_BFu33, aUc_BFu32ll_BFu33)
//============================================================================



static void Test_aUc_BFu32ll_BFu7c()
{
  {
    init_simple_test("aUc_BFu32ll_BFu7c");
    static STRUCT_IF_C aUc_BFu32ll_BFu7c lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_BFu7c");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aUc_BFu32ll_BFu7c");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aUc_BFu32ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_BFu7c, aUc_BFu32ll_BFu7c)
//============================================================================



static void Test_aUc_BFu32ll_BFu7i()
{
  {
    init_simple_test("aUc_BFu32ll_BFu7i");
    static STRUCT_IF_C aUc_BFu32ll_BFu7i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_BFu7i");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aUc_BFu32ll_BFu7i");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aUc_BFu32ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_BFu7i, aUc_BFu32ll_BFu7i)
//============================================================================



static void Test_aUc_BFu32ll_BFu7ll()
{
  {
    init_simple_test("aUc_BFu32ll_BFu7ll");
    static STRUCT_IF_C aUc_BFu32ll_BFu7ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_BFu7ll");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aUc_BFu32ll_BFu7ll");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aUc_BFu32ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_BFu7ll, aUc_BFu32ll_BFu7ll)
//============================================================================



static void Test_aUc_BFu32ll_BFu7s()
{
  {
    init_simple_test("aUc_BFu32ll_BFu7s");
    static STRUCT_IF_C aUc_BFu32ll_BFu7s lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_BFu7s");
    set_bf_and_test(lv, v3, 5, 0, 7, 1, "aUc_BFu32ll_BFu7s");
    set_bf_and_test(lv, v3, 5, 0, 7, hide_ull(1LL<<6), "aUc_BFu32ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_BFu7s, aUc_BFu32ll_BFu7s)
//============================================================================



static void Test_aUc_BFu32ll_BFu8c()
{
  {
    init_simple_test("aUc_BFu32ll_BFu8c");
    static STRUCT_IF_C aUc_BFu32ll_BFu8c lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_BFu8c");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aUc_BFu32ll_BFu8c");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aUc_BFu32ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_BFu8c, aUc_BFu32ll_BFu8c)
//============================================================================



static void Test_aUc_BFu32ll_BFu8i()
{
  {
    init_simple_test("aUc_BFu32ll_BFu8i");
    static STRUCT_IF_C aUc_BFu32ll_BFu8i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_BFu8i");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aUc_BFu32ll_BFu8i");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aUc_BFu32ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_BFu8i, aUc_BFu32ll_BFu8i)
//============================================================================



static void Test_aUc_BFu32ll_BFu8ll()
{
  {
    init_simple_test("aUc_BFu32ll_BFu8ll");
    static STRUCT_IF_C aUc_BFu32ll_BFu8ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_BFu8ll");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aUc_BFu32ll_BFu8ll");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aUc_BFu32ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_BFu8ll, aUc_BFu32ll_BFu8ll)
//============================================================================



static void Test_aUc_BFu32ll_BFu8s()
{
  {
    init_simple_test("aUc_BFu32ll_BFu8s");
    static STRUCT_IF_C aUc_BFu32ll_BFu8s lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_BFu8s");
    set_bf_and_test(lv, v3, 5, 0, 8, 1, "aUc_BFu32ll_BFu8s");
    set_bf_and_test(lv, v3, 5, 0, 8, hide_ull(1LL<<7), "aUc_BFu32ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_BFu8s, aUc_BFu32ll_BFu8s)
//============================================================================



static void Test_aUc_BFu32ll_BFu9i()
{
  {
    init_simple_test("aUc_BFu32ll_BFu9i");
    static STRUCT_IF_C aUc_BFu32ll_BFu9i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu32ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_BFu9i");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aUc_BFu32ll_BFu9i");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aUc_BFu32ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_BFu9i, aUc_BFu32ll_BFu9i)
//============================================================================



static void Test_aUc_BFu32ll_BFu9ll()
{
  {
    init_simple_test("aUc_BFu32ll_BFu9ll");
    static STRUCT_IF_C aUc_BFu32ll_BFu9ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu32ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_BFu9ll");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aUc_BFu32ll_BFu9ll");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aUc_BFu32ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_BFu9ll, aUc_BFu32ll_BFu9ll)
//============================================================================



static void Test_aUc_BFu32ll_BFu9s()
{
  {
    init_simple_test("aUc_BFu32ll_BFu9s");
    static STRUCT_IF_C aUc_BFu32ll_BFu9s lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu32ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_BFu9s");
    set_bf_and_test(lv, v3, 5, 0, 9, 1, "aUc_BFu32ll_BFu9s");
    set_bf_and_test(lv, v3, 5, 0, 9, hide_ull(1LL<<8), "aUc_BFu32ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_BFu9s, aUc_BFu32ll_BFu9s)
//============================================================================



static void Test_aUc_BFu32ll_C()
{
  {
    init_simple_test("aUc_BFu32ll_C");
    static STRUCT_IF_C aUc_BFu32ll_C lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_C)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_C");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_C");
    check_field_offset(lv, v3, 5, "aUc_BFu32ll_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_C, aUc_BFu32ll_C)
//============================================================================



static void Test_aUc_BFu32ll_D()
{
  {
    init_simple_test("aUc_BFu32ll_D");
    static STRUCT_IF_C aUc_BFu32ll_D lv;
    check2(sizeof(lv), 13, "sizeof(aUc_BFu32ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_D)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_D");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_D");
    check_field_offset(lv, v3, 5, "aUc_BFu32ll_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_D, aUc_BFu32ll_D)
//============================================================================



static void Test_aUc_BFu32ll_F()
{
  {
    init_simple_test("aUc_BFu32ll_F");
    static STRUCT_IF_C aUc_BFu32ll_F lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu32ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_F)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_F");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_F");
    check_field_offset(lv, v3, 5, "aUc_BFu32ll_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_F, aUc_BFu32ll_F)
//============================================================================



static void Test_aUc_BFu32ll_I()
{
  {
    init_simple_test("aUc_BFu32ll_I");
    static STRUCT_IF_C aUc_BFu32ll_I lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu32ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_I)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_I");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_I");
    check_field_offset(lv, v3, 5, "aUc_BFu32ll_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_I, aUc_BFu32ll_I)
//============================================================================



static void Test_aUc_BFu32ll_Ip()
{
  {
    init_simple_test("aUc_BFu32ll_Ip");
    static STRUCT_IF_C aUc_BFu32ll_Ip lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aUc_BFu32ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_Ip)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_Ip");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_Ip");
    check_field_offset(lv, v3, 5, "aUc_BFu32ll_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_Ip, aUc_BFu32ll_Ip)
//============================================================================



static void Test_aUc_BFu32ll_L()
{
  {
    init_simple_test("aUc_BFu32ll_L");
    static STRUCT_IF_C aUc_BFu32ll_L lv;
    check2(sizeof(lv), 13, "sizeof(aUc_BFu32ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_L)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_L");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_L");
    check_field_offset(lv, v3, 5, "aUc_BFu32ll_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_L, aUc_BFu32ll_L)
//============================================================================



static void Test_aUc_BFu32ll_S()
{
  {
    init_simple_test("aUc_BFu32ll_S");
    static STRUCT_IF_C aUc_BFu32ll_S lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu32ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_S)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_S");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_S");
    check_field_offset(lv, v3, 5, "aUc_BFu32ll_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_S, aUc_BFu32ll_S)
//============================================================================



static void Test_aUc_BFu32ll_Uc()
{
  {
    init_simple_test("aUc_BFu32ll_Uc");
    static STRUCT_IF_C aUc_BFu32ll_Uc lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu32ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_Uc)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_Uc");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_Uc");
    check_field_offset(lv, v3, 5, "aUc_BFu32ll_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_Uc, aUc_BFu32ll_Uc)
//============================================================================



static void Test_aUc_BFu32ll_Ui()
{
  {
    init_simple_test("aUc_BFu32ll_Ui");
    static STRUCT_IF_C aUc_BFu32ll_Ui lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu32ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_Ui)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_Ui");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_Ui");
    check_field_offset(lv, v3, 5, "aUc_BFu32ll_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_Ui, aUc_BFu32ll_Ui)
//============================================================================



static void Test_aUc_BFu32ll_Ul()
{
  {
    init_simple_test("aUc_BFu32ll_Ul");
    static STRUCT_IF_C aUc_BFu32ll_Ul lv;
    check2(sizeof(lv), 13, "sizeof(aUc_BFu32ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_Ul)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_Ul");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_Ul");
    check_field_offset(lv, v3, 5, "aUc_BFu32ll_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_Ul, aUc_BFu32ll_Ul)
//============================================================================



static void Test_aUc_BFu32ll_Us()
{
  {
    init_simple_test("aUc_BFu32ll_Us");
    static STRUCT_IF_C aUc_BFu32ll_Us lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu32ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_Us)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_Us");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_Us");
    check_field_offset(lv, v3, 5, "aUc_BFu32ll_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_Us, aUc_BFu32ll_Us)
//============================================================================



static void Test_aUc_BFu32ll_Vp()
{
  {
    init_simple_test("aUc_BFu32ll_Vp");
    static STRUCT_IF_C aUc_BFu32ll_Vp lv;
    check2(sizeof(lv), ABISELECT(13,9), "sizeof(aUc_BFu32ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu32ll_Vp)");
    check_field_offset(lv, v1, 0, "aUc_BFu32ll_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 32, 1, "aUc_BFu32ll_Vp");
    set_bf_and_test(lv, v2, 1, 0, 32, hide_ull(1LL<<31), "aUc_BFu32ll_Vp");
    check_field_offset(lv, v3, 5, "aUc_BFu32ll_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu32ll_Vp, aUc_BFu32ll_Vp)
//============================================================================



static void Test_aUc_BFu33()
{
  {
    init_simple_test("aUc_BFu33");
    static STRUCT_IF_C aUc_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33, aUc_BFu33)
//============================================================================



static void Test_aUc_BFu33_BFu15i()
{
  {
    init_simple_test("aUc_BFu33_BFu15i");
    static STRUCT_IF_C aUc_BFu33_BFu15i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu33_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_BFu15i");
    set_bf_and_test(lv, v3, 5, 1, 15, 1, "aUc_BFu33_BFu15i");
    set_bf_and_test(lv, v3, 5, 1, 15, hide_ull(1LL<<14), "aUc_BFu33_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_BFu15i, aUc_BFu33_BFu15i)
//============================================================================



static void Test_aUc_BFu33_BFu15ll()
{
  {
    init_simple_test("aUc_BFu33_BFu15ll");
    static STRUCT_IF_C aUc_BFu33_BFu15ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu33_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_BFu15ll");
    set_bf_and_test(lv, v3, 5, 1, 15, 1, "aUc_BFu33_BFu15ll");
    set_bf_and_test(lv, v3, 5, 1, 15, hide_ull(1LL<<14), "aUc_BFu33_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_BFu15ll, aUc_BFu33_BFu15ll)
//============================================================================



static void Test_aUc_BFu33_BFu15s()
{
  {
    init_simple_test("aUc_BFu33_BFu15s");
    static STRUCT_IF_C aUc_BFu33_BFu15s lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu33_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_BFu15s");
    set_bf_and_test(lv, v3, 5, 1, 15, 1, "aUc_BFu33_BFu15s");
    set_bf_and_test(lv, v3, 5, 1, 15, hide_ull(1LL<<14), "aUc_BFu33_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_BFu15s, aUc_BFu33_BFu15s)
//============================================================================



static void Test_aUc_BFu33_BFu16i()
{
  {
    init_simple_test("aUc_BFu33_BFu16i");
    static STRUCT_IF_C aUc_BFu33_BFu16i lv;
    check2(sizeof(lv), 8, "sizeof(aUc_BFu33_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_BFu16i");
    set_bf_and_test(lv, v3, 5, 1, 16, 1, "aUc_BFu33_BFu16i");
    set_bf_and_test(lv, v3, 5, 1, 16, hide_ull(1LL<<15), "aUc_BFu33_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_BFu16i, aUc_BFu33_BFu16i)
//============================================================================



static void Test_aUc_BFu33_BFu16ll()
{
  {
    init_simple_test("aUc_BFu33_BFu16ll");
    static STRUCT_IF_C aUc_BFu33_BFu16ll lv;
    check2(sizeof(lv), 8, "sizeof(aUc_BFu33_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_BFu16ll");
    set_bf_and_test(lv, v3, 5, 1, 16, 1, "aUc_BFu33_BFu16ll");
    set_bf_and_test(lv, v3, 5, 1, 16, hide_ull(1LL<<15), "aUc_BFu33_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_BFu16ll, aUc_BFu33_BFu16ll)
//============================================================================



static void Test_aUc_BFu33_BFu16s()
{
  {
    init_simple_test("aUc_BFu33_BFu16s");
    static STRUCT_IF_C aUc_BFu33_BFu16s lv;
    check2(sizeof(lv), 8, "sizeof(aUc_BFu33_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_BFu16s");
    set_bf_and_test(lv, v3, 5, 1, 16, 1, "aUc_BFu33_BFu16s");
    set_bf_and_test(lv, v3, 5, 1, 16, hide_ull(1LL<<15), "aUc_BFu33_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_BFu16s, aUc_BFu33_BFu16s)
//============================================================================



static void Test_aUc_BFu33_BFu17i()
{
  {
    init_simple_test("aUc_BFu33_BFu17i");
    static STRUCT_IF_C aUc_BFu33_BFu17i lv;
    check2(sizeof(lv), 8, "sizeof(aUc_BFu33_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_BFu17i");
    set_bf_and_test(lv, v3, 5, 1, 17, 1, "aUc_BFu33_BFu17i");
    set_bf_and_test(lv, v3, 5, 1, 17, hide_ull(1LL<<16), "aUc_BFu33_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_BFu17i, aUc_BFu33_BFu17i)
//============================================================================



static void Test_aUc_BFu33_BFu17ll()
{
  {
    init_simple_test("aUc_BFu33_BFu17ll");
    static STRUCT_IF_C aUc_BFu33_BFu17ll lv;
    check2(sizeof(lv), 8, "sizeof(aUc_BFu33_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_BFu17ll");
    set_bf_and_test(lv, v3, 5, 1, 17, 1, "aUc_BFu33_BFu17ll");
    set_bf_and_test(lv, v3, 5, 1, 17, hide_ull(1LL<<16), "aUc_BFu33_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_BFu17ll, aUc_BFu33_BFu17ll)
//============================================================================



static void Test_aUc_BFu33_BFu1c()
{
  {
    init_simple_test("aUc_BFu33_BFu1c");
    static STRUCT_IF_C aUc_BFu33_BFu1c lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu33_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_BFu1c");
    set_bf_and_test(lv, v3, 5, 1, 1, 1, "aUc_BFu33_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_BFu1c, aUc_BFu33_BFu1c)
//============================================================================



static void Test_aUc_BFu33_BFu1i()
{
  {
    init_simple_test("aUc_BFu33_BFu1i");
    static STRUCT_IF_C aUc_BFu33_BFu1i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu33_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_BFu1i");
    set_bf_and_test(lv, v3, 5, 1, 1, 1, "aUc_BFu33_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_BFu1i, aUc_BFu33_BFu1i)
//============================================================================



static void Test_aUc_BFu33_BFu1ll()
{
  {
    init_simple_test("aUc_BFu33_BFu1ll");
    static STRUCT_IF_C aUc_BFu33_BFu1ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu33_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_BFu1ll");
    set_bf_and_test(lv, v3, 5, 1, 1, 1, "aUc_BFu33_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_BFu1ll, aUc_BFu33_BFu1ll)
//============================================================================



static void Test_aUc_BFu33_BFu1s()
{
  {
    init_simple_test("aUc_BFu33_BFu1s");
    static STRUCT_IF_C aUc_BFu33_BFu1s lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu33_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_BFu1s");
    set_bf_and_test(lv, v3, 5, 1, 1, 1, "aUc_BFu33_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_BFu1s, aUc_BFu33_BFu1s)
//============================================================================



static void Test_aUc_BFu33_BFu31i()
{
  {
    init_simple_test("aUc_BFu33_BFu31i");
    static STRUCT_IF_C aUc_BFu33_BFu31i lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu33_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_BFu31i");
    set_bf_and_test(lv, v3, 5, 1, 31, 1, "aUc_BFu33_BFu31i");
    set_bf_and_test(lv, v3, 5, 1, 31, hide_ull(1LL<<30), "aUc_BFu33_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_BFu31i, aUc_BFu33_BFu31i)
//============================================================================



static void Test_aUc_BFu33_BFu31ll()
{
  {
    init_simple_test("aUc_BFu33_BFu31ll");
    static STRUCT_IF_C aUc_BFu33_BFu31ll lv;
    check2(sizeof(lv), 9, "sizeof(aUc_BFu33_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_BFu31ll");
    set_bf_and_test(lv, v3, 5, 1, 31, 1, "aUc_BFu33_BFu31ll");
    set_bf_and_test(lv, v3, 5, 1, 31, hide_ull(1LL<<30), "aUc_BFu33_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_BFu31ll, aUc_BFu33_BFu31ll)
//============================================================================



static void Test_aUc_BFu33_BFu32i()
{
  {
    init_simple_test("aUc_BFu33_BFu32i");
    static STRUCT_IF_C aUc_BFu33_BFu32i lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu33_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_BFu32i");
    set_bf_and_test(lv, v3, 5, 1, 32, 1, "aUc_BFu33_BFu32i");
    set_bf_and_test(lv, v3, 5, 1, 32, hide_ull(1LL<<31), "aUc_BFu33_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_BFu32i, aUc_BFu33_BFu32i)
//============================================================================



static void Test_aUc_BFu33_BFu32ll()
{
  {
    init_simple_test("aUc_BFu33_BFu32ll");
    static STRUCT_IF_C aUc_BFu33_BFu32ll lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu33_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_BFu32ll");
    set_bf_and_test(lv, v3, 5, 1, 32, 1, "aUc_BFu33_BFu32ll");
    set_bf_and_test(lv, v3, 5, 1, 32, hide_ull(1LL<<31), "aUc_BFu33_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_BFu32ll, aUc_BFu33_BFu32ll)
//============================================================================



static void Test_aUc_BFu33_BFu33()
{
  {
    init_simple_test("aUc_BFu33_BFu33");
    static STRUCT_IF_C aUc_BFu33_BFu33 lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu33_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_BFu33");
    set_bf_and_test(lv, v3, 5, 1, 33, 1, "aUc_BFu33_BFu33");
    set_bf_and_test(lv, v3, 5, 1, 33, hide_ull(1LL<<32), "aUc_BFu33_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_BFu33, aUc_BFu33_BFu33)
//============================================================================



static void Test_aUc_BFu33_BFu7c()
{
  {
    init_simple_test("aUc_BFu33_BFu7c");
    static STRUCT_IF_C aUc_BFu33_BFu7c lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu33_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_BFu7c");
    set_bf_and_test(lv, v3, 5, 1, 7, 1, "aUc_BFu33_BFu7c");
    set_bf_and_test(lv, v3, 5, 1, 7, hide_ull(1LL<<6), "aUc_BFu33_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_BFu7c, aUc_BFu33_BFu7c)
//============================================================================



static void Test_aUc_BFu33_BFu7i()
{
  {
    init_simple_test("aUc_BFu33_BFu7i");
    static STRUCT_IF_C aUc_BFu33_BFu7i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu33_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_BFu7i");
    set_bf_and_test(lv, v3, 5, 1, 7, 1, "aUc_BFu33_BFu7i");
    set_bf_and_test(lv, v3, 5, 1, 7, hide_ull(1LL<<6), "aUc_BFu33_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_BFu7i, aUc_BFu33_BFu7i)
//============================================================================



static void Test_aUc_BFu33_BFu7ll()
{
  {
    init_simple_test("aUc_BFu33_BFu7ll");
    static STRUCT_IF_C aUc_BFu33_BFu7ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu33_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_BFu7ll");
    set_bf_and_test(lv, v3, 5, 1, 7, 1, "aUc_BFu33_BFu7ll");
    set_bf_and_test(lv, v3, 5, 1, 7, hide_ull(1LL<<6), "aUc_BFu33_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_BFu7ll, aUc_BFu33_BFu7ll)
//============================================================================



static void Test_aUc_BFu33_BFu7s()
{
  {
    init_simple_test("aUc_BFu33_BFu7s");
    static STRUCT_IF_C aUc_BFu33_BFu7s lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu33_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_BFu7s");
    set_bf_and_test(lv, v3, 5, 1, 7, 1, "aUc_BFu33_BFu7s");
    set_bf_and_test(lv, v3, 5, 1, 7, hide_ull(1LL<<6), "aUc_BFu33_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_BFu7s, aUc_BFu33_BFu7s)
//============================================================================



static void Test_aUc_BFu33_BFu8c()
{
  {
    init_simple_test("aUc_BFu33_BFu8c");
    static STRUCT_IF_C aUc_BFu33_BFu8c lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu33_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_BFu8c");
    set_bf_and_test(lv, v3, 5, 1, 8, 1, "aUc_BFu33_BFu8c");
    set_bf_and_test(lv, v3, 5, 1, 8, hide_ull(1LL<<7), "aUc_BFu33_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_BFu8c, aUc_BFu33_BFu8c)
//============================================================================



static void Test_aUc_BFu33_BFu8i()
{
  {
    init_simple_test("aUc_BFu33_BFu8i");
    static STRUCT_IF_C aUc_BFu33_BFu8i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu33_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_BFu8i");
    set_bf_and_test(lv, v3, 5, 1, 8, 1, "aUc_BFu33_BFu8i");
    set_bf_and_test(lv, v3, 5, 1, 8, hide_ull(1LL<<7), "aUc_BFu33_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_BFu8i, aUc_BFu33_BFu8i)
//============================================================================



static void Test_aUc_BFu33_BFu8ll()
{
  {
    init_simple_test("aUc_BFu33_BFu8ll");
    static STRUCT_IF_C aUc_BFu33_BFu8ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu33_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_BFu8ll");
    set_bf_and_test(lv, v3, 5, 1, 8, 1, "aUc_BFu33_BFu8ll");
    set_bf_and_test(lv, v3, 5, 1, 8, hide_ull(1LL<<7), "aUc_BFu33_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_BFu8ll, aUc_BFu33_BFu8ll)
//============================================================================



static void Test_aUc_BFu33_BFu8s()
{
  {
    init_simple_test("aUc_BFu33_BFu8s");
    static STRUCT_IF_C aUc_BFu33_BFu8s lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu33_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_BFu8s");
    set_bf_and_test(lv, v3, 5, 1, 8, 1, "aUc_BFu33_BFu8s");
    set_bf_and_test(lv, v3, 5, 1, 8, hide_ull(1LL<<7), "aUc_BFu33_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_BFu8s, aUc_BFu33_BFu8s)
//============================================================================



static void Test_aUc_BFu33_BFu9i()
{
  {
    init_simple_test("aUc_BFu33_BFu9i");
    static STRUCT_IF_C aUc_BFu33_BFu9i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu33_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_BFu9i");
    set_bf_and_test(lv, v3, 5, 1, 9, 1, "aUc_BFu33_BFu9i");
    set_bf_and_test(lv, v3, 5, 1, 9, hide_ull(1LL<<8), "aUc_BFu33_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_BFu9i, aUc_BFu33_BFu9i)
//============================================================================



static void Test_aUc_BFu33_BFu9ll()
{
  {
    init_simple_test("aUc_BFu33_BFu9ll");
    static STRUCT_IF_C aUc_BFu33_BFu9ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu33_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_BFu9ll");
    set_bf_and_test(lv, v3, 5, 1, 9, 1, "aUc_BFu33_BFu9ll");
    set_bf_and_test(lv, v3, 5, 1, 9, hide_ull(1LL<<8), "aUc_BFu33_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_BFu9ll, aUc_BFu33_BFu9ll)
//============================================================================



static void Test_aUc_BFu33_BFu9s()
{
  {
    init_simple_test("aUc_BFu33_BFu9s");
    static STRUCT_IF_C aUc_BFu33_BFu9s lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu33_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_BFu9s");
    set_bf_and_test(lv, v3, 5, 1, 9, 1, "aUc_BFu33_BFu9s");
    set_bf_and_test(lv, v3, 5, 1, 9, hide_ull(1LL<<8), "aUc_BFu33_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_BFu9s, aUc_BFu33_BFu9s)
//============================================================================



static void Test_aUc_BFu33_C()
{
  {
    init_simple_test("aUc_BFu33_C");
    static STRUCT_IF_C aUc_BFu33_C lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu33_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_C)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_C");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_C");
    check_field_offset(lv, v3, 6, "aUc_BFu33_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_C, aUc_BFu33_C)
//============================================================================



static void Test_aUc_BFu33_D()
{
  {
    init_simple_test("aUc_BFu33_D");
    static STRUCT_IF_C aUc_BFu33_D lv;
    check2(sizeof(lv), 14, "sizeof(aUc_BFu33_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_D)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_D");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_D");
    check_field_offset(lv, v3, 6, "aUc_BFu33_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_D, aUc_BFu33_D)
//============================================================================



static void Test_aUc_BFu33_F()
{
  {
    init_simple_test("aUc_BFu33_F");
    static STRUCT_IF_C aUc_BFu33_F lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu33_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_F)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_F");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_F");
    check_field_offset(lv, v3, 6, "aUc_BFu33_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_F, aUc_BFu33_F)
//============================================================================



static void Test_aUc_BFu33_I()
{
  {
    init_simple_test("aUc_BFu33_I");
    static STRUCT_IF_C aUc_BFu33_I lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu33_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_I)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_I");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_I");
    check_field_offset(lv, v3, 6, "aUc_BFu33_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_I, aUc_BFu33_I)
//============================================================================



static void Test_aUc_BFu33_Ip()
{
  {
    init_simple_test("aUc_BFu33_Ip");
    static STRUCT_IF_C aUc_BFu33_Ip lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aUc_BFu33_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_Ip)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_Ip");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_Ip");
    check_field_offset(lv, v3, 6, "aUc_BFu33_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_Ip, aUc_BFu33_Ip)
//============================================================================



static void Test_aUc_BFu33_L()
{
  {
    init_simple_test("aUc_BFu33_L");
    static STRUCT_IF_C aUc_BFu33_L lv;
    check2(sizeof(lv), 14, "sizeof(aUc_BFu33_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_L)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_L");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_L");
    check_field_offset(lv, v3, 6, "aUc_BFu33_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_L, aUc_BFu33_L)
//============================================================================



static void Test_aUc_BFu33_S()
{
  {
    init_simple_test("aUc_BFu33_S");
    static STRUCT_IF_C aUc_BFu33_S lv;
    check2(sizeof(lv), 8, "sizeof(aUc_BFu33_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_S)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_S");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_S");
    check_field_offset(lv, v3, 6, "aUc_BFu33_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_S, aUc_BFu33_S)
//============================================================================



static void Test_aUc_BFu33_Uc()
{
  {
    init_simple_test("aUc_BFu33_Uc");
    static STRUCT_IF_C aUc_BFu33_Uc lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu33_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_Uc)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_Uc");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_Uc");
    check_field_offset(lv, v3, 6, "aUc_BFu33_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_Uc, aUc_BFu33_Uc)
//============================================================================



static void Test_aUc_BFu33_Ui()
{
  {
    init_simple_test("aUc_BFu33_Ui");
    static STRUCT_IF_C aUc_BFu33_Ui lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu33_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_Ui)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_Ui");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_Ui");
    check_field_offset(lv, v3, 6, "aUc_BFu33_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_Ui, aUc_BFu33_Ui)
//============================================================================



static void Test_aUc_BFu33_Ul()
{
  {
    init_simple_test("aUc_BFu33_Ul");
    static STRUCT_IF_C aUc_BFu33_Ul lv;
    check2(sizeof(lv), 14, "sizeof(aUc_BFu33_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_Ul)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_Ul");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_Ul");
    check_field_offset(lv, v3, 6, "aUc_BFu33_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_Ul, aUc_BFu33_Ul)
//============================================================================



static void Test_aUc_BFu33_Us()
{
  {
    init_simple_test("aUc_BFu33_Us");
    static STRUCT_IF_C aUc_BFu33_Us lv;
    check2(sizeof(lv), 8, "sizeof(aUc_BFu33_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_Us)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_Us");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_Us");
    check_field_offset(lv, v3, 6, "aUc_BFu33_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_Us, aUc_BFu33_Us)
//============================================================================



static void Test_aUc_BFu33_Vp()
{
  {
    init_simple_test("aUc_BFu33_Vp");
    static STRUCT_IF_C aUc_BFu33_Vp lv;
    check2(sizeof(lv), ABISELECT(14,10), "sizeof(aUc_BFu33_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu33_Vp)");
    check_field_offset(lv, v1, 0, "aUc_BFu33_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 33, 1, "aUc_BFu33_Vp");
    set_bf_and_test(lv, v2, 1, 0, 33, hide_ull(1LL<<32), "aUc_BFu33_Vp");
    check_field_offset(lv, v3, 6, "aUc_BFu33_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu33_Vp, aUc_BFu33_Vp)
//============================================================================



static void Test_aUc_BFu7c()
{
  {
    init_simple_test("aUc_BFu7c");
    static STRUCT_IF_C aUc_BFu7c lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c, aUc_BFu7c)
//============================================================================



static void Test_aUc_BFu7c_BFu15i()
{
  {
    init_simple_test("aUc_BFu7c_BFu15i");
    static STRUCT_IF_C aUc_BFu7c_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu15i");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "aUc_BFu7c_BFu15i");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "aUc_BFu7c_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_BFu15i, aUc_BFu7c_BFu15i)
//============================================================================



static void Test_aUc_BFu7c_BFu15ll()
{
  {
    init_simple_test("aUc_BFu7c_BFu15ll");
    static STRUCT_IF_C aUc_BFu7c_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu15ll");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "aUc_BFu7c_BFu15ll");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "aUc_BFu7c_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_BFu15ll, aUc_BFu7c_BFu15ll)
//============================================================================



static void Test_aUc_BFu7c_BFu15s()
{
  {
    init_simple_test("aUc_BFu7c_BFu15s");
    static STRUCT_IF_C aUc_BFu7c_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu15s");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "aUc_BFu7c_BFu15s");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "aUc_BFu7c_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_BFu15s, aUc_BFu7c_BFu15s)
//============================================================================



static void Test_aUc_BFu7c_BFu16i()
{
  {
    init_simple_test("aUc_BFu7c_BFu16i");
    static STRUCT_IF_C aUc_BFu7c_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu16i");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "aUc_BFu7c_BFu16i");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "aUc_BFu7c_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_BFu16i, aUc_BFu7c_BFu16i)
//============================================================================



static void Test_aUc_BFu7c_BFu16ll()
{
  {
    init_simple_test("aUc_BFu7c_BFu16ll");
    static STRUCT_IF_C aUc_BFu7c_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu16ll");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "aUc_BFu7c_BFu16ll");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "aUc_BFu7c_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_BFu16ll, aUc_BFu7c_BFu16ll)
//============================================================================



static void Test_aUc_BFu7c_BFu16s()
{
  {
    init_simple_test("aUc_BFu7c_BFu16s");
    static STRUCT_IF_C aUc_BFu7c_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu16s");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "aUc_BFu7c_BFu16s");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "aUc_BFu7c_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_BFu16s, aUc_BFu7c_BFu16s)
//============================================================================



static void Test_aUc_BFu7c_BFu17i()
{
  {
    init_simple_test("aUc_BFu7c_BFu17i");
    static STRUCT_IF_C aUc_BFu7c_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu17i");
    set_bf_and_test(lv, v3, 1, 7, 17, 1, "aUc_BFu7c_BFu17i");
    set_bf_and_test(lv, v3, 1, 7, 17, hide_ull(1LL<<16), "aUc_BFu7c_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_BFu17i, aUc_BFu7c_BFu17i)
//============================================================================



static void Test_aUc_BFu7c_BFu17ll()
{
  {
    init_simple_test("aUc_BFu7c_BFu17ll");
    static STRUCT_IF_C aUc_BFu7c_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu17ll");
    set_bf_and_test(lv, v3, 1, 7, 17, 1, "aUc_BFu7c_BFu17ll");
    set_bf_and_test(lv, v3, 1, 7, 17, hide_ull(1LL<<16), "aUc_BFu7c_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_BFu17ll, aUc_BFu7c_BFu17ll)
//============================================================================



static void Test_aUc_BFu7c_BFu1c()
{
  {
    init_simple_test("aUc_BFu7c_BFu1c");
    static STRUCT_IF_C aUc_BFu7c_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu7c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu1c");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aUc_BFu7c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_BFu1c, aUc_BFu7c_BFu1c)
//============================================================================



static void Test_aUc_BFu7c_BFu1i()
{
  {
    init_simple_test("aUc_BFu7c_BFu1i");
    static STRUCT_IF_C aUc_BFu7c_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu7c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu1i");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aUc_BFu7c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_BFu1i, aUc_BFu7c_BFu1i)
//============================================================================



static void Test_aUc_BFu7c_BFu1ll()
{
  {
    init_simple_test("aUc_BFu7c_BFu1ll");
    static STRUCT_IF_C aUc_BFu7c_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu7c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu1ll");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aUc_BFu7c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_BFu1ll, aUc_BFu7c_BFu1ll)
//============================================================================



static void Test_aUc_BFu7c_BFu1s()
{
  {
    init_simple_test("aUc_BFu7c_BFu1s");
    static STRUCT_IF_C aUc_BFu7c_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu7c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu1s");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aUc_BFu7c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_BFu1s, aUc_BFu7c_BFu1s)
//============================================================================



static void Test_aUc_BFu7c_BFu31i()
{
  {
    init_simple_test("aUc_BFu7c_BFu31i");
    static STRUCT_IF_C aUc_BFu7c_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu31i");
    set_bf_and_test(lv, v3, 1, 7, 31, 1, "aUc_BFu7c_BFu31i");
    set_bf_and_test(lv, v3, 1, 7, 31, hide_ull(1LL<<30), "aUc_BFu7c_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_BFu31i, aUc_BFu7c_BFu31i)
//============================================================================



static void Test_aUc_BFu7c_BFu31ll()
{
  {
    init_simple_test("aUc_BFu7c_BFu31ll");
    static STRUCT_IF_C aUc_BFu7c_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu31ll");
    set_bf_and_test(lv, v3, 1, 7, 31, 1, "aUc_BFu7c_BFu31ll");
    set_bf_and_test(lv, v3, 1, 7, 31, hide_ull(1LL<<30), "aUc_BFu7c_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_BFu31ll, aUc_BFu7c_BFu31ll)
//============================================================================



static void Test_aUc_BFu7c_BFu32i()
{
  {
    init_simple_test("aUc_BFu7c_BFu32i");
    static STRUCT_IF_C aUc_BFu7c_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu32i");
    set_bf_and_test(lv, v3, 1, 7, 32, 1, "aUc_BFu7c_BFu32i");
    set_bf_and_test(lv, v3, 1, 7, 32, hide_ull(1LL<<31), "aUc_BFu7c_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_BFu32i, aUc_BFu7c_BFu32i)
//============================================================================



static void Test_aUc_BFu7c_BFu32ll()
{
  {
    init_simple_test("aUc_BFu7c_BFu32ll");
    static STRUCT_IF_C aUc_BFu7c_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu32ll");
    set_bf_and_test(lv, v3, 1, 7, 32, 1, "aUc_BFu7c_BFu32ll");
    set_bf_and_test(lv, v3, 1, 7, 32, hide_ull(1LL<<31), "aUc_BFu7c_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_BFu32ll, aUc_BFu7c_BFu32ll)
//============================================================================



static void Test_aUc_BFu7c_BFu33()
{
  {
    init_simple_test("aUc_BFu7c_BFu33");
    static STRUCT_IF_C aUc_BFu7c_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu33");
    set_bf_and_test(lv, v3, 1, 7, 33, 1, "aUc_BFu7c_BFu33");
    set_bf_and_test(lv, v3, 1, 7, 33, hide_ull(1LL<<32), "aUc_BFu7c_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_BFu33, aUc_BFu7c_BFu33)
//============================================================================



static void Test_aUc_BFu7c_BFu7c()
{
  {
    init_simple_test("aUc_BFu7c_BFu7c");
    static STRUCT_IF_C aUc_BFu7c_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu7c");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aUc_BFu7c_BFu7c");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_BFu7c, aUc_BFu7c_BFu7c)
//============================================================================



static void Test_aUc_BFu7c_BFu7i()
{
  {
    init_simple_test("aUc_BFu7c_BFu7i");
    static STRUCT_IF_C aUc_BFu7c_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu7i");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aUc_BFu7c_BFu7i");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_BFu7i, aUc_BFu7c_BFu7i)
//============================================================================



static void Test_aUc_BFu7c_BFu7ll()
{
  {
    init_simple_test("aUc_BFu7c_BFu7ll");
    static STRUCT_IF_C aUc_BFu7c_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu7ll");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aUc_BFu7c_BFu7ll");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_BFu7ll, aUc_BFu7c_BFu7ll)
//============================================================================



static void Test_aUc_BFu7c_BFu7s()
{
  {
    init_simple_test("aUc_BFu7c_BFu7s");
    static STRUCT_IF_C aUc_BFu7c_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu7s");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aUc_BFu7c_BFu7s");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_BFu7s, aUc_BFu7c_BFu7s)
//============================================================================



static void Test_aUc_BFu7c_BFu8c()
{
  {
    init_simple_test("aUc_BFu7c_BFu8c");
    static STRUCT_IF_C aUc_BFu7c_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu8c");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aUc_BFu7c_BFu8c");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aUc_BFu7c_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_BFu8c, aUc_BFu7c_BFu8c)
//============================================================================



static void Test_aUc_BFu7c_BFu8i()
{
  {
    init_simple_test("aUc_BFu7c_BFu8i");
    static STRUCT_IF_C aUc_BFu7c_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu8i");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aUc_BFu7c_BFu8i");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aUc_BFu7c_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_BFu8i, aUc_BFu7c_BFu8i)
//============================================================================



static void Test_aUc_BFu7c_BFu8ll()
{
  {
    init_simple_test("aUc_BFu7c_BFu8ll");
    static STRUCT_IF_C aUc_BFu7c_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu8ll");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aUc_BFu7c_BFu8ll");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aUc_BFu7c_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_BFu8ll, aUc_BFu7c_BFu8ll)
//============================================================================



static void Test_aUc_BFu7c_BFu8s()
{
  {
    init_simple_test("aUc_BFu7c_BFu8s");
    static STRUCT_IF_C aUc_BFu7c_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu8s");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aUc_BFu7c_BFu8s");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aUc_BFu7c_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_BFu8s, aUc_BFu7c_BFu8s)
//============================================================================



static void Test_aUc_BFu7c_BFu9i()
{
  {
    init_simple_test("aUc_BFu7c_BFu9i");
    static STRUCT_IF_C aUc_BFu7c_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu9i");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "aUc_BFu7c_BFu9i");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "aUc_BFu7c_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_BFu9i, aUc_BFu7c_BFu9i)
//============================================================================



static void Test_aUc_BFu7c_BFu9ll()
{
  {
    init_simple_test("aUc_BFu7c_BFu9ll");
    static STRUCT_IF_C aUc_BFu7c_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu9ll");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "aUc_BFu7c_BFu9ll");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "aUc_BFu7c_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_BFu9ll, aUc_BFu7c_BFu9ll)
//============================================================================



static void Test_aUc_BFu7c_BFu9s()
{
  {
    init_simple_test("aUc_BFu7c_BFu9s");
    static STRUCT_IF_C aUc_BFu7c_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_BFu9s");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "aUc_BFu7c_BFu9s");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "aUc_BFu7c_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_BFu9s, aUc_BFu7c_BFu9s)
//============================================================================



static void Test_aUc_BFu7c_C()
{
  {
    init_simple_test("aUc_BFu7c_C");
    static STRUCT_IF_C aUc_BFu7c_C lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7c_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_C)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_C");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_C");
    check_field_offset(lv, v3, 2, "aUc_BFu7c_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_C, aUc_BFu7c_C)
//============================================================================



static void Test_aUc_BFu7c_D()
{
  {
    init_simple_test("aUc_BFu7c_D");
    static STRUCT_IF_C aUc_BFu7c_D lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu7c_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_D)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_D");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_D");
    check_field_offset(lv, v3, 2, "aUc_BFu7c_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_D, aUc_BFu7c_D)
//============================================================================



static void Test_aUc_BFu7c_F()
{
  {
    init_simple_test("aUc_BFu7c_F");
    static STRUCT_IF_C aUc_BFu7c_F lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7c_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_F)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_F");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_F");
    check_field_offset(lv, v3, 2, "aUc_BFu7c_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_F, aUc_BFu7c_F)
//============================================================================



static void Test_aUc_BFu7c_I()
{
  {
    init_simple_test("aUc_BFu7c_I");
    static STRUCT_IF_C aUc_BFu7c_I lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7c_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_I)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_I");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_I");
    check_field_offset(lv, v3, 2, "aUc_BFu7c_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_I, aUc_BFu7c_I)
//============================================================================



static void Test_aUc_BFu7c_Ip()
{
  {
    init_simple_test("aUc_BFu7c_Ip");
    static STRUCT_IF_C aUc_BFu7c_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_BFu7c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_Ip)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_Ip");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_Ip");
    check_field_offset(lv, v3, 2, "aUc_BFu7c_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_Ip, aUc_BFu7c_Ip)
//============================================================================



static void Test_aUc_BFu7c_L()
{
  {
    init_simple_test("aUc_BFu7c_L");
    static STRUCT_IF_C aUc_BFu7c_L lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu7c_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_L)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_L");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_L");
    check_field_offset(lv, v3, 2, "aUc_BFu7c_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_L, aUc_BFu7c_L)
//============================================================================



static void Test_aUc_BFu7c_S()
{
  {
    init_simple_test("aUc_BFu7c_S");
    static STRUCT_IF_C aUc_BFu7c_S lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7c_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_S)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_S");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_S");
    check_field_offset(lv, v3, 2, "aUc_BFu7c_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_S, aUc_BFu7c_S)
//============================================================================



static void Test_aUc_BFu7c_Uc()
{
  {
    init_simple_test("aUc_BFu7c_Uc");
    static STRUCT_IF_C aUc_BFu7c_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_Uc)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_Uc");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_Uc");
    check_field_offset(lv, v3, 2, "aUc_BFu7c_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_Uc, aUc_BFu7c_Uc)
//============================================================================



static void Test_aUc_BFu7c_Ui()
{
  {
    init_simple_test("aUc_BFu7c_Ui");
    static STRUCT_IF_C aUc_BFu7c_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_Ui)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_Ui");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_Ui");
    check_field_offset(lv, v3, 2, "aUc_BFu7c_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_Ui, aUc_BFu7c_Ui)
//============================================================================



static void Test_aUc_BFu7c_Ul()
{
  {
    init_simple_test("aUc_BFu7c_Ul");
    static STRUCT_IF_C aUc_BFu7c_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu7c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_Ul)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_Ul");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_Ul");
    check_field_offset(lv, v3, 2, "aUc_BFu7c_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_Ul, aUc_BFu7c_Ul)
//============================================================================



static void Test_aUc_BFu7c_Us()
{
  {
    init_simple_test("aUc_BFu7c_Us");
    static STRUCT_IF_C aUc_BFu7c_Us lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_Us)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_Us");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_Us");
    check_field_offset(lv, v3, 2, "aUc_BFu7c_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_Us, aUc_BFu7c_Us)
//============================================================================



static void Test_aUc_BFu7c_Vp()
{
  {
    init_simple_test("aUc_BFu7c_Vp");
    static STRUCT_IF_C aUc_BFu7c_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_BFu7c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7c_Vp)");
    check_field_offset(lv, v1, 0, "aUc_BFu7c_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7c_Vp");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7c_Vp");
    check_field_offset(lv, v3, 2, "aUc_BFu7c_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7c_Vp, aUc_BFu7c_Vp)
//============================================================================



static void Test_aUc_BFu7i()
{
  {
    init_simple_test("aUc_BFu7i");
    static STRUCT_IF_C aUc_BFu7i lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i, aUc_BFu7i)
//============================================================================



static void Test_aUc_BFu7i_BFu15i()
{
  {
    init_simple_test("aUc_BFu7i_BFu15i");
    static STRUCT_IF_C aUc_BFu7i_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu15i");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "aUc_BFu7i_BFu15i");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "aUc_BFu7i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_BFu15i, aUc_BFu7i_BFu15i)
//============================================================================



static void Test_aUc_BFu7i_BFu15ll()
{
  {
    init_simple_test("aUc_BFu7i_BFu15ll");
    static STRUCT_IF_C aUc_BFu7i_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu15ll");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "aUc_BFu7i_BFu15ll");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "aUc_BFu7i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_BFu15ll, aUc_BFu7i_BFu15ll)
//============================================================================



static void Test_aUc_BFu7i_BFu15s()
{
  {
    init_simple_test("aUc_BFu7i_BFu15s");
    static STRUCT_IF_C aUc_BFu7i_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu15s");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "aUc_BFu7i_BFu15s");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "aUc_BFu7i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_BFu15s, aUc_BFu7i_BFu15s)
//============================================================================



static void Test_aUc_BFu7i_BFu16i()
{
  {
    init_simple_test("aUc_BFu7i_BFu16i");
    static STRUCT_IF_C aUc_BFu7i_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu16i");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "aUc_BFu7i_BFu16i");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "aUc_BFu7i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_BFu16i, aUc_BFu7i_BFu16i)
//============================================================================



static void Test_aUc_BFu7i_BFu16ll()
{
  {
    init_simple_test("aUc_BFu7i_BFu16ll");
    static STRUCT_IF_C aUc_BFu7i_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu16ll");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "aUc_BFu7i_BFu16ll");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "aUc_BFu7i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_BFu16ll, aUc_BFu7i_BFu16ll)
//============================================================================



static void Test_aUc_BFu7i_BFu16s()
{
  {
    init_simple_test("aUc_BFu7i_BFu16s");
    static STRUCT_IF_C aUc_BFu7i_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu16s");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "aUc_BFu7i_BFu16s");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "aUc_BFu7i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_BFu16s, aUc_BFu7i_BFu16s)
//============================================================================



static void Test_aUc_BFu7i_BFu17i()
{
  {
    init_simple_test("aUc_BFu7i_BFu17i");
    static STRUCT_IF_C aUc_BFu7i_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu17i");
    set_bf_and_test(lv, v3, 1, 7, 17, 1, "aUc_BFu7i_BFu17i");
    set_bf_and_test(lv, v3, 1, 7, 17, hide_ull(1LL<<16), "aUc_BFu7i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_BFu17i, aUc_BFu7i_BFu17i)
//============================================================================



static void Test_aUc_BFu7i_BFu17ll()
{
  {
    init_simple_test("aUc_BFu7i_BFu17ll");
    static STRUCT_IF_C aUc_BFu7i_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu17ll");
    set_bf_and_test(lv, v3, 1, 7, 17, 1, "aUc_BFu7i_BFu17ll");
    set_bf_and_test(lv, v3, 1, 7, 17, hide_ull(1LL<<16), "aUc_BFu7i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_BFu17ll, aUc_BFu7i_BFu17ll)
//============================================================================



static void Test_aUc_BFu7i_BFu1c()
{
  {
    init_simple_test("aUc_BFu7i_BFu1c");
    static STRUCT_IF_C aUc_BFu7i_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu7i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu1c");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aUc_BFu7i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_BFu1c, aUc_BFu7i_BFu1c)
//============================================================================



static void Test_aUc_BFu7i_BFu1i()
{
  {
    init_simple_test("aUc_BFu7i_BFu1i");
    static STRUCT_IF_C aUc_BFu7i_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu7i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu1i");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aUc_BFu7i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_BFu1i, aUc_BFu7i_BFu1i)
//============================================================================



static void Test_aUc_BFu7i_BFu1ll()
{
  {
    init_simple_test("aUc_BFu7i_BFu1ll");
    static STRUCT_IF_C aUc_BFu7i_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu7i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu1ll");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aUc_BFu7i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_BFu1ll, aUc_BFu7i_BFu1ll)
//============================================================================



static void Test_aUc_BFu7i_BFu1s()
{
  {
    init_simple_test("aUc_BFu7i_BFu1s");
    static STRUCT_IF_C aUc_BFu7i_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu7i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu1s");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aUc_BFu7i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_BFu1s, aUc_BFu7i_BFu1s)
//============================================================================



static void Test_aUc_BFu7i_BFu31i()
{
  {
    init_simple_test("aUc_BFu7i_BFu31i");
    static STRUCT_IF_C aUc_BFu7i_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu31i");
    set_bf_and_test(lv, v3, 1, 7, 31, 1, "aUc_BFu7i_BFu31i");
    set_bf_and_test(lv, v3, 1, 7, 31, hide_ull(1LL<<30), "aUc_BFu7i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_BFu31i, aUc_BFu7i_BFu31i)
//============================================================================



static void Test_aUc_BFu7i_BFu31ll()
{
  {
    init_simple_test("aUc_BFu7i_BFu31ll");
    static STRUCT_IF_C aUc_BFu7i_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu31ll");
    set_bf_and_test(lv, v3, 1, 7, 31, 1, "aUc_BFu7i_BFu31ll");
    set_bf_and_test(lv, v3, 1, 7, 31, hide_ull(1LL<<30), "aUc_BFu7i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_BFu31ll, aUc_BFu7i_BFu31ll)
//============================================================================



static void Test_aUc_BFu7i_BFu32i()
{
  {
    init_simple_test("aUc_BFu7i_BFu32i");
    static STRUCT_IF_C aUc_BFu7i_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu32i");
    set_bf_and_test(lv, v3, 1, 7, 32, 1, "aUc_BFu7i_BFu32i");
    set_bf_and_test(lv, v3, 1, 7, 32, hide_ull(1LL<<31), "aUc_BFu7i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_BFu32i, aUc_BFu7i_BFu32i)
//============================================================================



static void Test_aUc_BFu7i_BFu32ll()
{
  {
    init_simple_test("aUc_BFu7i_BFu32ll");
    static STRUCT_IF_C aUc_BFu7i_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu32ll");
    set_bf_and_test(lv, v3, 1, 7, 32, 1, "aUc_BFu7i_BFu32ll");
    set_bf_and_test(lv, v3, 1, 7, 32, hide_ull(1LL<<31), "aUc_BFu7i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_BFu32ll, aUc_BFu7i_BFu32ll)
//============================================================================



static void Test_aUc_BFu7i_BFu33()
{
  {
    init_simple_test("aUc_BFu7i_BFu33");
    static STRUCT_IF_C aUc_BFu7i_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu33");
    set_bf_and_test(lv, v3, 1, 7, 33, 1, "aUc_BFu7i_BFu33");
    set_bf_and_test(lv, v3, 1, 7, 33, hide_ull(1LL<<32), "aUc_BFu7i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_BFu33, aUc_BFu7i_BFu33)
//============================================================================



static void Test_aUc_BFu7i_BFu7c()
{
  {
    init_simple_test("aUc_BFu7i_BFu7c");
    static STRUCT_IF_C aUc_BFu7i_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu7c");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aUc_BFu7i_BFu7c");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_BFu7c, aUc_BFu7i_BFu7c)
//============================================================================



static void Test_aUc_BFu7i_BFu7i()
{
  {
    init_simple_test("aUc_BFu7i_BFu7i");
    static STRUCT_IF_C aUc_BFu7i_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu7i");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aUc_BFu7i_BFu7i");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_BFu7i, aUc_BFu7i_BFu7i)
//============================================================================



static void Test_aUc_BFu7i_BFu7ll()
{
  {
    init_simple_test("aUc_BFu7i_BFu7ll");
    static STRUCT_IF_C aUc_BFu7i_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu7ll");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aUc_BFu7i_BFu7ll");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_BFu7ll, aUc_BFu7i_BFu7ll)
//============================================================================



static void Test_aUc_BFu7i_BFu7s()
{
  {
    init_simple_test("aUc_BFu7i_BFu7s");
    static STRUCT_IF_C aUc_BFu7i_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu7s");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aUc_BFu7i_BFu7s");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_BFu7s, aUc_BFu7i_BFu7s)
//============================================================================



static void Test_aUc_BFu7i_BFu8c()
{
  {
    init_simple_test("aUc_BFu7i_BFu8c");
    static STRUCT_IF_C aUc_BFu7i_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu8c");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aUc_BFu7i_BFu8c");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aUc_BFu7i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_BFu8c, aUc_BFu7i_BFu8c)
//============================================================================



static void Test_aUc_BFu7i_BFu8i()
{
  {
    init_simple_test("aUc_BFu7i_BFu8i");
    static STRUCT_IF_C aUc_BFu7i_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu8i");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aUc_BFu7i_BFu8i");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aUc_BFu7i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_BFu8i, aUc_BFu7i_BFu8i)
//============================================================================



static void Test_aUc_BFu7i_BFu8ll()
{
  {
    init_simple_test("aUc_BFu7i_BFu8ll");
    static STRUCT_IF_C aUc_BFu7i_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu8ll");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aUc_BFu7i_BFu8ll");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aUc_BFu7i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_BFu8ll, aUc_BFu7i_BFu8ll)
//============================================================================



static void Test_aUc_BFu7i_BFu8s()
{
  {
    init_simple_test("aUc_BFu7i_BFu8s");
    static STRUCT_IF_C aUc_BFu7i_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu8s");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aUc_BFu7i_BFu8s");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aUc_BFu7i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_BFu8s, aUc_BFu7i_BFu8s)
//============================================================================



static void Test_aUc_BFu7i_BFu9i()
{
  {
    init_simple_test("aUc_BFu7i_BFu9i");
    static STRUCT_IF_C aUc_BFu7i_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu9i");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "aUc_BFu7i_BFu9i");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "aUc_BFu7i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_BFu9i, aUc_BFu7i_BFu9i)
//============================================================================



static void Test_aUc_BFu7i_BFu9ll()
{
  {
    init_simple_test("aUc_BFu7i_BFu9ll");
    static STRUCT_IF_C aUc_BFu7i_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu9ll");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "aUc_BFu7i_BFu9ll");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "aUc_BFu7i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_BFu9ll, aUc_BFu7i_BFu9ll)
//============================================================================



static void Test_aUc_BFu7i_BFu9s()
{
  {
    init_simple_test("aUc_BFu7i_BFu9s");
    static STRUCT_IF_C aUc_BFu7i_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_BFu9s");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "aUc_BFu7i_BFu9s");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "aUc_BFu7i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_BFu9s, aUc_BFu7i_BFu9s)
//============================================================================



static void Test_aUc_BFu7i_C()
{
  {
    init_simple_test("aUc_BFu7i_C");
    static STRUCT_IF_C aUc_BFu7i_C lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_C)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_C");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_C");
    check_field_offset(lv, v3, 2, "aUc_BFu7i_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_C, aUc_BFu7i_C)
//============================================================================



static void Test_aUc_BFu7i_D()
{
  {
    init_simple_test("aUc_BFu7i_D");
    static STRUCT_IF_C aUc_BFu7i_D lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu7i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_D)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_D");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_D");
    check_field_offset(lv, v3, 2, "aUc_BFu7i_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_D, aUc_BFu7i_D)
//============================================================================



static void Test_aUc_BFu7i_F()
{
  {
    init_simple_test("aUc_BFu7i_F");
    static STRUCT_IF_C aUc_BFu7i_F lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_F)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_F");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_F");
    check_field_offset(lv, v3, 2, "aUc_BFu7i_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_F, aUc_BFu7i_F)
//============================================================================



static void Test_aUc_BFu7i_I()
{
  {
    init_simple_test("aUc_BFu7i_I");
    static STRUCT_IF_C aUc_BFu7i_I lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_I)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_I");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_I");
    check_field_offset(lv, v3, 2, "aUc_BFu7i_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_I, aUc_BFu7i_I)
//============================================================================



static void Test_aUc_BFu7i_Ip()
{
  {
    init_simple_test("aUc_BFu7i_Ip");
    static STRUCT_IF_C aUc_BFu7i_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_BFu7i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_Ip)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_Ip");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_Ip");
    check_field_offset(lv, v3, 2, "aUc_BFu7i_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_Ip, aUc_BFu7i_Ip)
//============================================================================



static void Test_aUc_BFu7i_L()
{
  {
    init_simple_test("aUc_BFu7i_L");
    static STRUCT_IF_C aUc_BFu7i_L lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu7i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_L)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_L");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_L");
    check_field_offset(lv, v3, 2, "aUc_BFu7i_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_L, aUc_BFu7i_L)
//============================================================================



static void Test_aUc_BFu7i_S()
{
  {
    init_simple_test("aUc_BFu7i_S");
    static STRUCT_IF_C aUc_BFu7i_S lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_S)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_S");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_S");
    check_field_offset(lv, v3, 2, "aUc_BFu7i_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_S, aUc_BFu7i_S)
//============================================================================



static void Test_aUc_BFu7i_Uc()
{
  {
    init_simple_test("aUc_BFu7i_Uc");
    static STRUCT_IF_C aUc_BFu7i_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_Uc)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_Uc");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_Uc");
    check_field_offset(lv, v3, 2, "aUc_BFu7i_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_Uc, aUc_BFu7i_Uc)
//============================================================================



static void Test_aUc_BFu7i_Ui()
{
  {
    init_simple_test("aUc_BFu7i_Ui");
    static STRUCT_IF_C aUc_BFu7i_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_Ui)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_Ui");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_Ui");
    check_field_offset(lv, v3, 2, "aUc_BFu7i_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_Ui, aUc_BFu7i_Ui)
//============================================================================



static void Test_aUc_BFu7i_Ul()
{
  {
    init_simple_test("aUc_BFu7i_Ul");
    static STRUCT_IF_C aUc_BFu7i_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu7i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_Ul)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_Ul");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_Ul");
    check_field_offset(lv, v3, 2, "aUc_BFu7i_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_Ul, aUc_BFu7i_Ul)
//============================================================================



static void Test_aUc_BFu7i_Us()
{
  {
    init_simple_test("aUc_BFu7i_Us");
    static STRUCT_IF_C aUc_BFu7i_Us lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_Us)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_Us");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_Us");
    check_field_offset(lv, v3, 2, "aUc_BFu7i_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_Us, aUc_BFu7i_Us)
//============================================================================



static void Test_aUc_BFu7i_Vp()
{
  {
    init_simple_test("aUc_BFu7i_Vp");
    static STRUCT_IF_C aUc_BFu7i_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_BFu7i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7i_Vp)");
    check_field_offset(lv, v1, 0, "aUc_BFu7i_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7i_Vp");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7i_Vp");
    check_field_offset(lv, v3, 2, "aUc_BFu7i_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7i_Vp, aUc_BFu7i_Vp)
//============================================================================



static void Test_aUc_BFu7ll()
{
  {
    init_simple_test("aUc_BFu7ll");
    static STRUCT_IF_C aUc_BFu7ll lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll, aUc_BFu7ll)
//============================================================================



static void Test_aUc_BFu7ll_BFu15i()
{
  {
    init_simple_test("aUc_BFu7ll_BFu15i");
    static STRUCT_IF_C aUc_BFu7ll_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu15i");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "aUc_BFu7ll_BFu15i");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "aUc_BFu7ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_BFu15i, aUc_BFu7ll_BFu15i)
//============================================================================



static void Test_aUc_BFu7ll_BFu15ll()
{
  {
    init_simple_test("aUc_BFu7ll_BFu15ll");
    static STRUCT_IF_C aUc_BFu7ll_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu15ll");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "aUc_BFu7ll_BFu15ll");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "aUc_BFu7ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_BFu15ll, aUc_BFu7ll_BFu15ll)
//============================================================================



static void Test_aUc_BFu7ll_BFu15s()
{
  {
    init_simple_test("aUc_BFu7ll_BFu15s");
    static STRUCT_IF_C aUc_BFu7ll_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu15s");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "aUc_BFu7ll_BFu15s");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "aUc_BFu7ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_BFu15s, aUc_BFu7ll_BFu15s)
//============================================================================



static void Test_aUc_BFu7ll_BFu16i()
{
  {
    init_simple_test("aUc_BFu7ll_BFu16i");
    static STRUCT_IF_C aUc_BFu7ll_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu16i");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "aUc_BFu7ll_BFu16i");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "aUc_BFu7ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_BFu16i, aUc_BFu7ll_BFu16i)
//============================================================================



static void Test_aUc_BFu7ll_BFu16ll()
{
  {
    init_simple_test("aUc_BFu7ll_BFu16ll");
    static STRUCT_IF_C aUc_BFu7ll_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu16ll");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "aUc_BFu7ll_BFu16ll");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "aUc_BFu7ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_BFu16ll, aUc_BFu7ll_BFu16ll)
//============================================================================



static void Test_aUc_BFu7ll_BFu16s()
{
  {
    init_simple_test("aUc_BFu7ll_BFu16s");
    static STRUCT_IF_C aUc_BFu7ll_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu16s");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "aUc_BFu7ll_BFu16s");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "aUc_BFu7ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_BFu16s, aUc_BFu7ll_BFu16s)
//============================================================================



static void Test_aUc_BFu7ll_BFu17i()
{
  {
    init_simple_test("aUc_BFu7ll_BFu17i");
    static STRUCT_IF_C aUc_BFu7ll_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu17i");
    set_bf_and_test(lv, v3, 1, 7, 17, 1, "aUc_BFu7ll_BFu17i");
    set_bf_and_test(lv, v3, 1, 7, 17, hide_ull(1LL<<16), "aUc_BFu7ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_BFu17i, aUc_BFu7ll_BFu17i)
//============================================================================



static void Test_aUc_BFu7ll_BFu17ll()
{
  {
    init_simple_test("aUc_BFu7ll_BFu17ll");
    static STRUCT_IF_C aUc_BFu7ll_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu17ll");
    set_bf_and_test(lv, v3, 1, 7, 17, 1, "aUc_BFu7ll_BFu17ll");
    set_bf_and_test(lv, v3, 1, 7, 17, hide_ull(1LL<<16), "aUc_BFu7ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_BFu17ll, aUc_BFu7ll_BFu17ll)
//============================================================================



static void Test_aUc_BFu7ll_BFu1c()
{
  {
    init_simple_test("aUc_BFu7ll_BFu1c");
    static STRUCT_IF_C aUc_BFu7ll_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu7ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu1c");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aUc_BFu7ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_BFu1c, aUc_BFu7ll_BFu1c)
//============================================================================



static void Test_aUc_BFu7ll_BFu1i()
{
  {
    init_simple_test("aUc_BFu7ll_BFu1i");
    static STRUCT_IF_C aUc_BFu7ll_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu7ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu1i");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aUc_BFu7ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_BFu1i, aUc_BFu7ll_BFu1i)
//============================================================================



static void Test_aUc_BFu7ll_BFu1ll()
{
  {
    init_simple_test("aUc_BFu7ll_BFu1ll");
    static STRUCT_IF_C aUc_BFu7ll_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu7ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu1ll");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aUc_BFu7ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_BFu1ll, aUc_BFu7ll_BFu1ll)
//============================================================================



static void Test_aUc_BFu7ll_BFu1s()
{
  {
    init_simple_test("aUc_BFu7ll_BFu1s");
    static STRUCT_IF_C aUc_BFu7ll_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu7ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu1s");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aUc_BFu7ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_BFu1s, aUc_BFu7ll_BFu1s)
//============================================================================



static void Test_aUc_BFu7ll_BFu31i()
{
  {
    init_simple_test("aUc_BFu7ll_BFu31i");
    static STRUCT_IF_C aUc_BFu7ll_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu31i");
    set_bf_and_test(lv, v3, 1, 7, 31, 1, "aUc_BFu7ll_BFu31i");
    set_bf_and_test(lv, v3, 1, 7, 31, hide_ull(1LL<<30), "aUc_BFu7ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_BFu31i, aUc_BFu7ll_BFu31i)
//============================================================================



static void Test_aUc_BFu7ll_BFu31ll()
{
  {
    init_simple_test("aUc_BFu7ll_BFu31ll");
    static STRUCT_IF_C aUc_BFu7ll_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu31ll");
    set_bf_and_test(lv, v3, 1, 7, 31, 1, "aUc_BFu7ll_BFu31ll");
    set_bf_and_test(lv, v3, 1, 7, 31, hide_ull(1LL<<30), "aUc_BFu7ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_BFu31ll, aUc_BFu7ll_BFu31ll)
//============================================================================



static void Test_aUc_BFu7ll_BFu32i()
{
  {
    init_simple_test("aUc_BFu7ll_BFu32i");
    static STRUCT_IF_C aUc_BFu7ll_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu32i");
    set_bf_and_test(lv, v3, 1, 7, 32, 1, "aUc_BFu7ll_BFu32i");
    set_bf_and_test(lv, v3, 1, 7, 32, hide_ull(1LL<<31), "aUc_BFu7ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_BFu32i, aUc_BFu7ll_BFu32i)
//============================================================================



static void Test_aUc_BFu7ll_BFu32ll()
{
  {
    init_simple_test("aUc_BFu7ll_BFu32ll");
    static STRUCT_IF_C aUc_BFu7ll_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu32ll");
    set_bf_and_test(lv, v3, 1, 7, 32, 1, "aUc_BFu7ll_BFu32ll");
    set_bf_and_test(lv, v3, 1, 7, 32, hide_ull(1LL<<31), "aUc_BFu7ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_BFu32ll, aUc_BFu7ll_BFu32ll)
//============================================================================



static void Test_aUc_BFu7ll_BFu33()
{
  {
    init_simple_test("aUc_BFu7ll_BFu33");
    static STRUCT_IF_C aUc_BFu7ll_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu33");
    set_bf_and_test(lv, v3, 1, 7, 33, 1, "aUc_BFu7ll_BFu33");
    set_bf_and_test(lv, v3, 1, 7, 33, hide_ull(1LL<<32), "aUc_BFu7ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_BFu33, aUc_BFu7ll_BFu33)
//============================================================================



static void Test_aUc_BFu7ll_BFu7c()
{
  {
    init_simple_test("aUc_BFu7ll_BFu7c");
    static STRUCT_IF_C aUc_BFu7ll_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu7c");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aUc_BFu7ll_BFu7c");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_BFu7c, aUc_BFu7ll_BFu7c)
//============================================================================



static void Test_aUc_BFu7ll_BFu7i()
{
  {
    init_simple_test("aUc_BFu7ll_BFu7i");
    static STRUCT_IF_C aUc_BFu7ll_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu7i");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aUc_BFu7ll_BFu7i");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_BFu7i, aUc_BFu7ll_BFu7i)
//============================================================================



static void Test_aUc_BFu7ll_BFu7ll()
{
  {
    init_simple_test("aUc_BFu7ll_BFu7ll");
    static STRUCT_IF_C aUc_BFu7ll_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu7ll");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aUc_BFu7ll_BFu7ll");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_BFu7ll, aUc_BFu7ll_BFu7ll)
//============================================================================



static void Test_aUc_BFu7ll_BFu7s()
{
  {
    init_simple_test("aUc_BFu7ll_BFu7s");
    static STRUCT_IF_C aUc_BFu7ll_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu7s");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aUc_BFu7ll_BFu7s");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_BFu7s, aUc_BFu7ll_BFu7s)
//============================================================================



static void Test_aUc_BFu7ll_BFu8c()
{
  {
    init_simple_test("aUc_BFu7ll_BFu8c");
    static STRUCT_IF_C aUc_BFu7ll_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu8c");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aUc_BFu7ll_BFu8c");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aUc_BFu7ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_BFu8c, aUc_BFu7ll_BFu8c)
//============================================================================



static void Test_aUc_BFu7ll_BFu8i()
{
  {
    init_simple_test("aUc_BFu7ll_BFu8i");
    static STRUCT_IF_C aUc_BFu7ll_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu8i");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aUc_BFu7ll_BFu8i");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aUc_BFu7ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_BFu8i, aUc_BFu7ll_BFu8i)
//============================================================================



static void Test_aUc_BFu7ll_BFu8ll()
{
  {
    init_simple_test("aUc_BFu7ll_BFu8ll");
    static STRUCT_IF_C aUc_BFu7ll_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu8ll");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aUc_BFu7ll_BFu8ll");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aUc_BFu7ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_BFu8ll, aUc_BFu7ll_BFu8ll)
//============================================================================



static void Test_aUc_BFu7ll_BFu8s()
{
  {
    init_simple_test("aUc_BFu7ll_BFu8s");
    static STRUCT_IF_C aUc_BFu7ll_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu8s");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aUc_BFu7ll_BFu8s");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aUc_BFu7ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_BFu8s, aUc_BFu7ll_BFu8s)
//============================================================================



static void Test_aUc_BFu7ll_BFu9i()
{
  {
    init_simple_test("aUc_BFu7ll_BFu9i");
    static STRUCT_IF_C aUc_BFu7ll_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu9i");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "aUc_BFu7ll_BFu9i");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "aUc_BFu7ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_BFu9i, aUc_BFu7ll_BFu9i)
//============================================================================



static void Test_aUc_BFu7ll_BFu9ll()
{
  {
    init_simple_test("aUc_BFu7ll_BFu9ll");
    static STRUCT_IF_C aUc_BFu7ll_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu9ll");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "aUc_BFu7ll_BFu9ll");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "aUc_BFu7ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_BFu9ll, aUc_BFu7ll_BFu9ll)
//============================================================================



static void Test_aUc_BFu7ll_BFu9s()
{
  {
    init_simple_test("aUc_BFu7ll_BFu9s");
    static STRUCT_IF_C aUc_BFu7ll_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_BFu9s");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "aUc_BFu7ll_BFu9s");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "aUc_BFu7ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_BFu9s, aUc_BFu7ll_BFu9s)
//============================================================================



static void Test_aUc_BFu7ll_C()
{
  {
    init_simple_test("aUc_BFu7ll_C");
    static STRUCT_IF_C aUc_BFu7ll_C lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_C)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_C");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_C");
    check_field_offset(lv, v3, 2, "aUc_BFu7ll_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_C, aUc_BFu7ll_C)
//============================================================================



static void Test_aUc_BFu7ll_D()
{
  {
    init_simple_test("aUc_BFu7ll_D");
    static STRUCT_IF_C aUc_BFu7ll_D lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu7ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_D)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_D");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_D");
    check_field_offset(lv, v3, 2, "aUc_BFu7ll_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_D, aUc_BFu7ll_D)
//============================================================================



static void Test_aUc_BFu7ll_F()
{
  {
    init_simple_test("aUc_BFu7ll_F");
    static STRUCT_IF_C aUc_BFu7ll_F lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_F)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_F");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_F");
    check_field_offset(lv, v3, 2, "aUc_BFu7ll_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_F, aUc_BFu7ll_F)
//============================================================================



static void Test_aUc_BFu7ll_I()
{
  {
    init_simple_test("aUc_BFu7ll_I");
    static STRUCT_IF_C aUc_BFu7ll_I lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_I)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_I");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_I");
    check_field_offset(lv, v3, 2, "aUc_BFu7ll_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_I, aUc_BFu7ll_I)
//============================================================================



static void Test_aUc_BFu7ll_Ip()
{
  {
    init_simple_test("aUc_BFu7ll_Ip");
    static STRUCT_IF_C aUc_BFu7ll_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_BFu7ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_Ip)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_Ip");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_Ip");
    check_field_offset(lv, v3, 2, "aUc_BFu7ll_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_Ip, aUc_BFu7ll_Ip)
//============================================================================



static void Test_aUc_BFu7ll_L()
{
  {
    init_simple_test("aUc_BFu7ll_L");
    static STRUCT_IF_C aUc_BFu7ll_L lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu7ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_L)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_L");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_L");
    check_field_offset(lv, v3, 2, "aUc_BFu7ll_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_L, aUc_BFu7ll_L)
//============================================================================



static void Test_aUc_BFu7ll_S()
{
  {
    init_simple_test("aUc_BFu7ll_S");
    static STRUCT_IF_C aUc_BFu7ll_S lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_S)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_S");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_S");
    check_field_offset(lv, v3, 2, "aUc_BFu7ll_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_S, aUc_BFu7ll_S)
//============================================================================



static void Test_aUc_BFu7ll_Uc()
{
  {
    init_simple_test("aUc_BFu7ll_Uc");
    static STRUCT_IF_C aUc_BFu7ll_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_Uc)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_Uc");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_Uc");
    check_field_offset(lv, v3, 2, "aUc_BFu7ll_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_Uc, aUc_BFu7ll_Uc)
//============================================================================



static void Test_aUc_BFu7ll_Ui()
{
  {
    init_simple_test("aUc_BFu7ll_Ui");
    static STRUCT_IF_C aUc_BFu7ll_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_Ui)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_Ui");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_Ui");
    check_field_offset(lv, v3, 2, "aUc_BFu7ll_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_Ui, aUc_BFu7ll_Ui)
//============================================================================



static void Test_aUc_BFu7ll_Ul()
{
  {
    init_simple_test("aUc_BFu7ll_Ul");
    static STRUCT_IF_C aUc_BFu7ll_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu7ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_Ul)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_Ul");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_Ul");
    check_field_offset(lv, v3, 2, "aUc_BFu7ll_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_Ul, aUc_BFu7ll_Ul)
//============================================================================



static void Test_aUc_BFu7ll_Us()
{
  {
    init_simple_test("aUc_BFu7ll_Us");
    static STRUCT_IF_C aUc_BFu7ll_Us lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_Us)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_Us");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_Us");
    check_field_offset(lv, v3, 2, "aUc_BFu7ll_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_Us, aUc_BFu7ll_Us)
//============================================================================



static void Test_aUc_BFu7ll_Vp()
{
  {
    init_simple_test("aUc_BFu7ll_Vp");
    static STRUCT_IF_C aUc_BFu7ll_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_BFu7ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7ll_Vp)");
    check_field_offset(lv, v1, 0, "aUc_BFu7ll_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7ll_Vp");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7ll_Vp");
    check_field_offset(lv, v3, 2, "aUc_BFu7ll_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7ll_Vp, aUc_BFu7ll_Vp)
//============================================================================



static void Test_aUc_BFu7s()
{
  {
    init_simple_test("aUc_BFu7s");
    static STRUCT_IF_C aUc_BFu7s lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s, aUc_BFu7s)
//============================================================================



static void Test_aUc_BFu7s_BFu15i()
{
  {
    init_simple_test("aUc_BFu7s_BFu15i");
    static STRUCT_IF_C aUc_BFu7s_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu15i");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "aUc_BFu7s_BFu15i");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "aUc_BFu7s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_BFu15i, aUc_BFu7s_BFu15i)
//============================================================================



static void Test_aUc_BFu7s_BFu15ll()
{
  {
    init_simple_test("aUc_BFu7s_BFu15ll");
    static STRUCT_IF_C aUc_BFu7s_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu15ll");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "aUc_BFu7s_BFu15ll");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "aUc_BFu7s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_BFu15ll, aUc_BFu7s_BFu15ll)
//============================================================================



static void Test_aUc_BFu7s_BFu15s()
{
  {
    init_simple_test("aUc_BFu7s_BFu15s");
    static STRUCT_IF_C aUc_BFu7s_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu15s");
    set_bf_and_test(lv, v3, 1, 7, 15, 1, "aUc_BFu7s_BFu15s");
    set_bf_and_test(lv, v3, 1, 7, 15, hide_ull(1LL<<14), "aUc_BFu7s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_BFu15s, aUc_BFu7s_BFu15s)
//============================================================================



static void Test_aUc_BFu7s_BFu16i()
{
  {
    init_simple_test("aUc_BFu7s_BFu16i");
    static STRUCT_IF_C aUc_BFu7s_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu16i");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "aUc_BFu7s_BFu16i");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "aUc_BFu7s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_BFu16i, aUc_BFu7s_BFu16i)
//============================================================================



static void Test_aUc_BFu7s_BFu16ll()
{
  {
    init_simple_test("aUc_BFu7s_BFu16ll");
    static STRUCT_IF_C aUc_BFu7s_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu16ll");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "aUc_BFu7s_BFu16ll");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "aUc_BFu7s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_BFu16ll, aUc_BFu7s_BFu16ll)
//============================================================================



static void Test_aUc_BFu7s_BFu16s()
{
  {
    init_simple_test("aUc_BFu7s_BFu16s");
    static STRUCT_IF_C aUc_BFu7s_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu16s");
    set_bf_and_test(lv, v3, 1, 7, 16, 1, "aUc_BFu7s_BFu16s");
    set_bf_and_test(lv, v3, 1, 7, 16, hide_ull(1LL<<15), "aUc_BFu7s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_BFu16s, aUc_BFu7s_BFu16s)
//============================================================================



static void Test_aUc_BFu7s_BFu17i()
{
  {
    init_simple_test("aUc_BFu7s_BFu17i");
    static STRUCT_IF_C aUc_BFu7s_BFu17i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu17i");
    set_bf_and_test(lv, v3, 1, 7, 17, 1, "aUc_BFu7s_BFu17i");
    set_bf_and_test(lv, v3, 1, 7, 17, hide_ull(1LL<<16), "aUc_BFu7s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_BFu17i, aUc_BFu7s_BFu17i)
//============================================================================



static void Test_aUc_BFu7s_BFu17ll()
{
  {
    init_simple_test("aUc_BFu7s_BFu17ll");
    static STRUCT_IF_C aUc_BFu7s_BFu17ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu17ll");
    set_bf_and_test(lv, v3, 1, 7, 17, 1, "aUc_BFu7s_BFu17ll");
    set_bf_and_test(lv, v3, 1, 7, 17, hide_ull(1LL<<16), "aUc_BFu7s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_BFu17ll, aUc_BFu7s_BFu17ll)
//============================================================================



static void Test_aUc_BFu7s_BFu1c()
{
  {
    init_simple_test("aUc_BFu7s_BFu1c");
    static STRUCT_IF_C aUc_BFu7s_BFu1c lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu7s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu1c");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aUc_BFu7s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_BFu1c, aUc_BFu7s_BFu1c)
//============================================================================



static void Test_aUc_BFu7s_BFu1i()
{
  {
    init_simple_test("aUc_BFu7s_BFu1i");
    static STRUCT_IF_C aUc_BFu7s_BFu1i lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu7s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu1i");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aUc_BFu7s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_BFu1i, aUc_BFu7s_BFu1i)
//============================================================================



static void Test_aUc_BFu7s_BFu1ll()
{
  {
    init_simple_test("aUc_BFu7s_BFu1ll");
    static STRUCT_IF_C aUc_BFu7s_BFu1ll lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu7s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu1ll");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aUc_BFu7s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_BFu1ll, aUc_BFu7s_BFu1ll)
//============================================================================



static void Test_aUc_BFu7s_BFu1s()
{
  {
    init_simple_test("aUc_BFu7s_BFu1s");
    static STRUCT_IF_C aUc_BFu7s_BFu1s lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu7s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu1s");
    set_bf_and_test(lv, v3, 1, 7, 1, 1, "aUc_BFu7s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_BFu1s, aUc_BFu7s_BFu1s)
//============================================================================



static void Test_aUc_BFu7s_BFu31i()
{
  {
    init_simple_test("aUc_BFu7s_BFu31i");
    static STRUCT_IF_C aUc_BFu7s_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu31i");
    set_bf_and_test(lv, v3, 1, 7, 31, 1, "aUc_BFu7s_BFu31i");
    set_bf_and_test(lv, v3, 1, 7, 31, hide_ull(1LL<<30), "aUc_BFu7s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_BFu31i, aUc_BFu7s_BFu31i)
//============================================================================



static void Test_aUc_BFu7s_BFu31ll()
{
  {
    init_simple_test("aUc_BFu7s_BFu31ll");
    static STRUCT_IF_C aUc_BFu7s_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu31ll");
    set_bf_and_test(lv, v3, 1, 7, 31, 1, "aUc_BFu7s_BFu31ll");
    set_bf_and_test(lv, v3, 1, 7, 31, hide_ull(1LL<<30), "aUc_BFu7s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_BFu31ll, aUc_BFu7s_BFu31ll)
//============================================================================



static void Test_aUc_BFu7s_BFu32i()
{
  {
    init_simple_test("aUc_BFu7s_BFu32i");
    static STRUCT_IF_C aUc_BFu7s_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu32i");
    set_bf_and_test(lv, v3, 1, 7, 32, 1, "aUc_BFu7s_BFu32i");
    set_bf_and_test(lv, v3, 1, 7, 32, hide_ull(1LL<<31), "aUc_BFu7s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_BFu32i, aUc_BFu7s_BFu32i)
//============================================================================



static void Test_aUc_BFu7s_BFu32ll()
{
  {
    init_simple_test("aUc_BFu7s_BFu32ll");
    static STRUCT_IF_C aUc_BFu7s_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu32ll");
    set_bf_and_test(lv, v3, 1, 7, 32, 1, "aUc_BFu7s_BFu32ll");
    set_bf_and_test(lv, v3, 1, 7, 32, hide_ull(1LL<<31), "aUc_BFu7s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_BFu32ll, aUc_BFu7s_BFu32ll)
//============================================================================



static void Test_aUc_BFu7s_BFu33()
{
  {
    init_simple_test("aUc_BFu7s_BFu33");
    static STRUCT_IF_C aUc_BFu7s_BFu33 lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu33");
    set_bf_and_test(lv, v3, 1, 7, 33, 1, "aUc_BFu7s_BFu33");
    set_bf_and_test(lv, v3, 1, 7, 33, hide_ull(1LL<<32), "aUc_BFu7s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_BFu33, aUc_BFu7s_BFu33)
//============================================================================



static void Test_aUc_BFu7s_BFu7c()
{
  {
    init_simple_test("aUc_BFu7s_BFu7c");
    static STRUCT_IF_C aUc_BFu7s_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu7c");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aUc_BFu7s_BFu7c");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_BFu7c, aUc_BFu7s_BFu7c)
//============================================================================



static void Test_aUc_BFu7s_BFu7i()
{
  {
    init_simple_test("aUc_BFu7s_BFu7i");
    static STRUCT_IF_C aUc_BFu7s_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu7i");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aUc_BFu7s_BFu7i");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_BFu7i, aUc_BFu7s_BFu7i)
//============================================================================



static void Test_aUc_BFu7s_BFu7ll()
{
  {
    init_simple_test("aUc_BFu7s_BFu7ll");
    static STRUCT_IF_C aUc_BFu7s_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu7ll");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aUc_BFu7s_BFu7ll");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_BFu7ll, aUc_BFu7s_BFu7ll)
//============================================================================



static void Test_aUc_BFu7s_BFu7s()
{
  {
    init_simple_test("aUc_BFu7s_BFu7s");
    static STRUCT_IF_C aUc_BFu7s_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu7s");
    set_bf_and_test(lv, v3, 1, 7, 7, 1, "aUc_BFu7s_BFu7s");
    set_bf_and_test(lv, v3, 1, 7, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_BFu7s, aUc_BFu7s_BFu7s)
//============================================================================



static void Test_aUc_BFu7s_BFu8c()
{
  {
    init_simple_test("aUc_BFu7s_BFu8c");
    static STRUCT_IF_C aUc_BFu7s_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu8c");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aUc_BFu7s_BFu8c");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aUc_BFu7s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_BFu8c, aUc_BFu7s_BFu8c)
//============================================================================



static void Test_aUc_BFu7s_BFu8i()
{
  {
    init_simple_test("aUc_BFu7s_BFu8i");
    static STRUCT_IF_C aUc_BFu7s_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu8i");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aUc_BFu7s_BFu8i");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aUc_BFu7s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_BFu8i, aUc_BFu7s_BFu8i)
//============================================================================



static void Test_aUc_BFu7s_BFu8ll()
{
  {
    init_simple_test("aUc_BFu7s_BFu8ll");
    static STRUCT_IF_C aUc_BFu7s_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu8ll");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aUc_BFu7s_BFu8ll");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aUc_BFu7s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_BFu8ll, aUc_BFu7s_BFu8ll)
//============================================================================



static void Test_aUc_BFu7s_BFu8s()
{
  {
    init_simple_test("aUc_BFu7s_BFu8s");
    static STRUCT_IF_C aUc_BFu7s_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu8s");
    set_bf_and_test(lv, v3, 1, 7, 8, 1, "aUc_BFu7s_BFu8s");
    set_bf_and_test(lv, v3, 1, 7, 8, hide_ull(1LL<<7), "aUc_BFu7s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_BFu8s, aUc_BFu7s_BFu8s)
//============================================================================



static void Test_aUc_BFu7s_BFu9i()
{
  {
    init_simple_test("aUc_BFu7s_BFu9i");
    static STRUCT_IF_C aUc_BFu7s_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu9i");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "aUc_BFu7s_BFu9i");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "aUc_BFu7s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_BFu9i, aUc_BFu7s_BFu9i)
//============================================================================



static void Test_aUc_BFu7s_BFu9ll()
{
  {
    init_simple_test("aUc_BFu7s_BFu9ll");
    static STRUCT_IF_C aUc_BFu7s_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu9ll");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "aUc_BFu7s_BFu9ll");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "aUc_BFu7s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_BFu9ll, aUc_BFu7s_BFu9ll)
//============================================================================



static void Test_aUc_BFu7s_BFu9s()
{
  {
    init_simple_test("aUc_BFu7s_BFu9s");
    static STRUCT_IF_C aUc_BFu7s_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_BFu9s");
    set_bf_and_test(lv, v3, 1, 7, 9, 1, "aUc_BFu7s_BFu9s");
    set_bf_and_test(lv, v3, 1, 7, 9, hide_ull(1LL<<8), "aUc_BFu7s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_BFu9s, aUc_BFu7s_BFu9s)
//============================================================================



static void Test_aUc_BFu7s_C()
{
  {
    init_simple_test("aUc_BFu7s_C");
    static STRUCT_IF_C aUc_BFu7s_C lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7s_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_C)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_C");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_C");
    check_field_offset(lv, v3, 2, "aUc_BFu7s_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_C, aUc_BFu7s_C)
//============================================================================



static void Test_aUc_BFu7s_D()
{
  {
    init_simple_test("aUc_BFu7s_D");
    static STRUCT_IF_C aUc_BFu7s_D lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu7s_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_D)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_D");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_D");
    check_field_offset(lv, v3, 2, "aUc_BFu7s_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_D, aUc_BFu7s_D)
//============================================================================



static void Test_aUc_BFu7s_F()
{
  {
    init_simple_test("aUc_BFu7s_F");
    static STRUCT_IF_C aUc_BFu7s_F lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7s_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_F)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_F");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_F");
    check_field_offset(lv, v3, 2, "aUc_BFu7s_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_F, aUc_BFu7s_F)
//============================================================================



static void Test_aUc_BFu7s_I()
{
  {
    init_simple_test("aUc_BFu7s_I");
    static STRUCT_IF_C aUc_BFu7s_I lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7s_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_I)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_I");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_I");
    check_field_offset(lv, v3, 2, "aUc_BFu7s_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_I, aUc_BFu7s_I)
//============================================================================



static void Test_aUc_BFu7s_Ip()
{
  {
    init_simple_test("aUc_BFu7s_Ip");
    static STRUCT_IF_C aUc_BFu7s_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_BFu7s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_Ip)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_Ip");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_Ip");
    check_field_offset(lv, v3, 2, "aUc_BFu7s_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_Ip, aUc_BFu7s_Ip)
//============================================================================



static void Test_aUc_BFu7s_L()
{
  {
    init_simple_test("aUc_BFu7s_L");
    static STRUCT_IF_C aUc_BFu7s_L lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu7s_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_L)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_L");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_L");
    check_field_offset(lv, v3, 2, "aUc_BFu7s_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_L, aUc_BFu7s_L)
//============================================================================



static void Test_aUc_BFu7s_S()
{
  {
    init_simple_test("aUc_BFu7s_S");
    static STRUCT_IF_C aUc_BFu7s_S lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7s_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_S)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_S");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_S");
    check_field_offset(lv, v3, 2, "aUc_BFu7s_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_S, aUc_BFu7s_S)
//============================================================================



static void Test_aUc_BFu7s_Uc()
{
  {
    init_simple_test("aUc_BFu7s_Uc");
    static STRUCT_IF_C aUc_BFu7s_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu7s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_Uc)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_Uc");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_Uc");
    check_field_offset(lv, v3, 2, "aUc_BFu7s_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_Uc, aUc_BFu7s_Uc)
//============================================================================



static void Test_aUc_BFu7s_Ui()
{
  {
    init_simple_test("aUc_BFu7s_Ui");
    static STRUCT_IF_C aUc_BFu7s_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu7s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_Ui)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_Ui");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_Ui");
    check_field_offset(lv, v3, 2, "aUc_BFu7s_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_Ui, aUc_BFu7s_Ui)
//============================================================================



static void Test_aUc_BFu7s_Ul()
{
  {
    init_simple_test("aUc_BFu7s_Ul");
    static STRUCT_IF_C aUc_BFu7s_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu7s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_Ul)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_Ul");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_Ul");
    check_field_offset(lv, v3, 2, "aUc_BFu7s_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_Ul, aUc_BFu7s_Ul)
//============================================================================



static void Test_aUc_BFu7s_Us()
{
  {
    init_simple_test("aUc_BFu7s_Us");
    static STRUCT_IF_C aUc_BFu7s_Us lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu7s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_Us)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_Us");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_Us");
    check_field_offset(lv, v3, 2, "aUc_BFu7s_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_Us, aUc_BFu7s_Us)
//============================================================================



static void Test_aUc_BFu7s_Vp()
{
  {
    init_simple_test("aUc_BFu7s_Vp");
    static STRUCT_IF_C aUc_BFu7s_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_BFu7s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu7s_Vp)");
    check_field_offset(lv, v1, 0, "aUc_BFu7s_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 7, 1, "aUc_BFu7s_Vp");
    set_bf_and_test(lv, v2, 1, 0, 7, hide_ull(1LL<<6), "aUc_BFu7s_Vp");
    check_field_offset(lv, v3, 2, "aUc_BFu7s_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu7s_Vp, aUc_BFu7s_Vp)
//============================================================================



static void Test_aUc_BFu8c()
{
  {
    init_simple_test("aUc_BFu8c");
    static STRUCT_IF_C aUc_BFu8c lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c, aUc_BFu8c)
//============================================================================



static void Test_aUc_BFu8c_BFu15i()
{
  {
    init_simple_test("aUc_BFu8c_BFu15i");
    static STRUCT_IF_C aUc_BFu8c_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8c_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aUc_BFu8c_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aUc_BFu8c_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_BFu15i, aUc_BFu8c_BFu15i)
//============================================================================



static void Test_aUc_BFu8c_BFu15ll()
{
  {
    init_simple_test("aUc_BFu8c_BFu15ll");
    static STRUCT_IF_C aUc_BFu8c_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8c_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aUc_BFu8c_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aUc_BFu8c_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_BFu15ll, aUc_BFu8c_BFu15ll)
//============================================================================



static void Test_aUc_BFu8c_BFu15s()
{
  {
    init_simple_test("aUc_BFu8c_BFu15s");
    static STRUCT_IF_C aUc_BFu8c_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8c_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aUc_BFu8c_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aUc_BFu8c_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_BFu15s, aUc_BFu8c_BFu15s)
//============================================================================



static void Test_aUc_BFu8c_BFu16i()
{
  {
    init_simple_test("aUc_BFu8c_BFu16i");
    static STRUCT_IF_C aUc_BFu8c_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8c_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aUc_BFu8c_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aUc_BFu8c_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_BFu16i, aUc_BFu8c_BFu16i)
//============================================================================



static void Test_aUc_BFu8c_BFu16ll()
{
  {
    init_simple_test("aUc_BFu8c_BFu16ll");
    static STRUCT_IF_C aUc_BFu8c_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8c_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aUc_BFu8c_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aUc_BFu8c_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_BFu16ll, aUc_BFu8c_BFu16ll)
//============================================================================



static void Test_aUc_BFu8c_BFu16s()
{
  {
    init_simple_test("aUc_BFu8c_BFu16s");
    static STRUCT_IF_C aUc_BFu8c_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8c_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aUc_BFu8c_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aUc_BFu8c_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_BFu16s, aUc_BFu8c_BFu16s)
//============================================================================



static void Test_aUc_BFu8c_BFu17i()
{
  {
    init_simple_test("aUc_BFu8c_BFu17i");
    static STRUCT_IF_C aUc_BFu8c_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu8c_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aUc_BFu8c_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aUc_BFu8c_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_BFu17i, aUc_BFu8c_BFu17i)
//============================================================================



static void Test_aUc_BFu8c_BFu17ll()
{
  {
    init_simple_test("aUc_BFu8c_BFu17ll");
    static STRUCT_IF_C aUc_BFu8c_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu8c_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aUc_BFu8c_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aUc_BFu8c_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_BFu17ll, aUc_BFu8c_BFu17ll)
//============================================================================



static void Test_aUc_BFu8c_BFu1c()
{
  {
    init_simple_test("aUc_BFu8c_BFu1c");
    static STRUCT_IF_C aUc_BFu8c_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8c_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu1c");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aUc_BFu8c_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_BFu1c, aUc_BFu8c_BFu1c)
//============================================================================



static void Test_aUc_BFu8c_BFu1i()
{
  {
    init_simple_test("aUc_BFu8c_BFu1i");
    static STRUCT_IF_C aUc_BFu8c_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8c_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu1i");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aUc_BFu8c_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_BFu1i, aUc_BFu8c_BFu1i)
//============================================================================



static void Test_aUc_BFu8c_BFu1ll()
{
  {
    init_simple_test("aUc_BFu8c_BFu1ll");
    static STRUCT_IF_C aUc_BFu8c_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8c_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu1ll");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aUc_BFu8c_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_BFu1ll, aUc_BFu8c_BFu1ll)
//============================================================================



static void Test_aUc_BFu8c_BFu1s()
{
  {
    init_simple_test("aUc_BFu8c_BFu1s");
    static STRUCT_IF_C aUc_BFu8c_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8c_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu1s");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aUc_BFu8c_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_BFu1s, aUc_BFu8c_BFu1s)
//============================================================================



static void Test_aUc_BFu8c_BFu31i()
{
  {
    init_simple_test("aUc_BFu8c_BFu31i");
    static STRUCT_IF_C aUc_BFu8c_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu8c_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aUc_BFu8c_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aUc_BFu8c_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_BFu31i, aUc_BFu8c_BFu31i)
//============================================================================



static void Test_aUc_BFu8c_BFu31ll()
{
  {
    init_simple_test("aUc_BFu8c_BFu31ll");
    static STRUCT_IF_C aUc_BFu8c_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu8c_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aUc_BFu8c_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aUc_BFu8c_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_BFu31ll, aUc_BFu8c_BFu31ll)
//============================================================================



static void Test_aUc_BFu8c_BFu32i()
{
  {
    init_simple_test("aUc_BFu8c_BFu32i");
    static STRUCT_IF_C aUc_BFu8c_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu8c_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aUc_BFu8c_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aUc_BFu8c_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_BFu32i, aUc_BFu8c_BFu32i)
//============================================================================



static void Test_aUc_BFu8c_BFu32ll()
{
  {
    init_simple_test("aUc_BFu8c_BFu32ll");
    static STRUCT_IF_C aUc_BFu8c_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu8c_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aUc_BFu8c_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aUc_BFu8c_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_BFu32ll, aUc_BFu8c_BFu32ll)
//============================================================================



static void Test_aUc_BFu8c_BFu33()
{
  {
    init_simple_test("aUc_BFu8c_BFu33");
    static STRUCT_IF_C aUc_BFu8c_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu8c_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "aUc_BFu8c_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "aUc_BFu8c_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_BFu33, aUc_BFu8c_BFu33)
//============================================================================



static void Test_aUc_BFu8c_BFu7c()
{
  {
    init_simple_test("aUc_BFu8c_BFu7c");
    static STRUCT_IF_C aUc_BFu8c_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8c_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aUc_BFu8c_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aUc_BFu8c_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_BFu7c, aUc_BFu8c_BFu7c)
//============================================================================



static void Test_aUc_BFu8c_BFu7i()
{
  {
    init_simple_test("aUc_BFu8c_BFu7i");
    static STRUCT_IF_C aUc_BFu8c_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8c_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aUc_BFu8c_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aUc_BFu8c_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_BFu7i, aUc_BFu8c_BFu7i)
//============================================================================



static void Test_aUc_BFu8c_BFu7ll()
{
  {
    init_simple_test("aUc_BFu8c_BFu7ll");
    static STRUCT_IF_C aUc_BFu8c_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8c_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aUc_BFu8c_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aUc_BFu8c_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_BFu7ll, aUc_BFu8c_BFu7ll)
//============================================================================



static void Test_aUc_BFu8c_BFu7s()
{
  {
    init_simple_test("aUc_BFu8c_BFu7s");
    static STRUCT_IF_C aUc_BFu8c_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8c_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aUc_BFu8c_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aUc_BFu8c_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_BFu7s, aUc_BFu8c_BFu7s)
//============================================================================



static void Test_aUc_BFu8c_BFu8c()
{
  {
    init_simple_test("aUc_BFu8c_BFu8c");
    static STRUCT_IF_C aUc_BFu8c_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8c_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aUc_BFu8c_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_BFu8c, aUc_BFu8c_BFu8c)
//============================================================================



static void Test_aUc_BFu8c_BFu8i()
{
  {
    init_simple_test("aUc_BFu8c_BFu8i");
    static STRUCT_IF_C aUc_BFu8c_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8c_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aUc_BFu8c_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_BFu8i, aUc_BFu8c_BFu8i)
//============================================================================



static void Test_aUc_BFu8c_BFu8ll()
{
  {
    init_simple_test("aUc_BFu8c_BFu8ll");
    static STRUCT_IF_C aUc_BFu8c_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8c_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aUc_BFu8c_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_BFu8ll, aUc_BFu8c_BFu8ll)
//============================================================================



static void Test_aUc_BFu8c_BFu8s()
{
  {
    init_simple_test("aUc_BFu8c_BFu8s");
    static STRUCT_IF_C aUc_BFu8c_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8c_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aUc_BFu8c_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_BFu8s, aUc_BFu8c_BFu8s)
//============================================================================



static void Test_aUc_BFu8c_BFu9i()
{
  {
    init_simple_test("aUc_BFu8c_BFu9i");
    static STRUCT_IF_C aUc_BFu8c_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8c_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aUc_BFu8c_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aUc_BFu8c_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_BFu9i, aUc_BFu8c_BFu9i)
//============================================================================



static void Test_aUc_BFu8c_BFu9ll()
{
  {
    init_simple_test("aUc_BFu8c_BFu9ll");
    static STRUCT_IF_C aUc_BFu8c_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8c_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aUc_BFu8c_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aUc_BFu8c_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_BFu9ll, aUc_BFu8c_BFu9ll)
//============================================================================



static void Test_aUc_BFu8c_BFu9s()
{
  {
    init_simple_test("aUc_BFu8c_BFu9s");
    static STRUCT_IF_C aUc_BFu8c_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8c_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aUc_BFu8c_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aUc_BFu8c_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_BFu9s, aUc_BFu8c_BFu9s)
//============================================================================



static void Test_aUc_BFu8c_C()
{
  {
    init_simple_test("aUc_BFu8c_C");
    static STRUCT_IF_C aUc_BFu8c_C lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8c_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_C)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_C");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_C");
    check_field_offset(lv, v3, 2, "aUc_BFu8c_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_C, aUc_BFu8c_C)
//============================================================================



static void Test_aUc_BFu8c_D()
{
  {
    init_simple_test("aUc_BFu8c_D");
    static STRUCT_IF_C aUc_BFu8c_D lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu8c_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_D)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_D");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_D");
    check_field_offset(lv, v3, 2, "aUc_BFu8c_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_D, aUc_BFu8c_D)
//============================================================================



static void Test_aUc_BFu8c_F()
{
  {
    init_simple_test("aUc_BFu8c_F");
    static STRUCT_IF_C aUc_BFu8c_F lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu8c_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_F)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_F");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_F");
    check_field_offset(lv, v3, 2, "aUc_BFu8c_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_F, aUc_BFu8c_F)
//============================================================================



static void Test_aUc_BFu8c_I()
{
  {
    init_simple_test("aUc_BFu8c_I");
    static STRUCT_IF_C aUc_BFu8c_I lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu8c_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_I)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_I");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_I");
    check_field_offset(lv, v3, 2, "aUc_BFu8c_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_I, aUc_BFu8c_I)
//============================================================================



static void Test_aUc_BFu8c_Ip()
{
  {
    init_simple_test("aUc_BFu8c_Ip");
    static STRUCT_IF_C aUc_BFu8c_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_BFu8c_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_Ip)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_Ip");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_Ip");
    check_field_offset(lv, v3, 2, "aUc_BFu8c_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_Ip, aUc_BFu8c_Ip)
//============================================================================



static void Test_aUc_BFu8c_L()
{
  {
    init_simple_test("aUc_BFu8c_L");
    static STRUCT_IF_C aUc_BFu8c_L lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu8c_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_L)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_L");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_L");
    check_field_offset(lv, v3, 2, "aUc_BFu8c_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_L, aUc_BFu8c_L)
//============================================================================



static void Test_aUc_BFu8c_S()
{
  {
    init_simple_test("aUc_BFu8c_S");
    static STRUCT_IF_C aUc_BFu8c_S lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8c_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_S)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_S");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_S");
    check_field_offset(lv, v3, 2, "aUc_BFu8c_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_S, aUc_BFu8c_S)
//============================================================================



static void Test_aUc_BFu8c_Uc()
{
  {
    init_simple_test("aUc_BFu8c_Uc");
    static STRUCT_IF_C aUc_BFu8c_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8c_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_Uc)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_Uc");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_Uc");
    check_field_offset(lv, v3, 2, "aUc_BFu8c_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_Uc, aUc_BFu8c_Uc)
//============================================================================



static void Test_aUc_BFu8c_Ui()
{
  {
    init_simple_test("aUc_BFu8c_Ui");
    static STRUCT_IF_C aUc_BFu8c_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu8c_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_Ui)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_Ui");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_Ui");
    check_field_offset(lv, v3, 2, "aUc_BFu8c_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_Ui, aUc_BFu8c_Ui)
//============================================================================



static void Test_aUc_BFu8c_Ul()
{
  {
    init_simple_test("aUc_BFu8c_Ul");
    static STRUCT_IF_C aUc_BFu8c_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu8c_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_Ul)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_Ul");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_Ul");
    check_field_offset(lv, v3, 2, "aUc_BFu8c_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_Ul, aUc_BFu8c_Ul)
//============================================================================



static void Test_aUc_BFu8c_Us()
{
  {
    init_simple_test("aUc_BFu8c_Us");
    static STRUCT_IF_C aUc_BFu8c_Us lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8c_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_Us)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_Us");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_Us");
    check_field_offset(lv, v3, 2, "aUc_BFu8c_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_Us, aUc_BFu8c_Us)
//============================================================================



static void Test_aUc_BFu8c_Vp()
{
  {
    init_simple_test("aUc_BFu8c_Vp");
    static STRUCT_IF_C aUc_BFu8c_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_BFu8c_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8c_Vp)");
    check_field_offset(lv, v1, 0, "aUc_BFu8c_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8c_Vp");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8c_Vp");
    check_field_offset(lv, v3, 2, "aUc_BFu8c_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8c_Vp, aUc_BFu8c_Vp)
//============================================================================



static void Test_aUc_BFu8i()
{
  {
    init_simple_test("aUc_BFu8i");
    static STRUCT_IF_C aUc_BFu8i lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i, aUc_BFu8i)
//============================================================================



static void Test_aUc_BFu8i_BFu15i()
{
  {
    init_simple_test("aUc_BFu8i_BFu15i");
    static STRUCT_IF_C aUc_BFu8i_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aUc_BFu8i_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aUc_BFu8i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_BFu15i, aUc_BFu8i_BFu15i)
//============================================================================



static void Test_aUc_BFu8i_BFu15ll()
{
  {
    init_simple_test("aUc_BFu8i_BFu15ll");
    static STRUCT_IF_C aUc_BFu8i_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aUc_BFu8i_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aUc_BFu8i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_BFu15ll, aUc_BFu8i_BFu15ll)
//============================================================================



static void Test_aUc_BFu8i_BFu15s()
{
  {
    init_simple_test("aUc_BFu8i_BFu15s");
    static STRUCT_IF_C aUc_BFu8i_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aUc_BFu8i_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aUc_BFu8i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_BFu15s, aUc_BFu8i_BFu15s)
//============================================================================



static void Test_aUc_BFu8i_BFu16i()
{
  {
    init_simple_test("aUc_BFu8i_BFu16i");
    static STRUCT_IF_C aUc_BFu8i_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aUc_BFu8i_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aUc_BFu8i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_BFu16i, aUc_BFu8i_BFu16i)
//============================================================================



static void Test_aUc_BFu8i_BFu16ll()
{
  {
    init_simple_test("aUc_BFu8i_BFu16ll");
    static STRUCT_IF_C aUc_BFu8i_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aUc_BFu8i_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aUc_BFu8i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_BFu16ll, aUc_BFu8i_BFu16ll)
//============================================================================



static void Test_aUc_BFu8i_BFu16s()
{
  {
    init_simple_test("aUc_BFu8i_BFu16s");
    static STRUCT_IF_C aUc_BFu8i_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aUc_BFu8i_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aUc_BFu8i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_BFu16s, aUc_BFu8i_BFu16s)
//============================================================================



static void Test_aUc_BFu8i_BFu17i()
{
  {
    init_simple_test("aUc_BFu8i_BFu17i");
    static STRUCT_IF_C aUc_BFu8i_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu8i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aUc_BFu8i_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aUc_BFu8i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_BFu17i, aUc_BFu8i_BFu17i)
//============================================================================



static void Test_aUc_BFu8i_BFu17ll()
{
  {
    init_simple_test("aUc_BFu8i_BFu17ll");
    static STRUCT_IF_C aUc_BFu8i_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu8i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aUc_BFu8i_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aUc_BFu8i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_BFu17ll, aUc_BFu8i_BFu17ll)
//============================================================================



static void Test_aUc_BFu8i_BFu1c()
{
  {
    init_simple_test("aUc_BFu8i_BFu1c");
    static STRUCT_IF_C aUc_BFu8i_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu1c");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aUc_BFu8i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_BFu1c, aUc_BFu8i_BFu1c)
//============================================================================



static void Test_aUc_BFu8i_BFu1i()
{
  {
    init_simple_test("aUc_BFu8i_BFu1i");
    static STRUCT_IF_C aUc_BFu8i_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu1i");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aUc_BFu8i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_BFu1i, aUc_BFu8i_BFu1i)
//============================================================================



static void Test_aUc_BFu8i_BFu1ll()
{
  {
    init_simple_test("aUc_BFu8i_BFu1ll");
    static STRUCT_IF_C aUc_BFu8i_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu1ll");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aUc_BFu8i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_BFu1ll, aUc_BFu8i_BFu1ll)
//============================================================================



static void Test_aUc_BFu8i_BFu1s()
{
  {
    init_simple_test("aUc_BFu8i_BFu1s");
    static STRUCT_IF_C aUc_BFu8i_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu1s");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aUc_BFu8i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_BFu1s, aUc_BFu8i_BFu1s)
//============================================================================



static void Test_aUc_BFu8i_BFu31i()
{
  {
    init_simple_test("aUc_BFu8i_BFu31i");
    static STRUCT_IF_C aUc_BFu8i_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu8i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aUc_BFu8i_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aUc_BFu8i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_BFu31i, aUc_BFu8i_BFu31i)
//============================================================================



static void Test_aUc_BFu8i_BFu31ll()
{
  {
    init_simple_test("aUc_BFu8i_BFu31ll");
    static STRUCT_IF_C aUc_BFu8i_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu8i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aUc_BFu8i_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aUc_BFu8i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_BFu31ll, aUc_BFu8i_BFu31ll)
//============================================================================



static void Test_aUc_BFu8i_BFu32i()
{
  {
    init_simple_test("aUc_BFu8i_BFu32i");
    static STRUCT_IF_C aUc_BFu8i_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu8i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aUc_BFu8i_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aUc_BFu8i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_BFu32i, aUc_BFu8i_BFu32i)
//============================================================================



static void Test_aUc_BFu8i_BFu32ll()
{
  {
    init_simple_test("aUc_BFu8i_BFu32ll");
    static STRUCT_IF_C aUc_BFu8i_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu8i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aUc_BFu8i_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aUc_BFu8i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_BFu32ll, aUc_BFu8i_BFu32ll)
//============================================================================



static void Test_aUc_BFu8i_BFu33()
{
  {
    init_simple_test("aUc_BFu8i_BFu33");
    static STRUCT_IF_C aUc_BFu8i_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu8i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "aUc_BFu8i_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "aUc_BFu8i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_BFu33, aUc_BFu8i_BFu33)
//============================================================================



static void Test_aUc_BFu8i_BFu7c()
{
  {
    init_simple_test("aUc_BFu8i_BFu7c");
    static STRUCT_IF_C aUc_BFu8i_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aUc_BFu8i_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aUc_BFu8i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_BFu7c, aUc_BFu8i_BFu7c)
//============================================================================



static void Test_aUc_BFu8i_BFu7i()
{
  {
    init_simple_test("aUc_BFu8i_BFu7i");
    static STRUCT_IF_C aUc_BFu8i_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aUc_BFu8i_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aUc_BFu8i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_BFu7i, aUc_BFu8i_BFu7i)
//============================================================================



static void Test_aUc_BFu8i_BFu7ll()
{
  {
    init_simple_test("aUc_BFu8i_BFu7ll");
    static STRUCT_IF_C aUc_BFu8i_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aUc_BFu8i_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aUc_BFu8i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_BFu7ll, aUc_BFu8i_BFu7ll)
//============================================================================



static void Test_aUc_BFu8i_BFu7s()
{
  {
    init_simple_test("aUc_BFu8i_BFu7s");
    static STRUCT_IF_C aUc_BFu8i_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aUc_BFu8i_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aUc_BFu8i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_BFu7s, aUc_BFu8i_BFu7s)
//============================================================================



static void Test_aUc_BFu8i_BFu8c()
{
  {
    init_simple_test("aUc_BFu8i_BFu8c");
    static STRUCT_IF_C aUc_BFu8i_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aUc_BFu8i_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_BFu8c, aUc_BFu8i_BFu8c)
//============================================================================



static void Test_aUc_BFu8i_BFu8i()
{
  {
    init_simple_test("aUc_BFu8i_BFu8i");
    static STRUCT_IF_C aUc_BFu8i_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aUc_BFu8i_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_BFu8i, aUc_BFu8i_BFu8i)
//============================================================================



static void Test_aUc_BFu8i_BFu8ll()
{
  {
    init_simple_test("aUc_BFu8i_BFu8ll");
    static STRUCT_IF_C aUc_BFu8i_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aUc_BFu8i_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_BFu8ll, aUc_BFu8i_BFu8ll)
//============================================================================



static void Test_aUc_BFu8i_BFu8s()
{
  {
    init_simple_test("aUc_BFu8i_BFu8s");
    static STRUCT_IF_C aUc_BFu8i_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aUc_BFu8i_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_BFu8s, aUc_BFu8i_BFu8s)
//============================================================================



static void Test_aUc_BFu8i_BFu9i()
{
  {
    init_simple_test("aUc_BFu8i_BFu9i");
    static STRUCT_IF_C aUc_BFu8i_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aUc_BFu8i_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aUc_BFu8i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_BFu9i, aUc_BFu8i_BFu9i)
//============================================================================



static void Test_aUc_BFu8i_BFu9ll()
{
  {
    init_simple_test("aUc_BFu8i_BFu9ll");
    static STRUCT_IF_C aUc_BFu8i_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aUc_BFu8i_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aUc_BFu8i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_BFu9ll, aUc_BFu8i_BFu9ll)
//============================================================================



static void Test_aUc_BFu8i_BFu9s()
{
  {
    init_simple_test("aUc_BFu8i_BFu9s");
    static STRUCT_IF_C aUc_BFu8i_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aUc_BFu8i_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aUc_BFu8i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_BFu9s, aUc_BFu8i_BFu9s)
//============================================================================



static void Test_aUc_BFu8i_C()
{
  {
    init_simple_test("aUc_BFu8i_C");
    static STRUCT_IF_C aUc_BFu8i_C lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_C)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_C");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_C");
    check_field_offset(lv, v3, 2, "aUc_BFu8i_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_C, aUc_BFu8i_C)
//============================================================================



static void Test_aUc_BFu8i_D()
{
  {
    init_simple_test("aUc_BFu8i_D");
    static STRUCT_IF_C aUc_BFu8i_D lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu8i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_D)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_D");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_D");
    check_field_offset(lv, v3, 2, "aUc_BFu8i_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_D, aUc_BFu8i_D)
//============================================================================



static void Test_aUc_BFu8i_F()
{
  {
    init_simple_test("aUc_BFu8i_F");
    static STRUCT_IF_C aUc_BFu8i_F lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu8i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_F)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_F");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_F");
    check_field_offset(lv, v3, 2, "aUc_BFu8i_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_F, aUc_BFu8i_F)
//============================================================================



static void Test_aUc_BFu8i_I()
{
  {
    init_simple_test("aUc_BFu8i_I");
    static STRUCT_IF_C aUc_BFu8i_I lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu8i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_I)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_I");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_I");
    check_field_offset(lv, v3, 2, "aUc_BFu8i_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_I, aUc_BFu8i_I)
//============================================================================



static void Test_aUc_BFu8i_Ip()
{
  {
    init_simple_test("aUc_BFu8i_Ip");
    static STRUCT_IF_C aUc_BFu8i_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_BFu8i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_Ip)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_Ip");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_Ip");
    check_field_offset(lv, v3, 2, "aUc_BFu8i_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_Ip, aUc_BFu8i_Ip)
//============================================================================



static void Test_aUc_BFu8i_L()
{
  {
    init_simple_test("aUc_BFu8i_L");
    static STRUCT_IF_C aUc_BFu8i_L lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu8i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_L)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_L");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_L");
    check_field_offset(lv, v3, 2, "aUc_BFu8i_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_L, aUc_BFu8i_L)
//============================================================================



static void Test_aUc_BFu8i_S()
{
  {
    init_simple_test("aUc_BFu8i_S");
    static STRUCT_IF_C aUc_BFu8i_S lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_S)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_S");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_S");
    check_field_offset(lv, v3, 2, "aUc_BFu8i_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_S, aUc_BFu8i_S)
//============================================================================



static void Test_aUc_BFu8i_Uc()
{
  {
    init_simple_test("aUc_BFu8i_Uc");
    static STRUCT_IF_C aUc_BFu8i_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_Uc)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_Uc");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_Uc");
    check_field_offset(lv, v3, 2, "aUc_BFu8i_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_Uc, aUc_BFu8i_Uc)
//============================================================================



static void Test_aUc_BFu8i_Ui()
{
  {
    init_simple_test("aUc_BFu8i_Ui");
    static STRUCT_IF_C aUc_BFu8i_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu8i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_Ui)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_Ui");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_Ui");
    check_field_offset(lv, v3, 2, "aUc_BFu8i_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_Ui, aUc_BFu8i_Ui)
//============================================================================



static void Test_aUc_BFu8i_Ul()
{
  {
    init_simple_test("aUc_BFu8i_Ul");
    static STRUCT_IF_C aUc_BFu8i_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu8i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_Ul)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_Ul");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_Ul");
    check_field_offset(lv, v3, 2, "aUc_BFu8i_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_Ul, aUc_BFu8i_Ul)
//============================================================================



static void Test_aUc_BFu8i_Us()
{
  {
    init_simple_test("aUc_BFu8i_Us");
    static STRUCT_IF_C aUc_BFu8i_Us lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_Us)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_Us");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_Us");
    check_field_offset(lv, v3, 2, "aUc_BFu8i_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_Us, aUc_BFu8i_Us)
//============================================================================



static void Test_aUc_BFu8i_Vp()
{
  {
    init_simple_test("aUc_BFu8i_Vp");
    static STRUCT_IF_C aUc_BFu8i_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_BFu8i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8i_Vp)");
    check_field_offset(lv, v1, 0, "aUc_BFu8i_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8i_Vp");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8i_Vp");
    check_field_offset(lv, v3, 2, "aUc_BFu8i_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8i_Vp, aUc_BFu8i_Vp)
//============================================================================



static void Test_aUc_BFu8ll()
{
  {
    init_simple_test("aUc_BFu8ll");
    static STRUCT_IF_C aUc_BFu8ll lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll, aUc_BFu8ll)
//============================================================================



static void Test_aUc_BFu8ll_BFu15i()
{
  {
    init_simple_test("aUc_BFu8ll_BFu15i");
    static STRUCT_IF_C aUc_BFu8ll_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aUc_BFu8ll_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aUc_BFu8ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_BFu15i, aUc_BFu8ll_BFu15i)
//============================================================================



static void Test_aUc_BFu8ll_BFu15ll()
{
  {
    init_simple_test("aUc_BFu8ll_BFu15ll");
    static STRUCT_IF_C aUc_BFu8ll_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aUc_BFu8ll_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aUc_BFu8ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_BFu15ll, aUc_BFu8ll_BFu15ll)
//============================================================================



static void Test_aUc_BFu8ll_BFu15s()
{
  {
    init_simple_test("aUc_BFu8ll_BFu15s");
    static STRUCT_IF_C aUc_BFu8ll_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aUc_BFu8ll_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aUc_BFu8ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_BFu15s, aUc_BFu8ll_BFu15s)
//============================================================================



static void Test_aUc_BFu8ll_BFu16i()
{
  {
    init_simple_test("aUc_BFu8ll_BFu16i");
    static STRUCT_IF_C aUc_BFu8ll_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aUc_BFu8ll_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aUc_BFu8ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_BFu16i, aUc_BFu8ll_BFu16i)
//============================================================================



static void Test_aUc_BFu8ll_BFu16ll()
{
  {
    init_simple_test("aUc_BFu8ll_BFu16ll");
    static STRUCT_IF_C aUc_BFu8ll_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aUc_BFu8ll_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aUc_BFu8ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_BFu16ll, aUc_BFu8ll_BFu16ll)
//============================================================================



static void Test_aUc_BFu8ll_BFu16s()
{
  {
    init_simple_test("aUc_BFu8ll_BFu16s");
    static STRUCT_IF_C aUc_BFu8ll_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aUc_BFu8ll_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aUc_BFu8ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_BFu16s, aUc_BFu8ll_BFu16s)
//============================================================================



static void Test_aUc_BFu8ll_BFu17i()
{
  {
    init_simple_test("aUc_BFu8ll_BFu17i");
    static STRUCT_IF_C aUc_BFu8ll_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu8ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aUc_BFu8ll_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aUc_BFu8ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_BFu17i, aUc_BFu8ll_BFu17i)
//============================================================================



static void Test_aUc_BFu8ll_BFu17ll()
{
  {
    init_simple_test("aUc_BFu8ll_BFu17ll");
    static STRUCT_IF_C aUc_BFu8ll_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu8ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aUc_BFu8ll_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aUc_BFu8ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_BFu17ll, aUc_BFu8ll_BFu17ll)
//============================================================================



static void Test_aUc_BFu8ll_BFu1c()
{
  {
    init_simple_test("aUc_BFu8ll_BFu1c");
    static STRUCT_IF_C aUc_BFu8ll_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu1c");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aUc_BFu8ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_BFu1c, aUc_BFu8ll_BFu1c)
//============================================================================



static void Test_aUc_BFu8ll_BFu1i()
{
  {
    init_simple_test("aUc_BFu8ll_BFu1i");
    static STRUCT_IF_C aUc_BFu8ll_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu1i");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aUc_BFu8ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_BFu1i, aUc_BFu8ll_BFu1i)
//============================================================================



static void Test_aUc_BFu8ll_BFu1ll()
{
  {
    init_simple_test("aUc_BFu8ll_BFu1ll");
    static STRUCT_IF_C aUc_BFu8ll_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu1ll");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aUc_BFu8ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_BFu1ll, aUc_BFu8ll_BFu1ll)
//============================================================================



static void Test_aUc_BFu8ll_BFu1s()
{
  {
    init_simple_test("aUc_BFu8ll_BFu1s");
    static STRUCT_IF_C aUc_BFu8ll_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu1s");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aUc_BFu8ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_BFu1s, aUc_BFu8ll_BFu1s)
//============================================================================



static void Test_aUc_BFu8ll_BFu31i()
{
  {
    init_simple_test("aUc_BFu8ll_BFu31i");
    static STRUCT_IF_C aUc_BFu8ll_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu8ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aUc_BFu8ll_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aUc_BFu8ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_BFu31i, aUc_BFu8ll_BFu31i)
//============================================================================



static void Test_aUc_BFu8ll_BFu31ll()
{
  {
    init_simple_test("aUc_BFu8ll_BFu31ll");
    static STRUCT_IF_C aUc_BFu8ll_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu8ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aUc_BFu8ll_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aUc_BFu8ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_BFu31ll, aUc_BFu8ll_BFu31ll)
//============================================================================



static void Test_aUc_BFu8ll_BFu32i()
{
  {
    init_simple_test("aUc_BFu8ll_BFu32i");
    static STRUCT_IF_C aUc_BFu8ll_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu8ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aUc_BFu8ll_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aUc_BFu8ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_BFu32i, aUc_BFu8ll_BFu32i)
//============================================================================



static void Test_aUc_BFu8ll_BFu32ll()
{
  {
    init_simple_test("aUc_BFu8ll_BFu32ll");
    static STRUCT_IF_C aUc_BFu8ll_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu8ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aUc_BFu8ll_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aUc_BFu8ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_BFu32ll, aUc_BFu8ll_BFu32ll)
//============================================================================



static void Test_aUc_BFu8ll_BFu33()
{
  {
    init_simple_test("aUc_BFu8ll_BFu33");
    static STRUCT_IF_C aUc_BFu8ll_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu8ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "aUc_BFu8ll_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "aUc_BFu8ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_BFu33, aUc_BFu8ll_BFu33)
//============================================================================



static void Test_aUc_BFu8ll_BFu7c()
{
  {
    init_simple_test("aUc_BFu8ll_BFu7c");
    static STRUCT_IF_C aUc_BFu8ll_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aUc_BFu8ll_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aUc_BFu8ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_BFu7c, aUc_BFu8ll_BFu7c)
//============================================================================



static void Test_aUc_BFu8ll_BFu7i()
{
  {
    init_simple_test("aUc_BFu8ll_BFu7i");
    static STRUCT_IF_C aUc_BFu8ll_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aUc_BFu8ll_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aUc_BFu8ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_BFu7i, aUc_BFu8ll_BFu7i)
//============================================================================



static void Test_aUc_BFu8ll_BFu7ll()
{
  {
    init_simple_test("aUc_BFu8ll_BFu7ll");
    static STRUCT_IF_C aUc_BFu8ll_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aUc_BFu8ll_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aUc_BFu8ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_BFu7ll, aUc_BFu8ll_BFu7ll)
//============================================================================



static void Test_aUc_BFu8ll_BFu7s()
{
  {
    init_simple_test("aUc_BFu8ll_BFu7s");
    static STRUCT_IF_C aUc_BFu8ll_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aUc_BFu8ll_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aUc_BFu8ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_BFu7s, aUc_BFu8ll_BFu7s)
//============================================================================



static void Test_aUc_BFu8ll_BFu8c()
{
  {
    init_simple_test("aUc_BFu8ll_BFu8c");
    static STRUCT_IF_C aUc_BFu8ll_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aUc_BFu8ll_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_BFu8c, aUc_BFu8ll_BFu8c)
//============================================================================



static void Test_aUc_BFu8ll_BFu8i()
{
  {
    init_simple_test("aUc_BFu8ll_BFu8i");
    static STRUCT_IF_C aUc_BFu8ll_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aUc_BFu8ll_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_BFu8i, aUc_BFu8ll_BFu8i)
//============================================================================



static void Test_aUc_BFu8ll_BFu8ll()
{
  {
    init_simple_test("aUc_BFu8ll_BFu8ll");
    static STRUCT_IF_C aUc_BFu8ll_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aUc_BFu8ll_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_BFu8ll, aUc_BFu8ll_BFu8ll)
//============================================================================



static void Test_aUc_BFu8ll_BFu8s()
{
  {
    init_simple_test("aUc_BFu8ll_BFu8s");
    static STRUCT_IF_C aUc_BFu8ll_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aUc_BFu8ll_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_BFu8s, aUc_BFu8ll_BFu8s)
//============================================================================



static void Test_aUc_BFu8ll_BFu9i()
{
  {
    init_simple_test("aUc_BFu8ll_BFu9i");
    static STRUCT_IF_C aUc_BFu8ll_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aUc_BFu8ll_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aUc_BFu8ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_BFu9i, aUc_BFu8ll_BFu9i)
//============================================================================



static void Test_aUc_BFu8ll_BFu9ll()
{
  {
    init_simple_test("aUc_BFu8ll_BFu9ll");
    static STRUCT_IF_C aUc_BFu8ll_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aUc_BFu8ll_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aUc_BFu8ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_BFu9ll, aUc_BFu8ll_BFu9ll)
//============================================================================



static void Test_aUc_BFu8ll_BFu9s()
{
  {
    init_simple_test("aUc_BFu8ll_BFu9s");
    static STRUCT_IF_C aUc_BFu8ll_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aUc_BFu8ll_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aUc_BFu8ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_BFu9s, aUc_BFu8ll_BFu9s)
//============================================================================



static void Test_aUc_BFu8ll_C()
{
  {
    init_simple_test("aUc_BFu8ll_C");
    static STRUCT_IF_C aUc_BFu8ll_C lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_C)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_C");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_C");
    check_field_offset(lv, v3, 2, "aUc_BFu8ll_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_C, aUc_BFu8ll_C)
//============================================================================



static void Test_aUc_BFu8ll_D()
{
  {
    init_simple_test("aUc_BFu8ll_D");
    static STRUCT_IF_C aUc_BFu8ll_D lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu8ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_D)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_D");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_D");
    check_field_offset(lv, v3, 2, "aUc_BFu8ll_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_D, aUc_BFu8ll_D)
//============================================================================



static void Test_aUc_BFu8ll_F()
{
  {
    init_simple_test("aUc_BFu8ll_F");
    static STRUCT_IF_C aUc_BFu8ll_F lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu8ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_F)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_F");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_F");
    check_field_offset(lv, v3, 2, "aUc_BFu8ll_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_F, aUc_BFu8ll_F)
//============================================================================



static void Test_aUc_BFu8ll_I()
{
  {
    init_simple_test("aUc_BFu8ll_I");
    static STRUCT_IF_C aUc_BFu8ll_I lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu8ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_I)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_I");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_I");
    check_field_offset(lv, v3, 2, "aUc_BFu8ll_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_I, aUc_BFu8ll_I)
//============================================================================



static void Test_aUc_BFu8ll_Ip()
{
  {
    init_simple_test("aUc_BFu8ll_Ip");
    static STRUCT_IF_C aUc_BFu8ll_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_BFu8ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_Ip)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_Ip");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_Ip");
    check_field_offset(lv, v3, 2, "aUc_BFu8ll_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_Ip, aUc_BFu8ll_Ip)
//============================================================================



static void Test_aUc_BFu8ll_L()
{
  {
    init_simple_test("aUc_BFu8ll_L");
    static STRUCT_IF_C aUc_BFu8ll_L lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu8ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_L)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_L");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_L");
    check_field_offset(lv, v3, 2, "aUc_BFu8ll_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_L, aUc_BFu8ll_L)
//============================================================================



static void Test_aUc_BFu8ll_S()
{
  {
    init_simple_test("aUc_BFu8ll_S");
    static STRUCT_IF_C aUc_BFu8ll_S lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_S)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_S");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_S");
    check_field_offset(lv, v3, 2, "aUc_BFu8ll_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_S, aUc_BFu8ll_S)
//============================================================================



static void Test_aUc_BFu8ll_Uc()
{
  {
    init_simple_test("aUc_BFu8ll_Uc");
    static STRUCT_IF_C aUc_BFu8ll_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_Uc)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_Uc");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_Uc");
    check_field_offset(lv, v3, 2, "aUc_BFu8ll_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_Uc, aUc_BFu8ll_Uc)
//============================================================================



static void Test_aUc_BFu8ll_Ui()
{
  {
    init_simple_test("aUc_BFu8ll_Ui");
    static STRUCT_IF_C aUc_BFu8ll_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu8ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_Ui)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_Ui");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_Ui");
    check_field_offset(lv, v3, 2, "aUc_BFu8ll_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_Ui, aUc_BFu8ll_Ui)
//============================================================================



static void Test_aUc_BFu8ll_Ul()
{
  {
    init_simple_test("aUc_BFu8ll_Ul");
    static STRUCT_IF_C aUc_BFu8ll_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu8ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_Ul)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_Ul");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_Ul");
    check_field_offset(lv, v3, 2, "aUc_BFu8ll_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_Ul, aUc_BFu8ll_Ul)
//============================================================================



static void Test_aUc_BFu8ll_Us()
{
  {
    init_simple_test("aUc_BFu8ll_Us");
    static STRUCT_IF_C aUc_BFu8ll_Us lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_Us)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_Us");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_Us");
    check_field_offset(lv, v3, 2, "aUc_BFu8ll_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_Us, aUc_BFu8ll_Us)
//============================================================================



static void Test_aUc_BFu8ll_Vp()
{
  {
    init_simple_test("aUc_BFu8ll_Vp");
    static STRUCT_IF_C aUc_BFu8ll_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_BFu8ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8ll_Vp)");
    check_field_offset(lv, v1, 0, "aUc_BFu8ll_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8ll_Vp");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8ll_Vp");
    check_field_offset(lv, v3, 2, "aUc_BFu8ll_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8ll_Vp, aUc_BFu8ll_Vp)
//============================================================================



static void Test_aUc_BFu8s()
{
  {
    init_simple_test("aUc_BFu8s");
    static STRUCT_IF_C aUc_BFu8s lv;
    check2(sizeof(lv), 2, "sizeof(aUc_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s, aUc_BFu8s)
//============================================================================



static void Test_aUc_BFu8s_BFu15i()
{
  {
    init_simple_test("aUc_BFu8s_BFu15i");
    static STRUCT_IF_C aUc_BFu8s_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aUc_BFu8s_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aUc_BFu8s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_BFu15i, aUc_BFu8s_BFu15i)
//============================================================================



static void Test_aUc_BFu8s_BFu15ll()
{
  {
    init_simple_test("aUc_BFu8s_BFu15ll");
    static STRUCT_IF_C aUc_BFu8s_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aUc_BFu8s_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aUc_BFu8s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_BFu15ll, aUc_BFu8s_BFu15ll)
//============================================================================



static void Test_aUc_BFu8s_BFu15s()
{
  {
    init_simple_test("aUc_BFu8s_BFu15s");
    static STRUCT_IF_C aUc_BFu8s_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aUc_BFu8s_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aUc_BFu8s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_BFu15s, aUc_BFu8s_BFu15s)
//============================================================================



static void Test_aUc_BFu8s_BFu16i()
{
  {
    init_simple_test("aUc_BFu8s_BFu16i");
    static STRUCT_IF_C aUc_BFu8s_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aUc_BFu8s_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aUc_BFu8s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_BFu16i, aUc_BFu8s_BFu16i)
//============================================================================



static void Test_aUc_BFu8s_BFu16ll()
{
  {
    init_simple_test("aUc_BFu8s_BFu16ll");
    static STRUCT_IF_C aUc_BFu8s_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aUc_BFu8s_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aUc_BFu8s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_BFu16ll, aUc_BFu8s_BFu16ll)
//============================================================================



static void Test_aUc_BFu8s_BFu16s()
{
  {
    init_simple_test("aUc_BFu8s_BFu16s");
    static STRUCT_IF_C aUc_BFu8s_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aUc_BFu8s_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aUc_BFu8s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_BFu16s, aUc_BFu8s_BFu16s)
//============================================================================



static void Test_aUc_BFu8s_BFu17i()
{
  {
    init_simple_test("aUc_BFu8s_BFu17i");
    static STRUCT_IF_C aUc_BFu8s_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu8s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aUc_BFu8s_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aUc_BFu8s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_BFu17i, aUc_BFu8s_BFu17i)
//============================================================================



static void Test_aUc_BFu8s_BFu17ll()
{
  {
    init_simple_test("aUc_BFu8s_BFu17ll");
    static STRUCT_IF_C aUc_BFu8s_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu8s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aUc_BFu8s_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aUc_BFu8s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_BFu17ll, aUc_BFu8s_BFu17ll)
//============================================================================



static void Test_aUc_BFu8s_BFu1c()
{
  {
    init_simple_test("aUc_BFu8s_BFu1c");
    static STRUCT_IF_C aUc_BFu8s_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu1c");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aUc_BFu8s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_BFu1c, aUc_BFu8s_BFu1c)
//============================================================================



static void Test_aUc_BFu8s_BFu1i()
{
  {
    init_simple_test("aUc_BFu8s_BFu1i");
    static STRUCT_IF_C aUc_BFu8s_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu1i");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aUc_BFu8s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_BFu1i, aUc_BFu8s_BFu1i)
//============================================================================



static void Test_aUc_BFu8s_BFu1ll()
{
  {
    init_simple_test("aUc_BFu8s_BFu1ll");
    static STRUCT_IF_C aUc_BFu8s_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu1ll");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aUc_BFu8s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_BFu1ll, aUc_BFu8s_BFu1ll)
//============================================================================



static void Test_aUc_BFu8s_BFu1s()
{
  {
    init_simple_test("aUc_BFu8s_BFu1s");
    static STRUCT_IF_C aUc_BFu8s_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu1s");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aUc_BFu8s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_BFu1s, aUc_BFu8s_BFu1s)
//============================================================================



static void Test_aUc_BFu8s_BFu31i()
{
  {
    init_simple_test("aUc_BFu8s_BFu31i");
    static STRUCT_IF_C aUc_BFu8s_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu8s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aUc_BFu8s_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aUc_BFu8s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_BFu31i, aUc_BFu8s_BFu31i)
//============================================================================



static void Test_aUc_BFu8s_BFu31ll()
{
  {
    init_simple_test("aUc_BFu8s_BFu31ll");
    static STRUCT_IF_C aUc_BFu8s_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu8s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aUc_BFu8s_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aUc_BFu8s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_BFu31ll, aUc_BFu8s_BFu31ll)
//============================================================================



static void Test_aUc_BFu8s_BFu32i()
{
  {
    init_simple_test("aUc_BFu8s_BFu32i");
    static STRUCT_IF_C aUc_BFu8s_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu8s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aUc_BFu8s_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aUc_BFu8s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_BFu32i, aUc_BFu8s_BFu32i)
//============================================================================



static void Test_aUc_BFu8s_BFu32ll()
{
  {
    init_simple_test("aUc_BFu8s_BFu32ll");
    static STRUCT_IF_C aUc_BFu8s_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu8s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aUc_BFu8s_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aUc_BFu8s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_BFu32ll, aUc_BFu8s_BFu32ll)
//============================================================================



static void Test_aUc_BFu8s_BFu33()
{
  {
    init_simple_test("aUc_BFu8s_BFu33");
    static STRUCT_IF_C aUc_BFu8s_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu8s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "aUc_BFu8s_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "aUc_BFu8s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_BFu33, aUc_BFu8s_BFu33)
//============================================================================



static void Test_aUc_BFu8s_BFu7c()
{
  {
    init_simple_test("aUc_BFu8s_BFu7c");
    static STRUCT_IF_C aUc_BFu8s_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aUc_BFu8s_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aUc_BFu8s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_BFu7c, aUc_BFu8s_BFu7c)
//============================================================================



static void Test_aUc_BFu8s_BFu7i()
{
  {
    init_simple_test("aUc_BFu8s_BFu7i");
    static STRUCT_IF_C aUc_BFu8s_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aUc_BFu8s_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aUc_BFu8s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_BFu7i, aUc_BFu8s_BFu7i)
//============================================================================



static void Test_aUc_BFu8s_BFu7ll()
{
  {
    init_simple_test("aUc_BFu8s_BFu7ll");
    static STRUCT_IF_C aUc_BFu8s_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aUc_BFu8s_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aUc_BFu8s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_BFu7ll, aUc_BFu8s_BFu7ll)
//============================================================================



static void Test_aUc_BFu8s_BFu7s()
{
  {
    init_simple_test("aUc_BFu8s_BFu7s");
    static STRUCT_IF_C aUc_BFu8s_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aUc_BFu8s_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aUc_BFu8s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_BFu7s, aUc_BFu8s_BFu7s)
//============================================================================



static void Test_aUc_BFu8s_BFu8c()
{
  {
    init_simple_test("aUc_BFu8s_BFu8c");
    static STRUCT_IF_C aUc_BFu8s_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aUc_BFu8s_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_BFu8c, aUc_BFu8s_BFu8c)
//============================================================================



static void Test_aUc_BFu8s_BFu8i()
{
  {
    init_simple_test("aUc_BFu8s_BFu8i");
    static STRUCT_IF_C aUc_BFu8s_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aUc_BFu8s_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_BFu8i, aUc_BFu8s_BFu8i)
//============================================================================



static void Test_aUc_BFu8s_BFu8ll()
{
  {
    init_simple_test("aUc_BFu8s_BFu8ll");
    static STRUCT_IF_C aUc_BFu8s_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aUc_BFu8s_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_BFu8ll, aUc_BFu8s_BFu8ll)
//============================================================================



static void Test_aUc_BFu8s_BFu8s()
{
  {
    init_simple_test("aUc_BFu8s_BFu8s");
    static STRUCT_IF_C aUc_BFu8s_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aUc_BFu8s_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_BFu8s, aUc_BFu8s_BFu8s)
//============================================================================



static void Test_aUc_BFu8s_BFu9i()
{
  {
    init_simple_test("aUc_BFu8s_BFu9i");
    static STRUCT_IF_C aUc_BFu8s_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aUc_BFu8s_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aUc_BFu8s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_BFu9i, aUc_BFu8s_BFu9i)
//============================================================================



static void Test_aUc_BFu8s_BFu9ll()
{
  {
    init_simple_test("aUc_BFu8s_BFu9ll");
    static STRUCT_IF_C aUc_BFu8s_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aUc_BFu8s_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aUc_BFu8s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_BFu9ll, aUc_BFu8s_BFu9ll)
//============================================================================



static void Test_aUc_BFu8s_BFu9s()
{
  {
    init_simple_test("aUc_BFu8s_BFu9s");
    static STRUCT_IF_C aUc_BFu8s_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aUc_BFu8s_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aUc_BFu8s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_BFu9s, aUc_BFu8s_BFu9s)
//============================================================================



static void Test_aUc_BFu8s_C()
{
  {
    init_simple_test("aUc_BFu8s_C");
    static STRUCT_IF_C aUc_BFu8s_C lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8s_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_C)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_C");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_C");
    check_field_offset(lv, v3, 2, "aUc_BFu8s_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_C, aUc_BFu8s_C)
//============================================================================



static void Test_aUc_BFu8s_D()
{
  {
    init_simple_test("aUc_BFu8s_D");
    static STRUCT_IF_C aUc_BFu8s_D lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu8s_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_D)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_D");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_D");
    check_field_offset(lv, v3, 2, "aUc_BFu8s_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_D, aUc_BFu8s_D)
//============================================================================



static void Test_aUc_BFu8s_F()
{
  {
    init_simple_test("aUc_BFu8s_F");
    static STRUCT_IF_C aUc_BFu8s_F lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu8s_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_F)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_F");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_F");
    check_field_offset(lv, v3, 2, "aUc_BFu8s_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_F, aUc_BFu8s_F)
//============================================================================



static void Test_aUc_BFu8s_I()
{
  {
    init_simple_test("aUc_BFu8s_I");
    static STRUCT_IF_C aUc_BFu8s_I lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu8s_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_I)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_I");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_I");
    check_field_offset(lv, v3, 2, "aUc_BFu8s_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_I, aUc_BFu8s_I)
//============================================================================



static void Test_aUc_BFu8s_Ip()
{
  {
    init_simple_test("aUc_BFu8s_Ip");
    static STRUCT_IF_C aUc_BFu8s_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_BFu8s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_Ip)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_Ip");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_Ip");
    check_field_offset(lv, v3, 2, "aUc_BFu8s_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_Ip, aUc_BFu8s_Ip)
//============================================================================



static void Test_aUc_BFu8s_L()
{
  {
    init_simple_test("aUc_BFu8s_L");
    static STRUCT_IF_C aUc_BFu8s_L lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu8s_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_L)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_L");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_L");
    check_field_offset(lv, v3, 2, "aUc_BFu8s_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_L, aUc_BFu8s_L)
//============================================================================



static void Test_aUc_BFu8s_S()
{
  {
    init_simple_test("aUc_BFu8s_S");
    static STRUCT_IF_C aUc_BFu8s_S lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8s_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_S)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_S");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_S");
    check_field_offset(lv, v3, 2, "aUc_BFu8s_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_S, aUc_BFu8s_S)
//============================================================================



static void Test_aUc_BFu8s_Uc()
{
  {
    init_simple_test("aUc_BFu8s_Uc");
    static STRUCT_IF_C aUc_BFu8s_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu8s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_Uc)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_Uc");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_Uc");
    check_field_offset(lv, v3, 2, "aUc_BFu8s_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_Uc, aUc_BFu8s_Uc)
//============================================================================



static void Test_aUc_BFu8s_Ui()
{
  {
    init_simple_test("aUc_BFu8s_Ui");
    static STRUCT_IF_C aUc_BFu8s_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu8s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_Ui)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_Ui");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_Ui");
    check_field_offset(lv, v3, 2, "aUc_BFu8s_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_Ui, aUc_BFu8s_Ui)
//============================================================================



static void Test_aUc_BFu8s_Ul()
{
  {
    init_simple_test("aUc_BFu8s_Ul");
    static STRUCT_IF_C aUc_BFu8s_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aUc_BFu8s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_Ul)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_Ul");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_Ul");
    check_field_offset(lv, v3, 2, "aUc_BFu8s_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_Ul, aUc_BFu8s_Ul)
//============================================================================



static void Test_aUc_BFu8s_Us()
{
  {
    init_simple_test("aUc_BFu8s_Us");
    static STRUCT_IF_C aUc_BFu8s_Us lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu8s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_Us)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_Us");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_Us");
    check_field_offset(lv, v3, 2, "aUc_BFu8s_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_Us, aUc_BFu8s_Us)
//============================================================================



static void Test_aUc_BFu8s_Vp()
{
  {
    init_simple_test("aUc_BFu8s_Vp");
    static STRUCT_IF_C aUc_BFu8s_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_BFu8s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu8s_Vp)");
    check_field_offset(lv, v1, 0, "aUc_BFu8s_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 8, 1, "aUc_BFu8s_Vp");
    set_bf_and_test(lv, v2, 1, 0, 8, hide_ull(1LL<<7), "aUc_BFu8s_Vp");
    check_field_offset(lv, v3, 2, "aUc_BFu8s_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu8s_Vp, aUc_BFu8s_Vp)
//============================================================================



static void Test_aUc_BFu9i()
{
  {
    init_simple_test("aUc_BFu9i");
    static STRUCT_IF_C aUc_BFu9i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i, aUc_BFu9i)
//============================================================================



static void Test_aUc_BFu9i_BFu15i()
{
  {
    init_simple_test("aUc_BFu9i_BFu15i");
    static STRUCT_IF_C aUc_BFu9i_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9i_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_BFu15i");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "aUc_BFu9i_BFu15i");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "aUc_BFu9i_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_BFu15i, aUc_BFu9i_BFu15i)
//============================================================================



static void Test_aUc_BFu9i_BFu15ll()
{
  {
    init_simple_test("aUc_BFu9i_BFu15ll");
    static STRUCT_IF_C aUc_BFu9i_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9i_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_BFu15ll");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "aUc_BFu9i_BFu15ll");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "aUc_BFu9i_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_BFu15ll, aUc_BFu9i_BFu15ll)
//============================================================================



static void Test_aUc_BFu9i_BFu15s()
{
  {
    init_simple_test("aUc_BFu9i_BFu15s");
    static STRUCT_IF_C aUc_BFu9i_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9i_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_BFu15s");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "aUc_BFu9i_BFu15s");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "aUc_BFu9i_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_BFu15s, aUc_BFu9i_BFu15s)
//============================================================================



static void Test_aUc_BFu9i_BFu16i()
{
  {
    init_simple_test("aUc_BFu9i_BFu16i");
    static STRUCT_IF_C aUc_BFu9i_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu9i_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_BFu16i");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "aUc_BFu9i_BFu16i");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "aUc_BFu9i_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_BFu16i, aUc_BFu9i_BFu16i)
//============================================================================



static void Test_aUc_BFu9i_BFu16ll()
{
  {
    init_simple_test("aUc_BFu9i_BFu16ll");
    static STRUCT_IF_C aUc_BFu9i_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu9i_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_BFu16ll");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "aUc_BFu9i_BFu16ll");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "aUc_BFu9i_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_BFu16ll, aUc_BFu9i_BFu16ll)
//============================================================================



static void Test_aUc_BFu9i_BFu16s()
{
  {
    init_simple_test("aUc_BFu9i_BFu16s");
    static STRUCT_IF_C aUc_BFu9i_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu9i_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_BFu16s");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "aUc_BFu9i_BFu16s");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "aUc_BFu9i_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_BFu16s, aUc_BFu9i_BFu16s)
//============================================================================



static void Test_aUc_BFu9i_BFu17i()
{
  {
    init_simple_test("aUc_BFu9i_BFu17i");
    static STRUCT_IF_C aUc_BFu9i_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu9i_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_BFu17i");
    set_bf_and_test(lv, v3, 2, 1, 17, 1, "aUc_BFu9i_BFu17i");
    set_bf_and_test(lv, v3, 2, 1, 17, hide_ull(1LL<<16), "aUc_BFu9i_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_BFu17i, aUc_BFu9i_BFu17i)
//============================================================================



static void Test_aUc_BFu9i_BFu17ll()
{
  {
    init_simple_test("aUc_BFu9i_BFu17ll");
    static STRUCT_IF_C aUc_BFu9i_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu9i_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_BFu17ll");
    set_bf_and_test(lv, v3, 2, 1, 17, 1, "aUc_BFu9i_BFu17ll");
    set_bf_and_test(lv, v3, 2, 1, 17, hide_ull(1LL<<16), "aUc_BFu9i_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_BFu17ll, aUc_BFu9i_BFu17ll)
//============================================================================



static void Test_aUc_BFu9i_BFu1c()
{
  {
    init_simple_test("aUc_BFu9i_BFu1c");
    static STRUCT_IF_C aUc_BFu9i_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu9i_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_BFu1c");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aUc_BFu9i_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_BFu1c, aUc_BFu9i_BFu1c)
//============================================================================



static void Test_aUc_BFu9i_BFu1i()
{
  {
    init_simple_test("aUc_BFu9i_BFu1i");
    static STRUCT_IF_C aUc_BFu9i_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu9i_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_BFu1i");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aUc_BFu9i_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_BFu1i, aUc_BFu9i_BFu1i)
//============================================================================



static void Test_aUc_BFu9i_BFu1ll()
{
  {
    init_simple_test("aUc_BFu9i_BFu1ll");
    static STRUCT_IF_C aUc_BFu9i_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu9i_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_BFu1ll");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aUc_BFu9i_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_BFu1ll, aUc_BFu9i_BFu1ll)
//============================================================================



static void Test_aUc_BFu9i_BFu1s()
{
  {
    init_simple_test("aUc_BFu9i_BFu1s");
    static STRUCT_IF_C aUc_BFu9i_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu9i_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_BFu1s");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aUc_BFu9i_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_BFu1s, aUc_BFu9i_BFu1s)
//============================================================================



static void Test_aUc_BFu9i_BFu31i()
{
  {
    init_simple_test("aUc_BFu9i_BFu31i");
    static STRUCT_IF_C aUc_BFu9i_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu9i_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_BFu31i");
    set_bf_and_test(lv, v3, 2, 1, 31, 1, "aUc_BFu9i_BFu31i");
    set_bf_and_test(lv, v3, 2, 1, 31, hide_ull(1LL<<30), "aUc_BFu9i_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_BFu31i, aUc_BFu9i_BFu31i)
//============================================================================



static void Test_aUc_BFu9i_BFu31ll()
{
  {
    init_simple_test("aUc_BFu9i_BFu31ll");
    static STRUCT_IF_C aUc_BFu9i_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu9i_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_BFu31ll");
    set_bf_and_test(lv, v3, 2, 1, 31, 1, "aUc_BFu9i_BFu31ll");
    set_bf_and_test(lv, v3, 2, 1, 31, hide_ull(1LL<<30), "aUc_BFu9i_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_BFu31ll, aUc_BFu9i_BFu31ll)
//============================================================================



static void Test_aUc_BFu9i_BFu32i()
{
  {
    init_simple_test("aUc_BFu9i_BFu32i");
    static STRUCT_IF_C aUc_BFu9i_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu9i_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_BFu32i");
    set_bf_and_test(lv, v3, 2, 1, 32, 1, "aUc_BFu9i_BFu32i");
    set_bf_and_test(lv, v3, 2, 1, 32, hide_ull(1LL<<31), "aUc_BFu9i_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_BFu32i, aUc_BFu9i_BFu32i)
//============================================================================



static void Test_aUc_BFu9i_BFu32ll()
{
  {
    init_simple_test("aUc_BFu9i_BFu32ll");
    static STRUCT_IF_C aUc_BFu9i_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu9i_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_BFu32ll");
    set_bf_and_test(lv, v3, 2, 1, 32, 1, "aUc_BFu9i_BFu32ll");
    set_bf_and_test(lv, v3, 2, 1, 32, hide_ull(1LL<<31), "aUc_BFu9i_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_BFu32ll, aUc_BFu9i_BFu32ll)
//============================================================================



static void Test_aUc_BFu9i_BFu33()
{
  {
    init_simple_test("aUc_BFu9i_BFu33");
    static STRUCT_IF_C aUc_BFu9i_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu9i_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_BFu33");
    set_bf_and_test(lv, v3, 2, 1, 33, 1, "aUc_BFu9i_BFu33");
    set_bf_and_test(lv, v3, 2, 1, 33, hide_ull(1LL<<32), "aUc_BFu9i_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_BFu33, aUc_BFu9i_BFu33)
//============================================================================



static void Test_aUc_BFu9i_BFu7c()
{
  {
    init_simple_test("aUc_BFu9i_BFu7c");
    static STRUCT_IF_C aUc_BFu9i_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu9i_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_BFu7c");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aUc_BFu9i_BFu7c");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aUc_BFu9i_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_BFu7c, aUc_BFu9i_BFu7c)
//============================================================================



static void Test_aUc_BFu9i_BFu7i()
{
  {
    init_simple_test("aUc_BFu9i_BFu7i");
    static STRUCT_IF_C aUc_BFu9i_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu9i_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_BFu7i");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aUc_BFu9i_BFu7i");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aUc_BFu9i_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_BFu7i, aUc_BFu9i_BFu7i)
//============================================================================



static void Test_aUc_BFu9i_BFu7ll()
{
  {
    init_simple_test("aUc_BFu9i_BFu7ll");
    static STRUCT_IF_C aUc_BFu9i_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu9i_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_BFu7ll");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aUc_BFu9i_BFu7ll");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aUc_BFu9i_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_BFu7ll, aUc_BFu9i_BFu7ll)
//============================================================================



static void Test_aUc_BFu9i_BFu7s()
{
  {
    init_simple_test("aUc_BFu9i_BFu7s");
    static STRUCT_IF_C aUc_BFu9i_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu9i_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_BFu7s");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aUc_BFu9i_BFu7s");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aUc_BFu9i_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_BFu7s, aUc_BFu9i_BFu7s)
//============================================================================



static void Test_aUc_BFu9i_BFu8c()
{
  {
    init_simple_test("aUc_BFu9i_BFu8c");
    static STRUCT_IF_C aUc_BFu9i_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9i_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_BFu8c");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aUc_BFu9i_BFu8c");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aUc_BFu9i_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_BFu8c, aUc_BFu9i_BFu8c)
//============================================================================



static void Test_aUc_BFu9i_BFu8i()
{
  {
    init_simple_test("aUc_BFu9i_BFu8i");
    static STRUCT_IF_C aUc_BFu9i_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9i_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_BFu8i");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aUc_BFu9i_BFu8i");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aUc_BFu9i_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_BFu8i, aUc_BFu9i_BFu8i)
//============================================================================



static void Test_aUc_BFu9i_BFu8ll()
{
  {
    init_simple_test("aUc_BFu9i_BFu8ll");
    static STRUCT_IF_C aUc_BFu9i_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9i_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_BFu8ll");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aUc_BFu9i_BFu8ll");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aUc_BFu9i_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_BFu8ll, aUc_BFu9i_BFu8ll)
//============================================================================



static void Test_aUc_BFu9i_BFu8s()
{
  {
    init_simple_test("aUc_BFu9i_BFu8s");
    static STRUCT_IF_C aUc_BFu9i_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9i_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_BFu8s");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aUc_BFu9i_BFu8s");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aUc_BFu9i_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_BFu8s, aUc_BFu9i_BFu8s)
//============================================================================



static void Test_aUc_BFu9i_BFu9i()
{
  {
    init_simple_test("aUc_BFu9i_BFu9i");
    static STRUCT_IF_C aUc_BFu9i_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9i_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_BFu9i");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "aUc_BFu9i_BFu9i");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "aUc_BFu9i_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_BFu9i, aUc_BFu9i_BFu9i)
//============================================================================



static void Test_aUc_BFu9i_BFu9ll()
{
  {
    init_simple_test("aUc_BFu9i_BFu9ll");
    static STRUCT_IF_C aUc_BFu9i_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9i_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_BFu9ll");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "aUc_BFu9i_BFu9ll");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "aUc_BFu9i_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_BFu9ll, aUc_BFu9i_BFu9ll)
//============================================================================



static void Test_aUc_BFu9i_BFu9s()
{
  {
    init_simple_test("aUc_BFu9i_BFu9s");
    static STRUCT_IF_C aUc_BFu9i_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9i_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_BFu9s");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "aUc_BFu9i_BFu9s");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "aUc_BFu9i_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_BFu9s, aUc_BFu9i_BFu9s)
//============================================================================



static void Test_aUc_BFu9i_C()
{
  {
    init_simple_test("aUc_BFu9i_C");
    static STRUCT_IF_C aUc_BFu9i_C lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9i_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_C)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_C");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_C");
    check_field_offset(lv, v3, 3, "aUc_BFu9i_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_C, aUc_BFu9i_C)
//============================================================================



static void Test_aUc_BFu9i_D()
{
  {
    init_simple_test("aUc_BFu9i_D");
    static STRUCT_IF_C aUc_BFu9i_D lv;
    check2(sizeof(lv), 11, "sizeof(aUc_BFu9i_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_D)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_D");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_D");
    check_field_offset(lv, v3, 3, "aUc_BFu9i_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_D, aUc_BFu9i_D)
//============================================================================



static void Test_aUc_BFu9i_F()
{
  {
    init_simple_test("aUc_BFu9i_F");
    static STRUCT_IF_C aUc_BFu9i_F lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu9i_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_F)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_F");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_F");
    check_field_offset(lv, v3, 3, "aUc_BFu9i_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_F, aUc_BFu9i_F)
//============================================================================



static void Test_aUc_BFu9i_I()
{
  {
    init_simple_test("aUc_BFu9i_I");
    static STRUCT_IF_C aUc_BFu9i_I lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu9i_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_I)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_I");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_I");
    check_field_offset(lv, v3, 3, "aUc_BFu9i_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_I, aUc_BFu9i_I)
//============================================================================



static void Test_aUc_BFu9i_Ip()
{
  {
    init_simple_test("aUc_BFu9i_Ip");
    static STRUCT_IF_C aUc_BFu9i_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aUc_BFu9i_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_Ip)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_Ip");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_Ip");
    check_field_offset(lv, v3, 3, "aUc_BFu9i_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_Ip, aUc_BFu9i_Ip)
//============================================================================



static void Test_aUc_BFu9i_L()
{
  {
    init_simple_test("aUc_BFu9i_L");
    static STRUCT_IF_C aUc_BFu9i_L lv;
    check2(sizeof(lv), 11, "sizeof(aUc_BFu9i_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_L)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_L");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_L");
    check_field_offset(lv, v3, 3, "aUc_BFu9i_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_L, aUc_BFu9i_L)
//============================================================================



static void Test_aUc_BFu9i_S()
{
  {
    init_simple_test("aUc_BFu9i_S");
    static STRUCT_IF_C aUc_BFu9i_S lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu9i_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_S)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_S");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_S");
    check_field_offset(lv, v3, 3, "aUc_BFu9i_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_S, aUc_BFu9i_S)
//============================================================================



static void Test_aUc_BFu9i_Uc()
{
  {
    init_simple_test("aUc_BFu9i_Uc");
    static STRUCT_IF_C aUc_BFu9i_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9i_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_Uc)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_Uc");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_Uc");
    check_field_offset(lv, v3, 3, "aUc_BFu9i_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_Uc, aUc_BFu9i_Uc)
//============================================================================



static void Test_aUc_BFu9i_Ui()
{
  {
    init_simple_test("aUc_BFu9i_Ui");
    static STRUCT_IF_C aUc_BFu9i_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu9i_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_Ui)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_Ui");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_Ui");
    check_field_offset(lv, v3, 3, "aUc_BFu9i_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_Ui, aUc_BFu9i_Ui)
//============================================================================



static void Test_aUc_BFu9i_Ul()
{
  {
    init_simple_test("aUc_BFu9i_Ul");
    static STRUCT_IF_C aUc_BFu9i_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aUc_BFu9i_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_Ul)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_Ul");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_Ul");
    check_field_offset(lv, v3, 3, "aUc_BFu9i_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_Ul, aUc_BFu9i_Ul)
//============================================================================



static void Test_aUc_BFu9i_Us()
{
  {
    init_simple_test("aUc_BFu9i_Us");
    static STRUCT_IF_C aUc_BFu9i_Us lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu9i_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_Us)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_Us");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_Us");
    check_field_offset(lv, v3, 3, "aUc_BFu9i_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_Us, aUc_BFu9i_Us)
//============================================================================



static void Test_aUc_BFu9i_Vp()
{
  {
    init_simple_test("aUc_BFu9i_Vp");
    static STRUCT_IF_C aUc_BFu9i_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aUc_BFu9i_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9i_Vp)");
    check_field_offset(lv, v1, 0, "aUc_BFu9i_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9i_Vp");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9i_Vp");
    check_field_offset(lv, v3, 3, "aUc_BFu9i_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9i_Vp, aUc_BFu9i_Vp)
//============================================================================



static void Test_aUc_BFu9ll()
{
  {
    init_simple_test("aUc_BFu9ll");
    static STRUCT_IF_C aUc_BFu9ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll, aUc_BFu9ll)
//============================================================================



static void Test_aUc_BFu9ll_BFu15i()
{
  {
    init_simple_test("aUc_BFu9ll_BFu15i");
    static STRUCT_IF_C aUc_BFu9ll_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9ll_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_BFu15i");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "aUc_BFu9ll_BFu15i");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "aUc_BFu9ll_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_BFu15i, aUc_BFu9ll_BFu15i)
//============================================================================



static void Test_aUc_BFu9ll_BFu15ll()
{
  {
    init_simple_test("aUc_BFu9ll_BFu15ll");
    static STRUCT_IF_C aUc_BFu9ll_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9ll_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_BFu15ll");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "aUc_BFu9ll_BFu15ll");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "aUc_BFu9ll_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_BFu15ll, aUc_BFu9ll_BFu15ll)
//============================================================================



static void Test_aUc_BFu9ll_BFu15s()
{
  {
    init_simple_test("aUc_BFu9ll_BFu15s");
    static STRUCT_IF_C aUc_BFu9ll_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9ll_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_BFu15s");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "aUc_BFu9ll_BFu15s");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "aUc_BFu9ll_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_BFu15s, aUc_BFu9ll_BFu15s)
//============================================================================



static void Test_aUc_BFu9ll_BFu16i()
{
  {
    init_simple_test("aUc_BFu9ll_BFu16i");
    static STRUCT_IF_C aUc_BFu9ll_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu9ll_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_BFu16i");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "aUc_BFu9ll_BFu16i");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "aUc_BFu9ll_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_BFu16i, aUc_BFu9ll_BFu16i)
//============================================================================



static void Test_aUc_BFu9ll_BFu16ll()
{
  {
    init_simple_test("aUc_BFu9ll_BFu16ll");
    static STRUCT_IF_C aUc_BFu9ll_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu9ll_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_BFu16ll");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "aUc_BFu9ll_BFu16ll");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "aUc_BFu9ll_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_BFu16ll, aUc_BFu9ll_BFu16ll)
//============================================================================



static void Test_aUc_BFu9ll_BFu16s()
{
  {
    init_simple_test("aUc_BFu9ll_BFu16s");
    static STRUCT_IF_C aUc_BFu9ll_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu9ll_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_BFu16s");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "aUc_BFu9ll_BFu16s");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "aUc_BFu9ll_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_BFu16s, aUc_BFu9ll_BFu16s)
//============================================================================



static void Test_aUc_BFu9ll_BFu17i()
{
  {
    init_simple_test("aUc_BFu9ll_BFu17i");
    static STRUCT_IF_C aUc_BFu9ll_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu9ll_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_BFu17i");
    set_bf_and_test(lv, v3, 2, 1, 17, 1, "aUc_BFu9ll_BFu17i");
    set_bf_and_test(lv, v3, 2, 1, 17, hide_ull(1LL<<16), "aUc_BFu9ll_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_BFu17i, aUc_BFu9ll_BFu17i)
//============================================================================



static void Test_aUc_BFu9ll_BFu17ll()
{
  {
    init_simple_test("aUc_BFu9ll_BFu17ll");
    static STRUCT_IF_C aUc_BFu9ll_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu9ll_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_BFu17ll");
    set_bf_and_test(lv, v3, 2, 1, 17, 1, "aUc_BFu9ll_BFu17ll");
    set_bf_and_test(lv, v3, 2, 1, 17, hide_ull(1LL<<16), "aUc_BFu9ll_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_BFu17ll, aUc_BFu9ll_BFu17ll)
//============================================================================



static void Test_aUc_BFu9ll_BFu1c()
{
  {
    init_simple_test("aUc_BFu9ll_BFu1c");
    static STRUCT_IF_C aUc_BFu9ll_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu9ll_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_BFu1c");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aUc_BFu9ll_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_BFu1c, aUc_BFu9ll_BFu1c)
//============================================================================



static void Test_aUc_BFu9ll_BFu1i()
{
  {
    init_simple_test("aUc_BFu9ll_BFu1i");
    static STRUCT_IF_C aUc_BFu9ll_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu9ll_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_BFu1i");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aUc_BFu9ll_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_BFu1i, aUc_BFu9ll_BFu1i)
//============================================================================



static void Test_aUc_BFu9ll_BFu1ll()
{
  {
    init_simple_test("aUc_BFu9ll_BFu1ll");
    static STRUCT_IF_C aUc_BFu9ll_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu9ll_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_BFu1ll");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aUc_BFu9ll_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_BFu1ll, aUc_BFu9ll_BFu1ll)
//============================================================================



static void Test_aUc_BFu9ll_BFu1s()
{
  {
    init_simple_test("aUc_BFu9ll_BFu1s");
    static STRUCT_IF_C aUc_BFu9ll_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu9ll_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_BFu1s");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aUc_BFu9ll_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_BFu1s, aUc_BFu9ll_BFu1s)
//============================================================================



static void Test_aUc_BFu9ll_BFu31i()
{
  {
    init_simple_test("aUc_BFu9ll_BFu31i");
    static STRUCT_IF_C aUc_BFu9ll_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu9ll_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_BFu31i");
    set_bf_and_test(lv, v3, 2, 1, 31, 1, "aUc_BFu9ll_BFu31i");
    set_bf_and_test(lv, v3, 2, 1, 31, hide_ull(1LL<<30), "aUc_BFu9ll_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_BFu31i, aUc_BFu9ll_BFu31i)
//============================================================================



static void Test_aUc_BFu9ll_BFu31ll()
{
  {
    init_simple_test("aUc_BFu9ll_BFu31ll");
    static STRUCT_IF_C aUc_BFu9ll_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu9ll_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_BFu31ll");
    set_bf_and_test(lv, v3, 2, 1, 31, 1, "aUc_BFu9ll_BFu31ll");
    set_bf_and_test(lv, v3, 2, 1, 31, hide_ull(1LL<<30), "aUc_BFu9ll_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_BFu31ll, aUc_BFu9ll_BFu31ll)
//============================================================================



static void Test_aUc_BFu9ll_BFu32i()
{
  {
    init_simple_test("aUc_BFu9ll_BFu32i");
    static STRUCT_IF_C aUc_BFu9ll_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu9ll_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_BFu32i");
    set_bf_and_test(lv, v3, 2, 1, 32, 1, "aUc_BFu9ll_BFu32i");
    set_bf_and_test(lv, v3, 2, 1, 32, hide_ull(1LL<<31), "aUc_BFu9ll_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_BFu32i, aUc_BFu9ll_BFu32i)
//============================================================================



static void Test_aUc_BFu9ll_BFu32ll()
{
  {
    init_simple_test("aUc_BFu9ll_BFu32ll");
    static STRUCT_IF_C aUc_BFu9ll_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu9ll_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_BFu32ll");
    set_bf_and_test(lv, v3, 2, 1, 32, 1, "aUc_BFu9ll_BFu32ll");
    set_bf_and_test(lv, v3, 2, 1, 32, hide_ull(1LL<<31), "aUc_BFu9ll_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_BFu32ll, aUc_BFu9ll_BFu32ll)
//============================================================================



static void Test_aUc_BFu9ll_BFu33()
{
  {
    init_simple_test("aUc_BFu9ll_BFu33");
    static STRUCT_IF_C aUc_BFu9ll_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu9ll_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_BFu33");
    set_bf_and_test(lv, v3, 2, 1, 33, 1, "aUc_BFu9ll_BFu33");
    set_bf_and_test(lv, v3, 2, 1, 33, hide_ull(1LL<<32), "aUc_BFu9ll_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_BFu33, aUc_BFu9ll_BFu33)
//============================================================================



static void Test_aUc_BFu9ll_BFu7c()
{
  {
    init_simple_test("aUc_BFu9ll_BFu7c");
    static STRUCT_IF_C aUc_BFu9ll_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu9ll_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_BFu7c");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aUc_BFu9ll_BFu7c");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aUc_BFu9ll_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_BFu7c, aUc_BFu9ll_BFu7c)
//============================================================================



static void Test_aUc_BFu9ll_BFu7i()
{
  {
    init_simple_test("aUc_BFu9ll_BFu7i");
    static STRUCT_IF_C aUc_BFu9ll_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu9ll_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_BFu7i");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aUc_BFu9ll_BFu7i");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aUc_BFu9ll_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_BFu7i, aUc_BFu9ll_BFu7i)
//============================================================================



static void Test_aUc_BFu9ll_BFu7ll()
{
  {
    init_simple_test("aUc_BFu9ll_BFu7ll");
    static STRUCT_IF_C aUc_BFu9ll_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu9ll_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_BFu7ll");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aUc_BFu9ll_BFu7ll");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aUc_BFu9ll_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_BFu7ll, aUc_BFu9ll_BFu7ll)
//============================================================================



static void Test_aUc_BFu9ll_BFu7s()
{
  {
    init_simple_test("aUc_BFu9ll_BFu7s");
    static STRUCT_IF_C aUc_BFu9ll_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu9ll_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_BFu7s");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aUc_BFu9ll_BFu7s");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aUc_BFu9ll_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_BFu7s, aUc_BFu9ll_BFu7s)
//============================================================================



static void Test_aUc_BFu9ll_BFu8c()
{
  {
    init_simple_test("aUc_BFu9ll_BFu8c");
    static STRUCT_IF_C aUc_BFu9ll_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9ll_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_BFu8c");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aUc_BFu9ll_BFu8c");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aUc_BFu9ll_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_BFu8c, aUc_BFu9ll_BFu8c)
//============================================================================



static void Test_aUc_BFu9ll_BFu8i()
{
  {
    init_simple_test("aUc_BFu9ll_BFu8i");
    static STRUCT_IF_C aUc_BFu9ll_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9ll_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_BFu8i");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aUc_BFu9ll_BFu8i");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aUc_BFu9ll_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_BFu8i, aUc_BFu9ll_BFu8i)
//============================================================================



static void Test_aUc_BFu9ll_BFu8ll()
{
  {
    init_simple_test("aUc_BFu9ll_BFu8ll");
    static STRUCT_IF_C aUc_BFu9ll_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9ll_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_BFu8ll");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aUc_BFu9ll_BFu8ll");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aUc_BFu9ll_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_BFu8ll, aUc_BFu9ll_BFu8ll)
//============================================================================



static void Test_aUc_BFu9ll_BFu8s()
{
  {
    init_simple_test("aUc_BFu9ll_BFu8s");
    static STRUCT_IF_C aUc_BFu9ll_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9ll_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_BFu8s");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aUc_BFu9ll_BFu8s");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aUc_BFu9ll_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_BFu8s, aUc_BFu9ll_BFu8s)
//============================================================================



static void Test_aUc_BFu9ll_BFu9i()
{
  {
    init_simple_test("aUc_BFu9ll_BFu9i");
    static STRUCT_IF_C aUc_BFu9ll_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9ll_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_BFu9i");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "aUc_BFu9ll_BFu9i");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "aUc_BFu9ll_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_BFu9i, aUc_BFu9ll_BFu9i)
//============================================================================



static void Test_aUc_BFu9ll_BFu9ll()
{
  {
    init_simple_test("aUc_BFu9ll_BFu9ll");
    static STRUCT_IF_C aUc_BFu9ll_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9ll_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_BFu9ll");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "aUc_BFu9ll_BFu9ll");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "aUc_BFu9ll_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_BFu9ll, aUc_BFu9ll_BFu9ll)
//============================================================================



static void Test_aUc_BFu9ll_BFu9s()
{
  {
    init_simple_test("aUc_BFu9ll_BFu9s");
    static STRUCT_IF_C aUc_BFu9ll_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9ll_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_BFu9s");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "aUc_BFu9ll_BFu9s");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "aUc_BFu9ll_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_BFu9s, aUc_BFu9ll_BFu9s)
//============================================================================



static void Test_aUc_BFu9ll_C()
{
  {
    init_simple_test("aUc_BFu9ll_C");
    static STRUCT_IF_C aUc_BFu9ll_C lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9ll_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_C)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_C");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_C");
    check_field_offset(lv, v3, 3, "aUc_BFu9ll_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_C, aUc_BFu9ll_C)
//============================================================================



static void Test_aUc_BFu9ll_D()
{
  {
    init_simple_test("aUc_BFu9ll_D");
    static STRUCT_IF_C aUc_BFu9ll_D lv;
    check2(sizeof(lv), 11, "sizeof(aUc_BFu9ll_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_D)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_D");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_D");
    check_field_offset(lv, v3, 3, "aUc_BFu9ll_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_D, aUc_BFu9ll_D)
//============================================================================



static void Test_aUc_BFu9ll_F()
{
  {
    init_simple_test("aUc_BFu9ll_F");
    static STRUCT_IF_C aUc_BFu9ll_F lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu9ll_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_F)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_F");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_F");
    check_field_offset(lv, v3, 3, "aUc_BFu9ll_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_F, aUc_BFu9ll_F)
//============================================================================



static void Test_aUc_BFu9ll_I()
{
  {
    init_simple_test("aUc_BFu9ll_I");
    static STRUCT_IF_C aUc_BFu9ll_I lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu9ll_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_I)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_I");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_I");
    check_field_offset(lv, v3, 3, "aUc_BFu9ll_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_I, aUc_BFu9ll_I)
//============================================================================



static void Test_aUc_BFu9ll_Ip()
{
  {
    init_simple_test("aUc_BFu9ll_Ip");
    static STRUCT_IF_C aUc_BFu9ll_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aUc_BFu9ll_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_Ip)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_Ip");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_Ip");
    check_field_offset(lv, v3, 3, "aUc_BFu9ll_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_Ip, aUc_BFu9ll_Ip)
//============================================================================



static void Test_aUc_BFu9ll_L()
{
  {
    init_simple_test("aUc_BFu9ll_L");
    static STRUCT_IF_C aUc_BFu9ll_L lv;
    check2(sizeof(lv), 11, "sizeof(aUc_BFu9ll_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_L)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_L");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_L");
    check_field_offset(lv, v3, 3, "aUc_BFu9ll_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_L, aUc_BFu9ll_L)
//============================================================================



static void Test_aUc_BFu9ll_S()
{
  {
    init_simple_test("aUc_BFu9ll_S");
    static STRUCT_IF_C aUc_BFu9ll_S lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu9ll_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_S)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_S");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_S");
    check_field_offset(lv, v3, 3, "aUc_BFu9ll_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_S, aUc_BFu9ll_S)
//============================================================================



static void Test_aUc_BFu9ll_Uc()
{
  {
    init_simple_test("aUc_BFu9ll_Uc");
    static STRUCT_IF_C aUc_BFu9ll_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9ll_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_Uc)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_Uc");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_Uc");
    check_field_offset(lv, v3, 3, "aUc_BFu9ll_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_Uc, aUc_BFu9ll_Uc)
//============================================================================



static void Test_aUc_BFu9ll_Ui()
{
  {
    init_simple_test("aUc_BFu9ll_Ui");
    static STRUCT_IF_C aUc_BFu9ll_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu9ll_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_Ui)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_Ui");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_Ui");
    check_field_offset(lv, v3, 3, "aUc_BFu9ll_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_Ui, aUc_BFu9ll_Ui)
//============================================================================



static void Test_aUc_BFu9ll_Ul()
{
  {
    init_simple_test("aUc_BFu9ll_Ul");
    static STRUCT_IF_C aUc_BFu9ll_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aUc_BFu9ll_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_Ul)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_Ul");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_Ul");
    check_field_offset(lv, v3, 3, "aUc_BFu9ll_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_Ul, aUc_BFu9ll_Ul)
//============================================================================



static void Test_aUc_BFu9ll_Us()
{
  {
    init_simple_test("aUc_BFu9ll_Us");
    static STRUCT_IF_C aUc_BFu9ll_Us lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu9ll_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_Us)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_Us");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_Us");
    check_field_offset(lv, v3, 3, "aUc_BFu9ll_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_Us, aUc_BFu9ll_Us)
//============================================================================



static void Test_aUc_BFu9ll_Vp()
{
  {
    init_simple_test("aUc_BFu9ll_Vp");
    static STRUCT_IF_C aUc_BFu9ll_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aUc_BFu9ll_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9ll_Vp)");
    check_field_offset(lv, v1, 0, "aUc_BFu9ll_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9ll_Vp");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9ll_Vp");
    check_field_offset(lv, v3, 3, "aUc_BFu9ll_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9ll_Vp, aUc_BFu9ll_Vp)
//============================================================================



static void Test_aUc_BFu9s()
{
  {
    init_simple_test("aUc_BFu9s");
    static STRUCT_IF_C aUc_BFu9s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s, aUc_BFu9s)
//============================================================================



static void Test_aUc_BFu9s_BFu15i()
{
  {
    init_simple_test("aUc_BFu9s_BFu15i");
    static STRUCT_IF_C aUc_BFu9s_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9s_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_BFu15i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_BFu15i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_BFu15i");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "aUc_BFu9s_BFu15i");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "aUc_BFu9s_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_BFu15i, aUc_BFu9s_BFu15i)
//============================================================================



static void Test_aUc_BFu9s_BFu15ll()
{
  {
    init_simple_test("aUc_BFu9s_BFu15ll");
    static STRUCT_IF_C aUc_BFu9s_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9s_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_BFu15ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_BFu15ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_BFu15ll");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "aUc_BFu9s_BFu15ll");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "aUc_BFu9s_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_BFu15ll, aUc_BFu9s_BFu15ll)
//============================================================================



static void Test_aUc_BFu9s_BFu15s()
{
  {
    init_simple_test("aUc_BFu9s_BFu15s");
    static STRUCT_IF_C aUc_BFu9s_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9s_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_BFu15s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_BFu15s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_BFu15s");
    set_bf_and_test(lv, v3, 2, 1, 15, 1, "aUc_BFu9s_BFu15s");
    set_bf_and_test(lv, v3, 2, 1, 15, hide_ull(1LL<<14), "aUc_BFu9s_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_BFu15s, aUc_BFu9s_BFu15s)
//============================================================================



static void Test_aUc_BFu9s_BFu16i()
{
  {
    init_simple_test("aUc_BFu9s_BFu16i");
    static STRUCT_IF_C aUc_BFu9s_BFu16i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu9s_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_BFu16i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_BFu16i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_BFu16i");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "aUc_BFu9s_BFu16i");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "aUc_BFu9s_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_BFu16i, aUc_BFu9s_BFu16i)
//============================================================================



static void Test_aUc_BFu9s_BFu16ll()
{
  {
    init_simple_test("aUc_BFu9s_BFu16ll");
    static STRUCT_IF_C aUc_BFu9s_BFu16ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu9s_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_BFu16ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_BFu16ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_BFu16ll");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "aUc_BFu9s_BFu16ll");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "aUc_BFu9s_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_BFu16ll, aUc_BFu9s_BFu16ll)
//============================================================================



static void Test_aUc_BFu9s_BFu16s()
{
  {
    init_simple_test("aUc_BFu9s_BFu16s");
    static STRUCT_IF_C aUc_BFu9s_BFu16s lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu9s_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_BFu16s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_BFu16s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_BFu16s");
    set_bf_and_test(lv, v3, 2, 1, 16, 1, "aUc_BFu9s_BFu16s");
    set_bf_and_test(lv, v3, 2, 1, 16, hide_ull(1LL<<15), "aUc_BFu9s_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_BFu16s, aUc_BFu9s_BFu16s)
//============================================================================



static void Test_aUc_BFu9s_BFu17i()
{
  {
    init_simple_test("aUc_BFu9s_BFu17i");
    static STRUCT_IF_C aUc_BFu9s_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu9s_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_BFu17i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_BFu17i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_BFu17i");
    set_bf_and_test(lv, v3, 2, 1, 17, 1, "aUc_BFu9s_BFu17i");
    set_bf_and_test(lv, v3, 2, 1, 17, hide_ull(1LL<<16), "aUc_BFu9s_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_BFu17i, aUc_BFu9s_BFu17i)
//============================================================================



static void Test_aUc_BFu9s_BFu17ll()
{
  {
    init_simple_test("aUc_BFu9s_BFu17ll");
    static STRUCT_IF_C aUc_BFu9s_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu9s_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_BFu17ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_BFu17ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_BFu17ll");
    set_bf_and_test(lv, v3, 2, 1, 17, 1, "aUc_BFu9s_BFu17ll");
    set_bf_and_test(lv, v3, 2, 1, 17, hide_ull(1LL<<16), "aUc_BFu9s_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_BFu17ll, aUc_BFu9s_BFu17ll)
//============================================================================



static void Test_aUc_BFu9s_BFu1c()
{
  {
    init_simple_test("aUc_BFu9s_BFu1c");
    static STRUCT_IF_C aUc_BFu9s_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu9s_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_BFu1c.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_BFu1c");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_BFu1c");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aUc_BFu9s_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_BFu1c, aUc_BFu9s_BFu1c)
//============================================================================



static void Test_aUc_BFu9s_BFu1i()
{
  {
    init_simple_test("aUc_BFu9s_BFu1i");
    static STRUCT_IF_C aUc_BFu9s_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu9s_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_BFu1i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_BFu1i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_BFu1i");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aUc_BFu9s_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_BFu1i, aUc_BFu9s_BFu1i)
//============================================================================



static void Test_aUc_BFu9s_BFu1ll()
{
  {
    init_simple_test("aUc_BFu9s_BFu1ll");
    static STRUCT_IF_C aUc_BFu9s_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu9s_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_BFu1ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_BFu1ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_BFu1ll");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aUc_BFu9s_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_BFu1ll, aUc_BFu9s_BFu1ll)
//============================================================================



static void Test_aUc_BFu9s_BFu1s()
{
  {
    init_simple_test("aUc_BFu9s_BFu1s");
    static STRUCT_IF_C aUc_BFu9s_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu9s_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_BFu1s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_BFu1s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_BFu1s");
    set_bf_and_test(lv, v3, 2, 1, 1, 1, "aUc_BFu9s_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_BFu1s, aUc_BFu9s_BFu1s)
//============================================================================



static void Test_aUc_BFu9s_BFu31i()
{
  {
    init_simple_test("aUc_BFu9s_BFu31i");
    static STRUCT_IF_C aUc_BFu9s_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu9s_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_BFu31i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_BFu31i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_BFu31i");
    set_bf_and_test(lv, v3, 2, 1, 31, 1, "aUc_BFu9s_BFu31i");
    set_bf_and_test(lv, v3, 2, 1, 31, hide_ull(1LL<<30), "aUc_BFu9s_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_BFu31i, aUc_BFu9s_BFu31i)
//============================================================================



static void Test_aUc_BFu9s_BFu31ll()
{
  {
    init_simple_test("aUc_BFu9s_BFu31ll");
    static STRUCT_IF_C aUc_BFu9s_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_BFu9s_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_BFu31ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_BFu31ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_BFu31ll");
    set_bf_and_test(lv, v3, 2, 1, 31, 1, "aUc_BFu9s_BFu31ll");
    set_bf_and_test(lv, v3, 2, 1, 31, hide_ull(1LL<<30), "aUc_BFu9s_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_BFu31ll, aUc_BFu9s_BFu31ll)
//============================================================================



static void Test_aUc_BFu9s_BFu32i()
{
  {
    init_simple_test("aUc_BFu9s_BFu32i");
    static STRUCT_IF_C aUc_BFu9s_BFu32i lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu9s_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_BFu32i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_BFu32i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_BFu32i");
    set_bf_and_test(lv, v3, 2, 1, 32, 1, "aUc_BFu9s_BFu32i");
    set_bf_and_test(lv, v3, 2, 1, 32, hide_ull(1LL<<31), "aUc_BFu9s_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_BFu32i, aUc_BFu9s_BFu32i)
//============================================================================



static void Test_aUc_BFu9s_BFu32ll()
{
  {
    init_simple_test("aUc_BFu9s_BFu32ll");
    static STRUCT_IF_C aUc_BFu9s_BFu32ll lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu9s_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_BFu32ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_BFu32ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_BFu32ll");
    set_bf_and_test(lv, v3, 2, 1, 32, 1, "aUc_BFu9s_BFu32ll");
    set_bf_and_test(lv, v3, 2, 1, 32, hide_ull(1LL<<31), "aUc_BFu9s_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_BFu32ll, aUc_BFu9s_BFu32ll)
//============================================================================



static void Test_aUc_BFu9s_BFu33()
{
  {
    init_simple_test("aUc_BFu9s_BFu33");
    static STRUCT_IF_C aUc_BFu9s_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu9s_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_BFu33.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_BFu33");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_BFu33");
    set_bf_and_test(lv, v3, 2, 1, 33, 1, "aUc_BFu9s_BFu33");
    set_bf_and_test(lv, v3, 2, 1, 33, hide_ull(1LL<<32), "aUc_BFu9s_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_BFu33, aUc_BFu9s_BFu33)
//============================================================================



static void Test_aUc_BFu9s_BFu7c()
{
  {
    init_simple_test("aUc_BFu9s_BFu7c");
    static STRUCT_IF_C aUc_BFu9s_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu9s_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_BFu7c.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_BFu7c");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_BFu7c");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aUc_BFu9s_BFu7c");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aUc_BFu9s_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_BFu7c, aUc_BFu9s_BFu7c)
//============================================================================



static void Test_aUc_BFu9s_BFu7i()
{
  {
    init_simple_test("aUc_BFu9s_BFu7i");
    static STRUCT_IF_C aUc_BFu9s_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu9s_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_BFu7i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_BFu7i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_BFu7i");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aUc_BFu9s_BFu7i");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aUc_BFu9s_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_BFu7i, aUc_BFu9s_BFu7i)
//============================================================================



static void Test_aUc_BFu9s_BFu7ll()
{
  {
    init_simple_test("aUc_BFu9s_BFu7ll");
    static STRUCT_IF_C aUc_BFu9s_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu9s_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_BFu7ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_BFu7ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_BFu7ll");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aUc_BFu9s_BFu7ll");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aUc_BFu9s_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_BFu7ll, aUc_BFu9s_BFu7ll)
//============================================================================



static void Test_aUc_BFu9s_BFu7s()
{
  {
    init_simple_test("aUc_BFu9s_BFu7s");
    static STRUCT_IF_C aUc_BFu9s_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_BFu9s_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_BFu7s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_BFu7s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_BFu7s");
    set_bf_and_test(lv, v3, 2, 1, 7, 1, "aUc_BFu9s_BFu7s");
    set_bf_and_test(lv, v3, 2, 1, 7, hide_ull(1LL<<6), "aUc_BFu9s_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_BFu7s, aUc_BFu9s_BFu7s)
//============================================================================



static void Test_aUc_BFu9s_BFu8c()
{
  {
    init_simple_test("aUc_BFu9s_BFu8c");
    static STRUCT_IF_C aUc_BFu9s_BFu8c lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9s_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_BFu8c.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_BFu8c");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_BFu8c");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aUc_BFu9s_BFu8c");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aUc_BFu9s_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_BFu8c, aUc_BFu9s_BFu8c)
//============================================================================



static void Test_aUc_BFu9s_BFu8i()
{
  {
    init_simple_test("aUc_BFu9s_BFu8i");
    static STRUCT_IF_C aUc_BFu9s_BFu8i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9s_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_BFu8i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_BFu8i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_BFu8i");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aUc_BFu9s_BFu8i");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aUc_BFu9s_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_BFu8i, aUc_BFu9s_BFu8i)
//============================================================================



static void Test_aUc_BFu9s_BFu8ll()
{
  {
    init_simple_test("aUc_BFu9s_BFu8ll");
    static STRUCT_IF_C aUc_BFu9s_BFu8ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9s_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_BFu8ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_BFu8ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_BFu8ll");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aUc_BFu9s_BFu8ll");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aUc_BFu9s_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_BFu8ll, aUc_BFu9s_BFu8ll)
//============================================================================



static void Test_aUc_BFu9s_BFu8s()
{
  {
    init_simple_test("aUc_BFu9s_BFu8s");
    static STRUCT_IF_C aUc_BFu9s_BFu8s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9s_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_BFu8s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_BFu8s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_BFu8s");
    set_bf_and_test(lv, v3, 2, 1, 8, 1, "aUc_BFu9s_BFu8s");
    set_bf_and_test(lv, v3, 2, 1, 8, hide_ull(1LL<<7), "aUc_BFu9s_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_BFu8s, aUc_BFu9s_BFu8s)
//============================================================================



static void Test_aUc_BFu9s_BFu9i()
{
  {
    init_simple_test("aUc_BFu9s_BFu9i");
    static STRUCT_IF_C aUc_BFu9s_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9s_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_BFu9i.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_BFu9i");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_BFu9i");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "aUc_BFu9s_BFu9i");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "aUc_BFu9s_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_BFu9i, aUc_BFu9s_BFu9i)
//============================================================================



static void Test_aUc_BFu9s_BFu9ll()
{
  {
    init_simple_test("aUc_BFu9s_BFu9ll");
    static STRUCT_IF_C aUc_BFu9s_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9s_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_BFu9ll.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_BFu9ll");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_BFu9ll");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "aUc_BFu9s_BFu9ll");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "aUc_BFu9s_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_BFu9ll, aUc_BFu9s_BFu9ll)
//============================================================================



static void Test_aUc_BFu9s_BFu9s()
{
  {
    init_simple_test("aUc_BFu9s_BFu9s");
    static STRUCT_IF_C aUc_BFu9s_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9s_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_BFu9s.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_BFu9s");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_BFu9s");
    set_bf_and_test(lv, v3, 2, 1, 9, 1, "aUc_BFu9s_BFu9s");
    set_bf_and_test(lv, v3, 2, 1, 9, hide_ull(1LL<<8), "aUc_BFu9s_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_BFu9s, aUc_BFu9s_BFu9s)
//============================================================================



static void Test_aUc_BFu9s_C()
{
  {
    init_simple_test("aUc_BFu9s_C");
    static STRUCT_IF_C aUc_BFu9s_C lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9s_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_C)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_C.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_C");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_C");
    check_field_offset(lv, v3, 3, "aUc_BFu9s_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_C, aUc_BFu9s_C)
//============================================================================



static void Test_aUc_BFu9s_D()
{
  {
    init_simple_test("aUc_BFu9s_D");
    static STRUCT_IF_C aUc_BFu9s_D lv;
    check2(sizeof(lv), 11, "sizeof(aUc_BFu9s_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_D)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_D.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_D");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_D");
    check_field_offset(lv, v3, 3, "aUc_BFu9s_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_D, aUc_BFu9s_D)
//============================================================================



static void Test_aUc_BFu9s_F()
{
  {
    init_simple_test("aUc_BFu9s_F");
    static STRUCT_IF_C aUc_BFu9s_F lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu9s_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_F)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_F.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_F");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_F");
    check_field_offset(lv, v3, 3, "aUc_BFu9s_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_F, aUc_BFu9s_F)
//============================================================================



static void Test_aUc_BFu9s_I()
{
  {
    init_simple_test("aUc_BFu9s_I");
    static STRUCT_IF_C aUc_BFu9s_I lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu9s_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_I)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_I.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_I");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_I");
    check_field_offset(lv, v3, 3, "aUc_BFu9s_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_I, aUc_BFu9s_I)
//============================================================================



static void Test_aUc_BFu9s_Ip()
{
  {
    init_simple_test("aUc_BFu9s_Ip");
    static STRUCT_IF_C aUc_BFu9s_Ip lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aUc_BFu9s_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_Ip)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_Ip.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_Ip");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_Ip");
    check_field_offset(lv, v3, 3, "aUc_BFu9s_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_Ip, aUc_BFu9s_Ip)
//============================================================================



static void Test_aUc_BFu9s_L()
{
  {
    init_simple_test("aUc_BFu9s_L");
    static STRUCT_IF_C aUc_BFu9s_L lv;
    check2(sizeof(lv), 11, "sizeof(aUc_BFu9s_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_L)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_L.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_L");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_L");
    check_field_offset(lv, v3, 3, "aUc_BFu9s_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_L, aUc_BFu9s_L)
//============================================================================



static void Test_aUc_BFu9s_S()
{
  {
    init_simple_test("aUc_BFu9s_S");
    static STRUCT_IF_C aUc_BFu9s_S lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu9s_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_S)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_S.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_S");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_S");
    check_field_offset(lv, v3, 3, "aUc_BFu9s_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_S, aUc_BFu9s_S)
//============================================================================



static void Test_aUc_BFu9s_Uc()
{
  {
    init_simple_test("aUc_BFu9s_Uc");
    static STRUCT_IF_C aUc_BFu9s_Uc lv;
    check2(sizeof(lv), 4, "sizeof(aUc_BFu9s_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_Uc)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_Uc.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_Uc");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_Uc");
    check_field_offset(lv, v3, 3, "aUc_BFu9s_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_Uc, aUc_BFu9s_Uc)
//============================================================================



static void Test_aUc_BFu9s_Ui()
{
  {
    init_simple_test("aUc_BFu9s_Ui");
    static STRUCT_IF_C aUc_BFu9s_Ui lv;
    check2(sizeof(lv), 7, "sizeof(aUc_BFu9s_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_Ui)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_Ui.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_Ui");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_Ui");
    check_field_offset(lv, v3, 3, "aUc_BFu9s_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_Ui, aUc_BFu9s_Ui)
//============================================================================



static void Test_aUc_BFu9s_Ul()
{
  {
    init_simple_test("aUc_BFu9s_Ul");
    static STRUCT_IF_C aUc_BFu9s_Ul lv;
    check2(sizeof(lv), 11, "sizeof(aUc_BFu9s_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_Ul)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_Ul.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_Ul");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_Ul");
    check_field_offset(lv, v3, 3, "aUc_BFu9s_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_Ul, aUc_BFu9s_Ul)
//============================================================================



static void Test_aUc_BFu9s_Us()
{
  {
    init_simple_test("aUc_BFu9s_Us");
    static STRUCT_IF_C aUc_BFu9s_Us lv;
    check2(sizeof(lv), 5, "sizeof(aUc_BFu9s_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_Us)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_Us.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_Us");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_Us");
    check_field_offset(lv, v3, 3, "aUc_BFu9s_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_Us, aUc_BFu9s_Us)
//============================================================================



static void Test_aUc_BFu9s_Vp()
{
  {
    init_simple_test("aUc_BFu9s_Vp");
    static STRUCT_IF_C aUc_BFu9s_Vp lv;
    check2(sizeof(lv), ABISELECT(11,7), "sizeof(aUc_BFu9s_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_BFu9s_Vp)");
    check_field_offset(lv, v1, 0, "aUc_BFu9s_Vp.v1");
    set_bf_and_test(lv, v2, 1, 0, 9, 1, "aUc_BFu9s_Vp");
    set_bf_and_test(lv, v2, 1, 0, 9, hide_ull(1LL<<8), "aUc_BFu9s_Vp");
    check_field_offset(lv, v3, 3, "aUc_BFu9s_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_BFu9s_Vp, aUc_BFu9s_Vp)
//============================================================================



static void Test_aUc_C()
{
  {
    init_simple_test("aUc_C");
    STRUCT_IF_C aUc_C lv;
    check2(sizeof(lv), 2, "sizeof(aUc_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C)");
    check_field_offset(lv, v1, 0, "aUc_C.v1");
    check_field_offset(lv, v2, 1, "aUc_C.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C, aUc_C)
//============================================================================



static void Test_aUc_C_BFu15i()
{
  {
    init_simple_test("aUc_C_BFu15i");
    static STRUCT_IF_C aUc_C_BFu15i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_C_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_C_BFu15i.v1");
    check_field_offset(lv, v2, 1, "aUc_C_BFu15i.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aUc_C_BFu15i");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aUc_C_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_BFu15i, aUc_C_BFu15i)
//============================================================================



static void Test_aUc_C_BFu15ll()
{
  {
    init_simple_test("aUc_C_BFu15ll");
    static STRUCT_IF_C aUc_C_BFu15ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_C_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_C_BFu15ll.v1");
    check_field_offset(lv, v2, 1, "aUc_C_BFu15ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aUc_C_BFu15ll");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aUc_C_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_BFu15ll, aUc_C_BFu15ll)
//============================================================================



static void Test_aUc_C_BFu15s()
{
  {
    init_simple_test("aUc_C_BFu15s");
    static STRUCT_IF_C aUc_C_BFu15s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_C_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_C_BFu15s.v1");
    check_field_offset(lv, v2, 1, "aUc_C_BFu15s.v2");
    set_bf_and_test(lv, v3, 2, 0, 15, 1, "aUc_C_BFu15s");
    set_bf_and_test(lv, v3, 2, 0, 15, hide_ull(1LL<<14), "aUc_C_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_BFu15s, aUc_C_BFu15s)
//============================================================================



static void Test_aUc_C_BFu16i()
{
  {
    init_simple_test("aUc_C_BFu16i");
    static STRUCT_IF_C aUc_C_BFu16i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_C_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_C_BFu16i.v1");
    check_field_offset(lv, v2, 1, "aUc_C_BFu16i.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aUc_C_BFu16i");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aUc_C_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_BFu16i, aUc_C_BFu16i)
//============================================================================



static void Test_aUc_C_BFu16ll()
{
  {
    init_simple_test("aUc_C_BFu16ll");
    static STRUCT_IF_C aUc_C_BFu16ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_C_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_C_BFu16ll.v1");
    check_field_offset(lv, v2, 1, "aUc_C_BFu16ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aUc_C_BFu16ll");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aUc_C_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_BFu16ll, aUc_C_BFu16ll)
//============================================================================



static void Test_aUc_C_BFu16s()
{
  {
    init_simple_test("aUc_C_BFu16s");
    static STRUCT_IF_C aUc_C_BFu16s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_C_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_C_BFu16s.v1");
    check_field_offset(lv, v2, 1, "aUc_C_BFu16s.v2");
    set_bf_and_test(lv, v3, 2, 0, 16, 1, "aUc_C_BFu16s");
    set_bf_and_test(lv, v3, 2, 0, 16, hide_ull(1LL<<15), "aUc_C_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_BFu16s, aUc_C_BFu16s)
//============================================================================



static void Test_aUc_C_BFu17i()
{
  {
    init_simple_test("aUc_C_BFu17i");
    static STRUCT_IF_C aUc_C_BFu17i lv;
    check2(sizeof(lv), 5, "sizeof(aUc_C_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_C_BFu17i.v1");
    check_field_offset(lv, v2, 1, "aUc_C_BFu17i.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aUc_C_BFu17i");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aUc_C_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_BFu17i, aUc_C_BFu17i)
//============================================================================



static void Test_aUc_C_BFu17ll()
{
  {
    init_simple_test("aUc_C_BFu17ll");
    static STRUCT_IF_C aUc_C_BFu17ll lv;
    check2(sizeof(lv), 5, "sizeof(aUc_C_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_C_BFu17ll.v1");
    check_field_offset(lv, v2, 1, "aUc_C_BFu17ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 17, 1, "aUc_C_BFu17ll");
    set_bf_and_test(lv, v3, 2, 0, 17, hide_ull(1LL<<16), "aUc_C_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_BFu17ll, aUc_C_BFu17ll)
//============================================================================



static void Test_aUc_C_BFu1c()
{
  {
    init_simple_test("aUc_C_BFu1c");
    static STRUCT_IF_C aUc_C_BFu1c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_C_BFu1c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_BFu1c)");
    check_field_offset(lv, v1, 0, "aUc_C_BFu1c.v1");
    check_field_offset(lv, v2, 1, "aUc_C_BFu1c.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aUc_C_BFu1c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_BFu1c, aUc_C_BFu1c)
//============================================================================



static void Test_aUc_C_BFu1i()
{
  {
    init_simple_test("aUc_C_BFu1i");
    static STRUCT_IF_C aUc_C_BFu1i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_C_BFu1i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_BFu1i)");
    check_field_offset(lv, v1, 0, "aUc_C_BFu1i.v1");
    check_field_offset(lv, v2, 1, "aUc_C_BFu1i.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aUc_C_BFu1i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_BFu1i, aUc_C_BFu1i)
//============================================================================



static void Test_aUc_C_BFu1ll()
{
  {
    init_simple_test("aUc_C_BFu1ll");
    static STRUCT_IF_C aUc_C_BFu1ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_C_BFu1ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_BFu1ll)");
    check_field_offset(lv, v1, 0, "aUc_C_BFu1ll.v1");
    check_field_offset(lv, v2, 1, "aUc_C_BFu1ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aUc_C_BFu1ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_BFu1ll, aUc_C_BFu1ll)
//============================================================================



static void Test_aUc_C_BFu1s()
{
  {
    init_simple_test("aUc_C_BFu1s");
    static STRUCT_IF_C aUc_C_BFu1s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_C_BFu1s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_BFu1s)");
    check_field_offset(lv, v1, 0, "aUc_C_BFu1s.v1");
    check_field_offset(lv, v2, 1, "aUc_C_BFu1s.v2");
    set_bf_and_test(lv, v3, 2, 0, 1, 1, "aUc_C_BFu1s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_BFu1s, aUc_C_BFu1s)
//============================================================================



static void Test_aUc_C_BFu31i()
{
  {
    init_simple_test("aUc_C_BFu31i");
    static STRUCT_IF_C aUc_C_BFu31i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_C_BFu31i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_BFu31i)");
    check_field_offset(lv, v1, 0, "aUc_C_BFu31i.v1");
    check_field_offset(lv, v2, 1, "aUc_C_BFu31i.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aUc_C_BFu31i");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aUc_C_BFu31i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_BFu31i, aUc_C_BFu31i)
//============================================================================



static void Test_aUc_C_BFu31ll()
{
  {
    init_simple_test("aUc_C_BFu31ll");
    static STRUCT_IF_C aUc_C_BFu31ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_C_BFu31ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_BFu31ll)");
    check_field_offset(lv, v1, 0, "aUc_C_BFu31ll.v1");
    check_field_offset(lv, v2, 1, "aUc_C_BFu31ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 31, 1, "aUc_C_BFu31ll");
    set_bf_and_test(lv, v3, 2, 0, 31, hide_ull(1LL<<30), "aUc_C_BFu31ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_BFu31ll, aUc_C_BFu31ll)
//============================================================================



static void Test_aUc_C_BFu32i()
{
  {
    init_simple_test("aUc_C_BFu32i");
    static STRUCT_IF_C aUc_C_BFu32i lv;
    check2(sizeof(lv), 6, "sizeof(aUc_C_BFu32i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_BFu32i)");
    check_field_offset(lv, v1, 0, "aUc_C_BFu32i.v1");
    check_field_offset(lv, v2, 1, "aUc_C_BFu32i.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aUc_C_BFu32i");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aUc_C_BFu32i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_BFu32i, aUc_C_BFu32i)
//============================================================================



static void Test_aUc_C_BFu32ll()
{
  {
    init_simple_test("aUc_C_BFu32ll");
    static STRUCT_IF_C aUc_C_BFu32ll lv;
    check2(sizeof(lv), 6, "sizeof(aUc_C_BFu32ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_BFu32ll)");
    check_field_offset(lv, v1, 0, "aUc_C_BFu32ll.v1");
    check_field_offset(lv, v2, 1, "aUc_C_BFu32ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 32, 1, "aUc_C_BFu32ll");
    set_bf_and_test(lv, v3, 2, 0, 32, hide_ull(1LL<<31), "aUc_C_BFu32ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_BFu32ll, aUc_C_BFu32ll)
//============================================================================



static void Test_aUc_C_BFu33()
{
  {
    init_simple_test("aUc_C_BFu33");
    static STRUCT_IF_C aUc_C_BFu33 lv;
    check2(sizeof(lv), 7, "sizeof(aUc_C_BFu33)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_BFu33)");
    check_field_offset(lv, v1, 0, "aUc_C_BFu33.v1");
    check_field_offset(lv, v2, 1, "aUc_C_BFu33.v2");
    set_bf_and_test(lv, v3, 2, 0, 33, 1, "aUc_C_BFu33");
    set_bf_and_test(lv, v3, 2, 0, 33, hide_ull(1LL<<32), "aUc_C_BFu33");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_BFu33, aUc_C_BFu33)
//============================================================================



static void Test_aUc_C_BFu7c()
{
  {
    init_simple_test("aUc_C_BFu7c");
    static STRUCT_IF_C aUc_C_BFu7c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_C_BFu7c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_BFu7c)");
    check_field_offset(lv, v1, 0, "aUc_C_BFu7c.v1");
    check_field_offset(lv, v2, 1, "aUc_C_BFu7c.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aUc_C_BFu7c");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aUc_C_BFu7c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_BFu7c, aUc_C_BFu7c)
//============================================================================



static void Test_aUc_C_BFu7i()
{
  {
    init_simple_test("aUc_C_BFu7i");
    static STRUCT_IF_C aUc_C_BFu7i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_C_BFu7i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_BFu7i)");
    check_field_offset(lv, v1, 0, "aUc_C_BFu7i.v1");
    check_field_offset(lv, v2, 1, "aUc_C_BFu7i.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aUc_C_BFu7i");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aUc_C_BFu7i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_BFu7i, aUc_C_BFu7i)
//============================================================================



static void Test_aUc_C_BFu7ll()
{
  {
    init_simple_test("aUc_C_BFu7ll");
    static STRUCT_IF_C aUc_C_BFu7ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_C_BFu7ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_BFu7ll)");
    check_field_offset(lv, v1, 0, "aUc_C_BFu7ll.v1");
    check_field_offset(lv, v2, 1, "aUc_C_BFu7ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aUc_C_BFu7ll");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aUc_C_BFu7ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_BFu7ll, aUc_C_BFu7ll)
//============================================================================



static void Test_aUc_C_BFu7s()
{
  {
    init_simple_test("aUc_C_BFu7s");
    static STRUCT_IF_C aUc_C_BFu7s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_C_BFu7s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_BFu7s)");
    check_field_offset(lv, v1, 0, "aUc_C_BFu7s.v1");
    check_field_offset(lv, v2, 1, "aUc_C_BFu7s.v2");
    set_bf_and_test(lv, v3, 2, 0, 7, 1, "aUc_C_BFu7s");
    set_bf_and_test(lv, v3, 2, 0, 7, hide_ull(1LL<<6), "aUc_C_BFu7s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_BFu7s, aUc_C_BFu7s)
//============================================================================



static void Test_aUc_C_BFu8c()
{
  {
    init_simple_test("aUc_C_BFu8c");
    static STRUCT_IF_C aUc_C_BFu8c lv;
    check2(sizeof(lv), 3, "sizeof(aUc_C_BFu8c)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_BFu8c)");
    check_field_offset(lv, v1, 0, "aUc_C_BFu8c.v1");
    check_field_offset(lv, v2, 1, "aUc_C_BFu8c.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aUc_C_BFu8c");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aUc_C_BFu8c");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_BFu8c, aUc_C_BFu8c)
//============================================================================



static void Test_aUc_C_BFu8i()
{
  {
    init_simple_test("aUc_C_BFu8i");
    static STRUCT_IF_C aUc_C_BFu8i lv;
    check2(sizeof(lv), 3, "sizeof(aUc_C_BFu8i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_BFu8i)");
    check_field_offset(lv, v1, 0, "aUc_C_BFu8i.v1");
    check_field_offset(lv, v2, 1, "aUc_C_BFu8i.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aUc_C_BFu8i");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aUc_C_BFu8i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_BFu8i, aUc_C_BFu8i)
//============================================================================



static void Test_aUc_C_BFu8ll()
{
  {
    init_simple_test("aUc_C_BFu8ll");
    static STRUCT_IF_C aUc_C_BFu8ll lv;
    check2(sizeof(lv), 3, "sizeof(aUc_C_BFu8ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_BFu8ll)");
    check_field_offset(lv, v1, 0, "aUc_C_BFu8ll.v1");
    check_field_offset(lv, v2, 1, "aUc_C_BFu8ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aUc_C_BFu8ll");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aUc_C_BFu8ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_BFu8ll, aUc_C_BFu8ll)
//============================================================================



static void Test_aUc_C_BFu8s()
{
  {
    init_simple_test("aUc_C_BFu8s");
    static STRUCT_IF_C aUc_C_BFu8s lv;
    check2(sizeof(lv), 3, "sizeof(aUc_C_BFu8s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_BFu8s)");
    check_field_offset(lv, v1, 0, "aUc_C_BFu8s.v1");
    check_field_offset(lv, v2, 1, "aUc_C_BFu8s.v2");
    set_bf_and_test(lv, v3, 2, 0, 8, 1, "aUc_C_BFu8s");
    set_bf_and_test(lv, v3, 2, 0, 8, hide_ull(1LL<<7), "aUc_C_BFu8s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_BFu8s, aUc_C_BFu8s)
//============================================================================



static void Test_aUc_C_BFu9i()
{
  {
    init_simple_test("aUc_C_BFu9i");
    static STRUCT_IF_C aUc_C_BFu9i lv;
    check2(sizeof(lv), 4, "sizeof(aUc_C_BFu9i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_BFu9i)");
    check_field_offset(lv, v1, 0, "aUc_C_BFu9i.v1");
    check_field_offset(lv, v2, 1, "aUc_C_BFu9i.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aUc_C_BFu9i");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aUc_C_BFu9i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_BFu9i, aUc_C_BFu9i)
//============================================================================



static void Test_aUc_C_BFu9ll()
{
  {
    init_simple_test("aUc_C_BFu9ll");
    static STRUCT_IF_C aUc_C_BFu9ll lv;
    check2(sizeof(lv), 4, "sizeof(aUc_C_BFu9ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_BFu9ll)");
    check_field_offset(lv, v1, 0, "aUc_C_BFu9ll.v1");
    check_field_offset(lv, v2, 1, "aUc_C_BFu9ll.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aUc_C_BFu9ll");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aUc_C_BFu9ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_BFu9ll, aUc_C_BFu9ll)
//============================================================================



static void Test_aUc_C_BFu9s()
{
  {
    init_simple_test("aUc_C_BFu9s");
    static STRUCT_IF_C aUc_C_BFu9s lv;
    check2(sizeof(lv), 4, "sizeof(aUc_C_BFu9s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_BFu9s)");
    check_field_offset(lv, v1, 0, "aUc_C_BFu9s.v1");
    check_field_offset(lv, v2, 1, "aUc_C_BFu9s.v2");
    set_bf_and_test(lv, v3, 2, 0, 9, 1, "aUc_C_BFu9s");
    set_bf_and_test(lv, v3, 2, 0, 9, hide_ull(1LL<<8), "aUc_C_BFu9s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_BFu9s, aUc_C_BFu9s)
//============================================================================



static void Test_aUc_C_C()
{
  {
    init_simple_test("aUc_C_C");
    STRUCT_IF_C aUc_C_C lv;
    check2(sizeof(lv), 3, "sizeof(aUc_C_C)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_C)");
    check_field_offset(lv, v1, 0, "aUc_C_C.v1");
    check_field_offset(lv, v2, 1, "aUc_C_C.v2");
    check_field_offset(lv, v3, 2, "aUc_C_C.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_C, aUc_C_C)
//============================================================================



static void Test_aUc_C_D()
{
  {
    init_simple_test("aUc_C_D");
    STRUCT_IF_C aUc_C_D lv;
    check2(sizeof(lv), 10, "sizeof(aUc_C_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_D)");
    check_field_offset(lv, v1, 0, "aUc_C_D.v1");
    check_field_offset(lv, v2, 1, "aUc_C_D.v2");
    check_field_offset(lv, v3, 2, "aUc_C_D.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_D, aUc_C_D)
//============================================================================



static void Test_aUc_C_F()
{
  {
    init_simple_test("aUc_C_F");
    STRUCT_IF_C aUc_C_F lv;
    check2(sizeof(lv), 6, "sizeof(aUc_C_F)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_F)");
    check_field_offset(lv, v1, 0, "aUc_C_F.v1");
    check_field_offset(lv, v2, 1, "aUc_C_F.v2");
    check_field_offset(lv, v3, 2, "aUc_C_F.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_F, aUc_C_F)
//============================================================================



static void Test_aUc_C_I()
{
  {
    init_simple_test("aUc_C_I");
    STRUCT_IF_C aUc_C_I lv;
    check2(sizeof(lv), 6, "sizeof(aUc_C_I)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_I)");
    check_field_offset(lv, v1, 0, "aUc_C_I.v1");
    check_field_offset(lv, v2, 1, "aUc_C_I.v2");
    check_field_offset(lv, v3, 2, "aUc_C_I.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_I, aUc_C_I)
//============================================================================



static void Test_aUc_C_Ip()
{
  {
    init_simple_test("aUc_C_Ip");
    STRUCT_IF_C aUc_C_Ip lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_C_Ip)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_Ip)");
    check_field_offset(lv, v1, 0, "aUc_C_Ip.v1");
    check_field_offset(lv, v2, 1, "aUc_C_Ip.v2");
    check_field_offset(lv, v3, 2, "aUc_C_Ip.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_Ip, aUc_C_Ip)
//============================================================================



static void Test_aUc_C_L()
{
  {
    init_simple_test("aUc_C_L");
    STRUCT_IF_C aUc_C_L lv;
    check2(sizeof(lv), 10, "sizeof(aUc_C_L)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_L)");
    check_field_offset(lv, v1, 0, "aUc_C_L.v1");
    check_field_offset(lv, v2, 1, "aUc_C_L.v2");
    check_field_offset(lv, v3, 2, "aUc_C_L.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_L, aUc_C_L)
//============================================================================



static void Test_aUc_C_S()
{
  {
    init_simple_test("aUc_C_S");
    STRUCT_IF_C aUc_C_S lv;
    check2(sizeof(lv), 4, "sizeof(aUc_C_S)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_S)");
    check_field_offset(lv, v1, 0, "aUc_C_S.v1");
    check_field_offset(lv, v2, 1, "aUc_C_S.v2");
    check_field_offset(lv, v3, 2, "aUc_C_S.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_S, aUc_C_S)
//============================================================================



static void Test_aUc_C_Uc()
{
  {
    init_simple_test("aUc_C_Uc");
    STRUCT_IF_C aUc_C_Uc lv;
    check2(sizeof(lv), 3, "sizeof(aUc_C_Uc)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_Uc)");
    check_field_offset(lv, v1, 0, "aUc_C_Uc.v1");
    check_field_offset(lv, v2, 1, "aUc_C_Uc.v2");
    check_field_offset(lv, v3, 2, "aUc_C_Uc.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_Uc, aUc_C_Uc)
//============================================================================



static void Test_aUc_C_Ui()
{
  {
    init_simple_test("aUc_C_Ui");
    STRUCT_IF_C aUc_C_Ui lv;
    check2(sizeof(lv), 6, "sizeof(aUc_C_Ui)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_Ui)");
    check_field_offset(lv, v1, 0, "aUc_C_Ui.v1");
    check_field_offset(lv, v2, 1, "aUc_C_Ui.v2");
    check_field_offset(lv, v3, 2, "aUc_C_Ui.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_Ui, aUc_C_Ui)
//============================================================================



static void Test_aUc_C_Ul()
{
  {
    init_simple_test("aUc_C_Ul");
    STRUCT_IF_C aUc_C_Ul lv;
    check2(sizeof(lv), 10, "sizeof(aUc_C_Ul)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_Ul)");
    check_field_offset(lv, v1, 0, "aUc_C_Ul.v1");
    check_field_offset(lv, v2, 1, "aUc_C_Ul.v2");
    check_field_offset(lv, v3, 2, "aUc_C_Ul.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_Ul, aUc_C_Ul)
//============================================================================



static void Test_aUc_C_Us()
{
  {
    init_simple_test("aUc_C_Us");
    STRUCT_IF_C aUc_C_Us lv;
    check2(sizeof(lv), 4, "sizeof(aUc_C_Us)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_Us)");
    check_field_offset(lv, v1, 0, "aUc_C_Us.v1");
    check_field_offset(lv, v2, 1, "aUc_C_Us.v2");
    check_field_offset(lv, v3, 2, "aUc_C_Us.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_Us, aUc_C_Us)
//============================================================================



static void Test_aUc_C_Vp()
{
  {
    init_simple_test("aUc_C_Vp");
    STRUCT_IF_C aUc_C_Vp lv;
    check2(sizeof(lv), ABISELECT(10,6), "sizeof(aUc_C_Vp)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_C_Vp)");
    check_field_offset(lv, v1, 0, "aUc_C_Vp.v1");
    check_field_offset(lv, v2, 1, "aUc_C_Vp.v2");
    check_field_offset(lv, v3, 2, "aUc_C_Vp.v3");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_C_Vp, aUc_C_Vp)
//============================================================================



static void Test_aUc_D()
{
  {
    init_simple_test("aUc_D");
    STRUCT_IF_C aUc_D lv;
    check2(sizeof(lv), 9, "sizeof(aUc_D)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_D)");
    check_field_offset(lv, v1, 0, "aUc_D.v1");
    check_field_offset(lv, v2, 1, "aUc_D.v2");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_D, aUc_D)
//============================================================================



static void Test_aUc_D_BFu15i()
{
  {
    init_simple_test("aUc_D_BFu15i");
    static STRUCT_IF_C aUc_D_BFu15i lv;
    check2(sizeof(lv), 11, "sizeof(aUc_D_BFu15i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_D_BFu15i)");
    check_field_offset(lv, v1, 0, "aUc_D_BFu15i.v1");
    check_field_offset(lv, v2, 1, "aUc_D_BFu15i.v2");
    set_bf_and_test(lv, v3, 9, 0, 15, 1, "aUc_D_BFu15i");
    set_bf_and_test(lv, v3, 9, 0, 15, hide_ull(1LL<<14), "aUc_D_BFu15i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_D_BFu15i, aUc_D_BFu15i)
//============================================================================



static void Test_aUc_D_BFu15ll()
{
  {
    init_simple_test("aUc_D_BFu15ll");
    static STRUCT_IF_C aUc_D_BFu15ll lv;
    check2(sizeof(lv), 11, "sizeof(aUc_D_BFu15ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_D_BFu15ll)");
    check_field_offset(lv, v1, 0, "aUc_D_BFu15ll.v1");
    check_field_offset(lv, v2, 1, "aUc_D_BFu15ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 15, 1, "aUc_D_BFu15ll");
    set_bf_and_test(lv, v3, 9, 0, 15, hide_ull(1LL<<14), "aUc_D_BFu15ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_D_BFu15ll, aUc_D_BFu15ll)
//============================================================================



static void Test_aUc_D_BFu15s()
{
  {
    init_simple_test("aUc_D_BFu15s");
    static STRUCT_IF_C aUc_D_BFu15s lv;
    check2(sizeof(lv), 11, "sizeof(aUc_D_BFu15s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_D_BFu15s)");
    check_field_offset(lv, v1, 0, "aUc_D_BFu15s.v1");
    check_field_offset(lv, v2, 1, "aUc_D_BFu15s.v2");
    set_bf_and_test(lv, v3, 9, 0, 15, 1, "aUc_D_BFu15s");
    set_bf_and_test(lv, v3, 9, 0, 15, hide_ull(1LL<<14), "aUc_D_BFu15s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_D_BFu15s, aUc_D_BFu15s)
//============================================================================



static void Test_aUc_D_BFu16i()
{
  {
    init_simple_test("aUc_D_BFu16i");
    static STRUCT_IF_C aUc_D_BFu16i lv;
    check2(sizeof(lv), 11, "sizeof(aUc_D_BFu16i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_D_BFu16i)");
    check_field_offset(lv, v1, 0, "aUc_D_BFu16i.v1");
    check_field_offset(lv, v2, 1, "aUc_D_BFu16i.v2");
    set_bf_and_test(lv, v3, 9, 0, 16, 1, "aUc_D_BFu16i");
    set_bf_and_test(lv, v3, 9, 0, 16, hide_ull(1LL<<15), "aUc_D_BFu16i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_D_BFu16i, aUc_D_BFu16i)
//============================================================================



static void Test_aUc_D_BFu16ll()
{
  {
    init_simple_test("aUc_D_BFu16ll");
    static STRUCT_IF_C aUc_D_BFu16ll lv;
    check2(sizeof(lv), 11, "sizeof(aUc_D_BFu16ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_D_BFu16ll)");
    check_field_offset(lv, v1, 0, "aUc_D_BFu16ll.v1");
    check_field_offset(lv, v2, 1, "aUc_D_BFu16ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 16, 1, "aUc_D_BFu16ll");
    set_bf_and_test(lv, v3, 9, 0, 16, hide_ull(1LL<<15), "aUc_D_BFu16ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_D_BFu16ll, aUc_D_BFu16ll)
//============================================================================



static void Test_aUc_D_BFu16s()
{
  {
    init_simple_test("aUc_D_BFu16s");
    static STRUCT_IF_C aUc_D_BFu16s lv;
    check2(sizeof(lv), 11, "sizeof(aUc_D_BFu16s)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_D_BFu16s)");
    check_field_offset(lv, v1, 0, "aUc_D_BFu16s.v1");
    check_field_offset(lv, v2, 1, "aUc_D_BFu16s.v2");
    set_bf_and_test(lv, v3, 9, 0, 16, 1, "aUc_D_BFu16s");
    set_bf_and_test(lv, v3, 9, 0, 16, hide_ull(1LL<<15), "aUc_D_BFu16s");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_D_BFu16s, aUc_D_BFu16s)
//============================================================================



static void Test_aUc_D_BFu17i()
{
  {
    init_simple_test("aUc_D_BFu17i");
    static STRUCT_IF_C aUc_D_BFu17i lv;
    check2(sizeof(lv), 12, "sizeof(aUc_D_BFu17i)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_D_BFu17i)");
    check_field_offset(lv, v1, 0, "aUc_D_BFu17i.v1");
    check_field_offset(lv, v2, 1, "aUc_D_BFu17i.v2");
    set_bf_and_test(lv, v3, 9, 0, 17, 1, "aUc_D_BFu17i");
    set_bf_and_test(lv, v3, 9, 0, 17, hide_ull(1LL<<16), "aUc_D_BFu17i");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_D_BFu17i, aUc_D_BFu17i)
//============================================================================



static void Test_aUc_D_BFu17ll()
{
  {
    init_simple_test("aUc_D_BFu17ll");
    static STRUCT_IF_C aUc_D_BFu17ll lv;
    check2(sizeof(lv), 12, "sizeof(aUc_D_BFu17ll)");
    check2(__alignof__(lv), 1, "__alignof__(aUc_D_BFu17ll)");
    check_field_offset(lv, v1, 0, "aUc_D_BFu17ll.v1");
    check_field_offset(lv, v2, 1, "aUc_D_BFu17ll.v2");
    set_bf_and_test(lv, v3, 9, 0, 17, 1, "aUc_D_BFu17ll");
    set_bf_and_test(lv, v3, 9, 0, 17, hide_ull(1LL<<16), "aUc_D_BFu17ll");
  }
}
ARRANGE_TO_CALL_ME(Test_aUc_D_BFu17ll, aUc_D_BFu17ll)
//============================================================================

